ccbc86f15cbe AndrewS 2022-01-06

AOS-819: add retry for DP init

during DP init, signal seems not stable at beginning, we will see
connector detect, get edid or link training failed, add delay and
retry in DP connector detect, get edid and link training

Change-Id: Ib208e04f28a91eabe095ca04c939e89886538acc

diff --git a/drivers/gpu/drm/bridge/cadence/cdns-dp-core.c b/drivers/gpu/drm/bridge/cadence/cdns-dp-core.c
index 0f2a38d19a57..d8b96c367e1b 100644
--- a/drivers/gpu/drm/bridge/cadence/cdns-dp-core.c
+++ b/drivers/gpu/drm/bridge/cadence/cdns-dp-core.c
@@ -176,15 +176,22 @@ cdns_dp_connector_detect(struct drm_connector *connector, bool force)
 	struct cdns_mhdp_device *mhdp = container_of(connector,
 					struct cdns_mhdp_device, connector.base);
 	u8 hpd = 0xf;
+	int count = 0;
 
+retry:
 	hpd = cdns_mhdp_read_hpd(mhdp);
 	if (hpd == 1)
 		/* Cable Connected */
 		return connector_status_connected;
-	else if (hpd == 0)
+	else if (hpd == 0) {
+		if ((connector->status == connector_status_connected) && (count < 10)) {
+			msleep(200);
+			count++;
+			goto retry;
+		}
 		/* Cable Disconnedted */
 		return connector_status_disconnected;
-	else {
+	} else {
 		/* Cable status unknown */
 		DRM_INFO("Unknow cable status, hdp=%u
", hpd);
 		return connector_status_unknown;
@@ -197,7 +204,9 @@ static int cdns_dp_connector_get_modes(struct drm_connector *connector)
 					struct cdns_mhdp_device, connector.base);
 	int num_modes = 0;
 	struct edid *edid;
+	int count = 0;
 
+retry:
 	edid = drm_do_get_edid(&mhdp->connector.base,
 				   cdns_mhdp_get_edid_block, mhdp);
 	if (edid) {
@@ -209,6 +218,10 @@ static int cdns_dp_connector_get_modes(struct drm_connector *connector)
 		drm_connector_update_edid_property(connector, edid);
 		num_modes = drm_add_edid_modes(connector, edid);
 		kfree(edid);
+	} else if (count < 20) {
+		msleep(500);
+		count++;
+		goto retry;
 	}
 
 	if (num_modes == 0)
@@ -319,10 +332,17 @@ static void cdn_dp_bridge_enable(struct drm_bridge *bridge)
 {
 	struct cdns_mhdp_device *mhdp = bridge->driver_private;
 	int ret;
+	int count = 0;
 
+retry:
 	/* Link trainning */
 	ret = cdns_mhdp_train_link(mhdp);
 	if (ret) {
+		if (count < 20) {
+			msleep(500);
+			count++;
+			goto retry;
+		}
 		DRM_DEV_ERROR(mhdp->dev, "Failed link train %d
", ret);
 		return;
 	}
