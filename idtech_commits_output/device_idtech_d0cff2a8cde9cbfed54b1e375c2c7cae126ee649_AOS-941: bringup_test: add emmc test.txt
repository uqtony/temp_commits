d0cff2a8 Brian Lee 2022-03-22

AOS-941: bringup_test: add emmc test

Utilize dd command to test emmc

Change-Id: Iee0c0f71228ed3dfc173189c93b7dc4f00ec5878

diff --git a/imx8m/bringup_test.sh b/imx8m/bringup_test.sh
index 9bea746b..45c07678 100644
--- a/imx8m/bringup_test.sh
+++ b/imx8m/bringup_test.sh
@@ -2,10 +2,10 @@
 
 set_log_path() {
   test_idx=0
-  [ ! -z $1 ] && test_idx=$1
-  LOG_TAG="bringup_test"
-  RST_TAG="bringup_result"
-  URT_TAG="bringup_rs232"
+  [ ! -z $2 ] && test_idx=$2
+  LOG_TAG="$1"
+  RST_TAG="${LOG_TAG}_result"
+  URT_TAG="${LOG_TAG}_rs232"
   SN=`getprop ro.serialno`
   LOG_PATH="/data/local/tmp/${SN}_${LOG_TAG}_${test_idx}.txt"
   RST_PATH="/data/local/tmp/${SN}_${RST_TAG}_${test_idx}.txt"
@@ -722,6 +722,7 @@ check_bringup_stage1_func() {
   check_func_eth 0 2          # eth0 / delay 2sec
   check_func_wlan 0 2         # wlan0 / delay 2sec
   check_sdcard 100000 2       # write 100MB / delay 2sec
+  check_emmc 100              # write 100MB
   log_rst "==============================" "======"
 }
 
@@ -797,7 +798,6 @@ check_bringup() {
     check_bringup_stage2_func
     check_bringup_stage3_func
   fi
-  echo -e "









" >> $RST_PATH
 }
 
 check_sdcard() {
@@ -809,7 +809,7 @@ check_sdcard() {
   [ ! -z "$1" ] && test_size="$1"
   test_sec=10
   [ ! -z "$2" ] && test_sec="$2"
-  test_key="func_sdcard_${test_size}"
+  test_key="func_sdcard_${test_size}KB"
   logi "== check_sdcard $test_size KB"
 
   for j in $(seq 0 $test_cnt); do
@@ -838,6 +838,40 @@ check_sdcard() {
   logi ""
 }
 
+check_emmc() {
+  unset_test_array
+
+  test_size=$1
+  [ -z $1 ] && test_size=1024
+  test_key="func_emmc_${test_size}MB"
+  logi "== check_emmc ${test_size} MB"
+
+  SECONDS=0
+
+  tmp_dir=/data/local/tmp
+  output_file=$tmp_dir/output
+
+  logi "$(dd if=/dev/urandom of=${output_file}_1 bs=1M count=$test_size 2>&1)"
+  md5_1=$(md5sum ${output_file}_1 | awk '{print $1}')
+
+  logi "$(dd if=${output_file}_1 of=${output_file}_2 bs=1M 2>&1)"
+  md5_2=$(md5sum ${output_file}_2 | awk '{print $1}')
+
+  logi "===================================="
+  stamp=$(printf "[%02d H :%02d M :%02d S] elapsed
" $(($SECONDS / 3600)) $(($SECONDS / 60)) $(($SECONDS % 60)))
+  logi "${stamp}"
+  logi "===================================="
+
+  if [ "${md5_1}" = "${md5_2}" ]; then
+    log_rst "${test_key}:" "OK"
+  else
+    log_rst "${test_key}:" "FAIL"
+  fi
+
+  rm -f ${output_file}*
+  logi ""
+}
+
 check_idg_version() {
   logi "== check idg version"
   unset_test_array
@@ -1158,7 +1192,7 @@ if [ "$(type $1)" != "$1 is a function" ];then
   exit 1
 fi
 
-set_log_path $2
+set_log_path $1 $2
 
 repeat_times=$(getprop idt.repeat_times)
 if [ ! -z "$repeat_times" ];then
@@ -1180,3 +1214,4 @@ else
   # execute 1 time if 2nd argument not set
   $@
 fi
+echo -e "









" >> $RST_PATH
diff --git a/imx8m/bringup_test_stageall.bat b/imx8m/bringup_test_stageall.bat
index a8f39e86..412392d2 100644
--- a/imx8m/bringup_test_stageall.bat
+++ b/imx8m/bringup_test_stageall.bat
@@ -8,9 +8,19 @@ set script_path=%cd%\%0
 for %%F in (%script_path%) do set base_path=%%~dpF
 cd %base_path%
 
-:: test_idx: 0: all / 1: stage1 / 2: stage2 / 3: k81 / 4: full-load
+:: test_idx: 0: all / 1: stage1 / 2: stage2 / 3: k81 / 4: full-load / check_emmc
 set /A test_idx=0
-if not [%1] == [] set /A test_idx=%1
+set test_func=check_bringup
+set test_str=%1
+echo %test_str%| findstr /r "^[1-9][0-9]*$">nul
+if %errorlevel% equ 0 (
+  set /A test_idx=%1
+) else (
+  if not [%test_str%] == [] (set test_func=%1)
+)
+
+set test_args=%test_func% %test_idx%
+if not [%test_func%] == [check_bringup] set test_args=%test_func%
 
 :: idt.repeat_times
 set /A repeat_time=1
@@ -33,14 +43,13 @@ IF EXIST %base_path%bringup_test.sh (
   %adb_tool% %adb_opt% shell chmod +x %test_script%
 )
 
-%adb_tool% %adb_opt% shell touch /data/local/tmp/%SN%_bringup_result_%test_idx%.txt
-START /B %adb_tool% %adb_opt% shell tail -f /data/local/tmp/%SN%_bringup_result_%test_idx%.txt
-%adb_tool% %adb_opt% shell "%test_script% check_bringup %test_idx% &"
-%adb_tool% %adb_opt% pull /data/local/tmp/%SN%_bringup_test_%test_idx%.txt
-%adb_tool% %adb_opt% pull /data/local/tmp/%SN%_bringup_result_%test_idx%.txt
-%adb_tool% %adb_opt% pull /data/local/tmp/%SN%_bringup_rs232_%test_idx%.txt
-::%adb_tool% %adb_opt% shell tail -n54 /data/local/tmp/%SN%_bringup_result_%test_idx%.txt
+%adb_tool% %adb_opt% shell touch /data/local/tmp/%SN%_%test_func%_result_%test_idx%.txt
+START /B %adb_tool% %adb_opt% shell tail -f /data/local/tmp/%SN%_%test_func%_result_%test_idx%.txt
+%adb_tool% %adb_opt% shell "%test_script% %test_args% &"
+%adb_tool% %adb_opt% pull /data/local/tmp/%SN%_%test_func%_%test_idx%.txt
+%adb_tool% %adb_opt% pull /data/local/tmp/%SN%_%test_func%_result_%test_idx%.txt
 %adb_tool% %adb_opt% reconnect
 %adb_tool% %adb_opt% wait-for-device
 
 PAUSE
+EXIT /B
diff --git a/imx8m/bringup_test_stageall.sh b/imx8m/bringup_test_stageall.sh
index 1dc00333..f440ce1d 100755
--- a/imx8m/bringup_test_stageall.sh
+++ b/imx8m/bringup_test_stageall.sh
@@ -4,9 +4,19 @@ test_script="/product/bin/bringup_test.sh"
 base_path=$(dirname $(pwd $0)/$0)
 cd ${base_path}
 
-# test_idx: 0: all / 1: stage1 / 2: stage2 / 3: k81 / 4: full-load
+# test_idx: 0: all / 1: stage1 / 2: stage2 / 3: k81 / 4: full-load / check_emmc
 test_idx=0
-[ ! -z $1 ] && test_idx=$1
+test_func="check_bringup"
+test_str="${1}"
+re='^[0-9]+$'
+if [[ $test_str =~ $re ]]; then
+  test_idx=$test_str
+elif [ ! -z "${test_str}" ]; then
+  test_func=$test_str
+fi
+
+test_args="${test_func} ${test_idx}"
+[ "${test_func}" != "check_bringup" ] && test_args="${test_func}"
 
 # idt.repeat_times
 repeat_times=1
@@ -31,12 +41,10 @@ if [ -f "${base_path}/bringup_test.sh" ]; then
   adb ${adb_opt} shell chmod +x ${test_script}
 fi
 
-adb ${adb_opt} shell touch /data/local/tmp/${SN}_bringup_result_${test_idx}.txt
-adb ${adb_opt} shell tail -f /data/local/tmp/${SN}_bringup_result_${test_idx}.txt &
-adb ${adb_opt} shell "${test_script} check_bringup ${test_idx} &"
-adb ${adb_opt} pull /data/local/tmp/${SN}_bringup_test_${test_idx}.txt 2>&1 > /dev/null
-adb ${adb_opt} pull /data/local/tmp/${SN}_bringup_result_${test_idx}.txt 2>&1 > /dev/null
-adb ${adb_opt} pull /data/local/tmp/${SN}_bringup_rs232_${test_idx}.txt 2>&1 > /dev/null
-#adb ${adb_opt} shell cat /data/local/tmp/${SN}_bringup_result_${test_idx}.txt
+adb ${adb_opt} shell touch /data/local/tmp/${SN}_${test_func}_result_${test_idx}.txt
+adb ${adb_opt} shell tail -f /data/local/tmp/${SN}_${test_func}_result_${test_idx}.txt &
+adb ${adb_opt} shell "${test_script} ${test_args} &"
+adb ${adb_opt} pull /data/local/tmp/${SN}_${test_func}_${test_idx}.txt 2>&1 > /dev/null
+adb ${adb_opt} pull /data/local/tmp/${SN}_${test_func}_result_${test_idx}.txt 2>&1 > /dev/null
 adb ${adb_opt} reconnect
 adb ${adb_opt} wait-for-device
diff --git a/imx8m/init.idt.bringuptest.rc b/imx8m/init.idt.bringuptest.rc
index 554cc000..62ce34c5 100644
--- a/imx8m/init.idt.bringuptest.rc
+++ b/imx8m/init.idt.bringuptest.rc
@@ -163,5 +163,14 @@ service init_usbhid_sh /vendor/bin/init.usbhid.sh
     disabled
     oneshot
 
+service check_emmc /system/bin/sh /product/bin/bringup_test.sh check_emmc
+    class core
+    oneshot
+    disabled
+    user root
+    group root media_rw
+    seclabel u:r:shell:s0
+    writepid /dev/cpuset/system-background/tasks
+
 on property:ro.build.type=userdebug
     start init_usbhid_sh
