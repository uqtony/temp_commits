f0af6848ea George.Huang 2021-08-03

AOS-683: [post_merge] fix conflicts for aiy_8mq

Change-Id: I1a627aad88600fdef5365385ebb13ad67fd42b8f

diff --git a/board/freescale/imx8mq_phanbell/Kconfig b/board/freescale/imx8mq_phanbell/Kconfig
index 6ead82dcca..2e9761dd96 100644
--- a/board/freescale/imx8mq_phanbell/Kconfig
+++ b/board/freescale/imx8mq_phanbell/Kconfig
@@ -9,4 +9,38 @@ config SYS_VENDOR
 config SYS_CONFIG_NAME
 	default "imx8mq_phanbell"
 
+config IDT_RAM_1GB
+	bool "Enable 1 GB size of system ram setting"
+
+config IDT_RAM_2GB
+        bool "2GB RAM configuration for A300"
+
+config IDT_RAM_4GB
+        bool "4GB RAM configuration for A300"
+
+config IDT_VALID_AVBKEY
+	bool "IDT validate avb key before booting"
+	help
+	  This option should be enable when the vbmeta is signed by
+	  IDT key (This will be done on BoardCOnfig.mk), then u-boot
+	  should validate this key with build-in public key before
+	  booting into kernel.
+
+config IDT_DUAL_SPL
+	bool "IDT dual spl feature"
+	help
+	  This option could be enabled when CONFIG_DUAL_BOOTLOADER
+	  is also enabled. It will help switch to new spl/bootloader
+	  pair even if SRK key set is changed.
+
+config IDT_BACKUP_SPL
+	bool "IDT backup spl feature"
+	help
+	  This option could be enabled when CONFIG_DUAL_BOOTLOADER
+	  is also enabled. It will backup primary spl to offset
+	  0x200000 as secondary spl which will be loaded by Boot_ROM
+	  once if primary spl is corrupted.
+
+source "board/freescale/common/Kconfig"
+
 endif
diff --git a/board/freescale/imx8mq_phanbell/imx8mq_phanbell.c b/board/freescale/imx8mq_phanbell/imx8mq_phanbell.c
index f15f4eb8b4..61ff2f62e6 100644
--- a/board/freescale/imx8mq_phanbell/imx8mq_phanbell.c
+++ b/board/freescale/imx8mq_phanbell/imx8mq_phanbell.c
@@ -11,6 +11,7 @@
 #include <init.h>
 #include <malloc.h>
 #include <errno.h>
+#include <asm/global_data.h>
 #include <asm/io.h>
 #include <miiphy.h>
 #include <netdev.h>
@@ -25,6 +26,7 @@
 #include <asm/mach-imx/mxc_i2c.h>
 #include <asm/arch/clock.h>
 #include <spl.h>
+#include <linux/bitops.h>
 #include <power/pmic.h>
 #include <usb.h>
 #include <dwc3-uboot.h>
@@ -128,15 +130,18 @@ static int setup_fec(void)
 
 int board_phy_config(struct phy_device *phydev)
 {
+	if (phydev->drv->config)
+		phydev->drv->config(phydev);
+
+#ifndef CONFIG_DM_ETH
 	/* enable rgmii rxc skew and phy mode select to RGMII copper */
 	phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x1f);
 	phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, 0x8);
 
 	phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x05);
 	phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, 0x100);
+#endif
 
-	if (phydev->drv->config)
-		phydev->drv->config(phydev);
 	return 0;
 }
 #endif
@@ -297,18 +302,17 @@ int board_late_init(void)
 	return 0;
 }
 
-#ifdef CONFIG_FSL_FASTBOOT
-#ifdef CONFIG_ANDROID_RECOVERY
-int is_recovery_key_pressing(void)
-{
-	return 0; /*TODO*/
-}
-#endif /*CONFIG_ANDROID_RECOVERY*/
-#endif /*CONFIG_FSL_FASTBOOT*/
-
 #ifdef CONFIG_ANDROID_SUPPORT
 bool is_power_key_pressed(void) {
 	return (bool)(!!(readl(SNVS_HPSR) & (0x1 << 6)));
 }
 #endif
 
+#ifdef CONFIG_FSL_FASTBOOT
+#ifdef CONFIG_ANDROID_RECOVERY
+int is_recovery_key_pressing(void)
+{
+	return 0; /* TODO */
+}
+#endif /* CONFIG_ANDROID_RECOVERY */
+#endif /* CONFIG_FSL_FASTBOOT */
diff --git a/board/freescale/imx8mq_phanbell/spl.c b/board/freescale/imx8mq_phanbell/spl.c
index 9948f7e847..f195de37d3 100644
--- a/board/freescale/imx8mq_phanbell/spl.c
+++ b/board/freescale/imx8mq_phanbell/spl.c
@@ -8,6 +8,10 @@
 #include <common.h>
 #include <cpu_func.h>
 #include <hang.h>
+#include <image.h>
+#include <init.h>
+#include <log.h>
+#include <asm/global_data.h>
 #include <asm/io.h>
 #include <errno.h>
 #include <asm/io.h>
@@ -21,6 +25,7 @@
 #include <asm/mach-imx/gpio.h>
 #include <asm/mach-imx/mxc_i2c.h>
 #include <fsl_esdhc_imx.h>
+#include <fsl_sec.h>
 #include <mmc.h>
 #include "board_id.h"
 #include "ddr/ddr.h"
@@ -126,7 +131,7 @@ static struct fsl_esdhc_cfg usdhc_cfg[2] = {
 	{USDHC2_BASE_ADDR, 0, 4},
 };
 
-int board_mmc_init(bd_t *bis)
+int board_mmc_init(struct bd_info *bis)
 {
 	int i, ret;
 	/*
@@ -216,6 +221,11 @@ int power_init_board(void)
 #endif
 void spl_board_init(void)
 {
+#ifdef CONFIG_FSL_CAAM
+	if (sec_init()) {
+		printf("
sec_init failed!
");
+	}
+#endif
 #ifndef CONFIG_SPL_USB_SDP_SUPPORT
 	/* Serial download mode */
 	if (is_usb_boot()) {
@@ -264,7 +274,6 @@ void board_init_f(ulong dummy)
 
 	enable_tzc380();
 
-	/* Adjust pmic voltage to 1.0V for 800M */
 	setup_i2c(0, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info1);
 
 	power_init_board();
@@ -278,12 +287,3 @@ void board_init_f(ulong dummy)
 
 	board_init_r(NULL, 0);
 }
-
-int do_reset(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
-{
-	puts ("resetting ...
");
-
-	reset_cpu(WDOG1_BASE_ADDR);
-
-	return 0;
-}
diff --git a/configs/imx8mq_phanbell_android_defconfig b/configs/imx8mq_phanbell_android_defconfig
index 7eae3e848a..4edb23458d 100644
--- a/configs/imx8mq_phanbell_android_defconfig
+++ b/configs/imx8mq_phanbell_android_defconfig
@@ -1,6 +1,4 @@
 CONFIG_ARM=y
-CONFIG_SPL_SYS_ICACHE_OFF=y
-CONFIG_SPL_SYS_DCACHE_OFF=y
 CONFIG_ARCH_IMX8M=y
 CONFIG_SYS_TEXT_BASE=0x40200000
 CONFIG_SPL_GPIO_SUPPORT=y
@@ -10,9 +8,12 @@ CONFIG_SYS_MALLOC_F_LEN=0x2000
 CONFIG_SYS_I2C_MXC_I2C1=y
 CONFIG_SYS_I2C_MXC_I2C2=y
 CONFIG_SYS_I2C_MXC_I2C3=y
-CONFIG_ENV_SIZE=0x1000
+CONFIG_ENV_SIZE=0x4000
 CONFIG_ENV_OFFSET=0x400000
+CONFIG_SYS_MEMTEST_START=0x40000000
+CONFIG_SYS_MEMTEST_END=0xA0000000
 CONFIG_DM_GPIO=y
+CONFIG_SPL_TEXT_BASE=0x7E1000
 CONFIG_TARGET_IMX8MQ_PHANBELL=y
 CONFIG_ARCH_MISC_INIT=y
 CONFIG_SPL_MMC_SUPPORT=y
@@ -20,7 +21,9 @@ CONFIG_SPL_SERIAL_SUPPORT=y
 CONFIG_SPL_DRIVERS_MISC_SUPPORT=y
 CONFIG_SPL=y
 CONFIG_CSF_SIZE=0x2000
-CONFIG_SPL_TEXT_BASE=0x7E1000
+CONFIG_DEFAULT_DEVICE_TREE="imx8mq-phanbell"
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_BOOTCOMMAND="run distro_bootcmd;run bsp_bootcmd"
 CONFIG_FIT=y
 CONFIG_FIT_EXTERNAL_OFFSET=0x3000
 CONFIG_SPL_LOAD_FIT=y
@@ -54,9 +57,11 @@ CONFIG_CMD_EXT4=y
 CONFIG_CMD_EXT4_WRITE=y
 CONFIG_CMD_FAT=y
 CONFIG_CMD_SF=y
+CONFIG_CMD_USB=y
 CONFIG_OF_CONTROL=y
-CONFIG_DEFAULT_DEVICE_TREE="imx8mq-phanbell"
+CONFIG_ENV_OVERWRITE=y
 CONFIG_ENV_IS_IN_MMC=y
+CONFIG_SYS_MMC_ENV_DEV=1
 CONFIG_SAVED_DRAM_TIMING_BASE=0x40000000
 CONFIG_SYS_RELOC_GD_ENV_ADDR=y
 CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
@@ -95,11 +100,13 @@ CONFIG_DM_REGULATOR=y
 CONFIG_DM_PMIC_BD71837=y
 CONFIG_DM_REGULATOR_FIXED=y
 CONFIG_DM_REGULATOR_GPIO=y
+CONFIG_DM_RESET=y
 CONFIG_MXC_UART=y
 CONFIG_SYSRESET=y
 CONFIG_SYSRESET_PSCI=y
 CONFIG_DM_THERMAL=y
-CONFIG_NXP_TMU=y
+CONFIG_IMX_TMU=y
+CONFIG_USB_STORAGE=y
 CONFIG_USB=y
 CONFIG_DM_USB=y
 CONFIG_USB_GADGET=y
@@ -124,11 +131,15 @@ CONFIG_USB_XHCI_IMX8M=y
 CONFIG_USB_XHCI_DWC3=y
 CONFIG_USB_DWC3=y
 CONFIG_USB_DWC3_GADGET=y
+CONFIG_OF_LIBFDT_OVERLAY=y
 
 CONFIG_VIDEO_IMX8M_DCSS=y
 CONFIG_VIDEO_IMX8M_HDMI=y
 CONFIG_DM_VIDEO=y
 CONFIG_SYS_WHITE_ON_BLACK=y
+CONFIG_SPLASH_SCREEN=y
+CONFIG_SPLASH_SCREEN_ALIGN=y
+CONFIG_CMD_BMP=y
 
 CONFIG_LZ4=y
 CONFIG_FLASH_MCUFIRMWARE_SUPPORT=y
diff --git a/configs/imx8mq_phanbell_android_dual_defconfig b/configs/imx8mq_phanbell_android_dual_defconfig
index 17e59c0cbf..fa2bc1e94c 100644
--- a/configs/imx8mq_phanbell_android_dual_defconfig
+++ b/configs/imx8mq_phanbell_android_dual_defconfig
@@ -1,6 +1,4 @@
 CONFIG_ARM=y
-CONFIG_SPL_SYS_ICACHE_OFF=y
-CONFIG_SPL_SYS_DCACHE_OFF=y
 CONFIG_ARCH_IMX8M=y
 CONFIG_SYS_TEXT_BASE=0x40200000
 CONFIG_SPL_GPIO_SUPPORT=y
@@ -10,9 +8,12 @@ CONFIG_SYS_MALLOC_F_LEN=0x2000
 CONFIG_SYS_I2C_MXC_I2C1=y
 CONFIG_SYS_I2C_MXC_I2C2=y
 CONFIG_SYS_I2C_MXC_I2C3=y
-CONFIG_ENV_SIZE=0x1000
+CONFIG_ENV_SIZE=0x4000
 CONFIG_ENV_OFFSET=0x400000
+CONFIG_SYS_MEMTEST_START=0x40000000
+CONFIG_SYS_MEMTEST_END=0xA0000000
 CONFIG_DM_GPIO=y
+CONFIG_SPL_TEXT_BASE=0x7E1000
 CONFIG_TARGET_IMX8MQ_PHANBELL=y
 CONFIG_ARCH_MISC_INIT=y
 CONFIG_SPL_MMC_SUPPORT=y
@@ -20,7 +21,9 @@ CONFIG_SPL_SERIAL_SUPPORT=y
 CONFIG_SPL_DRIVERS_MISC_SUPPORT=y
 CONFIG_SPL=y
 CONFIG_CSF_SIZE=0x2000
-CONFIG_SPL_TEXT_BASE=0x7E1000
+CONFIG_DEFAULT_DEVICE_TREE="imx8mq-phanbell"
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_BOOTCOMMAND="run distro_bootcmd;run bsp_bootcmd"
 CONFIG_FIT=y
 CONFIG_FIT_EXTERNAL_OFFSET=0x3000
 CONFIG_SPL_LOAD_FIT=y
@@ -54,9 +57,11 @@ CONFIG_CMD_EXT4=y
 CONFIG_CMD_EXT4_WRITE=y
 CONFIG_CMD_FAT=y
 CONFIG_CMD_SF=y
+CONFIG_CMD_USB=y
 CONFIG_OF_CONTROL=y
-CONFIG_DEFAULT_DEVICE_TREE="imx8mq-phanbell"
+CONFIG_ENV_OVERWRITE=y
 CONFIG_ENV_IS_IN_MMC=y
+CONFIG_SYS_MMC_ENV_DEV=1
 CONFIG_SAVED_DRAM_TIMING_BASE=0x40000000
 CONFIG_SYS_RELOC_GD_ENV_ADDR=y
 CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
@@ -95,11 +100,13 @@ CONFIG_DM_REGULATOR=y
 CONFIG_DM_PMIC_BD71837=y
 CONFIG_DM_REGULATOR_FIXED=y
 CONFIG_DM_REGULATOR_GPIO=y
+CONFIG_DM_RESET=y
 CONFIG_MXC_UART=y
 CONFIG_SYSRESET=y
 CONFIG_SYSRESET_PSCI=y
 CONFIG_DM_THERMAL=y
-CONFIG_NXP_TMU=y
+CONFIG_IMX_TMU=y
+CONFIG_USB_STORAGE=y
 CONFIG_USB=y
 CONFIG_DM_USB=y
 CONFIG_USB_GADGET=y
@@ -124,11 +131,15 @@ CONFIG_USB_XHCI_IMX8M=y
 CONFIG_USB_XHCI_DWC3=y
 CONFIG_USB_DWC3=y
 CONFIG_USB_DWC3_GADGET=y
+CONFIG_OF_LIBFDT_OVERLAY=y
 
 CONFIG_VIDEO_IMX8M_DCSS=y
 CONFIG_VIDEO_IMX8M_HDMI=y
 CONFIG_DM_VIDEO=y
 CONFIG_SYS_WHITE_ON_BLACK=y
+CONFIG_SPLASH_SCREEN=y
+CONFIG_SPLASH_SCREEN_ALIGN=y
+CONFIG_CMD_BMP=y
 
 CONFIG_LZ4=y
 CONFIG_FLASH_MCUFIRMWARE_SUPPORT=y
diff --git a/configs/imx8mq_phanbell_android_uuu_defconfig b/configs/imx8mq_phanbell_android_uuu_defconfig
index 4e371c5405..99980f6338 100644
--- a/configs/imx8mq_phanbell_android_uuu_defconfig
+++ b/configs/imx8mq_phanbell_android_uuu_defconfig
@@ -1,6 +1,4 @@
 CONFIG_ARM=y
-CONFIG_SPL_SYS_ICACHE_OFF=y
-CONFIG_SPL_SYS_DCACHE_OFF=y
 CONFIG_ARCH_IMX8M=y
 CONFIG_SYS_TEXT_BASE=0x40200000
 CONFIG_SPL_GPIO_SUPPORT=y
@@ -10,9 +8,12 @@ CONFIG_SYS_MALLOC_F_LEN=0x2000
 CONFIG_SYS_I2C_MXC_I2C1=y
 CONFIG_SYS_I2C_MXC_I2C2=y
 CONFIG_SYS_I2C_MXC_I2C3=y
-CONFIG_ENV_SIZE=0x1000
+CONFIG_ENV_SIZE=0x4000
 CONFIG_ENV_OFFSET=0x400000
+CONFIG_SYS_MEMTEST_START=0x40000000
+CONFIG_SYS_MEMTEST_END=0xA0000000
 CONFIG_DM_GPIO=y
+CONFIG_SPL_TEXT_BASE=0x7E1000
 CONFIG_TARGET_IMX8MQ_PHANBELL=y
 CONFIG_ARCH_MISC_INIT=y
 CONFIG_SPL_MMC_SUPPORT=y
@@ -20,7 +21,9 @@ CONFIG_SPL_SERIAL_SUPPORT=y
 CONFIG_SPL_DRIVERS_MISC_SUPPORT=y
 CONFIG_SPL=y
 CONFIG_CSF_SIZE=0x2000
-CONFIG_SPL_TEXT_BASE=0x7E1000
+CONFIG_DEFAULT_DEVICE_TREE="imx8mq-evk"
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_BOOTCOMMAND="run distro_bootcmd;run bsp_bootcmd"
 CONFIG_FIT=y
 CONFIG_FIT_EXTERNAL_OFFSET=0x3000
 CONFIG_SPL_LOAD_FIT=y
@@ -54,9 +57,11 @@ CONFIG_CMD_EXT4=y
 CONFIG_CMD_EXT4_WRITE=y
 CONFIG_CMD_FAT=y
 CONFIG_CMD_SF=y
+CONFIG_CMD_USB=y
 CONFIG_OF_CONTROL=y
-CONFIG_DEFAULT_DEVICE_TREE="imx8mq-evk"
+CONFIG_ENV_OVERWRITE=y
 CONFIG_ENV_IS_IN_MMC=y
+CONFIG_SYS_MMC_ENV_DEV=1
 CONFIG_SAVED_DRAM_TIMING_BASE=0x40000000
 CONFIG_SYS_RELOC_GD_ENV_ADDR=y
 CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
@@ -95,11 +100,13 @@ CONFIG_DM_REGULATOR=y
 CONFIG_DM_PMIC_BD71837=y
 CONFIG_DM_REGULATOR_FIXED=y
 CONFIG_DM_REGULATOR_GPIO=y
+CONFIG_DM_RESET=y
 CONFIG_MXC_UART=y
 CONFIG_SYSRESET=y
 CONFIG_SYSRESET_PSCI=y
 CONFIG_DM_THERMAL=y
-CONFIG_NXP_TMU=y
+CONFIG_IMX_TMU=y
+CONFIG_USB_STORAGE=y
 CONFIG_USB=y
 CONFIG_DM_USB=y
 CONFIG_USB_GADGET=y
@@ -124,6 +131,15 @@ CONFIG_USB_XHCI_IMX8M=y
 CONFIG_USB_XHCI_DWC3=y
 CONFIG_USB_DWC3=y
 CONFIG_USB_DWC3_GADGET=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+
+CONFIG_VIDEO_IMX8M_DCSS=y
+CONFIG_VIDEO_IMX8M_HDMI=y
+CONFIG_DM_VIDEO=y
+CONFIG_SYS_WHITE_ON_BLACK=y
+CONFIG_SPLASH_SCREEN=y
+CONFIG_SPLASH_SCREEN_ALIGN=y
+CONFIG_CMD_BMP=y
 
 CONFIG_FLASH_MCUFIRMWARE_SUPPORT=y
 CONFIG_ANDROID_SUPPORT=y
diff --git a/include/configs/imx8mq_phanbell.h b/include/configs/imx8mq_phanbell.h
index 66c2c3a8d8..1b16925e35 100644
--- a/include/configs/imx8mq_phanbell.h
+++ b/include/configs/imx8mq_phanbell.h
@@ -7,25 +7,21 @@
 #define __IMX8M_PHANBELL_H
 
 #include <linux/sizes.h>
+#include <linux/stringify.h>
 #include <asm/arch/imx-regs.h>
+#include "imx_env.h"
 
-#define CONFIG_SPL_MAX_SIZE		(172 * 1024)
+#define CONFIG_SYS_BOOTM_LEN		(32 * SZ_1M)
+
+#define CONFIG_SPL_MAX_SIZE		(148 * 1024)
 #define CONFIG_SYS_MONITOR_LEN		(512 * 1024)
 #define CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR
-#define CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR	0x300
+#define CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR	(0x300 + CONFIG_SECONDARY_BOOT_SECTOR_OFFSET)
 
 #ifdef CONFIG_SPL_BUILD
 /*#define CONFIG_ENABLE_DDR_TRAINING_DEBUG*/
-#define CONFIG_SPL_WATCHDOG_SUPPORT
-#define CONFIG_SPL_DRIVERS_MISC_SUPPORT
-#define CONFIG_SPL_POWER_SUPPORT
-#define CONFIG_SPL_I2C_SUPPORT
 #define CONFIG_SPL_LDSCRIPT		"arch/arm/cpu/armv8/u-boot-spl.lds"
 #define CONFIG_SPL_STACK		0x187FF0
-#define CONFIG_SPL_LIBCOMMON_SUPPORT
-#define CONFIG_SPL_LIBGENERIC_SUPPORT
-#define CONFIG_SPL_GPIO_SUPPORT
-#define CONFIG_SPL_MMC_SUPPORT
 #define CONFIG_SPL_BSS_START_ADDR      0x00180000
 #define CONFIG_SPL_BSS_MAX_SIZE        0x2000	/* 8 KB */
 #define CONFIG_SYS_SPL_MALLOC_START    0x42200000
@@ -42,73 +38,96 @@
 #undef CONFIG_DM_PMIC_PFUZE100
 
 #define CONFIG_SYS_I2C
-#define CONFIG_SYS_I2C_MXC_I2C1		/* enable I2C bus 1 */
-#define CONFIG_SYS_I2C_MXC_I2C2		/* enable I2C bus 2 */
-#define CONFIG_SYS_I2C_MXC_I2C3		/* enable I2C bus 3 */
-
-#define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
 
 #define CONFIG_POWER
 #define CONFIG_POWER_I2C
+#define CONFIG_POWER_BD71837
 #endif
 
 #define CONFIG_REMAKE_ELF
 
 /* ENET Config */
 /* ENET1 */
-#if defined(CONFIG_CMD_NET)
-#define CONFIG_MII
+#if defined(CONFIG_FEC_MXC)
 #define CONFIG_ETHPRIME                 "FEC"
+#define PHY_ANEG_TIMEOUT 20000
 
-#define CONFIG_FEC_MXC
 #define CONFIG_FEC_XCV_TYPE             RGMII
 #define CONFIG_FEC_MXC_PHYADDR          0
-#define FEC_QUIRK_ENET_MAC
 
-#define CONFIG_PHY_GIGE
 #define IMX_FEC_BASE			0x30BE0000
+#endif
+
+#ifdef CONFIG_DISTRO_DEFAULTS
+#define BOOT_TARGET_DEVICES(func) \
+	func(USB, usb, 0) \
+	func(MMC, mmc, 1) \
+	func(MMC, mmc, 2)
 
-#define CONFIG_PHYLIB
+#include <config_distro_bootcmd.h>
+#else
+#define BOOTENV
 #endif
 
+/*
+ * Another approach is add the clocks for inmates into clks_init_on
+ * in clk-imx8mq.c, then clk_ingore_unused could be removed.
+ */
+#define JAILHOUSE_ENV \
+	"jh_clk=   " \
+	"jh_mmcboot=setenv fdtfile imx8mq-phanbell.dtb; " \
+		"setenv jh_clk clk_ignore_unused mem=2000M; " \
+			   "if run loadimage; then " \
+				   "run mmcboot; " \
+			   "else run jh_netboot; fi;  " \
+	"jh_netboot=setenv fdtfile imx8mq-phanbell.dtb; setenv jh_clk clk_ignore_unused mem=2000M; run netboot;   "
+
 #define CONFIG_MFG_ENV_SETTINGS \
+	CONFIG_MFG_ENV_SETTINGS_DEFAULT \
 	"initrd_addr=0x43800000 " \
-	"initrd_high=0xffffffff " \
+	"initrd_high=0xffffffffffffffff " \
+	"emmc_dev=0 "\
+	"sd_dev=1 " \
 
 /* Initial environment variables */
 #define CONFIG_EXTRA_ENV_SETTINGS		\
 	CONFIG_MFG_ENV_SETTINGS \
-	"script=boot.scr " \
+	BOOTENV \
+	JAILHOUSE_ENV \
+	"scriptaddr=0x43500000 " \
+	"kernel_addr_r=" __stringify(CONFIG_LOADADDR) " " \
+	"bsp_script=boot.scr " \
 	"image=Image " \
+	"splashimage=0x50000000 " \
 	"console=ttymxc0,115200 " \
+	"fdt_addr_r=0x43000000 "			\
 	"fdt_addr=0x43000000 "			\
 	"fdt_high=0xffffffffffffffff "		\
 	"boot_fdt=try " \
-	"fdt_file=imx8mq-phanbell.dtb " \
-	"initrd_addr=0x43800000 "		\
-	"initrd_high=0xffffffffffffffff " \
+	"fdtfile=imx8mq-phanbell.dtb " \
+	"bootm_size=0x10000000 " \
 	"mmcdev="__stringify(CONFIG_SYS_MMC_ENV_DEV)" " \
 	"mmcpart=" __stringify(CONFIG_SYS_MMC_IMG_LOAD_PART) " " \
 	"mmcroot=" CONFIG_MMCROOT " rootwait rw " \
 	"mmcautodetect=yes " \
-	"mmcargs=setenv bootargs console=${console} root=${mmcroot}  " \
-	"loadbootscript=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script}; " \
+	"mmcargs=setenv bootargs ${jh_clk} console=${console} root=${mmcroot}  " \
+	"loadbootscript=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${bsp_script}; " \
 	"bootscript=echo Running bootscript from mmc ...; " \
 		"source " \
 	"loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image} " \
-	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file} " \
+	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr_r} ${fdtfile} " \
 	"mmcboot=echo Booting from mmc ...; " \
 		"run mmcargs; " \
 		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
 			"if run loadfdt; then " \
-				"booti ${loadaddr} - ${fdt_addr}; " \
+				"booti ${loadaddr} - ${fdt_addr_r}; " \
 			"else " \
 				"echo WARN: Cannot load the DT; " \
 			"fi; " \
 		"else " \
 			"echo wait for boot; " \
 		"fi; " \
-	"netargs=setenv bootargs console=${console} " \
+	"netargs=setenv bootargs ${jh_clk} console=${console} " \
 		"root=/dev/nfs " \
 		"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp " \
 	"netboot=echo Booting from net ...; " \
@@ -120,26 +139,25 @@
 		"fi; " \
 		"${get_cmd} ${loadaddr} ${image}; " \
 		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-			"if ${get_cmd} ${fdt_addr} ${fdt_file}; then " \
-				"booti ${loadaddr} - ${fdt_addr}; " \
+			"if ${get_cmd} ${fdt_addr_r} ${fdtfile}; then " \
+				"booti ${loadaddr} - ${fdt_addr_r}; " \
 			"else " \
 				"echo WARN: Cannot load the DT; " \
 			"fi; " \
 		"else " \
 			"booti; " \
-		"fi; "
-
-#define CONFIG_BOOTCOMMAND \
-	   "mmc dev ${mmcdev}; if mmc rescan; then " \
-		   "if run loadbootscript; then " \
-			   "run bootscript; " \
-		   "else " \
-			   "if run loadimage; then " \
-				   "run mmcboot; " \
-			   "else run netboot; " \
+		"fi; " \
+	"bsp_bootcmd=echo Running BSP bootcmd ...; " \
+			"mmc dev ${mmcdev}; if mmc rescan; then " \
+			   "if run loadbootscript; then " \
+				   "run bootscript; " \
+			   "else " \
+				   "if run loadimage; then " \
+					   "run mmcboot; " \
+				   "else run netboot; " \
+				   "fi; " \
 			   "fi; " \
-		   "fi; " \
-	   "else booti ${loadaddr} - ${fdt_addr}; fi"
+		   "fi;"
 
 /* Link Definitions */
 #define CONFIG_LOADADDR			0x40480000
@@ -158,17 +176,20 @@
 /* Size of malloc() pool */
 #define CONFIG_SYS_MALLOC_LEN		((CONFIG_ENV_SIZE + (2 * 1024)) * 1024)
 
+/* For phanbell these settings are only used internally within u-boot,
+ * so we're setting PHYS_SDRAM_SIZE to 3 GB so that it works on all of our
+ * boards.
+ */
 #define CONFIG_SYS_SDRAM_BASE           0x40000000
 #define PHYS_SDRAM                      0x40000000
-#define PHYS_SDRAM_SIZE			0x40000000 /* 1GB DDR */
-
-#define CONFIG_SYS_MEMTEST_START	PHYS_SDRAM
-#define CONFIG_SYS_MEMTEST_END		(CONFIG_SYS_MEMTEST_START + \
-					(PHYS_SDRAM_SIZE >> 1))
+#define PHYS_SDRAM_SIZE                 0x100000000/* IDT added SDRAM second bank */
+#define PHYS_SDRAM_2                    0x100000000
+#define PHYS_SDRAM_2_SIZE               0x0      /* IDT: init as 0, dynamically assign */
 
 #define CONFIG_MXC_UART_BASE		UART1_BASE_ADDR
 
 /* Monitor Command Prompt */
+#define CONFIG_SYS_PROMPT_HUSH_PS2	"> "
 #define CONFIG_SYS_CBSIZE		1024
 #define CONFIG_SYS_MAXARGS		64
 #define CONFIG_SYS_BARGSIZE		CONFIG_SYS_CBSIZE
@@ -182,15 +203,44 @@
 
 #define CONFIG_SYS_MMC_IMG_LOAD_PART	1
 
-#define CONFIG_MXC_GPIO
-
 /* I2C Configs */
 #define CONFIG_SYS_I2C_SPEED		  100000
 
-#define CONFIG_OF_SYSTEM_SETUP
+/* USB configs */
+#ifndef CONFIG_SPL_BUILD
+
+#define CONFIG_CMD_USB_MASS_STORAGE
+#define CONFIG_USB_GADGET_MASS_STORAGE
+#define CONFIG_USB_FUNCTION_MASS_STORAGE
+
+#define CONFIG_CMD_READ
+
+#endif
+
+#define CONFIG_SERIAL_TAG
+#define CONFIG_FASTBOOT_USB_DEV 0
+
+
+#define CONFIG_USB_MAX_CONTROLLER_COUNT         2
+
+#define CONFIG_USBD_HS
+#define CONFIG_USB_GADGET_VBUS_DRAW 2
 
 #ifndef CONFIG_SPL_BUILD
 #define CONFIG_DM_PMIC
 #endif
 
+#ifdef CONFIG_DM_VIDEO
+#define CONFIG_VIDEO_LOGO
+#define CONFIG_BMP_16BPP
+#define CONFIG_BMP_24BPP
+#define CONFIG_BMP_32BPP
+#define CONFIG_VIDEO_BMP_RLE8
+#define CONFIG_VIDEO_BMP_LOGO
+#endif
+
+#ifdef CONFIG_ANDROID_SUPPORT
+#include "imx8mq_phanbell_android.h"
+#endif
+
 #endif
