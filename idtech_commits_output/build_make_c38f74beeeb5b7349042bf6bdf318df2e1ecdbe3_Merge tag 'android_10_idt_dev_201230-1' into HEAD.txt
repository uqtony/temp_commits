c38f74bee George.Huang 2020-12-31

Merge tag 'android_10_idt_dev_201230-1' into HEAD

android_10_idt_dev_bigcypress_8mq-userdebug-daily_75

Change-Id: I632b232ab20301309a139c2e30380d247435b2fa

diff --cc core/Makefile
index 6c4dd1a11,5d35d9c42..f74a1ab90
--- a/core/Makefile
+++ b/core/Makefile
@@@ -4093,106 -3563,106 +4093,154 @@@ els
  endif
  
  ifeq ($(build_otatools_package),true)
++<<<<<<< HEAD
 +
 +INTERNAL_OTATOOLS_MODULES := \
 +  aapt2 \
 +  add_img_to_target_files \
 +  apksigner \
 +  append2simg \
 +  avbtool \
 +  blk_alloc_to_base_fs \
 +  boot_signer \
 +  brillo_update_payload \
 +  brotli \
 +  bsdiff \
 +  build_image \
 +  build_super_image \
 +  build_verity_metadata \
 +  build_verity_tree \
 +  care_map_generator \
 +  check_ota_package_signature \
 +  check_target_files_signatures \
 +  check_target_files_vintf \
 +  checkvintf \
 +  delta_generator \
 +  e2fsck \
 +  e2fsdroid \
 +  fc_sort \
 +  fec \
 +  fs_config \
 +  generate_verity_key \
 +  img2simg \
 +  img_from_target_files \
 +  imgdiff \
 +  libconscrypt_openjdk_jni \
 +  lpmake \
 +  lpunpack \
 +  lz4 \
 +  make_f2fs \
 +  merge_target_files \
 +  minigzip \
 +  mk_combined_img \
 +  mkbootfs \
 +  mkbootimg \
 +  mke2fs \
 +  mke2fs.conf \
 +  mkf2fsuserimg.sh \
 +  mksquashfs \
 +  mksquashfsimage.sh \
 +  mkuserimg_mke2fs \
 +  ota_from_target_files \
 +  sefcontext_compile \
 +  sgdisk \
 +  shflags \
 +  sign_apex \
 +  sign_target_files_apks \
 +  signapk \
 +  simg2img \
 +  sload_f2fs \
 +  tune2fs \
 +  unpack_bootimg \
 +  update_host_simulator \
 +  validate_target_files \
 +  verity_signer \
 +  verity_verifier \
 +  zipalign \
 +
 +# Additional tools to unpack and repack the apex file.
 +INTERNAL_OTATOOLS_MODULES += \
 +  apexer \
 +  deapexer \
 +  debugfs_static \
 +  merge_zips \
 +  resize2fs \
 +  soong_zip \
++=======
+ OTATOOLS :=  $(HOST_OUT_EXECUTABLES)/minigzip \
+   $(HOST_OUT_EXECUTABLES)/aapt \
+   $(HOST_OUT_EXECUTABLES)/aapt2 \
+   $(HOST_OUT_EXECUTABLES)/checkvintf \
+   $(HOST_OUT_EXECUTABLES)/mkbootfs \
+   $(HOST_OUT_EXECUTABLES)/mkbootimg \
+   $(HOST_OUT_EXECUTABLES)/fs_config \
+   $(HOST_OUT_EXECUTABLES)/zipalign \
+   $(HOST_OUT_EXECUTABLES)/bsdiff \
+   $(HOST_OUT_EXECUTABLES)/imgdiff \
+   $(HOST_OUT_JAVA_LIBRARIES)/signapk.jar \
+   $(HOST_OUT_JAVA_LIBRARIES)/BootSignature.jar \
+   $(HOST_OUT_JAVA_LIBRARIES)/VeritySigner.jar \
+   $(HOST_OUT_EXECUTABLES)/mke2fs \
+   $(HOST_OUT_EXECUTABLES)/mkuserimg_mke2fs \
+   $(HOST_OUT_EXECUTABLES)/e2fsdroid \
+   $(HOST_OUT_EXECUTABLES)/tune2fs \
+   $(HOST_OUT_EXECUTABLES)/mksquashfsimage.sh \
+   $(HOST_OUT_EXECUTABLES)/mksquashfs \
+   $(HOST_OUT_EXECUTABLES)/mkf2fsuserimg.sh \
+   $(HOST_OUT_EXECUTABLES)/make_f2fs \
+   $(HOST_OUT_EXECUTABLES)/sload_f2fs \
+   $(HOST_OUT_EXECUTABLES)/simg2img \
+   $(HOST_OUT_EXECUTABLES)/e2fsck \
+   $(HOST_OUT_EXECUTABLES)/generate_verity_key \
+   $(HOST_OUT_EXECUTABLES)/verity_signer \
+   $(HOST_OUT_EXECUTABLES)/verity_verifier \
+   $(HOST_OUT_EXECUTABLES)/append2simg \
+   $(HOST_OUT_EXECUTABLES)/img2simg \
+   $(HOST_OUT_EXECUTABLES)/boot_signer \
+   $(HOST_OUT_EXECUTABLES)/fec \
+   $(HOST_OUT_EXECUTABLES)/brillo_update_payload \
+   $(HOST_OUT_EXECUTABLES)/lib/shflags/shflags \
+   $(HOST_OUT_EXECUTABLES)/delta_generator \
+   $(HOST_OUT_EXECUTABLES)/care_map_generator \
+   $(HOST_OUT_EXECUTABLES)/fc_sort \
+   $(HOST_OUT_EXECUTABLES)/sefcontext_compile \
+   $(HOST_OUT_EXECUTABLES)/apksigner \
+   $(HOST_OUT_JAVA_LIBRARIES)/apksigner.jar \
+   $(LPMAKE) \
+   $(AVBTOOL) \
+   $(BLK_ALLOC_TO_BASE_FS) \
+   $(BROTLI) \
+   $(BUILD_VERITY_METADATA) \
+   $(BUILD_VERITY_TREE)
++>>>>>>> android_10_idt_dev_201230-1
  
  ifeq (true,$(PRODUCT_SUPPORTS_VBOOT))
 -OTATOOLS += \
 -  $(FUTILITY) \
 -  $(VBOOT_SIGNER)
 -endif
 -
 -# Shared libraries.
 -OTATOOLS += \
 -  $(HOST_LIBRARY_PATH)/libc++$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/liblog$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libcutils$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libselinux$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libcrypto_utils$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libcrypto-host$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libext2fs-host$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libext2_blkid-host$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libext2_com_err-host$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libext2_e2p-host$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libext2_misc$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libext2_profile-host$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libext2_quota-host$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libext2_uuid-host$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libconscrypt_openjdk_jni$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libbrillo$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libbrillo-stream$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libchrome$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libcurl-host$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libevent-host$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libprotobuf-cpp-lite$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libssl-host$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libz-host$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libsparse-host$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libbase$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libpcre2$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libbrotli$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/liblp$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libext4_utils$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libfec$(HOST_SHLIB_SUFFIX) \
 -  $(HOST_LIBRARY_PATH)/libsquashfs_utils$(HOST_SHLIB_SUFFIX)
 +INTERNAL_OTATOOLS_MODULES += \
 +  futility \
 +  vboot_signer
 +endif
  
 +INTERNAL_OTATOOLS_FILES := \
 +  $(filter $(HOST_OUT)/%,$(call module-installed-files,$(INTERNAL_OTATOOLS_MODULES)))
  
  .PHONY: otatools
 -otatools: $(OTATOOLS)
 +otatools: $(INTERNAL_OTATOOLS_FILES)
  
 -BUILT_OTATOOLS_PACKAGE := $(PRODUCT_OUT)/otatools.zip
 -$(BUILT_OTATOOLS_PACKAGE): zip_root := $(call intermediates-dir-for,PACKAGING,otatools)/otatools
 +# For each module, recursively resolve its host shared library dependencies. Then we have a full
 +# list of modules whose installed files need to be packed.
 +INTERNAL_OTATOOLS_MODULES_WITH_DEPS := \
 +  $(sort $(INTERNAL_OTATOOLS_MODULES) \
 +      $(foreach m,$(INTERNAL_OTATOOLS_MODULES),$(call get-all-shared-libs-deps,$(m))))
  
 -OTATOOLS_DEPS := \
 -  system/extras/ext4_utils/mke2fs.conf \
 -  $(sort $(shell find build/target/product/security -type f -name "*.x509.pem" -o -name "*.pk8" -o \
 -      -name verity_key))
 +INTERNAL_OTATOOLS_PACKAGE_FILES := \
 +  $(filter $(HOST_OUT)/%,$(call module-installed-files,$(INTERNAL_OTATOOLS_MODULES_WITH_DEPS)))
 +
 +INTERNAL_OTATOOLS_PACKAGE_FILES += \
 +  $(sort $(shell find build/make/target/product/security -type f -name "*.x509.pem" -o \
 +      -name "*.pk8" -o -name verity_key))
  
  ifneq (,$(wildcard device))
 -OTATOOLS_DEPS += \
 +INTERNAL_OTATOOLS_PACKAGE_FILES += \
    $(sort $(shell find device $(wildcard vendor) -type f -name "*.pk8" -o -name "verifiedboot*" -o \
        -name "*.pem" -o -name "oem*.prop" -o -name "*.avbpubkey"))
  endif
@@@ -4206,23 -3684,22 +4254,33 @@@ INTERNAL_OTATOOLS_PACKAGE_FILES += 
    $(sort $(shell find external/vboot_reference/tests/devkeys -type f))
  endif
  
++<<<<<<< HEAD
 +INTERNAL_OTATOOLS_RELEASETOOLS := \
 +  $(sort $(shell find build/make/tools/releasetools -name "*.pyc" -prune -o \
 +      \( -type f -o -type l \) -print))
 +
 +BUILT_OTATOOLS_PACKAGE := $(PRODUCT_OUT)/otatools.zip
 +$(BUILT_OTATOOLS_PACKAGE): PRIVATE_ZIP_ROOT := $(call intermediates-dir-for,PACKAGING,otatools)/otatools
 +$(BUILT_OTATOOLS_PACKAGE): PRIVATE_OTATOOLS_PACKAGE_FILES := $(INTERNAL_OTATOOLS_PACKAGE_FILES)
 +$(BUILT_OTATOOLS_PACKAGE): PRIVATE_OTATOOLS_RELEASETOOLS := $(INTERNAL_OTATOOLS_RELEASETOOLS)
 +$(BUILT_OTATOOLS_PACKAGE): $(INTERNAL_OTATOOLS_PACKAGE_FILES) $(INTERNAL_OTATOOLS_RELEASETOOLS)
 +$(BUILT_OTATOOLS_PACKAGE): $(SOONG_ZIP) $(ZIP2ZIP)
++=======
+ # IDT added for post signing process with CA
+ # *.der and fake.keystore for apk sign, csf_parser for bootloader sign
+ OTATOOLS_DEPS += \
+   $(sort $(shell find device -type f -name "*.der" -o -name "fake.keystore")) \
+   $(sort $(shell find vendor/idtech/cst -type f -name "*.py" -o -name "csf_parser"))
+ 
+ $(BUILT_OTATOOLS_PACKAGE): $(OTATOOLS) $(OTATOOLS_DEPS) $(OTATOOLS_RELEASETOOLS) $(SOONG_ZIP)
++>>>>>>> android_10_idt_dev_201230-1
  	@echo "Package OTA tools: $@"
 -	$(hide) rm -rf $@ $(zip_root)
 -	$(hide) mkdir -p $(dir $@) $(zip_root)/bin $(zip_root)/framework $(zip_root)/releasetools
 -	$(call copy-files-with-structure,$(OTATOOLS),$(HOST_OUT)/,$(zip_root))
 -	$(hide) cp $(SOONG_ZIP) $(zip_root)/bin/
 -	$(hide) cp -r -d -p build/make/tools/releasetools/* $(zip_root)/releasetools
 -	$(hide) rm -rf $@ $(zip_root)/releasetools/*.pyc
 -	$(hide) $(SOONG_ZIP) -o $@ -C $(zip_root) -D $(zip_root) \
 -	  -C . $(addprefix -f ,$(OTATOOLS_DEPS))
 +	rm -rf $@ $(PRIVATE_ZIP_ROOT)
 +	mkdir -p $(dir $@)
 +	$(call copy-files-with-structure,$(PRIVATE_OTATOOLS_PACKAGE_FILES),$(HOST_OUT)/,$(PRIVATE_ZIP_ROOT))
 +	$(call copy-files-with-structure,$(PRIVATE_OTATOOLS_RELEASETOOLS),build/make/tools/,$(PRIVATE_ZIP_ROOT))
 +	cp $(SOONG_ZIP) $(ZIP2ZIP) $(MERGE_ZIPS) $(PRIVATE_ZIP_ROOT)/bin/
 +	$(SOONG_ZIP) -o $@ -C $(PRIVATE_ZIP_ROOT) -D $(PRIVATE_ZIP_ROOT)
  
  .PHONY: otatools-package
  otatools-package: $(BUILT_OTATOOLS_PACKAGE)
diff --cc target/product/emulator_system.mk
index b7e7cfa19,ff66b3313..5da1f9085
--- a/target/product/emulator_system.mk
+++ b/target/product/emulator_system.mk
@@@ -16,9 -16,6 +16,6 @@@
  # This file lists emulator experimental modules added to PRODUCT_PACKAGES,
  # only included by targets sdk_phone_x86/64 and sdk_gphone_x86/64
  
 -PRODUCT_ARTIFACT_PATH_REQUIREMENT_WHITELIST := \
 +PRODUCT_ARTIFACT_PATH_REQUIREMENT_ALLOWED_LIST := \
      system/lib/libemulator_multidisplay_jni.so \
      system/lib64/libemulator_multidisplay_jni.so \
-     system/priv-app/MultiDisplayProvider/MultiDisplayProvider.apk \
- 
- PRODUCT_PACKAGES += MultiDisplayProvider
diff --cc target/product/mainline_arm64.mk
index 52b322295,5f9ad139a..d3ac9bc78
--- a/target/product/mainline_arm64.mk
+++ b/target/product/mainline_arm64.mk
@@@ -16,13 -16,34 +16,29 @@@
  
  $(call inherit-product, $(SRC_TARGET_DIR)/product/core_64_bit.mk)
  $(call inherit-product, $(SRC_TARGET_DIR)/product/mainline.mk)
 -$(call enforce-product-packages-exist,)
 -
 -PRODUCT_NAME := mainline_arm64
 -PRODUCT_DEVICE := mainline_arm64
 -PRODUCT_BRAND := generic
 -PRODUCT_SHIPPING_API_LEVEL := 28
 -# TODO(b/137033385): change this back to "all"
 -PRODUCT_RESTRICT_VENDOR_FILES := owner
 +whitelist := product_manifest.xml
 +$(call enforce-product-packages-exist,$(whitelist))
  
  PRODUCT_ENFORCE_ARTIFACT_PATH_REQUIREMENTS := relaxed
 -PRODUCT_ARTIFACT_PATH_REQUIREMENT_WHITELIST += \
 -  root/init.zygote64_32.rc \
  
 -# Modules that are to be moved to /product
 +# Modules that should probably be moved to /product
  PRODUCT_ARTIFACT_PATH_REQUIREMENT_WHITELIST += \
++<<<<<<< HEAD
++=======
+   system/app/Browser2/Browser2.apk \
+   system/app/Calendar/Calendar.apk \
+   system/app/Camera2/Camera2.apk \
+   system/app/DeskClock/DeskClock.apk \
+   system/app/DeskClock/oat/arm64/DeskClock.odex \
+   system/app/DeskClock/oat/arm64/DeskClock.vdex \
+   system/app/Gallery2/Gallery2.apk \
+   system/app/LatinIME/LatinIME.apk \
+   system/app/LatinIME/oat/arm64/LatinIME.odex \
+   system/app/LatinIME/oat/arm64/LatinIME.vdex \
+   system/app/Music/Music.apk \
+   system/app/QuickSearchBox/QuickSearchBox.apk \
+   system/app/webview/webview.apk \
++>>>>>>> android_10_idt_dev_201230-1
    system/bin/healthd \
    system/etc/init/healthd.rc \
    system/etc/vintf/manifest/manifest_healthd.xml \
