3619d4d Arthur Chen 2019-12-18

AOS-34: Add IDGdemoapp source for IDG transaction.

Change-Id: I5b8cd347d023d6a76fa99377a10befa914f06ab7

diff --git a/IDGdemoapp/Android.mk b/IDGdemoapp/Android.mk
new file mode 100644
index 0000000..8f01da9
--- /dev/null
+++ b/IDGdemoapp/Android.mk
@@ -0,0 +1,40 @@
+LOCAL_PATH:= $(call my-dir)
+
+include $(CLEAR_VARS)
+
+LOCAL_CERTIFICATE := platform
+
+LOCAL_PACKAGE_NAME := IDGdemoapp
+
+LOCAL_SDK_VERSION := current
+
+
+LOCAL_MODULE_TAGS := optional
+
+LOCAL_SRC_FILES := $(call all-java-files-under, src)
+
+LOCAL_USE_AAPT2 := true
+
+LOCAL_STATIC_JAVA_LIBRARIES := android-common
+
+LOCAL_STATIC_JAVA_LIBRARIES += android-support-v4
+
+LOCAL_STATIC_JAVA_LIBRARIES += android-support-v7-appcompat
+
+LOCAL_STATIC_ANDROID_LIBRARIES := \
+    android-support-compat \
+    android-support-media-compat \
+    android-support-core-utils \
+    android-support-core-ui \
+    android-support-fragment \
+    android-support-v7-palette \
+    android-support-v7-recyclerview \
+    android-support-v13 \
+    colorpicker \
+    libchips \
+    libphotoviewer
+
+include $(BUILD_PACKAGE)
+
+include $(call all-makefiles-under,$(LOCAL_PATH))
+
diff --git a/IDGdemoapp/AndroidManifest.xml b/IDGdemoapp/AndroidManifest.xml
new file mode 100644
index 0000000..232581a
--- /dev/null
+++ b/IDGdemoapp/AndroidManifest.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.idtech.idgdemoapp">
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"></uses-permission>
+    <uses-permission android:name="android.permission.INTERNET"></uses-permission>
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+        <activity android:name=".MainActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+    </application>
+
+</manifest>
diff --git a/IDGdemoapp/res/drawable-v24/ic_launcher_foreground.xml b/IDGdemoapp/res/drawable-v24/ic_launcher_foreground.xml
new file mode 100644
index 0000000..1f6bb29
--- /dev/null
+++ b/IDGdemoapp/res/drawable-v24/ic_launcher_foreground.xml
@@ -0,0 +1,34 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+    <path
+        android:fillType="evenOdd"
+        android:pathData="M32,64C32,64 38.39,52.99 44.13,50.95C51.37,48.37 70.14,49.57 70.14,49.57L108.26,87.69L108,109.01L75.97,107.97L32,64Z"
+        android:strokeWidth="1"
+        android:strokeColor="#00000000">
+        <aapt:attr name="android:fillColor">
+            <gradient
+                android:endX="78.5885"
+                android:endY="90.9159"
+                android:startX="48.7653"
+                android:startY="61.0927"
+                android:type="linear">
+                <item
+                    android:color="#44000000"
+                    android:offset="0.0" />
+                <item
+                    android:color="#00000000"
+                    android:offset="1.0" />
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path
+        android:fillColor="#FFFFFF"
+        android:fillType="nonZero"
+        android:pathData="M66.94,46.02L66.94,46.02C72.44,50.07 76,56.61 76,64L32,64C32,56.61 35.56,50.11 40.98,46.06L36.18,41.19C35.45,40.45 35.45,39.3 36.18,38.56C36.91,37.81 38.05,37.81 38.78,38.56L44.25,44.05C47.18,42.57 50.48,41.71 54,41.71C57.48,41.71 60.78,42.57 63.68,44.05L69.11,38.56C69.84,37.81 70.98,37.81 71.71,38.56C72.44,39.3 72.44,40.45 71.71,41.19L66.94,46.02ZM62.94,56.92C64.08,56.92 65,56.01 65,54.88C65,53.76 64.08,52.85 62.94,52.85C61.8,52.85 60.88,53.76 60.88,54.88C60.88,56.01 61.8,56.92 62.94,56.92ZM45.06,56.92C46.2,56.92 47.13,56.01 47.13,54.88C47.13,53.76 46.2,52.85 45.06,52.85C43.92,52.85 43,53.76 43,54.88C43,56.01 43.92,56.92 45.06,56.92Z"
+        android:strokeWidth="1"
+        android:strokeColor="#00000000" />
+</vector>
diff --git a/IDGdemoapp/res/drawable/ic_launcher_background.xml b/IDGdemoapp/res/drawable/ic_launcher_background.xml
new file mode 100644
index 0000000..0d025f9
--- /dev/null
+++ b/IDGdemoapp/res/drawable/ic_launcher_background.xml
@@ -0,0 +1,170 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+    <path
+        android:fillColor="#008577"
+        android:pathData="M0,0h108v108h-108z" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M9,0L9,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,0L19,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,0L29,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,0L39,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,0L49,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,0L59,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,0L69,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,0L79,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M89,0L89,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M99,0L99,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,9L108,9"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,19L108,19"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,29L108,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,39L108,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,49L108,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,59L108,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,69L108,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,79L108,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,89L108,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,99L108,99"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,29L89,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,39L89,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,49L89,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,59L89,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,69L89,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,79L89,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,19L29,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,19L39,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,19L49,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,19L59,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,19L69,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,19L79,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+</vector>
diff --git a/IDGdemoapp/res/layout/main_activity.xml b/IDGdemoapp/res/layout/main_activity.xml
new file mode 100644
index 0000000..0a52052
--- /dev/null
+++ b/IDGdemoapp/res/layout/main_activity.xml
@@ -0,0 +1,76 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".MainActivity" >
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="horizontal">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="vertical">
+
+            <Button
+                android:id="@+id/but1"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:textSize="60dp"
+                android:textStyle="bold|italic"
+                android:layout_alignBottom="@+id/textView1"
+                android:layout_alignParentRight="true"
+                android:text="Start" />
+
+            <TextView
+                android:id="@+id/textView2"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_weight="3"
+                android:textSize="60dp"
+                android:textStyle="bold"
+                android:layout_alignLeft="@+id/textView1"
+                android:layout_below="@+id/textView1"
+                android:text="Not Connect" />
+
+            <TextView
+                android:id="@+id/textView1"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_weight="3"
+                android:textStyle="bold"
+                android:textSize="60dp"
+                android:layout_alignParentLeft="true"
+                android:layout_alignParentTop="true"
+                android:text="IP" />
+
+            <EditText
+                android:id="@+id/edit1"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:digits="0123456789ABCDEFabcdef"
+                android:inputType="textNoSuggestions"
+                android:textSize="60dp"
+                android:textStyle="bold|italic"
+                android:layout_alignBottom="@+id/textView1"
+                android:layout_alignParentRight="true"
+                android:hint="IDG VERSION (29000000)" />
+
+            <Button
+                android:id="@+id/but2"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:textSize="60dp"
+                android:textStyle="bold|italic"
+                android:layout_alignBottom="@+id/edit1"
+                android:layout_alignParentRight="true"
+                android:text="IDG Command Send" />
+        </LinearLayout>
+    </LinearLayout>
+
+</RelativeLayout>
diff --git a/IDGdemoapp/res/mipmap-anydpi-v26/ic_launcher.xml b/IDGdemoapp/res/mipmap-anydpi-v26/ic_launcher.xml
new file mode 100644
index 0000000..eca70cf
--- /dev/null
+++ b/IDGdemoapp/res/mipmap-anydpi-v26/ic_launcher.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@drawable/ic_launcher_background" />
+    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+</adaptive-icon>
\ No newline at end of file
diff --git a/IDGdemoapp/res/mipmap-anydpi-v26/ic_launcher_round.xml b/IDGdemoapp/res/mipmap-anydpi-v26/ic_launcher_round.xml
new file mode 100644
index 0000000..eca70cf
--- /dev/null
+++ b/IDGdemoapp/res/mipmap-anydpi-v26/ic_launcher_round.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@drawable/ic_launcher_background" />
+    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+</adaptive-icon>
\ No newline at end of file
diff --git a/IDGdemoapp/res/mipmap-hdpi/ic_launcher.png b/IDGdemoapp/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 0000000..898f3ed
Binary files /dev/null and b/IDGdemoapp/res/mipmap-hdpi/ic_launcher.png differ
diff --git a/IDGdemoapp/res/mipmap-hdpi/ic_launcher_round.png b/IDGdemoapp/res/mipmap-hdpi/ic_launcher_round.png
new file mode 100644
index 0000000..dffca36
Binary files /dev/null and b/IDGdemoapp/res/mipmap-hdpi/ic_launcher_round.png differ
diff --git a/IDGdemoapp/res/mipmap-mdpi/ic_launcher.png b/IDGdemoapp/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 0000000..64ba76f
Binary files /dev/null and b/IDGdemoapp/res/mipmap-mdpi/ic_launcher.png differ
diff --git a/IDGdemoapp/res/mipmap-mdpi/ic_launcher_round.png b/IDGdemoapp/res/mipmap-mdpi/ic_launcher_round.png
new file mode 100644
index 0000000..dae5e08
Binary files /dev/null and b/IDGdemoapp/res/mipmap-mdpi/ic_launcher_round.png differ
diff --git a/IDGdemoapp/res/mipmap-xhdpi/ic_launcher.png b/IDGdemoapp/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 0000000..e5ed465
Binary files /dev/null and b/IDGdemoapp/res/mipmap-xhdpi/ic_launcher.png differ
diff --git a/IDGdemoapp/res/mipmap-xhdpi/ic_launcher_round.png b/IDGdemoapp/res/mipmap-xhdpi/ic_launcher_round.png
new file mode 100644
index 0000000..14ed0af
Binary files /dev/null and b/IDGdemoapp/res/mipmap-xhdpi/ic_launcher_round.png differ
diff --git a/IDGdemoapp/res/mipmap-xxhdpi/ic_launcher.png b/IDGdemoapp/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 0000000..b0907ca
Binary files /dev/null and b/IDGdemoapp/res/mipmap-xxhdpi/ic_launcher.png differ
diff --git a/IDGdemoapp/res/mipmap-xxhdpi/ic_launcher_round.png b/IDGdemoapp/res/mipmap-xxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000..d8ae031
Binary files /dev/null and b/IDGdemoapp/res/mipmap-xxhdpi/ic_launcher_round.png differ
diff --git a/IDGdemoapp/res/mipmap-xxxhdpi/ic_launcher.png b/IDGdemoapp/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 0000000..2c18de9
Binary files /dev/null and b/IDGdemoapp/res/mipmap-xxxhdpi/ic_launcher.png differ
diff --git a/IDGdemoapp/res/mipmap-xxxhdpi/ic_launcher_round.png b/IDGdemoapp/res/mipmap-xxxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000..beed3cd
Binary files /dev/null and b/IDGdemoapp/res/mipmap-xxxhdpi/ic_launcher_round.png differ
diff --git a/IDGdemoapp/res/values/colors.xml b/IDGdemoapp/res/values/colors.xml
new file mode 100644
index 0000000..69b2233
--- /dev/null
+++ b/IDGdemoapp/res/values/colors.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#008577</color>
+    <color name="colorPrimaryDark">#00574B</color>
+    <color name="colorAccent">#D81B60</color>
+</resources>
diff --git a/IDGdemoapp/res/values/strings.xml b/IDGdemoapp/res/values/strings.xml
new file mode 100644
index 0000000..f45eb9f
--- /dev/null
+++ b/IDGdemoapp/res/values/strings.xml
@@ -0,0 +1,3 @@
+<resources>
+    <string name="app_name">IDGdemoapp</string>
+</resources>
diff --git a/IDGdemoapp/res/values/styles.xml b/IDGdemoapp/res/values/styles.xml
new file mode 100644
index 0000000..5885930
--- /dev/null
+++ b/IDGdemoapp/res/values/styles.xml
@@ -0,0 +1,11 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+</resources>
diff --git a/IDGdemoapp/src/com/idtech/idgdemoapp/MainActivity.java b/IDGdemoapp/src/com/idtech/idgdemoapp/MainActivity.java
new file mode 100644
index 0000000..4ad80a7
--- /dev/null
+++ b/IDGdemoapp/src/com/idtech/idgdemoapp/MainActivity.java
@@ -0,0 +1,271 @@
+package com.idtech.idgdemoapp;
+
+import android.app.Activity;
+
+import android.os.Bundle;
+
+import android.os.Handler;
+import android.os.Message;
+import android.os.StrictMode;
+import android.util.Log;
+import android.view.View;
+import android.view.Window;
+import android.widget.Button;
+import android.widget.TextView;
+import android.widget.EditText;
+import android.widget.Toast;
+import android.annotation.SuppressLint;
+
+import java.io.BufferedReader;
+import java.io.BufferedWriter;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.io.OutputStreamWriter;
+import java.io.PrintWriter;
+import java.net.InetAddress;
+import java.net.NetworkInterface;
+import java.net.ServerSocket;
+import java.net.Socket;
+import java.net.SocketException;
+import java.util.ArrayList;
+import java.util.Enumeration;
+import java.util.List;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+
+public class MainActivity extends Activity {
+
+    private static final int PORT = 8080;
+    private static final int IDGservport = 281;
+    private static final String Localhost = "127.0.0.1";
+    private List<Socket> mList = new ArrayList<Socket>();
+    private volatile ServerSocket server=null;
+    private ExecutorService mExecutorService = null;
+    private String hostip;
+    private TextView mText1;
+    private TextView mText2;
+    private EditText mEdit1;
+    private Button mBut1 = null;
+    private Button mBut2 = null;
+    private Handler myHandler = null;
+    private volatile boolean flag = true;
+    private Handler handler = new Handler();
+    String s ;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.main_activity);
+
+        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
+        StrictMode.setThreadPolicy(policy);
+
+        hostip = getLocalIpAddress();
+
+        mText1 = (TextView) findViewById(R.id.textView1);
+        mText1.setText(hostip);
+        mText1.setEnabled(false);
+
+        mText2 = (TextView) findViewById(R.id.textView2);
+
+        mBut1 = (Button) findViewById(R.id.but1);
+        mBut1.setOnClickListener(new Button1ClickListener());
+
+        mBut2 = (Button) findViewById(R.id.but2);
+        mBut2.setOnClickListener(new Button2ClickListener());
+
+        mEdit1 = (EditText) findViewById(R.id.edit1);
+
+        myHandler = new Handler() {
+            @SuppressLint("HandlerLeak")
+            public void handleMessage(Message msg){
+                if(msg.what == 0x1234){
+                    mText2.append("
" + msg.obj.toString());
+                }
+            }
+        };
+    }
+
+    private final class Button1ClickListener implements View.OnClickListener{
+        @Override
+        public void onClick(View v) {
+            // TODO Auto-generated method stub
+            if (mBut1.getText().toString().equals("Start")) {
+                ServerThread serverThread = new ServerThread();
+                flag = true;
+                serverThread.start();
+                mBut1.setText("Stop");
+                mText1.setText(getLocalIpAddress());
+                /* show IP address */
+                Toast toast = Toast.makeText(MainActivity.this, "IP address: "+getLocalIpAddress(), Toast.LENGTH_LONG);
+                toast.show();
+            } else {
+                try {
+                    flag = false;
+                    server.close();
+                    for (int p = 0; p < mList.size(); p++) {
+                        Socket s = mList.get(p);
+                        s.close();
+                    }
+                    mExecutorService.shutdownNow();
+                    mBut1.setText("Start");
+                    mText1.setText("Not Connect");
+                    Log.v("Socket-status","Service have been closed");
+                } catch (IOException e) {
+                    // TODO Auto-generated catch block
+                    e.printStackTrace();
+                }
+            }
+        }
+    }
+
+    private final class Button2ClickListener implements View.OnClickListener{
+        @Override
+        public void onClick(View v) {
+            // TODO Auto-generated method stub
+            Socket clientSocket;
+            BufferedWriter bw;
+            String input = mEdit1.getText().toString();
+                try {
+
+                    InetAddress serverIp = InetAddress.getByName(Localhost);
+                    clientSocket = new Socket(serverIp, IDGservport);
+
+                    Log.v("socket","Socket created");
+                    bw = new BufferedWriter(new OutputStreamWriter(clientSocket.getOutputStream()));
+
+                    Log.v("socket","Socket output created");
+                    while (clientSocket.isConnected()) {
+                        bw.write(input);
+                        bw.flush();
+                        bw.close();
+                    }
+                } catch (Exception e) {
+                    e.printStackTrace();
+                    Log.e("text", "Socket connection = " + e.toString());
+                }
+        }
+    }
+
+    class ServerThread extends Thread {
+        public void run() {
+            try {
+                server = new ServerSocket(PORT);
+            } catch (IOException e1) {
+                e1.printStackTrace();
+            }
+            mExecutorService = Executors.newCachedThreadPool();
+            Socket client = null;
+            while(flag) {
+                try {
+                    Log.v("test", String.valueOf(flag));
+                    client = server.accept();
+                    handler.post(new Runnable() {
+                        public void run() {
+                            mText1.setText("Connected.");
+                        }
+                    });
+                    try {
+                        handler.post(new Runnable() {
+                            public void run() {
+                                mText2.setText(s);
+                            }
+                        });
+                    } catch (Exception e) {
+                        handler.post(new Runnable() {
+                            public void run() {
+                                mText2.setText(s);
+                            }
+                        });
+                    }
+
+                    mList.add(client);
+                    mExecutorService.execute(new Service(client));
+                } catch ( IOException e) {
+                    e.printStackTrace();
+                    handler.post(new Runnable() {
+                        public void run() {
+                            mText2.setText("Disconnceted");
+                        }
+                    });
+                }
+            }
+        }
+    }
+
+    @SuppressLint("LongLogTag")
+    public static String getLocalIpAddress() {
+        try {
+            for (Enumeration<NetworkInterface> en = NetworkInterface
+                    .getNetworkInterfaces(); en.hasMoreElements();) {
+                NetworkInterface intf = en.nextElement();
+                for (Enumeration<InetAddress> enumIpAddr = intf
+                        .getInetAddresses(); enumIpAddr.hasMoreElements();) {
+                    InetAddress inetAddress = enumIpAddr.nextElement();
+                    if (!inetAddress.isLoopbackAddress() && !inetAddress.isLinkLocalAddress()) {
+                        return inetAddress.getHostAddress().toString();
+                    }
+                }
+            }
+        } catch (SocketException ex) {
+            Log.e("WifiPreference IpAddress", ex.toString());
+        }
+        return null;
+    }
+
+    class Service implements Runnable {
+        private volatile boolean kk = true;
+        private Socket socket;
+        private BufferedReader in = null;
+        private String msg = "";
+
+        public Service(Socket socket) {
+            this.socket = socket;
+            try {
+                in = new BufferedReader(new InputStreamReader(socket.getInputStream(), "UTF-8"));
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+
+        public void run() {
+            while (kk) {
+                try {
+                    if ((msg = in.readLine())!= null) {
+                        if (msg.equals("exit")) {
+                            mList.remove(socket);
+                            break;
+                        } else {
+                            Message msgLocal = new Message();
+                            msgLocal.what = 0x1234;
+                            msgLocal.obj = msg+" （From IDG serv）" ;
+
+                            System.out.println(msgLocal.obj.toString());
+                            System.out.println(msg);
+                            myHandler.sendMessage(msgLocal);
+                            msg = socket.getInetAddress() + ":" + msg+"（From IDG serv）";
+                            this.sendmsg(msg);
+                        }
+                    }
+                } catch (IOException e) {
+                    System.out.println("close");
+                    kk = false;
+                    // TODO Auto-generated catch block
+                    e.printStackTrace();
+                }
+            }
+        }
+
+        public void sendmsg(String msg) {
+            System.out.println(msg);
+            PrintWriter pout = null;
+            try {
+                pout = new PrintWriter(new BufferedWriter(
+                        new OutputStreamWriter(socket.getOutputStream())), true);
+                pout.println(msg);
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+}
