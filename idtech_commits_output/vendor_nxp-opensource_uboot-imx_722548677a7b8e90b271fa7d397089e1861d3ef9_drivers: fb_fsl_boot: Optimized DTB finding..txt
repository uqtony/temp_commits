722548677a Arthur Chen 2020-06-24

drivers: fb_fsl_boot: Optimized DTB finding.

    - add logic to reference the result about parsing display timing to
    save the processing time about finding DTB in DTBO.
    - add logic check ID of board-info is existed or not.

Change-Id: Ice4f236cca37c1b200be9ec6fb8bf1d24127ecf7

diff --git a/drivers/fastboot/fb_fsl/fb_fsl_boot.c b/drivers/fastboot/fb_fsl/fb_fsl_boot.c
index f607d6ba6e..af7bf1358f 100644
--- a/drivers/fastboot/fb_fsl/fb_fsl_boot.c
+++ b/drivers/fastboot/fb_fsl/fb_fsl_boot.c
@@ -649,6 +649,7 @@ int do_boota(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[]) {
 	AvbABFlowResult avb_result;
 	AvbSlotVerifyData *avb_out_data = NULL;
 	AvbPartitionData *avb_loadpart = NULL;
+	char *env_value;
 
 	if (!is_bdinfo_som_set()) {
 		goto fail;
@@ -900,12 +901,23 @@ int do_boota(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[]) {
 
 		printf(" %d DTB(s) in DTBO
", fdt32_to_cpu(dt_img->
 							    dt_entry_count));
-		entry_idx = find_dtb_in_dtbo(dt_img);
-		if (entry_idx < 1) {
-			puts("boota: no avaliable dtb
");
+		env_value = env_get("idt,prod-id");
+		if (env_value == NULL) {
+			puts("boota: no IDTECH product ID in board_info
");
 			retry_boot = true;
 			goto fail;
 		}
+		env_value = env_get("entry_idx");
+		if (env_value != NULL) {
+			entry_idx = (int)simple_strtol(env_value, NULL, 10);
+		} else {
+			entry_idx = find_dtb_in_dtbo(dt_img);
+			if (entry_idx < 1) {
+				puts("boota: no avaliable dtb
");
+				retry_boot = true;
+				goto fail;
+			}
+		}
 		dt_entry = (struct dt_table_entry *)
 			   ((ulong)dt_img +
 			    fdt32_to_cpu(dt_img->dt_entries_offset) *
