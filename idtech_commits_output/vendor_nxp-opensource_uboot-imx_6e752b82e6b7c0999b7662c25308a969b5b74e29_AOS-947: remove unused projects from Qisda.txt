6e752b82e6 George.Huang 2022-04-15

AOS-947: remove unused projects from Qisda

- remove below paths
  board/freescale/imx8mq_a100/
  board/freescale/imx8mq_a200/
  board/freescale/imx8mq_a300/
  include/configs/imx8mn_a100.h
  include/configs/imx8mn_a100_android.h
  include/configs/imx8mp_a200.h
  include/configs/imx8mp_a200_android.h
  include/configs/imx8mq_a300.h
  include/configs/imx8mq_a300_android.h

Change-Id: I76192082ee336bb8f221c06b686fb8aab054fde3

diff --git a/arch/arm/mach-imx/imx8m/Kconfig b/arch/arm/mach-imx/imx8m/Kconfig
index 0f9435c88a..bdc9618cad 100644
--- a/arch/arm/mach-imx/imx8m/Kconfig
+++ b/arch/arm/mach-imx/imx8m/Kconfig
@@ -81,12 +81,6 @@ config TARGET_IMX8MQ_DDR4_VAL
 	select IMX8MQ
 	select IMX8M_DDR4
 
-config TARGET_IMX8MQ_A300
-	bool "imx8mq_a300"
-	select IMX8MQ
-	select SUPPORT_SPL
-	select IMX8M_LPDDR4
-
 config TARGET_IMX8MQ_PHANBELL
 	bool "imx8mq_phanbell"
 	select IMX8MQ
@@ -182,12 +176,6 @@ config TARGET_PICO_IMX8MQ
 	select IMX8MQ
 	select IMX8M_LPDDR4
 
-config TARGET_IMX8MP_A200
-	bool "imx8mp_a200"
-	select IMX8MP
-	select SUPPORT_SPL
-	select IMX8M_LPDDR4
-
 config TARGET_IMX8MP_DDR4_EVK
 	bool "imx8mp DDR4 EVK board"
 	select IMX8MP
@@ -260,12 +248,6 @@ config TARGET_IMX8MM_BEACON
 	select SUPPORT_SPL
 	select IMX8M_LPDDR4
 
-config TARGET_IMX8MN_A100
-	bool "imx8mn_a100"
-	select IMX8MN
-	select SUPPORT_SPL
-	select IMX8M_LPDDR4
-
 config TARGET_IMX8MN_BEACON
 	bool "imx8mn Beacon Embedded devkit"
 	select IMX8MN
@@ -287,15 +269,12 @@ endchoice
 
 source "board/freescale/imx8mq_evk/Kconfig"
 source "board/freescale/imx8mq_val/Kconfig"
-source "board/freescale/imx8mq_a300/Kconfig"
 source "board/freescale/imx8mq_phanbell/Kconfig"
 source "board/freescale/imx8mm_ab2/Kconfig"
 source "board/freescale/imx8mm_evk/Kconfig"
 source "board/freescale/imx8mm_val/Kconfig"
 source "board/freescale/imx8mn_evk/Kconfig"
-source "board/freescale/imx8mn_a100/Kconfig"
 source "board/freescale/imx8mp_evk/Kconfig"
-source "board/freescale/imx8mp_a200/Kconfig"
 source "board/gateworks/venice/Kconfig"
 source "board/technexion/pico-imx8mq/Kconfig"
 source "board/toradex/verdin-imx8mm/Kconfig"
diff --git a/board/freescale/imx8mn_a100/Kconfig b/board/freescale/imx8mn_a100/Kconfig
deleted file mode 100644
index 548e3e62f7..0000000000
--- a/board/freescale/imx8mn_a100/Kconfig
+++ /dev/null
@@ -1,36 +0,0 @@
-if TARGET_IMX8MN_A100
-
-config SYS_BOARD
-	default "imx8mn_a100"
-
-config SYS_VENDOR
-	default "freescale"
-
-config SYS_CONFIG_NAME
-	default "imx8mn_a100"
-
-config IDT_DUAL_SPL
-	bool "IDT dual spl feature"
-	help
-	  This option could be enabled when CONFIG_DUAL_BOOTLOADER
-	  is also enabled. It will help switch to new spl/bootloader
-	  pair even if SRK key set is changed.
-
-config IDT_BACKUP_SPL
-	bool "IDT backup spl feature"
-	help
-	  This option could be enabled when CONFIG_DUAL_BOOTLOADER
-	  is also enabled. It will backup primary spl to offset
-	  0x200000 as secondary spl which will be loaded by Boot_ROM
-	  once if primary spl is corrupted.
-
-config IDT_RAM_1GB
-	bool "1GB RAM configuration for A100"
-
-config IMX8MN_LOW_DRIVE_MODE
-	bool "Enable the low drive mode of iMX8MN on EVK board"
-	default n
-
-source "board/freescale/common/Kconfig"
-
-endif
diff --git a/board/freescale/imx8mn_a100/Makefile b/board/freescale/imx8mn_a100/Makefile
deleted file mode 100644
index 53c663c370..0000000000
--- a/board/freescale/imx8mn_a100/Makefile
+++ /dev/null
@@ -1,23 +0,0 @@
-#
-# Copyright 2018 NXP
-#
-# SPDX-License-Identifier:      GPL-2.0+
-#
-
-obj-y += imx8mn_a100.o
-
-ifdef CONFIG_SPL_BUILD
-obj-y += spl.o
-ifdef CONFIG_IMX8MN_LOW_DRIVE_MODE
-obj-$(CONFIG_IMX8M_LPDDR4) += lpddr4_timing_ld.o
-obj-$(CONFIG_IMX8M_DDR4) += ddr4_timing_ld.o
-else
-ifdef CONFIG_IDT_RAM_1GB
-obj-$(CONFIG_IMX8M_LPDDR4) += lpddr4_timing_1g.o
-else
-obj-$(CONFIG_IMX8M_LPDDR4) += lpddr4_timing.o
-endif
-obj-$(CONFIG_IMX8M_DDR4) += ddr4_timing.o
-obj-$(CONFIG_IMX8M_DDR3L) += ddr3l_timing.o
-endif
-endif
diff --git a/board/freescale/imx8mn_a100/ddr4_timing.c b/board/freescale/imx8mn_a100/ddr4_timing.c
deleted file mode 100644
index 84114a3e8a..0000000000
--- a/board/freescale/imx8mn_a100/ddr4_timing.c
+++ /dev/null
@@ -1,1057 +0,0 @@
-/*
- * Copyright 2019 NXP
- *
- * SPDX-License-Identifier:	GPL-2.0+
- *
- * Generated code from MX8M_DDR_tool
- * Align with uboot version:
- * imx_v2018.03_4.14.78_1.0.0_ga ~ imx_v2018.04_4.19.35_1.0.0_ga
- */
-
-#include <linux/kernel.h>
-#include <asm/arch/ddr.h>
-
-struct dram_cfg_param ddr_ddrc_cfg[] = {
-	/** Initialize DDRC registers **/
-	{ 0x3d400000, 0x81040010 },
-	{ 0x3d400030, 0x20 },
-	{ 0x3d400034, 0x221306 },
-	{ 0x3d400050, 0x210070 },
-	{ 0x3d400054, 0x10008 },
-	{ 0x3d400060, 0x0 },
-	{ 0x3d400064, 0x92014a },
-	{ 0x3d4000c0, 0x0 },
-	{ 0x3d4000c4, 0x1000 },
-	{ 0x3d4000d0, 0xc0030126 },
-	{ 0x3d4000d4, 0x770000 },
-	{ 0x3d4000dc, 0x8340105 },
-	{ 0x3d4000e0, 0x180200 },
-	{ 0x3d4000e4, 0x110000 },
-	{ 0x3d4000e8, 0x2000600 },
-	{ 0x3d4000ec, 0x810 },
-	{ 0x3d4000f0, 0x20 },
-	{ 0x3d4000f4, 0xec7 },
-	{ 0x3d400100, 0x11122914 },
-	{ 0x3d400104, 0x4051c },
-	{ 0x3d400108, 0x608050d },
-	{ 0x3d40010c, 0x400c },
-	{ 0x3d400110, 0x8030409 },
-	{ 0x3d400114, 0x6060403 },
-	{ 0x3d40011c, 0x606 },
-	{ 0x3d400120, 0x7070d0c },
-	{ 0x3d400124, 0x2040a },
-	{ 0x3d40012c, 0x1809010e },
-	{ 0x3d400130, 0x8 },
-	{ 0x3d40013c, 0x0 },
-	{ 0x3d400180, 0x1000040 },
-	{ 0x3d400184, 0x493e },
-	{ 0x3d400190, 0x38b8207 },
-	{ 0x3d400194, 0x2020303 },
-	{ 0x3d400198, 0x7f04011 },
-	{ 0x3d40019c, 0xb0 },
-	{ 0x3d4001a0, 0xe0400018 },
-	{ 0x3d4001a4, 0x48005a },
-	{ 0x3d4001a8, 0x80000000 },
-	{ 0x3d4001b0, 0x1 },
-	{ 0x3d4001b4, 0xb07 },
-	{ 0x3d4001b8, 0x4 },
-	{ 0x3d4001c0, 0x1 },
-	{ 0x3d4001c4, 0x0 },
-	{ 0x3d400200, 0x3f1f },
-	{ 0x3d400204, 0x3f0909 },
-	{ 0x3d400208, 0x700 },
-	{ 0x3d40020c, 0x0 },
-	{ 0x3d400210, 0x1f1f },
-	{ 0x3d400214, 0x7070707 },
-	{ 0x3d400218, 0x7070707 },
-	{ 0x3d40021c, 0xf07 },
-	{ 0x3d400220, 0x3f01 },
-	{ 0x3d400240, 0x6000610 },
-	{ 0x3d400244, 0x1323 },
-	{ 0x3d400400, 0x100 },
-
-	/* performance setting */
-	{ 0x3d400250, 0x00001f05 },
-	{ 0x3d400254, 0x1f },
-	{ 0x3d400264, 0x900003ff },
-	{ 0x3d40026c, 0x200003ff },
-	{ 0x3d400494, 0x01000e00 },
-	{ 0x3d400498, 0x03ff0000 },
-	{ 0x3d40049c, 0x01000e00 },
-	{ 0x3d4004a0, 0x03ff0000 },
-
-	{ 0x3d402050, 0x210070 },
-	{ 0x3d402064, 0x400093 },
-	{ 0x3d4020dc, 0x105 },
-	{ 0x3d4020e0, 0x0 },
-	{ 0x3d4020e8, 0x2000600 },
-	{ 0x3d4020ec, 0x10 },
-	{ 0x3d402100, 0xb081209 },
-	{ 0x3d402104, 0x2020d },
-	{ 0x3d402108, 0x5050309 },
-	{ 0x3d40210c, 0x400c },
-	{ 0x3d402110, 0x5030206 },
-	{ 0x3d402114, 0x3030202 },
-	{ 0x3d40211c, 0x303 },
-	{ 0x3d402120, 0x4040d06 },
-	{ 0x3d402124, 0x20208 },
-	{ 0x3d40212c, 0x1205010e },
-	{ 0x3d402130, 0x8 },
-	{ 0x3d40213c, 0x0 },
-	{ 0x3d402180, 0x1000040 },
-	{ 0x3d402190, 0x3848204 },
-	{ 0x3d402194, 0x2020303 },
-	{ 0x3d4021b4, 0x404 },
-	{ 0x3d4021b8, 0x4 },
-	{ 0x3d402240, 0x6000600 },
-	{ 0x3d4020f4, 0xec7 },
-};
-
-/* PHY Initialize Configuration */
-struct dram_cfg_param ddr_ddrphy_cfg[] = {
-	{ 0x1005f, 0x2fd },
-	{ 0x1015f, 0x2fd },
-	{ 0x1105f, 0x2fd },
-	{ 0x1115f, 0x2fd },
-	{ 0x11005f, 0x2fd },
-	{ 0x11015f, 0x2fd },
-	{ 0x11105f, 0x2fd },
-	{ 0x11115f, 0x2fd },
-	{ 0x55, 0x355 },
-	{ 0x1055, 0x355 },
-	{ 0x2055, 0x355 },
-	{ 0x3055, 0x355 },
-	{ 0x4055, 0x55 },
-	{ 0x5055, 0x55 },
-	{ 0x6055, 0x355 },
-	{ 0x7055, 0x355 },
-	{ 0x8055, 0x355 },
-	{ 0x9055, 0x355 },
-	{ 0x200c5, 0xa },
-	{ 0x1200c5, 0x6 },
-	{ 0x2002e, 0x2 },
-	{ 0x12002e, 0x1 },
-	{ 0x20024, 0x8 },
-	{ 0x2003a, 0x2 },
-	{ 0x120024, 0x8 },
-	{ 0x2003a, 0x2 },
-	{ 0x20056, 0x6 },
-	{ 0x120056, 0xa },
-	{ 0x1004d, 0x1a },
-	{ 0x1014d, 0x1a },
-	{ 0x1104d, 0x1a },
-	{ 0x1114d, 0x1a },
-	{ 0x11004d, 0x1a },
-	{ 0x11014d, 0x1a },
-	{ 0x11104d, 0x1a },
-	{ 0x11114d, 0x1a },
-	{ 0x10049, 0xe38 },
-	{ 0x10149, 0xe38 },
-	{ 0x11049, 0xe38 },
-	{ 0x11149, 0xe38 },
-	{ 0x110049, 0xe38 },
-	{ 0x110149, 0xe38 },
-	{ 0x111049, 0xe38 },
-	{ 0x111149, 0xe38 },
-	{ 0x43, 0x63 },
-	{ 0x1043, 0x63 },
-	{ 0x2043, 0x63 },
-	{ 0x3043, 0x63 },
-	{ 0x4043, 0x63 },
-	{ 0x5043, 0x63 },
-	{ 0x6043, 0x63 },
-	{ 0x7043, 0x63 },
-	{ 0x8043, 0x63 },
-	{ 0x9043, 0x63 },
-	{ 0x20018, 0x1 },
-	{ 0x20075, 0x2 },
-	{ 0x20050, 0x0 },
-	{ 0x20008, 0x258 },
-	{ 0x120008, 0x10a },
-	{ 0x20088, 0x9 },
-	{ 0x200b2, 0x268 },
-	{ 0x10043, 0x5b1 },
-	{ 0x10143, 0x5b1 },
-	{ 0x11043, 0x5b1 },
-	{ 0x11143, 0x5b1 },
-	{ 0x1200b2, 0x268 },
-	{ 0x110043, 0x5b1 },
-	{ 0x110143, 0x5b1 },
-	{ 0x111043, 0x5b1 },
-	{ 0x111143, 0x5b1 },
-	{ 0x200fa, 0x1 },
-	{ 0x1200fa, 0x1 },
-	{ 0x20019, 0x5 },
-	{ 0x120019, 0x5 },
-	{ 0x200f0, 0x5555 },
-	{ 0x200f1, 0x5555 },
-	{ 0x200f2, 0x5555 },
-	{ 0x200f3, 0x5555 },
-	{ 0x200f4, 0x5555 },
-	{ 0x200f5, 0x5555 },
-	{ 0x200f6, 0x5555 },
-	{ 0x200f7, 0xf000 },
-	{ 0x20025, 0x0 },
-	{ 0x2002d, 0x0 },
-	{ 0x12002d, 0x0 },
-	{ 0x2005b, 0x7529 },
-	{ 0x2005c, 0x0 },
-	{ 0x200c7, 0x21 },
-	{ 0x200ca, 0x24 },
-	{ 0x200cc, 0x1f7 },
-	{ 0x1200c7, 0x21 },
-	{ 0x1200ca, 0x24 },
-	{ 0x1200cc, 0x1f7 },
-	{ 0x2007d, 0x212 },
-	{ 0x12007d, 0x212 },
-	{ 0x2007c, 0x61 },
-	{ 0x12007c, 0x61 },
-	{ 0x1004a, 0x500 },
-	{ 0x1104a, 0x500 },
-	{ 0x2002c, 0x0 },
-};
-
-/* ddr phy trained csr */
-struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
-	{0x0200b2, 0x0},
-	{0x1200b2, 0x0},
-	{0x2200b2, 0x0},
-	{0x0200cb, 0x0},
-	{0x010043, 0x0},
-	{0x110043, 0x0},
-	{0x210043, 0x0},
-	{0x010143, 0x0},
-	{0x110143, 0x0},
-	{0x210143, 0x0},
-	{0x011043, 0x0},
-	{0x111043, 0x0},
-	{0x211043, 0x0},
-	{0x011143, 0x0},
-	{0x111143, 0x0},
-	{0x211143, 0x0},
-	{0x000080, 0x0},
-	{0x100080, 0x0},
-	{0x200080, 0x0},
-	{0x001080, 0x0},
-	{0x101080, 0x0},
-	{0x201080, 0x0},
-	{0x002080, 0x0},
-	{0x102080, 0x0},
-	{0x202080, 0x0},
-	{0x003080, 0x0},
-	{0x103080, 0x0},
-	{0x203080, 0x0},
-	{0x004080, 0x0},
-	{0x104080, 0x0},
-	{0x204080, 0x0},
-	{0x005080, 0x0},
-	{0x105080, 0x0},
-	{0x205080, 0x0},
-	{0x006080, 0x0},
-	{0x106080, 0x0},
-	{0x206080, 0x0},
-	{0x007080, 0x0},
-	{0x107080, 0x0},
-	{0x207080, 0x0},
-	{0x008080, 0x0},
-	{0x108080, 0x0},
-	{0x208080, 0x0},
-	{0x009080, 0x0},
-	{0x109080, 0x0},
-	{0x209080, 0x0},
-	{0x010080, 0x0},
-	{0x110080, 0x0},
-	{0x210080, 0x0},
-	{0x010180, 0x0},
-	{0x110180, 0x0},
-	{0x210180, 0x0},
-	{0x010081, 0x0},
-	{0x110081, 0x0},
-	{0x210081, 0x0},
-	{0x010181, 0x0},
-	{0x110181, 0x0},
-	{0x210181, 0x0},
-	{0x010082, 0x0},
-	{0x110082, 0x0},
-	{0x210082, 0x0},
-	{0x010182, 0x0},
-	{0x110182, 0x0},
-	{0x210182, 0x0},
-	{0x010083, 0x0},
-	{0x110083, 0x0},
-	{0x210083, 0x0},
-	{0x010183, 0x0},
-	{0x110183, 0x0},
-	{0x210183, 0x0},
-	{0x011080, 0x0},
-	{0x111080, 0x0},
-	{0x211080, 0x0},
-	{0x011180, 0x0},
-	{0x111180, 0x0},
-	{0x211180, 0x0},
-	{0x011081, 0x0},
-	{0x111081, 0x0},
-	{0x211081, 0x0},
-	{0x011181, 0x0},
-	{0x111181, 0x0},
-	{0x211181, 0x0},
-	{0x011082, 0x0},
-	{0x111082, 0x0},
-	{0x211082, 0x0},
-	{0x011182, 0x0},
-	{0x111182, 0x0},
-	{0x211182, 0x0},
-	{0x011083, 0x0},
-	{0x111083, 0x0},
-	{0x211083, 0x0},
-	{0x011183, 0x0},
-	{0x111183, 0x0},
-	{0x211183, 0x0},
-	{0x0100d0, 0x0},
-	{0x1100d0, 0x0},
-	{0x2100d0, 0x0},
-	{0x0101d0, 0x0},
-	{0x1101d0, 0x0},
-	{0x2101d0, 0x0},
-	{0x0100d1, 0x0},
-	{0x1100d1, 0x0},
-	{0x2100d1, 0x0},
-	{0x0101d1, 0x0},
-	{0x1101d1, 0x0},
-	{0x2101d1, 0x0},
-	{0x0100d2, 0x0},
-	{0x1100d2, 0x0},
-	{0x2100d2, 0x0},
-	{0x0101d2, 0x0},
-	{0x1101d2, 0x0},
-	{0x2101d2, 0x0},
-	{0x0100d3, 0x0},
-	{0x1100d3, 0x0},
-	{0x2100d3, 0x0},
-	{0x0101d3, 0x0},
-	{0x1101d3, 0x0},
-	{0x2101d3, 0x0},
-	{0x0110d0, 0x0},
-	{0x1110d0, 0x0},
-	{0x2110d0, 0x0},
-	{0x0111d0, 0x0},
-	{0x1111d0, 0x0},
-	{0x2111d0, 0x0},
-	{0x0110d1, 0x0},
-	{0x1110d1, 0x0},
-	{0x2110d1, 0x0},
-	{0x0111d1, 0x0},
-	{0x1111d1, 0x0},
-	{0x2111d1, 0x0},
-	{0x0110d2, 0x0},
-	{0x1110d2, 0x0},
-	{0x2110d2, 0x0},
-	{0x0111d2, 0x0},
-	{0x1111d2, 0x0},
-	{0x2111d2, 0x0},
-	{0x0110d3, 0x0},
-	{0x1110d3, 0x0},
-	{0x2110d3, 0x0},
-	{0x0111d3, 0x0},
-	{0x1111d3, 0x0},
-	{0x2111d3, 0x0},
-	{0x010068, 0x0},
-	{0x010168, 0x0},
-	{0x010268, 0x0},
-	{0x010368, 0x0},
-	{0x010468, 0x0},
-	{0x010568, 0x0},
-	{0x010668, 0x0},
-	{0x010768, 0x0},
-	{0x010868, 0x0},
-	{0x010069, 0x0},
-	{0x010169, 0x0},
-	{0x010269, 0x0},
-	{0x010369, 0x0},
-	{0x010469, 0x0},
-	{0x010569, 0x0},
-	{0x010669, 0x0},
-	{0x010769, 0x0},
-	{0x010869, 0x0},
-	{0x01006a, 0x0},
-	{0x01016a, 0x0},
-	{0x01026a, 0x0},
-	{0x01036a, 0x0},
-	{0x01046a, 0x0},
-	{0x01056a, 0x0},
-	{0x01066a, 0x0},
-	{0x01076a, 0x0},
-	{0x01086a, 0x0},
-	{0x01006b, 0x0},
-	{0x01016b, 0x0},
-	{0x01026b, 0x0},
-	{0x01036b, 0x0},
-	{0x01046b, 0x0},
-	{0x01056b, 0x0},
-	{0x01066b, 0x0},
-	{0x01076b, 0x0},
-	{0x01086b, 0x0},
-	{0x011068, 0x0},
-	{0x011168, 0x0},
-	{0x011268, 0x0},
-	{0x011368, 0x0},
-	{0x011468, 0x0},
-	{0x011568, 0x0},
-	{0x011668, 0x0},
-	{0x011768, 0x0},
-	{0x011868, 0x0},
-	{0x011069, 0x0},
-	{0x011169, 0x0},
-	{0x011269, 0x0},
-	{0x011369, 0x0},
-	{0x011469, 0x0},
-	{0x011569, 0x0},
-	{0x011669, 0x0},
-	{0x011769, 0x0},
-	{0x011869, 0x0},
-	{0x01106a, 0x0},
-	{0x01116a, 0x0},
-	{0x01126a, 0x0},
-	{0x01136a, 0x0},
-	{0x01146a, 0x0},
-	{0x01156a, 0x0},
-	{0x01166a, 0x0},
-	{0x01176a, 0x0},
-	{0x01186a, 0x0},
-	{0x01106b, 0x0},
-	{0x01116b, 0x0},
-	{0x01126b, 0x0},
-	{0x01136b, 0x0},
-	{0x01146b, 0x0},
-	{0x01156b, 0x0},
-	{0x01166b, 0x0},
-	{0x01176b, 0x0},
-	{0x01186b, 0x0},
-	{0x01008c, 0x0},
-	{0x11008c, 0x0},
-	{0x21008c, 0x0},
-	{0x01018c, 0x0},
-	{0x11018c, 0x0},
-	{0x21018c, 0x0},
-	{0x01008d, 0x0},
-	{0x11008d, 0x0},
-	{0x21008d, 0x0},
-	{0x01018d, 0x0},
-	{0x11018d, 0x0},
-	{0x21018d, 0x0},
-	{0x01008e, 0x0},
-	{0x11008e, 0x0},
-	{0x21008e, 0x0},
-	{0x01018e, 0x0},
-	{0x11018e, 0x0},
-	{0x21018e, 0x0},
-	{0x01008f, 0x0},
-	{0x11008f, 0x0},
-	{0x21008f, 0x0},
-	{0x01018f, 0x0},
-	{0x11018f, 0x0},
-	{0x21018f, 0x0},
-	{0x01108c, 0x0},
-	{0x11108c, 0x0},
-	{0x21108c, 0x0},
-	{0x01118c, 0x0},
-	{0x11118c, 0x0},
-	{0x21118c, 0x0},
-	{0x01108d, 0x0},
-	{0x11108d, 0x0},
-	{0x21108d, 0x0},
-	{0x01118d, 0x0},
-	{0x11118d, 0x0},
-	{0x21118d, 0x0},
-	{0x01108e, 0x0},
-	{0x11108e, 0x0},
-	{0x21108e, 0x0},
-	{0x01118e, 0x0},
-	{0x11118e, 0x0},
-	{0x21118e, 0x0},
-	{0x01108f, 0x0},
-	{0x11108f, 0x0},
-	{0x21108f, 0x0},
-	{0x01118f, 0x0},
-	{0x11118f, 0x0},
-	{0x21118f, 0x0},
-	{0x0100c0, 0x0},
-	{0x1100c0, 0x0},
-	{0x2100c0, 0x0},
-	{0x0101c0, 0x0},
-	{0x1101c0, 0x0},
-	{0x2101c0, 0x0},
-	{0x0102c0, 0x0},
-	{0x1102c0, 0x0},
-	{0x2102c0, 0x0},
-	{0x0103c0, 0x0},
-	{0x1103c0, 0x0},
-	{0x2103c0, 0x0},
-	{0x0104c0, 0x0},
-	{0x1104c0, 0x0},
-	{0x2104c0, 0x0},
-	{0x0105c0, 0x0},
-	{0x1105c0, 0x0},
-	{0x2105c0, 0x0},
-	{0x0106c0, 0x0},
-	{0x1106c0, 0x0},
-	{0x2106c0, 0x0},
-	{0x0107c0, 0x0},
-	{0x1107c0, 0x0},
-	{0x2107c0, 0x0},
-	{0x0108c0, 0x0},
-	{0x1108c0, 0x0},
-	{0x2108c0, 0x0},
-	{0x0100c1, 0x0},
-	{0x1100c1, 0x0},
-	{0x2100c1, 0x0},
-	{0x0101c1, 0x0},
-	{0x1101c1, 0x0},
-	{0x2101c1, 0x0},
-	{0x0102c1, 0x0},
-	{0x1102c1, 0x0},
-	{0x2102c1, 0x0},
-	{0x0103c1, 0x0},
-	{0x1103c1, 0x0},
-	{0x2103c1, 0x0},
-	{0x0104c1, 0x0},
-	{0x1104c1, 0x0},
-	{0x2104c1, 0x0},
-	{0x0105c1, 0x0},
-	{0x1105c1, 0x0},
-	{0x2105c1, 0x0},
-	{0x0106c1, 0x0},
-	{0x1106c1, 0x0},
-	{0x2106c1, 0x0},
-	{0x0107c1, 0x0},
-	{0x1107c1, 0x0},
-	{0x2107c1, 0x0},
-	{0x0108c1, 0x0},
-	{0x1108c1, 0x0},
-	{0x2108c1, 0x0},
-	{0x0100c2, 0x0},
-	{0x1100c2, 0x0},
-	{0x2100c2, 0x0},
-	{0x0101c2, 0x0},
-	{0x1101c2, 0x0},
-	{0x2101c2, 0x0},
-	{0x0102c2, 0x0},
-	{0x1102c2, 0x0},
-	{0x2102c2, 0x0},
-	{0x0103c2, 0x0},
-	{0x1103c2, 0x0},
-	{0x2103c2, 0x0},
-	{0x0104c2, 0x0},
-	{0x1104c2, 0x0},
-	{0x2104c2, 0x0},
-	{0x0105c2, 0x0},
-	{0x1105c2, 0x0},
-	{0x2105c2, 0x0},
-	{0x0106c2, 0x0},
-	{0x1106c2, 0x0},
-	{0x2106c2, 0x0},
-	{0x0107c2, 0x0},
-	{0x1107c2, 0x0},
-	{0x2107c2, 0x0},
-	{0x0108c2, 0x0},
-	{0x1108c2, 0x0},
-	{0x2108c2, 0x0},
-	{0x0100c3, 0x0},
-	{0x1100c3, 0x0},
-	{0x2100c3, 0x0},
-	{0x0101c3, 0x0},
-	{0x1101c3, 0x0},
-	{0x2101c3, 0x0},
-	{0x0102c3, 0x0},
-	{0x1102c3, 0x0},
-	{0x2102c3, 0x0},
-	{0x0103c3, 0x0},
-	{0x1103c3, 0x0},
-	{0x2103c3, 0x0},
-	{0x0104c3, 0x0},
-	{0x1104c3, 0x0},
-	{0x2104c3, 0x0},
-	{0x0105c3, 0x0},
-	{0x1105c3, 0x0},
-	{0x2105c3, 0x0},
-	{0x0106c3, 0x0},
-	{0x1106c3, 0x0},
-	{0x2106c3, 0x0},
-	{0x0107c3, 0x0},
-	{0x1107c3, 0x0},
-	{0x2107c3, 0x0},
-	{0x0108c3, 0x0},
-	{0x1108c3, 0x0},
-	{0x2108c3, 0x0},
-	{0x0110c0, 0x0},
-	{0x1110c0, 0x0},
-	{0x2110c0, 0x0},
-	{0x0111c0, 0x0},
-	{0x1111c0, 0x0},
-	{0x2111c0, 0x0},
-	{0x0112c0, 0x0},
-	{0x1112c0, 0x0},
-	{0x2112c0, 0x0},
-	{0x0113c0, 0x0},
-	{0x1113c0, 0x0},
-	{0x2113c0, 0x0},
-	{0x0114c0, 0x0},
-	{0x1114c0, 0x0},
-	{0x2114c0, 0x0},
-	{0x0115c0, 0x0},
-	{0x1115c0, 0x0},
-	{0x2115c0, 0x0},
-	{0x0116c0, 0x0},
-	{0x1116c0, 0x0},
-	{0x2116c0, 0x0},
-	{0x0117c0, 0x0},
-	{0x1117c0, 0x0},
-	{0x2117c0, 0x0},
-	{0x0118c0, 0x0},
-	{0x1118c0, 0x0},
-	{0x2118c0, 0x0},
-	{0x0110c1, 0x0},
-	{0x1110c1, 0x0},
-	{0x2110c1, 0x0},
-	{0x0111c1, 0x0},
-	{0x1111c1, 0x0},
-	{0x2111c1, 0x0},
-	{0x0112c1, 0x0},
-	{0x1112c1, 0x0},
-	{0x2112c1, 0x0},
-	{0x0113c1, 0x0},
-	{0x1113c1, 0x0},
-	{0x2113c1, 0x0},
-	{0x0114c1, 0x0},
-	{0x1114c1, 0x0},
-	{0x2114c1, 0x0},
-	{0x0115c1, 0x0},
-	{0x1115c1, 0x0},
-	{0x2115c1, 0x0},
-	{0x0116c1, 0x0},
-	{0x1116c1, 0x0},
-	{0x2116c1, 0x0},
-	{0x0117c1, 0x0},
-	{0x1117c1, 0x0},
-	{0x2117c1, 0x0},
-	{0x0118c1, 0x0},
-	{0x1118c1, 0x0},
-	{0x2118c1, 0x0},
-	{0x0110c2, 0x0},
-	{0x1110c2, 0x0},
-	{0x2110c2, 0x0},
-	{0x0111c2, 0x0},
-	{0x1111c2, 0x0},
-	{0x2111c2, 0x0},
-	{0x0112c2, 0x0},
-	{0x1112c2, 0x0},
-	{0x2112c2, 0x0},
-	{0x0113c2, 0x0},
-	{0x1113c2, 0x0},
-	{0x2113c2, 0x0},
-	{0x0114c2, 0x0},
-	{0x1114c2, 0x0},
-	{0x2114c2, 0x0},
-	{0x0115c2, 0x0},
-	{0x1115c2, 0x0},
-	{0x2115c2, 0x0},
-	{0x0116c2, 0x0},
-	{0x1116c2, 0x0},
-	{0x2116c2, 0x0},
-	{0x0117c2, 0x0},
-	{0x1117c2, 0x0},
-	{0x2117c2, 0x0},
-	{0x0118c2, 0x0},
-	{0x1118c2, 0x0},
-	{0x2118c2, 0x0},
-	{0x0110c3, 0x0},
-	{0x1110c3, 0x0},
-	{0x2110c3, 0x0},
-	{0x0111c3, 0x0},
-	{0x1111c3, 0x0},
-	{0x2111c3, 0x0},
-	{0x0112c3, 0x0},
-	{0x1112c3, 0x0},
-	{0x2112c3, 0x0},
-	{0x0113c3, 0x0},
-	{0x1113c3, 0x0},
-	{0x2113c3, 0x0},
-	{0x0114c3, 0x0},
-	{0x1114c3, 0x0},
-	{0x2114c3, 0x0},
-	{0x0115c3, 0x0},
-	{0x1115c3, 0x0},
-	{0x2115c3, 0x0},
-	{0x0116c3, 0x0},
-	{0x1116c3, 0x0},
-	{0x2116c3, 0x0},
-	{0x0117c3, 0x0},
-	{0x1117c3, 0x0},
-	{0x2117c3, 0x0},
-	{0x0118c3, 0x0},
-	{0x1118c3, 0x0},
-	{0x2118c3, 0x0},
-	{0x010020, 0x0},
-	{0x110020, 0x0},
-	{0x210020, 0x0},
-	{0x011020, 0x0},
-	{0x111020, 0x0},
-	{0x211020, 0x0},
-	{0x02007d, 0x0},
-	{0x12007d, 0x0},
-	{0x22007d, 0x0},
-	{0x010040, 0x0},
-	{0x010140, 0x0},
-	{0x010240, 0x0},
-	{0x010340, 0x0},
-	{0x010440, 0x0},
-	{0x010540, 0x0},
-	{0x010640, 0x0},
-	{0x010740, 0x0},
-	{0x010840, 0x0},
-	{0x010030, 0x0},
-	{0x010130, 0x0},
-	{0x010230, 0x0},
-	{0x010330, 0x0},
-	{0x010430, 0x0},
-	{0x010530, 0x0},
-	{0x010630, 0x0},
-	{0x010730, 0x0},
-	{0x010830, 0x0},
-	{0x011040, 0x0},
-	{0x011140, 0x0},
-	{0x011240, 0x0},
-	{0x011340, 0x0},
-	{0x011440, 0x0},
-	{0x011540, 0x0},
-	{0x011640, 0x0},
-	{0x011740, 0x0},
-	{0x011840, 0x0},
-	{0x011030, 0x0},
-	{0x011130, 0x0},
-	{0x011230, 0x0},
-	{0x011330, 0x0},
-	{0x011430, 0x0},
-	{0x011530, 0x0},
-	{0x011630, 0x0},
-	{0x011730, 0x0},
-	{0x011830, 0x0},
-};
-
-/* P0 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54003, 0x960 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2830 },
-	{ 0x54006, 0x25e },
-	{ 0x54007, 0x1000 },
-	{ 0x54008, 0x101 },
-	{ 0x5400b, 0x31f },
-	{ 0x5400c, 0xc8 },
-	{ 0x5400d, 0x100 },
-	{ 0x54012, 0x1 },
-	{ 0x5402f, 0x834 },
-	{ 0x54030, 0x105 },
-	{ 0x54031, 0x18 },
-	{ 0x54032, 0x200 },
-	{ 0x54033, 0x200 },
-	{ 0x54034, 0x600 },
-	{ 0x54035, 0x810 },
-	{ 0x54036, 0x101 },
-	{ 0x5403f, 0x1221 },
-	{ 0x541fc, 0x100 },
-	{ 0xd0000, 0x1 },
-};
-
-
-/* P1 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp1_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54002, 0x1 },
-	{ 0x54003, 0x42a },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2830 },
-	{ 0x54006, 0x25e },
-	{ 0x54007, 0x1000 },
-	{ 0x54008, 0x101 },
-	{ 0x5400b, 0x21f },
-	{ 0x5400c, 0xc8 },
-	{ 0x5400d, 0x100 },
-	{ 0x54012, 0x1 },
-	{ 0x54030, 0x105 },
-	{ 0x54033, 0x200 },
-	{ 0x54034, 0x600 },
-	{ 0x54035, 0x10 },
-	{ 0x54036, 0x101 },
-	{ 0x5403f, 0x1221 },
-	{ 0x541fc, 0x100 },
-	{ 0xd0000, 0x1 },
-};
-
-
-/* P0 2D message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54003, 0x960 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2830 },
-	{ 0x54006, 0x25e },
-	{ 0x54007, 0x1000 },
-	{ 0x54008, 0x101 },
-	{ 0x5400b, 0x61 },
-	{ 0x5400c, 0xc8 },
-	{ 0x5400d, 0x100 },
-	{ 0x5400e, 0x1f7f },
-	{ 0x54012, 0x1 },
-	{ 0x5402f, 0x834 },
-	{ 0x54030, 0x105 },
-	{ 0x54031, 0x18 },
-	{ 0x54032, 0x200 },
-	{ 0x54033, 0x200 },
-	{ 0x54034, 0x600 },
-	{ 0x54035, 0x810 },
-	{ 0x54036, 0x101 },
-	{ 0x5403f, 0x1221 },
-	{ 0x541fc, 0x100 },
-	{ 0xd0000, 0x1 },
-};
-
-/* DRAM PHY init engine image */
-struct dram_cfg_param ddr_phy_pie[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x90000, 0x10 },
-	{ 0x90001, 0x400 },
-	{ 0x90002, 0x10e },
-	{ 0x90003, 0x0 },
-	{ 0x90004, 0x0 },
-	{ 0x90005, 0x8 },
-	{ 0x90029, 0xb },
-	{ 0x9002a, 0x480 },
-	{ 0x9002b, 0x109 },
-	{ 0x9002c, 0x8 },
-	{ 0x9002d, 0x448 },
-	{ 0x9002e, 0x139 },
-	{ 0x9002f, 0x8 },
-	{ 0x90030, 0x478 },
-	{ 0x90031, 0x109 },
-	{ 0x90032, 0x2 },
-	{ 0x90033, 0x10 },
-	{ 0x90034, 0x139 },
-	{ 0x90035, 0xb },
-	{ 0x90036, 0x7c0 },
-	{ 0x90037, 0x139 },
-	{ 0x90038, 0x44 },
-	{ 0x90039, 0x633 },
-	{ 0x9003a, 0x159 },
-	{ 0x9003b, 0x14f },
-	{ 0x9003c, 0x630 },
-	{ 0x9003d, 0x159 },
-	{ 0x9003e, 0x47 },
-	{ 0x9003f, 0x633 },
-	{ 0x90040, 0x149 },
-	{ 0x90041, 0x4f },
-	{ 0x90042, 0x633 },
-	{ 0x90043, 0x179 },
-	{ 0x90044, 0x8 },
-	{ 0x90045, 0xe0 },
-	{ 0x90046, 0x109 },
-	{ 0x90047, 0x0 },
-	{ 0x90048, 0x7c8 },
-	{ 0x90049, 0x109 },
-	{ 0x9004a, 0x0 },
-	{ 0x9004b, 0x1 },
-	{ 0x9004c, 0x8 },
-	{ 0x9004d, 0x0 },
-	{ 0x9004e, 0x45a },
-	{ 0x9004f, 0x9 },
-	{ 0x90050, 0x0 },
-	{ 0x90051, 0x448 },
-	{ 0x90052, 0x109 },
-	{ 0x90053, 0x40 },
-	{ 0x90054, 0x633 },
-	{ 0x90055, 0x179 },
-	{ 0x90056, 0x1 },
-	{ 0x90057, 0x618 },
-	{ 0x90058, 0x109 },
-	{ 0x90059, 0x40c0 },
-	{ 0x9005a, 0x633 },
-	{ 0x9005b, 0x149 },
-	{ 0x9005c, 0x8 },
-	{ 0x9005d, 0x4 },
-	{ 0x9005e, 0x48 },
-	{ 0x9005f, 0x4040 },
-	{ 0x90060, 0x633 },
-	{ 0x90061, 0x149 },
-	{ 0x90062, 0x0 },
-	{ 0x90063, 0x4 },
-	{ 0x90064, 0x48 },
-	{ 0x90065, 0x40 },
-	{ 0x90066, 0x633 },
-	{ 0x90067, 0x149 },
-	{ 0x90068, 0x10 },
-	{ 0x90069, 0x4 },
-	{ 0x9006a, 0x18 },
-	{ 0x9006b, 0x0 },
-	{ 0x9006c, 0x4 },
-	{ 0x9006d, 0x78 },
-	{ 0x9006e, 0x549 },
-	{ 0x9006f, 0x633 },
-	{ 0x90070, 0x159 },
-	{ 0x90071, 0xd49 },
-	{ 0x90072, 0x633 },
-	{ 0x90073, 0x159 },
-	{ 0x90074, 0x94a },
-	{ 0x90075, 0x633 },
-	{ 0x90076, 0x159 },
-	{ 0x90077, 0x441 },
-	{ 0x90078, 0x633 },
-	{ 0x90079, 0x149 },
-	{ 0x9007a, 0x42 },
-	{ 0x9007b, 0x633 },
-	{ 0x9007c, 0x149 },
-	{ 0x9007d, 0x1 },
-	{ 0x9007e, 0x633 },
-	{ 0x9007f, 0x149 },
-	{ 0x90080, 0x0 },
-	{ 0x90081, 0xe0 },
-	{ 0x90082, 0x109 },
-	{ 0x90083, 0xa },
-	{ 0x90084, 0x10 },
-	{ 0x90085, 0x109 },
-	{ 0x90086, 0x9 },
-	{ 0x90087, 0x3c0 },
-	{ 0x90088, 0x149 },
-	{ 0x90089, 0x9 },
-	{ 0x9008a, 0x3c0 },
-	{ 0x9008b, 0x159 },
-	{ 0x9008c, 0x18 },
-	{ 0x9008d, 0x10 },
-	{ 0x9008e, 0x109 },
-	{ 0x9008f, 0x0 },
-	{ 0x90090, 0x3c0 },
-	{ 0x90091, 0x109 },
-	{ 0x90092, 0x18 },
-	{ 0x90093, 0x4 },
-	{ 0x90094, 0x48 },
-	{ 0x90095, 0x18 },
-	{ 0x90096, 0x4 },
-	{ 0x90097, 0x58 },
-	{ 0x90098, 0xb },
-	{ 0x90099, 0x10 },
-	{ 0x9009a, 0x109 },
-	{ 0x9009b, 0x1 },
-	{ 0x9009c, 0x10 },
-	{ 0x9009d, 0x109 },
-	{ 0x9009e, 0x5 },
-	{ 0x9009f, 0x7c0 },
-	{ 0x900a0, 0x109 },
-	{ 0x900a1, 0x0 },
-	{ 0x900a2, 0x8140 },
-	{ 0x900a3, 0x10c },
-	{ 0x900a4, 0x10 },
-	{ 0x900a5, 0x8138 },
-	{ 0x900a6, 0x10c },
-	{ 0x900a7, 0x8 },
-	{ 0x900a8, 0x7c8 },
-	{ 0x900a9, 0x101 },
-	{ 0x900aa, 0x8 },
-	{ 0x900ab, 0x448 },
-	{ 0x900ac, 0x109 },
-	{ 0x900ad, 0xf },
-	{ 0x900ae, 0x7c0 },
-	{ 0x900af, 0x109 },
-	{ 0x900b0, 0x47 },
-	{ 0x900b1, 0x630 },
-	{ 0x900b2, 0x109 },
-	{ 0x900b3, 0x8 },
-	{ 0x900b4, 0x618 },
-	{ 0x900b5, 0x109 },
-	{ 0x900b6, 0x8 },
-	{ 0x900b7, 0xe0 },
-	{ 0x900b8, 0x109 },
-	{ 0x900b9, 0x0 },
-	{ 0x900ba, 0x7c8 },
-	{ 0x900bb, 0x109 },
-	{ 0x900bc, 0x8 },
-	{ 0x900bd, 0x8140 },
-	{ 0x900be, 0x10c },
-	{ 0x900bf, 0x0 },
-	{ 0x900c0, 0x1 },
-	{ 0x900c1, 0x8 },
-	{ 0x900c2, 0x8 },
-	{ 0x900c3, 0x4 },
-	{ 0x900c4, 0x8 },
-	{ 0x900c5, 0x8 },
-	{ 0x900c6, 0x7c8 },
-	{ 0x900c7, 0x101 },
-	{ 0x90006, 0x0 },
-	{ 0x90007, 0x0 },
-	{ 0x90008, 0x8 },
-	{ 0x90009, 0x0 },
-	{ 0x9000a, 0x0 },
-	{ 0x9000b, 0x0 },
-	{ 0xd00e7, 0x400 },
-	{ 0x90017, 0x0 },
-	{ 0x90026, 0x2b },
-	{ 0x2000b, 0x4b },
-	{ 0x2000c, 0x96 },
-	{ 0x2000d, 0x5dc },
-	{ 0x2000e, 0x2c },
-	{ 0x12000b, 0x21 },
-	{ 0x12000c, 0x42 },
-	{ 0x12000d, 0x29a },
-	{ 0x12000e, 0x21 },
-	{ 0x9000c, 0x0 },
-	{ 0x9000d, 0x173 },
-	{ 0x9000e, 0x60 },
-	{ 0x9000f, 0x6110 },
-	{ 0x90010, 0x2152 },
-	{ 0x90011, 0xdfbd },
-	{ 0x90012, 0xffff },
-	{ 0x90013, 0x6152 },
-	{ 0x20089, 0x1 },
-	{ 0x20088, 0x19 },
-	{ 0xc0080, 0x0 },
-	{ 0xd0000, 0x1 }
-};
-
-struct dram_fsp_msg ddr_dram_fsp_msg[] = {
-	{
-		/* P0 2400mts 1D */
-		.drate = 2400,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp0_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_cfg),
-	},
-	{
-		/* P1 1066mts 1D */
-		.drate = 1066,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp1_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp1_cfg),
-	},
-	{
-		/* P0 2400mts 2D */
-		.drate = 2400,
-		.fw_type = FW_2D_IMAGE,
-		.fsp_cfg = ddr_fsp0_2d_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_2d_cfg),
-	},
-};
-
-/* ddr timing config params */
-struct dram_timing_info dram_timing = {
-	.ddrc_cfg = ddr_ddrc_cfg,
-	.ddrc_cfg_num = ARRAY_SIZE(ddr_ddrc_cfg),
-	.ddrphy_cfg = ddr_ddrphy_cfg,
-	.ddrphy_cfg_num = ARRAY_SIZE(ddr_ddrphy_cfg),
-	.fsp_msg = ddr_dram_fsp_msg,
-	.fsp_msg_num = ARRAY_SIZE(ddr_dram_fsp_msg),
-	.ddrphy_trained_csr = ddr_ddrphy_trained_csr,
-	.ddrphy_trained_csr_num = ARRAY_SIZE(ddr_ddrphy_trained_csr),
-	.ddrphy_pie = ddr_phy_pie,
-	.ddrphy_pie_num = ARRAY_SIZE(ddr_phy_pie),
-	.fsp_table = { 2400, 1066, },
-};
-
diff --git a/board/freescale/imx8mn_a100/imx8mn_a100.c b/board/freescale/imx8mn_a100/imx8mn_a100.c
deleted file mode 100644
index 92601393cb..0000000000
--- a/board/freescale/imx8mn_a100/imx8mn_a100.c
+++ /dev/null
@@ -1,349 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0+
-/*
- * Copyright 2019 NXP
- */
-
-#include <common.h>
-#include <env.h>
-#include <init.h>
-#include <asm/global_data.h>
-#include <miiphy.h>
-#include <netdev.h>
-#include <asm/mach-imx/iomux-v3.h>
-#include <asm-generic/gpio.h>
-#include <asm/arch/imx8mn_pins.h>
-#include <asm/arch/clock.h>
-#include <asm/arch/sys_proto.h>
-#include <asm/mach-imx/gpio.h>
-#include <asm/mach-imx/mxc_i2c.h>
-#include <i2c.h>
-#include <asm/io.h>
-#include "../common/tcpc.h"
-#include <usb.h>
-#include <imx_sip.h>
-#include <linux/arm-smccc.h>
-
-DECLARE_GLOBAL_DATA_PTR;
-
-#define UART_PAD_CTRL	(PAD_CTL_DSE6 | PAD_CTL_FSEL1)
-#define WDOG_PAD_CTRL	(PAD_CTL_DSE6 | PAD_CTL_ODE | PAD_CTL_PUE | PAD_CTL_PE)
-
-static iomux_v3_cfg_t const uart_pads[] = {
-	IMX8MN_PAD_UART2_RXD__UART2_DCE_RX | MUX_PAD_CTRL(UART_PAD_CTRL),
-	IMX8MN_PAD_UART2_TXD__UART2_DCE_TX | MUX_PAD_CTRL(UART_PAD_CTRL),
-};
-
-static iomux_v3_cfg_t const wdog_pads[] = {
-	IMX8MN_PAD_GPIO1_IO02__WDOG1_WDOG_B  | MUX_PAD_CTRL(WDOG_PAD_CTRL),
-};
-
-#ifdef CONFIG_NAND_MXS
-#ifdef CONFIG_SPL_BUILD
-#define NAND_PAD_CTRL	(PAD_CTL_DSE6 | PAD_CTL_FSEL2 | PAD_CTL_HYS)
-#define NAND_PAD_READY0_CTRL (PAD_CTL_DSE6 | PAD_CTL_FSEL2 | PAD_CTL_PUE)
-static iomux_v3_cfg_t const gpmi_pads[] = {
-	IMX8MN_PAD_NAND_ALE__RAWNAND_ALE | MUX_PAD_CTRL(NAND_PAD_CTRL),
-	IMX8MN_PAD_NAND_CE0_B__RAWNAND_CE0_B | MUX_PAD_CTRL(NAND_PAD_CTRL),
-	IMX8MN_PAD_NAND_CLE__RAWNAND_CLE | MUX_PAD_CTRL(NAND_PAD_CTRL),
-	IMX8MN_PAD_NAND_DATA00__RAWNAND_DATA00 | MUX_PAD_CTRL(NAND_PAD_CTRL),
-	IMX8MN_PAD_NAND_DATA01__RAWNAND_DATA01 | MUX_PAD_CTRL(NAND_PAD_CTRL),
-	IMX8MN_PAD_NAND_DATA02__RAWNAND_DATA02 | MUX_PAD_CTRL(NAND_PAD_CTRL),
-	IMX8MN_PAD_NAND_DATA03__RAWNAND_DATA03 | MUX_PAD_CTRL(NAND_PAD_CTRL),
-	IMX8MN_PAD_NAND_DATA04__RAWNAND_DATA04 | MUX_PAD_CTRL(NAND_PAD_CTRL),
-	IMX8MN_PAD_NAND_DATA05__RAWNAND_DATA05	| MUX_PAD_CTRL(NAND_PAD_CTRL),
-	IMX8MN_PAD_NAND_DATA06__RAWNAND_DATA06	| MUX_PAD_CTRL(NAND_PAD_CTRL),
-	IMX8MN_PAD_NAND_DATA07__RAWNAND_DATA07	| MUX_PAD_CTRL(NAND_PAD_CTRL),
-	IMX8MN_PAD_NAND_RE_B__RAWNAND_RE_B | MUX_PAD_CTRL(NAND_PAD_CTRL),
-	IMX8MN_PAD_NAND_READY_B__RAWNAND_READY_B | MUX_PAD_CTRL(NAND_PAD_READY0_CTRL),
-	IMX8MN_PAD_NAND_WE_B__RAWNAND_WE_B | MUX_PAD_CTRL(NAND_PAD_CTRL),
-	IMX8MN_PAD_NAND_WP_B__RAWNAND_WP_B | MUX_PAD_CTRL(NAND_PAD_CTRL),
-};
-#endif
-
-static void setup_gpmi_nand(void)
-{
-#ifdef CONFIG_SPL_BUILD
-	imx_iomux_v3_setup_multiple_pads(gpmi_pads, ARRAY_SIZE(gpmi_pads));
-#endif
-
-	init_nand_clk();
-}
-#endif
-
-int board_early_init_f(void)
-{
-	struct wdog_regs *wdog = (struct wdog_regs *)WDOG1_BASE_ADDR;
-
-	imx_iomux_v3_setup_multiple_pads(wdog_pads, ARRAY_SIZE(wdog_pads));
-
-	set_wdog_reset(wdog);
-
-	imx_iomux_v3_setup_multiple_pads(uart_pads, ARRAY_SIZE(uart_pads));
-
-	init_uart_clk(1);
-
-#ifdef CONFIG_NAND_MXS
-	setup_gpmi_nand(); /* SPL will call the board_early_init_f */
-#endif
-
-	return 0;
-}
-
-#if IS_ENABLED(CONFIG_FEC_MXC)
-static int setup_fec(void)
-{
-	struct iomuxc_gpr_base_regs *gpr =
-		(struct iomuxc_gpr_base_regs *)IOMUXC_GPR_BASE_ADDR;
-
-	/* Use 125M anatop REF_CLK1 for ENET1, not from external */
-	clrsetbits_le32(&gpr->gpr[1], 0x2000, 0);
-
-	return 0;
-}
-
-int board_phy_config(struct phy_device *phydev)
-{
-	if (phydev->drv->config)
-		phydev->drv->config(phydev);
-
-#ifndef CONFIG_DM_ETH
-	/* enable rgmii rxc skew and phy mode select to RGMII copper */
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x1f);
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, 0x8);
-
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x00);
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, 0x82ee);
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x05);
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, 0x100);
-#endif
-
-	return 0;
-}
-#endif
-
-#ifdef CONFIG_USB_TCPC
-struct tcpc_port port1;
-struct tcpc_port port2;
-
-static int setup_pd_switch(uint8_t i2c_bus, uint8_t addr)
-{
-	struct udevice *bus;
-	struct udevice *i2c_dev = NULL;
-	int ret;
-	uint8_t valb;
-
-	ret = uclass_get_device_by_seq(UCLASS_I2C, i2c_bus, &bus);
-	if (ret) {
-		printf("%s: Can't find bus
", __func__);
-		return -EINVAL;
-	}
-
-	ret = dm_i2c_probe(bus, addr, 0, &i2c_dev);
-	if (ret) {
-		printf("%s: Can't find device id=0x%x
",
-			__func__, addr);
-		return -ENODEV;
-	}
-
-	ret = dm_i2c_read(i2c_dev, 0xB, &valb, 1);
-	if (ret) {
-		printf("%s dm_i2c_read failed, err %d
", __func__, ret);
-		return -EIO;
-	}
-	valb |= 0x4; /* Set DB_EXIT to exit dead battery mode */
-	ret = dm_i2c_write(i2c_dev, 0xB, (const uint8_t *)&valb, 1);
-	if (ret) {
-		printf("%s dm_i2c_write failed, err %d
", __func__, ret);
-		return -EIO;
-	}
-
-	/* Set OVP threshold to 23V */
-	valb = 0x6;
-	ret = dm_i2c_write(i2c_dev, 0x8, (const uint8_t *)&valb, 1);
-	if (ret) {
-		printf("%s dm_i2c_write failed, err %d
", __func__, ret);
-		return -EIO;
-	}
-
-	return 0;
-}
-
-int pd_switch_snk_enable(struct tcpc_port *port)
-{
-	if (port == &port1) {
-		debug("Setup pd switch on port 1
");
-		return setup_pd_switch(1, 0x72);
-	} else if (port == &port2) {
-		debug("Setup pd switch on port 2
");
-		return setup_pd_switch(1, 0x73);
-	} else
-		return -EINVAL;
-}
-
-struct tcpc_port_config port1_config = {
-	.i2c_bus = 1, /*i2c2*/
-	.addr = 0x50,
-	.port_type = TYPEC_PORT_UFP,
-	.max_snk_mv = 5000,
-	.max_snk_ma = 3000,
-	.max_snk_mw = 40000,
-	.op_snk_mv = 9000,
-	.switch_setup_func = &pd_switch_snk_enable,
-};
-
-struct tcpc_port_config port2_config = {
-	.i2c_bus = 1, /*i2c2*/
-	.addr = 0x52,
-	.port_type = TYPEC_PORT_UFP,
-	.max_snk_mv = 9000,
-	.max_snk_ma = 3000,
-	.max_snk_mw = 40000,
-	.op_snk_mv = 9000,
-	.switch_setup_func = &pd_switch_snk_enable,
-};
-
-static int setup_typec(void)
-{
-	int ret;
-
-	debug("tcpc_init port 2
");
-	ret = tcpc_init(&port2, port2_config, NULL);
-	if (ret) {
-		printf("%s: tcpc port2 init failed, err=%d
",
-		       __func__, ret);
-	} else if (tcpc_pd_sink_check_charging(&port2)) {
-		/* Disable PD for USB1, since USB2 has priority */
-		port1_config.disable_pd = true;
-		printf("Power supply on USB2
");
-	}
-
-	debug("tcpc_init port 1
");
-	ret = tcpc_init(&port1, port1_config, NULL);
-	if (ret) {
-		printf("%s: tcpc port1 init failed, err=%d
",
-		       __func__, ret);
-	} else {
-		if (!port1_config.disable_pd)
-			printf("Power supply on USB1
");
-		return ret;
-	}
-
-	return ret;
-}
-
-int board_usb_init(int index, enum usb_init_type init)
-{
-	int ret = 0;
-	struct tcpc_port *port_ptr;
-
-	debug("board_usb_init %d, type %d
", index, init);
-
-	if (index == 0)
-		port_ptr = &port1;
-	else
-		port_ptr = &port2;
-
-	imx8m_usb_power(index, true);
-
-	if (init == USB_INIT_HOST)
-		tcpc_setup_dfp_mode(port_ptr);
-	else
-		tcpc_setup_ufp_mode(port_ptr);
-
-	return ret;
-}
-
-int board_usb_cleanup(int index, enum usb_init_type init)
-{
-	int ret = 0;
-
-	debug("board_usb_cleanup %d, type %d
", index, init);
-
-	if (init == USB_INIT_HOST) {
-		if (index == 0)
-			ret = tcpc_disable_src_vbus(&port1);
-		else
-			ret = tcpc_disable_src_vbus(&port2);
-	}
-
-	imx8m_usb_power(index, false);
-	return ret;
-}
-
-int board_ehci_usb_phy_mode(struct udevice *dev)
-{
-	int ret = 0;
-	enum typec_cc_polarity pol;
-	enum typec_cc_state state;
-	struct tcpc_port *port_ptr;
-
-	if (dev_seq(dev) == 0)
-		port_ptr = &port1;
-	else
-		port_ptr = &port2;
-
-	tcpc_setup_ufp_mode(port_ptr);
-
-	ret = tcpc_get_cc_status(port_ptr, &pol, &state);
-	if (!ret) {
-		if (state == TYPEC_STATE_SRC_RD_RA || state == TYPEC_STATE_SRC_RD)
-			return USB_INIT_HOST;
-	}
-
-	return USB_INIT_DEVICE;
-}
-
-#endif
-
-#define DISPMIX				9
-#define MIPI				10
-
-int board_init(void)
-{
-	struct arm_smccc_res res;
-
-#ifdef CONFIG_USB_TCPC
-	setup_typec();
-
-	/* Enable Power by default for SR-IR usage */
-	imx8m_usb_power(0, true);
-#endif
-
-	if (IS_ENABLED(CONFIG_FEC_MXC))
-		setup_fec();
-
-	arm_smccc_smc(IMX_SIP_GPC, IMX_SIP_GPC_PM_DOMAIN,
-		      DISPMIX, true, 0, 0, 0, 0, &res);
-	arm_smccc_smc(IMX_SIP_GPC, IMX_SIP_GPC_PM_DOMAIN,
-		      MIPI, true, 0, 0, 0, 0, &res);
-
-	return 0;
-}
-
-int board_late_init(void)
-{
-#ifdef CONFIG_ENV_IS_IN_MMC
-	board_late_mmc_env_init();
-#endif
-
-#ifdef CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
-	env_set("board_name", "DDR4 EVK");
-	env_set("board_rev", "iMX8MN");
-#endif
-	return 0;
-}
-
-#ifdef CONFIG_ANDROID_SUPPORT
-bool is_power_key_pressed(void) {
-	return (bool)(!!(readl(SNVS_HPSR) & (0x1 << 6)));
-}
-#endif
-
-#ifdef CONFIG_FSL_FASTBOOT
-#ifdef CONFIG_ANDROID_RECOVERY
-int is_recovery_key_pressing(void)
-{
-	return 0; /* TODO */
-}
-#endif /* CONFIG_ANDROID_RECOVERY */
-#endif /* CONFIG_FSL_FASTBOOT */
diff --git a/board/freescale/imx8mn_a100/lpddr4_timing.c b/board/freescale/imx8mn_a100/lpddr4_timing.c
deleted file mode 100644
index 8929bc6d26..0000000000
--- a/board/freescale/imx8mn_a100/lpddr4_timing.c
+++ /dev/null
@@ -1,1585 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0+
-/*
- * Copyright 2019 NXP
- *
- * Generated code from MX8M_DDR_tool
- * Align with uboot-imx_v2018.03_4.14.78_1.0.0_ga
- */
-
-#include <linux/kernel.h>
-#include <asm/arch/ddr.h>
-
-struct dram_cfg_param ddr_ddrc_cfg[] = {
-	{0x3d400020, 0x00000213},
-	{0x3d400024, 0x0003e800},
-	{0x3d400030, 0x00000120},
-	{0x3d400000, 0xa3080020},
-	{0x3d400064, 0x006100e0},
-	{0x3d4000d0, 0xc003061c},
-	{0x3d4000d4, 0x009e0000},
-	{0x3d4000dc, 0x00d4002d},
-	{0x3d4000e0, 0x00310000},
-	{0x3d4000e8, 0x0066004d},
-	{0x3d4000ec, 0x0016004a},
-	{0x3d400100, 0x1a201b22},
-	{0x3d400104, 0x00060633},
-	{0x3d40010c, 0x00c0c000},
-	{0x3d400110, 0x0f04080f},
-	{0x3d400114, 0x02040c0c},
-	{0x3d400118, 0x01010007},
-	{0x3d40011c, 0x00000401},
-	{0x3d400130, 0x00020600},
-	{0x3d400134, 0x0c100002},
-	{0x3d400138, 0x000000e6},
-	{0x3d400144, 0x00a00050},
-	{0x3d400180, 0x03200018},
-	{0x3d400184, 0x028061a8},
-	{0x3d400188, 0x00000000},
-	{0x3d400190, 0x0497820a},
-	{0x3d4001b4, 0x0000170a},
-	{0x3d400108, 0x070e1617},
-	{0x3d4001c0, 0x00000001},
-	{0x3d400194, 0x00080303},
-	{0x3d4001a0, 0xe0400018},
-	{0x3d4001a4, 0x00df00e4},
-	{0x3d4001a8, 0x80000000},
-	{0x3d4001b0, 0x00000011},
-	{0x3d4001c4, 0x00000001},
-	{0x3d4000f4, 0x00000c99},
-	{0x3d400200, 0x00000017},
-	{0x3d400204, 0x00080808},
-	{0x3d400208, 0x00000000},
-	{0x3d40020c, 0x00000000},
-	{0x3d400210, 0x00001f1f},
-	{0x3d400214, 0x07070707},
-	{0x3d400218, 0x07070707},
-	{0x3d40021c, 0x00000f0f},
-	{0x3d400250, 0x29001701},
-	{0x3d400254, 0x0000002c},
-	{0x3d40025c, 0x04000030},
-	{0x3d400264, 0x900093e7},
-	{0x3d40026c, 0x20005574},
-	{0x3d400400, 0x00000111},
-	{0x3d400408, 0x000072ff},
-	{0x3d400494, 0x02100e07},
-	{0x3d400498, 0x00620096},
-	{0x3d40049c, 0x01100e07},
-	{0x3d4004a0, 0x00c8012c},
-	{0x3d402020, 0x00000011},
-	{0x3d402024, 0x00007d00},
-	{0x3d402050, 0x0020d040},
-	{0x3d402064, 0x000c001d},
-	{0x3d4020f4, 0x00000c99},
-	{0x3d402100, 0x0a040305},
-	{0x3d402104, 0x00030407},
-	{0x3d402108, 0x0203060b},
-	{0x3d40210c, 0x00505000},
-	{0x3d402110, 0x02040202},
-	{0x3d402114, 0x02030202},
-	{0x3d402118, 0x01010004},
-	{0x3d40211c, 0x00000301},
-	{0x3d402130, 0x00020300},
-	{0x3d402134, 0x0a100002},
-	{0x3d402138, 0x0000001d},
-	{0x3d402144, 0x0014000a},
-	{0x3d402180, 0x00650004},
-	{0x3d402190, 0x03818200},
-	{0x3d402194, 0x00080303},
-	{0x3d4021b4, 0x00000100},
-	{0x3d4020dc, 0x00840000},
-	{0x3d4020e0, 0x00310000},
-	{0x3d4020e8, 0x0066004d},
-	{0x3d4020ec, 0x0016004a},
-	{0x3d403020, 0x00000011},
-	{0x3d403024, 0x00001f40},
-	{0x3d403050, 0x0020d040},
-	{0x3d403064, 0x00030007},
-	{0x3d4030f4, 0x00000c99},
-	{0x3d403100, 0x0a010102},
-	{0x3d403104, 0x00030404},
-	{0x3d403108, 0x0203060b},
-	{0x3d40310c, 0x00505000},
-	{0x3d403110, 0x02040202},
-	{0x3d403114, 0x02030202},
-	{0x3d403118, 0x01010004},
-	{0x3d40311c, 0x00000301},
-	{0x3d403130, 0x00020300},
-	{0x3d403134, 0x0a100002},
-	{0x3d403138, 0x00000008},
-	{0x3d403144, 0x00050003},
-	{0x3d403180, 0x00190004},
-	{0x3d403190, 0x03818200},
-	{0x3d403194, 0x00080303},
-	{0x3d4031b4, 0x00000100},
-	{0x3d4030dc, 0x00840000},
-	{0x3d4030e0, 0x00310000},
-	{0x3d4030e8, 0x0066004d},
-	{0x3d4030ec, 0x0016004a},
-
-	/* default boot point */
-	{ 0x3d400028, 0x0 },
-};
-
-/* PHY Initialize Configuration */
-struct dram_cfg_param ddr_ddrphy_cfg[] = {
-	{0x000100a0, 0x00000000},
-	{0x000100a1, 0x00000001},
-	{0x000100a2, 0x00000002},
-	{0x000100a3, 0x00000003},
-	{0x000100a4, 0x00000004},
-	{0x000100a5, 0x00000005},
-	{0x000100a6, 0x00000006},
-	{0x000100a7, 0x00000007},
-	{0x000110a0, 0x00000000},
-	{0x000110a1, 0x00000001},
-	{0x000110a2, 0x00000003},
-	{0x000110a3, 0x00000004},
-	{0x000110a4, 0x00000005},
-	{0x000110a5, 0x00000002},
-	{0x000110a6, 0x00000007},
-	{0x000110a7, 0x00000006},
-	{0x0001005f, 0x0000015f},
-	{0x0001015f, 0x0000015f},
-	{0x0001105f, 0x0000015f},
-	{0x0001115f, 0x0000015f},
-	{0x0011005f, 0x0000015f},
-	{0x0011015f, 0x0000015f},
-	{0x0011105f, 0x0000015f},
-	{0x0011115f, 0x0000015f},
-	{0x0021005f, 0x0000015f},
-	{0x0021015f, 0x0000015f},
-	{0x0021105f, 0x0000015f},
-	{0x0021115f, 0x0000015f},
-	{0x00000055, 0x0000016f},
-	{0x00001055, 0x0000016f},
-	{0x00002055, 0x0000016f},
-	{0x00003055, 0x0000016f},
-	{0x00004055, 0x0000016f},
-	{0x00005055, 0x0000016f},
-	{0x00006055, 0x0000016f},
-	{0x00007055, 0x0000016f},
-	{0x00008055, 0x0000016f},
-	{0x00009055, 0x0000016f},
-	{0x000200c5, 0x00000019},
-	{0x001200c5, 0x00000007},
-	{0x002200c5, 0x00000007},
-	{0x0002002e, 0x00000002},
-	{0x0012002e, 0x00000002},
-	{0x0022002e, 0x00000002},
-	{0x00090204, 0x00000000},
-	{0x00190204, 0x00000000},
-	{0x00290204, 0x00000000},
-	{0x00020024, 0x000001a3},
-	{0x0002003a, 0x00000002},
-	{0x0002007d, 0x00000212},
-	{0x0002007c, 0x00000061},
-	{0x00120024, 0x000001a3},
-	{0x0002003a, 0x00000002},
-	{0x0012007d, 0x00000212},
-	{0x0012007c, 0x00000061},
-	{0x00220024, 0x000001a3},
-	{0x0002003a, 0x00000002},
-	{0x0022007d, 0x00000212},
-	{0x0022007c, 0x00000061},
-	{0x00020056, 0x00000003},
-	{0x00120056, 0x00000003},
-	{0x00220056, 0x00000003},
-	{0x0001004d, 0x00000f80},
-	{0x0001014d, 0x00000f80},
-	{0x0001104d, 0x00000f80},
-	{0x0001114d, 0x00000f80},
-	{0x0011004d, 0x00000f80},
-	{0x0011014d, 0x00000f80},
-	{0x0011104d, 0x00000f80},
-	{0x0011114d, 0x00000f80},
-	{0x0021004d, 0x00000f80},
-	{0x0021014d, 0x00000f80},
-	{0x0021104d, 0x00000f80},
-	{0x0021114d, 0x00000f80},
-	{0x00010049, 0x00000fbe},
-	{0x00010149, 0x00000fbe},
-	{0x00011049, 0x00000fbe},
-	{0x00011149, 0x00000fbe},
-	{0x00110049, 0x00000fbe},
-	{0x00110149, 0x00000fbe},
-	{0x00111049, 0x00000fbe},
-	{0x00111149, 0x00000fbe},
-	{0x00210049, 0x00000fbe},
-	{0x00210149, 0x00000fbe},
-	{0x00211049, 0x00000fbe},
-	{0x00211149, 0x00000fbe},
-	{0x00000043, 0x00000063},
-	{0x00001043, 0x00000063},
-	{0x00002043, 0x00000063},
-	{0x00003043, 0x00000063},
-	{0x00004043, 0x00000063},
-	{0x00005043, 0x00000063},
-	{0x00006043, 0x00000063},
-	{0x00007043, 0x00000063},
-	{0x00008043, 0x00000063},
-	{0x00009043, 0x00000063},
-	{0x00020018, 0x00000001},
-	{0x00020075, 0x00000004},
-	{0x00020050, 0x00000000},
-	{0x00020008, 0x00000320},
-	{0x00120008, 0x00000064},
-	{0x00220008, 0x00000019},
-	{0x00020088, 0x00000009},
-	{0x000200b2, 0x000000dc},
-	{0x00010043, 0x000005a1},
-	{0x00010143, 0x000005a1},
-	{0x00011043, 0x000005a1},
-	{0x00011143, 0x000005a1},
-	{0x001200b2, 0x000000dc},
-	{0x00110043, 0x000005a1},
-	{0x00110143, 0x000005a1},
-	{0x00111043, 0x000005a1},
-	{0x00111143, 0x000005a1},
-	{0x002200b2, 0x000000dc},
-	{0x00210043, 0x000005a1},
-	{0x00210143, 0x000005a1},
-	{0x00211043, 0x000005a1},
-	{0x00211143, 0x000005a1},
-	{0x000200fa, 0x00000001},
-	{0x001200fa, 0x00000001},
-	{0x002200fa, 0x00000001},
-	{0x00020019, 0x00000001},
-	{0x00120019, 0x00000001},
-	{0x00220019, 0x00000001},
-	{0x000200f0, 0x00000660},
-	{0x000200f1, 0x00000000},
-	{0x000200f2, 0x00004444},
-	{0x000200f3, 0x00008888},
-	{0x000200f4, 0x00005665},
-	{0x000200f5, 0x00000000},
-	{0x000200f6, 0x00000000},
-	{0x000200f7, 0x0000f000},
-	{0x0001004a, 0x00000500},
-	{0x0001104a, 0x00000500},
-	{0x00020025, 0x00000000},
-	{0x0002002d, 0x00000000},
-	{0x0012002d, 0x00000000},
-	{0x0022002d, 0x00000000},
-	{0x0002002c, 0x00000000},
-	{0x000200c7, 0x00000021},
-	{0x000200ca, 0x00000024},
-	{0x000200cc, 0x000001f7},
-	{0x001200c7, 0x00000021},
-	{0x001200ca, 0x00000024},
-	{0x001200cc, 0x000001f7},
-	{0x002200c7, 0x00000021},
-	{0x002200ca, 0x00000024},
-	{0x002200cc, 0x000001f7},
-};
-
-/* ddr phy trained csr */
-struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
-	{0x0200b2, 0x0},
-	{0x1200b2, 0x0},
-	{0x2200b2, 0x0},
-	{0x0200cb, 0x0},
-	{0x010043, 0x0},
-	{0x110043, 0x0},
-	{0x210043, 0x0},
-	{0x010143, 0x0},
-	{0x110143, 0x0},
-	{0x210143, 0x0},
-	{0x011043, 0x0},
-	{0x111043, 0x0},
-	{0x211043, 0x0},
-	{0x011143, 0x0},
-	{0x111143, 0x0},
-	{0x211143, 0x0},
-	{0x000080, 0x0},
-	{0x100080, 0x0},
-	{0x200080, 0x0},
-	{0x001080, 0x0},
-	{0x101080, 0x0},
-	{0x201080, 0x0},
-	{0x002080, 0x0},
-	{0x102080, 0x0},
-	{0x202080, 0x0},
-	{0x003080, 0x0},
-	{0x103080, 0x0},
-	{0x203080, 0x0},
-	{0x004080, 0x0},
-	{0x104080, 0x0},
-	{0x204080, 0x0},
-	{0x005080, 0x0},
-	{0x105080, 0x0},
-	{0x205080, 0x0},
-	{0x006080, 0x0},
-	{0x106080, 0x0},
-	{0x206080, 0x0},
-	{0x007080, 0x0},
-	{0x107080, 0x0},
-	{0x207080, 0x0},
-	{0x008080, 0x0},
-	{0x108080, 0x0},
-	{0x208080, 0x0},
-	{0x009080, 0x0},
-	{0x109080, 0x0},
-	{0x209080, 0x0},
-	{0x010080, 0x0},
-	{0x110080, 0x0},
-	{0x210080, 0x0},
-	{0x010180, 0x0},
-	{0x110180, 0x0},
-	{0x210180, 0x0},
-	{0x011080, 0x0},
-	{0x111080, 0x0},
-	{0x211080, 0x0},
-	{0x011180, 0x0},
-	{0x111180, 0x0},
-	{0x211180, 0x0},
-	{0x010081, 0x0},
-	{0x110081, 0x0},
-	{0x210081, 0x0},
-	{0x010181, 0x0},
-	{0x110181, 0x0},
-	{0x210181, 0x0},
-	{0x011081, 0x0},
-	{0x111081, 0x0},
-	{0x211081, 0x0},
-	{0x011181, 0x0},
-	{0x111181, 0x0},
-	{0x211181, 0x0},
-	{0x0100d0, 0x0},
-	{0x1100d0, 0x0},
-	{0x2100d0, 0x0},
-	{0x0101d0, 0x0},
-	{0x1101d0, 0x0},
-	{0x2101d0, 0x0},
-	{0x0110d0, 0x0},
-	{0x1110d0, 0x0},
-	{0x2110d0, 0x0},
-	{0x0111d0, 0x0},
-	{0x1111d0, 0x0},
-	{0x2111d0, 0x0},
-	{0x0100d1, 0x0},
-	{0x1100d1, 0x0},
-	{0x2100d1, 0x0},
-	{0x0101d1, 0x0},
-	{0x1101d1, 0x0},
-	{0x2101d1, 0x0},
-	{0x0110d1, 0x0},
-	{0x1110d1, 0x0},
-	{0x2110d1, 0x0},
-	{0x0111d1, 0x0},
-	{0x1111d1, 0x0},
-	{0x2111d1, 0x0},
-	{0x010068, 0x0},
-	{0x010168, 0x0},
-	{0x010268, 0x0},
-	{0x010368, 0x0},
-	{0x010468, 0x0},
-	{0x010568, 0x0},
-	{0x010668, 0x0},
-	{0x010768, 0x0},
-	{0x010868, 0x0},
-	{0x011068, 0x0},
-	{0x011168, 0x0},
-	{0x011268, 0x0},
-	{0x011368, 0x0},
-	{0x011468, 0x0},
-	{0x011568, 0x0},
-	{0x011668, 0x0},
-	{0x011768, 0x0},
-	{0x011868, 0x0},
-	{0x010069, 0x0},
-	{0x010169, 0x0},
-	{0x010269, 0x0},
-	{0x010369, 0x0},
-	{0x010469, 0x0},
-	{0x010569, 0x0},
-	{0x010669, 0x0},
-	{0x010769, 0x0},
-	{0x010869, 0x0},
-	{0x011069, 0x0},
-	{0x011169, 0x0},
-	{0x011269, 0x0},
-	{0x011369, 0x0},
-	{0x011469, 0x0},
-	{0x011569, 0x0},
-	{0x011669, 0x0},
-	{0x011769, 0x0},
-	{0x011869, 0x0},
-	{0x01008c, 0x0},
-	{0x11008c, 0x0},
-	{0x21008c, 0x0},
-	{0x01018c, 0x0},
-	{0x11018c, 0x0},
-	{0x21018c, 0x0},
-	{0x01108c, 0x0},
-	{0x11108c, 0x0},
-	{0x21108c, 0x0},
-	{0x01118c, 0x0},
-	{0x11118c, 0x0},
-	{0x21118c, 0x0},
-	{0x01008d, 0x0},
-	{0x11008d, 0x0},
-	{0x21008d, 0x0},
-	{0x01018d, 0x0},
-	{0x11018d, 0x0},
-	{0x21018d, 0x0},
-	{0x01108d, 0x0},
-	{0x11108d, 0x0},
-	{0x21108d, 0x0},
-	{0x01118d, 0x0},
-	{0x11118d, 0x0},
-	{0x21118d, 0x0},
-	{0x0100c0, 0x0},
-	{0x1100c0, 0x0},
-	{0x2100c0, 0x0},
-	{0x0101c0, 0x0},
-	{0x1101c0, 0x0},
-	{0x2101c0, 0x0},
-	{0x0102c0, 0x0},
-	{0x1102c0, 0x0},
-	{0x2102c0, 0x0},
-	{0x0103c0, 0x0},
-	{0x1103c0, 0x0},
-	{0x2103c0, 0x0},
-	{0x0104c0, 0x0},
-	{0x1104c0, 0x0},
-	{0x2104c0, 0x0},
-	{0x0105c0, 0x0},
-	{0x1105c0, 0x0},
-	{0x2105c0, 0x0},
-	{0x0106c0, 0x0},
-	{0x1106c0, 0x0},
-	{0x2106c0, 0x0},
-	{0x0107c0, 0x0},
-	{0x1107c0, 0x0},
-	{0x2107c0, 0x0},
-	{0x0108c0, 0x0},
-	{0x1108c0, 0x0},
-	{0x2108c0, 0x0},
-	{0x0110c0, 0x0},
-	{0x1110c0, 0x0},
-	{0x2110c0, 0x0},
-	{0x0111c0, 0x0},
-	{0x1111c0, 0x0},
-	{0x2111c0, 0x0},
-	{0x0112c0, 0x0},
-	{0x1112c0, 0x0},
-	{0x2112c0, 0x0},
-	{0x0113c0, 0x0},
-	{0x1113c0, 0x0},
-	{0x2113c0, 0x0},
-	{0x0114c0, 0x0},
-	{0x1114c0, 0x0},
-	{0x2114c0, 0x0},
-	{0x0115c0, 0x0},
-	{0x1115c0, 0x0},
-	{0x2115c0, 0x0},
-	{0x0116c0, 0x0},
-	{0x1116c0, 0x0},
-	{0x2116c0, 0x0},
-	{0x0117c0, 0x0},
-	{0x1117c0, 0x0},
-	{0x2117c0, 0x0},
-	{0x0118c0, 0x0},
-	{0x1118c0, 0x0},
-	{0x2118c0, 0x0},
-	{0x0100c1, 0x0},
-	{0x1100c1, 0x0},
-	{0x2100c1, 0x0},
-	{0x0101c1, 0x0},
-	{0x1101c1, 0x0},
-	{0x2101c1, 0x0},
-	{0x0102c1, 0x0},
-	{0x1102c1, 0x0},
-	{0x2102c1, 0x0},
-	{0x0103c1, 0x0},
-	{0x1103c1, 0x0},
-	{0x2103c1, 0x0},
-	{0x0104c1, 0x0},
-	{0x1104c1, 0x0},
-	{0x2104c1, 0x0},
-	{0x0105c1, 0x0},
-	{0x1105c1, 0x0},
-	{0x2105c1, 0x0},
-	{0x0106c1, 0x0},
-	{0x1106c1, 0x0},
-	{0x2106c1, 0x0},
-	{0x0107c1, 0x0},
-	{0x1107c1, 0x0},
-	{0x2107c1, 0x0},
-	{0x0108c1, 0x0},
-	{0x1108c1, 0x0},
-	{0x2108c1, 0x0},
-	{0x0110c1, 0x0},
-	{0x1110c1, 0x0},
-	{0x2110c1, 0x0},
-	{0x0111c1, 0x0},
-	{0x1111c1, 0x0},
-	{0x2111c1, 0x0},
-	{0x0112c1, 0x0},
-	{0x1112c1, 0x0},
-	{0x2112c1, 0x0},
-	{0x0113c1, 0x0},
-	{0x1113c1, 0x0},
-	{0x2113c1, 0x0},
-	{0x0114c1, 0x0},
-	{0x1114c1, 0x0},
-	{0x2114c1, 0x0},
-	{0x0115c1, 0x0},
-	{0x1115c1, 0x0},
-	{0x2115c1, 0x0},
-	{0x0116c1, 0x0},
-	{0x1116c1, 0x0},
-	{0x2116c1, 0x0},
-	{0x0117c1, 0x0},
-	{0x1117c1, 0x0},
-	{0x2117c1, 0x0},
-	{0x0118c1, 0x0},
-	{0x1118c1, 0x0},
-	{0x2118c1, 0x0},
-	{0x010020, 0x0},
-	{0x110020, 0x0},
-	{0x210020, 0x0},
-	{0x011020, 0x0},
-	{0x111020, 0x0},
-	{0x211020, 0x0},
-	{0x020072, 0x0},
-	{0x020073, 0x0},
-	{0x020074, 0x0},
-	{0x0100aa, 0x0},
-	{0x0110aa, 0x0},
-	{0x020010, 0x0},
-	{0x120010, 0x0},
-	{0x220010, 0x0},
-	{0x020011, 0x0},
-	{0x120011, 0x0},
-	{0x220011, 0x0},
-	{0x0100ae, 0x0},
-	{0x1100ae, 0x0},
-	{0x2100ae, 0x0},
-	{0x0100af, 0x0},
-	{0x1100af, 0x0},
-	{0x2100af, 0x0},
-	{0x0110ae, 0x0},
-	{0x1110ae, 0x0},
-	{0x2110ae, 0x0},
-	{0x0110af, 0x0},
-	{0x1110af, 0x0},
-	{0x2110af, 0x0},
-	{0x020020, 0x0},
-	{0x120020, 0x0},
-	{0x220020, 0x0},
-	{0x0100a0, 0x0},
-	{0x0100a1, 0x0},
-	{0x0100a2, 0x0},
-	{0x0100a3, 0x0},
-	{0x0100a4, 0x0},
-	{0x0100a5, 0x0},
-	{0x0100a6, 0x0},
-	{0x0100a7, 0x0},
-	{0x0110a0, 0x0},
-	{0x0110a1, 0x0},
-	{0x0110a2, 0x0},
-	{0x0110a3, 0x0},
-	{0x0110a4, 0x0},
-	{0x0110a5, 0x0},
-	{0x0110a6, 0x0},
-	{0x0110a7, 0x0},
-	{0x02007c, 0x0},
-	{0x12007c, 0x0},
-	{0x22007c, 0x0},
-	{0x02007d, 0x0},
-	{0x12007d, 0x0},
-	{0x22007d, 0x0},
-	{0x0400fd, 0x0},
-	{0x0400c0, 0x0},
-	{0x090201, 0x0},
-	{0x190201, 0x0},
-	{0x290201, 0x0},
-	{0x090202, 0x0},
-	{0x190202, 0x0},
-	{0x290202, 0x0},
-	{0x090203, 0x0},
-	{0x190203, 0x0},
-	{0x290203, 0x0},
-	{0x090204, 0x0},
-	{0x190204, 0x0},
-	{0x290204, 0x0},
-	{0x090205, 0x0},
-	{0x190205, 0x0},
-	{0x290205, 0x0},
-	{0x090206, 0x0},
-	{0x190206, 0x0},
-	{0x290206, 0x0},
-	{0x090207, 0x0},
-	{0x190207, 0x0},
-	{0x290207, 0x0},
-	{0x090208, 0x0},
-	{0x190208, 0x0},
-	{0x290208, 0x0},
-	{0x010062, 0x0},
-	{0x010162, 0x0},
-	{0x010262, 0x0},
-	{0x010362, 0x0},
-	{0x010462, 0x0},
-	{0x010562, 0x0},
-	{0x010662, 0x0},
-	{0x010762, 0x0},
-	{0x010862, 0x0},
-	{0x011062, 0x0},
-	{0x011162, 0x0},
-	{0x011262, 0x0},
-	{0x011362, 0x0},
-	{0x011462, 0x0},
-	{0x011562, 0x0},
-	{0x011662, 0x0},
-	{0x011762, 0x0},
-	{0x011862, 0x0},
-	{0x020077, 0x0},
-	{0x010001, 0x0},
-	{0x011001, 0x0},
-	{0x010040, 0x0},
-	{0x010140, 0x0},
-	{0x010240, 0x0},
-	{0x010340, 0x0},
-	{0x010440, 0x0},
-	{0x010540, 0x0},
-	{0x010640, 0x0},
-	{0x010740, 0x0},
-	{0x010840, 0x0},
-	{0x010030, 0x0},
-	{0x010130, 0x0},
-	{0x010230, 0x0},
-	{0x010330, 0x0},
-	{0x010430, 0x0},
-	{0x010530, 0x0},
-	{0x010630, 0x0},
-	{0x010730, 0x0},
-	{0x010830, 0x0},
-	{0x011040, 0x0},
-	{0x011140, 0x0},
-	{0x011240, 0x0},
-	{0x011340, 0x0},
-	{0x011440, 0x0},
-	{0x011540, 0x0},
-	{0x011640, 0x0},
-	{0x011740, 0x0},
-	{0x011840, 0x0},
-	{0x011030, 0x0},
-	{0x011130, 0x0},
-	{0x011230, 0x0},
-	{0x011330, 0x0},
-	{0x011430, 0x0},
-	{0x011530, 0x0},
-	{0x011630, 0x0},
-	{0x011730, 0x0},
-	{0x011830, 0x0},
-};
-
-/* P0 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_cfg[] = {
-	{0x000d0000, 0x00000000},
-	{0x00054000, 0x00000000},
-	{0x00054001, 0x00000000},
-	{0x00054002, 0x00000000},
-	{0x00054003, 0x00000c80},
-	{0x00054004, 0x00000002},
-	{0x00054005, 0x00000000},
-	{0x00054006, 0x00000011},
-	{0x00054007, 0x00000000},
-	{0x00054008, 0x0000131f},
-	{0x00054009, 0x000000c8},
-	{0x0005400a, 0x00000000},
-	{0x0005400b, 0x00000002},
-	{0x0005400c, 0x00000000},
-	{0x0005400d, 0x00000000},
-	{0x0005400e, 0x00000000},
-	{0x0005400f, 0x00000100},
-	{0x00054010, 0x00000000},
-	{0x00054011, 0x00000000},
-	{0x00054012, 0x00000310},
-	{0x00054013, 0x00000000},
-	{0x00054014, 0x00000000},
-	{0x00054015, 0x00000000},
-	{0x00054016, 0x00000000},
-	{0x00054017, 0x00000000},
-	{0x00054018, 0x00000000},
-	{0x00054019, 0x00002dd4},
-	{0x0005401a, 0x00000031},
-	{0x0005401b, 0x00004d66},
-	{0x0005401c, 0x00004a00},
-	{0x0005401d, 0x00000000},
-	{0x0005401e, 0x00000016},
-	{0x0005401f, 0x00002dd4},
-	{0x00054020, 0x00000031},
-	{0x00054021, 0x00004d66},
-	{0x00054022, 0x00004a00},
-	{0x00054023, 0x00000000},
-	{0x00054024, 0x0000002e},
-	{0x00054025, 0x00000000},
-	{0x00054026, 0x00000000},
-	{0x00054027, 0x00000000},
-	{0x00054028, 0x00000000},
-	{0x00054029, 0x00000000},
-	{0x0005402a, 0x00000000},
-	{0x0005402b, 0x00000000},
-	{0x0005402c, 0x00000000},
-	{0x0005402d, 0x00000000},
-	{0x0005402e, 0x00000000},
-	{0x0005402f, 0x00000000},
-	{0x00054030, 0x00000000},
-	{0x00054031, 0x00000000},
-	{0x00054032, 0x0000d400},
-	{0x00054033, 0x0000312d},
-	{0x00054034, 0x00006600},
-	{0x00054035, 0x0000004d},
-	{0x00054036, 0x0000004a},
-	{0x00054037, 0x00001600},
-	{0x00054038, 0x0000d400},
-	{0x00054039, 0x0000312d},
-	{0x0005403a, 0x00006600},
-	{0x0005403b, 0x0000004d},
-	{0x0005403c, 0x0000004a},
-	{0x0005403d, 0x00002e00},
-	{0x0005403e, 0x00000000},
-	{0x0005403f, 0x00000000},
-	{0x00054040, 0x00000000},
-	{0x00054041, 0x00000000},
-	{0x00054042, 0x00000000},
-	{0x00054043, 0x00000000},
-	{0x00054044, 0x00000000},
-	{0x000d0000, 0x00000001},
-};
-
-/* P1 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp1_cfg[] = {
-	{0x000d0000, 0x00000000},
-	{0x00054000, 0x00000000},
-	{0x00054001, 0x00000000},
-	{0x00054002, 0x00000101},
-	{0x00054003, 0x00000190},
-	{0x00054004, 0x00000002},
-	{0x00054005, 0x00000000},
-	{0x00054006, 0x00000011},
-	{0x00054007, 0x00000000},
-	{0x00054008, 0x0000121f},
-	{0x00054009, 0x000000c8},
-	{0x0005400a, 0x00000000},
-	{0x0005400b, 0x00000002},
-	{0x0005400c, 0x00000000},
-	{0x0005400d, 0x00000000},
-	{0x0005400e, 0x00000000},
-	{0x0005400f, 0x00000100},
-	{0x00054010, 0x00000000},
-	{0x00054011, 0x00000000},
-	{0x00054012, 0x00000310},
-	{0x00054013, 0x00000000},
-	{0x00054014, 0x00000000},
-	{0x00054015, 0x00000000},
-	{0x00054016, 0x00000000},
-	{0x00054017, 0x00000000},
-	{0x00054018, 0x00000000},
-	{0x00054019, 0x00000084},
-	{0x0005401a, 0x00000031},
-	{0x0005401b, 0x00004d66},
-	{0x0005401c, 0x00004a00},
-	{0x0005401d, 0x00000000},
-	{0x0005401e, 0x00000016},
-	{0x0005401f, 0x00000084},
-	{0x00054020, 0x00000031},
-	{0x00054021, 0x00004d66},
-	{0x00054022, 0x00004a00},
-	{0x00054023, 0x00000000},
-	{0x00054024, 0x0000002e},
-	{0x00054025, 0x00000000},
-	{0x00054026, 0x00000000},
-	{0x00054027, 0x00000000},
-	{0x00054028, 0x00000000},
-	{0x00054029, 0x00000000},
-	{0x0005402a, 0x00000000},
-	{0x0005402b, 0x00000000},
-	{0x0005402c, 0x00000000},
-	{0x0005402d, 0x00000000},
-	{0x0005402e, 0x00000000},
-	{0x0005402f, 0x00000000},
-	{0x00054030, 0x00000000},
-	{0x00054031, 0x00000000},
-	{0x00054032, 0x00008400},
-	{0x00054033, 0x00003100},
-	{0x00054034, 0x00006600},
-	{0x00054035, 0x0000004d},
-	{0x00054036, 0x0000004a},
-	{0x00054037, 0x00001600},
-	{0x00054038, 0x00008400},
-	{0x00054039, 0x00003100},
-	{0x0005403a, 0x00006600},
-	{0x0005403b, 0x0000004d},
-	{0x0005403c, 0x0000004a},
-	{0x0005403d, 0x00002e00},
-	{0x0005403e, 0x00000000},
-	{0x0005403f, 0x00000000},
-	{0x00054040, 0x00000000},
-	{0x00054041, 0x00000000},
-	{0x00054042, 0x00000000},
-	{0x00054043, 0x00000000},
-	{0x00054044, 0x00000000},
-	{0x000d0000, 0x00000001},
-};
-
-
-/* P2 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp2_cfg[] = {
-	{0x000d0000, 0x00000000},
-	{0x00054000, 0x00000000},
-	{0x00054001, 0x00000000},
-	{0x00054002, 0x00000102},
-	{0x00054003, 0x00000064},
-	{0x00054004, 0x00000002},
-	{0x00054005, 0x00000000},
-	{0x00054006, 0x00000011},
-	{0x00054007, 0x00000000},
-	{0x00054008, 0x0000121f},
-	{0x00054009, 0x000000c8},
-	{0x0005400a, 0x00000000},
-	{0x0005400b, 0x00000002},
-	{0x0005400c, 0x00000000},
-	{0x0005400d, 0x00000000},
-	{0x0005400e, 0x00000000},
-	{0x0005400f, 0x00000100},
-	{0x00054010, 0x00000000},
-	{0x00054011, 0x00000000},
-	{0x00054012, 0x00000310},
-	{0x00054013, 0x00000000},
-	{0x00054014, 0x00000000},
-	{0x00054015, 0x00000000},
-	{0x00054016, 0x00000000},
-	{0x00054017, 0x00000000},
-	{0x00054018, 0x00000000},
-	{0x00054019, 0x00000084},
-	{0x0005401a, 0x00000031},
-	{0x0005401b, 0x00004d66},
-	{0x0005401c, 0x00004a00},
-	{0x0005401d, 0x00000000},
-	{0x0005401e, 0x00000016},
-	{0x0005401f, 0x00000084},
-	{0x00054020, 0x00000031},
-	{0x00054021, 0x00004d66},
-	{0x00054022, 0x00004a00},
-	{0x00054023, 0x00000000},
-	{0x00054024, 0x0000002e},
-	{0x00054025, 0x00000000},
-	{0x00054026, 0x00000000},
-	{0x00054027, 0x00000000},
-	{0x00054028, 0x00000000},
-	{0x00054029, 0x00000000},
-	{0x0005402a, 0x00000000},
-	{0x0005402b, 0x00000000},
-	{0x0005402c, 0x00000000},
-	{0x0005402d, 0x00000000},
-	{0x0005402e, 0x00000000},
-	{0x0005402f, 0x00000000},
-	{0x00054030, 0x00000000},
-	{0x00054031, 0x00000000},
-	{0x00054032, 0x00008400},
-	{0x00054033, 0x00003100},
-	{0x00054034, 0x00006600},
-	{0x00054035, 0x0000004d},
-	{0x00054036, 0x0000004a},
-	{0x00054037, 0x00001600},
-	{0x00054038, 0x00008400},
-	{0x00054039, 0x00003100},
-	{0x0005403a, 0x00006600},
-	{0x0005403b, 0x0000004d},
-	{0x0005403c, 0x0000004a},
-	{0x0005403d, 0x00002e00},
-	{0x0005403e, 0x00000000},
-	{0x0005403f, 0x00000000},
-	{0x00054040, 0x00000000},
-	{0x00054041, 0x00000000},
-	{0x00054042, 0x00000000},
-	{0x00054043, 0x00000000},
-	{0x00054044, 0x00000000},
-	{0x000d0000, 0x00000001},
-};
-
-/* P0 2D message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
-	{0x000d0000, 0x00000000},
-	{0x00054000, 0x00000000},
-	{0x00054001, 0x00000000},
-	{0x00054002, 0x00000000},
-	{0x00054003, 0x00000c80},
-	{0x00054004, 0x00000002},
-	{0x00054005, 0x00000000},
-	{0x00054006, 0x00000011},
-	{0x00054007, 0x00000000},
-	{0x00054008, 0x00000061},
-	{0x00054009, 0x000000c8},
-	{0x0005400a, 0x00000000},
-	{0x0005400b, 0x00000002},
-	{0x0005400c, 0x00000000},
-	{0x0005400d, 0x00000000},
-	{0x0005400e, 0x00000000},
-	{0x0005400f, 0x00000100},
-	{0x00054010, 0x00001f7f},
-	{0x00054011, 0x00000000},
-	{0x00054012, 0x00000310},
-	{0x00054013, 0x00000000},
-	{0x00054014, 0x00000000},
-	{0x00054015, 0x00000000},
-	{0x00054016, 0x00000000},
-	{0x00054017, 0x00000000},
-	{0x00054018, 0x00000000},
-	{0x00054019, 0x00002dd4},
-	{0x0005401a, 0x00000031},
-	{0x0005401b, 0x00004d66},
-	{0x0005401c, 0x00004a00},
-	{0x0005401d, 0x00000000},
-	{0x0005401e, 0x00000016},
-	{0x0005401f, 0x00002dd4},
-	{0x00054020, 0x00000031},
-	{0x00054021, 0x00004d66},
-	{0x00054022, 0x00004a00},
-	{0x00054023, 0x00000000},
-	{0x00054024, 0x0000002e},
-	{0x00054025, 0x00000000},
-	{0x00054026, 0x00000000},
-	{0x00054027, 0x00000000},
-	{0x00054028, 0x00000000},
-	{0x00054029, 0x00000000},
-	{0x0005402a, 0x00000000},
-	{0x0005402b, 0x00000000},
-	{0x0005402c, 0x00000000},
-	{0x0005402d, 0x00000000},
-	{0x0005402e, 0x00000000},
-	{0x0005402f, 0x00000000},
-	{0x00054030, 0x00000000},
-	{0x00054031, 0x00000000},
-	{0x00054032, 0x0000d400},
-	{0x00054033, 0x0000312d},
-	{0x00054034, 0x00006600},
-	{0x00054035, 0x0000004d},
-	{0x00054036, 0x0000004a},
-	{0x00054037, 0x00001600},
-	{0x00054038, 0x0000d400},
-	{0x00054039, 0x0000312d},
-	{0x0005403a, 0x00006600},
-	{0x0005403b, 0x0000004d},
-	{0x0005403c, 0x0000004a},
-	{0x0005403d, 0x00002e00},
-	{0x0005403e, 0x00000000},
-	{0x0005403f, 0x00000000},
-	{0x00054040, 0x00000000},
-	{0x00054041, 0x00000000},
-	{0x00054042, 0x00000000},
-	{0x00054043, 0x00000000},
-	{0x00054044, 0x00000000},
-	{0x000d0000, 0x00000001},
-};
-
-/* DRAM PHY init engine image */
-struct dram_cfg_param ddr_phy_pie[] = {
-	{0xd0000, 0x0},
-	{0x90000, 0x10},
-	{0x90001, 0x400},
-	{0x90002, 0x10e},
-	{0x90003, 0x0},
-	{0x90004, 0x0},
-	{0x90005, 0x8},
-	{0x90029, 0xb},
-	{0x9002a, 0x480},
-	{0x9002b, 0x109},
-	{0x9002c, 0x8},
-	{0x9002d, 0x448},
-	{0x9002e, 0x139},
-	{0x9002f, 0x8},
-	{0x90030, 0x478},
-	{0x90031, 0x109},
-	{0x90032, 0x0},
-	{0x90033, 0xe8},
-	{0x90034, 0x109},
-	{0x90035, 0x2},
-	{0x90036, 0x10},
-	{0x90037, 0x139},
-	{0x90038, 0xb},
-	{0x90039, 0x7c0},
-	{0x9003a, 0x139},
-	{0x9003b, 0x44},
-	{0x9003c, 0x633},
-	{0x9003d, 0x159},
-	{0x9003e, 0x14f},
-	{0x9003f, 0x630},
-	{0x90040, 0x159},
-	{0x90041, 0x47},
-	{0x90042, 0x633},
-	{0x90043, 0x149},
-	{0x90044, 0x4f},
-	{0x90045, 0x633},
-	{0x90046, 0x179},
-	{0x90047, 0x8},
-	{0x90048, 0xe0},
-	{0x90049, 0x109},
-	{0x9004a, 0x0},
-	{0x9004b, 0x7c8},
-	{0x9004c, 0x109},
-	{0x9004d, 0x0},
-	{0x9004e, 0x1},
-	{0x9004f, 0x8},
-	{0x90050, 0x0},
-	{0x90051, 0x45a},
-	{0x90052, 0x9},
-	{0x90053, 0x0},
-	{0x90054, 0x448},
-	{0x90055, 0x109},
-	{0x90056, 0x40},
-	{0x90057, 0x633},
-	{0x90058, 0x179},
-	{0x90059, 0x1},
-	{0x9005a, 0x618},
-	{0x9005b, 0x109},
-	{0x9005c, 0x40c0},
-	{0x9005d, 0x633},
-	{0x9005e, 0x149},
-	{0x9005f, 0x8},
-	{0x90060, 0x4},
-	{0x90061, 0x48},
-	{0x90062, 0x4040},
-	{0x90063, 0x633},
-	{0x90064, 0x149},
-	{0x90065, 0x0},
-	{0x90066, 0x4},
-	{0x90067, 0x48},
-	{0x90068, 0x40},
-	{0x90069, 0x633},
-	{0x9006a, 0x149},
-	{0x9006b, 0x10},
-	{0x9006c, 0x4},
-	{0x9006d, 0x18},
-	{0x9006e, 0x0},
-	{0x9006f, 0x4},
-	{0x90070, 0x78},
-	{0x90071, 0x549},
-	{0x90072, 0x633},
-	{0x90073, 0x159},
-	{0x90074, 0xd49},
-	{0x90075, 0x633},
-	{0x90076, 0x159},
-	{0x90077, 0x94a},
-	{0x90078, 0x633},
-	{0x90079, 0x159},
-	{0x9007a, 0x441},
-	{0x9007b, 0x633},
-	{0x9007c, 0x149},
-	{0x9007d, 0x42},
-	{0x9007e, 0x633},
-	{0x9007f, 0x149},
-	{0x90080, 0x1},
-	{0x90081, 0x633},
-	{0x90082, 0x149},
-	{0x90083, 0x0},
-	{0x90084, 0xe0},
-	{0x90085, 0x109},
-	{0x90086, 0xa},
-	{0x90087, 0x10},
-	{0x90088, 0x109},
-	{0x90089, 0x9},
-	{0x9008a, 0x3c0},
-	{0x9008b, 0x149},
-	{0x9008c, 0x9},
-	{0x9008d, 0x3c0},
-	{0x9008e, 0x159},
-	{0x9008f, 0x18},
-	{0x90090, 0x10},
-	{0x90091, 0x109},
-	{0x90092, 0x0},
-	{0x90093, 0x3c0},
-	{0x90094, 0x109},
-	{0x90095, 0x18},
-	{0x90096, 0x4},
-	{0x90097, 0x48},
-	{0x90098, 0x18},
-	{0x90099, 0x4},
-	{0x9009a, 0x58},
-	{0x9009b, 0xb},
-	{0x9009c, 0x10},
-	{0x9009d, 0x109},
-	{0x9009e, 0x1},
-	{0x9009f, 0x10},
-	{0x900a0, 0x109},
-	{0x900a1, 0x5},
-	{0x900a2, 0x7c0},
-	{0x900a3, 0x109},
-	{0x40000, 0x811},
-	{0x40020, 0x880},
-	{0x40040, 0x0},
-	{0x40060, 0x0},
-	{0x40001, 0x4008},
-	{0x40021, 0x83},
-	{0x40041, 0x4f},
-	{0x40061, 0x0},
-	{0x40002, 0x4040},
-	{0x40022, 0x83},
-	{0x40042, 0x51},
-	{0x40062, 0x0},
-	{0x40003, 0x811},
-	{0x40023, 0x880},
-	{0x40043, 0x0},
-	{0x40063, 0x0},
-	{0x40004, 0x720},
-	{0x40024, 0xf},
-	{0x40044, 0x1740},
-	{0x40064, 0x0},
-	{0x40005, 0x16},
-	{0x40025, 0x83},
-	{0x40045, 0x4b},
-	{0x40065, 0x0},
-	{0x40006, 0x716},
-	{0x40026, 0xf},
-	{0x40046, 0x2001},
-	{0x40066, 0x0},
-	{0x40007, 0x716},
-	{0x40027, 0xf},
-	{0x40047, 0x2800},
-	{0x40067, 0x0},
-	{0x40008, 0x716},
-	{0x40028, 0xf},
-	{0x40048, 0xf00},
-	{0x40068, 0x0},
-	{0x40009, 0x720},
-	{0x40029, 0xf},
-	{0x40049, 0x1400},
-	{0x40069, 0x0},
-	{0x4000a, 0xe08},
-	{0x4002a, 0xc15},
-	{0x4004a, 0x0},
-	{0x4006a, 0x0},
-	{0x4000b, 0x625},
-	{0x4002b, 0x15},
-	{0x4004b, 0x0},
-	{0x4006b, 0x0},
-	{0x4000c, 0x4028},
-	{0x4002c, 0x80},
-	{0x4004c, 0x0},
-	{0x4006c, 0x0},
-	{0x4000d, 0xe08},
-	{0x4002d, 0xc1a},
-	{0x4004d, 0x0},
-	{0x4006d, 0x0},
-	{0x4000e, 0x625},
-	{0x4002e, 0x1a},
-	{0x4004e, 0x0},
-	{0x4006e, 0x0},
-	{0x4000f, 0x4040},
-	{0x4002f, 0x80},
-	{0x4004f, 0x0},
-	{0x4006f, 0x0},
-	{0x40010, 0x2604},
-	{0x40030, 0x15},
-	{0x40050, 0x0},
-	{0x40070, 0x0},
-	{0x40011, 0x708},
-	{0x40031, 0x5},
-	{0x40051, 0x0},
-	{0x40071, 0x2002},
-	{0x40012, 0x8},
-	{0x40032, 0x80},
-	{0x40052, 0x0},
-	{0x40072, 0x0},
-	{0x40013, 0x2604},
-	{0x40033, 0x1a},
-	{0x40053, 0x0},
-	{0x40073, 0x0},
-	{0x40014, 0x708},
-	{0x40034, 0xa},
-	{0x40054, 0x0},
-	{0x40074, 0x2002},
-	{0x40015, 0x4040},
-	{0x40035, 0x80},
-	{0x40055, 0x0},
-	{0x40075, 0x0},
-	{0x40016, 0x60a},
-	{0x40036, 0x15},
-	{0x40056, 0x1200},
-	{0x40076, 0x0},
-	{0x40017, 0x61a},
-	{0x40037, 0x15},
-	{0x40057, 0x1300},
-	{0x40077, 0x0},
-	{0x40018, 0x60a},
-	{0x40038, 0x1a},
-	{0x40058, 0x1200},
-	{0x40078, 0x0},
-	{0x40019, 0x642},
-	{0x40039, 0x1a},
-	{0x40059, 0x1300},
-	{0x40079, 0x0},
-	{0x4001a, 0x4808},
-	{0x4003a, 0x880},
-	{0x4005a, 0x0},
-	{0x4007a, 0x0},
-	{0x900a4, 0x0},
-	{0x900a5, 0x790},
-	{0x900a6, 0x11a},
-	{0x900a7, 0x8},
-	{0x900a8, 0x7aa},
-	{0x900a9, 0x2a},
-	{0x900aa, 0x10},
-	{0x900ab, 0x7b2},
-	{0x900ac, 0x2a},
-	{0x900ad, 0x0},
-	{0x900ae, 0x7c8},
-	{0x900af, 0x109},
-	{0x900b0, 0x10},
-	{0x900b1, 0x10},
-	{0x900b2, 0x109},
-	{0x900b3, 0x10},
-	{0x900b4, 0x2a8},
-	{0x900b5, 0x129},
-	{0x900b6, 0x8},
-	{0x900b7, 0x370},
-	{0x900b8, 0x129},
-	{0x900b9, 0xa},
-	{0x900ba, 0x3c8},
-	{0x900bb, 0x1a9},
-	{0x900bc, 0xc},
-	{0x900bd, 0x408},
-	{0x900be, 0x199},
-	{0x900bf, 0x14},
-	{0x900c0, 0x790},
-	{0x900c1, 0x11a},
-	{0x900c2, 0x8},
-	{0x900c3, 0x4},
-	{0x900c4, 0x18},
-	{0x900c5, 0xe},
-	{0x900c6, 0x408},
-	{0x900c7, 0x199},
-	{0x900c8, 0x8},
-	{0x900c9, 0x8568},
-	{0x900ca, 0x108},
-	{0x900cb, 0x18},
-	{0x900cc, 0x790},
-	{0x900cd, 0x16a},
-	{0x900ce, 0x8},
-	{0x900cf, 0x1d8},
-	{0x900d0, 0x169},
-	{0x900d1, 0x10},
-	{0x900d2, 0x8558},
-	{0x900d3, 0x168},
-	{0x900d4, 0x70},
-	{0x900d5, 0x788},
-	{0x900d6, 0x16a},
-	{0x900d7, 0x1ff8},
-	{0x900d8, 0x85a8},
-	{0x900d9, 0x1e8},
-	{0x900da, 0x50},
-	{0x900db, 0x798},
-	{0x900dc, 0x16a},
-	{0x900dd, 0x60},
-	{0x900de, 0x7a0},
-	{0x900df, 0x16a},
-	{0x900e0, 0x8},
-	{0x900e1, 0x8310},
-	{0x900e2, 0x168},
-	{0x900e3, 0x8},
-	{0x900e4, 0xa310},
-	{0x900e5, 0x168},
-	{0x900e6, 0xa},
-	{0x900e7, 0x408},
-	{0x900e8, 0x169},
-	{0x900e9, 0x6e},
-	{0x900ea, 0x0},
-	{0x900eb, 0x68},
-	{0x900ec, 0x0},
-	{0x900ed, 0x408},
-	{0x900ee, 0x169},
-	{0x900ef, 0x0},
-	{0x900f0, 0x8310},
-	{0x900f1, 0x168},
-	{0x900f2, 0x0},
-	{0x900f3, 0xa310},
-	{0x900f4, 0x168},
-	{0x900f5, 0x1ff8},
-	{0x900f6, 0x85a8},
-	{0x900f7, 0x1e8},
-	{0x900f8, 0x68},
-	{0x900f9, 0x798},
-	{0x900fa, 0x16a},
-	{0x900fb, 0x78},
-	{0x900fc, 0x7a0},
-	{0x900fd, 0x16a},
-	{0x900fe, 0x68},
-	{0x900ff, 0x790},
-	{0x90100, 0x16a},
-	{0x90101, 0x8},
-	{0x90102, 0x8b10},
-	{0x90103, 0x168},
-	{0x90104, 0x8},
-	{0x90105, 0xab10},
-	{0x90106, 0x168},
-	{0x90107, 0xa},
-	{0x90108, 0x408},
-	{0x90109, 0x169},
-	{0x9010a, 0x58},
-	{0x9010b, 0x0},
-	{0x9010c, 0x68},
-	{0x9010d, 0x0},
-	{0x9010e, 0x408},
-	{0x9010f, 0x169},
-	{0x90110, 0x0},
-	{0x90111, 0x8b10},
-	{0x90112, 0x168},
-	{0x90113, 0x1},
-	{0x90114, 0xab10},
-	{0x90115, 0x168},
-	{0x90116, 0x0},
-	{0x90117, 0x1d8},
-	{0x90118, 0x169},
-	{0x90119, 0x80},
-	{0x9011a, 0x790},
-	{0x9011b, 0x16a},
-	{0x9011c, 0x18},
-	{0x9011d, 0x7aa},
-	{0x9011e, 0x6a},
-	{0x9011f, 0xa},
-	{0x90120, 0x0},
-	{0x90121, 0x1e9},
-	{0x90122, 0x8},
-	{0x90123, 0x8080},
-	{0x90124, 0x108},
-	{0x90125, 0xf},
-	{0x90126, 0x408},
-	{0x90127, 0x169},
-	{0x90128, 0xc},
-	{0x90129, 0x0},
-	{0x9012a, 0x68},
-	{0x9012b, 0x9},
-	{0x9012c, 0x0},
-	{0x9012d, 0x1a9},
-	{0x9012e, 0x0},
-	{0x9012f, 0x408},
-	{0x90130, 0x169},
-	{0x90131, 0x0},
-	{0x90132, 0x8080},
-	{0x90133, 0x108},
-	{0x90134, 0x8},
-	{0x90135, 0x7aa},
-	{0x90136, 0x6a},
-	{0x90137, 0x0},
-	{0x90138, 0x8568},
-	{0x90139, 0x108},
-	{0x9013a, 0xb7},
-	{0x9013b, 0x790},
-	{0x9013c, 0x16a},
-	{0x9013d, 0x1f},
-	{0x9013e, 0x0},
-	{0x9013f, 0x68},
-	{0x90140, 0x8},
-	{0x90141, 0x8558},
-	{0x90142, 0x168},
-	{0x90143, 0xf},
-	{0x90144, 0x408},
-	{0x90145, 0x169},
-	{0x90146, 0xd},
-	{0x90147, 0x0},
-	{0x90148, 0x68},
-	{0x90149, 0x0},
-	{0x9014a, 0x408},
-	{0x9014b, 0x169},
-	{0x9014c, 0x0},
-	{0x9014d, 0x8558},
-	{0x9014e, 0x168},
-	{0x9014f, 0x8},
-	{0x90150, 0x3c8},
-	{0x90151, 0x1a9},
-	{0x90152, 0x3},
-	{0x90153, 0x370},
-	{0x90154, 0x129},
-	{0x90155, 0x20},
-	{0x90156, 0x2aa},
-	{0x90157, 0x9},
-	{0x90158, 0x0},
-	{0x90159, 0x400},
-	{0x9015a, 0x10e},
-	{0x9015b, 0x8},
-	{0x9015c, 0xe8},
-	{0x9015d, 0x109},
-	{0x9015e, 0x0},
-	{0x9015f, 0x8140},
-	{0x90160, 0x10c},
-	{0x90161, 0x10},
-	{0x90162, 0x8138},
-	{0x90163, 0x10c},
-	{0x90164, 0x8},
-	{0x90165, 0x7c8},
-	{0x90166, 0x101},
-	{0x90167, 0x8},
-	{0x90168, 0x448},
-	{0x90169, 0x109},
-	{0x9016a, 0xf},
-	{0x9016b, 0x7c0},
-	{0x9016c, 0x109},
-	{0x9016d, 0x0},
-	{0x9016e, 0xe8},
-	{0x9016f, 0x109},
-	{0x90170, 0x47},
-	{0x90171, 0x630},
-	{0x90172, 0x109},
-	{0x90173, 0x8},
-	{0x90174, 0x618},
-	{0x90175, 0x109},
-	{0x90176, 0x8},
-	{0x90177, 0xe0},
-	{0x90178, 0x109},
-	{0x90179, 0x0},
-	{0x9017a, 0x7c8},
-	{0x9017b, 0x109},
-	{0x9017c, 0x8},
-	{0x9017d, 0x8140},
-	{0x9017e, 0x10c},
-	{0x9017f, 0x0},
-	{0x90180, 0x1},
-	{0x90181, 0x8},
-	{0x90182, 0x8},
-	{0x90183, 0x4},
-	{0x90184, 0x8},
-	{0x90185, 0x8},
-	{0x90186, 0x7c8},
-	{0x90187, 0x101},
-	{0x90006, 0x0},
-	{0x90007, 0x0},
-	{0x90008, 0x8},
-	{0x90009, 0x0},
-	{0x9000a, 0x0},
-	{0x9000b, 0x0},
-	{0xd00e7, 0x400},
-	{0x90017, 0x0},
-	{0x9001f, 0x29},
-	{0x90026, 0x6a},
-	{0x400d0, 0x0},
-	{0x400d1, 0x101},
-	{0x400d2, 0x105},
-	{0x400d3, 0x107},
-	{0x400d4, 0x10f},
-	{0x400d5, 0x202},
-	{0x400d6, 0x20a},
-	{0x400d7, 0x20b},
-	{0x2003a, 0x2},
-	{0x2000b, 0x64},
-	{0x2000c, 0xc8},
-	{0x2000d, 0x7d0},
-	{0x2000e, 0x2c},
-	{0x12000b, 0xc},
-	{0x12000c, 0x19},
-	{0x12000d, 0xfa},
-	{0x12000e, 0x10},
-	{0x22000b, 0x3},
-	{0x22000c, 0x6},
-	{0x22000d, 0x3e},
-	{0x22000e, 0x10},
-	{0x9000c, 0x0},
-	{0x9000d, 0x173},
-	{0x9000e, 0x60},
-	{0x9000f, 0x6110},
-	{0x90010, 0x2152},
-	{0x90011, 0xdfbd},
-	{0x90012, 0x2060},
-	{0x90013, 0x6152},
-	{0x20010, 0x5a},
-	{0x20011, 0x3},
-	{0x40080, 0xe0},
-	{0x40081, 0x12},
-	{0x40082, 0xe0},
-	{0x40083, 0x12},
-	{0x40084, 0xe0},
-	{0x40085, 0x12},
-	{0x140080, 0xe0},
-	{0x140081, 0x12},
-	{0x140082, 0xe0},
-	{0x140083, 0x12},
-	{0x140084, 0xe0},
-	{0x140085, 0x12},
-	{0x240080, 0xe0},
-	{0x240081, 0x12},
-	{0x240082, 0xe0},
-	{0x240083, 0x12},
-	{0x240084, 0xe0},
-	{0x240085, 0x12},
-	{0x400fd, 0xf},
-	{0x10011, 0x1},
-	{0x10012, 0x1},
-	{0x10013, 0x180},
-	{0x10018, 0x1},
-	{0x10002, 0x6209},
-	{0x100b2, 0x1},
-	{0x101b4, 0x1},
-	{0x102b4, 0x1},
-	{0x103b4, 0x1},
-	{0x104b4, 0x1},
-	{0x105b4, 0x1},
-	{0x106b4, 0x1},
-	{0x107b4, 0x1},
-	{0x108b4, 0x1},
-	{0x11011, 0x1},
-	{0x11012, 0x1},
-	{0x11013, 0x180},
-	{0x11018, 0x1},
-	{0x11002, 0x6209},
-	{0x110b2, 0x1},
-	{0x111b4, 0x1},
-	{0x112b4, 0x1},
-	{0x113b4, 0x1},
-	{0x114b4, 0x1},
-	{0x115b4, 0x1},
-	{0x116b4, 0x1},
-	{0x117b4, 0x1},
-	{0x118b4, 0x1},
-	{0x20089, 0x1},
-	{0x20088, 0x19},
-	{0xc0080, 0x2},
-	{0xd0000, 0x1},
-};
-
-struct dram_fsp_msg ddr_dram_fsp_msg[] = {
-	{
-		/* P0 3200mts 1D */
-		.drate = 3200,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp0_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_cfg),
-	},
-	{
-		/* P1 400mts 1D */
-		.drate = 400,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp1_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp1_cfg),
-	},
-	{
-		/* P2 100mts 1D */
-		.drate = 100,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp2_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp2_cfg),
-	},
-	{
-		/* P0 3200mts 2D */
-		.drate = 3200,
-		.fw_type = FW_2D_IMAGE,
-		.fsp_cfg = ddr_fsp0_2d_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_2d_cfg),
-	},
-};
-
-/* ddr timing config params */
-struct dram_timing_info dram_timing = {
-	.ddrc_cfg = ddr_ddrc_cfg,
-	.ddrc_cfg_num = ARRAY_SIZE(ddr_ddrc_cfg),
-	.ddrphy_cfg = ddr_ddrphy_cfg,
-	.ddrphy_cfg_num = ARRAY_SIZE(ddr_ddrphy_cfg),
-	.fsp_msg = ddr_dram_fsp_msg,
-	.fsp_msg_num = ARRAY_SIZE(ddr_dram_fsp_msg),
-	.ddrphy_trained_csr = ddr_ddrphy_trained_csr,
-	.ddrphy_trained_csr_num = ARRAY_SIZE(ddr_ddrphy_trained_csr),
-	.ddrphy_pie = ddr_phy_pie,
-	.ddrphy_pie_num = ARRAY_SIZE(ddr_phy_pie),
-	.fsp_table = { 3200, 400, 100, },
-};
diff --git a/board/freescale/imx8mn_a100/lpddr4_timing_1g.c b/board/freescale/imx8mn_a100/lpddr4_timing_1g.c
deleted file mode 100644
index 729f4da304..0000000000
--- a/board/freescale/imx8mn_a100/lpddr4_timing_1g.c
+++ /dev/null
@@ -1,1447 +0,0 @@
-/*
- * Copyright 2019 NXP
- *
- * SPDX-License-Identifier:	GPL-2.0+
- *
- * Generated code from MX8M_DDR_tool
- * Align with uboot version:
- * imx_v2018.03_4.14.78_1.0.0_ga ~ imx_v2018.04_4.19.35_1.1.0_ga
- */
-
-#include <linux/kernel.h>
-#include <asm/arch/ddr.h>
-#include <asm/arch/lpddr4_define.h>
-
-struct dram_cfg_param ddr_ddrc_cfg[] = {
-	/** Initialize DDRC registers **/
-	{ 0x3d400304, 0x1 },
-	{ 0x3d400030, 0x1 },
-	{ 0x3d400000, 0xa1080020 },
-	{ 0x3d400020, 0x213 },
-	{ 0x3d400024, 0x3e800 },
-	{ 0x3d400064, 0x6100e0 },
-	{ 0x3d4000d0, 0xc003061c },
-	{ 0x3d4000d4, 0x9e0000 },
-	{ 0x3d4000dc, 0xd4002d },
-	{ 0x3d4000e0, 0x310000 },
-	{ 0x3d4000e8, 0x66004d },
-	{ 0x3d4000ec, 0x16004d },
-	{ 0x3d400100, 0x1a201b22 },
-	{ 0x3d400104, 0x60633 },
-	{ 0x3d40010c, 0xc0c000 },
-	{ 0x3d400110, 0xf04080f },
-	{ 0x3d400114, 0x2040c0c },
-	{ 0x3d400118, 0x1010007 },
-	{ 0x3d40011c, 0x401 },
-	{ 0x3d400130, 0x20600 },
-	{ 0x3d400134, 0xc100002 },
-	{ 0x3d400138, 0xe6 },
-	{ 0x3d400144, 0xa00050 },
-	{ 0x3d400180, 0x3200018 },
-	{ 0x3d400184, 0x28061a8 },
-	{ 0x3d400188, 0x0 },
-	{ 0x3d400190, 0x497820a },
-	{ 0x3d400194, 0x80303 },
-	{ 0x3d4001b4, 0x170a },
-	{ 0x3d4001a0, 0xe0400018 },
-	{ 0x3d4001a4, 0xdf00e4 },
-	{ 0x3d4001a8, 0x80000000 },
-	{ 0x3d4001b0, 0x11 },
-	{ 0x3d4001c0, 0x1 },
-	{ 0x3d4001c4, 0x1 },
-	{ 0x3d4000f4, 0xc99 },
-	{ 0x3d400108, 0x70e1617 },
-	{ 0x3d400200, 0x1f },
-	{ 0x3d40020c, 0x0 },
-	{ 0x3d400210, 0x1f1f },
-	{ 0x3d400204, 0x80808 },
-	{ 0x3d400214, 0x7070707 },
-	{ 0x3d400218, 0x7070707 },
-	{ 0x3d400250, 0x29001701 },
-	{ 0x3d400254, 0x2c },
-	{ 0x3d40025c, 0x4000030 },
-	{ 0x3d400264, 0x900093e7 },
-	{ 0x3d40026c, 0x2005574 },
-	{ 0x3d400400, 0x111 },
-	{ 0x3d400408, 0x72ff },
-	{ 0x3d400494, 0x2100e07 },
-	{ 0x3d400498, 0x620096 },
-	{ 0x3d40049c, 0x1100e07 },
-	{ 0x3d4004a0, 0xc8012c },
-	{ 0x3d402020, 0x11 },
-	{ 0x3d402024, 0x7d00 },
-	{ 0x3d402050, 0x20d040 },
-	{ 0x3d402064, 0xc001c },
-	{ 0x3d4020dc, 0x840000 },
-	{ 0x3d4020e0, 0x310000 },
-	{ 0x3d4020e8, 0x66004d },
-	{ 0x3d4020ec, 0x16004d },
-	{ 0x3d402100, 0xa040305 },
-	{ 0x3d402104, 0x30407 },
-	{ 0x3d402108, 0x203060b },
-	{ 0x3d40210c, 0x505000 },
-	{ 0x3d402110, 0x2040202 },
-	{ 0x3d402114, 0x2030202 },
-	{ 0x3d402118, 0x1010004 },
-	{ 0x3d40211c, 0x301 },
-	{ 0x3d402130, 0x20300 },
-	{ 0x3d402134, 0xa100002 },
-	{ 0x3d402138, 0x1d },
-	{ 0x3d402144, 0x14000a },
-	{ 0x3d402180, 0x640004 },
-	{ 0x3d402190, 0x3818200 },
-	{ 0x3d402194, 0x80303 },
-	{ 0x3d4021b4, 0x100 },
-	{ 0x3d4020f4, 0xc99 },
-	{ 0x3d403020, 0x11 },
-	{ 0x3d403024, 0x1f40 },
-	{ 0x3d403050, 0x20d040 },
-	{ 0x3d403064, 0x30007 },
-	{ 0x3d4030dc, 0x840000 },
-	{ 0x3d4030e0, 0x310000 },
-	{ 0x3d4030e8, 0x66004d },
-	{ 0x3d4030ec, 0x16004d },
-	{ 0x3d403100, 0xa010102 },
-	{ 0x3d403104, 0x30404 },
-	{ 0x3d403108, 0x203060b },
-	{ 0x3d40310c, 0x505000 },
-	{ 0x3d403110, 0x2040202 },
-	{ 0x3d403114, 0x2030202 },
-	{ 0x3d403118, 0x1010004 },
-	{ 0x3d40311c, 0x301 },
-	{ 0x3d403130, 0x20300 },
-	{ 0x3d403134, 0xa100002 },
-	{ 0x3d403138, 0x8 },
-	{ 0x3d403144, 0x50003 },
-	{ 0x3d403180, 0x190004 },
-	{ 0x3d403190, 0x3818200 },
-	{ 0x3d403194, 0x80303 },
-	{ 0x3d4031b4, 0x100 },
-	{ 0x3d4030f4, 0xc99 },
-	{ 0x3d400028, 0x0 },
-};
-
-/* PHY Initialize Configuration */
-struct dram_cfg_param ddr_ddrphy_cfg[] = {
-	{ 0x100a0, 0x0 },
-	{ 0x100a1, 0x1 },
-	{ 0x100a2, 0x2 },
-	{ 0x100a3, 0x3 },
-	{ 0x100a4, 0x4 },
-	{ 0x100a5, 0x5 },
-	{ 0x100a6, 0x6 },
-	{ 0x100a7, 0x7 },
-	{ 0x110a0, 0x0 },
-	{ 0x110a1, 0x1 },
-	{ 0x110a2, 0x3 },
-	{ 0x110a3, 0x4 },
-	{ 0x110a4, 0x5 },
-	{ 0x110a5, 0x2 },
-	{ 0x110a6, 0x7 },
-	{ 0x110a7, 0x6 },
-	{ 0x1005f, 0x1ff },
-	{ 0x1015f, 0x1ff },
-	{ 0x1105f, 0x1ff },
-	{ 0x1115f, 0x1ff },
-	{ 0x11005f, 0x1ff },
-	{ 0x11015f, 0x1ff },
-	{ 0x11105f, 0x1ff },
-	{ 0x11115f, 0x1ff },
-	{ 0x21005f, 0x1ff },
-	{ 0x21015f, 0x1ff },
-	{ 0x21105f, 0x1ff },
-	{ 0x21115f, 0x1ff },
-	{ 0x55, 0x1ff },
-	{ 0x1055, 0x1ff },
-	{ 0x2055, 0x1ff },
-	{ 0x3055, 0x1ff },
-	{ 0x4055, 0x1ff },
-	{ 0x5055, 0x1ff },
-	{ 0x6055, 0x1ff },
-	{ 0x7055, 0x1ff },
-	{ 0x8055, 0x1ff },
-	{ 0x9055, 0x1ff },
-	{ 0x200c5, 0x19 },
-	{ 0x1200c5, 0x7 },
-	{ 0x2200c5, 0x7 },
-	{ 0x2002e, 0x2 },
-	{ 0x12002e, 0x2 },
-	{ 0x22002e, 0x2 },
-	{ 0x90204, 0x0 },
-	{ 0x190204, 0x0 },
-	{ 0x290204, 0x0 },
-	{ 0x20024, 0x1a3 },
-	{ 0x2003a, 0x2 },
-	{ 0x120024, 0x1a3 },
-	{ 0x2003a, 0x2 },
-	{ 0x220024, 0x1a3 },
-	{ 0x2003a, 0x2 },
-	{ 0x20056, 0x3 },
-	{ 0x120056, 0x3 },
-	{ 0x220056, 0x3 },
-	{ 0x1004d, 0xe00 },
-	{ 0x1014d, 0xe00 },
-	{ 0x1104d, 0xe00 },
-	{ 0x1114d, 0xe00 },
-	{ 0x11004d, 0xe00 },
-	{ 0x11014d, 0xe00 },
-	{ 0x11104d, 0xe00 },
-	{ 0x11114d, 0xe00 },
-	{ 0x21004d, 0xe00 },
-	{ 0x21014d, 0xe00 },
-	{ 0x21104d, 0xe00 },
-	{ 0x21114d, 0xe00 },
-	{ 0x10049, 0xeba },
-	{ 0x10149, 0xeba },
-	{ 0x11049, 0xeba },
-	{ 0x11149, 0xeba },
-	{ 0x110049, 0xeba },
-	{ 0x110149, 0xeba },
-	{ 0x111049, 0xeba },
-	{ 0x111149, 0xeba },
-	{ 0x210049, 0xeba },
-	{ 0x210149, 0xeba },
-	{ 0x211049, 0xeba },
-	{ 0x211149, 0xeba },
-	{ 0x43, 0x63 },
-	{ 0x1043, 0x63 },
-	{ 0x2043, 0x63 },
-	{ 0x3043, 0x63 },
-	{ 0x4043, 0x63 },
-	{ 0x5043, 0x63 },
-	{ 0x6043, 0x63 },
-	{ 0x7043, 0x63 },
-	{ 0x8043, 0x63 },
-	{ 0x9043, 0x63 },
-	{ 0x20018, 0x1 },
-	{ 0x20075, 0x4 },
-	{ 0x20050, 0x0 },
-	{ 0x20008, 0x320 },
-	{ 0x120008, 0x64 },
-	{ 0x220008, 0x19 },
-	{ 0x20088, 0x9 },
-	{ 0x200b2, 0xdc },
-	{ 0x10043, 0x5a1 },
-	{ 0x10143, 0x5a1 },
-	{ 0x11043, 0x5a1 },
-	{ 0x11143, 0x5a1 },
-	{ 0x1200b2, 0xdc },
-	{ 0x110043, 0x5a1 },
-	{ 0x110143, 0x5a1 },
-	{ 0x111043, 0x5a1 },
-	{ 0x111143, 0x5a1 },
-	{ 0x2200b2, 0xdc },
-	{ 0x210043, 0x5a1 },
-	{ 0x210143, 0x5a1 },
-	{ 0x211043, 0x5a1 },
-	{ 0x211143, 0x5a1 },
-	{ 0x200fa, 0x1 },
-	{ 0x1200fa, 0x1 },
-	{ 0x2200fa, 0x1 },
-	{ 0x20019, 0x1 },
-	{ 0x120019, 0x1 },
-	{ 0x220019, 0x1 },
-	{ 0x200f0, 0x660 },
-	{ 0x200f1, 0x0 },
-	{ 0x200f2, 0x4444 },
-	{ 0x200f3, 0x8888 },
-	{ 0x200f4, 0x5665 },
-	{ 0x200f5, 0x0 },
-	{ 0x200f6, 0x0 },
-	{ 0x200f7, 0xf000 },
-	{ 0x20025, 0x0 },
-	{ 0x2002d, 0x0 },
-	{ 0x12002d, 0x0 },
-	{ 0x22002d, 0x0 },
-	{ 0x2005b, 0x7529 },
-	{ 0x2005c, 0x0 },
-	{ 0x200c7, 0x21 },
-	{ 0x200ca, 0x24 },
-	{ 0x200cc, 0x1f7 },
-	{ 0x1200c7, 0x21 },
-	{ 0x1200ca, 0x24 },
-	{ 0x1200cc, 0x1f7 },
-	{ 0x2200c7, 0x21 },
-	{ 0x2200ca, 0x24 },
-	{ 0x2200cc, 0x1f7 },
-	{ 0x2007d, 0x212 },
-	{ 0x12007d, 0x212 },
-	{ 0x22007d, 0x212 },
-	{ 0x2007c, 0x61 },
-	{ 0x12007c, 0x61 },
-	{ 0x22007c, 0x61 },
-	{ 0x1004a, 0x500 },
-	{ 0x1104a, 0x500 },
-	{ 0x2002c, 0x0 },
-};
-
-/* ddr phy trained csr */
-struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
-	{0x0200b2, 0x0},
-	{0x1200b2, 0x0},
-	{0x2200b2, 0x0},
-	{0x0200cb, 0x0},
-	{0x010043, 0x0},
-	{0x110043, 0x0},
-	{0x210043, 0x0},
-	{0x010143, 0x0},
-	{0x110143, 0x0},
-	{0x210143, 0x0},
-	{0x011043, 0x0},
-	{0x111043, 0x0},
-	{0x211043, 0x0},
-	{0x011143, 0x0},
-	{0x111143, 0x0},
-	{0x211143, 0x0},
-	{0x000080, 0x0},
-	{0x100080, 0x0},
-	{0x200080, 0x0},
-	{0x001080, 0x0},
-	{0x101080, 0x0},
-	{0x201080, 0x0},
-	{0x002080, 0x0},
-	{0x102080, 0x0},
-	{0x202080, 0x0},
-	{0x003080, 0x0},
-	{0x103080, 0x0},
-	{0x203080, 0x0},
-	{0x004080, 0x0},
-	{0x104080, 0x0},
-	{0x204080, 0x0},
-	{0x005080, 0x0},
-	{0x105080, 0x0},
-	{0x205080, 0x0},
-	{0x006080, 0x0},
-	{0x106080, 0x0},
-	{0x206080, 0x0},
-	{0x007080, 0x0},
-	{0x107080, 0x0},
-	{0x207080, 0x0},
-	{0x008080, 0x0},
-	{0x108080, 0x0},
-	{0x208080, 0x0},
-	{0x009080, 0x0},
-	{0x109080, 0x0},
-	{0x209080, 0x0},
-	{0x010080, 0x0},
-	{0x110080, 0x0},
-	{0x210080, 0x0},
-	{0x010180, 0x0},
-	{0x110180, 0x0},
-	{0x210180, 0x0},
-	{0x011080, 0x0},
-	{0x111080, 0x0},
-	{0x211080, 0x0},
-	{0x011180, 0x0},
-	{0x111180, 0x0},
-	{0x211180, 0x0},
-	{0x010081, 0x0},
-	{0x110081, 0x0},
-	{0x210081, 0x0},
-	{0x010181, 0x0},
-	{0x110181, 0x0},
-	{0x210181, 0x0},
-	{0x011081, 0x0},
-	{0x111081, 0x0},
-	{0x211081, 0x0},
-	{0x011181, 0x0},
-	{0x111181, 0x0},
-	{0x211181, 0x0},
-	{0x0100d0, 0x0},
-	{0x1100d0, 0x0},
-	{0x2100d0, 0x0},
-	{0x0101d0, 0x0},
-	{0x1101d0, 0x0},
-	{0x2101d0, 0x0},
-	{0x0110d0, 0x0},
-	{0x1110d0, 0x0},
-	{0x2110d0, 0x0},
-	{0x0111d0, 0x0},
-	{0x1111d0, 0x0},
-	{0x2111d0, 0x0},
-	{0x0100d1, 0x0},
-	{0x1100d1, 0x0},
-	{0x2100d1, 0x0},
-	{0x0101d1, 0x0},
-	{0x1101d1, 0x0},
-	{0x2101d1, 0x0},
-	{0x0110d1, 0x0},
-	{0x1110d1, 0x0},
-	{0x2110d1, 0x0},
-	{0x0111d1, 0x0},
-	{0x1111d1, 0x0},
-	{0x2111d1, 0x0},
-	{0x010068, 0x0},
-	{0x010168, 0x0},
-	{0x010268, 0x0},
-	{0x010368, 0x0},
-	{0x010468, 0x0},
-	{0x010568, 0x0},
-	{0x010668, 0x0},
-	{0x010768, 0x0},
-	{0x010868, 0x0},
-	{0x011068, 0x0},
-	{0x011168, 0x0},
-	{0x011268, 0x0},
-	{0x011368, 0x0},
-	{0x011468, 0x0},
-	{0x011568, 0x0},
-	{0x011668, 0x0},
-	{0x011768, 0x0},
-	{0x011868, 0x0},
-	{0x010069, 0x0},
-	{0x010169, 0x0},
-	{0x010269, 0x0},
-	{0x010369, 0x0},
-	{0x010469, 0x0},
-	{0x010569, 0x0},
-	{0x010669, 0x0},
-	{0x010769, 0x0},
-	{0x010869, 0x0},
-	{0x011069, 0x0},
-	{0x011169, 0x0},
-	{0x011269, 0x0},
-	{0x011369, 0x0},
-	{0x011469, 0x0},
-	{0x011569, 0x0},
-	{0x011669, 0x0},
-	{0x011769, 0x0},
-	{0x011869, 0x0},
-	{0x01008c, 0x0},
-	{0x11008c, 0x0},
-	{0x21008c, 0x0},
-	{0x01018c, 0x0},
-	{0x11018c, 0x0},
-	{0x21018c, 0x0},
-	{0x01108c, 0x0},
-	{0x11108c, 0x0},
-	{0x21108c, 0x0},
-	{0x01118c, 0x0},
-	{0x11118c, 0x0},
-	{0x21118c, 0x0},
-	{0x01008d, 0x0},
-	{0x11008d, 0x0},
-	{0x21008d, 0x0},
-	{0x01018d, 0x0},
-	{0x11018d, 0x0},
-	{0x21018d, 0x0},
-	{0x01108d, 0x0},
-	{0x11108d, 0x0},
-	{0x21108d, 0x0},
-	{0x01118d, 0x0},
-	{0x11118d, 0x0},
-	{0x21118d, 0x0},
-	{0x0100c0, 0x0},
-	{0x1100c0, 0x0},
-	{0x2100c0, 0x0},
-	{0x0101c0, 0x0},
-	{0x1101c0, 0x0},
-	{0x2101c0, 0x0},
-	{0x0102c0, 0x0},
-	{0x1102c0, 0x0},
-	{0x2102c0, 0x0},
-	{0x0103c0, 0x0},
-	{0x1103c0, 0x0},
-	{0x2103c0, 0x0},
-	{0x0104c0, 0x0},
-	{0x1104c0, 0x0},
-	{0x2104c0, 0x0},
-	{0x0105c0, 0x0},
-	{0x1105c0, 0x0},
-	{0x2105c0, 0x0},
-	{0x0106c0, 0x0},
-	{0x1106c0, 0x0},
-	{0x2106c0, 0x0},
-	{0x0107c0, 0x0},
-	{0x1107c0, 0x0},
-	{0x2107c0, 0x0},
-	{0x0108c0, 0x0},
-	{0x1108c0, 0x0},
-	{0x2108c0, 0x0},
-	{0x0110c0, 0x0},
-	{0x1110c0, 0x0},
-	{0x2110c0, 0x0},
-	{0x0111c0, 0x0},
-	{0x1111c0, 0x0},
-	{0x2111c0, 0x0},
-	{0x0112c0, 0x0},
-	{0x1112c0, 0x0},
-	{0x2112c0, 0x0},
-	{0x0113c0, 0x0},
-	{0x1113c0, 0x0},
-	{0x2113c0, 0x0},
-	{0x0114c0, 0x0},
-	{0x1114c0, 0x0},
-	{0x2114c0, 0x0},
-	{0x0115c0, 0x0},
-	{0x1115c0, 0x0},
-	{0x2115c0, 0x0},
-	{0x0116c0, 0x0},
-	{0x1116c0, 0x0},
-	{0x2116c0, 0x0},
-	{0x0117c0, 0x0},
-	{0x1117c0, 0x0},
-	{0x2117c0, 0x0},
-	{0x0118c0, 0x0},
-	{0x1118c0, 0x0},
-	{0x2118c0, 0x0},
-	{0x0100c1, 0x0},
-	{0x1100c1, 0x0},
-	{0x2100c1, 0x0},
-	{0x0101c1, 0x0},
-	{0x1101c1, 0x0},
-	{0x2101c1, 0x0},
-	{0x0102c1, 0x0},
-	{0x1102c1, 0x0},
-	{0x2102c1, 0x0},
-	{0x0103c1, 0x0},
-	{0x1103c1, 0x0},
-	{0x2103c1, 0x0},
-	{0x0104c1, 0x0},
-	{0x1104c1, 0x0},
-	{0x2104c1, 0x0},
-	{0x0105c1, 0x0},
-	{0x1105c1, 0x0},
-	{0x2105c1, 0x0},
-	{0x0106c1, 0x0},
-	{0x1106c1, 0x0},
-	{0x2106c1, 0x0},
-	{0x0107c1, 0x0},
-	{0x1107c1, 0x0},
-	{0x2107c1, 0x0},
-	{0x0108c1, 0x0},
-	{0x1108c1, 0x0},
-	{0x2108c1, 0x0},
-	{0x0110c1, 0x0},
-	{0x1110c1, 0x0},
-	{0x2110c1, 0x0},
-	{0x0111c1, 0x0},
-	{0x1111c1, 0x0},
-	{0x2111c1, 0x0},
-	{0x0112c1, 0x0},
-	{0x1112c1, 0x0},
-	{0x2112c1, 0x0},
-	{0x0113c1, 0x0},
-	{0x1113c1, 0x0},
-	{0x2113c1, 0x0},
-	{0x0114c1, 0x0},
-	{0x1114c1, 0x0},
-	{0x2114c1, 0x0},
-	{0x0115c1, 0x0},
-	{0x1115c1, 0x0},
-	{0x2115c1, 0x0},
-	{0x0116c1, 0x0},
-	{0x1116c1, 0x0},
-	{0x2116c1, 0x0},
-	{0x0117c1, 0x0},
-	{0x1117c1, 0x0},
-	{0x2117c1, 0x0},
-	{0x0118c1, 0x0},
-	{0x1118c1, 0x0},
-	{0x2118c1, 0x0},
-	{0x010020, 0x0},
-	{0x110020, 0x0},
-	{0x210020, 0x0},
-	{0x011020, 0x0},
-	{0x111020, 0x0},
-	{0x211020, 0x0},
-	{0x020072, 0x0},
-	{0x020073, 0x0},
-	{0x020074, 0x0},
-	{0x0100aa, 0x0},
-	{0x0110aa, 0x0},
-	{0x020010, 0x0},
-	{0x120010, 0x0},
-	{0x220010, 0x0},
-	{0x020011, 0x0},
-	{0x120011, 0x0},
-	{0x220011, 0x0},
-	{0x0100ae, 0x0},
-	{0x1100ae, 0x0},
-	{0x2100ae, 0x0},
-	{0x0100af, 0x0},
-	{0x1100af, 0x0},
-	{0x2100af, 0x0},
-	{0x0110ae, 0x0},
-	{0x1110ae, 0x0},
-	{0x2110ae, 0x0},
-	{0x0110af, 0x0},
-	{0x1110af, 0x0},
-	{0x2110af, 0x0},
-	{0x020020, 0x0},
-	{0x120020, 0x0},
-	{0x220020, 0x0},
-	{0x0100a0, 0x0},
-	{0x0100a1, 0x0},
-	{0x0100a2, 0x0},
-	{0x0100a3, 0x0},
-	{0x0100a4, 0x0},
-	{0x0100a5, 0x0},
-	{0x0100a6, 0x0},
-	{0x0100a7, 0x0},
-	{0x0110a0, 0x0},
-	{0x0110a1, 0x0},
-	{0x0110a2, 0x0},
-	{0x0110a3, 0x0},
-	{0x0110a4, 0x0},
-	{0x0110a5, 0x0},
-	{0x0110a6, 0x0},
-	{0x0110a7, 0x0},
-	{0x02007c, 0x0},
-	{0x12007c, 0x0},
-	{0x22007c, 0x0},
-	{0x02007d, 0x0},
-	{0x12007d, 0x0},
-	{0x22007d, 0x0},
-	{0x0400fd, 0x0},
-	{0x0400c0, 0x0},
-	{0x090201, 0x0},
-	{0x190201, 0x0},
-	{0x290201, 0x0},
-	{0x090202, 0x0},
-	{0x190202, 0x0},
-	{0x290202, 0x0},
-	{0x090203, 0x0},
-	{0x190203, 0x0},
-	{0x290203, 0x0},
-	{0x090204, 0x0},
-	{0x190204, 0x0},
-	{0x290204, 0x0},
-	{0x090205, 0x0},
-	{0x190205, 0x0},
-	{0x290205, 0x0},
-	{0x090206, 0x0},
-	{0x190206, 0x0},
-	{0x290206, 0x0},
-	{0x090207, 0x0},
-	{0x190207, 0x0},
-	{0x290207, 0x0},
-	{0x090208, 0x0},
-	{0x190208, 0x0},
-	{0x290208, 0x0},
-	{0x010062, 0x0},
-	{0x010162, 0x0},
-	{0x010262, 0x0},
-	{0x010362, 0x0},
-	{0x010462, 0x0},
-	{0x010562, 0x0},
-	{0x010662, 0x0},
-	{0x010762, 0x0},
-	{0x010862, 0x0},
-	{0x011062, 0x0},
-	{0x011162, 0x0},
-	{0x011262, 0x0},
-	{0x011362, 0x0},
-	{0x011462, 0x0},
-	{0x011562, 0x0},
-	{0x011662, 0x0},
-	{0x011762, 0x0},
-	{0x011862, 0x0},
-	{0x020077, 0x0},
-	{0x010001, 0x0},
-	{0x011001, 0x0},
-	{0x010040, 0x0},
-	{0x010140, 0x0},
-	{0x010240, 0x0},
-	{0x010340, 0x0},
-	{0x010440, 0x0},
-	{0x010540, 0x0},
-	{0x010640, 0x0},
-	{0x010740, 0x0},
-	{0x010840, 0x0},
-	{0x010030, 0x0},
-	{0x010130, 0x0},
-	{0x010230, 0x0},
-	{0x010330, 0x0},
-	{0x010430, 0x0},
-	{0x010530, 0x0},
-	{0x010630, 0x0},
-	{0x010730, 0x0},
-	{0x010830, 0x0},
-	{0x011040, 0x0},
-	{0x011140, 0x0},
-	{0x011240, 0x0},
-	{0x011340, 0x0},
-	{0x011440, 0x0},
-	{0x011540, 0x0},
-	{0x011640, 0x0},
-	{0x011740, 0x0},
-	{0x011840, 0x0},
-	{0x011030, 0x0},
-	{0x011130, 0x0},
-	{0x011230, 0x0},
-	{0x011330, 0x0},
-	{0x011430, 0x0},
-	{0x011530, 0x0},
-	{0x011630, 0x0},
-	{0x011730, 0x0},
-	{0x011830, 0x0},
-};
-
-/* P0 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54003, 0xc80 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x11 },
-	{ 0x54008, 0x131f },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x5400f, 0x100 },
-	{ 0x54012, 0x110 },
-	{ 0x54019, 0x2dd4 },
-	{ 0x5401a, 0x31 },
-	{ 0x5401b, 0x4d66 },
-	{ 0x5401c, 0x4d00 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x2dd4 },
-	{ 0x54020, 0x31 },
-	{ 0x54021, 0x4d66 },
-	{ 0x54022, 0x4d00 },
-	{ 0x54024, 0x16 },
-	{ 0x54032, 0xd400 },
-	{ 0x54033, 0x312d },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x4d },
-	{ 0x54036, 0x4d },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0xd400 },
-	{ 0x54039, 0x312d },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x4d },
-	{ 0x5403c, 0x4d },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-
-/* P1 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp1_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54002, 0x101 },
-	{ 0x54003, 0x190 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x11 },
-	{ 0x54008, 0x121f },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x5400f, 0x100 },
-	{ 0x54012, 0x110 },
-	{ 0x54019, 0x84 },
-	{ 0x5401a, 0x31 },
-	{ 0x5401b, 0x4d66 },
-	{ 0x5401c, 0x4d00 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x84 },
-	{ 0x54020, 0x31 },
-	{ 0x54021, 0x4d66 },
-	{ 0x54022, 0x4d00 },
-	{ 0x54024, 0x16 },
-	{ 0x54032, 0x8400 },
-	{ 0x54033, 0x3100 },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x4d },
-	{ 0x54036, 0x4d },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0x8400 },
-	{ 0x54039, 0x3100 },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x4d },
-	{ 0x5403c, 0x4d },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-
-/* P2 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp2_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54002, 0x102 },
-	{ 0x54003, 0x64 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x11 },
-	{ 0x54008, 0x121f },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x5400f, 0x100 },
-	{ 0x54012, 0x110 },
-	{ 0x54019, 0x84 },
-	{ 0x5401a, 0x31 },
-	{ 0x5401b, 0x4d66 },
-	{ 0x5401c, 0x4d00 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x84 },
-	{ 0x54020, 0x31 },
-	{ 0x54021, 0x4d66 },
-	{ 0x54022, 0x4d00 },
-	{ 0x54024, 0x16 },
-	{ 0x54032, 0x8400 },
-	{ 0x54033, 0x3100 },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x4d },
-	{ 0x54036, 0x4d },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0x8400 },
-	{ 0x54039, 0x3100 },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x4d },
-	{ 0x5403c, 0x4d },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-
-/* P0 2D message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54003, 0xc80 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x11 },
-	{ 0x54008, 0x61 },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x5400d, 0x100 },
-	{ 0x5400f, 0x100 },
-	{ 0x54010, 0x1f7f },
-	{ 0x54012, 0x110 },
-	{ 0x54019, 0x2dd4 },
-	{ 0x5401a, 0x31 },
-	{ 0x5401b, 0x4d66 },
-	{ 0x5401c, 0x4d00 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x2dd4 },
-	{ 0x54020, 0x31 },
-	{ 0x54021, 0x4d66 },
-	{ 0x54022, 0x4d00 },
-	{ 0x54024, 0x16 },
-	{ 0x54032, 0xd400 },
-	{ 0x54033, 0x312d },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x4d },
-	{ 0x54036, 0x4d },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0xd400 },
-	{ 0x54039, 0x312d },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x4d },
-	{ 0x5403c, 0x4d },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-/* DRAM PHY init engine image */
-struct dram_cfg_param ddr_phy_pie[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x90000, 0x10 },
-	{ 0x90001, 0x400 },
-	{ 0x90002, 0x10e },
-	{ 0x90003, 0x0 },
-	{ 0x90004, 0x0 },
-	{ 0x90005, 0x8 },
-	{ 0x90029, 0xb },
-	{ 0x9002a, 0x480 },
-	{ 0x9002b, 0x109 },
-	{ 0x9002c, 0x8 },
-	{ 0x9002d, 0x448 },
-	{ 0x9002e, 0x139 },
-	{ 0x9002f, 0x8 },
-	{ 0x90030, 0x478 },
-	{ 0x90031, 0x109 },
-	{ 0x90032, 0x0 },
-	{ 0x90033, 0xe8 },
-	{ 0x90034, 0x109 },
-	{ 0x90035, 0x2 },
-	{ 0x90036, 0x10 },
-	{ 0x90037, 0x139 },
-	{ 0x90038, 0xb },
-	{ 0x90039, 0x7c0 },
-	{ 0x9003a, 0x139 },
-	{ 0x9003b, 0x44 },
-	{ 0x9003c, 0x633 },
-	{ 0x9003d, 0x159 },
-	{ 0x9003e, 0x14f },
-	{ 0x9003f, 0x630 },
-	{ 0x90040, 0x159 },
-	{ 0x90041, 0x47 },
-	{ 0x90042, 0x633 },
-	{ 0x90043, 0x149 },
-	{ 0x90044, 0x4f },
-	{ 0x90045, 0x633 },
-	{ 0x90046, 0x179 },
-	{ 0x90047, 0x8 },
-	{ 0x90048, 0xe0 },
-	{ 0x90049, 0x109 },
-	{ 0x9004a, 0x0 },
-	{ 0x9004b, 0x7c8 },
-	{ 0x9004c, 0x109 },
-	{ 0x9004d, 0x0 },
-	{ 0x9004e, 0x1 },
-	{ 0x9004f, 0x8 },
-	{ 0x90050, 0x0 },
-	{ 0x90051, 0x45a },
-	{ 0x90052, 0x9 },
-	{ 0x90053, 0x0 },
-	{ 0x90054, 0x448 },
-	{ 0x90055, 0x109 },
-	{ 0x90056, 0x40 },
-	{ 0x90057, 0x633 },
-	{ 0x90058, 0x179 },
-	{ 0x90059, 0x1 },
-	{ 0x9005a, 0x618 },
-	{ 0x9005b, 0x109 },
-	{ 0x9005c, 0x40c0 },
-	{ 0x9005d, 0x633 },
-	{ 0x9005e, 0x149 },
-	{ 0x9005f, 0x8 },
-	{ 0x90060, 0x4 },
-	{ 0x90061, 0x48 },
-	{ 0x90062, 0x4040 },
-	{ 0x90063, 0x633 },
-	{ 0x90064, 0x149 },
-	{ 0x90065, 0x0 },
-	{ 0x90066, 0x4 },
-	{ 0x90067, 0x48 },
-	{ 0x90068, 0x40 },
-	{ 0x90069, 0x633 },
-	{ 0x9006a, 0x149 },
-	{ 0x9006b, 0x10 },
-	{ 0x9006c, 0x4 },
-	{ 0x9006d, 0x18 },
-	{ 0x9006e, 0x0 },
-	{ 0x9006f, 0x4 },
-	{ 0x90070, 0x78 },
-	{ 0x90071, 0x549 },
-	{ 0x90072, 0x633 },
-	{ 0x90073, 0x159 },
-	{ 0x90074, 0xd49 },
-	{ 0x90075, 0x633 },
-	{ 0x90076, 0x159 },
-	{ 0x90077, 0x94a },
-	{ 0x90078, 0x633 },
-	{ 0x90079, 0x159 },
-	{ 0x9007a, 0x441 },
-	{ 0x9007b, 0x633 },
-	{ 0x9007c, 0x149 },
-	{ 0x9007d, 0x42 },
-	{ 0x9007e, 0x633 },
-	{ 0x9007f, 0x149 },
-	{ 0x90080, 0x1 },
-	{ 0x90081, 0x633 },
-	{ 0x90082, 0x149 },
-	{ 0x90083, 0x0 },
-	{ 0x90084, 0xe0 },
-	{ 0x90085, 0x109 },
-	{ 0x90086, 0xa },
-	{ 0x90087, 0x10 },
-	{ 0x90088, 0x109 },
-	{ 0x90089, 0x9 },
-	{ 0x9008a, 0x3c0 },
-	{ 0x9008b, 0x149 },
-	{ 0x9008c, 0x9 },
-	{ 0x9008d, 0x3c0 },
-	{ 0x9008e, 0x159 },
-	{ 0x9008f, 0x18 },
-	{ 0x90090, 0x10 },
-	{ 0x90091, 0x109 },
-	{ 0x90092, 0x0 },
-	{ 0x90093, 0x3c0 },
-	{ 0x90094, 0x109 },
-	{ 0x90095, 0x18 },
-	{ 0x90096, 0x4 },
-	{ 0x90097, 0x48 },
-	{ 0x90098, 0x18 },
-	{ 0x90099, 0x4 },
-	{ 0x9009a, 0x58 },
-	{ 0x9009b, 0xb },
-	{ 0x9009c, 0x10 },
-	{ 0x9009d, 0x109 },
-	{ 0x9009e, 0x1 },
-	{ 0x9009f, 0x10 },
-	{ 0x900a0, 0x109 },
-	{ 0x900a1, 0x5 },
-	{ 0x900a2, 0x7c0 },
-	{ 0x900a3, 0x109 },
-	{ 0x40000, 0x811 },
-	{ 0x40020, 0x880 },
-	{ 0x40040, 0x0 },
-	{ 0x40060, 0x0 },
-	{ 0x40001, 0x4008 },
-	{ 0x40021, 0x83 },
-	{ 0x40041, 0x4f },
-	{ 0x40061, 0x0 },
-	{ 0x40002, 0x4040 },
-	{ 0x40022, 0x83 },
-	{ 0x40042, 0x51 },
-	{ 0x40062, 0x0 },
-	{ 0x40003, 0x811 },
-	{ 0x40023, 0x880 },
-	{ 0x40043, 0x0 },
-	{ 0x40063, 0x0 },
-	{ 0x40004, 0x720 },
-	{ 0x40024, 0xf },
-	{ 0x40044, 0x1740 },
-	{ 0x40064, 0x0 },
-	{ 0x40005, 0x16 },
-	{ 0x40025, 0x83 },
-	{ 0x40045, 0x4b },
-	{ 0x40065, 0x0 },
-	{ 0x40006, 0x716 },
-	{ 0x40026, 0xf },
-	{ 0x40046, 0x2001 },
-	{ 0x40066, 0x0 },
-	{ 0x40007, 0x716 },
-	{ 0x40027, 0xf },
-	{ 0x40047, 0x2800 },
-	{ 0x40067, 0x0 },
-	{ 0x40008, 0x716 },
-	{ 0x40028, 0xf },
-	{ 0x40048, 0xf00 },
-	{ 0x40068, 0x0 },
-	{ 0x40009, 0x720 },
-	{ 0x40029, 0xf },
-	{ 0x40049, 0x1400 },
-	{ 0x40069, 0x0 },
-	{ 0x4000a, 0xe08 },
-	{ 0x4002a, 0xc15 },
-	{ 0x4004a, 0x0 },
-	{ 0x4006a, 0x0 },
-	{ 0x4000b, 0x625 },
-	{ 0x4002b, 0x15 },
-	{ 0x4004b, 0x0 },
-	{ 0x4006b, 0x0 },
-	{ 0x4000c, 0x4028 },
-	{ 0x4002c, 0x80 },
-	{ 0x4004c, 0x0 },
-	{ 0x4006c, 0x0 },
-	{ 0x4000d, 0xe08 },
-	{ 0x4002d, 0xc1a },
-	{ 0x4004d, 0x0 },
-	{ 0x4006d, 0x0 },
-	{ 0x4000e, 0x625 },
-	{ 0x4002e, 0x1a },
-	{ 0x4004e, 0x0 },
-	{ 0x4006e, 0x0 },
-	{ 0x4000f, 0x4040 },
-	{ 0x4002f, 0x80 },
-	{ 0x4004f, 0x0 },
-	{ 0x4006f, 0x0 },
-	{ 0x40010, 0x2604 },
-	{ 0x40030, 0x15 },
-	{ 0x40050, 0x0 },
-	{ 0x40070, 0x0 },
-	{ 0x40011, 0x708 },
-	{ 0x40031, 0x5 },
-	{ 0x40051, 0x0 },
-	{ 0x40071, 0x2002 },
-	{ 0x40012, 0x8 },
-	{ 0x40032, 0x80 },
-	{ 0x40052, 0x0 },
-	{ 0x40072, 0x0 },
-	{ 0x40013, 0x2604 },
-	{ 0x40033, 0x1a },
-	{ 0x40053, 0x0 },
-	{ 0x40073, 0x0 },
-	{ 0x40014, 0x708 },
-	{ 0x40034, 0xa },
-	{ 0x40054, 0x0 },
-	{ 0x40074, 0x2002 },
-	{ 0x40015, 0x4040 },
-	{ 0x40035, 0x80 },
-	{ 0x40055, 0x0 },
-	{ 0x40075, 0x0 },
-	{ 0x40016, 0x60a },
-	{ 0x40036, 0x15 },
-	{ 0x40056, 0x1200 },
-	{ 0x40076, 0x0 },
-	{ 0x40017, 0x61a },
-	{ 0x40037, 0x15 },
-	{ 0x40057, 0x1300 },
-	{ 0x40077, 0x0 },
-	{ 0x40018, 0x60a },
-	{ 0x40038, 0x1a },
-	{ 0x40058, 0x1200 },
-	{ 0x40078, 0x0 },
-	{ 0x40019, 0x642 },
-	{ 0x40039, 0x1a },
-	{ 0x40059, 0x1300 },
-	{ 0x40079, 0x0 },
-	{ 0x4001a, 0x4808 },
-	{ 0x4003a, 0x880 },
-	{ 0x4005a, 0x0 },
-	{ 0x4007a, 0x0 },
-	{ 0x900a4, 0x0 },
-	{ 0x900a5, 0x790 },
-	{ 0x900a6, 0x11a },
-	{ 0x900a7, 0x8 },
-	{ 0x900a8, 0x7aa },
-	{ 0x900a9, 0x2a },
-	{ 0x900aa, 0x10 },
-	{ 0x900ab, 0x7b2 },
-	{ 0x900ac, 0x2a },
-	{ 0x900ad, 0x0 },
-	{ 0x900ae, 0x7c8 },
-	{ 0x900af, 0x109 },
-	{ 0x900b0, 0x10 },
-	{ 0x900b1, 0x10 },
-	{ 0x900b2, 0x109 },
-	{ 0x900b3, 0x10 },
-	{ 0x900b4, 0x2a8 },
-	{ 0x900b5, 0x129 },
-	{ 0x900b6, 0x8 },
-	{ 0x900b7, 0x370 },
-	{ 0x900b8, 0x129 },
-	{ 0x900b9, 0xa },
-	{ 0x900ba, 0x3c8 },
-	{ 0x900bb, 0x1a9 },
-	{ 0x900bc, 0xc },
-	{ 0x900bd, 0x408 },
-	{ 0x900be, 0x199 },
-	{ 0x900bf, 0x14 },
-	{ 0x900c0, 0x790 },
-	{ 0x900c1, 0x11a },
-	{ 0x900c2, 0x8 },
-	{ 0x900c3, 0x4 },
-	{ 0x900c4, 0x18 },
-	{ 0x900c5, 0xe },
-	{ 0x900c6, 0x408 },
-	{ 0x900c7, 0x199 },
-	{ 0x900c8, 0x8 },
-	{ 0x900c9, 0x8568 },
-	{ 0x900ca, 0x108 },
-	{ 0x900cb, 0x18 },
-	{ 0x900cc, 0x790 },
-	{ 0x900cd, 0x16a },
-	{ 0x900ce, 0x8 },
-	{ 0x900cf, 0x1d8 },
-	{ 0x900d0, 0x169 },
-	{ 0x900d1, 0x10 },
-	{ 0x900d2, 0x8558 },
-	{ 0x900d3, 0x168 },
-	{ 0x900d4, 0x70 },
-	{ 0x900d5, 0x788 },
-	{ 0x900d6, 0x16a },
-	{ 0x900d7, 0x1ff8 },
-	{ 0x900d8, 0x85a8 },
-	{ 0x900d9, 0x1e8 },
-	{ 0x900da, 0x50 },
-	{ 0x900db, 0x798 },
-	{ 0x900dc, 0x16a },
-	{ 0x900dd, 0x60 },
-	{ 0x900de, 0x7a0 },
-	{ 0x900df, 0x16a },
-	{ 0x900e0, 0x8 },
-	{ 0x900e1, 0x8310 },
-	{ 0x900e2, 0x168 },
-	{ 0x900e3, 0x8 },
-	{ 0x900e4, 0xa310 },
-	{ 0x900e5, 0x168 },
-	{ 0x900e6, 0xa },
-	{ 0x900e7, 0x408 },
-	{ 0x900e8, 0x169 },
-	{ 0x900e9, 0x6e },
-	{ 0x900ea, 0x0 },
-	{ 0x900eb, 0x68 },
-	{ 0x900ec, 0x0 },
-	{ 0x900ed, 0x408 },
-	{ 0x900ee, 0x169 },
-	{ 0x900ef, 0x0 },
-	{ 0x900f0, 0x8310 },
-	{ 0x900f1, 0x168 },
-	{ 0x900f2, 0x0 },
-	{ 0x900f3, 0xa310 },
-	{ 0x900f4, 0x168 },
-	{ 0x900f5, 0x1ff8 },
-	{ 0x900f6, 0x85a8 },
-	{ 0x900f7, 0x1e8 },
-	{ 0x900f8, 0x68 },
-	{ 0x900f9, 0x798 },
-	{ 0x900fa, 0x16a },
-	{ 0x900fb, 0x78 },
-	{ 0x900fc, 0x7a0 },
-	{ 0x900fd, 0x16a },
-	{ 0x900fe, 0x68 },
-	{ 0x900ff, 0x790 },
-	{ 0x90100, 0x16a },
-	{ 0x90101, 0x8 },
-	{ 0x90102, 0x8b10 },
-	{ 0x90103, 0x168 },
-	{ 0x90104, 0x8 },
-	{ 0x90105, 0xab10 },
-	{ 0x90106, 0x168 },
-	{ 0x90107, 0xa },
-	{ 0x90108, 0x408 },
-	{ 0x90109, 0x169 },
-	{ 0x9010a, 0x58 },
-	{ 0x9010b, 0x0 },
-	{ 0x9010c, 0x68 },
-	{ 0x9010d, 0x0 },
-	{ 0x9010e, 0x408 },
-	{ 0x9010f, 0x169 },
-	{ 0x90110, 0x0 },
-	{ 0x90111, 0x8b10 },
-	{ 0x90112, 0x168 },
-	{ 0x90113, 0x0 },
-	{ 0x90114, 0xab10 },
-	{ 0x90115, 0x168 },
-	{ 0x90116, 0x0 },
-	{ 0x90117, 0x1d8 },
-	{ 0x90118, 0x169 },
-	{ 0x90119, 0x80 },
-	{ 0x9011a, 0x790 },
-	{ 0x9011b, 0x16a },
-	{ 0x9011c, 0x18 },
-	{ 0x9011d, 0x7aa },
-	{ 0x9011e, 0x6a },
-	{ 0x9011f, 0xa },
-	{ 0x90120, 0x0 },
-	{ 0x90121, 0x1e9 },
-	{ 0x90122, 0x8 },
-	{ 0x90123, 0x8080 },
-	{ 0x90124, 0x108 },
-	{ 0x90125, 0xf },
-	{ 0x90126, 0x408 },
-	{ 0x90127, 0x169 },
-	{ 0x90128, 0xc },
-	{ 0x90129, 0x0 },
-	{ 0x9012a, 0x68 },
-	{ 0x9012b, 0x9 },
-	{ 0x9012c, 0x0 },
-	{ 0x9012d, 0x1a9 },
-	{ 0x9012e, 0x0 },
-	{ 0x9012f, 0x408 },
-	{ 0x90130, 0x169 },
-	{ 0x90131, 0x0 },
-	{ 0x90132, 0x8080 },
-	{ 0x90133, 0x108 },
-	{ 0x90134, 0x8 },
-	{ 0x90135, 0x7aa },
-	{ 0x90136, 0x6a },
-	{ 0x90137, 0x0 },
-	{ 0x90138, 0x8568 },
-	{ 0x90139, 0x108 },
-	{ 0x9013a, 0xb7 },
-	{ 0x9013b, 0x790 },
-	{ 0x9013c, 0x16a },
-	{ 0x9013d, 0x1f },
-	{ 0x9013e, 0x0 },
-	{ 0x9013f, 0x68 },
-	{ 0x90140, 0x8 },
-	{ 0x90141, 0x8558 },
-	{ 0x90142, 0x168 },
-	{ 0x90143, 0xf },
-	{ 0x90144, 0x408 },
-	{ 0x90145, 0x169 },
-	{ 0x90146, 0xd },
-	{ 0x90147, 0x0 },
-	{ 0x90148, 0x68 },
-	{ 0x90149, 0x0 },
-	{ 0x9014a, 0x408 },
-	{ 0x9014b, 0x169 },
-	{ 0x9014c, 0x0 },
-	{ 0x9014d, 0x8558 },
-	{ 0x9014e, 0x168 },
-	{ 0x9014f, 0x8 },
-	{ 0x90150, 0x3c8 },
-	{ 0x90151, 0x1a9 },
-	{ 0x90152, 0x3 },
-	{ 0x90153, 0x370 },
-	{ 0x90154, 0x129 },
-	{ 0x90155, 0x20 },
-	{ 0x90156, 0x2aa },
-	{ 0x90157, 0x9 },
-	{ 0x90158, 0x0 },
-	{ 0x90159, 0x400 },
-	{ 0x9015a, 0x10e },
-	{ 0x9015b, 0x8 },
-	{ 0x9015c, 0xe8 },
-	{ 0x9015d, 0x109 },
-	{ 0x9015e, 0x0 },
-	{ 0x9015f, 0x8140 },
-	{ 0x90160, 0x10c },
-	{ 0x90161, 0x10 },
-	{ 0x90162, 0x8138 },
-	{ 0x90163, 0x10c },
-	{ 0x90164, 0x8 },
-	{ 0x90165, 0x7c8 },
-	{ 0x90166, 0x101 },
-	{ 0x90167, 0x8 },
-	{ 0x90168, 0x448 },
-	{ 0x90169, 0x109 },
-	{ 0x9016a, 0xf },
-	{ 0x9016b, 0x7c0 },
-	{ 0x9016c, 0x109 },
-	{ 0x9016d, 0x0 },
-	{ 0x9016e, 0xe8 },
-	{ 0x9016f, 0x109 },
-	{ 0x90170, 0x47 },
-	{ 0x90171, 0x630 },
-	{ 0x90172, 0x109 },
-	{ 0x90173, 0x8 },
-	{ 0x90174, 0x618 },
-	{ 0x90175, 0x109 },
-	{ 0x90176, 0x8 },
-	{ 0x90177, 0xe0 },
-	{ 0x90178, 0x109 },
-	{ 0x90179, 0x0 },
-	{ 0x9017a, 0x7c8 },
-	{ 0x9017b, 0x109 },
-	{ 0x9017c, 0x8 },
-	{ 0x9017d, 0x8140 },
-	{ 0x9017e, 0x10c },
-	{ 0x9017f, 0x0 },
-	{ 0x90180, 0x1 },
-	{ 0x90181, 0x8 },
-	{ 0x90182, 0x8 },
-	{ 0x90183, 0x4 },
-	{ 0x90184, 0x8 },
-	{ 0x90185, 0x8 },
-	{ 0x90186, 0x7c8 },
-	{ 0x90187, 0x101 },
-	{ 0x90006, 0x0 },
-	{ 0x90007, 0x0 },
-	{ 0x90008, 0x8 },
-	{ 0x90009, 0x0 },
-	{ 0x9000a, 0x0 },
-	{ 0x9000b, 0x0 },
-	{ 0xd00e7, 0x400 },
-	{ 0x90017, 0x0 },
-	{ 0x9001f, 0x29 },
-	{ 0x90026, 0x6a },
-	{ 0x400d0, 0x0 },
-	{ 0x400d1, 0x101 },
-	{ 0x400d2, 0x105 },
-	{ 0x400d3, 0x107 },
-	{ 0x400d4, 0x10f },
-	{ 0x400d5, 0x202 },
-	{ 0x400d6, 0x20a },
-	{ 0x400d7, 0x20b },
-	{ 0x2003a, 0x2 },
-	{ 0x2000b, 0x64 },
-	{ 0x2000c, 0xc8 },
-	{ 0x2000d, 0x7d0 },
-	{ 0x2000e, 0x2c },
-	{ 0x12000b, 0xc },
-	{ 0x12000c, 0x19 },
-	{ 0x12000d, 0xfa },
-	{ 0x12000e, 0x10 },
-	{ 0x22000b, 0x3 },
-	{ 0x22000c, 0x6 },
-	{ 0x22000d, 0x3e },
-	{ 0x22000e, 0x10 },
-	{ 0x9000c, 0x0 },
-	{ 0x9000d, 0x173 },
-	{ 0x9000e, 0x60 },
-	{ 0x9000f, 0x6110 },
-	{ 0x90010, 0x2152 },
-	{ 0x90011, 0xdfbd },
-	{ 0x90012, 0x2060 },
-	{ 0x90013, 0x6152 },
-	{ 0x20010, 0x5a },
-	{ 0x20011, 0x3 },
-	{ 0x120010, 0x5a },
-	{ 0x120011, 0x3 },
-	{ 0x220010, 0x5a },
-	{ 0x220011, 0x3 },
-	{ 0x40080, 0xe0 },
-	{ 0x40081, 0x12 },
-	{ 0x40082, 0xe0 },
-	{ 0x40083, 0x12 },
-	{ 0x40084, 0xe0 },
-	{ 0x40085, 0x12 },
-	{ 0x140080, 0xe0 },
-	{ 0x140081, 0x12 },
-	{ 0x140082, 0xe0 },
-	{ 0x140083, 0x12 },
-	{ 0x140084, 0xe0 },
-	{ 0x140085, 0x12 },
-	{ 0x240080, 0xe0 },
-	{ 0x240081, 0x12 },
-	{ 0x240082, 0xe0 },
-	{ 0x240083, 0x12 },
-	{ 0x240084, 0xe0 },
-	{ 0x240085, 0x12 },
-	{ 0x400fd, 0xf },
-	{ 0x10011, 0x1 },
-	{ 0x10012, 0x1 },
-	{ 0x10013, 0x180 },
-	{ 0x10018, 0x1 },
-	{ 0x10002, 0x6209 },
-	{ 0x100b2, 0x1 },
-	{ 0x101b4, 0x1 },
-	{ 0x102b4, 0x1 },
-	{ 0x103b4, 0x1 },
-	{ 0x104b4, 0x1 },
-	{ 0x105b4, 0x1 },
-	{ 0x106b4, 0x1 },
-	{ 0x107b4, 0x1 },
-	{ 0x108b4, 0x1 },
-	{ 0x11011, 0x1 },
-	{ 0x11012, 0x1 },
-	{ 0x11013, 0x180 },
-	{ 0x11018, 0x1 },
-	{ 0x11002, 0x6209 },
-	{ 0x110b2, 0x1 },
-	{ 0x111b4, 0x1 },
-	{ 0x112b4, 0x1 },
-	{ 0x113b4, 0x1 },
-	{ 0x114b4, 0x1 },
-	{ 0x115b4, 0x1 },
-	{ 0x116b4, 0x1 },
-	{ 0x117b4, 0x1 },
-	{ 0x118b4, 0x1 },
-	{ 0x20089, 0x1 },
-	{ 0x20088, 0x19 },
-	{ 0xc0080, 0x2 },
-	{ 0xd0000, 0x1 }
-};
-
-struct dram_fsp_msg ddr_dram_fsp_msg[] = {
-	{
-		/* P0 3200mts 1D */
-		.drate = 3200,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp0_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_cfg),
-	},
-	{
-		/* P1 400mts 1D */
-		.drate = 400,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp1_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp1_cfg),
-	},
-	{
-		/* P2 100mts 1D */
-		.drate = 100,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp2_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp2_cfg),
-	},
-	{
-		/* P0 3200mts 2D */
-		.drate = 3200,
-		.fw_type = FW_2D_IMAGE,
-		.fsp_cfg = ddr_fsp0_2d_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_2d_cfg),
-	},
-};
-
-/* ddr timing config params */
-struct dram_timing_info dram_timing = {
-	.ddrc_cfg = ddr_ddrc_cfg,
-	.ddrc_cfg_num = ARRAY_SIZE(ddr_ddrc_cfg),
-	.ddrphy_cfg = ddr_ddrphy_cfg,
-	.ddrphy_cfg_num = ARRAY_SIZE(ddr_ddrphy_cfg),
-	.fsp_msg = ddr_dram_fsp_msg,
-	.fsp_msg_num = ARRAY_SIZE(ddr_dram_fsp_msg),
-	.ddrphy_trained_csr = ddr_ddrphy_trained_csr,
-	.ddrphy_trained_csr_num = ARRAY_SIZE(ddr_ddrphy_trained_csr),
-	.ddrphy_pie = ddr_phy_pie,
-	.ddrphy_pie_num = ARRAY_SIZE(ddr_phy_pie),
-	.fsp_table = { 3200, 400, 100, },
-};
-
diff --git a/board/freescale/imx8mn_a100/spl.c b/board/freescale/imx8mn_a100/spl.c
deleted file mode 120000
index 83e7c68146..0000000000
--- a/board/freescale/imx8mn_a100/spl.c
+++ /dev/null
@@ -1 +0,0 @@
-../imx8mn_evk/spl.c
\ No newline at end of file
diff --git a/board/freescale/imx8mp_a200/Kconfig b/board/freescale/imx8mp_a200/Kconfig
deleted file mode 100644
index 30f09f919e..0000000000
--- a/board/freescale/imx8mp_a200/Kconfig
+++ /dev/null
@@ -1,29 +0,0 @@
-if TARGET_IMX8MP_A200
-
-config SYS_BOARD
-	default "imx8mp_a200"
-
-config SYS_VENDOR
-	default "freescale"
-
-config SYS_CONFIG_NAME
-	default "imx8mp_a200"
-
-config IDT_DUAL_SPL
-	bool "IDT dual spl feature"
-	help
-	  This option could be enabled when CONFIG_DUAL_BOOTLOADER
-	  is also enabled. It will help switch to new spl/bootloader
-	  pair even if SRK key set is changed.
-
-config IDT_BACKUP_SPL
-	bool "IDT backup spl feature"
-	help
-	  This option could be enabled when CONFIG_DUAL_BOOTLOADER
-	  is also enabled. It will backup primary spl to offset
-	  0x200000 as secondary spl which will be loaded by Boot_ROM
-	  once if primary spl is corrupted.
-
-source "board/freescale/common/Kconfig"
-
-endif
diff --git a/board/freescale/imx8mp_a200/MAINTAINERS b/board/freescale/imx8mp_a200/MAINTAINERS
deleted file mode 100644
index 2759652cc4..0000000000
--- a/board/freescale/imx8mp_a200/MAINTAINERS
+++ /dev/null
@@ -1,6 +0,0 @@
-i.MX8MP EVK BOARD
-M:	Peng Fan <peng.fan@nxp.com>
-S:	Maintained
-F:	board/freescale/imx8mp_evk/
-F:	include/configs/imx8mp_evk.h
-F:	configs/imx8mp_evk_defconfig
diff --git a/board/freescale/imx8mp_a200/Makefile b/board/freescale/imx8mp_a200/Makefile
deleted file mode 100644
index dde375d78f..0000000000
--- a/board/freescale/imx8mp_a200/Makefile
+++ /dev/null
@@ -1,21 +0,0 @@
-#
-# Copyright 2019 NXP
-#
-# SPDX-License-Identifier:      GPL-2.0+
-#
-
-obj-y += imx8mp_a200.o
-
-ifdef CONFIG_SPL_BUILD
-obj-y += spl.o
-ifdef CONFIG_IMX8M_LPDDR4_FREQ0_3200MTS
-obj-y += lpddr4_timing_ndm.o
-else
-ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-obj-$(CONFIG_IMX8M_LPDDR4) += lpddr4_timing.o
-else
-obj-$(CONFIG_IMX8M_LPDDR4) += lpddr4_timing_4000mts.o
-obj-$(CONFIG_IMX8M_DDR4) += ddr4_timing.o
-endif
-endif
-endif
diff --git a/board/freescale/imx8mp_a200/imx8mp_a200.c b/board/freescale/imx8mp_a200/imx8mp_a200.c
deleted file mode 100644
index f2826d3981..0000000000
--- a/board/freescale/imx8mp_a200/imx8mp_a200.c
+++ /dev/null
@@ -1,513 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0+
-/*
- * Copyright 2019 NXP
- */
-
-#include <common.h>
-#include <env.h>
-#include <errno.h>
-#include <init.h>
-#include <miiphy.h>
-#include <netdev.h>
-#include <linux/delay.h>
-#include <asm/global_data.h>
-#include <asm/io.h>
-#include <asm/mach-imx/iomux-v3.h>
-#include <asm-generic/gpio.h>
-#include <asm/arch/imx8mp_pins.h>
-#include <asm/arch/clock.h>
-#include <asm/arch/sys_proto.h>
-#include <asm/mach-imx/gpio.h>
-#include <asm/mach-imx/mxc_i2c.h>
-#include <spl.h>
-#include <asm/mach-imx/dma.h>
-#include <power/pmic.h>
-#include "../common/tcpc.h"
-#include <usb.h>
-#include <dwc3-uboot.h>
-#include <imx_sip.h>
-#include <linux/arm-smccc.h>
-#include <mmc.h>
-
-DECLARE_GLOBAL_DATA_PTR;
-
-#define UART_PAD_CTRL	(PAD_CTL_DSE6 | PAD_CTL_FSEL1)
-#define WDOG_PAD_CTRL	(PAD_CTL_DSE6 | PAD_CTL_ODE | PAD_CTL_PUE | PAD_CTL_PE)
-
-static iomux_v3_cfg_t const uart_pads[] = {
-	MX8MP_PAD_UART2_RXD__UART2_DCE_RX | MUX_PAD_CTRL(UART_PAD_CTRL),
-	MX8MP_PAD_UART2_TXD__UART2_DCE_TX | MUX_PAD_CTRL(UART_PAD_CTRL),
-};
-
-static iomux_v3_cfg_t const wdog_pads[] = {
-	MX8MP_PAD_GPIO1_IO02__WDOG1_WDOG_B  | MUX_PAD_CTRL(WDOG_PAD_CTRL),
-};
-
-#ifdef CONFIG_NAND_MXS
-
-static void setup_gpmi_nand(void)
-{
-	init_nand_clk();
-}
-#endif
-
-int board_early_init_f(void)
-{
-	struct wdog_regs *wdog = (struct wdog_regs *)WDOG1_BASE_ADDR;
-
-	imx_iomux_v3_setup_multiple_pads(wdog_pads, ARRAY_SIZE(wdog_pads));
-
-	set_wdog_reset(wdog);
-
-	imx_iomux_v3_setup_multiple_pads(uart_pads, ARRAY_SIZE(uart_pads));
-
-	init_uart_clk(1);
-
-	return 0;
-}
-
-#ifdef CONFIG_OF_BOARD_SETUP
-int ft_board_setup(void *blob, struct bd_info *bd)
-{
-#ifdef CONFIG_IMX8M_DRAM_INLINE_ECC
-#ifdef CONFIG_TARGET_IMX8MP_DDR4_EVK
-	int rc;
-	phys_addr_t ecc_start = 0x120000000;
-	size_t ecc_size = 0x20000000;
-
-	rc = add_res_mem_dt_node(blob, "ecc", ecc_start, ecc_size);
-	if (rc < 0) {
-		printf("Could not create ecc reserved-memory node.
");
-		return rc;
-	}
-#else
-	int rc;
-	phys_addr_t ecc0_start = 0xb0000000;
-	phys_addr_t ecc1_start = 0x130000000;
-	phys_addr_t ecc2_start = 0x1b0000000;
-	size_t ecc_size = 0x10000000;
-
-	rc = add_res_mem_dt_node(blob, "ecc", ecc0_start, ecc_size);
-	if (rc < 0) {
-		printf("Could not create ecc0 reserved-memory node.
");
-		return rc;
-	}
-
-	rc = add_res_mem_dt_node(blob, "ecc", ecc1_start, ecc_size);
-	if (rc < 0) {
-		printf("Could not create ecc1 reserved-memory node.
");
-		return rc;
-	}
-
-	rc = add_res_mem_dt_node(blob, "ecc", ecc2_start, ecc_size);
-	if (rc < 0) {
-		printf("Could not create ecc2 reserved-memory node.
");
-		return rc;
-	}
-#endif
-#endif
-
-	return 0;
-}
-#endif
-
-#ifdef CONFIG_USB_TCPC
-struct tcpc_port port1;
-struct tcpc_port port2;
-
-static int setup_pd_switch(uint8_t i2c_bus, uint8_t addr)
-{
-	struct udevice *bus;
-	struct udevice *i2c_dev = NULL;
-	int ret;
-	uint8_t valb;
-
-	ret = uclass_get_device_by_seq(UCLASS_I2C, i2c_bus, &bus);
-	if (ret) {
-		printf("%s: Can't find bus
", __func__);
-		return -EINVAL;
-	}
-
-	ret = dm_i2c_probe(bus, addr, 0, &i2c_dev);
-	if (ret) {
-		printf("%s: Can't find device id=0x%x
",
-			__func__, addr);
-		return -ENODEV;
-	}
-
-	ret = dm_i2c_read(i2c_dev, 0xB, &valb, 1);
-	if (ret) {
-		printf("%s dm_i2c_read failed, err %d
", __func__, ret);
-		return -EIO;
-	}
-	valb |= 0x4; /* Set DB_EXIT to exit dead battery mode */
-	ret = dm_i2c_write(i2c_dev, 0xB, (const uint8_t *)&valb, 1);
-	if (ret) {
-		printf("%s dm_i2c_write failed, err %d
", __func__, ret);
-		return -EIO;
-	}
-
-	/* Set OVP threshold to 23V */
-	valb = 0x6;
-	ret = dm_i2c_write(i2c_dev, 0x8, (const uint8_t *)&valb, 1);
-	if (ret) {
-		printf("%s dm_i2c_write failed, err %d
", __func__, ret);
-		return -EIO;
-	}
-
-	return 0;
-}
-
-int pd_switch_snk_enable(struct tcpc_port *port)
-{
-	if (port == &port1) {
-		debug("Setup pd switch on port 1
");
-		return setup_pd_switch(1, 0x72);
-	} else
-		return -EINVAL;
-}
-
-/* Port2 is the power supply, port 1 does not support power */
-struct tcpc_port_config port1_config = {
-	.i2c_bus = 1, /*i2c2*/
-	.addr = 0x50,
-	.port_type = TYPEC_PORT_UFP,
-	.max_snk_mv = 20000,
-	.max_snk_ma = 3000,
-	.max_snk_mw = 45000,
-	.op_snk_mv = 15000,
-	.switch_setup_func = &pd_switch_snk_enable,
-	.disable_pd = true,
-};
-
-struct tcpc_port_config port2_config = {
-	.i2c_bus = 2, /*i2c3*/
-	.addr = 0x50,
-	.port_type = TYPEC_PORT_UFP,
-	.max_snk_mv = 20000,
-	.max_snk_ma = 3000,
-	.max_snk_mw = 45000,
-	.op_snk_mv = 15000,
-};
-
-#define USB_TYPEC_SEL IMX_GPIO_NR(4, 20)
-#define USB_TYPEC_EN IMX_GPIO_NR(2, 20)
-
-static iomux_v3_cfg_t ss_mux_gpio[] = {
-	MX8MP_PAD_SAI1_MCLK__GPIO4_IO20 | MUX_PAD_CTRL(NO_PAD_CTRL),
-	MX8MP_PAD_SD2_WP__GPIO2_IO20 | MUX_PAD_CTRL(NO_PAD_CTRL),
-};
-
-void ss_mux_select(enum typec_cc_polarity pol)
-{
-	if (pol == TYPEC_POLARITY_CC1)
-		gpio_direction_output(USB_TYPEC_SEL, 0);
-	else
-		gpio_direction_output(USB_TYPEC_SEL, 1);
-}
-
-static int setup_typec(void)
-{
-	int ret;
-	struct gpio_desc per_12v_desc;
-
-	debug("tcpc_init port 2
");
-	ret = tcpc_init(&port2, port2_config, NULL);
-	if (ret) {
-		printf("%s: tcpc port2 init failed, err=%d
",
-		       __func__, ret);
-	} else if (tcpc_pd_sink_check_charging(&port2)) {
-		printf("Power supply on USB2
");
-
-		/* Enable PER 12V, any check before it? */
-		ret = dm_gpio_lookup_name("gpio@20_1", &per_12v_desc);
-		if (ret) {
-			printf("%s lookup gpio@20_1 failed ret = %d
", __func__, ret);
-			return -ENODEV;
-		}
-
-		ret = dm_gpio_request(&per_12v_desc, "per_12v_en");
-		if (ret) {
-			printf("%s request per_12v failed ret = %d
", __func__, ret);
-			return -EIO;
-		}
-
-		/* Enable PER 12V regulator */
-		dm_gpio_set_dir_flags(&per_12v_desc, GPIOD_IS_OUT | GPIOD_IS_OUT_ACTIVE);
-	}
-
-	debug("tcpc_init port 1
");
-	imx_iomux_v3_setup_multiple_pads(ss_mux_gpio, ARRAY_SIZE(ss_mux_gpio));
-	gpio_request(USB_TYPEC_SEL, "typec_sel");
-	gpio_request(USB_TYPEC_EN, "typec_en");
-	gpio_direction_output(USB_TYPEC_EN, 0);
-
-	ret = tcpc_init(&port1, port1_config, &ss_mux_select);
-	if (ret) {
-		printf("%s: tcpc port1 init failed, err=%d
",
-		       __func__, ret);
-	} else {
-		return ret;
-	}
-
-	return ret;
-}
-#endif
-
-#ifdef CONFIG_USB_DWC3
-
-#define USB_PHY_CTRL0			0xF0040
-#define USB_PHY_CTRL0_REF_SSP_EN	BIT(2)
-
-#define USB_PHY_CTRL1			0xF0044
-#define USB_PHY_CTRL1_RESET		BIT(0)
-#define USB_PHY_CTRL1_COMMONONN		BIT(1)
-#define USB_PHY_CTRL1_ATERESET		BIT(3)
-#define USB_PHY_CTRL1_VDATSRCENB0	BIT(19)
-#define USB_PHY_CTRL1_VDATDETENB0	BIT(20)
-
-#define USB_PHY_CTRL2			0xF0048
-#define USB_PHY_CTRL2_TXENABLEN0	BIT(8)
-
-#define USB_PHY_CTRL6			0xF0058
-
-#define HSIO_GPR_BASE                               (0x32F10000U)
-#define HSIO_GPR_REG_0                              (HSIO_GPR_BASE)
-#define HSIO_GPR_REG_0_USB_CLOCK_MODULE_EN_SHIFT    (1)
-#define HSIO_GPR_REG_0_USB_CLOCK_MODULE_EN          (0x1U << HSIO_GPR_REG_0_USB_CLOCK_MODULE_EN_SHIFT)
-
-
-static struct dwc3_device dwc3_device_data = {
-#ifdef CONFIG_SPL_BUILD
-	.maximum_speed = USB_SPEED_HIGH,
-#else
-	.maximum_speed = USB_SPEED_SUPER,
-#endif
-	.base = USB1_BASE_ADDR,
-	.dr_mode = USB_DR_MODE_PERIPHERAL,
-	.index = 0,
-	.power_down_scale = 2,
-};
-
-int usb_gadget_handle_interrupts(int index)
-{
-	dwc3_uboot_handle_interrupt(index);
-	return 0;
-}
-
-static void dwc3_nxp_usb_phy_init(struct dwc3_device *dwc3)
-{
-	u32 RegData;
-
-	/* enable usb clock via hsio gpr */
-	RegData = readl(HSIO_GPR_REG_0);
-	RegData |= HSIO_GPR_REG_0_USB_CLOCK_MODULE_EN;
-	writel(RegData, HSIO_GPR_REG_0);
-
-	/* USB3.0 PHY signal fsel for 100M ref */
-	RegData = readl(dwc3->base + USB_PHY_CTRL0);
-	RegData = (RegData & 0xfffff81f) | (0x2a<<5);
-	writel(RegData, dwc3->base + USB_PHY_CTRL0);
-
-	RegData = readl(dwc3->base + USB_PHY_CTRL6);
-	RegData &=~0x1;
-	writel(RegData, dwc3->base + USB_PHY_CTRL6);
-
-	RegData = readl(dwc3->base + USB_PHY_CTRL1);
-	RegData &= ~(USB_PHY_CTRL1_VDATSRCENB0 | USB_PHY_CTRL1_VDATDETENB0 |
-			USB_PHY_CTRL1_COMMONONN);
-	RegData |= USB_PHY_CTRL1_RESET | USB_PHY_CTRL1_ATERESET;
-	writel(RegData, dwc3->base + USB_PHY_CTRL1);
-
-	RegData = readl(dwc3->base + USB_PHY_CTRL0);
-	RegData |= USB_PHY_CTRL0_REF_SSP_EN;
-	writel(RegData, dwc3->base + USB_PHY_CTRL0);
-
-	RegData = readl(dwc3->base + USB_PHY_CTRL2);
-	RegData |= USB_PHY_CTRL2_TXENABLEN0;
-	writel(RegData, dwc3->base + USB_PHY_CTRL2);
-
-	RegData = readl(dwc3->base + USB_PHY_CTRL1);
-	RegData &= ~(USB_PHY_CTRL1_RESET | USB_PHY_CTRL1_ATERESET);
-	writel(RegData, dwc3->base + USB_PHY_CTRL1);
-}
-#endif
-
-#if defined(CONFIG_USB_DWC3) || defined(CONFIG_USB_XHCI_IMX8M)
-#define USB2_PWR_EN IMX_GPIO_NR(1, 14)
-int board_usb_init(int index, enum usb_init_type init)
-{
-	int ret = 0;
-	imx8m_usb_power(index, true);
-
-	if (index == 0 && init == USB_INIT_DEVICE) {
-#ifdef CONFIG_USB_TCPC
-		ret = tcpc_setup_ufp_mode(&port1);
-		if (ret)
-			return ret;
-#endif
-		dwc3_nxp_usb_phy_init(&dwc3_device_data);
-		return dwc3_uboot_init(&dwc3_device_data);
-	} else if (index == 0 && init == USB_INIT_HOST) {
-#ifdef CONFIG_USB_TCPC
-		ret = tcpc_setup_dfp_mode(&port1);
-#endif
-		return ret;
-	}
-
-	return 0;
-}
-
-int board_usb_cleanup(int index, enum usb_init_type init)
-{
-	int ret = 0;
-	if (index == 0 && init == USB_INIT_DEVICE) {
-		dwc3_uboot_exit(index);
-	} else if (index == 0 && init == USB_INIT_HOST) {
-#ifdef CONFIG_USB_TCPC
-		ret = tcpc_disable_src_vbus(&port1);
-#endif
-	}
-
-	imx8m_usb_power(index, false);
-
-	return ret;
-}
-
-#ifdef CONFIG_USB_TCPC
-/* Not used so far */
-int board_typec_get_mode(int index)
-{
-	int ret = 0;
-	enum typec_cc_polarity pol;
-	enum typec_cc_state state;
-
-	if (index == 0) {
-		tcpc_setup_ufp_mode(&port1);
-
-		ret = tcpc_get_cc_status(&port1, &pol, &state);
-		if (!ret) {
-			if (state == TYPEC_STATE_SRC_RD_RA || state == TYPEC_STATE_SRC_RD)
-				return USB_INIT_HOST;
-		}
-
-		return USB_INIT_DEVICE;
-	} else {
-		return USB_INIT_HOST;
-	}
-}
-#endif
-#endif
-
-static void setup_fec(void)
-{
-	struct iomuxc_gpr_base_regs *gpr =
-		(struct iomuxc_gpr_base_regs *)IOMUXC_GPR_BASE_ADDR;
-
-	/* Enable RGMII TX clk output */
-	setbits_le32(&gpr->gpr[1], BIT(22));
-}
-
-static int setup_eqos(void)
-{
-	struct iomuxc_gpr_base_regs *gpr =
-		(struct iomuxc_gpr_base_regs *)IOMUXC_GPR_BASE_ADDR;
-
-	/* set INTF as RGMII, enable RGMII TXC clock */
-	clrsetbits_le32(&gpr->gpr[1],
-			IOMUXC_GPR_GPR1_GPR_ENET_QOS_INTF_SEL_MASK, BIT(16));
-	setbits_le32(&gpr->gpr[1], BIT(19) | BIT(21));
-
-	return set_clk_eqos(ENET_125MHZ);
-}
-
-#if CONFIG_IS_ENABLED(NET)
-int board_phy_config(struct phy_device *phydev)
-{
-	if (phydev->drv->config)
-		phydev->drv->config(phydev);
-	return 0;
-}
-#endif
-
-#define DISPMIX				13
-#define MIPI				15
-
-int board_init(void)
-{
-	struct arm_smccc_res res;
-
-#ifdef CONFIG_USB_TCPC
-	setup_typec();
-
-	/* Enable USB power default */
-	imx8m_usb_power(0, true);
-	imx8m_usb_power(1, true);
-#endif
-
-	if (CONFIG_IS_ENABLED(FEC_MXC)) {
-		setup_fec();
-	}
-
-	if (CONFIG_IS_ENABLED(DWC_ETH_QOS)) {
-		setup_eqos();
-	}
-
-#ifdef CONFIG_NAND_MXS
-	setup_gpmi_nand();
-#endif
-
-#if defined(CONFIG_USB_DWC3) || defined(CONFIG_USB_XHCI_IMX8M)
-	init_usb_clk();
-#endif
-
-	/* enable the dispmix & mipi phy power domain */
-	arm_smccc_smc(IMX_SIP_GPC, IMX_SIP_GPC_PM_DOMAIN,
-		      DISPMIX, true, 0, 0, 0, 0, &res);
-	arm_smccc_smc(IMX_SIP_GPC, IMX_SIP_GPC_PM_DOMAIN,
-		      MIPI, true, 0, 0, 0, 0, &res);
-
-	return 0;
-}
-
-int board_late_init(void)
-{
-#ifdef CONFIG_ENV_IS_IN_MMC
-	board_late_mmc_env_init();
-#endif
-#ifdef CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
-	env_set("board_name", "EVK");
-	env_set("board_rev", "iMX8MP");
-#endif
-
-	return 0;
-}
-
-#ifdef CONFIG_ANDROID_SUPPORT
-bool is_power_key_pressed(void) {
-	return (bool)(!!(readl(SNVS_HPSR) & (0x1 << 6)));
-}
-#endif
-
-#ifdef CONFIG_SPL_MMC_SUPPORT
-#define UBOOT_RAW_SECTOR_OFFSET 0x40
-unsigned long spl_mmc_get_uboot_raw_sector(struct mmc *mmc)
-{
-	u32 boot_dev = spl_boot_device();
-	switch (boot_dev) {
-		case BOOT_DEVICE_MMC2:
-			return CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR - UBOOT_RAW_SECTOR_OFFSET;
-		default:
-			return CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR;
-	}
-}
-#endif
-
-#ifdef CONFIG_FSL_FASTBOOT
-#ifdef CONFIG_ANDROID_RECOVERY
-int is_recovery_key_pressing(void)
-{
-	return 0; /* TODO */
-}
-#endif /* CONFIG_ANDROID_RECOVERY */
-#endif /* CONFIG_FSL_FASTBOOT */
diff --git a/board/freescale/imx8mp_a200/lpddr4_timing.c b/board/freescale/imx8mp_a200/lpddr4_timing.c
deleted file mode 100644
index ea63d54eab..0000000000
--- a/board/freescale/imx8mp_a200/lpddr4_timing.c
+++ /dev/null
@@ -1,2049 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0+
-/*
- * Copyright 2019 NXP
- */
-
-#include <linux/kernel.h>
-#include <asm/arch/ddr.h>
-
-struct dram_cfg_param ddr_ddrc_cfg[] = {
-	/** Initialize DDRC registers **/
-	{ 0x3d400304, 0x1 },
-	{ 0x3d400030, 0x1 },
-	{ 0x3d400000, 0xa3080020 },
-#ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-	{ 0x3d400020, 0x223 },
-	{ 0x3d400024, 0x124f800 },
-	{ 0x3d400064, 0x4900a8 },
-	{ 0x3d400070, 0x1027f90 },
-	{ 0x3d400074, 0x790 },
-	{ 0x3d4000d0, 0xc0030495 },
-	{ 0x3d4000d4, 0x770000 },
-	{ 0x3d4000dc, 0xc40024 },
-#else
-	{ 0x3d400020, 0x1323 },
-	{ 0x3d400024, 0x1e84800 },
-	{ 0x3d400064, 0x7a017c },
-#ifdef CONFIG_IMX8M_DRAM_INLINE_ECC
-	{ 0x3d400070, 0x1027f54 },
-#else
-	{ 0x3d400070, 0x1027f10 },
-#endif
-	{ 0x3d400074, 0x7b0 },
-	{ 0x3d4000d0, 0xc00307a3 },
-	{ 0x3d4000d4, 0xc50000 },
-	{ 0x3d4000dc, 0xf4003f },
-#endif
-	{ 0x3d4000e0, 0x330000 },
-	{ 0x3d4000e8, 0x660048 },
-	{ 0x3d4000ec, 0x160048 },
-#ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-	{ 0x3d400100, 0x1618141a },
-	{ 0x3d400104, 0x504a6 },
-	{ 0x3d40010c, 0x909000 },
-	{ 0x3d400110, 0xb04060b },
-	{ 0x3d400114, 0x2030909 },
-	{ 0x3d400118, 0x1010006 },
-	{ 0x3d40011c, 0x301 },
-	{ 0x3d400130, 0x20500 },
-	{ 0x3d400134, 0xb100002 },
-	{ 0x3d400138, 0xad },
-	{ 0x3d400144, 0x78003c },
-	{ 0x3d400180, 0x2580012 },
-	{ 0x3d400184, 0x1e0493e },
-	{ 0x3d400188, 0x0 },
-	{ 0x3d400190, 0x4938208 },
-	{ 0x3d400194, 0x80303 },
-	{ 0x3d4001b4, 0x1308 },
-#else
-	{ 0x3d400100, 0x2028222a },
-	{ 0x3d400104, 0x807bf },
-	{ 0x3d40010c, 0xe0e000 },
-	{ 0x3d400110, 0x12040a12 },
-	{ 0x3d400114, 0x2050f0f },
-	{ 0x3d400118, 0x1010009 },
-	{ 0x3d40011c, 0x501 },
-	{ 0x3d400130, 0x20800 },
-	{ 0x3d400134, 0xe100002 },
-	{ 0x3d400138, 0x184 },
-	{ 0x3d400144, 0xc80064 },
-	{ 0x3d400180, 0x3e8001e },
-	{ 0x3d400184, 0x3207a12 },
-	{ 0x3d400188, 0x0 },
-	{ 0x3d400190, 0x49f820e },
-	{ 0x3d400194, 0x80303 },
-	{ 0x3d4001b4, 0x1f0e },
-#endif
-	{ 0x3d4001a0, 0xe0400018 },
-	{ 0x3d4001a4, 0xdf00e4 },
-	{ 0x3d4001a8, 0x80000000 },
-	{ 0x3d4001b0, 0x11 },
-	{ 0x3d4001c0, 0x1 },
-	{ 0x3d4001c4, 0x1 },
-	{ 0x3d4000f4, 0xc99 },
-#ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-	{ 0x3d400108, 0x60c1514 },
-	{ 0x3d400200, 0x16 },
-	{ 0x3d40020c, 0x0 },
-	{ 0x3d400210, 0x1f1f },
-	{ 0x3d400204, 0x80808 },
-	{ 0x3d400214, 0x7070707 },
-	{ 0x3d400218, 0x68070707 },
-	{ 0x3d40021c, 0xf08 },
-	{ 0x3d400250, 0x1f05 },
-	{ 0x3d400254, 0x1f },
-	{ 0x3d400264, 0x90003ff },
-	{ 0x3d40026c, 0x20003ff },
-	{ 0x3d400400, 0x111 },
-	{ 0x3d400408, 0x72ff },
-	{ 0x3d400494, 0x1000e00 },
-	{ 0x3d400498, 0x3ff0000 },
-	{ 0x3d40049c, 0x1000e00 },
-	{ 0x3d4004a0, 0x3ff0000 },
-	{ 0x3d402020, 0x21 },
-	{ 0x3d402024, 0x30d400 },
-	{ 0x3d402050, 0x20d000 },
-	{ 0x3d402064, 0xc001c },
-#else
-	{ 0x3d400108, 0x9121c1c },
-#ifdef CONFIG_IMX8M_DRAM_INLINE_ECC
-	{ 0x3d400200, 0x13 },
-	{ 0x3d40020c, 0x13131300 },
-	{ 0x3d400210, 0x1f1f },
-	{ 0x3d400204, 0x50505 },
-	{ 0x3d400214, 0x4040404 },
-	{ 0x3d400218, 0x68040404 },
-#else
-	{ 0x3d400200, 0x16 },
-	{ 0x3d40020c, 0x0 },
-	{ 0x3d400210, 0x1f1f },
-	{ 0x3d400204, 0x80808 },
-	{ 0x3d400214, 0x7070707 },
-	{ 0x3d400218, 0x68070707 },
-#endif
-	{ 0x3d40021c, 0xf08 },
-	{ 0x3d400250, 0x1705 },
-	{ 0x3d400254, 0x2c },
-	{ 0x3d40025c, 0x4000030 },
-	{ 0x3d400264, 0x900093e7 },
-	{ 0x3d40026c, 0x2005574 },
-	{ 0x3d400400, 0x111 },
-	{ 0x3d400404, 0x72ff },
-	{ 0x3d400408, 0x72ff },
-	{ 0x3d400494, 0x2100e07 },
-	{ 0x3d400498, 0x620096 },
-	{ 0x3d40049c, 0x1100e07 },
-	{ 0x3d4004a0, 0xc8012c },
-	{ 0x3d402020, 0x1021 },
-	{ 0x3d402024, 0x30d400 },
-	{ 0x3d402050, 0x20d000 },
-	{ 0x3d402064, 0xc0026 },
-#endif
-	{ 0x3d4020dc, 0x840000 },
-	{ 0x3d4020e0, 0x330000 },
-	{ 0x3d4020e8, 0x660048 },
-	{ 0x3d4020ec, 0x160048 },
-	{ 0x3d402100, 0xa040305 },
-	{ 0x3d402104, 0x30407 },
-	{ 0x3d402108, 0x203060b },
-	{ 0x3d40210c, 0x505000 },
-	{ 0x3d402110, 0x2040202 },
-	{ 0x3d402114, 0x2030202 },
-	{ 0x3d402118, 0x1010004 },
-	{ 0x3d40211c, 0x301 },
-	{ 0x3d402130, 0x20300 },
-	{ 0x3d402134, 0xa100002 },
-	{ 0x3d402138, 0x27 },
-	{ 0x3d402144, 0x14000a },
-	{ 0x3d402180, 0x640004 },
-	{ 0x3d402190, 0x3818200 },
-	{ 0x3d402194, 0x80303 },
-	{ 0x3d4021b4, 0x100 },
-	{ 0x3d4020f4, 0xc99 },
-#ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-	{ 0x3d403020, 0x21 },
-	{ 0x3d403024, 0xc3500 },
-	{ 0x3d403050, 0x20d000 },
-	{ 0x3d403064, 0x30007 },
-#else
-	{ 0x3d403020, 0x1021 },
-	{ 0x3d403024, 0xc3500 },
-	{ 0x3d403050, 0x20d000 },
-	{ 0x3d403064, 0x3000a },
-#endif
-	{ 0x3d4030dc, 0x840000 },
-	{ 0x3d4030e0, 0x330000 },
-	{ 0x3d4030e8, 0x660048 },
-	{ 0x3d4030ec, 0x160048 },
-	{ 0x3d403100, 0xa010102 },
-	{ 0x3d403104, 0x30404 },
-	{ 0x3d403108, 0x203060b },
-	{ 0x3d40310c, 0x505000 },
-	{ 0x3d403110, 0x2040202 },
-	{ 0x3d403114, 0x2030202 },
-	{ 0x3d403118, 0x1010004 },
-	{ 0x3d40311c, 0x301 },
-	{ 0x3d403130, 0x20300 },
-	{ 0x3d403134, 0xa100002 },
-	{ 0x3d403138, 0xa },
-	{ 0x3d403144, 0x50003 },
-	{ 0x3d403180, 0x190004 },
-	{ 0x3d403190, 0x3818200 },
-	{ 0x3d403194, 0x80303 },
-	{ 0x3d4031b4, 0x100 },
-	{ 0x3d4030f4, 0xc99 },
-	{ 0x3d400028, 0x0 },
-};
-
-/* PHY Initialize Configuration */
-struct dram_cfg_param ddr_ddrphy_cfg[] = {
-	{ 0x100a0, 0x0 },
-	{ 0x100a1, 0x1 },
-	{ 0x100a2, 0x2 },
-	{ 0x100a3, 0x3 },
-	{ 0x100a4, 0x4 },
-	{ 0x100a5, 0x5 },
-	{ 0x100a6, 0x6 },
-	{ 0x100a7, 0x7 },
-	{ 0x110a0, 0x0 },
-	{ 0x110a1, 0x1 },
-	{ 0x110a2, 0x3 },
-	{ 0x110a3, 0x4 },
-	{ 0x110a4, 0x5 },
-	{ 0x110a5, 0x2 },
-	{ 0x110a6, 0x7 },
-	{ 0x110a7, 0x6 },
-	{ 0x120a0, 0x0 },
-	{ 0x120a1, 0x1 },
-	{ 0x120a2, 0x3 },
-	{ 0x120a3, 0x2 },
-	{ 0x120a4, 0x5 },
-	{ 0x120a5, 0x4 },
-	{ 0x120a6, 0x7 },
-	{ 0x120a7, 0x6 },
-	{ 0x130a0, 0x0 },
-	{ 0x130a1, 0x1 },
-	{ 0x130a2, 0x2 },
-	{ 0x130a3, 0x3 },
-	{ 0x130a4, 0x4 },
-	{ 0x130a5, 0x5 },
-	{ 0x130a6, 0x6 },
-	{ 0x130a7, 0x7 },
-	{ 0x1005f, 0x1ff },
-	{ 0x1015f, 0x1ff },
-	{ 0x1105f, 0x1ff },
-	{ 0x1115f, 0x1ff },
-	{ 0x1205f, 0x1ff },
-	{ 0x1215f, 0x1ff },
-	{ 0x1305f, 0x1ff },
-	{ 0x1315f, 0x1ff },
-	{ 0x11005f, 0x1ff },
-	{ 0x11015f, 0x1ff },
-	{ 0x11105f, 0x1ff },
-	{ 0x11115f, 0x1ff },
-	{ 0x11205f, 0x1ff },
-	{ 0x11215f, 0x1ff },
-	{ 0x11305f, 0x1ff },
-	{ 0x11315f, 0x1ff },
-	{ 0x21005f, 0x1ff },
-	{ 0x21015f, 0x1ff },
-	{ 0x21105f, 0x1ff },
-	{ 0x21115f, 0x1ff },
-	{ 0x21205f, 0x1ff },
-	{ 0x21215f, 0x1ff },
-	{ 0x21305f, 0x1ff },
-	{ 0x21315f, 0x1ff },
-	{ 0x55, 0x1ff },
-	{ 0x1055, 0x1ff },
-	{ 0x2055, 0x1ff },
-	{ 0x3055, 0x1ff },
-	{ 0x4055, 0x1ff },
-	{ 0x5055, 0x1ff },
-	{ 0x6055, 0x1ff },
-	{ 0x7055, 0x1ff },
-	{ 0x8055, 0x1ff },
-	{ 0x9055, 0x1ff },
-#ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-	{ 0x200c5, 0xa },
-#else
-	{ 0x200c5, 0x18 },
-#endif
-	{ 0x1200c5, 0x7 },
-	{ 0x2200c5, 0x7 },
-	{ 0x2002e, 0x2 },
-	{ 0x12002e, 0x2 },
-	{ 0x22002e, 0x2 },
-	{ 0x90204, 0x0 },
-	{ 0x190204, 0x0 },
-	{ 0x290204, 0x0 },
-	{ 0x20024, 0x1e3 },
-	{ 0x2003a, 0x2 },
-	{ 0x120024, 0x1e3 },
-	{ 0x2003a, 0x2 },
-	{ 0x220024, 0x1e3 },
-	{ 0x2003a, 0x2 },
-	{ 0x20056, 0x3 },
-	{ 0x120056, 0x3 },
-	{ 0x220056, 0x3 },
-	{ 0x1004d, 0xe00 },
-	{ 0x1014d, 0xe00 },
-	{ 0x1104d, 0xe00 },
-	{ 0x1114d, 0xe00 },
-	{ 0x1204d, 0xe00 },
-	{ 0x1214d, 0xe00 },
-	{ 0x1304d, 0xe00 },
-	{ 0x1314d, 0xe00 },
-	{ 0x11004d, 0xe00 },
-	{ 0x11014d, 0xe00 },
-	{ 0x11104d, 0xe00 },
-	{ 0x11114d, 0xe00 },
-	{ 0x11204d, 0xe00 },
-	{ 0x11214d, 0xe00 },
-	{ 0x11304d, 0xe00 },
-	{ 0x11314d, 0xe00 },
-	{ 0x21004d, 0xe00 },
-	{ 0x21014d, 0xe00 },
-	{ 0x21104d, 0xe00 },
-	{ 0x21114d, 0xe00 },
-	{ 0x21204d, 0xe00 },
-	{ 0x21214d, 0xe00 },
-	{ 0x21304d, 0xe00 },
-	{ 0x21314d, 0xe00 },
-	{ 0x10049, 0xeba },
-	{ 0x10149, 0xeba },
-	{ 0x11049, 0xeba },
-	{ 0x11149, 0xeba },
-	{ 0x12049, 0xeba },
-	{ 0x12149, 0xeba },
-	{ 0x13049, 0xeba },
-	{ 0x13149, 0xeba },
-	{ 0x110049, 0xeba },
-	{ 0x110149, 0xeba },
-	{ 0x111049, 0xeba },
-	{ 0x111149, 0xeba },
-	{ 0x112049, 0xeba },
-	{ 0x112149, 0xeba },
-	{ 0x113049, 0xeba },
-	{ 0x113149, 0xeba },
-	{ 0x210049, 0xeba },
-	{ 0x210149, 0xeba },
-	{ 0x211049, 0xeba },
-	{ 0x211149, 0xeba },
-	{ 0x212049, 0xeba },
-	{ 0x212149, 0xeba },
-	{ 0x213049, 0xeba },
-	{ 0x213149, 0xeba },
-	{ 0x43, 0x63 },
-	{ 0x1043, 0x63 },
-	{ 0x2043, 0x63 },
-	{ 0x3043, 0x63 },
-	{ 0x4043, 0x63 },
-	{ 0x5043, 0x63 },
-	{ 0x6043, 0x63 },
-	{ 0x7043, 0x63 },
-	{ 0x8043, 0x63 },
-	{ 0x9043, 0x63 },
-	{ 0x20018, 0x3 },
-	{ 0x20075, 0x4 },
-	{ 0x20050, 0x0 },
-#ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-	{ 0x20008, 0x258 },
-#else
-	{ 0x20008, 0x3e8 },
-#endif
-	{ 0x120008, 0x64 },
-	{ 0x220008, 0x19 },
-	{ 0x20088, 0x9 },
-	{ 0x200b2, 0x104 },
-	{ 0x10043, 0x5a1 },
-	{ 0x10143, 0x5a1 },
-	{ 0x11043, 0x5a1 },
-	{ 0x11143, 0x5a1 },
-	{ 0x12043, 0x5a1 },
-	{ 0x12143, 0x5a1 },
-	{ 0x13043, 0x5a1 },
-	{ 0x13143, 0x5a1 },
-	{ 0x1200b2, 0x104 },
-	{ 0x110043, 0x5a1 },
-	{ 0x110143, 0x5a1 },
-	{ 0x111043, 0x5a1 },
-	{ 0x111143, 0x5a1 },
-	{ 0x112043, 0x5a1 },
-	{ 0x112143, 0x5a1 },
-	{ 0x113043, 0x5a1 },
-	{ 0x113143, 0x5a1 },
-	{ 0x2200b2, 0x104 },
-	{ 0x210043, 0x5a1 },
-	{ 0x210143, 0x5a1 },
-	{ 0x211043, 0x5a1 },
-	{ 0x211143, 0x5a1 },
-	{ 0x212043, 0x5a1 },
-	{ 0x212143, 0x5a1 },
-	{ 0x213043, 0x5a1 },
-	{ 0x213143, 0x5a1 },
-	{ 0x200fa, 0x1 },
-	{ 0x1200fa, 0x1 },
-	{ 0x2200fa, 0x1 },
-	{ 0x20019, 0x1 },
-	{ 0x120019, 0x1 },
-	{ 0x220019, 0x1 },
-	{ 0x200f0, 0x660 },
-	{ 0x200f1, 0x0 },
-	{ 0x200f2, 0x4444 },
-	{ 0x200f3, 0x8888 },
-	{ 0x200f4, 0x5665 },
-	{ 0x200f5, 0x0 },
-	{ 0x200f6, 0x0 },
-	{ 0x200f7, 0xf000 },
-	{ 0x20025, 0x0 },
-	{ 0x2002d, 0x0 },
-	{ 0x12002d, 0x0 },
-	{ 0x22002d, 0x0 },
-	{ 0x2007d, 0x212 },
-	{ 0x12007d, 0x212 },
-	{ 0x22007d, 0x212 },
-	{ 0x2007c, 0x61 },
-	{ 0x12007c, 0x61 },
-	{ 0x22007c, 0x61 },
-	{ 0x1004a, 0x500 },
-	{ 0x1104a, 0x500 },
-	{ 0x1204a, 0x500 },
-	{ 0x1304a, 0x500 },
-	{ 0x2002c, 0x0 },
-};
-
-/* ddr phy trained csr */
-struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
-	{ 0x200b2, 0x0 },
-	{ 0x1200b2, 0x0 },
-	{ 0x2200b2, 0x0 },
-	{ 0x200cb, 0x0 },
-	{ 0x10043, 0x0 },
-	{ 0x110043, 0x0 },
-	{ 0x210043, 0x0 },
-	{ 0x10143, 0x0 },
-	{ 0x110143, 0x0 },
-	{ 0x210143, 0x0 },
-	{ 0x11043, 0x0 },
-	{ 0x111043, 0x0 },
-	{ 0x211043, 0x0 },
-	{ 0x11143, 0x0 },
-	{ 0x111143, 0x0 },
-	{ 0x211143, 0x0 },
-	{ 0x12043, 0x0 },
-	{ 0x112043, 0x0 },
-	{ 0x212043, 0x0 },
-	{ 0x12143, 0x0 },
-	{ 0x112143, 0x0 },
-	{ 0x212143, 0x0 },
-	{ 0x13043, 0x0 },
-	{ 0x113043, 0x0 },
-	{ 0x213043, 0x0 },
-	{ 0x13143, 0x0 },
-	{ 0x113143, 0x0 },
-	{ 0x213143, 0x0 },
-	{ 0x80, 0x0 },
-	{ 0x100080, 0x0 },
-	{ 0x200080, 0x0 },
-	{ 0x1080, 0x0 },
-	{ 0x101080, 0x0 },
-	{ 0x201080, 0x0 },
-	{ 0x2080, 0x0 },
-	{ 0x102080, 0x0 },
-	{ 0x202080, 0x0 },
-	{ 0x3080, 0x0 },
-	{ 0x103080, 0x0 },
-	{ 0x203080, 0x0 },
-	{ 0x4080, 0x0 },
-	{ 0x104080, 0x0 },
-	{ 0x204080, 0x0 },
-	{ 0x5080, 0x0 },
-	{ 0x105080, 0x0 },
-	{ 0x205080, 0x0 },
-	{ 0x6080, 0x0 },
-	{ 0x106080, 0x0 },
-	{ 0x206080, 0x0 },
-	{ 0x7080, 0x0 },
-	{ 0x107080, 0x0 },
-	{ 0x207080, 0x0 },
-	{ 0x8080, 0x0 },
-	{ 0x108080, 0x0 },
-	{ 0x208080, 0x0 },
-	{ 0x9080, 0x0 },
-	{ 0x109080, 0x0 },
-	{ 0x209080, 0x0 },
-	{ 0x10080, 0x0 },
-	{ 0x110080, 0x0 },
-	{ 0x210080, 0x0 },
-	{ 0x10180, 0x0 },
-	{ 0x110180, 0x0 },
-	{ 0x210180, 0x0 },
-	{ 0x11080, 0x0 },
-	{ 0x111080, 0x0 },
-	{ 0x211080, 0x0 },
-	{ 0x11180, 0x0 },
-	{ 0x111180, 0x0 },
-	{ 0x211180, 0x0 },
-	{ 0x12080, 0x0 },
-	{ 0x112080, 0x0 },
-	{ 0x212080, 0x0 },
-	{ 0x12180, 0x0 },
-	{ 0x112180, 0x0 },
-	{ 0x212180, 0x0 },
-	{ 0x13080, 0x0 },
-	{ 0x113080, 0x0 },
-	{ 0x213080, 0x0 },
-	{ 0x13180, 0x0 },
-	{ 0x113180, 0x0 },
-	{ 0x213180, 0x0 },
-	{ 0x10081, 0x0 },
-	{ 0x110081, 0x0 },
-	{ 0x210081, 0x0 },
-	{ 0x10181, 0x0 },
-	{ 0x110181, 0x0 },
-	{ 0x210181, 0x0 },
-	{ 0x11081, 0x0 },
-	{ 0x111081, 0x0 },
-	{ 0x211081, 0x0 },
-	{ 0x11181, 0x0 },
-	{ 0x111181, 0x0 },
-	{ 0x211181, 0x0 },
-	{ 0x12081, 0x0 },
-	{ 0x112081, 0x0 },
-	{ 0x212081, 0x0 },
-	{ 0x12181, 0x0 },
-	{ 0x112181, 0x0 },
-	{ 0x212181, 0x0 },
-	{ 0x13081, 0x0 },
-	{ 0x113081, 0x0 },
-	{ 0x213081, 0x0 },
-	{ 0x13181, 0x0 },
-	{ 0x113181, 0x0 },
-	{ 0x213181, 0x0 },
-	{ 0x100d0, 0x0 },
-	{ 0x1100d0, 0x0 },
-	{ 0x2100d0, 0x0 },
-	{ 0x101d0, 0x0 },
-	{ 0x1101d0, 0x0 },
-	{ 0x2101d0, 0x0 },
-	{ 0x110d0, 0x0 },
-	{ 0x1110d0, 0x0 },
-	{ 0x2110d0, 0x0 },
-	{ 0x111d0, 0x0 },
-	{ 0x1111d0, 0x0 },
-	{ 0x2111d0, 0x0 },
-	{ 0x120d0, 0x0 },
-	{ 0x1120d0, 0x0 },
-	{ 0x2120d0, 0x0 },
-	{ 0x121d0, 0x0 },
-	{ 0x1121d0, 0x0 },
-	{ 0x2121d0, 0x0 },
-	{ 0x130d0, 0x0 },
-	{ 0x1130d0, 0x0 },
-	{ 0x2130d0, 0x0 },
-	{ 0x131d0, 0x0 },
-	{ 0x1131d0, 0x0 },
-	{ 0x2131d0, 0x0 },
-	{ 0x100d1, 0x0 },
-	{ 0x1100d1, 0x0 },
-	{ 0x2100d1, 0x0 },
-	{ 0x101d1, 0x0 },
-	{ 0x1101d1, 0x0 },
-	{ 0x2101d1, 0x0 },
-	{ 0x110d1, 0x0 },
-	{ 0x1110d1, 0x0 },
-	{ 0x2110d1, 0x0 },
-	{ 0x111d1, 0x0 },
-	{ 0x1111d1, 0x0 },
-	{ 0x2111d1, 0x0 },
-	{ 0x120d1, 0x0 },
-	{ 0x1120d1, 0x0 },
-	{ 0x2120d1, 0x0 },
-	{ 0x121d1, 0x0 },
-	{ 0x1121d1, 0x0 },
-	{ 0x2121d1, 0x0 },
-	{ 0x130d1, 0x0 },
-	{ 0x1130d1, 0x0 },
-	{ 0x2130d1, 0x0 },
-	{ 0x131d1, 0x0 },
-	{ 0x1131d1, 0x0 },
-	{ 0x2131d1, 0x0 },
-	{ 0x10068, 0x0 },
-	{ 0x10168, 0x0 },
-	{ 0x10268, 0x0 },
-	{ 0x10368, 0x0 },
-	{ 0x10468, 0x0 },
-	{ 0x10568, 0x0 },
-	{ 0x10668, 0x0 },
-	{ 0x10768, 0x0 },
-	{ 0x10868, 0x0 },
-	{ 0x11068, 0x0 },
-	{ 0x11168, 0x0 },
-	{ 0x11268, 0x0 },
-	{ 0x11368, 0x0 },
-	{ 0x11468, 0x0 },
-	{ 0x11568, 0x0 },
-	{ 0x11668, 0x0 },
-	{ 0x11768, 0x0 },
-	{ 0x11868, 0x0 },
-	{ 0x12068, 0x0 },
-	{ 0x12168, 0x0 },
-	{ 0x12268, 0x0 },
-	{ 0x12368, 0x0 },
-	{ 0x12468, 0x0 },
-	{ 0x12568, 0x0 },
-	{ 0x12668, 0x0 },
-	{ 0x12768, 0x0 },
-	{ 0x12868, 0x0 },
-	{ 0x13068, 0x0 },
-	{ 0x13168, 0x0 },
-	{ 0x13268, 0x0 },
-	{ 0x13368, 0x0 },
-	{ 0x13468, 0x0 },
-	{ 0x13568, 0x0 },
-	{ 0x13668, 0x0 },
-	{ 0x13768, 0x0 },
-	{ 0x13868, 0x0 },
-	{ 0x10069, 0x0 },
-	{ 0x10169, 0x0 },
-	{ 0x10269, 0x0 },
-	{ 0x10369, 0x0 },
-	{ 0x10469, 0x0 },
-	{ 0x10569, 0x0 },
-	{ 0x10669, 0x0 },
-	{ 0x10769, 0x0 },
-	{ 0x10869, 0x0 },
-	{ 0x11069, 0x0 },
-	{ 0x11169, 0x0 },
-	{ 0x11269, 0x0 },
-	{ 0x11369, 0x0 },
-	{ 0x11469, 0x0 },
-	{ 0x11569, 0x0 },
-	{ 0x11669, 0x0 },
-	{ 0x11769, 0x0 },
-	{ 0x11869, 0x0 },
-	{ 0x12069, 0x0 },
-	{ 0x12169, 0x0 },
-	{ 0x12269, 0x0 },
-	{ 0x12369, 0x0 },
-	{ 0x12469, 0x0 },
-	{ 0x12569, 0x0 },
-	{ 0x12669, 0x0 },
-	{ 0x12769, 0x0 },
-	{ 0x12869, 0x0 },
-	{ 0x13069, 0x0 },
-	{ 0x13169, 0x0 },
-	{ 0x13269, 0x0 },
-	{ 0x13369, 0x0 },
-	{ 0x13469, 0x0 },
-	{ 0x13569, 0x0 },
-	{ 0x13669, 0x0 },
-	{ 0x13769, 0x0 },
-	{ 0x13869, 0x0 },
-	{ 0x1008c, 0x0 },
-	{ 0x11008c, 0x0 },
-	{ 0x21008c, 0x0 },
-	{ 0x1018c, 0x0 },
-	{ 0x11018c, 0x0 },
-	{ 0x21018c, 0x0 },
-	{ 0x1108c, 0x0 },
-	{ 0x11108c, 0x0 },
-	{ 0x21108c, 0x0 },
-	{ 0x1118c, 0x0 },
-	{ 0x11118c, 0x0 },
-	{ 0x21118c, 0x0 },
-	{ 0x1208c, 0x0 },
-	{ 0x11208c, 0x0 },
-	{ 0x21208c, 0x0 },
-	{ 0x1218c, 0x0 },
-	{ 0x11218c, 0x0 },
-	{ 0x21218c, 0x0 },
-	{ 0x1308c, 0x0 },
-	{ 0x11308c, 0x0 },
-	{ 0x21308c, 0x0 },
-	{ 0x1318c, 0x0 },
-	{ 0x11318c, 0x0 },
-	{ 0x21318c, 0x0 },
-	{ 0x1008d, 0x0 },
-	{ 0x11008d, 0x0 },
-	{ 0x21008d, 0x0 },
-	{ 0x1018d, 0x0 },
-	{ 0x11018d, 0x0 },
-	{ 0x21018d, 0x0 },
-	{ 0x1108d, 0x0 },
-	{ 0x11108d, 0x0 },
-	{ 0x21108d, 0x0 },
-	{ 0x1118d, 0x0 },
-	{ 0x11118d, 0x0 },
-	{ 0x21118d, 0x0 },
-	{ 0x1208d, 0x0 },
-	{ 0x11208d, 0x0 },
-	{ 0x21208d, 0x0 },
-	{ 0x1218d, 0x0 },
-	{ 0x11218d, 0x0 },
-	{ 0x21218d, 0x0 },
-	{ 0x1308d, 0x0 },
-	{ 0x11308d, 0x0 },
-	{ 0x21308d, 0x0 },
-	{ 0x1318d, 0x0 },
-	{ 0x11318d, 0x0 },
-	{ 0x21318d, 0x0 },
-	{ 0x100c0, 0x0 },
-	{ 0x1100c0, 0x0 },
-	{ 0x2100c0, 0x0 },
-	{ 0x101c0, 0x0 },
-	{ 0x1101c0, 0x0 },
-	{ 0x2101c0, 0x0 },
-	{ 0x102c0, 0x0 },
-	{ 0x1102c0, 0x0 },
-	{ 0x2102c0, 0x0 },
-	{ 0x103c0, 0x0 },
-	{ 0x1103c0, 0x0 },
-	{ 0x2103c0, 0x0 },
-	{ 0x104c0, 0x0 },
-	{ 0x1104c0, 0x0 },
-	{ 0x2104c0, 0x0 },
-	{ 0x105c0, 0x0 },
-	{ 0x1105c0, 0x0 },
-	{ 0x2105c0, 0x0 },
-	{ 0x106c0, 0x0 },
-	{ 0x1106c0, 0x0 },
-	{ 0x2106c0, 0x0 },
-	{ 0x107c0, 0x0 },
-	{ 0x1107c0, 0x0 },
-	{ 0x2107c0, 0x0 },
-	{ 0x108c0, 0x0 },
-	{ 0x1108c0, 0x0 },
-	{ 0x2108c0, 0x0 },
-	{ 0x110c0, 0x0 },
-	{ 0x1110c0, 0x0 },
-	{ 0x2110c0, 0x0 },
-	{ 0x111c0, 0x0 },
-	{ 0x1111c0, 0x0 },
-	{ 0x2111c0, 0x0 },
-	{ 0x112c0, 0x0 },
-	{ 0x1112c0, 0x0 },
-	{ 0x2112c0, 0x0 },
-	{ 0x113c0, 0x0 },
-	{ 0x1113c0, 0x0 },
-	{ 0x2113c0, 0x0 },
-	{ 0x114c0, 0x0 },
-	{ 0x1114c0, 0x0 },
-	{ 0x2114c0, 0x0 },
-	{ 0x115c0, 0x0 },
-	{ 0x1115c0, 0x0 },
-	{ 0x2115c0, 0x0 },
-	{ 0x116c0, 0x0 },
-	{ 0x1116c0, 0x0 },
-	{ 0x2116c0, 0x0 },
-	{ 0x117c0, 0x0 },
-	{ 0x1117c0, 0x0 },
-	{ 0x2117c0, 0x0 },
-	{ 0x118c0, 0x0 },
-	{ 0x1118c0, 0x0 },
-	{ 0x2118c0, 0x0 },
-	{ 0x120c0, 0x0 },
-	{ 0x1120c0, 0x0 },
-	{ 0x2120c0, 0x0 },
-	{ 0x121c0, 0x0 },
-	{ 0x1121c0, 0x0 },
-	{ 0x2121c0, 0x0 },
-	{ 0x122c0, 0x0 },
-	{ 0x1122c0, 0x0 },
-	{ 0x2122c0, 0x0 },
-	{ 0x123c0, 0x0 },
-	{ 0x1123c0, 0x0 },
-	{ 0x2123c0, 0x0 },
-	{ 0x124c0, 0x0 },
-	{ 0x1124c0, 0x0 },
-	{ 0x2124c0, 0x0 },
-	{ 0x125c0, 0x0 },
-	{ 0x1125c0, 0x0 },
-	{ 0x2125c0, 0x0 },
-	{ 0x126c0, 0x0 },
-	{ 0x1126c0, 0x0 },
-	{ 0x2126c0, 0x0 },
-	{ 0x127c0, 0x0 },
-	{ 0x1127c0, 0x0 },
-	{ 0x2127c0, 0x0 },
-	{ 0x128c0, 0x0 },
-	{ 0x1128c0, 0x0 },
-	{ 0x2128c0, 0x0 },
-	{ 0x130c0, 0x0 },
-	{ 0x1130c0, 0x0 },
-	{ 0x2130c0, 0x0 },
-	{ 0x131c0, 0x0 },
-	{ 0x1131c0, 0x0 },
-	{ 0x2131c0, 0x0 },
-	{ 0x132c0, 0x0 },
-	{ 0x1132c0, 0x0 },
-	{ 0x2132c0, 0x0 },
-	{ 0x133c0, 0x0 },
-	{ 0x1133c0, 0x0 },
-	{ 0x2133c0, 0x0 },
-	{ 0x134c0, 0x0 },
-	{ 0x1134c0, 0x0 },
-	{ 0x2134c0, 0x0 },
-	{ 0x135c0, 0x0 },
-	{ 0x1135c0, 0x0 },
-	{ 0x2135c0, 0x0 },
-	{ 0x136c0, 0x0 },
-	{ 0x1136c0, 0x0 },
-	{ 0x2136c0, 0x0 },
-	{ 0x137c0, 0x0 },
-	{ 0x1137c0, 0x0 },
-	{ 0x2137c0, 0x0 },
-	{ 0x138c0, 0x0 },
-	{ 0x1138c0, 0x0 },
-	{ 0x2138c0, 0x0 },
-	{ 0x100c1, 0x0 },
-	{ 0x1100c1, 0x0 },
-	{ 0x2100c1, 0x0 },
-	{ 0x101c1, 0x0 },
-	{ 0x1101c1, 0x0 },
-	{ 0x2101c1, 0x0 },
-	{ 0x102c1, 0x0 },
-	{ 0x1102c1, 0x0 },
-	{ 0x2102c1, 0x0 },
-	{ 0x103c1, 0x0 },
-	{ 0x1103c1, 0x0 },
-	{ 0x2103c1, 0x0 },
-	{ 0x104c1, 0x0 },
-	{ 0x1104c1, 0x0 },
-	{ 0x2104c1, 0x0 },
-	{ 0x105c1, 0x0 },
-	{ 0x1105c1, 0x0 },
-	{ 0x2105c1, 0x0 },
-	{ 0x106c1, 0x0 },
-	{ 0x1106c1, 0x0 },
-	{ 0x2106c1, 0x0 },
-	{ 0x107c1, 0x0 },
-	{ 0x1107c1, 0x0 },
-	{ 0x2107c1, 0x0 },
-	{ 0x108c1, 0x0 },
-	{ 0x1108c1, 0x0 },
-	{ 0x2108c1, 0x0 },
-	{ 0x110c1, 0x0 },
-	{ 0x1110c1, 0x0 },
-	{ 0x2110c1, 0x0 },
-	{ 0x111c1, 0x0 },
-	{ 0x1111c1, 0x0 },
-	{ 0x2111c1, 0x0 },
-	{ 0x112c1, 0x0 },
-	{ 0x1112c1, 0x0 },
-	{ 0x2112c1, 0x0 },
-	{ 0x113c1, 0x0 },
-	{ 0x1113c1, 0x0 },
-	{ 0x2113c1, 0x0 },
-	{ 0x114c1, 0x0 },
-	{ 0x1114c1, 0x0 },
-	{ 0x2114c1, 0x0 },
-	{ 0x115c1, 0x0 },
-	{ 0x1115c1, 0x0 },
-	{ 0x2115c1, 0x0 },
-	{ 0x116c1, 0x0 },
-	{ 0x1116c1, 0x0 },
-	{ 0x2116c1, 0x0 },
-	{ 0x117c1, 0x0 },
-	{ 0x1117c1, 0x0 },
-	{ 0x2117c1, 0x0 },
-	{ 0x118c1, 0x0 },
-	{ 0x1118c1, 0x0 },
-	{ 0x2118c1, 0x0 },
-	{ 0x120c1, 0x0 },
-	{ 0x1120c1, 0x0 },
-	{ 0x2120c1, 0x0 },
-	{ 0x121c1, 0x0 },
-	{ 0x1121c1, 0x0 },
-	{ 0x2121c1, 0x0 },
-	{ 0x122c1, 0x0 },
-	{ 0x1122c1, 0x0 },
-	{ 0x2122c1, 0x0 },
-	{ 0x123c1, 0x0 },
-	{ 0x1123c1, 0x0 },
-	{ 0x2123c1, 0x0 },
-	{ 0x124c1, 0x0 },
-	{ 0x1124c1, 0x0 },
-	{ 0x2124c1, 0x0 },
-	{ 0x125c1, 0x0 },
-	{ 0x1125c1, 0x0 },
-	{ 0x2125c1, 0x0 },
-	{ 0x126c1, 0x0 },
-	{ 0x1126c1, 0x0 },
-	{ 0x2126c1, 0x0 },
-	{ 0x127c1, 0x0 },
-	{ 0x1127c1, 0x0 },
-	{ 0x2127c1, 0x0 },
-	{ 0x128c1, 0x0 },
-	{ 0x1128c1, 0x0 },
-	{ 0x2128c1, 0x0 },
-	{ 0x130c1, 0x0 },
-	{ 0x1130c1, 0x0 },
-	{ 0x2130c1, 0x0 },
-	{ 0x131c1, 0x0 },
-	{ 0x1131c1, 0x0 },
-	{ 0x2131c1, 0x0 },
-	{ 0x132c1, 0x0 },
-	{ 0x1132c1, 0x0 },
-	{ 0x2132c1, 0x0 },
-	{ 0x133c1, 0x0 },
-	{ 0x1133c1, 0x0 },
-	{ 0x2133c1, 0x0 },
-	{ 0x134c1, 0x0 },
-	{ 0x1134c1, 0x0 },
-	{ 0x2134c1, 0x0 },
-	{ 0x135c1, 0x0 },
-	{ 0x1135c1, 0x0 },
-	{ 0x2135c1, 0x0 },
-	{ 0x136c1, 0x0 },
-	{ 0x1136c1, 0x0 },
-	{ 0x2136c1, 0x0 },
-	{ 0x137c1, 0x0 },
-	{ 0x1137c1, 0x0 },
-	{ 0x2137c1, 0x0 },
-	{ 0x138c1, 0x0 },
-	{ 0x1138c1, 0x0 },
-	{ 0x2138c1, 0x0 },
-	{ 0x10020, 0x0 },
-	{ 0x110020, 0x0 },
-	{ 0x210020, 0x0 },
-	{ 0x11020, 0x0 },
-	{ 0x111020, 0x0 },
-	{ 0x211020, 0x0 },
-	{ 0x12020, 0x0 },
-	{ 0x112020, 0x0 },
-	{ 0x212020, 0x0 },
-	{ 0x13020, 0x0 },
-	{ 0x113020, 0x0 },
-	{ 0x213020, 0x0 },
-	{ 0x20072, 0x0 },
-	{ 0x20073, 0x0 },
-	{ 0x20074, 0x0 },
-	{ 0x100aa, 0x0 },
-	{ 0x110aa, 0x0 },
-	{ 0x120aa, 0x0 },
-	{ 0x130aa, 0x0 },
-	{ 0x20010, 0x0 },
-	{ 0x120010, 0x0 },
-	{ 0x220010, 0x0 },
-	{ 0x20011, 0x0 },
-	{ 0x120011, 0x0 },
-	{ 0x220011, 0x0 },
-	{ 0x100ae, 0x0 },
-	{ 0x1100ae, 0x0 },
-	{ 0x2100ae, 0x0 },
-	{ 0x100af, 0x0 },
-	{ 0x1100af, 0x0 },
-	{ 0x2100af, 0x0 },
-	{ 0x110ae, 0x0 },
-	{ 0x1110ae, 0x0 },
-	{ 0x2110ae, 0x0 },
-	{ 0x110af, 0x0 },
-	{ 0x1110af, 0x0 },
-	{ 0x2110af, 0x0 },
-	{ 0x120ae, 0x0 },
-	{ 0x1120ae, 0x0 },
-	{ 0x2120ae, 0x0 },
-	{ 0x120af, 0x0 },
-	{ 0x1120af, 0x0 },
-	{ 0x2120af, 0x0 },
-	{ 0x130ae, 0x0 },
-	{ 0x1130ae, 0x0 },
-	{ 0x2130ae, 0x0 },
-	{ 0x130af, 0x0 },
-	{ 0x1130af, 0x0 },
-	{ 0x2130af, 0x0 },
-	{ 0x20020, 0x0 },
-	{ 0x120020, 0x0 },
-	{ 0x220020, 0x0 },
-	{ 0x100a0, 0x0 },
-	{ 0x100a1, 0x0 },
-	{ 0x100a2, 0x0 },
-	{ 0x100a3, 0x0 },
-	{ 0x100a4, 0x0 },
-	{ 0x100a5, 0x0 },
-	{ 0x100a6, 0x0 },
-	{ 0x100a7, 0x0 },
-	{ 0x110a0, 0x0 },
-	{ 0x110a1, 0x0 },
-	{ 0x110a2, 0x0 },
-	{ 0x110a3, 0x0 },
-	{ 0x110a4, 0x0 },
-	{ 0x110a5, 0x0 },
-	{ 0x110a6, 0x0 },
-	{ 0x110a7, 0x0 },
-	{ 0x120a0, 0x0 },
-	{ 0x120a1, 0x0 },
-	{ 0x120a2, 0x0 },
-	{ 0x120a3, 0x0 },
-	{ 0x120a4, 0x0 },
-	{ 0x120a5, 0x0 },
-	{ 0x120a6, 0x0 },
-	{ 0x120a7, 0x0 },
-	{ 0x130a0, 0x0 },
-	{ 0x130a1, 0x0 },
-	{ 0x130a2, 0x0 },
-	{ 0x130a3, 0x0 },
-	{ 0x130a4, 0x0 },
-	{ 0x130a5, 0x0 },
-	{ 0x130a6, 0x0 },
-	{ 0x130a7, 0x0 },
-	{ 0x2007c, 0x0 },
-	{ 0x12007c, 0x0 },
-	{ 0x22007c, 0x0 },
-	{ 0x2007d, 0x0 },
-	{ 0x12007d, 0x0 },
-	{ 0x22007d, 0x0 },
-	{ 0x400fd, 0x0 },
-	{ 0x400c0, 0x0 },
-	{ 0x90201, 0x0 },
-	{ 0x190201, 0x0 },
-	{ 0x290201, 0x0 },
-	{ 0x90202, 0x0 },
-	{ 0x190202, 0x0 },
-	{ 0x290202, 0x0 },
-	{ 0x90203, 0x0 },
-	{ 0x190203, 0x0 },
-	{ 0x290203, 0x0 },
-	{ 0x90204, 0x0 },
-	{ 0x190204, 0x0 },
-	{ 0x290204, 0x0 },
-	{ 0x90205, 0x0 },
-	{ 0x190205, 0x0 },
-	{ 0x290205, 0x0 },
-	{ 0x90206, 0x0 },
-	{ 0x190206, 0x0 },
-	{ 0x290206, 0x0 },
-	{ 0x90207, 0x0 },
-	{ 0x190207, 0x0 },
-	{ 0x290207, 0x0 },
-	{ 0x90208, 0x0 },
-	{ 0x190208, 0x0 },
-	{ 0x290208, 0x0 },
-	{ 0x10062, 0x0 },
-	{ 0x10162, 0x0 },
-	{ 0x10262, 0x0 },
-	{ 0x10362, 0x0 },
-	{ 0x10462, 0x0 },
-	{ 0x10562, 0x0 },
-	{ 0x10662, 0x0 },
-	{ 0x10762, 0x0 },
-	{ 0x10862, 0x0 },
-	{ 0x11062, 0x0 },
-	{ 0x11162, 0x0 },
-	{ 0x11262, 0x0 },
-	{ 0x11362, 0x0 },
-	{ 0x11462, 0x0 },
-	{ 0x11562, 0x0 },
-	{ 0x11662, 0x0 },
-	{ 0x11762, 0x0 },
-	{ 0x11862, 0x0 },
-	{ 0x12062, 0x0 },
-	{ 0x12162, 0x0 },
-	{ 0x12262, 0x0 },
-	{ 0x12362, 0x0 },
-	{ 0x12462, 0x0 },
-	{ 0x12562, 0x0 },
-	{ 0x12662, 0x0 },
-	{ 0x12762, 0x0 },
-	{ 0x12862, 0x0 },
-	{ 0x13062, 0x0 },
-	{ 0x13162, 0x0 },
-	{ 0x13262, 0x0 },
-	{ 0x13362, 0x0 },
-	{ 0x13462, 0x0 },
-	{ 0x13562, 0x0 },
-	{ 0x13662, 0x0 },
-	{ 0x13762, 0x0 },
-	{ 0x13862, 0x0 },
-	{ 0x20077, 0x0 },
-	{ 0x10001, 0x0 },
-	{ 0x11001, 0x0 },
-	{ 0x12001, 0x0 },
-	{ 0x13001, 0x0 },
-	{ 0x10040, 0x0 },
-	{ 0x10140, 0x0 },
-	{ 0x10240, 0x0 },
-	{ 0x10340, 0x0 },
-	{ 0x10440, 0x0 },
-	{ 0x10540, 0x0 },
-	{ 0x10640, 0x0 },
-	{ 0x10740, 0x0 },
-	{ 0x10840, 0x0 },
-	{ 0x10030, 0x0 },
-	{ 0x10130, 0x0 },
-	{ 0x10230, 0x0 },
-	{ 0x10330, 0x0 },
-	{ 0x10430, 0x0 },
-	{ 0x10530, 0x0 },
-	{ 0x10630, 0x0 },
-	{ 0x10730, 0x0 },
-	{ 0x10830, 0x0 },
-	{ 0x11040, 0x0 },
-	{ 0x11140, 0x0 },
-	{ 0x11240, 0x0 },
-	{ 0x11340, 0x0 },
-	{ 0x11440, 0x0 },
-	{ 0x11540, 0x0 },
-	{ 0x11640, 0x0 },
-	{ 0x11740, 0x0 },
-	{ 0x11840, 0x0 },
-	{ 0x11030, 0x0 },
-	{ 0x11130, 0x0 },
-	{ 0x11230, 0x0 },
-	{ 0x11330, 0x0 },
-	{ 0x11430, 0x0 },
-	{ 0x11530, 0x0 },
-	{ 0x11630, 0x0 },
-	{ 0x11730, 0x0 },
-	{ 0x11830, 0x0 },
-	{ 0x12040, 0x0 },
-	{ 0x12140, 0x0 },
-	{ 0x12240, 0x0 },
-	{ 0x12340, 0x0 },
-	{ 0x12440, 0x0 },
-	{ 0x12540, 0x0 },
-	{ 0x12640, 0x0 },
-	{ 0x12740, 0x0 },
-	{ 0x12840, 0x0 },
-	{ 0x12030, 0x0 },
-	{ 0x12130, 0x0 },
-	{ 0x12230, 0x0 },
-	{ 0x12330, 0x0 },
-	{ 0x12430, 0x0 },
-	{ 0x12530, 0x0 },
-	{ 0x12630, 0x0 },
-	{ 0x12730, 0x0 },
-	{ 0x12830, 0x0 },
-	{ 0x13040, 0x0 },
-	{ 0x13140, 0x0 },
-	{ 0x13240, 0x0 },
-	{ 0x13340, 0x0 },
-	{ 0x13440, 0x0 },
-	{ 0x13540, 0x0 },
-	{ 0x13640, 0x0 },
-	{ 0x13740, 0x0 },
-	{ 0x13840, 0x0 },
-	{ 0x13030, 0x0 },
-	{ 0x13130, 0x0 },
-	{ 0x13230, 0x0 },
-	{ 0x13330, 0x0 },
-	{ 0x13430, 0x0 },
-	{ 0x13530, 0x0 },
-	{ 0x13630, 0x0 },
-	{ 0x13730, 0x0 },
-	{ 0x13830, 0x0 },
-};
-
-/* P0 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_cfg[] = {
-#ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-	{ 0xd0000, 0x0 },
-	{ 0x54003, 0x960 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x14 },
-	{ 0x54008, 0x131f },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x5400f, 0x100 },
-	{ 0x54012, 0x310 },
-	{ 0x54019, 0x24c4 },
-	{ 0x5401a, 0x33 },
-	{ 0x5401b, 0x4866 },
-	{ 0x5401c, 0x4800 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x24c4 },
-	{ 0x54020, 0x33 },
-	{ 0x54021, 0x4866 },
-	{ 0x54022, 0x4800 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x3 },
-	{ 0x54032, 0xc400 },
-	{ 0x54033, 0x3324 },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x48 },
-	{ 0x54036, 0x48 },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0xc400 },
-	{ 0x54039, 0x3324 },
-#else
-	{ 0xd0000, 0x0 },
-	{ 0x54003, 0xfa0 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x14 },
-	{ 0x54008, 0x131f },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x5400f, 0x100 },
-	{ 0x54012, 0x310 },
-	{ 0x54019, 0x3ff4 },
-	{ 0x5401a, 0x33 },
-	{ 0x5401b, 0x4866 },
-	{ 0x5401c, 0x4800 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x3ff4 },
-	{ 0x54020, 0x33 },
-	{ 0x54021, 0x4866 },
-	{ 0x54022, 0x4800 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x3 },
-	{ 0x54032, 0xf400 },
-	{ 0x54033, 0x333f },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x48 },
-	{ 0x54036, 0x48 },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0xf400 },
-	{ 0x54039, 0x333f },
-#endif
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x48 },
-	{ 0x5403c, 0x48 },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-/* P1 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp1_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54002, 0x101 },
-	{ 0x54003, 0x190 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x14 },
-	{ 0x54008, 0x121f },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x5400f, 0x100 },
-	{ 0x54012, 0x310 },
-	{ 0x54019, 0x84 },
-	{ 0x5401a, 0x33 },
-	{ 0x5401b, 0x4866 },
-	{ 0x5401c, 0x4800 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x84 },
-	{ 0x54020, 0x33 },
-	{ 0x54021, 0x4866 },
-	{ 0x54022, 0x4800 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x3 },
-	{ 0x54032, 0x8400 },
-	{ 0x54033, 0x3300 },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x48 },
-	{ 0x54036, 0x48 },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0x8400 },
-	{ 0x54039, 0x3300 },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x48 },
-	{ 0x5403c, 0x48 },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-/* P2 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp2_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54002, 0x102 },
-	{ 0x54003, 0x64 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x14 },
-	{ 0x54008, 0x121f },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x5400f, 0x100 },
-	{ 0x54012, 0x310 },
-	{ 0x54019, 0x84 },
-	{ 0x5401a, 0x33 },
-	{ 0x5401b, 0x4866 },
-	{ 0x5401c, 0x4800 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x84 },
-	{ 0x54020, 0x33 },
-	{ 0x54021, 0x4866 },
-	{ 0x54022, 0x4800 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x3 },
-	{ 0x54032, 0x8400 },
-	{ 0x54033, 0x3300 },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x48 },
-	{ 0x54036, 0x48 },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0x8400 },
-	{ 0x54039, 0x3300 },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x48 },
-	{ 0x5403c, 0x48 },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-/* P0 2D message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
-	{ 0xd0000, 0x0 },
-#ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-	{ 0x54003, 0x960 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x14 },
-	{ 0x54008, 0x61 },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x5400d, 0x100 },
-	{ 0x5400f, 0x100 },
-	{ 0x54010, 0x1f7f },
-	{ 0x54012, 0x310 },
-	{ 0x54019, 0x24c4 },
-	{ 0x5401a, 0x33 },
-	{ 0x5401b, 0x4866 },
-	{ 0x5401c, 0x4800 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x24c4 },
-	{ 0x54020, 0x33 },
-	{ 0x54021, 0x4866 },
-	{ 0x54022, 0x4800 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x3 },
-	{ 0x54032, 0xc400 },
-	{ 0x54033, 0x3324 },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x48 },
-	{ 0x54036, 0x48 },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0xc400 },
-	{ 0x54039, 0x3324 },
-#else
-	{ 0x54003, 0xfa0 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x14 },
-	{ 0x54008, 0x61 },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x5400f, 0x100 },
-	{ 0x54010, 0x1f7f },
-	{ 0x54012, 0x310 },
-	{ 0x54019, 0x3ff4 },
-	{ 0x5401a, 0x33 },
-	{ 0x5401b, 0x4866 },
-	{ 0x5401c, 0x4800 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x3ff4 },
-	{ 0x54020, 0x33 },
-	{ 0x54021, 0x4866 },
-	{ 0x54022, 0x4800 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x3 },
-	{ 0x54032, 0xf400 },
-	{ 0x54033, 0x333f },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x48 },
-	{ 0x54036, 0x48 },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0xf400 },
-	{ 0x54039, 0x333f },
-#endif
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x48 },
-	{ 0x5403c, 0x48 },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-/* DRAM PHY init engine image */
-struct dram_cfg_param ddr_phy_pie[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x90000, 0x10 },
-	{ 0x90001, 0x400 },
-	{ 0x90002, 0x10e },
-	{ 0x90003, 0x0 },
-	{ 0x90004, 0x0 },
-	{ 0x90005, 0x8 },
-	{ 0x90029, 0xb },
-	{ 0x9002a, 0x480 },
-	{ 0x9002b, 0x109 },
-	{ 0x9002c, 0x8 },
-	{ 0x9002d, 0x448 },
-	{ 0x9002e, 0x139 },
-	{ 0x9002f, 0x8 },
-	{ 0x90030, 0x478 },
-	{ 0x90031, 0x109 },
-	{ 0x90032, 0x0 },
-	{ 0x90033, 0xe8 },
-	{ 0x90034, 0x109 },
-	{ 0x90035, 0x2 },
-	{ 0x90036, 0x10 },
-	{ 0x90037, 0x139 },
-	{ 0x90038, 0xb },
-	{ 0x90039, 0x7c0 },
-	{ 0x9003a, 0x139 },
-	{ 0x9003b, 0x44 },
-	{ 0x9003c, 0x633 },
-	{ 0x9003d, 0x159 },
-	{ 0x9003e, 0x14f },
-	{ 0x9003f, 0x630 },
-	{ 0x90040, 0x159 },
-	{ 0x90041, 0x47 },
-	{ 0x90042, 0x633 },
-	{ 0x90043, 0x149 },
-	{ 0x90044, 0x4f },
-	{ 0x90045, 0x633 },
-	{ 0x90046, 0x179 },
-	{ 0x90047, 0x8 },
-	{ 0x90048, 0xe0 },
-	{ 0x90049, 0x109 },
-	{ 0x9004a, 0x0 },
-	{ 0x9004b, 0x7c8 },
-	{ 0x9004c, 0x109 },
-	{ 0x9004d, 0x0 },
-	{ 0x9004e, 0x1 },
-	{ 0x9004f, 0x8 },
-	{ 0x90050, 0x0 },
-	{ 0x90051, 0x45a },
-	{ 0x90052, 0x9 },
-	{ 0x90053, 0x0 },
-	{ 0x90054, 0x448 },
-	{ 0x90055, 0x109 },
-	{ 0x90056, 0x40 },
-	{ 0x90057, 0x633 },
-	{ 0x90058, 0x179 },
-	{ 0x90059, 0x1 },
-	{ 0x9005a, 0x618 },
-	{ 0x9005b, 0x109 },
-	{ 0x9005c, 0x40c0 },
-	{ 0x9005d, 0x633 },
-	{ 0x9005e, 0x149 },
-	{ 0x9005f, 0x8 },
-	{ 0x90060, 0x4 },
-	{ 0x90061, 0x48 },
-	{ 0x90062, 0x4040 },
-	{ 0x90063, 0x633 },
-	{ 0x90064, 0x149 },
-	{ 0x90065, 0x0 },
-	{ 0x90066, 0x4 },
-	{ 0x90067, 0x48 },
-	{ 0x90068, 0x40 },
-	{ 0x90069, 0x633 },
-	{ 0x9006a, 0x149 },
-	{ 0x9006b, 0x10 },
-	{ 0x9006c, 0x4 },
-	{ 0x9006d, 0x18 },
-	{ 0x9006e, 0x0 },
-	{ 0x9006f, 0x4 },
-	{ 0x90070, 0x78 },
-	{ 0x90071, 0x549 },
-	{ 0x90072, 0x633 },
-	{ 0x90073, 0x159 },
-	{ 0x90074, 0xd49 },
-	{ 0x90075, 0x633 },
-	{ 0x90076, 0x159 },
-	{ 0x90077, 0x94a },
-	{ 0x90078, 0x633 },
-	{ 0x90079, 0x159 },
-	{ 0x9007a, 0x441 },
-	{ 0x9007b, 0x633 },
-	{ 0x9007c, 0x149 },
-	{ 0x9007d, 0x42 },
-	{ 0x9007e, 0x633 },
-	{ 0x9007f, 0x149 },
-	{ 0x90080, 0x1 },
-	{ 0x90081, 0x633 },
-	{ 0x90082, 0x149 },
-	{ 0x90083, 0x0 },
-	{ 0x90084, 0xe0 },
-	{ 0x90085, 0x109 },
-	{ 0x90086, 0xa },
-	{ 0x90087, 0x10 },
-	{ 0x90088, 0x109 },
-	{ 0x90089, 0x9 },
-	{ 0x9008a, 0x3c0 },
-	{ 0x9008b, 0x149 },
-	{ 0x9008c, 0x9 },
-	{ 0x9008d, 0x3c0 },
-	{ 0x9008e, 0x159 },
-	{ 0x9008f, 0x18 },
-	{ 0x90090, 0x10 },
-	{ 0x90091, 0x109 },
-	{ 0x90092, 0x0 },
-	{ 0x90093, 0x3c0 },
-	{ 0x90094, 0x109 },
-	{ 0x90095, 0x18 },
-	{ 0x90096, 0x4 },
-	{ 0x90097, 0x48 },
-	{ 0x90098, 0x18 },
-	{ 0x90099, 0x4 },
-	{ 0x9009a, 0x58 },
-	{ 0x9009b, 0xb },
-	{ 0x9009c, 0x10 },
-	{ 0x9009d, 0x109 },
-	{ 0x9009e, 0x1 },
-	{ 0x9009f, 0x10 },
-	{ 0x900a0, 0x109 },
-	{ 0x900a1, 0x5 },
-	{ 0x900a2, 0x7c0 },
-	{ 0x900a3, 0x109 },
-	{ 0x40000, 0x811 },
-	{ 0x40020, 0x880 },
-	{ 0x40040, 0x0 },
-	{ 0x40060, 0x0 },
-	{ 0x40001, 0x4008 },
-	{ 0x40021, 0x83 },
-	{ 0x40041, 0x4f },
-	{ 0x40061, 0x0 },
-	{ 0x40002, 0x4040 },
-	{ 0x40022, 0x83 },
-	{ 0x40042, 0x51 },
-	{ 0x40062, 0x0 },
-	{ 0x40003, 0x811 },
-	{ 0x40023, 0x880 },
-	{ 0x40043, 0x0 },
-	{ 0x40063, 0x0 },
-	{ 0x40004, 0x720 },
-	{ 0x40024, 0xf },
-	{ 0x40044, 0x1740 },
-	{ 0x40064, 0x0 },
-	{ 0x40005, 0x16 },
-	{ 0x40025, 0x83 },
-	{ 0x40045, 0x4b },
-	{ 0x40065, 0x0 },
-	{ 0x40006, 0x716 },
-	{ 0x40026, 0xf },
-	{ 0x40046, 0x2001 },
-	{ 0x40066, 0x0 },
-	{ 0x40007, 0x716 },
-	{ 0x40027, 0xf },
-	{ 0x40047, 0x2800 },
-	{ 0x40067, 0x0 },
-	{ 0x40008, 0x716 },
-	{ 0x40028, 0xf },
-	{ 0x40048, 0xf00 },
-	{ 0x40068, 0x0 },
-	{ 0x40009, 0x720 },
-	{ 0x40029, 0xf },
-	{ 0x40049, 0x1400 },
-	{ 0x40069, 0x0 },
-	{ 0x4000a, 0xe08 },
-	{ 0x4002a, 0xc15 },
-	{ 0x4004a, 0x0 },
-	{ 0x4006a, 0x0 },
-	{ 0x4000b, 0x625 },
-	{ 0x4002b, 0x15 },
-	{ 0x4004b, 0x0 },
-	{ 0x4006b, 0x0 },
-	{ 0x4000c, 0x4028 },
-	{ 0x4002c, 0x80 },
-	{ 0x4004c, 0x0 },
-	{ 0x4006c, 0x0 },
-	{ 0x4000d, 0xe08 },
-	{ 0x4002d, 0xc1a },
-	{ 0x4004d, 0x0 },
-	{ 0x4006d, 0x0 },
-	{ 0x4000e, 0x625 },
-	{ 0x4002e, 0x1a },
-	{ 0x4004e, 0x0 },
-	{ 0x4006e, 0x0 },
-	{ 0x4000f, 0x4040 },
-	{ 0x4002f, 0x80 },
-	{ 0x4004f, 0x0 },
-	{ 0x4006f, 0x0 },
-	{ 0x40010, 0x2604 },
-	{ 0x40030, 0x15 },
-	{ 0x40050, 0x0 },
-	{ 0x40070, 0x0 },
-	{ 0x40011, 0x708 },
-	{ 0x40031, 0x5 },
-	{ 0x40051, 0x0 },
-	{ 0x40071, 0x2002 },
-	{ 0x40012, 0x8 },
-	{ 0x40032, 0x80 },
-	{ 0x40052, 0x0 },
-	{ 0x40072, 0x0 },
-	{ 0x40013, 0x2604 },
-	{ 0x40033, 0x1a },
-	{ 0x40053, 0x0 },
-	{ 0x40073, 0x0 },
-	{ 0x40014, 0x708 },
-	{ 0x40034, 0xa },
-	{ 0x40054, 0x0 },
-	{ 0x40074, 0x2002 },
-	{ 0x40015, 0x4040 },
-	{ 0x40035, 0x80 },
-	{ 0x40055, 0x0 },
-	{ 0x40075, 0x0 },
-	{ 0x40016, 0x60a },
-	{ 0x40036, 0x15 },
-	{ 0x40056, 0x1200 },
-	{ 0x40076, 0x0 },
-	{ 0x40017, 0x61a },
-	{ 0x40037, 0x15 },
-	{ 0x40057, 0x1300 },
-	{ 0x40077, 0x0 },
-	{ 0x40018, 0x60a },
-	{ 0x40038, 0x1a },
-	{ 0x40058, 0x1200 },
-	{ 0x40078, 0x0 },
-	{ 0x40019, 0x642 },
-	{ 0x40039, 0x1a },
-	{ 0x40059, 0x1300 },
-	{ 0x40079, 0x0 },
-	{ 0x4001a, 0x4808 },
-	{ 0x4003a, 0x880 },
-	{ 0x4005a, 0x0 },
-	{ 0x4007a, 0x0 },
-	{ 0x900a4, 0x0 },
-	{ 0x900a5, 0x790 },
-	{ 0x900a6, 0x11a },
-	{ 0x900a7, 0x8 },
-	{ 0x900a8, 0x7aa },
-	{ 0x900a9, 0x2a },
-	{ 0x900aa, 0x10 },
-	{ 0x900ab, 0x7b2 },
-	{ 0x900ac, 0x2a },
-	{ 0x900ad, 0x0 },
-	{ 0x900ae, 0x7c8 },
-	{ 0x900af, 0x109 },
-	{ 0x900b0, 0x10 },
-	{ 0x900b1, 0x10 },
-	{ 0x900b2, 0x109 },
-	{ 0x900b3, 0x10 },
-	{ 0x900b4, 0x2a8 },
-	{ 0x900b5, 0x129 },
-	{ 0x900b6, 0x8 },
-	{ 0x900b7, 0x370 },
-	{ 0x900b8, 0x129 },
-	{ 0x900b9, 0xa },
-	{ 0x900ba, 0x3c8 },
-	{ 0x900bb, 0x1a9 },
-	{ 0x900bc, 0xc },
-	{ 0x900bd, 0x408 },
-	{ 0x900be, 0x199 },
-	{ 0x900bf, 0x14 },
-	{ 0x900c0, 0x790 },
-	{ 0x900c1, 0x11a },
-	{ 0x900c2, 0x8 },
-	{ 0x900c3, 0x4 },
-	{ 0x900c4, 0x18 },
-	{ 0x900c5, 0xe },
-	{ 0x900c6, 0x408 },
-	{ 0x900c7, 0x199 },
-	{ 0x900c8, 0x8 },
-	{ 0x900c9, 0x8568 },
-	{ 0x900ca, 0x108 },
-	{ 0x900cb, 0x18 },
-	{ 0x900cc, 0x790 },
-	{ 0x900cd, 0x16a },
-	{ 0x900ce, 0x8 },
-	{ 0x900cf, 0x1d8 },
-	{ 0x900d0, 0x169 },
-	{ 0x900d1, 0x10 },
-	{ 0x900d2, 0x8558 },
-	{ 0x900d3, 0x168 },
-	{ 0x900d4, 0x70 },
-	{ 0x900d5, 0x788 },
-	{ 0x900d6, 0x16a },
-	{ 0x900d7, 0x1ff8 },
-	{ 0x900d8, 0x85a8 },
-	{ 0x900d9, 0x1e8 },
-	{ 0x900da, 0x50 },
-	{ 0x900db, 0x798 },
-	{ 0x900dc, 0x16a },
-	{ 0x900dd, 0x60 },
-	{ 0x900de, 0x7a0 },
-	{ 0x900df, 0x16a },
-	{ 0x900e0, 0x8 },
-	{ 0x900e1, 0x8310 },
-	{ 0x900e2, 0x168 },
-	{ 0x900e3, 0x8 },
-	{ 0x900e4, 0xa310 },
-	{ 0x900e5, 0x168 },
-	{ 0x900e6, 0xa },
-	{ 0x900e7, 0x408 },
-	{ 0x900e8, 0x169 },
-	{ 0x900e9, 0x6e },
-	{ 0x900ea, 0x0 },
-	{ 0x900eb, 0x68 },
-	{ 0x900ec, 0x0 },
-	{ 0x900ed, 0x408 },
-	{ 0x900ee, 0x169 },
-	{ 0x900ef, 0x0 },
-	{ 0x900f0, 0x8310 },
-	{ 0x900f1, 0x168 },
-	{ 0x900f2, 0x0 },
-	{ 0x900f3, 0xa310 },
-	{ 0x900f4, 0x168 },
-	{ 0x900f5, 0x1ff8 },
-	{ 0x900f6, 0x85a8 },
-	{ 0x900f7, 0x1e8 },
-	{ 0x900f8, 0x68 },
-	{ 0x900f9, 0x798 },
-	{ 0x900fa, 0x16a },
-	{ 0x900fb, 0x78 },
-	{ 0x900fc, 0x7a0 },
-	{ 0x900fd, 0x16a },
-	{ 0x900fe, 0x68 },
-	{ 0x900ff, 0x790 },
-	{ 0x90100, 0x16a },
-	{ 0x90101, 0x8 },
-	{ 0x90102, 0x8b10 },
-	{ 0x90103, 0x168 },
-	{ 0x90104, 0x8 },
-	{ 0x90105, 0xab10 },
-	{ 0x90106, 0x168 },
-	{ 0x90107, 0xa },
-	{ 0x90108, 0x408 },
-	{ 0x90109, 0x169 },
-	{ 0x9010a, 0x58 },
-	{ 0x9010b, 0x0 },
-	{ 0x9010c, 0x68 },
-	{ 0x9010d, 0x0 },
-	{ 0x9010e, 0x408 },
-	{ 0x9010f, 0x169 },
-	{ 0x90110, 0x0 },
-	{ 0x90111, 0x8b10 },
-	{ 0x90112, 0x168 },
-	{ 0x90113, 0x1 },
-	{ 0x90114, 0xab10 },
-	{ 0x90115, 0x168 },
-	{ 0x90116, 0x0 },
-	{ 0x90117, 0x1d8 },
-	{ 0x90118, 0x169 },
-	{ 0x90119, 0x80 },
-	{ 0x9011a, 0x790 },
-	{ 0x9011b, 0x16a },
-	{ 0x9011c, 0x18 },
-	{ 0x9011d, 0x7aa },
-	{ 0x9011e, 0x6a },
-	{ 0x9011f, 0xa },
-	{ 0x90120, 0x0 },
-	{ 0x90121, 0x1e9 },
-	{ 0x90122, 0x8 },
-	{ 0x90123, 0x8080 },
-	{ 0x90124, 0x108 },
-	{ 0x90125, 0xf },
-	{ 0x90126, 0x408 },
-	{ 0x90127, 0x169 },
-	{ 0x90128, 0xc },
-	{ 0x90129, 0x0 },
-	{ 0x9012a, 0x68 },
-	{ 0x9012b, 0x9 },
-	{ 0x9012c, 0x0 },
-	{ 0x9012d, 0x1a9 },
-	{ 0x9012e, 0x0 },
-	{ 0x9012f, 0x408 },
-	{ 0x90130, 0x169 },
-	{ 0x90131, 0x0 },
-	{ 0x90132, 0x8080 },
-	{ 0x90133, 0x108 },
-	{ 0x90134, 0x8 },
-	{ 0x90135, 0x7aa },
-	{ 0x90136, 0x6a },
-	{ 0x90137, 0x0 },
-	{ 0x90138, 0x8568 },
-	{ 0x90139, 0x108 },
-	{ 0x9013a, 0xb7 },
-	{ 0x9013b, 0x790 },
-	{ 0x9013c, 0x16a },
-	{ 0x9013d, 0x1f },
-	{ 0x9013e, 0x0 },
-	{ 0x9013f, 0x68 },
-	{ 0x90140, 0x8 },
-	{ 0x90141, 0x8558 },
-	{ 0x90142, 0x168 },
-	{ 0x90143, 0xf },
-	{ 0x90144, 0x408 },
-	{ 0x90145, 0x169 },
-	{ 0x90146, 0xd },
-	{ 0x90147, 0x0 },
-	{ 0x90148, 0x68 },
-	{ 0x90149, 0x0 },
-	{ 0x9014a, 0x408 },
-	{ 0x9014b, 0x169 },
-	{ 0x9014c, 0x0 },
-	{ 0x9014d, 0x8558 },
-	{ 0x9014e, 0x168 },
-	{ 0x9014f, 0x8 },
-	{ 0x90150, 0x3c8 },
-	{ 0x90151, 0x1a9 },
-	{ 0x90152, 0x3 },
-	{ 0x90153, 0x370 },
-	{ 0x90154, 0x129 },
-	{ 0x90155, 0x20 },
-	{ 0x90156, 0x2aa },
-	{ 0x90157, 0x9 },
-	{ 0x90158, 0x8 },
-	{ 0x90159, 0xe8 },
-	{ 0x9015a, 0x109 },
-	{ 0x9015b, 0x0 },
-	{ 0x9015c, 0x8140 },
-	{ 0x9015d, 0x10c },
-	{ 0x9015e, 0x10 },
-	{ 0x9015f, 0x8138 },
-	{ 0x90160, 0x104 },
-	{ 0x90161, 0x8 },
-	{ 0x90162, 0x448 },
-	{ 0x90163, 0x109 },
-	{ 0x90164, 0xf },
-	{ 0x90165, 0x7c0 },
-	{ 0x90166, 0x109 },
-	{ 0x90167, 0x0 },
-	{ 0x90168, 0xe8 },
-	{ 0x90169, 0x109 },
-	{ 0x9016a, 0x47 },
-	{ 0x9016b, 0x630 },
-	{ 0x9016c, 0x109 },
-	{ 0x9016d, 0x8 },
-	{ 0x9016e, 0x618 },
-	{ 0x9016f, 0x109 },
-	{ 0x90170, 0x8 },
-	{ 0x90171, 0xe0 },
-	{ 0x90172, 0x109 },
-	{ 0x90173, 0x0 },
-	{ 0x90174, 0x7c8 },
-	{ 0x90175, 0x109 },
-	{ 0x90176, 0x8 },
-	{ 0x90177, 0x8140 },
-	{ 0x90178, 0x10c },
-	{ 0x90179, 0x0 },
-	{ 0x9017a, 0x478 },
-	{ 0x9017b, 0x109 },
-	{ 0x9017c, 0x0 },
-	{ 0x9017d, 0x1 },
-	{ 0x9017e, 0x8 },
-	{ 0x9017f, 0x8 },
-	{ 0x90180, 0x4 },
-	{ 0x90181, 0x0 },
-	{ 0x90006, 0x8 },
-	{ 0x90007, 0x7c8 },
-	{ 0x90008, 0x109 },
-	{ 0x90009, 0x0 },
-	{ 0x9000a, 0x400 },
-	{ 0x9000b, 0x106 },
-	{ 0xd00e7, 0x400 },
-	{ 0x90017, 0x0 },
-	{ 0x9001f, 0x29 },
-	{ 0x90026, 0x68 },
-	{ 0x400d0, 0x0 },
-	{ 0x400d1, 0x101 },
-	{ 0x400d2, 0x105 },
-	{ 0x400d3, 0x107 },
-	{ 0x400d4, 0x10f },
-	{ 0x400d5, 0x202 },
-	{ 0x400d6, 0x20a },
-	{ 0x400d7, 0x20b },
-	{ 0x2003a, 0x2 },
-#ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-	{ 0x2000b, 0x4b },
-	{ 0x2000c, 0x96 },
-	{ 0x2000d, 0x5dc },
-#else
-	{ 0x200be, 0x3 },
-	{ 0x2000b, 0x7d },
-	{ 0x2000c, 0xfa },
-	{ 0x2000d, 0x9c4 },
-#endif
-	{ 0x2000e, 0x2c },
-	{ 0x12000b, 0xc },
-	{ 0x12000c, 0x19 },
-	{ 0x12000d, 0xfa },
-	{ 0x12000e, 0x10 },
-	{ 0x22000b, 0x3 },
-	{ 0x22000c, 0x6 },
-	{ 0x22000d, 0x3e },
-	{ 0x22000e, 0x10 },
-	{ 0x9000c, 0x0 },
-	{ 0x9000d, 0x173 },
-	{ 0x9000e, 0x60 },
-	{ 0x9000f, 0x6110 },
-	{ 0x90010, 0x2152 },
-	{ 0x90011, 0xdfbd },
-	{ 0x90012, 0x2060 },
-	{ 0x90013, 0x6152 },
-	{ 0x20010, 0x5a },
-	{ 0x20011, 0x3 },
-#ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-	{ 0x120010, 0x5a },
-	{ 0x120011, 0x3 },
-	{ 0x220010, 0x5a },
-	{ 0x220011, 0x3 },
-#endif
-	{ 0x40080, 0xe0 },
-	{ 0x40081, 0x12 },
-	{ 0x40082, 0xe0 },
-	{ 0x40083, 0x12 },
-	{ 0x40084, 0xe0 },
-	{ 0x40085, 0x12 },
-	{ 0x140080, 0xe0 },
-	{ 0x140081, 0x12 },
-	{ 0x140082, 0xe0 },
-	{ 0x140083, 0x12 },
-	{ 0x140084, 0xe0 },
-	{ 0x140085, 0x12 },
-	{ 0x240080, 0xe0 },
-	{ 0x240081, 0x12 },
-	{ 0x240082, 0xe0 },
-	{ 0x240083, 0x12 },
-	{ 0x240084, 0xe0 },
-	{ 0x240085, 0x12 },
-	{ 0x400fd, 0xf },
-	{ 0x10011, 0x1 },
-	{ 0x10012, 0x1 },
-	{ 0x10013, 0x180 },
-	{ 0x10018, 0x1 },
-	{ 0x10002, 0x6209 },
-	{ 0x100b2, 0x1 },
-	{ 0x101b4, 0x1 },
-	{ 0x102b4, 0x1 },
-	{ 0x103b4, 0x1 },
-	{ 0x104b4, 0x1 },
-	{ 0x105b4, 0x1 },
-	{ 0x106b4, 0x1 },
-	{ 0x107b4, 0x1 },
-	{ 0x108b4, 0x1 },
-	{ 0x11011, 0x1 },
-	{ 0x11012, 0x1 },
-	{ 0x11013, 0x180 },
-	{ 0x11018, 0x1 },
-	{ 0x11002, 0x6209 },
-	{ 0x110b2, 0x1 },
-	{ 0x111b4, 0x1 },
-	{ 0x112b4, 0x1 },
-	{ 0x113b4, 0x1 },
-	{ 0x114b4, 0x1 },
-	{ 0x115b4, 0x1 },
-	{ 0x116b4, 0x1 },
-	{ 0x117b4, 0x1 },
-	{ 0x118b4, 0x1 },
-	{ 0x12011, 0x1 },
-	{ 0x12012, 0x1 },
-	{ 0x12013, 0x180 },
-	{ 0x12018, 0x1 },
-	{ 0x12002, 0x6209 },
-	{ 0x120b2, 0x1 },
-	{ 0x121b4, 0x1 },
-	{ 0x122b4, 0x1 },
-	{ 0x123b4, 0x1 },
-	{ 0x124b4, 0x1 },
-	{ 0x125b4, 0x1 },
-	{ 0x126b4, 0x1 },
-	{ 0x127b4, 0x1 },
-	{ 0x128b4, 0x1 },
-	{ 0x13011, 0x1 },
-	{ 0x13012, 0x1 },
-	{ 0x13013, 0x180 },
-	{ 0x13018, 0x1 },
-	{ 0x13002, 0x6209 },
-	{ 0x130b2, 0x1 },
-	{ 0x131b4, 0x1 },
-	{ 0x132b4, 0x1 },
-	{ 0x133b4, 0x1 },
-	{ 0x134b4, 0x1 },
-	{ 0x135b4, 0x1 },
-	{ 0x136b4, 0x1 },
-	{ 0x137b4, 0x1 },
-	{ 0x138b4, 0x1 },
-	{ 0x20089, 0x1 },
-	{ 0x20088, 0x19 },
-	{ 0xc0080, 0x2 },
-	{ 0xd0000, 0x1 }
-};
-
-struct dram_fsp_msg ddr_dram_fsp_msg[] = {
-	{
-#ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-		/* P0 2400mts 1D */
-		.drate = 2400,
-#else
-		/* P0 4000mts 1D */
-		.drate = 4000,
-#endif
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp0_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_cfg),
-	},
-	{
-		/* P1 400mts 1D */
-		.drate = 400,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp1_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp1_cfg),
-	},
-	{
-		/* P2 100mts 1D */
-		.drate = 100,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp2_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp2_cfg),
-	},
-	{
-#ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-                /* P0 2400mts 2D */
-                .drate = 2400,
-#else
-                /* P0 4000mts 2D */
-                .drate = 4000,
-#endif
-		.fw_type = FW_2D_IMAGE,
-		.fsp_cfg = ddr_fsp0_2d_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_2d_cfg),
-	},
-};
-
-/* ddr timing config params */
-struct dram_timing_info dram_timing = {
-	.ddrc_cfg = ddr_ddrc_cfg,
-	.ddrc_cfg_num = ARRAY_SIZE(ddr_ddrc_cfg),
-	.ddrphy_cfg = ddr_ddrphy_cfg,
-	.ddrphy_cfg_num = ARRAY_SIZE(ddr_ddrphy_cfg),
-	.fsp_msg = ddr_dram_fsp_msg,
-	.fsp_msg_num = ARRAY_SIZE(ddr_dram_fsp_msg),
-	.ddrphy_trained_csr = ddr_ddrphy_trained_csr,
-	.ddrphy_trained_csr_num = ARRAY_SIZE(ddr_ddrphy_trained_csr),
-	.ddrphy_pie = ddr_phy_pie,
-	.ddrphy_pie_num = ARRAY_SIZE(ddr_phy_pie),
-#ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-	.fsp_table = { 2400, 400, 100, },
-#else
-        .fsp_table = { 4000, 400, 100, },
-#endif
-};
-
-#ifndef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-#ifdef CONFIG_IMX8M_DRAM_INLINE_ECC
-void board_dram_ecc_scrub(void)
-{
-	ddrc_inline_ecc_scrub(0x0,0x3ffffff);
-	ddrc_inline_ecc_scrub(0x20000000,0x23ffffff);
-	ddrc_inline_ecc_scrub(0x40000000,0x43ffffff);
-	ddrc_inline_ecc_scrub(0x4000000,0x7ffffff);
-	ddrc_inline_ecc_scrub(0x24000000,0x27ffffff);
-	ddrc_inline_ecc_scrub(0x44000000,0x47ffffff);
-	ddrc_inline_ecc_scrub(0x8000000,0xbffffff);
-	ddrc_inline_ecc_scrub(0x28000000,0x2bffffff);
-	ddrc_inline_ecc_scrub(0x48000000,0x4bffffff);
-	ddrc_inline_ecc_scrub(0xc000000,0xfffffff);
-	ddrc_inline_ecc_scrub(0x2c000000,0x2fffffff);
-	ddrc_inline_ecc_scrub(0x4c000000,0x4fffffff);
-	ddrc_inline_ecc_scrub(0x10000000,0x13ffffff);
-	ddrc_inline_ecc_scrub(0x30000000,0x33ffffff);
-	ddrc_inline_ecc_scrub(0x50000000,0x53ffffff);
-	ddrc_inline_ecc_scrub(0x14000000,0x17ffffff);
-	ddrc_inline_ecc_scrub(0x34000000,0x37ffffff);
-	ddrc_inline_ecc_scrub(0x54000000,0x57ffffff);
-	ddrc_inline_ecc_scrub(0x18000000,0x1bffffff);
-	ddrc_inline_ecc_scrub(0x38000000,0x3bffffff);
-	ddrc_inline_ecc_scrub(0x58000000,0x5bffffff);
-	ddrc_inline_ecc_scrub_end(0x0,0x5fffffff);
-}
-#endif
-#endif
diff --git a/board/freescale/imx8mp_a200/lpddr4_timing_ndm.c b/board/freescale/imx8mp_a200/lpddr4_timing_ndm.c
deleted file mode 120000
index 116d9c3c9f..0000000000
--- a/board/freescale/imx8mp_a200/lpddr4_timing_ndm.c
+++ /dev/null
@@ -1 +0,0 @@
-../imx8mp_evk/lpddr4_timing_ndm.c
\ No newline at end of file
diff --git a/board/freescale/imx8mp_a200/spl.c b/board/freescale/imx8mp_a200/spl.c
deleted file mode 100644
index 8059e7e84f..0000000000
--- a/board/freescale/imx8mp_a200/spl.c
+++ /dev/null
@@ -1,201 +0,0 @@
-/*
- * Copyright 2018-2019 NXP
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-#include <common.h>
-#include <command.h>
-#include <cpu_func.h>
-#include <hang.h>
-#include <image.h>
-#include <init.h>
-#include <log.h>
-#include <spl.h>
-#include <asm/global_data.h>
-#include <asm/io.h>
-#include <errno.h>
-#include <asm/io.h>
-#include <asm/mach-imx/iomux-v3.h>
-#include <asm/arch/imx8mp_pins.h>
-#include <asm/arch/sys_proto.h>
-#include <asm/mach-imx/boot_mode.h>
-#include <power/pmic.h>
-
-#include <power/pca9450.h>
-#include <asm/arch/clock.h>
-#include <dm/uclass.h>
-#include <dm/device.h>
-#include <dm/uclass-internal.h>
-#include <dm/device-internal.h>
-#include <asm/mach-imx/gpio.h>
-#include <asm/mach-imx/mxc_i2c.h>
-#include <fsl_esdhc_imx.h>
-#include <mmc.h>
-#include <asm/arch/ddr.h>
-
-DECLARE_GLOBAL_DATA_PTR;
-extern void idt_spl_dram_init(void);
-
-int spl_board_boot_device(enum boot_device boot_dev_spl)
-{
-#ifdef CONFIG_SPL_BOOTROM_SUPPORT
-	return BOOT_DEVICE_BOOTROM;
-#else
-	switch (boot_dev_spl) {
-	case SD1_BOOT:
-	case MMC1_BOOT:
-	case SD2_BOOT:
-	case MMC2_BOOT:
-		return BOOT_DEVICE_MMC1;
-	case SD3_BOOT:
-	case MMC3_BOOT:
-		return BOOT_DEVICE_MMC2;
-	case QSPI_BOOT:
-		return BOOT_DEVICE_NOR;
-	case NAND_BOOT:
-		return BOOT_DEVICE_NAND;
-	case USB_BOOT:
-		return BOOT_DEVICE_BOARD;
-	default:
-		return BOOT_DEVICE_NONE;
-	}
-#endif
-}
-
-#if defined(CONFIG_IDT_MULTIPLE_DDR)
-extern void idt_spl_dram_init(void);
-#else
-void spl_dram_init(void)
-{
-	ddr_init(&dram_timing);
-}
-#endif
-
-#if CONFIG_IS_ENABLED(DM_PMIC_PCA9450)
-int power_init_board(void)
-{
-	struct udevice *dev;
-	int ret;
-
-	ret = pmic_get("pca9450@25", &dev);
-	if (ret == -ENODEV) {
-		puts("No pca9450@25
");
-		return 0;
-	}
-	if (ret != 0)
-		return ret;
-
-	/* BUCKxOUT_DVS0/1 control BUCK123 output */
-	pmic_reg_write(dev, PCA9450_BUCK123_DVS, 0x29);
-
-#ifdef CONFIG_IMX8M_LPDDR4
-	/*
-	 * increase VDD_SOC to typical value 0.95V before first
-	 * DRAM access, set DVS1 to 0.85v for suspend.
-	 * Enable DVS control through PMIC_STBY_REQ and
-	 * set B1_ENMODE=1 (ON by PMIC_ON_REQ=H)
-	 */
-#ifdef CONFIG_IMX8M_VDD_SOC_850MV
-	/* set DVS0 to 0.85v for special case*/
-	pmic_reg_write(dev, PCA9450_BUCK1OUT_DVS0, 0x14);
-#else
-	pmic_reg_write(dev, PCA9450_BUCK1OUT_DVS0, 0x1C);
-#endif
-	pmic_reg_write(dev, PCA9450_BUCK1OUT_DVS1, 0x14);
-	pmic_reg_write(dev, PCA9450_BUCK1CTRL, 0x59);
-
-	/* Kernel uses OD/OD freq for SOC */
-	/* To avoid timing risk from SOC to ARM,increase VDD_ARM to OD voltage 0.95v */
-	pmic_reg_write(dev, PCA9450_BUCK2OUT_DVS0, 0x1C);
-#elif defined(CONFIG_IMX8M_DDR4)
-	/* DDR4 runs at 3200MTS, uses default ND 0.85v for VDD_SOC and VDD_ARM */
-	pmic_reg_write(dev, PCA9450_BUCK1CTRL, 0x59);
-
-	/* Set NVCC_DRAM to 1.2v for DDR4 */
-	pmic_reg_write(dev, PCA9450_BUCK6OUT, 0x18);
-#endif
-
-	/* set WDOG_B_CFG to cold reset */
-	pmic_reg_write(dev, PCA9450_RESET_CTRL, 0xA1);
-
-	return 0;
-}
-#endif
-
-void spl_board_init(void)
-{
-	struct udevice *dev;
-	uclass_find_first_device(UCLASS_MISC, &dev);
-
-	for (; dev; uclass_find_next_device(&dev)) {
-		if (device_probe(dev))
-			continue;
-	}
-
-	/* Set GIC clock to 500Mhz for OD VDD_SOC. Kernel driver does not allow to change it.
-	 * Should set the clock after PMIC setting done.
-	 * Default is 400Mhz (system_pll1_800m with div = 2) set by ROM for ND VDD_SOC
-	 */
-#if defined(CONFIG_IMX8M_LPDDR4) && !defined(CONFIG_IMX8M_VDD_SOC_850MV)
-	clock_enable(CCGR_GIC, 0);
-	clock_set_target_val(GIC_CLK_ROOT, CLK_ROOT_ON | CLK_ROOT_SOURCE_SEL(5));
-	clock_enable(CCGR_GIC, 1);
-#endif
-
-	puts("Normal Boot
");
-}
-
-#ifdef CONFIG_SPL_LOAD_FIT
-int board_fit_config_name_match(const char *name)
-{
-	/* Just empty function now - can't decide what to choose */
-	debug("%s: %s
", __func__, name);
-
-	return 0;
-}
-#endif
-
-void board_init_f(ulong dummy)
-{
-	struct udevice *dev;
-	int ret;
-
-	/* Clear the BSS. */
-	memset(__bss_start, 0, __bss_end - __bss_start);
-
-	arch_cpu_init();
-
-	board_early_init_f();
-
-	timer_init();
-
-	preloader_console_init();
-
-	ret = spl_early_init();
-	if (ret) {
-		debug("spl_early_init() failed: %d
", ret);
-		hang();
-	}
-
-	ret = uclass_get_device_by_name(UCLASS_CLK,
-					"clock-controller@30380000",
-					&dev);
-	if (ret < 0) {
-		printf("Failed to find clock node. Check device tree
");
-		hang();
-	}
-
-	enable_tzc380();
-
-	power_init_board();
-
-	/* DDR initialization */
-#if defined(CONFIG_IDT_MULTIPLE_DDR)
-	idt_spl_dram_init();
-#else
-	spl_dram_init();
-#endif
-
-	board_init_r(NULL, 0);
-}
diff --git a/board/freescale/imx8mq_a300/Kconfig b/board/freescale/imx8mq_a300/Kconfig
deleted file mode 100644
index 66835811ee..0000000000
--- a/board/freescale/imx8mq_a300/Kconfig
+++ /dev/null
@@ -1,35 +0,0 @@
-if TARGET_IMX8MQ_A300
-
-config SYS_BOARD
-	default "imx8mq_a300"
-
-config SYS_VENDOR
-	default "freescale"
-
-config SYS_CONFIG_NAME
-	default "imx8mq_a300"
-
-config IDT_RAM_2GB
-	bool "2GB RAM configuration for A300"
-
-config IDT_RAM_4GB
-	bool "4GB RAM configuration for A300"
-
-config IDT_DUAL_SPL
-	bool "IDT dual spl feature"
-	help
-	  This option could be enabled when CONFIG_DUAL_BOOTLOADER
-	  is also enabled. It will help switch to new spl/bootloader
-	  pair even if SRK key set is changed.
-
-config IDT_BACKUP_SPL
-	bool "IDT backup spl feature"
-	help
-	  This option could be enabled when CONFIG_DUAL_BOOTLOADER
-	  is also enabled. It will backup primary spl to offset
-	  0x200000 as secondary spl which will be loaded by Boot_ROM
-	  once if primary spl is corrupted.
-
-source "board/freescale/common/Kconfig"
-
-endif
diff --git a/board/freescale/imx8mq_a300/MAINTAINERS b/board/freescale/imx8mq_a300/MAINTAINERS
deleted file mode 100644
index a00bb4ef78..0000000000
--- a/board/freescale/imx8mq_a300/MAINTAINERS
+++ /dev/null
@@ -1,7 +0,0 @@
-i.MX8MQ EVK BOARD
-M:	Peng Fan <peng.fan@nxp.com>
-M:	Fabio Estevam <festevam@gmail.com>
-S:	Maintained
-F:	board/freescale/imx8mq_evk/
-F:	include/configs/imx8mq_evk.h
-F:	configs/imx8mq_evk_defconfig
diff --git a/board/freescale/imx8mq_a300/Makefile b/board/freescale/imx8mq_a300/Makefile
deleted file mode 100644
index 8a3cd47b2b..0000000000
--- a/board/freescale/imx8mq_a300/Makefile
+++ /dev/null
@@ -1,19 +0,0 @@
-#
-# Copyright 2017 NXP
-#
-# SPDX-License-Identifier:      GPL-2.0+
-#
-
-obj-y += imx8mq_a300.o
-
-ifdef CONFIG_SPL_BUILD
-obj-y += spl.o
-ifdef CONFIG_IDT_RAM_2GB
-obj-$(CONFIG_IMX8M_LPDDR4) += ddr/lpddr4_timing_2g.o
-else ifdef CONFIG_IDT_RAM_4GB
-obj-$(CONFIG_IMX8M_LPDDR4) += ddr/lpddr4_timing_4g.o
-else
-obj-$(CONFIG_IMX8M_LPDDR4) += ddr/lpddr4_timing.o
-endif
-obj-$(CONFIG_IMX8M_LPDDR4) += ddr/lpddr4_timing_b0.o
-endif
diff --git a/board/freescale/imx8mq_a300/README b/board/freescale/imx8mq_a300/README
deleted file mode 100644
index 859f852255..0000000000
--- a/board/freescale/imx8mq_a300/README
+++ /dev/null
@@ -1,37 +0,0 @@
-U-Boot for the NXP i.MX8MQ EVK board
-
-Quick Start
-===========
-- Build the ARM Trusted firmware binary
-- Get ddr and hdmi fimware
-- Build U-Boot
-- Boot
-
-Get and Build the ARM Trusted firmware
-======================================
-Note: srctree is U-Boot source directory
-Get ATF from: https://source.codeaurora.org/external/imx/imx-atf
-branch: imx_4.19.35_1.0.0
-$ make PLAT=imx8mq bl31
-$ cp build/imx8mq/release/bl31.bin $(builddir)
-
-Get the ddr and hdmi firmware
-=============================
-$ wget https://www.nxp.com/lgfiles/NMG/MAD/YOCTO/firmware-imx-7.9.bin
-$ chmod +x firmware-imx-7.9.bin
-$ ./firmware-imx-7.9.bin
-$ cp firmware-imx-7.9/firmware/hdmi/cadence/signed_hdmi_imx8m.bin $(builddir)
-$ cp firmware-imx-7.9/firmware/ddr/synopsys/lpddr4*.bin $(builddir)
-
-Build U-Boot
-============
-$ export CROSS_COMPILE=aarch64-poky-linux-
-$ make imx8mq_evk_defconfig
-$ make flash.bin
-
-Burn the flash.bin to MicroSD card offset 33KB
-$sudo dd if=flash.bin of=/dev/sd[x] bs=1024 seek=33
-
-Boot
-====
-Set Boot switch SW801: 1100 and Bmode: 10 to boot from Micro SD.
diff --git a/board/freescale/imx8mq_a300/ddr/lpddr4_timing.c b/board/freescale/imx8mq_a300/ddr/lpddr4_timing.c
deleted file mode 120000
index be03198497..0000000000
--- a/board/freescale/imx8mq_a300/ddr/lpddr4_timing.c
+++ /dev/null
@@ -1 +0,0 @@
-../../imx8mq_evk/lpddr4_timing.c
\ No newline at end of file
diff --git a/board/freescale/imx8mq_a300/ddr/lpddr4_timing_2g.c b/board/freescale/imx8mq_a300/ddr/lpddr4_timing_2g.c
deleted file mode 100644
index 63e0fe1d24..0000000000
--- a/board/freescale/imx8mq_a300/ddr/lpddr4_timing_2g.c
+++ /dev/null
@@ -1,1859 +0,0 @@
-/*
- * Copyright 2019 NXP
- *
- * SPDX-License-Identifier: GPL-2.0+
- *
- * Generated code from MX8M_DDR_tool
- * Align with uboot version:
- * imx_v2018.03_4.14.78_1.0.0_ga ~ imx_v2018.04_4.19.35_1.0.0_ga
- */
-
-#include <linux/kernel.h>
-#include <asm/arch/ddr.h>
-#include <asm/arch/lpddr4_define.h>
-
-struct dram_cfg_param ddr_ddrc_cfg[] = {
-	/** Initialize DDRC registers **/
-	{ 0x3d400304, 0x1 },
-	{ 0x3d400030, 0x1 },
-	{ 0x3d400000, 0xa1080020 },
-	{ 0x3d400028, 0x0 },
-	{ 0x3d400020, 0x203 },
-	{ 0x3d400024, 0x3e800 },
-	{ 0x3d400064, 0x6100e0 },
-	{ 0x3d4000d0, 0xc003061c },
-	{ 0x3d4000d4, 0x9e0000 },
-	{ 0x3d4000dc, 0xd4002d },
-	{ 0x3d4000e0, 0x310008 },
-	{ 0x3d4000e8, 0x66004a },
-	{ 0x3d4000ec, 0x16004a },
-	{ 0x3d400100, 0x1a201b22 },
-	{ 0x3d400104, 0x60633 },
-	{ 0x3d40010c, 0xc0c000 },
-	{ 0x3d400110, 0xf04080f },
-	{ 0x3d400114, 0x2040c0c },
-	{ 0x3d400118, 0x1010007 },
-	{ 0x3d40011c, 0x401 },
-	{ 0x3d400130, 0x20600 },
-	{ 0x3d400134, 0xc100002 },
-	{ 0x3d400138, 0xe6 },
-	{ 0x3d400144, 0xa00050 },
-	{ 0x3d400180, 0xc3200018 },
-	{ 0x3d400184, 0x28061a8 },
-	{ 0x3d400188, 0x0 },
-	{ 0x3d400190, 0x497820a },
-	{ 0x3d400194, 0x80303 },
-	{ 0x3d4001a0, 0xe0400018 },
-	{ 0x3d4001a4, 0xdf00e4 },
-	{ 0x3d4001a8, 0x80000000 },
-	{ 0x3d4001b0, 0x11 },
-	{ 0x3d4001b4, 0x170a },
-	{ 0x3d4001c0, 0x1 },
-	{ 0x3d4001c4, 0x1 },
-	{ 0x3d4000f4, 0x639 },
-	{ 0x3d400108, 0x70e1617 },
-	{ 0x3d400200, 0x1f },
-	{ 0x3d40020c, 0x0 },
-	{ 0x3d400210, 0x1f1f },
-	{ 0x3d400204, 0x80808 },
-	{ 0x3d400214, 0x7070707 },
-	{ 0x3d400218, 0x7070707 },
-	{ 0x3d402020, 0x1 },
-	{ 0x3d402024, 0x7d00 },
-	{ 0x3d402050, 0x20d040 },
-	{ 0x3d402064, 0xc001c },
-	{ 0x3d4020dc, 0x840000 },
-	{ 0x3d4020e0, 0x310000 },
-	{ 0x3d4020e8, 0x66004a },
-	{ 0x3d4020ec, 0x16004a },
-	{ 0x3d402100, 0xa040305 },
-	{ 0x3d402104, 0x30407 },
-	{ 0x3d402108, 0x203060b },
-	{ 0x3d40210c, 0x505000 },
-	{ 0x3d402110, 0x2040202 },
-	{ 0x3d402114, 0x2030202 },
-	{ 0x3d402118, 0x1010004 },
-	{ 0x3d40211c, 0x301 },
-	{ 0x3d402130, 0x20300 },
-	{ 0x3d402134, 0xa100002 },
-	{ 0x3d402138, 0x1d },
-	{ 0x3d402144, 0x14000a },
-	{ 0x3d402180, 0xc0640004 },
-	{ 0x3d402190, 0x3818200 },
-	{ 0x3d402194, 0x80303 },
-	{ 0x3d4021b4, 0x100 },
-	{ 0x3d403020, 0x1 },
-	{ 0x3d403024, 0x1f40 },
-	{ 0x3d403050, 0x20d040 },
-	{ 0x3d403064, 0x30007 },
-	{ 0x3d4030dc, 0x840000 },
-	{ 0x3d4030e0, 0x310000 },
-	{ 0x3d4030e8, 0x66004a },
-	{ 0x3d4030ec, 0x16004a },
-	{ 0x3d403100, 0xa010102 },
-	{ 0x3d403104, 0x30404 },
-	{ 0x3d403108, 0x203060b },
-	{ 0x3d40310c, 0x505000 },
-	{ 0x3d403110, 0x2040202 },
-	{ 0x3d403114, 0x2030202 },
-	{ 0x3d403118, 0x1010004 },
-	{ 0x3d40311c, 0x301 },
-	{ 0x3d403130, 0x20300 },
-	{ 0x3d403134, 0xa100002 },
-	{ 0x3d403138, 0x8 },
-	{ 0x3d403144, 0x50003 },
-	{ 0x3d403180, 0xc0190004 },
-	{ 0x3d403190, 0x3818200 },
-	{ 0x3d403194, 0x80303 },
-	{ 0x3d4031b4, 0x100 },
-	{ 0x3d400244, 0x0 },
-	{ 0x3d400250, 0x29001505 },
-	{ 0x3d400254, 0x2c },
-	{ 0x3d40025c, 0x5900575b },
-	{ 0x3d400264, 0x90000096 },
-	{ 0x3d40026c, 0x1000012c },
-	{ 0x3d400300, 0x16 },
-	{ 0x3d400304, 0x0 },
-	{ 0x3d40030c, 0x0 },
-	{ 0x3d400320, 0x1 },
-	{ 0x3d40036c, 0x11 },
-	{ 0x3d400400, 0x111 },
-	{ 0x3d400404, 0x10f3 },
-	{ 0x3d400408, 0x72ff },
-	{ 0x3d400490, 0x1 },
-	{ 0x3d400494, 0xe00 },
-	{ 0x3d400498, 0x62ffff },
-	{ 0x3d40049c, 0xe00 },
-	{ 0x3d4004a0, 0xffff },
-};
-
-/* PHY Initialize Configuration */
-struct dram_cfg_param ddr_ddrphy_cfg[] = {
-	{ 0x100a0, 0x0 },
-	{ 0x100a1, 0x1 },
-	{ 0x100a2, 0x2 },
-	{ 0x100a3, 0x3 },
-	{ 0x100a4, 0x4 },
-	{ 0x100a5, 0x5 },
-	{ 0x100a6, 0x6 },
-	{ 0x100a7, 0x7 },
-	{ 0x110a0, 0x0 },
-	{ 0x110a1, 0x1 },
-	{ 0x110a2, 0x2 },
-	{ 0x110a3, 0x3 },
-	{ 0x110a4, 0x4 },
-	{ 0x110a5, 0x5 },
-	{ 0x110a6, 0x6 },
-	{ 0x110a7, 0x7 },
-	{ 0x120a0, 0x0 },
-	{ 0x120a1, 0x1 },
-	{ 0x120a2, 0x2 },
-	{ 0x120a3, 0x3 },
-	{ 0x120a4, 0x4 },
-	{ 0x120a5, 0x5 },
-	{ 0x120a6, 0x6 },
-	{ 0x120a7, 0x7 },
-	{ 0x130a0, 0x0 },
-	{ 0x130a1, 0x1 },
-	{ 0x130a2, 0x2 },
-	{ 0x130a3, 0x3 },
-	{ 0x130a4, 0x4 },
-	{ 0x130a5, 0x5 },
-	{ 0x130a6, 0x6 },
-	{ 0x130a7, 0x7 },
-	{ 0x1005f, 0x1ff },
-	{ 0x1015f, 0x1ff },
-	{ 0x1105f, 0x1ff },
-	{ 0x1115f, 0x1ff },
-	{ 0x1205f, 0x1ff },
-	{ 0x1215f, 0x1ff },
-	{ 0x1305f, 0x1ff },
-	{ 0x1315f, 0x1ff },
-	{ 0x11005f, 0x1ff },
-	{ 0x11015f, 0x1ff },
-	{ 0x11105f, 0x1ff },
-	{ 0x11115f, 0x1ff },
-	{ 0x11205f, 0x1ff },
-	{ 0x11215f, 0x1ff },
-	{ 0x11305f, 0x1ff },
-	{ 0x11315f, 0x1ff },
-	{ 0x21005f, 0x1ff },
-	{ 0x21015f, 0x1ff },
-	{ 0x21105f, 0x1ff },
-	{ 0x21115f, 0x1ff },
-	{ 0x21205f, 0x1ff },
-	{ 0x21215f, 0x1ff },
-	{ 0x21305f, 0x1ff },
-	{ 0x21315f, 0x1ff },
-	{ 0x55, 0x1ff },
-	{ 0x1055, 0x1ff },
-	{ 0x2055, 0x1ff },
-	{ 0x3055, 0x1ff },
-	{ 0x4055, 0x1ff },
-	{ 0x5055, 0x1ff },
-	{ 0x6055, 0x1ff },
-	{ 0x7055, 0x1ff },
-	{ 0x8055, 0x1ff },
-	{ 0x9055, 0x1ff },
-	{ 0x200c5, 0x19 },
-	{ 0x1200c5, 0x7 },
-	{ 0x2200c5, 0x7 },
-	{ 0x2002e, 0x2 },
-	{ 0x12002e, 0x2 },
-	{ 0x22002e, 0x2 },
-	{ 0x90204, 0x0 },
-	{ 0x190204, 0x0 },
-	{ 0x290204, 0x0 },
-	{ 0x20024, 0x1ab },
-	{ 0x2003a, 0x0 },
-	{ 0x120024, 0x1ab },
-	{ 0x2003a, 0x0 },
-	{ 0x220024, 0x1ab },
-	{ 0x2003a, 0x0 },
-	{ 0x20056, 0x3 },
-	{ 0x120056, 0x3 },
-	{ 0x220056, 0x3 },
-	{ 0x1004d, 0xe00 },
-	{ 0x1014d, 0xe00 },
-	{ 0x1104d, 0xe00 },
-	{ 0x1114d, 0xe00 },
-	{ 0x1204d, 0xe00 },
-	{ 0x1214d, 0xe00 },
-	{ 0x1304d, 0xe00 },
-	{ 0x1314d, 0xe00 },
-	{ 0x11004d, 0xe00 },
-	{ 0x11014d, 0xe00 },
-	{ 0x11104d, 0xe00 },
-	{ 0x11114d, 0xe00 },
-	{ 0x11204d, 0xe00 },
-	{ 0x11214d, 0xe00 },
-	{ 0x11304d, 0xe00 },
-	{ 0x11314d, 0xe00 },
-	{ 0x21004d, 0xe00 },
-	{ 0x21014d, 0xe00 },
-	{ 0x21104d, 0xe00 },
-	{ 0x21114d, 0xe00 },
-	{ 0x21204d, 0xe00 },
-	{ 0x21214d, 0xe00 },
-	{ 0x21304d, 0xe00 },
-	{ 0x21314d, 0xe00 },
-	{ 0x10049, 0xeba },
-	{ 0x10149, 0xeba },
-	{ 0x11049, 0xeba },
-	{ 0x11149, 0xeba },
-	{ 0x12049, 0xeba },
-	{ 0x12149, 0xeba },
-	{ 0x13049, 0xeba },
-	{ 0x13149, 0xeba },
-	{ 0x110049, 0xeba },
-	{ 0x110149, 0xeba },
-	{ 0x111049, 0xeba },
-	{ 0x111149, 0xeba },
-	{ 0x112049, 0xeba },
-	{ 0x112149, 0xeba },
-	{ 0x113049, 0xeba },
-	{ 0x113149, 0xeba },
-	{ 0x210049, 0xeba },
-	{ 0x210149, 0xeba },
-	{ 0x211049, 0xeba },
-	{ 0x211149, 0xeba },
-	{ 0x212049, 0xeba },
-	{ 0x212149, 0xeba },
-	{ 0x213049, 0xeba },
-	{ 0x213149, 0xeba },
-	{ 0x43, 0x63 },
-	{ 0x1043, 0x63 },
-	{ 0x2043, 0x63 },
-	{ 0x3043, 0x63 },
-	{ 0x4043, 0x63 },
-	{ 0x5043, 0x63 },
-	{ 0x6043, 0x63 },
-	{ 0x7043, 0x63 },
-	{ 0x8043, 0x63 },
-	{ 0x9043, 0x63 },
-	{ 0x20018, 0x3 },
-	{ 0x20075, 0x4 },
-	{ 0x20050, 0x0 },
-	{ 0x20008, 0x320 },
-	{ 0x120008, 0x64 },
-	{ 0x220008, 0x19 },
-	{ 0x20088, 0x9 },
-	{ 0x200b2, 0xdc },
-	{ 0x10043, 0x5a1 },
-	{ 0x10143, 0x5a1 },
-	{ 0x11043, 0x5a1 },
-	{ 0x11143, 0x5a1 },
-	{ 0x12043, 0x5a1 },
-	{ 0x12143, 0x5a1 },
-	{ 0x13043, 0x5a1 },
-	{ 0x13143, 0x5a1 },
-	{ 0x1200b2, 0xdc },
-	{ 0x110043, 0x5a1 },
-	{ 0x110143, 0x5a1 },
-	{ 0x111043, 0x5a1 },
-	{ 0x111143, 0x5a1 },
-	{ 0x112043, 0x5a1 },
-	{ 0x112143, 0x5a1 },
-	{ 0x113043, 0x5a1 },
-	{ 0x113143, 0x5a1 },
-	{ 0x2200b2, 0xdc },
-	{ 0x210043, 0x5a1 },
-	{ 0x210143, 0x5a1 },
-	{ 0x211043, 0x5a1 },
-	{ 0x211143, 0x5a1 },
-	{ 0x212043, 0x5a1 },
-	{ 0x212143, 0x5a1 },
-	{ 0x213043, 0x5a1 },
-	{ 0x213143, 0x5a1 },
-	{ 0x200fa, 0x1 },
-	{ 0x1200fa, 0x1 },
-	{ 0x2200fa, 0x1 },
-	{ 0x20019, 0x1 },
-	{ 0x120019, 0x1 },
-	{ 0x220019, 0x1 },
-	{ 0x200f0, 0x660 },
-	{ 0x200f1, 0x0 },
-	{ 0x200f2, 0x4444 },
-	{ 0x200f3, 0x8888 },
-	{ 0x200f4, 0x5665 },
-	{ 0x200f5, 0x0 },
-	{ 0x200f6, 0x0 },
-	{ 0x200f7, 0xf000 },
-	{ 0x20025, 0x0 },
-	{ 0x2002d, 0x0 },
-	{ 0x12002d, 0x0 },
-	{ 0x22002d, 0x0 },
-	{ 0x200c7, 0x80 },
-	{ 0x1200c7, 0x80 },
-	{ 0x2200c7, 0x80 },
-	{ 0x200ca, 0x106 },
-	{ 0x1200ca, 0x106 },
-	{ 0x2200ca, 0x106 },
-	{ 0x20110, 0x2 },
-	{ 0x20111, 0x3 },
-	{ 0x20112, 0x4 },
-	{ 0x20113, 0x5 },
-	{ 0x20114, 0x0 },
-	{ 0x20115, 0x1 },
-};
-
-/* ddr phy trained csr */
-struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
-	{ 0x200b2, 0x0 },
-	{ 0x1200b2, 0x0 },
-	{ 0x2200b2, 0x0 },
-	{ 0x200cb, 0x0 },
-	{ 0x10043, 0x0 },
-	{ 0x110043, 0x0 },
-	{ 0x210043, 0x0 },
-	{ 0x10143, 0x0 },
-	{ 0x110143, 0x0 },
-	{ 0x210143, 0x0 },
-	{ 0x11043, 0x0 },
-	{ 0x111043, 0x0 },
-	{ 0x211043, 0x0 },
-	{ 0x11143, 0x0 },
-	{ 0x111143, 0x0 },
-	{ 0x211143, 0x0 },
-	{ 0x12043, 0x0 },
-	{ 0x112043, 0x0 },
-	{ 0x212043, 0x0 },
-	{ 0x12143, 0x0 },
-	{ 0x112143, 0x0 },
-	{ 0x212143, 0x0 },
-	{ 0x13043, 0x0 },
-	{ 0x113043, 0x0 },
-	{ 0x213043, 0x0 },
-	{ 0x13143, 0x0 },
-	{ 0x113143, 0x0 },
-	{ 0x213143, 0x0 },
-	{ 0x80, 0x0 },
-	{ 0x100080, 0x0 },
-	{ 0x200080, 0x0 },
-	{ 0x1080, 0x0 },
-	{ 0x101080, 0x0 },
-	{ 0x201080, 0x0 },
-	{ 0x2080, 0x0 },
-	{ 0x102080, 0x0 },
-	{ 0x202080, 0x0 },
-	{ 0x3080, 0x0 },
-	{ 0x103080, 0x0 },
-	{ 0x203080, 0x0 },
-	{ 0x4080, 0x0 },
-	{ 0x104080, 0x0 },
-	{ 0x204080, 0x0 },
-	{ 0x5080, 0x0 },
-	{ 0x105080, 0x0 },
-	{ 0x205080, 0x0 },
-	{ 0x6080, 0x0 },
-	{ 0x106080, 0x0 },
-	{ 0x206080, 0x0 },
-	{ 0x7080, 0x0 },
-	{ 0x107080, 0x0 },
-	{ 0x207080, 0x0 },
-	{ 0x8080, 0x0 },
-	{ 0x108080, 0x0 },
-	{ 0x208080, 0x0 },
-	{ 0x9080, 0x0 },
-	{ 0x109080, 0x0 },
-	{ 0x209080, 0x0 },
-	{ 0x10080, 0x0 },
-	{ 0x110080, 0x0 },
-	{ 0x210080, 0x0 },
-	{ 0x10180, 0x0 },
-	{ 0x110180, 0x0 },
-	{ 0x210180, 0x0 },
-	{ 0x11080, 0x0 },
-	{ 0x111080, 0x0 },
-	{ 0x211080, 0x0 },
-	{ 0x11180, 0x0 },
-	{ 0x111180, 0x0 },
-	{ 0x211180, 0x0 },
-	{ 0x12080, 0x0 },
-	{ 0x112080, 0x0 },
-	{ 0x212080, 0x0 },
-	{ 0x12180, 0x0 },
-	{ 0x112180, 0x0 },
-	{ 0x212180, 0x0 },
-	{ 0x13080, 0x0 },
-	{ 0x113080, 0x0 },
-	{ 0x213080, 0x0 },
-	{ 0x13180, 0x0 },
-	{ 0x113180, 0x0 },
-	{ 0x213180, 0x0 },
-	{ 0x10081, 0x0 },
-	{ 0x110081, 0x0 },
-	{ 0x210081, 0x0 },
-	{ 0x10181, 0x0 },
-	{ 0x110181, 0x0 },
-	{ 0x210181, 0x0 },
-	{ 0x11081, 0x0 },
-	{ 0x111081, 0x0 },
-	{ 0x211081, 0x0 },
-	{ 0x11181, 0x0 },
-	{ 0x111181, 0x0 },
-	{ 0x211181, 0x0 },
-	{ 0x12081, 0x0 },
-	{ 0x112081, 0x0 },
-	{ 0x212081, 0x0 },
-	{ 0x12181, 0x0 },
-	{ 0x112181, 0x0 },
-	{ 0x212181, 0x0 },
-	{ 0x13081, 0x0 },
-	{ 0x113081, 0x0 },
-	{ 0x213081, 0x0 },
-	{ 0x13181, 0x0 },
-	{ 0x113181, 0x0 },
-	{ 0x213181, 0x0 },
-	{ 0x100d0, 0x0 },
-	{ 0x1100d0, 0x0 },
-	{ 0x2100d0, 0x0 },
-	{ 0x101d0, 0x0 },
-	{ 0x1101d0, 0x0 },
-	{ 0x2101d0, 0x0 },
-	{ 0x110d0, 0x0 },
-	{ 0x1110d0, 0x0 },
-	{ 0x2110d0, 0x0 },
-	{ 0x111d0, 0x0 },
-	{ 0x1111d0, 0x0 },
-	{ 0x2111d0, 0x0 },
-	{ 0x120d0, 0x0 },
-	{ 0x1120d0, 0x0 },
-	{ 0x2120d0, 0x0 },
-	{ 0x121d0, 0x0 },
-	{ 0x1121d0, 0x0 },
-	{ 0x2121d0, 0x0 },
-	{ 0x130d0, 0x0 },
-	{ 0x1130d0, 0x0 },
-	{ 0x2130d0, 0x0 },
-	{ 0x131d0, 0x0 },
-	{ 0x1131d0, 0x0 },
-	{ 0x2131d0, 0x0 },
-	{ 0x100d1, 0x0 },
-	{ 0x1100d1, 0x0 },
-	{ 0x2100d1, 0x0 },
-	{ 0x101d1, 0x0 },
-	{ 0x1101d1, 0x0 },
-	{ 0x2101d1, 0x0 },
-	{ 0x110d1, 0x0 },
-	{ 0x1110d1, 0x0 },
-	{ 0x2110d1, 0x0 },
-	{ 0x111d1, 0x0 },
-	{ 0x1111d1, 0x0 },
-	{ 0x2111d1, 0x0 },
-	{ 0x120d1, 0x0 },
-	{ 0x1120d1, 0x0 },
-	{ 0x2120d1, 0x0 },
-	{ 0x121d1, 0x0 },
-	{ 0x1121d1, 0x0 },
-	{ 0x2121d1, 0x0 },
-	{ 0x130d1, 0x0 },
-	{ 0x1130d1, 0x0 },
-	{ 0x2130d1, 0x0 },
-	{ 0x131d1, 0x0 },
-	{ 0x1131d1, 0x0 },
-	{ 0x2131d1, 0x0 },
-	{ 0x10068, 0x0 },
-	{ 0x10168, 0x0 },
-	{ 0x10268, 0x0 },
-	{ 0x10368, 0x0 },
-	{ 0x10468, 0x0 },
-	{ 0x10568, 0x0 },
-	{ 0x10668, 0x0 },
-	{ 0x10768, 0x0 },
-	{ 0x10868, 0x0 },
-	{ 0x11068, 0x0 },
-	{ 0x11168, 0x0 },
-	{ 0x11268, 0x0 },
-	{ 0x11368, 0x0 },
-	{ 0x11468, 0x0 },
-	{ 0x11568, 0x0 },
-	{ 0x11668, 0x0 },
-	{ 0x11768, 0x0 },
-	{ 0x11868, 0x0 },
-	{ 0x12068, 0x0 },
-	{ 0x12168, 0x0 },
-	{ 0x12268, 0x0 },
-	{ 0x12368, 0x0 },
-	{ 0x12468, 0x0 },
-	{ 0x12568, 0x0 },
-	{ 0x12668, 0x0 },
-	{ 0x12768, 0x0 },
-	{ 0x12868, 0x0 },
-	{ 0x13068, 0x0 },
-	{ 0x13168, 0x0 },
-	{ 0x13268, 0x0 },
-	{ 0x13368, 0x0 },
-	{ 0x13468, 0x0 },
-	{ 0x13568, 0x0 },
-	{ 0x13668, 0x0 },
-	{ 0x13768, 0x0 },
-	{ 0x13868, 0x0 },
-	{ 0x10069, 0x0 },
-	{ 0x10169, 0x0 },
-	{ 0x10269, 0x0 },
-	{ 0x10369, 0x0 },
-	{ 0x10469, 0x0 },
-	{ 0x10569, 0x0 },
-	{ 0x10669, 0x0 },
-	{ 0x10769, 0x0 },
-	{ 0x10869, 0x0 },
-	{ 0x11069, 0x0 },
-	{ 0x11169, 0x0 },
-	{ 0x11269, 0x0 },
-	{ 0x11369, 0x0 },
-	{ 0x11469, 0x0 },
-	{ 0x11569, 0x0 },
-	{ 0x11669, 0x0 },
-	{ 0x11769, 0x0 },
-	{ 0x11869, 0x0 },
-	{ 0x12069, 0x0 },
-	{ 0x12169, 0x0 },
-	{ 0x12269, 0x0 },
-	{ 0x12369, 0x0 },
-	{ 0x12469, 0x0 },
-	{ 0x12569, 0x0 },
-	{ 0x12669, 0x0 },
-	{ 0x12769, 0x0 },
-	{ 0x12869, 0x0 },
-	{ 0x13069, 0x0 },
-	{ 0x13169, 0x0 },
-	{ 0x13269, 0x0 },
-	{ 0x13369, 0x0 },
-	{ 0x13469, 0x0 },
-	{ 0x13569, 0x0 },
-	{ 0x13669, 0x0 },
-	{ 0x13769, 0x0 },
-	{ 0x13869, 0x0 },
-	{ 0x1008c, 0x0 },
-	{ 0x11008c, 0x0 },
-	{ 0x21008c, 0x0 },
-	{ 0x1018c, 0x0 },
-	{ 0x11018c, 0x0 },
-	{ 0x21018c, 0x0 },
-	{ 0x1108c, 0x0 },
-	{ 0x11108c, 0x0 },
-	{ 0x21108c, 0x0 },
-	{ 0x1118c, 0x0 },
-	{ 0x11118c, 0x0 },
-	{ 0x21118c, 0x0 },
-	{ 0x1208c, 0x0 },
-	{ 0x11208c, 0x0 },
-	{ 0x21208c, 0x0 },
-	{ 0x1218c, 0x0 },
-	{ 0x11218c, 0x0 },
-	{ 0x21218c, 0x0 },
-	{ 0x1308c, 0x0 },
-	{ 0x11308c, 0x0 },
-	{ 0x21308c, 0x0 },
-	{ 0x1318c, 0x0 },
-	{ 0x11318c, 0x0 },
-	{ 0x21318c, 0x0 },
-	{ 0x1008d, 0x0 },
-	{ 0x11008d, 0x0 },
-	{ 0x21008d, 0x0 },
-	{ 0x1018d, 0x0 },
-	{ 0x11018d, 0x0 },
-	{ 0x21018d, 0x0 },
-	{ 0x1108d, 0x0 },
-	{ 0x11108d, 0x0 },
-	{ 0x21108d, 0x0 },
-	{ 0x1118d, 0x0 },
-	{ 0x11118d, 0x0 },
-	{ 0x21118d, 0x0 },
-	{ 0x1208d, 0x0 },
-	{ 0x11208d, 0x0 },
-	{ 0x21208d, 0x0 },
-	{ 0x1218d, 0x0 },
-	{ 0x11218d, 0x0 },
-	{ 0x21218d, 0x0 },
-	{ 0x1308d, 0x0 },
-	{ 0x11308d, 0x0 },
-	{ 0x21308d, 0x0 },
-	{ 0x1318d, 0x0 },
-	{ 0x11318d, 0x0 },
-	{ 0x21318d, 0x0 },
-	{ 0x100c0, 0x0 },
-	{ 0x1100c0, 0x0 },
-	{ 0x2100c0, 0x0 },
-	{ 0x101c0, 0x0 },
-	{ 0x1101c0, 0x0 },
-	{ 0x2101c0, 0x0 },
-	{ 0x102c0, 0x0 },
-	{ 0x1102c0, 0x0 },
-	{ 0x2102c0, 0x0 },
-	{ 0x103c0, 0x0 },
-	{ 0x1103c0, 0x0 },
-	{ 0x2103c0, 0x0 },
-	{ 0x104c0, 0x0 },
-	{ 0x1104c0, 0x0 },
-	{ 0x2104c0, 0x0 },
-	{ 0x105c0, 0x0 },
-	{ 0x1105c0, 0x0 },
-	{ 0x2105c0, 0x0 },
-	{ 0x106c0, 0x0 },
-	{ 0x1106c0, 0x0 },
-	{ 0x2106c0, 0x0 },
-	{ 0x107c0, 0x0 },
-	{ 0x1107c0, 0x0 },
-	{ 0x2107c0, 0x0 },
-	{ 0x108c0, 0x0 },
-	{ 0x1108c0, 0x0 },
-	{ 0x2108c0, 0x0 },
-	{ 0x110c0, 0x0 },
-	{ 0x1110c0, 0x0 },
-	{ 0x2110c0, 0x0 },
-	{ 0x111c0, 0x0 },
-	{ 0x1111c0, 0x0 },
-	{ 0x2111c0, 0x0 },
-	{ 0x112c0, 0x0 },
-	{ 0x1112c0, 0x0 },
-	{ 0x2112c0, 0x0 },
-	{ 0x113c0, 0x0 },
-	{ 0x1113c0, 0x0 },
-	{ 0x2113c0, 0x0 },
-	{ 0x114c0, 0x0 },
-	{ 0x1114c0, 0x0 },
-	{ 0x2114c0, 0x0 },
-	{ 0x115c0, 0x0 },
-	{ 0x1115c0, 0x0 },
-	{ 0x2115c0, 0x0 },
-	{ 0x116c0, 0x0 },
-	{ 0x1116c0, 0x0 },
-	{ 0x2116c0, 0x0 },
-	{ 0x117c0, 0x0 },
-	{ 0x1117c0, 0x0 },
-	{ 0x2117c0, 0x0 },
-	{ 0x118c0, 0x0 },
-	{ 0x1118c0, 0x0 },
-	{ 0x2118c0, 0x0 },
-	{ 0x120c0, 0x0 },
-	{ 0x1120c0, 0x0 },
-	{ 0x2120c0, 0x0 },
-	{ 0x121c0, 0x0 },
-	{ 0x1121c0, 0x0 },
-	{ 0x2121c0, 0x0 },
-	{ 0x122c0, 0x0 },
-	{ 0x1122c0, 0x0 },
-	{ 0x2122c0, 0x0 },
-	{ 0x123c0, 0x0 },
-	{ 0x1123c0, 0x0 },
-	{ 0x2123c0, 0x0 },
-	{ 0x124c0, 0x0 },
-	{ 0x1124c0, 0x0 },
-	{ 0x2124c0, 0x0 },
-	{ 0x125c0, 0x0 },
-	{ 0x1125c0, 0x0 },
-	{ 0x2125c0, 0x0 },
-	{ 0x126c0, 0x0 },
-	{ 0x1126c0, 0x0 },
-	{ 0x2126c0, 0x0 },
-	{ 0x127c0, 0x0 },
-	{ 0x1127c0, 0x0 },
-	{ 0x2127c0, 0x0 },
-	{ 0x128c0, 0x0 },
-	{ 0x1128c0, 0x0 },
-	{ 0x2128c0, 0x0 },
-	{ 0x130c0, 0x0 },
-	{ 0x1130c0, 0x0 },
-	{ 0x2130c0, 0x0 },
-	{ 0x131c0, 0x0 },
-	{ 0x1131c0, 0x0 },
-	{ 0x2131c0, 0x0 },
-	{ 0x132c0, 0x0 },
-	{ 0x1132c0, 0x0 },
-	{ 0x2132c0, 0x0 },
-	{ 0x133c0, 0x0 },
-	{ 0x1133c0, 0x0 },
-	{ 0x2133c0, 0x0 },
-	{ 0x134c0, 0x0 },
-	{ 0x1134c0, 0x0 },
-	{ 0x2134c0, 0x0 },
-	{ 0x135c0, 0x0 },
-	{ 0x1135c0, 0x0 },
-	{ 0x2135c0, 0x0 },
-	{ 0x136c0, 0x0 },
-	{ 0x1136c0, 0x0 },
-	{ 0x2136c0, 0x0 },
-	{ 0x137c0, 0x0 },
-	{ 0x1137c0, 0x0 },
-	{ 0x2137c0, 0x0 },
-	{ 0x138c0, 0x0 },
-	{ 0x1138c0, 0x0 },
-	{ 0x2138c0, 0x0 },
-	{ 0x100c1, 0x0 },
-	{ 0x1100c1, 0x0 },
-	{ 0x2100c1, 0x0 },
-	{ 0x101c1, 0x0 },
-	{ 0x1101c1, 0x0 },
-	{ 0x2101c1, 0x0 },
-	{ 0x102c1, 0x0 },
-	{ 0x1102c1, 0x0 },
-	{ 0x2102c1, 0x0 },
-	{ 0x103c1, 0x0 },
-	{ 0x1103c1, 0x0 },
-	{ 0x2103c1, 0x0 },
-	{ 0x104c1, 0x0 },
-	{ 0x1104c1, 0x0 },
-	{ 0x2104c1, 0x0 },
-	{ 0x105c1, 0x0 },
-	{ 0x1105c1, 0x0 },
-	{ 0x2105c1, 0x0 },
-	{ 0x106c1, 0x0 },
-	{ 0x1106c1, 0x0 },
-	{ 0x2106c1, 0x0 },
-	{ 0x107c1, 0x0 },
-	{ 0x1107c1, 0x0 },
-	{ 0x2107c1, 0x0 },
-	{ 0x108c1, 0x0 },
-	{ 0x1108c1, 0x0 },
-	{ 0x2108c1, 0x0 },
-	{ 0x110c1, 0x0 },
-	{ 0x1110c1, 0x0 },
-	{ 0x2110c1, 0x0 },
-	{ 0x111c1, 0x0 },
-	{ 0x1111c1, 0x0 },
-	{ 0x2111c1, 0x0 },
-	{ 0x112c1, 0x0 },
-	{ 0x1112c1, 0x0 },
-	{ 0x2112c1, 0x0 },
-	{ 0x113c1, 0x0 },
-	{ 0x1113c1, 0x0 },
-	{ 0x2113c1, 0x0 },
-	{ 0x114c1, 0x0 },
-	{ 0x1114c1, 0x0 },
-	{ 0x2114c1, 0x0 },
-	{ 0x115c1, 0x0 },
-	{ 0x1115c1, 0x0 },
-	{ 0x2115c1, 0x0 },
-	{ 0x116c1, 0x0 },
-	{ 0x1116c1, 0x0 },
-	{ 0x2116c1, 0x0 },
-	{ 0x117c1, 0x0 },
-	{ 0x1117c1, 0x0 },
-	{ 0x2117c1, 0x0 },
-	{ 0x118c1, 0x0 },
-	{ 0x1118c1, 0x0 },
-	{ 0x2118c1, 0x0 },
-	{ 0x120c1, 0x0 },
-	{ 0x1120c1, 0x0 },
-	{ 0x2120c1, 0x0 },
-	{ 0x121c1, 0x0 },
-	{ 0x1121c1, 0x0 },
-	{ 0x2121c1, 0x0 },
-	{ 0x122c1, 0x0 },
-	{ 0x1122c1, 0x0 },
-	{ 0x2122c1, 0x0 },
-	{ 0x123c1, 0x0 },
-	{ 0x1123c1, 0x0 },
-	{ 0x2123c1, 0x0 },
-	{ 0x124c1, 0x0 },
-	{ 0x1124c1, 0x0 },
-	{ 0x2124c1, 0x0 },
-	{ 0x125c1, 0x0 },
-	{ 0x1125c1, 0x0 },
-	{ 0x2125c1, 0x0 },
-	{ 0x126c1, 0x0 },
-	{ 0x1126c1, 0x0 },
-	{ 0x2126c1, 0x0 },
-	{ 0x127c1, 0x0 },
-	{ 0x1127c1, 0x0 },
-	{ 0x2127c1, 0x0 },
-	{ 0x128c1, 0x0 },
-	{ 0x1128c1, 0x0 },
-	{ 0x2128c1, 0x0 },
-	{ 0x130c1, 0x0 },
-	{ 0x1130c1, 0x0 },
-	{ 0x2130c1, 0x0 },
-	{ 0x131c1, 0x0 },
-	{ 0x1131c1, 0x0 },
-	{ 0x2131c1, 0x0 },
-	{ 0x132c1, 0x0 },
-	{ 0x1132c1, 0x0 },
-	{ 0x2132c1, 0x0 },
-	{ 0x133c1, 0x0 },
-	{ 0x1133c1, 0x0 },
-	{ 0x2133c1, 0x0 },
-	{ 0x134c1, 0x0 },
-	{ 0x1134c1, 0x0 },
-	{ 0x2134c1, 0x0 },
-	{ 0x135c1, 0x0 },
-	{ 0x1135c1, 0x0 },
-	{ 0x2135c1, 0x0 },
-	{ 0x136c1, 0x0 },
-	{ 0x1136c1, 0x0 },
-	{ 0x2136c1, 0x0 },
-	{ 0x137c1, 0x0 },
-	{ 0x1137c1, 0x0 },
-	{ 0x2137c1, 0x0 },
-	{ 0x138c1, 0x0 },
-	{ 0x1138c1, 0x0 },
-	{ 0x2138c1, 0x0 },
-	{ 0x10020, 0x0 },
-	{ 0x110020, 0x0 },
-	{ 0x210020, 0x0 },
-	{ 0x11020, 0x0 },
-	{ 0x111020, 0x0 },
-	{ 0x211020, 0x0 },
-	{ 0x12020, 0x0 },
-	{ 0x112020, 0x0 },
-	{ 0x212020, 0x0 },
-	{ 0x13020, 0x0 },
-	{ 0x113020, 0x0 },
-	{ 0x213020, 0x0 },
-	{ 0x20072, 0x0 },
-	{ 0x20073, 0x0 },
-	{ 0x20074, 0x0 },
-	{ 0x100aa, 0x0 },
-	{ 0x110aa, 0x0 },
-	{ 0x120aa, 0x0 },
-	{ 0x130aa, 0x0 },
-	{ 0x20010, 0x0 },
-	{ 0x120010, 0x0 },
-	{ 0x220010, 0x0 },
-	{ 0x20011, 0x0 },
-	{ 0x120011, 0x0 },
-	{ 0x220011, 0x0 },
-	{ 0x100ae, 0x0 },
-	{ 0x1100ae, 0x0 },
-	{ 0x2100ae, 0x0 },
-	{ 0x100af, 0x0 },
-	{ 0x1100af, 0x0 },
-	{ 0x2100af, 0x0 },
-	{ 0x110ae, 0x0 },
-	{ 0x1110ae, 0x0 },
-	{ 0x2110ae, 0x0 },
-	{ 0x110af, 0x0 },
-	{ 0x1110af, 0x0 },
-	{ 0x2110af, 0x0 },
-	{ 0x120ae, 0x0 },
-	{ 0x1120ae, 0x0 },
-	{ 0x2120ae, 0x0 },
-	{ 0x120af, 0x0 },
-	{ 0x1120af, 0x0 },
-	{ 0x2120af, 0x0 },
-	{ 0x130ae, 0x0 },
-	{ 0x1130ae, 0x0 },
-	{ 0x2130ae, 0x0 },
-	{ 0x130af, 0x0 },
-	{ 0x1130af, 0x0 },
-	{ 0x2130af, 0x0 },
-	{ 0x20020, 0x0 },
-	{ 0x120020, 0x0 },
-	{ 0x220020, 0x0 },
-	{ 0x100a0, 0x0 },
-	{ 0x100a1, 0x0 },
-	{ 0x100a2, 0x0 },
-	{ 0x100a3, 0x0 },
-	{ 0x100a4, 0x0 },
-	{ 0x100a5, 0x0 },
-	{ 0x100a6, 0x0 },
-	{ 0x100a7, 0x0 },
-	{ 0x110a0, 0x0 },
-	{ 0x110a1, 0x0 },
-	{ 0x110a2, 0x0 },
-	{ 0x110a3, 0x0 },
-	{ 0x110a4, 0x0 },
-	{ 0x110a5, 0x0 },
-	{ 0x110a6, 0x0 },
-	{ 0x110a7, 0x0 },
-	{ 0x120a0, 0x0 },
-	{ 0x120a1, 0x0 },
-	{ 0x120a2, 0x0 },
-	{ 0x120a3, 0x0 },
-	{ 0x120a4, 0x0 },
-	{ 0x120a5, 0x0 },
-	{ 0x120a6, 0x0 },
-	{ 0x120a7, 0x0 },
-	{ 0x130a0, 0x0 },
-	{ 0x130a1, 0x0 },
-	{ 0x130a2, 0x0 },
-	{ 0x130a3, 0x0 },
-	{ 0x130a4, 0x0 },
-	{ 0x130a5, 0x0 },
-	{ 0x130a6, 0x0 },
-	{ 0x130a7, 0x0 },
-	{ 0x2007c, 0x0 },
-	{ 0x12007c, 0x0 },
-	{ 0x22007c, 0x0 },
-	{ 0x2007d, 0x0 },
-	{ 0x12007d, 0x0 },
-	{ 0x22007d, 0x0 },
-	{ 0x400fd, 0x0 },
-	{ 0x400c0, 0x0 },
-	{ 0x90201, 0x0 },
-	{ 0x190201, 0x0 },
-	{ 0x290201, 0x0 },
-	{ 0x90202, 0x0 },
-	{ 0x190202, 0x0 },
-	{ 0x290202, 0x0 },
-	{ 0x90203, 0x0 },
-	{ 0x190203, 0x0 },
-	{ 0x290203, 0x0 },
-	{ 0x90204, 0x0 },
-	{ 0x190204, 0x0 },
-	{ 0x290204, 0x0 },
-	{ 0x90205, 0x0 },
-	{ 0x190205, 0x0 },
-	{ 0x290205, 0x0 },
-	{ 0x90206, 0x0 },
-	{ 0x190206, 0x0 },
-	{ 0x290206, 0x0 },
-	{ 0x90207, 0x0 },
-	{ 0x190207, 0x0 },
-	{ 0x290207, 0x0 },
-	{ 0x90208, 0x0 },
-	{ 0x190208, 0x0 },
-	{ 0x290208, 0x0 },
-	{ 0x10062, 0x0 },
-	{ 0x10162, 0x0 },
-	{ 0x10262, 0x0 },
-	{ 0x10362, 0x0 },
-	{ 0x10462, 0x0 },
-	{ 0x10562, 0x0 },
-	{ 0x10662, 0x0 },
-	{ 0x10762, 0x0 },
-	{ 0x10862, 0x0 },
-	{ 0x11062, 0x0 },
-	{ 0x11162, 0x0 },
-	{ 0x11262, 0x0 },
-	{ 0x11362, 0x0 },
-	{ 0x11462, 0x0 },
-	{ 0x11562, 0x0 },
-	{ 0x11662, 0x0 },
-	{ 0x11762, 0x0 },
-	{ 0x11862, 0x0 },
-	{ 0x12062, 0x0 },
-	{ 0x12162, 0x0 },
-	{ 0x12262, 0x0 },
-	{ 0x12362, 0x0 },
-	{ 0x12462, 0x0 },
-	{ 0x12562, 0x0 },
-	{ 0x12662, 0x0 },
-	{ 0x12762, 0x0 },
-	{ 0x12862, 0x0 },
-	{ 0x13062, 0x0 },
-	{ 0x13162, 0x0 },
-	{ 0x13262, 0x0 },
-	{ 0x13362, 0x0 },
-	{ 0x13462, 0x0 },
-	{ 0x13562, 0x0 },
-	{ 0x13662, 0x0 },
-	{ 0x13762, 0x0 },
-	{ 0x13862, 0x0 },
-	{ 0x20077, 0x0 },
-	{ 0x10001, 0x0 },
-	{ 0x11001, 0x0 },
-	{ 0x12001, 0x0 },
-	{ 0x13001, 0x0 },
-	{ 0x10040, 0x0 },
-	{ 0x10140, 0x0 },
-	{ 0x10240, 0x0 },
-	{ 0x10340, 0x0 },
-	{ 0x10440, 0x0 },
-	{ 0x10540, 0x0 },
-	{ 0x10640, 0x0 },
-	{ 0x10740, 0x0 },
-	{ 0x10840, 0x0 },
-	{ 0x10030, 0x0 },
-	{ 0x10130, 0x0 },
-	{ 0x10230, 0x0 },
-	{ 0x10330, 0x0 },
-	{ 0x10430, 0x0 },
-	{ 0x10530, 0x0 },
-	{ 0x10630, 0x0 },
-	{ 0x10730, 0x0 },
-	{ 0x10830, 0x0 },
-	{ 0x11040, 0x0 },
-	{ 0x11140, 0x0 },
-	{ 0x11240, 0x0 },
-	{ 0x11340, 0x0 },
-	{ 0x11440, 0x0 },
-	{ 0x11540, 0x0 },
-	{ 0x11640, 0x0 },
-	{ 0x11740, 0x0 },
-	{ 0x11840, 0x0 },
-	{ 0x11030, 0x0 },
-	{ 0x11130, 0x0 },
-	{ 0x11230, 0x0 },
-	{ 0x11330, 0x0 },
-	{ 0x11430, 0x0 },
-	{ 0x11530, 0x0 },
-	{ 0x11630, 0x0 },
-	{ 0x11730, 0x0 },
-	{ 0x11830, 0x0 },
-	{ 0x12040, 0x0 },
-	{ 0x12140, 0x0 },
-	{ 0x12240, 0x0 },
-	{ 0x12340, 0x0 },
-	{ 0x12440, 0x0 },
-	{ 0x12540, 0x0 },
-	{ 0x12640, 0x0 },
-	{ 0x12740, 0x0 },
-	{ 0x12840, 0x0 },
-	{ 0x12030, 0x0 },
-	{ 0x12130, 0x0 },
-	{ 0x12230, 0x0 },
-	{ 0x12330, 0x0 },
-	{ 0x12430, 0x0 },
-	{ 0x12530, 0x0 },
-	{ 0x12630, 0x0 },
-	{ 0x12730, 0x0 },
-	{ 0x12830, 0x0 },
-	{ 0x13040, 0x0 },
-	{ 0x13140, 0x0 },
-	{ 0x13240, 0x0 },
-	{ 0x13340, 0x0 },
-	{ 0x13440, 0x0 },
-	{ 0x13540, 0x0 },
-	{ 0x13640, 0x0 },
-	{ 0x13740, 0x0 },
-	{ 0x13840, 0x0 },
-	{ 0x13030, 0x0 },
-	{ 0x13130, 0x0 },
-	{ 0x13230, 0x0 },
-	{ 0x13330, 0x0 },
-	{ 0x13430, 0x0 },
-	{ 0x13530, 0x0 },
-	{ 0x13630, 0x0 },
-	{ 0x13730, 0x0 },
-	{ 0x13830, 0x0 },
-};
-/* P0 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54003, 0xc80 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x11 },
-	{ 0x54008, 0x131f },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x54012, 0x110 },
-	{ 0x54019, 0x2dd4 },
-	{ 0x5401a, 0x31 },
-	{ 0x5401b, 0x4a66 },
-	{ 0x5401c, 0x4a08 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x2dd4 },
-	{ 0x54020, 0x31 },
-	{ 0x54021, 0x4a66 },
-	{ 0x54022, 0x4a08 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x1 },
-	{ 0x54032, 0xd400 },
-	{ 0x54033, 0x312d },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x84a },
-	{ 0x54036, 0x4a },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0xd400 },
-	{ 0x54039, 0x312d },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x84a },
-	{ 0x5403c, 0x4a },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-
-/* P1 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp1_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54002, 0x101 },
-	{ 0x54003, 0x190 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x11 },
-	{ 0x54008, 0x121f },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x54012, 0x110 },
-	{ 0x54019, 0x84 },
-	{ 0x5401a, 0x31 },
-	{ 0x5401b, 0x4a66 },
-	{ 0x5401c, 0x4a08 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x84 },
-	{ 0x54020, 0x31 },
-	{ 0x54021, 0x4a66 },
-	{ 0x54022, 0x4a08 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x1 },
-	{ 0x54032, 0x8400 },
-	{ 0x54033, 0x3100 },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x84a },
-	{ 0x54036, 0x4a },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0x8400 },
-	{ 0x54039, 0x3100 },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x84a },
-	{ 0x5403c, 0x4a },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-
-/* P2 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp2_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54002, 0x102 },
-	{ 0x54003, 0x64 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x11 },
-	{ 0x54008, 0x121f },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x54012, 0x110 },
-	{ 0x54019, 0x84 },
-	{ 0x5401a, 0x31 },
-	{ 0x5401b, 0x4a66 },
-	{ 0x5401c, 0x4a08 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x84 },
-	{ 0x54020, 0x31 },
-	{ 0x54021, 0x4a66 },
-	{ 0x54022, 0x4a08 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x1 },
-	{ 0x54032, 0x8400 },
-	{ 0x54033, 0x3100 },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x84a },
-	{ 0x54036, 0x4a },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0x8400 },
-	{ 0x54039, 0x3100 },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x84a },
-	{ 0x5403c, 0x4a },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-
-/* P0 2D message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54003, 0xc80 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x11 },
-	{ 0x54008, 0x61 },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x5400d, 0x100 },
-	{ 0x5400f, 0x100 },
-	{ 0x54010, 0x1f7f },
-	{ 0x54012, 0x110 },
-	{ 0x54019, 0x2dd4 },
-	{ 0x5401a, 0x31 },
-	{ 0x5401b, 0x4a66 },
-	{ 0x5401c, 0x4a08 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x2dd4 },
-	{ 0x54020, 0x31 },
-	{ 0x54021, 0x4a66 },
-	{ 0x54022, 0x4a08 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x1 },
-	{ 0x54032, 0xd400 },
-	{ 0x54033, 0x312d },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x84a },
-	{ 0x54036, 0x4a },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0xd400 },
-	{ 0x54039, 0x312d },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x84a },
-	{ 0x5403c, 0x4a },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-/* DRAM PHY init engine image */
-struct dram_cfg_param ddr_phy_pie[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x90000, 0x10 },
-	{ 0x90001, 0x400 },
-	{ 0x90002, 0x10e },
-	{ 0x90003, 0x0 },
-	{ 0x90004, 0x0 },
-	{ 0x90005, 0x8 },
-	{ 0x90029, 0xb },
-	{ 0x9002a, 0x480 },
-	{ 0x9002b, 0x109 },
-	{ 0x9002c, 0x8 },
-	{ 0x9002d, 0x448 },
-	{ 0x9002e, 0x139 },
-	{ 0x9002f, 0x8 },
-	{ 0x90030, 0x478 },
-	{ 0x90031, 0x109 },
-	{ 0x90032, 0x0 },
-	{ 0x90033, 0xe8 },
-	{ 0x90034, 0x109 },
-	{ 0x90035, 0x2 },
-	{ 0x90036, 0x10 },
-	{ 0x90037, 0x139 },
-	{ 0x90038, 0xf },
-	{ 0x90039, 0x7c0 },
-	{ 0x9003a, 0x139 },
-	{ 0x9003b, 0x44 },
-	{ 0x9003c, 0x630 },
-	{ 0x9003d, 0x159 },
-	{ 0x9003e, 0x14f },
-	{ 0x9003f, 0x630 },
-	{ 0x90040, 0x159 },
-	{ 0x90041, 0x47 },
-	{ 0x90042, 0x630 },
-	{ 0x90043, 0x149 },
-	{ 0x90044, 0x4f },
-	{ 0x90045, 0x630 },
-	{ 0x90046, 0x179 },
-	{ 0x90047, 0x8 },
-	{ 0x90048, 0xe0 },
-	{ 0x90049, 0x109 },
-	{ 0x9004a, 0x0 },
-	{ 0x9004b, 0x7c8 },
-	{ 0x9004c, 0x109 },
-	{ 0x9004d, 0x0 },
-	{ 0x9004e, 0x1 },
-	{ 0x9004f, 0x8 },
-	{ 0x90050, 0x0 },
-	{ 0x90051, 0x45a },
-	{ 0x90052, 0x9 },
-	{ 0x90053, 0x0 },
-	{ 0x90054, 0x448 },
-	{ 0x90055, 0x109 },
-	{ 0x90056, 0x40 },
-	{ 0x90057, 0x630 },
-	{ 0x90058, 0x179 },
-	{ 0x90059, 0x1 },
-	{ 0x9005a, 0x618 },
-	{ 0x9005b, 0x109 },
-	{ 0x9005c, 0x40c0 },
-	{ 0x9005d, 0x630 },
-	{ 0x9005e, 0x149 },
-	{ 0x9005f, 0x8 },
-	{ 0x90060, 0x4 },
-	{ 0x90061, 0x48 },
-	{ 0x90062, 0x4040 },
-	{ 0x90063, 0x630 },
-	{ 0x90064, 0x149 },
-	{ 0x90065, 0x0 },
-	{ 0x90066, 0x4 },
-	{ 0x90067, 0x48 },
-	{ 0x90068, 0x40 },
-	{ 0x90069, 0x630 },
-	{ 0x9006a, 0x149 },
-	{ 0x9006b, 0x10 },
-	{ 0x9006c, 0x4 },
-	{ 0x9006d, 0x18 },
-	{ 0x9006e, 0x0 },
-	{ 0x9006f, 0x4 },
-	{ 0x90070, 0x78 },
-	{ 0x90071, 0x549 },
-	{ 0x90072, 0x630 },
-	{ 0x90073, 0x159 },
-	{ 0x90074, 0xd49 },
-	{ 0x90075, 0x630 },
-	{ 0x90076, 0x159 },
-	{ 0x90077, 0x94a },
-	{ 0x90078, 0x630 },
-	{ 0x90079, 0x159 },
-	{ 0x9007a, 0x441 },
-	{ 0x9007b, 0x630 },
-	{ 0x9007c, 0x149 },
-	{ 0x9007d, 0x42 },
-	{ 0x9007e, 0x630 },
-	{ 0x9007f, 0x149 },
-	{ 0x90080, 0x1 },
-	{ 0x90081, 0x630 },
-	{ 0x90082, 0x149 },
-	{ 0x90083, 0x0 },
-	{ 0x90084, 0xe0 },
-	{ 0x90085, 0x109 },
-	{ 0x90086, 0xa },
-	{ 0x90087, 0x10 },
-	{ 0x90088, 0x109 },
-	{ 0x90089, 0x9 },
-	{ 0x9008a, 0x3c0 },
-	{ 0x9008b, 0x149 },
-	{ 0x9008c, 0x9 },
-	{ 0x9008d, 0x3c0 },
-	{ 0x9008e, 0x159 },
-	{ 0x9008f, 0x18 },
-	{ 0x90090, 0x10 },
-	{ 0x90091, 0x109 },
-	{ 0x90092, 0x0 },
-	{ 0x90093, 0x3c0 },
-	{ 0x90094, 0x109 },
-	{ 0x90095, 0x18 },
-	{ 0x90096, 0x4 },
-	{ 0x90097, 0x48 },
-	{ 0x90098, 0x18 },
-	{ 0x90099, 0x4 },
-	{ 0x9009a, 0x58 },
-	{ 0x9009b, 0xa },
-	{ 0x9009c, 0x10 },
-	{ 0x9009d, 0x109 },
-	{ 0x9009e, 0x2 },
-	{ 0x9009f, 0x10 },
-	{ 0x900a0, 0x109 },
-	{ 0x900a1, 0x5 },
-	{ 0x900a2, 0x7c0 },
-	{ 0x900a3, 0x109 },
-	{ 0x900a4, 0x10 },
-	{ 0x900a5, 0x10 },
-	{ 0x900a6, 0x109 },
-	{ 0x40000, 0x811 },
-	{ 0x40020, 0x880 },
-	{ 0x40040, 0x0 },
-	{ 0x40060, 0x0 },
-	{ 0x40001, 0x4008 },
-	{ 0x40021, 0x83 },
-	{ 0x40041, 0x4f },
-	{ 0x40061, 0x0 },
-	{ 0x40002, 0x4040 },
-	{ 0x40022, 0x83 },
-	{ 0x40042, 0x51 },
-	{ 0x40062, 0x0 },
-	{ 0x40003, 0x811 },
-	{ 0x40023, 0x880 },
-	{ 0x40043, 0x0 },
-	{ 0x40063, 0x0 },
-	{ 0x40004, 0x720 },
-	{ 0x40024, 0xf },
-	{ 0x40044, 0x1740 },
-	{ 0x40064, 0x0 },
-	{ 0x40005, 0x16 },
-	{ 0x40025, 0x83 },
-	{ 0x40045, 0x4b },
-	{ 0x40065, 0x0 },
-	{ 0x40006, 0x716 },
-	{ 0x40026, 0xf },
-	{ 0x40046, 0x2001 },
-	{ 0x40066, 0x0 },
-	{ 0x40007, 0x716 },
-	{ 0x40027, 0xf },
-	{ 0x40047, 0x2800 },
-	{ 0x40067, 0x0 },
-	{ 0x40008, 0x716 },
-	{ 0x40028, 0xf },
-	{ 0x40048, 0xf00 },
-	{ 0x40068, 0x0 },
-	{ 0x40009, 0x720 },
-	{ 0x40029, 0xf },
-	{ 0x40049, 0x1400 },
-	{ 0x40069, 0x0 },
-	{ 0x4000a, 0xe08 },
-	{ 0x4002a, 0xc15 },
-	{ 0x4004a, 0x0 },
-	{ 0x4006a, 0x0 },
-	{ 0x4000b, 0x623 },
-	{ 0x4002b, 0x15 },
-	{ 0x4004b, 0x0 },
-	{ 0x4006b, 0x0 },
-	{ 0x4000c, 0x4028 },
-	{ 0x4002c, 0x80 },
-	{ 0x4004c, 0x0 },
-	{ 0x4006c, 0x0 },
-	{ 0x4000d, 0xe08 },
-	{ 0x4002d, 0xc1a },
-	{ 0x4004d, 0x0 },
-	{ 0x4006d, 0x0 },
-	{ 0x4000e, 0x623 },
-	{ 0x4002e, 0x1a },
-	{ 0x4004e, 0x0 },
-	{ 0x4006e, 0x0 },
-	{ 0x4000f, 0x4040 },
-	{ 0x4002f, 0x80 },
-	{ 0x4004f, 0x0 },
-	{ 0x4006f, 0x0 },
-	{ 0x40010, 0x2604 },
-	{ 0x40030, 0x15 },
-	{ 0x40050, 0x0 },
-	{ 0x40070, 0x0 },
-	{ 0x40011, 0x708 },
-	{ 0x40031, 0x5 },
-	{ 0x40051, 0x0 },
-	{ 0x40071, 0x2002 },
-	{ 0x40012, 0x8 },
-	{ 0x40032, 0x80 },
-	{ 0x40052, 0x0 },
-	{ 0x40072, 0x0 },
-	{ 0x40013, 0x2604 },
-	{ 0x40033, 0x1a },
-	{ 0x40053, 0x0 },
-	{ 0x40073, 0x0 },
-	{ 0x40014, 0x708 },
-	{ 0x40034, 0xa },
-	{ 0x40054, 0x0 },
-	{ 0x40074, 0x2002 },
-	{ 0x40015, 0x4040 },
-	{ 0x40035, 0x80 },
-	{ 0x40055, 0x0 },
-	{ 0x40075, 0x0 },
-	{ 0x40016, 0x60a },
-	{ 0x40036, 0x15 },
-	{ 0x40056, 0x1200 },
-	{ 0x40076, 0x0 },
-	{ 0x40017, 0x61a },
-	{ 0x40037, 0x15 },
-	{ 0x40057, 0x1300 },
-	{ 0x40077, 0x0 },
-	{ 0x40018, 0x60a },
-	{ 0x40038, 0x1a },
-	{ 0x40058, 0x1200 },
-	{ 0x40078, 0x0 },
-	{ 0x40019, 0x642 },
-	{ 0x40039, 0x1a },
-	{ 0x40059, 0x1300 },
-	{ 0x40079, 0x0 },
-	{ 0x4001a, 0x4808 },
-	{ 0x4003a, 0x880 },
-	{ 0x4005a, 0x0 },
-	{ 0x4007a, 0x0 },
-	{ 0x900a7, 0x0 },
-	{ 0x900a8, 0x790 },
-	{ 0x900a9, 0x11a },
-	{ 0x900aa, 0x8 },
-	{ 0x900ab, 0x7aa },
-	{ 0x900ac, 0x2a },
-	{ 0x900ad, 0x10 },
-	{ 0x900ae, 0x7b2 },
-	{ 0x900af, 0x2a },
-	{ 0x900b0, 0x0 },
-	{ 0x900b1, 0x7c8 },
-	{ 0x900b2, 0x109 },
-	{ 0x900b3, 0x10 },
-	{ 0x900b4, 0x2a8 },
-	{ 0x900b5, 0x129 },
-	{ 0x900b6, 0x8 },
-	{ 0x900b7, 0x370 },
-	{ 0x900b8, 0x129 },
-	{ 0x900b9, 0xa },
-	{ 0x900ba, 0x3c8 },
-	{ 0x900bb, 0x1a9 },
-	{ 0x900bc, 0xc },
-	{ 0x900bd, 0x408 },
-	{ 0x900be, 0x199 },
-	{ 0x900bf, 0x14 },
-	{ 0x900c0, 0x790 },
-	{ 0x900c1, 0x11a },
-	{ 0x900c2, 0x8 },
-	{ 0x900c3, 0x4 },
-	{ 0x900c4, 0x18 },
-	{ 0x900c5, 0xe },
-	{ 0x900c6, 0x408 },
-	{ 0x900c7, 0x199 },
-	{ 0x900c8, 0x8 },
-	{ 0x900c9, 0x8568 },
-	{ 0x900ca, 0x108 },
-	{ 0x900cb, 0x18 },
-	{ 0x900cc, 0x790 },
-	{ 0x900cd, 0x16a },
-	{ 0x900ce, 0x8 },
-	{ 0x900cf, 0x1d8 },
-	{ 0x900d0, 0x169 },
-	{ 0x900d1, 0x10 },
-	{ 0x900d2, 0x8558 },
-	{ 0x900d3, 0x168 },
-	{ 0x900d4, 0x70 },
-	{ 0x900d5, 0x788 },
-	{ 0x900d6, 0x16a },
-	{ 0x900d7, 0x1ff8 },
-	{ 0x900d8, 0x85a8 },
-	{ 0x900d9, 0x1e8 },
-	{ 0x900da, 0x50 },
-	{ 0x900db, 0x798 },
-	{ 0x900dc, 0x16a },
-	{ 0x900dd, 0x60 },
-	{ 0x900de, 0x7a0 },
-	{ 0x900df, 0x16a },
-	{ 0x900e0, 0x8 },
-	{ 0x900e1, 0x8310 },
-	{ 0x900e2, 0x168 },
-	{ 0x900e3, 0x8 },
-	{ 0x900e4, 0xa310 },
-	{ 0x900e5, 0x168 },
-	{ 0x900e6, 0xa },
-	{ 0x900e7, 0x408 },
-	{ 0x900e8, 0x169 },
-	{ 0x900e9, 0x6e },
-	{ 0x900ea, 0x0 },
-	{ 0x900eb, 0x68 },
-	{ 0x900ec, 0x0 },
-	{ 0x900ed, 0x408 },
-	{ 0x900ee, 0x169 },
-	{ 0x900ef, 0x0 },
-	{ 0x900f0, 0x8310 },
-	{ 0x900f1, 0x168 },
-	{ 0x900f2, 0x0 },
-	{ 0x900f3, 0xa310 },
-	{ 0x900f4, 0x168 },
-	{ 0x900f5, 0x1ff8 },
-	{ 0x900f6, 0x85a8 },
-	{ 0x900f7, 0x1e8 },
-	{ 0x900f8, 0x68 },
-	{ 0x900f9, 0x798 },
-	{ 0x900fa, 0x16a },
-	{ 0x900fb, 0x78 },
-	{ 0x900fc, 0x7a0 },
-	{ 0x900fd, 0x16a },
-	{ 0x900fe, 0x68 },
-	{ 0x900ff, 0x790 },
-	{ 0x90100, 0x16a },
-	{ 0x90101, 0x8 },
-	{ 0x90102, 0x8b10 },
-	{ 0x90103, 0x168 },
-	{ 0x90104, 0x8 },
-	{ 0x90105, 0xab10 },
-	{ 0x90106, 0x168 },
-	{ 0x90107, 0xa },
-	{ 0x90108, 0x408 },
-	{ 0x90109, 0x169 },
-	{ 0x9010a, 0x58 },
-	{ 0x9010b, 0x0 },
-	{ 0x9010c, 0x68 },
-	{ 0x9010d, 0x0 },
-	{ 0x9010e, 0x408 },
-	{ 0x9010f, 0x169 },
-	{ 0x90110, 0x0 },
-	{ 0x90111, 0x8b10 },
-	{ 0x90112, 0x168 },
-	{ 0x90113, 0x0 },
-	{ 0x90114, 0xab10 },
-	{ 0x90115, 0x168 },
-	{ 0x90116, 0x0 },
-	{ 0x90117, 0x1d8 },
-	{ 0x90118, 0x169 },
-	{ 0x90119, 0x80 },
-	{ 0x9011a, 0x790 },
-	{ 0x9011b, 0x16a },
-	{ 0x9011c, 0x18 },
-	{ 0x9011d, 0x7aa },
-	{ 0x9011e, 0x6a },
-	{ 0x9011f, 0xa },
-	{ 0x90120, 0x0 },
-	{ 0x90121, 0x1e9 },
-	{ 0x90122, 0x8 },
-	{ 0x90123, 0x8080 },
-	{ 0x90124, 0x108 },
-	{ 0x90125, 0xf },
-	{ 0x90126, 0x408 },
-	{ 0x90127, 0x169 },
-	{ 0x90128, 0xc },
-	{ 0x90129, 0x0 },
-	{ 0x9012a, 0x68 },
-	{ 0x9012b, 0x9 },
-	{ 0x9012c, 0x0 },
-	{ 0x9012d, 0x1a9 },
-	{ 0x9012e, 0x0 },
-	{ 0x9012f, 0x408 },
-	{ 0x90130, 0x169 },
-	{ 0x90131, 0x0 },
-	{ 0x90132, 0x8080 },
-	{ 0x90133, 0x108 },
-	{ 0x90134, 0x8 },
-	{ 0x90135, 0x7aa },
-	{ 0x90136, 0x6a },
-	{ 0x90137, 0x0 },
-	{ 0x90138, 0x8568 },
-	{ 0x90139, 0x108 },
-	{ 0x9013a, 0xb7 },
-	{ 0x9013b, 0x790 },
-	{ 0x9013c, 0x16a },
-	{ 0x9013d, 0x1f },
-	{ 0x9013e, 0x0 },
-	{ 0x9013f, 0x68 },
-	{ 0x90140, 0x8 },
-	{ 0x90141, 0x8558 },
-	{ 0x90142, 0x168 },
-	{ 0x90143, 0xf },
-	{ 0x90144, 0x408 },
-	{ 0x90145, 0x169 },
-	{ 0x90146, 0xc },
-	{ 0x90147, 0x0 },
-	{ 0x90148, 0x68 },
-	{ 0x90149, 0x0 },
-	{ 0x9014a, 0x408 },
-	{ 0x9014b, 0x169 },
-	{ 0x9014c, 0x0 },
-	{ 0x9014d, 0x8558 },
-	{ 0x9014e, 0x168 },
-	{ 0x9014f, 0x8 },
-	{ 0x90150, 0x3c8 },
-	{ 0x90151, 0x1a9 },
-	{ 0x90152, 0x3 },
-	{ 0x90153, 0x370 },
-	{ 0x90154, 0x129 },
-	{ 0x90155, 0x20 },
-	{ 0x90156, 0x2aa },
-	{ 0x90157, 0x9 },
-	{ 0x90158, 0x0 },
-	{ 0x90159, 0x400 },
-	{ 0x9015a, 0x10e },
-	{ 0x9015b, 0x8 },
-	{ 0x9015c, 0xe8 },
-	{ 0x9015d, 0x109 },
-	{ 0x9015e, 0x0 },
-	{ 0x9015f, 0x8140 },
-	{ 0x90160, 0x10c },
-	{ 0x90161, 0x10 },
-	{ 0x90162, 0x8138 },
-	{ 0x90163, 0x10c },
-	{ 0x90164, 0x8 },
-	{ 0x90165, 0x7c8 },
-	{ 0x90166, 0x101 },
-	{ 0x90167, 0x8 },
-	{ 0x90168, 0x0 },
-	{ 0x90169, 0x8 },
-	{ 0x9016a, 0x8 },
-	{ 0x9016b, 0x448 },
-	{ 0x9016c, 0x109 },
-	{ 0x9016d, 0xf },
-	{ 0x9016e, 0x7c0 },
-	{ 0x9016f, 0x109 },
-	{ 0x90170, 0x0 },
-	{ 0x90171, 0xe8 },
-	{ 0x90172, 0x109 },
-	{ 0x90173, 0x47 },
-	{ 0x90174, 0x630 },
-	{ 0x90175, 0x109 },
-	{ 0x90176, 0x8 },
-	{ 0x90177, 0x618 },
-	{ 0x90178, 0x109 },
-	{ 0x90179, 0x8 },
-	{ 0x9017a, 0xe0 },
-	{ 0x9017b, 0x109 },
-	{ 0x9017c, 0x0 },
-	{ 0x9017d, 0x7c8 },
-	{ 0x9017e, 0x109 },
-	{ 0x9017f, 0x8 },
-	{ 0x90180, 0x8140 },
-	{ 0x90181, 0x10c },
-	{ 0x90182, 0x0 },
-	{ 0x90183, 0x1 },
-	{ 0x90184, 0x8 },
-	{ 0x90185, 0x8 },
-	{ 0x90186, 0x4 },
-	{ 0x90187, 0x8 },
-	{ 0x90188, 0x8 },
-	{ 0x90189, 0x7c8 },
-	{ 0x9018a, 0x101 },
-	{ 0x90006, 0x0 },
-	{ 0x90007, 0x0 },
-	{ 0x90008, 0x8 },
-	{ 0x90009, 0x0 },
-	{ 0x9000a, 0x0 },
-	{ 0x9000b, 0x0 },
-	{ 0xd00e7, 0x400 },
-	{ 0x90017, 0x0 },
-	{ 0x9001f, 0x2a },
-	{ 0x90026, 0x6a },
-	{ 0x400d0, 0x0 },
-	{ 0x400d1, 0x101 },
-	{ 0x400d2, 0x105 },
-	{ 0x400d3, 0x107 },
-	{ 0x400d4, 0x10f },
-	{ 0x400d5, 0x202 },
-	{ 0x400d6, 0x20a },
-	{ 0x400d7, 0x20b },
-	{ 0x2003a, 0x2 },
-	{ 0x2000b, 0x64 },
-	{ 0x2000c, 0xc8 },
-	{ 0x2000d, 0x7d0 },
-	{ 0x2000e, 0x2c },
-	{ 0x12000b, 0xc },
-	{ 0x12000c, 0x19 },
-	{ 0x12000d, 0xfa },
-	{ 0x12000e, 0x10 },
-	{ 0x22000b, 0x3 },
-	{ 0x22000c, 0x6 },
-	{ 0x22000d, 0x3e },
-	{ 0x22000e, 0x10 },
-	{ 0x9000c, 0x0 },
-	{ 0x9000d, 0x173 },
-	{ 0x9000e, 0x60 },
-	{ 0x9000f, 0x6110 },
-	{ 0x90010, 0x2152 },
-	{ 0x90011, 0xdfbd },
-	{ 0x90012, 0x60 },
-	{ 0x90013, 0x6152 },
-	{ 0x20010, 0x5a },
-	{ 0x20011, 0x3 },
-	{ 0x40080, 0xe0 },
-	{ 0x40081, 0x12 },
-	{ 0x40082, 0xe0 },
-	{ 0x40083, 0x12 },
-	{ 0x40084, 0xe0 },
-	{ 0x40085, 0x12 },
-	{ 0x140080, 0xe0 },
-	{ 0x140081, 0x12 },
-	{ 0x140082, 0xe0 },
-	{ 0x140083, 0x12 },
-	{ 0x140084, 0xe0 },
-	{ 0x140085, 0x12 },
-	{ 0x240080, 0xe0 },
-	{ 0x240081, 0x12 },
-	{ 0x240082, 0xe0 },
-	{ 0x240083, 0x12 },
-	{ 0x240084, 0xe0 },
-	{ 0x240085, 0x12 },
-	{ 0x400fd, 0xf },
-	{ 0x10011, 0x1 },
-	{ 0x10012, 0x1 },
-	{ 0x10013, 0x180 },
-	{ 0x10018, 0x1 },
-	{ 0x10002, 0x6209 },
-	{ 0x100b2, 0x1 },
-	{ 0x101b4, 0x1 },
-	{ 0x102b4, 0x1 },
-	{ 0x103b4, 0x1 },
-	{ 0x104b4, 0x1 },
-	{ 0x105b4, 0x1 },
-	{ 0x106b4, 0x1 },
-	{ 0x107b4, 0x1 },
-	{ 0x108b4, 0x1 },
-	{ 0x11011, 0x1 },
-	{ 0x11012, 0x1 },
-	{ 0x11013, 0x180 },
-	{ 0x11018, 0x1 },
-	{ 0x11002, 0x6209 },
-	{ 0x110b2, 0x1 },
-	{ 0x111b4, 0x1 },
-	{ 0x112b4, 0x1 },
-	{ 0x113b4, 0x1 },
-	{ 0x114b4, 0x1 },
-	{ 0x115b4, 0x1 },
-	{ 0x116b4, 0x1 },
-	{ 0x117b4, 0x1 },
-	{ 0x118b4, 0x1 },
-	{ 0x12011, 0x1 },
-	{ 0x12012, 0x1 },
-	{ 0x12013, 0x180 },
-	{ 0x12018, 0x1 },
-	{ 0x12002, 0x6209 },
-	{ 0x120b2, 0x1 },
-	{ 0x121b4, 0x1 },
-	{ 0x122b4, 0x1 },
-	{ 0x123b4, 0x1 },
-	{ 0x124b4, 0x1 },
-	{ 0x125b4, 0x1 },
-	{ 0x126b4, 0x1 },
-	{ 0x127b4, 0x1 },
-	{ 0x128b4, 0x1 },
-	{ 0x13011, 0x1 },
-	{ 0x13012, 0x1 },
-	{ 0x13013, 0x180 },
-	{ 0x13018, 0x1 },
-	{ 0x13002, 0x6209 },
-	{ 0x130b2, 0x1 },
-	{ 0x131b4, 0x1 },
-	{ 0x132b4, 0x1 },
-	{ 0x133b4, 0x1 },
-	{ 0x134b4, 0x1 },
-	{ 0x135b4, 0x1 },
-	{ 0x136b4, 0x1 },
-	{ 0x137b4, 0x1 },
-	{ 0x138b4, 0x1 },
-	{ 0x2003a, 0x2 },
-	{ 0xc0080, 0x2 },
-	{ 0xd0000, 0x1 }
-};
-
-struct dram_fsp_msg ddr_dram_fsp_msg[] = {
-	{
-		/* P0 3200mts 1D */
-		.drate = 3200,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp0_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_cfg),
-	},
-	{
-		/* P1 400mts 1D */
-		.drate = 400,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp1_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp1_cfg),
-	},
-	{
-		/* P2 100mts 1D */
-		.drate = 100,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp2_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp2_cfg),
-	},
-	{
-		/* P0 3200mts 2D */
-		.drate = 3200,
-		.fw_type = FW_2D_IMAGE,
-		.fsp_cfg = ddr_fsp0_2d_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_2d_cfg),
-	},
-};
-
-/* ddr timing config params */
-struct dram_timing_info dram_timing = {
-	.ddrc_cfg = ddr_ddrc_cfg,
-	.ddrc_cfg_num = ARRAY_SIZE(ddr_ddrc_cfg),
-	.ddrphy_cfg = ddr_ddrphy_cfg,
-	.ddrphy_cfg_num = ARRAY_SIZE(ddr_ddrphy_cfg),
-	.fsp_msg = ddr_dram_fsp_msg,
-	.fsp_msg_num = ARRAY_SIZE(ddr_dram_fsp_msg),
-	.ddrphy_trained_csr = ddr_ddrphy_trained_csr,
-	.ddrphy_trained_csr_num = ARRAY_SIZE(ddr_ddrphy_trained_csr),
-	.ddrphy_pie = ddr_phy_pie,
-	.ddrphy_pie_num = ARRAY_SIZE(ddr_phy_pie),
-	.fsp_table = { 3200, 400, 100, },
-};
-
diff --git a/board/freescale/imx8mq_a300/ddr/lpddr4_timing_4g.c b/board/freescale/imx8mq_a300/ddr/lpddr4_timing_4g.c
deleted file mode 100644
index e759c0a585..0000000000
--- a/board/freescale/imx8mq_a300/ddr/lpddr4_timing_4g.c
+++ /dev/null
@@ -1,1863 +0,0 @@
-/*
- * Copyright 2019 NXP
- *
- * SPDX-License-Identifier: GPL-2.0+
- *
- * Generated code from MX8M_DDR_tool
- * Align with uboot version:
- * imx_v2018.03_4.14.78_1.0.0_ga ~ imx_v2018.04_4.19.35_1.0.0_ga
- */
-
-#include <linux/kernel.h>
-#include <asm/arch/ddr.h>
-#include <asm/arch/lpddr4_define.h>
-
-struct dram_cfg_param ddr_ddrc_cfg[] = {
-	/** Initialize DDRC registers **/
-	{ 0x3d400304, 0x1 },
-	{ 0x3d400030, 0x1 },
-	{ 0x3d400000, 0xa3080020 },
-	{ 0x3d400028, 0x0 },
-	{ 0x3d400020, 0x203 },
-	{ 0x3d400024, 0x3e800 },
-	{ 0x3d400064, 0x6100e0 },
-	{ 0x3d4000d0, 0xc003061c },
-	{ 0x3d4000d4, 0x9e0000 },
-	{ 0x3d4000dc, 0xd4002d },
-	{ 0x3d4000e0, 0x310008 },
-	{ 0x3d4000e8, 0x66004a },
-	{ 0x3d4000ec, 0x16004a },
-	{ 0x3d400100, 0x1a201b22 },
-	{ 0x3d400104, 0x60633 },
-	{ 0x3d40010c, 0xc0c000 },
-	{ 0x3d400110, 0xf04080f },
-	{ 0x3d400114, 0x2040c0c },
-	{ 0x3d400118, 0x1010007 },
-	{ 0x3d40011c, 0x401 },
-	{ 0x3d400130, 0x20600 },
-	{ 0x3d400134, 0xc100002 },
-	{ 0x3d400138, 0xe6 },
-	{ 0x3d400144, 0xa00050 },
-	{ 0x3d400180, 0xc3200018 },
-	{ 0x3d400184, 0x28061a8 },
-	{ 0x3d400188, 0x0 },
-	{ 0x3d400190, 0x497820a },
-	{ 0x3d400194, 0x80303 },
-	{ 0x3d4001a0, 0xe0400018 },
-	{ 0x3d4001a4, 0xdf00e4 },
-	{ 0x3d4001a8, 0x80000000 },
-	{ 0x3d4001b0, 0x11 },
-	{ 0x3d4001b4, 0x170a },
-	{ 0x3d4001c0, 0x1 },
-	{ 0x3d4001c4, 0x1 },
-	{ 0x3d4000f4, 0x639 },
-	{ 0x3d400108, 0x70e1617 },
-	{ 0x3d400200, 0x17 },
-	{ 0x3d40020c, 0x0 },
-	{ 0x3d400210, 0x1f1f },
-	{ 0x3d400204, 0x80808 },
-	{ 0x3d400214, 0x7070707 },
-	{ 0x3d400218, 0x7070707 },
-	{ 0x3d402020, 0x1 },
-	{ 0x3d402024, 0x7d00 },
-	{ 0x3d402050, 0x20d040 },
-	{ 0x3d402064, 0xc001c },
-	{ 0x3d4020dc, 0x840000 },
-	{ 0x3d4020e0, 0x310000 },
-	{ 0x3d4020e8, 0x66004a },
-	{ 0x3d4020ec, 0x16004a },
-	{ 0x3d402100, 0xa040305 },
-	{ 0x3d402104, 0x30407 },
-	{ 0x3d402108, 0x203060b },
-	{ 0x3d40210c, 0x505000 },
-	{ 0x3d402110, 0x2040202 },
-	{ 0x3d402114, 0x2030202 },
-	{ 0x3d402118, 0x1010004 },
-	{ 0x3d40211c, 0x301 },
-	{ 0x3d402130, 0x20300 },
-	{ 0x3d402134, 0xa100002 },
-	{ 0x3d402138, 0x1d },
-	{ 0x3d402144, 0x14000a },
-	{ 0x3d402180, 0xc0640004 },
-	{ 0x3d402190, 0x3818200 },
-	{ 0x3d402194, 0x80303 },
-	{ 0x3d4021b4, 0x100 },
-	{ 0x3d403020, 0x1 },
-	{ 0x3d403024, 0x1f40 },
-	{ 0x3d403050, 0x20d040 },
-	{ 0x3d403064, 0x30007 },
-	{ 0x3d4030dc, 0x840000 },
-	{ 0x3d4030e0, 0x310000 },
-	{ 0x3d4030e8, 0x66004a },
-	{ 0x3d4030ec, 0x16004a },
-	{ 0x3d403100, 0xa010102 },
-	{ 0x3d403104, 0x30404 },
-	{ 0x3d403108, 0x203060b },
-	{ 0x3d40310c, 0x505000 },
-	{ 0x3d403110, 0x2040202 },
-	{ 0x3d403114, 0x2030202 },
-	{ 0x3d403118, 0x1010004 },
-	{ 0x3d40311c, 0x301 },
-	{ 0x3d403130, 0x20300 },
-	{ 0x3d403134, 0xa100002 },
-	{ 0x3d403138, 0x8 },
-	{ 0x3d403144, 0x50003 },
-	{ 0x3d403180, 0xc0190004 },
-	{ 0x3d403190, 0x3818200 },
-	{ 0x3d403194, 0x80303 },
-	{ 0x3d4031b4, 0x100 },
-	{ 0x3d400244, 0x0 },
-	{ 0x3d400250, 0x29001505 },
-	{ 0x3d400254, 0x2c },
-	{ 0x3d40025c, 0x5900575b },
-	{ 0x3d400264, 0x90000096 },
-	{ 0x3d40026c, 0x1000012c },
-	{ 0x3d400300, 0x16 },
-	{ 0x3d400304, 0x0 },
-	{ 0x3d40030c, 0x0 },
-	{ 0x3d400320, 0x1 },
-	{ 0x3d40036c, 0x11 },
-	{ 0x3d400400, 0x111 },
-	{ 0x3d400404, 0x10f3 },
-	{ 0x3d400408, 0x72ff },
-	{ 0x3d400490, 0x1 },
-	{ 0x3d400494, 0xe00 },
-	{ 0x3d400498, 0x62ffff },
-	{ 0x3d40049c, 0xe00 },
-	{ 0x3d4004a0, 0xffff },
-};
-
-/* PHY Initialize Configuration */
-struct dram_cfg_param ddr_ddrphy_cfg[] = {
-	{ 0x100a0, 0x0 },
-	{ 0x100a1, 0x1 },
-	{ 0x100a2, 0x2 },
-	{ 0x100a3, 0x3 },
-	{ 0x100a4, 0x4 },
-	{ 0x100a5, 0x5 },
-	{ 0x100a6, 0x6 },
-	{ 0x100a7, 0x7 },
-	{ 0x110a0, 0x0 },
-	{ 0x110a1, 0x1 },
-	{ 0x110a2, 0x2 },
-	{ 0x110a3, 0x3 },
-	{ 0x110a4, 0x4 },
-	{ 0x110a5, 0x5 },
-	{ 0x110a6, 0x6 },
-	{ 0x110a7, 0x7 },
-	{ 0x120a0, 0x0 },
-	{ 0x120a1, 0x1 },
-	{ 0x120a2, 0x2 },
-	{ 0x120a3, 0x3 },
-	{ 0x120a4, 0x4 },
-	{ 0x120a5, 0x5 },
-	{ 0x120a6, 0x6 },
-	{ 0x120a7, 0x7 },
-	{ 0x130a0, 0x0 },
-	{ 0x130a1, 0x1 },
-	{ 0x130a2, 0x2 },
-	{ 0x130a3, 0x3 },
-	{ 0x130a4, 0x4 },
-	{ 0x130a5, 0x5 },
-	{ 0x130a6, 0x6 },
-	{ 0x130a7, 0x7 },
-	{ 0x1005f, 0x1ff },
-	{ 0x1015f, 0x1ff },
-	{ 0x1105f, 0x1ff },
-	{ 0x1115f, 0x1ff },
-	{ 0x1205f, 0x1ff },
-	{ 0x1215f, 0x1ff },
-	{ 0x1305f, 0x1ff },
-	{ 0x1315f, 0x1ff },
-	{ 0x11005f, 0x1ff },
-	{ 0x11015f, 0x1ff },
-	{ 0x11105f, 0x1ff },
-	{ 0x11115f, 0x1ff },
-	{ 0x11205f, 0x1ff },
-	{ 0x11215f, 0x1ff },
-	{ 0x11305f, 0x1ff },
-	{ 0x11315f, 0x1ff },
-	{ 0x21005f, 0x1ff },
-	{ 0x21015f, 0x1ff },
-	{ 0x21105f, 0x1ff },
-	{ 0x21115f, 0x1ff },
-	{ 0x21205f, 0x1ff },
-	{ 0x21215f, 0x1ff },
-	{ 0x21305f, 0x1ff },
-	{ 0x21315f, 0x1ff },
-	{ 0x55, 0x1ff },
-	{ 0x1055, 0x1ff },
-	{ 0x2055, 0x1ff },
-	{ 0x3055, 0x1ff },
-	{ 0x4055, 0x1ff },
-	{ 0x5055, 0x1ff },
-	{ 0x6055, 0x1ff },
-	{ 0x7055, 0x1ff },
-	{ 0x8055, 0x1ff },
-	{ 0x9055, 0x1ff },
-	{ 0x200c5, 0x19 },
-	{ 0x1200c5, 0x7 },
-	{ 0x2200c5, 0x7 },
-	{ 0x2002e, 0x2 },
-	{ 0x12002e, 0x2 },
-	{ 0x22002e, 0x2 },
-	{ 0x90204, 0x0 },
-	{ 0x190204, 0x0 },
-	{ 0x290204, 0x0 },
-	{ 0x20024, 0x1ab },
-	{ 0x2003a, 0x0 },
-	{ 0x120024, 0x1ab },
-	{ 0x2003a, 0x0 },
-	{ 0x220024, 0x1ab },
-	{ 0x2003a, 0x0 },
-	{ 0x20056, 0x3 },
-	{ 0x120056, 0x3 },
-	{ 0x220056, 0x3 },
-	{ 0x1004d, 0xe00 },
-	{ 0x1014d, 0xe00 },
-	{ 0x1104d, 0xe00 },
-	{ 0x1114d, 0xe00 },
-	{ 0x1204d, 0xe00 },
-	{ 0x1214d, 0xe00 },
-	{ 0x1304d, 0xe00 },
-	{ 0x1314d, 0xe00 },
-	{ 0x11004d, 0xe00 },
-	{ 0x11014d, 0xe00 },
-	{ 0x11104d, 0xe00 },
-	{ 0x11114d, 0xe00 },
-	{ 0x11204d, 0xe00 },
-	{ 0x11214d, 0xe00 },
-	{ 0x11304d, 0xe00 },
-	{ 0x11314d, 0xe00 },
-	{ 0x21004d, 0xe00 },
-	{ 0x21014d, 0xe00 },
-	{ 0x21104d, 0xe00 },
-	{ 0x21114d, 0xe00 },
-	{ 0x21204d, 0xe00 },
-	{ 0x21214d, 0xe00 },
-	{ 0x21304d, 0xe00 },
-	{ 0x21314d, 0xe00 },
-	{ 0x10049, 0xeba },
-	{ 0x10149, 0xeba },
-	{ 0x11049, 0xeba },
-	{ 0x11149, 0xeba },
-	{ 0x12049, 0xeba },
-	{ 0x12149, 0xeba },
-	{ 0x13049, 0xeba },
-	{ 0x13149, 0xeba },
-	{ 0x110049, 0xeba },
-	{ 0x110149, 0xeba },
-	{ 0x111049, 0xeba },
-	{ 0x111149, 0xeba },
-	{ 0x112049, 0xeba },
-	{ 0x112149, 0xeba },
-	{ 0x113049, 0xeba },
-	{ 0x113149, 0xeba },
-	{ 0x210049, 0xeba },
-	{ 0x210149, 0xeba },
-	{ 0x211049, 0xeba },
-	{ 0x211149, 0xeba },
-	{ 0x212049, 0xeba },
-	{ 0x212149, 0xeba },
-	{ 0x213049, 0xeba },
-	{ 0x213149, 0xeba },
-	{ 0x43, 0x63 },
-	{ 0x1043, 0x63 },
-	{ 0x2043, 0x63 },
-	{ 0x3043, 0x63 },
-	{ 0x4043, 0x63 },
-	{ 0x5043, 0x63 },
-	{ 0x6043, 0x63 },
-	{ 0x7043, 0x63 },
-	{ 0x8043, 0x63 },
-	{ 0x9043, 0x63 },
-	{ 0x20018, 0x3 },
-	{ 0x20075, 0x4 },
-	{ 0x20050, 0x0 },
-	{ 0x20008, 0x320 },
-	{ 0x120008, 0x64 },
-	{ 0x220008, 0x19 },
-	{ 0x20088, 0x9 },
-	{ 0x200b2, 0xdc },
-	{ 0x10043, 0x5a1 },
-	{ 0x10143, 0x5a1 },
-	{ 0x11043, 0x5a1 },
-	{ 0x11143, 0x5a1 },
-	{ 0x12043, 0x5a1 },
-	{ 0x12143, 0x5a1 },
-	{ 0x13043, 0x5a1 },
-	{ 0x13143, 0x5a1 },
-	{ 0x1200b2, 0xdc },
-	{ 0x110043, 0x5a1 },
-	{ 0x110143, 0x5a1 },
-	{ 0x111043, 0x5a1 },
-	{ 0x111143, 0x5a1 },
-	{ 0x112043, 0x5a1 },
-	{ 0x112143, 0x5a1 },
-	{ 0x113043, 0x5a1 },
-	{ 0x113143, 0x5a1 },
-	{ 0x2200b2, 0xdc },
-	{ 0x210043, 0x5a1 },
-	{ 0x210143, 0x5a1 },
-	{ 0x211043, 0x5a1 },
-	{ 0x211143, 0x5a1 },
-	{ 0x212043, 0x5a1 },
-	{ 0x212143, 0x5a1 },
-	{ 0x213043, 0x5a1 },
-	{ 0x213143, 0x5a1 },
-	{ 0x200fa, 0x1 },
-	{ 0x1200fa, 0x1 },
-	{ 0x2200fa, 0x1 },
-	{ 0x20019, 0x1 },
-	{ 0x120019, 0x1 },
-	{ 0x220019, 0x1 },
-	{ 0x200f0, 0x660 },
-	{ 0x200f1, 0x0 },
-	{ 0x200f2, 0x4444 },
-	{ 0x200f3, 0x8888 },
-	{ 0x200f4, 0x5665 },
-	{ 0x200f5, 0x0 },
-	{ 0x200f6, 0x0 },
-	{ 0x200f7, 0xf000 },
-	{ 0x20025, 0x0 },
-	{ 0x2002d, 0x0 },
-	{ 0x12002d, 0x0 },
-	{ 0x22002d, 0x0 },
-	{ 0x200c7, 0x80 },
-	{ 0x1200c7, 0x80 },
-	{ 0x2200c7, 0x80 },
-	{ 0x200ca, 0x106 },
-	{ 0x1200ca, 0x106 },
-	{ 0x2200ca, 0x106 },
-	{ 0x20110, 0x2 },
-	{ 0x20111, 0x3 },
-	{ 0x20112, 0x4 },
-	{ 0x20113, 0x5 },
-	{ 0x20114, 0x0 },
-	{ 0x20115, 0x1 },
-};
-
-/* ddr phy trained csr */
-struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
-	{ 0x200b2, 0x0 },
-	{ 0x1200b2, 0x0 },
-	{ 0x2200b2, 0x0 },
-	{ 0x200cb, 0x0 },
-	{ 0x10043, 0x0 },
-	{ 0x110043, 0x0 },
-	{ 0x210043, 0x0 },
-	{ 0x10143, 0x0 },
-	{ 0x110143, 0x0 },
-	{ 0x210143, 0x0 },
-	{ 0x11043, 0x0 },
-	{ 0x111043, 0x0 },
-	{ 0x211043, 0x0 },
-	{ 0x11143, 0x0 },
-	{ 0x111143, 0x0 },
-	{ 0x211143, 0x0 },
-	{ 0x12043, 0x0 },
-	{ 0x112043, 0x0 },
-	{ 0x212043, 0x0 },
-	{ 0x12143, 0x0 },
-	{ 0x112143, 0x0 },
-	{ 0x212143, 0x0 },
-	{ 0x13043, 0x0 },
-	{ 0x113043, 0x0 },
-	{ 0x213043, 0x0 },
-	{ 0x13143, 0x0 },
-	{ 0x113143, 0x0 },
-	{ 0x213143, 0x0 },
-	{ 0x80, 0x0 },
-	{ 0x100080, 0x0 },
-	{ 0x200080, 0x0 },
-	{ 0x1080, 0x0 },
-	{ 0x101080, 0x0 },
-	{ 0x201080, 0x0 },
-	{ 0x2080, 0x0 },
-	{ 0x102080, 0x0 },
-	{ 0x202080, 0x0 },
-	{ 0x3080, 0x0 },
-	{ 0x103080, 0x0 },
-	{ 0x203080, 0x0 },
-	{ 0x4080, 0x0 },
-	{ 0x104080, 0x0 },
-	{ 0x204080, 0x0 },
-	{ 0x5080, 0x0 },
-	{ 0x105080, 0x0 },
-	{ 0x205080, 0x0 },
-	{ 0x6080, 0x0 },
-	{ 0x106080, 0x0 },
-	{ 0x206080, 0x0 },
-	{ 0x7080, 0x0 },
-	{ 0x107080, 0x0 },
-	{ 0x207080, 0x0 },
-	{ 0x8080, 0x0 },
-	{ 0x108080, 0x0 },
-	{ 0x208080, 0x0 },
-	{ 0x9080, 0x0 },
-	{ 0x109080, 0x0 },
-	{ 0x209080, 0x0 },
-	{ 0x10080, 0x0 },
-	{ 0x110080, 0x0 },
-	{ 0x210080, 0x0 },
-	{ 0x10180, 0x0 },
-	{ 0x110180, 0x0 },
-	{ 0x210180, 0x0 },
-	{ 0x11080, 0x0 },
-	{ 0x111080, 0x0 },
-	{ 0x211080, 0x0 },
-	{ 0x11180, 0x0 },
-	{ 0x111180, 0x0 },
-	{ 0x211180, 0x0 },
-	{ 0x12080, 0x0 },
-	{ 0x112080, 0x0 },
-	{ 0x212080, 0x0 },
-	{ 0x12180, 0x0 },
-	{ 0x112180, 0x0 },
-	{ 0x212180, 0x0 },
-	{ 0x13080, 0x0 },
-	{ 0x113080, 0x0 },
-	{ 0x213080, 0x0 },
-	{ 0x13180, 0x0 },
-	{ 0x113180, 0x0 },
-	{ 0x213180, 0x0 },
-	{ 0x10081, 0x0 },
-	{ 0x110081, 0x0 },
-	{ 0x210081, 0x0 },
-	{ 0x10181, 0x0 },
-	{ 0x110181, 0x0 },
-	{ 0x210181, 0x0 },
-	{ 0x11081, 0x0 },
-	{ 0x111081, 0x0 },
-	{ 0x211081, 0x0 },
-	{ 0x11181, 0x0 },
-	{ 0x111181, 0x0 },
-	{ 0x211181, 0x0 },
-	{ 0x12081, 0x0 },
-	{ 0x112081, 0x0 },
-	{ 0x212081, 0x0 },
-	{ 0x12181, 0x0 },
-	{ 0x112181, 0x0 },
-	{ 0x212181, 0x0 },
-	{ 0x13081, 0x0 },
-	{ 0x113081, 0x0 },
-	{ 0x213081, 0x0 },
-	{ 0x13181, 0x0 },
-	{ 0x113181, 0x0 },
-	{ 0x213181, 0x0 },
-	{ 0x100d0, 0x0 },
-	{ 0x1100d0, 0x0 },
-	{ 0x2100d0, 0x0 },
-	{ 0x101d0, 0x0 },
-	{ 0x1101d0, 0x0 },
-	{ 0x2101d0, 0x0 },
-	{ 0x110d0, 0x0 },
-	{ 0x1110d0, 0x0 },
-	{ 0x2110d0, 0x0 },
-	{ 0x111d0, 0x0 },
-	{ 0x1111d0, 0x0 },
-	{ 0x2111d0, 0x0 },
-	{ 0x120d0, 0x0 },
-	{ 0x1120d0, 0x0 },
-	{ 0x2120d0, 0x0 },
-	{ 0x121d0, 0x0 },
-	{ 0x1121d0, 0x0 },
-	{ 0x2121d0, 0x0 },
-	{ 0x130d0, 0x0 },
-	{ 0x1130d0, 0x0 },
-	{ 0x2130d0, 0x0 },
-	{ 0x131d0, 0x0 },
-	{ 0x1131d0, 0x0 },
-	{ 0x2131d0, 0x0 },
-	{ 0x100d1, 0x0 },
-	{ 0x1100d1, 0x0 },
-	{ 0x2100d1, 0x0 },
-	{ 0x101d1, 0x0 },
-	{ 0x1101d1, 0x0 },
-	{ 0x2101d1, 0x0 },
-	{ 0x110d1, 0x0 },
-	{ 0x1110d1, 0x0 },
-	{ 0x2110d1, 0x0 },
-	{ 0x111d1, 0x0 },
-	{ 0x1111d1, 0x0 },
-	{ 0x2111d1, 0x0 },
-	{ 0x120d1, 0x0 },
-	{ 0x1120d1, 0x0 },
-	{ 0x2120d1, 0x0 },
-	{ 0x121d1, 0x0 },
-	{ 0x1121d1, 0x0 },
-	{ 0x2121d1, 0x0 },
-	{ 0x130d1, 0x0 },
-	{ 0x1130d1, 0x0 },
-	{ 0x2130d1, 0x0 },
-	{ 0x131d1, 0x0 },
-	{ 0x1131d1, 0x0 },
-	{ 0x2131d1, 0x0 },
-	{ 0x10068, 0x0 },
-	{ 0x10168, 0x0 },
-	{ 0x10268, 0x0 },
-	{ 0x10368, 0x0 },
-	{ 0x10468, 0x0 },
-	{ 0x10568, 0x0 },
-	{ 0x10668, 0x0 },
-	{ 0x10768, 0x0 },
-	{ 0x10868, 0x0 },
-	{ 0x11068, 0x0 },
-	{ 0x11168, 0x0 },
-	{ 0x11268, 0x0 },
-	{ 0x11368, 0x0 },
-	{ 0x11468, 0x0 },
-	{ 0x11568, 0x0 },
-	{ 0x11668, 0x0 },
-	{ 0x11768, 0x0 },
-	{ 0x11868, 0x0 },
-	{ 0x12068, 0x0 },
-	{ 0x12168, 0x0 },
-	{ 0x12268, 0x0 },
-	{ 0x12368, 0x0 },
-	{ 0x12468, 0x0 },
-	{ 0x12568, 0x0 },
-	{ 0x12668, 0x0 },
-	{ 0x12768, 0x0 },
-	{ 0x12868, 0x0 },
-	{ 0x13068, 0x0 },
-	{ 0x13168, 0x0 },
-	{ 0x13268, 0x0 },
-	{ 0x13368, 0x0 },
-	{ 0x13468, 0x0 },
-	{ 0x13568, 0x0 },
-	{ 0x13668, 0x0 },
-	{ 0x13768, 0x0 },
-	{ 0x13868, 0x0 },
-	{ 0x10069, 0x0 },
-	{ 0x10169, 0x0 },
-	{ 0x10269, 0x0 },
-	{ 0x10369, 0x0 },
-	{ 0x10469, 0x0 },
-	{ 0x10569, 0x0 },
-	{ 0x10669, 0x0 },
-	{ 0x10769, 0x0 },
-	{ 0x10869, 0x0 },
-	{ 0x11069, 0x0 },
-	{ 0x11169, 0x0 },
-	{ 0x11269, 0x0 },
-	{ 0x11369, 0x0 },
-	{ 0x11469, 0x0 },
-	{ 0x11569, 0x0 },
-	{ 0x11669, 0x0 },
-	{ 0x11769, 0x0 },
-	{ 0x11869, 0x0 },
-	{ 0x12069, 0x0 },
-	{ 0x12169, 0x0 },
-	{ 0x12269, 0x0 },
-	{ 0x12369, 0x0 },
-	{ 0x12469, 0x0 },
-	{ 0x12569, 0x0 },
-	{ 0x12669, 0x0 },
-	{ 0x12769, 0x0 },
-	{ 0x12869, 0x0 },
-	{ 0x13069, 0x0 },
-	{ 0x13169, 0x0 },
-	{ 0x13269, 0x0 },
-	{ 0x13369, 0x0 },
-	{ 0x13469, 0x0 },
-	{ 0x13569, 0x0 },
-	{ 0x13669, 0x0 },
-	{ 0x13769, 0x0 },
-	{ 0x13869, 0x0 },
-	{ 0x1008c, 0x0 },
-	{ 0x11008c, 0x0 },
-	{ 0x21008c, 0x0 },
-	{ 0x1018c, 0x0 },
-	{ 0x11018c, 0x0 },
-	{ 0x21018c, 0x0 },
-	{ 0x1108c, 0x0 },
-	{ 0x11108c, 0x0 },
-	{ 0x21108c, 0x0 },
-	{ 0x1118c, 0x0 },
-	{ 0x11118c, 0x0 },
-	{ 0x21118c, 0x0 },
-	{ 0x1208c, 0x0 },
-	{ 0x11208c, 0x0 },
-	{ 0x21208c, 0x0 },
-	{ 0x1218c, 0x0 },
-	{ 0x11218c, 0x0 },
-	{ 0x21218c, 0x0 },
-	{ 0x1308c, 0x0 },
-	{ 0x11308c, 0x0 },
-	{ 0x21308c, 0x0 },
-	{ 0x1318c, 0x0 },
-	{ 0x11318c, 0x0 },
-	{ 0x21318c, 0x0 },
-	{ 0x1008d, 0x0 },
-	{ 0x11008d, 0x0 },
-	{ 0x21008d, 0x0 },
-	{ 0x1018d, 0x0 },
-	{ 0x11018d, 0x0 },
-	{ 0x21018d, 0x0 },
-	{ 0x1108d, 0x0 },
-	{ 0x11108d, 0x0 },
-	{ 0x21108d, 0x0 },
-	{ 0x1118d, 0x0 },
-	{ 0x11118d, 0x0 },
-	{ 0x21118d, 0x0 },
-	{ 0x1208d, 0x0 },
-	{ 0x11208d, 0x0 },
-	{ 0x21208d, 0x0 },
-	{ 0x1218d, 0x0 },
-	{ 0x11218d, 0x0 },
-	{ 0x21218d, 0x0 },
-	{ 0x1308d, 0x0 },
-	{ 0x11308d, 0x0 },
-	{ 0x21308d, 0x0 },
-	{ 0x1318d, 0x0 },
-	{ 0x11318d, 0x0 },
-	{ 0x21318d, 0x0 },
-	{ 0x100c0, 0x0 },
-	{ 0x1100c0, 0x0 },
-	{ 0x2100c0, 0x0 },
-	{ 0x101c0, 0x0 },
-	{ 0x1101c0, 0x0 },
-	{ 0x2101c0, 0x0 },
-	{ 0x102c0, 0x0 },
-	{ 0x1102c0, 0x0 },
-	{ 0x2102c0, 0x0 },
-	{ 0x103c0, 0x0 },
-	{ 0x1103c0, 0x0 },
-	{ 0x2103c0, 0x0 },
-	{ 0x104c0, 0x0 },
-	{ 0x1104c0, 0x0 },
-	{ 0x2104c0, 0x0 },
-	{ 0x105c0, 0x0 },
-	{ 0x1105c0, 0x0 },
-	{ 0x2105c0, 0x0 },
-	{ 0x106c0, 0x0 },
-	{ 0x1106c0, 0x0 },
-	{ 0x2106c0, 0x0 },
-	{ 0x107c0, 0x0 },
-	{ 0x1107c0, 0x0 },
-	{ 0x2107c0, 0x0 },
-	{ 0x108c0, 0x0 },
-	{ 0x1108c0, 0x0 },
-	{ 0x2108c0, 0x0 },
-	{ 0x110c0, 0x0 },
-	{ 0x1110c0, 0x0 },
-	{ 0x2110c0, 0x0 },
-	{ 0x111c0, 0x0 },
-	{ 0x1111c0, 0x0 },
-	{ 0x2111c0, 0x0 },
-	{ 0x112c0, 0x0 },
-	{ 0x1112c0, 0x0 },
-	{ 0x2112c0, 0x0 },
-	{ 0x113c0, 0x0 },
-	{ 0x1113c0, 0x0 },
-	{ 0x2113c0, 0x0 },
-	{ 0x114c0, 0x0 },
-	{ 0x1114c0, 0x0 },
-	{ 0x2114c0, 0x0 },
-	{ 0x115c0, 0x0 },
-	{ 0x1115c0, 0x0 },
-	{ 0x2115c0, 0x0 },
-	{ 0x116c0, 0x0 },
-	{ 0x1116c0, 0x0 },
-	{ 0x2116c0, 0x0 },
-	{ 0x117c0, 0x0 },
-	{ 0x1117c0, 0x0 },
-	{ 0x2117c0, 0x0 },
-	{ 0x118c0, 0x0 },
-	{ 0x1118c0, 0x0 },
-	{ 0x2118c0, 0x0 },
-	{ 0x120c0, 0x0 },
-	{ 0x1120c0, 0x0 },
-	{ 0x2120c0, 0x0 },
-	{ 0x121c0, 0x0 },
-	{ 0x1121c0, 0x0 },
-	{ 0x2121c0, 0x0 },
-	{ 0x122c0, 0x0 },
-	{ 0x1122c0, 0x0 },
-	{ 0x2122c0, 0x0 },
-	{ 0x123c0, 0x0 },
-	{ 0x1123c0, 0x0 },
-	{ 0x2123c0, 0x0 },
-	{ 0x124c0, 0x0 },
-	{ 0x1124c0, 0x0 },
-	{ 0x2124c0, 0x0 },
-	{ 0x125c0, 0x0 },
-	{ 0x1125c0, 0x0 },
-	{ 0x2125c0, 0x0 },
-	{ 0x126c0, 0x0 },
-	{ 0x1126c0, 0x0 },
-	{ 0x2126c0, 0x0 },
-	{ 0x127c0, 0x0 },
-	{ 0x1127c0, 0x0 },
-	{ 0x2127c0, 0x0 },
-	{ 0x128c0, 0x0 },
-	{ 0x1128c0, 0x0 },
-	{ 0x2128c0, 0x0 },
-	{ 0x130c0, 0x0 },
-	{ 0x1130c0, 0x0 },
-	{ 0x2130c0, 0x0 },
-	{ 0x131c0, 0x0 },
-	{ 0x1131c0, 0x0 },
-	{ 0x2131c0, 0x0 },
-	{ 0x132c0, 0x0 },
-	{ 0x1132c0, 0x0 },
-	{ 0x2132c0, 0x0 },
-	{ 0x133c0, 0x0 },
-	{ 0x1133c0, 0x0 },
-	{ 0x2133c0, 0x0 },
-	{ 0x134c0, 0x0 },
-	{ 0x1134c0, 0x0 },
-	{ 0x2134c0, 0x0 },
-	{ 0x135c0, 0x0 },
-	{ 0x1135c0, 0x0 },
-	{ 0x2135c0, 0x0 },
-	{ 0x136c0, 0x0 },
-	{ 0x1136c0, 0x0 },
-	{ 0x2136c0, 0x0 },
-	{ 0x137c0, 0x0 },
-	{ 0x1137c0, 0x0 },
-	{ 0x2137c0, 0x0 },
-	{ 0x138c0, 0x0 },
-	{ 0x1138c0, 0x0 },
-	{ 0x2138c0, 0x0 },
-	{ 0x100c1, 0x0 },
-	{ 0x1100c1, 0x0 },
-	{ 0x2100c1, 0x0 },
-	{ 0x101c1, 0x0 },
-	{ 0x1101c1, 0x0 },
-	{ 0x2101c1, 0x0 },
-	{ 0x102c1, 0x0 },
-	{ 0x1102c1, 0x0 },
-	{ 0x2102c1, 0x0 },
-	{ 0x103c1, 0x0 },
-	{ 0x1103c1, 0x0 },
-	{ 0x2103c1, 0x0 },
-	{ 0x104c1, 0x0 },
-	{ 0x1104c1, 0x0 },
-	{ 0x2104c1, 0x0 },
-	{ 0x105c1, 0x0 },
-	{ 0x1105c1, 0x0 },
-	{ 0x2105c1, 0x0 },
-	{ 0x106c1, 0x0 },
-	{ 0x1106c1, 0x0 },
-	{ 0x2106c1, 0x0 },
-	{ 0x107c1, 0x0 },
-	{ 0x1107c1, 0x0 },
-	{ 0x2107c1, 0x0 },
-	{ 0x108c1, 0x0 },
-	{ 0x1108c1, 0x0 },
-	{ 0x2108c1, 0x0 },
-	{ 0x110c1, 0x0 },
-	{ 0x1110c1, 0x0 },
-	{ 0x2110c1, 0x0 },
-	{ 0x111c1, 0x0 },
-	{ 0x1111c1, 0x0 },
-	{ 0x2111c1, 0x0 },
-	{ 0x112c1, 0x0 },
-	{ 0x1112c1, 0x0 },
-	{ 0x2112c1, 0x0 },
-	{ 0x113c1, 0x0 },
-	{ 0x1113c1, 0x0 },
-	{ 0x2113c1, 0x0 },
-	{ 0x114c1, 0x0 },
-	{ 0x1114c1, 0x0 },
-	{ 0x2114c1, 0x0 },
-	{ 0x115c1, 0x0 },
-	{ 0x1115c1, 0x0 },
-	{ 0x2115c1, 0x0 },
-	{ 0x116c1, 0x0 },
-	{ 0x1116c1, 0x0 },
-	{ 0x2116c1, 0x0 },
-	{ 0x117c1, 0x0 },
-	{ 0x1117c1, 0x0 },
-	{ 0x2117c1, 0x0 },
-	{ 0x118c1, 0x0 },
-	{ 0x1118c1, 0x0 },
-	{ 0x2118c1, 0x0 },
-	{ 0x120c1, 0x0 },
-	{ 0x1120c1, 0x0 },
-	{ 0x2120c1, 0x0 },
-	{ 0x121c1, 0x0 },
-	{ 0x1121c1, 0x0 },
-	{ 0x2121c1, 0x0 },
-	{ 0x122c1, 0x0 },
-	{ 0x1122c1, 0x0 },
-	{ 0x2122c1, 0x0 },
-	{ 0x123c1, 0x0 },
-	{ 0x1123c1, 0x0 },
-	{ 0x2123c1, 0x0 },
-	{ 0x124c1, 0x0 },
-	{ 0x1124c1, 0x0 },
-	{ 0x2124c1, 0x0 },
-	{ 0x125c1, 0x0 },
-	{ 0x1125c1, 0x0 },
-	{ 0x2125c1, 0x0 },
-	{ 0x126c1, 0x0 },
-	{ 0x1126c1, 0x0 },
-	{ 0x2126c1, 0x0 },
-	{ 0x127c1, 0x0 },
-	{ 0x1127c1, 0x0 },
-	{ 0x2127c1, 0x0 },
-	{ 0x128c1, 0x0 },
-	{ 0x1128c1, 0x0 },
-	{ 0x2128c1, 0x0 },
-	{ 0x130c1, 0x0 },
-	{ 0x1130c1, 0x0 },
-	{ 0x2130c1, 0x0 },
-	{ 0x131c1, 0x0 },
-	{ 0x1131c1, 0x0 },
-	{ 0x2131c1, 0x0 },
-	{ 0x132c1, 0x0 },
-	{ 0x1132c1, 0x0 },
-	{ 0x2132c1, 0x0 },
-	{ 0x133c1, 0x0 },
-	{ 0x1133c1, 0x0 },
-	{ 0x2133c1, 0x0 },
-	{ 0x134c1, 0x0 },
-	{ 0x1134c1, 0x0 },
-	{ 0x2134c1, 0x0 },
-	{ 0x135c1, 0x0 },
-	{ 0x1135c1, 0x0 },
-	{ 0x2135c1, 0x0 },
-	{ 0x136c1, 0x0 },
-	{ 0x1136c1, 0x0 },
-	{ 0x2136c1, 0x0 },
-	{ 0x137c1, 0x0 },
-	{ 0x1137c1, 0x0 },
-	{ 0x2137c1, 0x0 },
-	{ 0x138c1, 0x0 },
-	{ 0x1138c1, 0x0 },
-	{ 0x2138c1, 0x0 },
-	{ 0x10020, 0x0 },
-	{ 0x110020, 0x0 },
-	{ 0x210020, 0x0 },
-	{ 0x11020, 0x0 },
-	{ 0x111020, 0x0 },
-	{ 0x211020, 0x0 },
-	{ 0x12020, 0x0 },
-	{ 0x112020, 0x0 },
-	{ 0x212020, 0x0 },
-	{ 0x13020, 0x0 },
-	{ 0x113020, 0x0 },
-	{ 0x213020, 0x0 },
-	{ 0x20072, 0x0 },
-	{ 0x20073, 0x0 },
-	{ 0x20074, 0x0 },
-	{ 0x100aa, 0x0 },
-	{ 0x110aa, 0x0 },
-	{ 0x120aa, 0x0 },
-	{ 0x130aa, 0x0 },
-	{ 0x20010, 0x0 },
-	{ 0x120010, 0x0 },
-	{ 0x220010, 0x0 },
-	{ 0x20011, 0x0 },
-	{ 0x120011, 0x0 },
-	{ 0x220011, 0x0 },
-	{ 0x100ae, 0x0 },
-	{ 0x1100ae, 0x0 },
-	{ 0x2100ae, 0x0 },
-	{ 0x100af, 0x0 },
-	{ 0x1100af, 0x0 },
-	{ 0x2100af, 0x0 },
-	{ 0x110ae, 0x0 },
-	{ 0x1110ae, 0x0 },
-	{ 0x2110ae, 0x0 },
-	{ 0x110af, 0x0 },
-	{ 0x1110af, 0x0 },
-	{ 0x2110af, 0x0 },
-	{ 0x120ae, 0x0 },
-	{ 0x1120ae, 0x0 },
-	{ 0x2120ae, 0x0 },
-	{ 0x120af, 0x0 },
-	{ 0x1120af, 0x0 },
-	{ 0x2120af, 0x0 },
-	{ 0x130ae, 0x0 },
-	{ 0x1130ae, 0x0 },
-	{ 0x2130ae, 0x0 },
-	{ 0x130af, 0x0 },
-	{ 0x1130af, 0x0 },
-	{ 0x2130af, 0x0 },
-	{ 0x20020, 0x0 },
-	{ 0x120020, 0x0 },
-	{ 0x220020, 0x0 },
-	{ 0x100a0, 0x0 },
-	{ 0x100a1, 0x0 },
-	{ 0x100a2, 0x0 },
-	{ 0x100a3, 0x0 },
-	{ 0x100a4, 0x0 },
-	{ 0x100a5, 0x0 },
-	{ 0x100a6, 0x0 },
-	{ 0x100a7, 0x0 },
-	{ 0x110a0, 0x0 },
-	{ 0x110a1, 0x0 },
-	{ 0x110a2, 0x0 },
-	{ 0x110a3, 0x0 },
-	{ 0x110a4, 0x0 },
-	{ 0x110a5, 0x0 },
-	{ 0x110a6, 0x0 },
-	{ 0x110a7, 0x0 },
-	{ 0x120a0, 0x0 },
-	{ 0x120a1, 0x0 },
-	{ 0x120a2, 0x0 },
-	{ 0x120a3, 0x0 },
-	{ 0x120a4, 0x0 },
-	{ 0x120a5, 0x0 },
-	{ 0x120a6, 0x0 },
-	{ 0x120a7, 0x0 },
-	{ 0x130a0, 0x0 },
-	{ 0x130a1, 0x0 },
-	{ 0x130a2, 0x0 },
-	{ 0x130a3, 0x0 },
-	{ 0x130a4, 0x0 },
-	{ 0x130a5, 0x0 },
-	{ 0x130a6, 0x0 },
-	{ 0x130a7, 0x0 },
-	{ 0x2007c, 0x0 },
-	{ 0x12007c, 0x0 },
-	{ 0x22007c, 0x0 },
-	{ 0x2007d, 0x0 },
-	{ 0x12007d, 0x0 },
-	{ 0x22007d, 0x0 },
-	{ 0x400fd, 0x0 },
-	{ 0x400c0, 0x0 },
-	{ 0x90201, 0x0 },
-	{ 0x190201, 0x0 },
-	{ 0x290201, 0x0 },
-	{ 0x90202, 0x0 },
-	{ 0x190202, 0x0 },
-	{ 0x290202, 0x0 },
-	{ 0x90203, 0x0 },
-	{ 0x190203, 0x0 },
-	{ 0x290203, 0x0 },
-	{ 0x90204, 0x0 },
-	{ 0x190204, 0x0 },
-	{ 0x290204, 0x0 },
-	{ 0x90205, 0x0 },
-	{ 0x190205, 0x0 },
-	{ 0x290205, 0x0 },
-	{ 0x90206, 0x0 },
-	{ 0x190206, 0x0 },
-	{ 0x290206, 0x0 },
-	{ 0x90207, 0x0 },
-	{ 0x190207, 0x0 },
-	{ 0x290207, 0x0 },
-	{ 0x90208, 0x0 },
-	{ 0x190208, 0x0 },
-	{ 0x290208, 0x0 },
-	{ 0x10062, 0x0 },
-	{ 0x10162, 0x0 },
-	{ 0x10262, 0x0 },
-	{ 0x10362, 0x0 },
-	{ 0x10462, 0x0 },
-	{ 0x10562, 0x0 },
-	{ 0x10662, 0x0 },
-	{ 0x10762, 0x0 },
-	{ 0x10862, 0x0 },
-	{ 0x11062, 0x0 },
-	{ 0x11162, 0x0 },
-	{ 0x11262, 0x0 },
-	{ 0x11362, 0x0 },
-	{ 0x11462, 0x0 },
-	{ 0x11562, 0x0 },
-	{ 0x11662, 0x0 },
-	{ 0x11762, 0x0 },
-	{ 0x11862, 0x0 },
-	{ 0x12062, 0x0 },
-	{ 0x12162, 0x0 },
-	{ 0x12262, 0x0 },
-	{ 0x12362, 0x0 },
-	{ 0x12462, 0x0 },
-	{ 0x12562, 0x0 },
-	{ 0x12662, 0x0 },
-	{ 0x12762, 0x0 },
-	{ 0x12862, 0x0 },
-	{ 0x13062, 0x0 },
-	{ 0x13162, 0x0 },
-	{ 0x13262, 0x0 },
-	{ 0x13362, 0x0 },
-	{ 0x13462, 0x0 },
-	{ 0x13562, 0x0 },
-	{ 0x13662, 0x0 },
-	{ 0x13762, 0x0 },
-	{ 0x13862, 0x0 },
-	{ 0x20077, 0x0 },
-	{ 0x10001, 0x0 },
-	{ 0x11001, 0x0 },
-	{ 0x12001, 0x0 },
-	{ 0x13001, 0x0 },
-	{ 0x10040, 0x0 },
-	{ 0x10140, 0x0 },
-	{ 0x10240, 0x0 },
-	{ 0x10340, 0x0 },
-	{ 0x10440, 0x0 },
-	{ 0x10540, 0x0 },
-	{ 0x10640, 0x0 },
-	{ 0x10740, 0x0 },
-	{ 0x10840, 0x0 },
-	{ 0x10030, 0x0 },
-	{ 0x10130, 0x0 },
-	{ 0x10230, 0x0 },
-	{ 0x10330, 0x0 },
-	{ 0x10430, 0x0 },
-	{ 0x10530, 0x0 },
-	{ 0x10630, 0x0 },
-	{ 0x10730, 0x0 },
-	{ 0x10830, 0x0 },
-	{ 0x11040, 0x0 },
-	{ 0x11140, 0x0 },
-	{ 0x11240, 0x0 },
-	{ 0x11340, 0x0 },
-	{ 0x11440, 0x0 },
-	{ 0x11540, 0x0 },
-	{ 0x11640, 0x0 },
-	{ 0x11740, 0x0 },
-	{ 0x11840, 0x0 },
-	{ 0x11030, 0x0 },
-	{ 0x11130, 0x0 },
-	{ 0x11230, 0x0 },
-	{ 0x11330, 0x0 },
-	{ 0x11430, 0x0 },
-	{ 0x11530, 0x0 },
-	{ 0x11630, 0x0 },
-	{ 0x11730, 0x0 },
-	{ 0x11830, 0x0 },
-	{ 0x12040, 0x0 },
-	{ 0x12140, 0x0 },
-	{ 0x12240, 0x0 },
-	{ 0x12340, 0x0 },
-	{ 0x12440, 0x0 },
-	{ 0x12540, 0x0 },
-	{ 0x12640, 0x0 },
-	{ 0x12740, 0x0 },
-	{ 0x12840, 0x0 },
-	{ 0x12030, 0x0 },
-	{ 0x12130, 0x0 },
-	{ 0x12230, 0x0 },
-	{ 0x12330, 0x0 },
-	{ 0x12430, 0x0 },
-	{ 0x12530, 0x0 },
-	{ 0x12630, 0x0 },
-	{ 0x12730, 0x0 },
-	{ 0x12830, 0x0 },
-	{ 0x13040, 0x0 },
-	{ 0x13140, 0x0 },
-	{ 0x13240, 0x0 },
-	{ 0x13340, 0x0 },
-	{ 0x13440, 0x0 },
-	{ 0x13540, 0x0 },
-	{ 0x13640, 0x0 },
-	{ 0x13740, 0x0 },
-	{ 0x13840, 0x0 },
-	{ 0x13030, 0x0 },
-	{ 0x13130, 0x0 },
-	{ 0x13230, 0x0 },
-	{ 0x13330, 0x0 },
-	{ 0x13430, 0x0 },
-	{ 0x13530, 0x0 },
-	{ 0x13630, 0x0 },
-	{ 0x13730, 0x0 },
-	{ 0x13830, 0x0 },
-};
-/* P0 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54003, 0xc80 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x11 },
-	{ 0x54008, 0x131f },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x54012, 0x310 },
-	{ 0x54019, 0x2dd4 },
-	{ 0x5401a, 0x31 },
-	{ 0x5401b, 0x4a66 },
-	{ 0x5401c, 0x4a08 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x2dd4 },
-	{ 0x54020, 0x31 },
-	{ 0x54021, 0x4a66 },
-	{ 0x54022, 0x4a08 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x3 },
-	{ 0x54032, 0xd400 },
-	{ 0x54033, 0x312d },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x84a },
-	{ 0x54036, 0x4a },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0xd400 },
-	{ 0x54039, 0x312d },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x84a },
-	{ 0x5403c, 0x4a },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-
-/* P1 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp1_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54002, 0x101 },
-	{ 0x54003, 0x190 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x11 },
-	{ 0x54008, 0x121f },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x54012, 0x310 },
-	{ 0x54019, 0x84 },
-	{ 0x5401a, 0x31 },
-	{ 0x5401b, 0x4a66 },
-	{ 0x5401c, 0x4a08 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x84 },
-	{ 0x54020, 0x31 },
-	{ 0x54021, 0x4a66 },
-	{ 0x54022, 0x4a08 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x3 },
-	{ 0x54032, 0x8400 },
-	{ 0x54033, 0x3100 },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x84a },
-	{ 0x54036, 0x4a },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0x8400 },
-	{ 0x54039, 0x3100 },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x84a },
-	{ 0x5403c, 0x4a },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-
-/* P2 message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp2_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54002, 0x102 },
-	{ 0x54003, 0x64 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x11 },
-	{ 0x54008, 0x121f },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x54012, 0x310 },
-	{ 0x54019, 0x84 },
-	{ 0x5401a, 0x31 },
-	{ 0x5401b, 0x4a66 },
-	{ 0x5401c, 0x4a08 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x84 },
-	{ 0x54020, 0x31 },
-	{ 0x54021, 0x4a66 },
-	{ 0x54022, 0x4a08 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x3 },
-	{ 0x54032, 0x8400 },
-	{ 0x54033, 0x3100 },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x84a },
-	{ 0x54036, 0x4a },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0x8400 },
-	{ 0x54039, 0x3100 },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x84a },
-	{ 0x5403c, 0x4a },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-
-/* P0 2D message block paremeter for training firmware */
-struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x54003, 0xc80 },
-	{ 0x54004, 0x2 },
-	{ 0x54005, 0x2228 },
-	{ 0x54006, 0x11 },
-	{ 0x54008, 0x61 },
-	{ 0x54009, 0xc8 },
-	{ 0x5400b, 0x2 },
-	{ 0x5400d, 0x100 },
-	{ 0x5400f, 0x100 },
-	{ 0x54010, 0x1f7f },
-	{ 0x54012, 0x310 },
-	{ 0x54019, 0x2dd4 },
-	{ 0x5401a, 0x31 },
-	{ 0x5401b, 0x4a66 },
-	{ 0x5401c, 0x4a08 },
-	{ 0x5401e, 0x16 },
-	{ 0x5401f, 0x2dd4 },
-	{ 0x54020, 0x31 },
-	{ 0x54021, 0x4a66 },
-	{ 0x54022, 0x4a08 },
-	{ 0x54024, 0x16 },
-	{ 0x5402b, 0x1000 },
-	{ 0x5402c, 0x3 },
-	{ 0x54032, 0xd400 },
-	{ 0x54033, 0x312d },
-	{ 0x54034, 0x6600 },
-	{ 0x54035, 0x84a },
-	{ 0x54036, 0x4a },
-	{ 0x54037, 0x1600 },
-	{ 0x54038, 0xd400 },
-	{ 0x54039, 0x312d },
-	{ 0x5403a, 0x6600 },
-	{ 0x5403b, 0x84a },
-	{ 0x5403c, 0x4a },
-	{ 0x5403d, 0x1600 },
-	{ 0xd0000, 0x1 },
-};
-
-/* DRAM PHY init engine image */
-struct dram_cfg_param ddr_phy_pie[] = {
-	{ 0xd0000, 0x0 },
-	{ 0x90000, 0x10 },
-	{ 0x90001, 0x400 },
-	{ 0x90002, 0x10e },
-	{ 0x90003, 0x0 },
-	{ 0x90004, 0x0 },
-	{ 0x90005, 0x8 },
-	{ 0x90029, 0xb },
-	{ 0x9002a, 0x480 },
-	{ 0x9002b, 0x109 },
-	{ 0x9002c, 0x8 },
-	{ 0x9002d, 0x448 },
-	{ 0x9002e, 0x139 },
-	{ 0x9002f, 0x8 },
-	{ 0x90030, 0x478 },
-	{ 0x90031, 0x109 },
-	{ 0x90032, 0x0 },
-	{ 0x90033, 0xe8 },
-	{ 0x90034, 0x109 },
-	{ 0x90035, 0x2 },
-	{ 0x90036, 0x10 },
-	{ 0x90037, 0x139 },
-	{ 0x90038, 0xf },
-	{ 0x90039, 0x7c0 },
-	{ 0x9003a, 0x139 },
-	{ 0x9003b, 0x44 },
-	{ 0x9003c, 0x630 },
-	{ 0x9003d, 0x159 },
-	{ 0x9003e, 0x14f },
-	{ 0x9003f, 0x630 },
-	{ 0x90040, 0x159 },
-	{ 0x90041, 0x47 },
-	{ 0x90042, 0x630 },
-	{ 0x90043, 0x149 },
-	{ 0x90044, 0x4f },
-	{ 0x90045, 0x630 },
-	{ 0x90046, 0x179 },
-	{ 0x90047, 0x8 },
-	{ 0x90048, 0xe0 },
-	{ 0x90049, 0x109 },
-	{ 0x9004a, 0x0 },
-	{ 0x9004b, 0x7c8 },
-	{ 0x9004c, 0x109 },
-	{ 0x9004d, 0x0 },
-	{ 0x9004e, 0x1 },
-	{ 0x9004f, 0x8 },
-	{ 0x90050, 0x0 },
-	{ 0x90051, 0x45a },
-	{ 0x90052, 0x9 },
-	{ 0x90053, 0x0 },
-	{ 0x90054, 0x448 },
-	{ 0x90055, 0x109 },
-	{ 0x90056, 0x40 },
-	{ 0x90057, 0x630 },
-	{ 0x90058, 0x179 },
-	{ 0x90059, 0x1 },
-	{ 0x9005a, 0x618 },
-	{ 0x9005b, 0x109 },
-	{ 0x9005c, 0x40c0 },
-	{ 0x9005d, 0x630 },
-	{ 0x9005e, 0x149 },
-	{ 0x9005f, 0x8 },
-	{ 0x90060, 0x4 },
-	{ 0x90061, 0x48 },
-	{ 0x90062, 0x4040 },
-	{ 0x90063, 0x630 },
-	{ 0x90064, 0x149 },
-	{ 0x90065, 0x0 },
-	{ 0x90066, 0x4 },
-	{ 0x90067, 0x48 },
-	{ 0x90068, 0x40 },
-	{ 0x90069, 0x630 },
-	{ 0x9006a, 0x149 },
-	{ 0x9006b, 0x10 },
-	{ 0x9006c, 0x4 },
-	{ 0x9006d, 0x18 },
-	{ 0x9006e, 0x0 },
-	{ 0x9006f, 0x4 },
-	{ 0x90070, 0x78 },
-	{ 0x90071, 0x549 },
-	{ 0x90072, 0x630 },
-	{ 0x90073, 0x159 },
-	{ 0x90074, 0xd49 },
-	{ 0x90075, 0x630 },
-	{ 0x90076, 0x159 },
-	{ 0x90077, 0x94a },
-	{ 0x90078, 0x630 },
-	{ 0x90079, 0x159 },
-	{ 0x9007a, 0x441 },
-	{ 0x9007b, 0x630 },
-	{ 0x9007c, 0x149 },
-	{ 0x9007d, 0x42 },
-	{ 0x9007e, 0x630 },
-	{ 0x9007f, 0x149 },
-	{ 0x90080, 0x1 },
-	{ 0x90081, 0x630 },
-	{ 0x90082, 0x149 },
-	{ 0x90083, 0x0 },
-	{ 0x90084, 0xe0 },
-	{ 0x90085, 0x109 },
-	{ 0x90086, 0xa },
-	{ 0x90087, 0x10 },
-	{ 0x90088, 0x109 },
-	{ 0x90089, 0x9 },
-	{ 0x9008a, 0x3c0 },
-	{ 0x9008b, 0x149 },
-	{ 0x9008c, 0x9 },
-	{ 0x9008d, 0x3c0 },
-	{ 0x9008e, 0x159 },
-	{ 0x9008f, 0x18 },
-	{ 0x90090, 0x10 },
-	{ 0x90091, 0x109 },
-	{ 0x90092, 0x0 },
-	{ 0x90093, 0x3c0 },
-	{ 0x90094, 0x109 },
-	{ 0x90095, 0x18 },
-	{ 0x90096, 0x4 },
-	{ 0x90097, 0x48 },
-	{ 0x90098, 0x18 },
-	{ 0x90099, 0x4 },
-	{ 0x9009a, 0x58 },
-	{ 0x9009b, 0xa },
-	{ 0x9009c, 0x10 },
-	{ 0x9009d, 0x109 },
-	{ 0x9009e, 0x2 },
-	{ 0x9009f, 0x10 },
-	{ 0x900a0, 0x109 },
-	{ 0x900a1, 0x5 },
-	{ 0x900a2, 0x7c0 },
-	{ 0x900a3, 0x109 },
-	{ 0x900a4, 0x10 },
-	{ 0x900a5, 0x10 },
-	{ 0x900a6, 0x109 },
-	{ 0x40000, 0x811 },
-	{ 0x40020, 0x880 },
-	{ 0x40040, 0x0 },
-	{ 0x40060, 0x0 },
-	{ 0x40001, 0x4008 },
-	{ 0x40021, 0x83 },
-	{ 0x40041, 0x4f },
-	{ 0x40061, 0x0 },
-	{ 0x40002, 0x4040 },
-	{ 0x40022, 0x83 },
-	{ 0x40042, 0x51 },
-	{ 0x40062, 0x0 },
-	{ 0x40003, 0x811 },
-	{ 0x40023, 0x880 },
-	{ 0x40043, 0x0 },
-	{ 0x40063, 0x0 },
-	{ 0x40004, 0x720 },
-	{ 0x40024, 0xf },
-	{ 0x40044, 0x1740 },
-	{ 0x40064, 0x0 },
-	{ 0x40005, 0x16 },
-	{ 0x40025, 0x83 },
-	{ 0x40045, 0x4b },
-	{ 0x40065, 0x0 },
-	{ 0x40006, 0x716 },
-	{ 0x40026, 0xf },
-	{ 0x40046, 0x2001 },
-	{ 0x40066, 0x0 },
-	{ 0x40007, 0x716 },
-	{ 0x40027, 0xf },
-	{ 0x40047, 0x2800 },
-	{ 0x40067, 0x0 },
-	{ 0x40008, 0x716 },
-	{ 0x40028, 0xf },
-	{ 0x40048, 0xf00 },
-	{ 0x40068, 0x0 },
-	{ 0x40009, 0x720 },
-	{ 0x40029, 0xf },
-	{ 0x40049, 0x1400 },
-	{ 0x40069, 0x0 },
-	{ 0x4000a, 0xe08 },
-	{ 0x4002a, 0xc15 },
-	{ 0x4004a, 0x0 },
-	{ 0x4006a, 0x0 },
-	{ 0x4000b, 0x623 },
-	{ 0x4002b, 0x15 },
-	{ 0x4004b, 0x0 },
-	{ 0x4006b, 0x0 },
-	{ 0x4000c, 0x4028 },
-	{ 0x4002c, 0x80 },
-	{ 0x4004c, 0x0 },
-	{ 0x4006c, 0x0 },
-	{ 0x4000d, 0xe08 },
-	{ 0x4002d, 0xc1a },
-	{ 0x4004d, 0x0 },
-	{ 0x4006d, 0x0 },
-	{ 0x4000e, 0x623 },
-	{ 0x4002e, 0x1a },
-	{ 0x4004e, 0x0 },
-	{ 0x4006e, 0x0 },
-	{ 0x4000f, 0x4040 },
-	{ 0x4002f, 0x80 },
-	{ 0x4004f, 0x0 },
-	{ 0x4006f, 0x0 },
-	{ 0x40010, 0x2604 },
-	{ 0x40030, 0x15 },
-	{ 0x40050, 0x0 },
-	{ 0x40070, 0x0 },
-	{ 0x40011, 0x708 },
-	{ 0x40031, 0x5 },
-	{ 0x40051, 0x0 },
-	{ 0x40071, 0x2002 },
-	{ 0x40012, 0x8 },
-	{ 0x40032, 0x80 },
-	{ 0x40052, 0x0 },
-	{ 0x40072, 0x0 },
-	{ 0x40013, 0x2604 },
-	{ 0x40033, 0x1a },
-	{ 0x40053, 0x0 },
-	{ 0x40073, 0x0 },
-	{ 0x40014, 0x708 },
-	{ 0x40034, 0xa },
-	{ 0x40054, 0x0 },
-	{ 0x40074, 0x2002 },
-	{ 0x40015, 0x4040 },
-	{ 0x40035, 0x80 },
-	{ 0x40055, 0x0 },
-	{ 0x40075, 0x0 },
-	{ 0x40016, 0x60a },
-	{ 0x40036, 0x15 },
-	{ 0x40056, 0x1200 },
-	{ 0x40076, 0x0 },
-	{ 0x40017, 0x61a },
-	{ 0x40037, 0x15 },
-	{ 0x40057, 0x1300 },
-	{ 0x40077, 0x0 },
-	{ 0x40018, 0x60a },
-	{ 0x40038, 0x1a },
-	{ 0x40058, 0x1200 },
-	{ 0x40078, 0x0 },
-	{ 0x40019, 0x642 },
-	{ 0x40039, 0x1a },
-	{ 0x40059, 0x1300 },
-	{ 0x40079, 0x0 },
-	{ 0x4001a, 0x4808 },
-	{ 0x4003a, 0x880 },
-	{ 0x4005a, 0x0 },
-	{ 0x4007a, 0x0 },
-	{ 0x900a7, 0x0 },
-	{ 0x900a8, 0x790 },
-	{ 0x900a9, 0x11a },
-	{ 0x900aa, 0x8 },
-	{ 0x900ab, 0x7aa },
-	{ 0x900ac, 0x2a },
-	{ 0x900ad, 0x10 },
-	{ 0x900ae, 0x7b2 },
-	{ 0x900af, 0x2a },
-	{ 0x900b0, 0x0 },
-	{ 0x900b1, 0x7c8 },
-	{ 0x900b2, 0x109 },
-	{ 0x900b3, 0x10 },
-	{ 0x900b4, 0x2a8 },
-	{ 0x900b5, 0x129 },
-	{ 0x900b6, 0x8 },
-	{ 0x900b7, 0x370 },
-	{ 0x900b8, 0x129 },
-	{ 0x900b9, 0xa },
-	{ 0x900ba, 0x3c8 },
-	{ 0x900bb, 0x1a9 },
-	{ 0x900bc, 0xc },
-	{ 0x900bd, 0x408 },
-	{ 0x900be, 0x199 },
-	{ 0x900bf, 0x14 },
-	{ 0x900c0, 0x790 },
-	{ 0x900c1, 0x11a },
-	{ 0x900c2, 0x8 },
-	{ 0x900c3, 0x4 },
-	{ 0x900c4, 0x18 },
-	{ 0x900c5, 0xe },
-	{ 0x900c6, 0x408 },
-	{ 0x900c7, 0x199 },
-	{ 0x900c8, 0x8 },
-	{ 0x900c9, 0x8568 },
-	{ 0x900ca, 0x108 },
-	{ 0x900cb, 0x18 },
-	{ 0x900cc, 0x790 },
-	{ 0x900cd, 0x16a },
-	{ 0x900ce, 0x8 },
-	{ 0x900cf, 0x1d8 },
-	{ 0x900d0, 0x169 },
-	{ 0x900d1, 0x10 },
-	{ 0x900d2, 0x8558 },
-	{ 0x900d3, 0x168 },
-	{ 0x900d4, 0x70 },
-	{ 0x900d5, 0x788 },
-	{ 0x900d6, 0x16a },
-	{ 0x900d7, 0x1ff8 },
-	{ 0x900d8, 0x85a8 },
-	{ 0x900d9, 0x1e8 },
-	{ 0x900da, 0x50 },
-	{ 0x900db, 0x798 },
-	{ 0x900dc, 0x16a },
-	{ 0x900dd, 0x60 },
-	{ 0x900de, 0x7a0 },
-	{ 0x900df, 0x16a },
-	{ 0x900e0, 0x8 },
-	{ 0x900e1, 0x8310 },
-	{ 0x900e2, 0x168 },
-	{ 0x900e3, 0x8 },
-	{ 0x900e4, 0xa310 },
-	{ 0x900e5, 0x168 },
-	{ 0x900e6, 0xa },
-	{ 0x900e7, 0x408 },
-	{ 0x900e8, 0x169 },
-	{ 0x900e9, 0x6e },
-	{ 0x900ea, 0x0 },
-	{ 0x900eb, 0x68 },
-	{ 0x900ec, 0x0 },
-	{ 0x900ed, 0x408 },
-	{ 0x900ee, 0x169 },
-	{ 0x900ef, 0x0 },
-	{ 0x900f0, 0x8310 },
-	{ 0x900f1, 0x168 },
-	{ 0x900f2, 0x0 },
-	{ 0x900f3, 0xa310 },
-	{ 0x900f4, 0x168 },
-	{ 0x900f5, 0x1ff8 },
-	{ 0x900f6, 0x85a8 },
-	{ 0x900f7, 0x1e8 },
-	{ 0x900f8, 0x68 },
-	{ 0x900f9, 0x798 },
-	{ 0x900fa, 0x16a },
-	{ 0x900fb, 0x78 },
-	{ 0x900fc, 0x7a0 },
-	{ 0x900fd, 0x16a },
-	{ 0x900fe, 0x68 },
-	{ 0x900ff, 0x790 },
-	{ 0x90100, 0x16a },
-	{ 0x90101, 0x8 },
-	{ 0x90102, 0x8b10 },
-	{ 0x90103, 0x168 },
-	{ 0x90104, 0x8 },
-	{ 0x90105, 0xab10 },
-	{ 0x90106, 0x168 },
-	{ 0x90107, 0xa },
-	{ 0x90108, 0x408 },
-	{ 0x90109, 0x169 },
-	{ 0x9010a, 0x58 },
-	{ 0x9010b, 0x0 },
-	{ 0x9010c, 0x68 },
-	{ 0x9010d, 0x0 },
-	{ 0x9010e, 0x408 },
-	{ 0x9010f, 0x169 },
-	{ 0x90110, 0x0 },
-	{ 0x90111, 0x8b10 },
-	{ 0x90112, 0x168 },
-	{ 0x90113, 0x0 },
-	{ 0x90114, 0xab10 },
-	{ 0x90115, 0x168 },
-	{ 0x90116, 0x0 },
-	{ 0x90117, 0x1d8 },
-	{ 0x90118, 0x169 },
-	{ 0x90119, 0x80 },
-	{ 0x9011a, 0x790 },
-	{ 0x9011b, 0x16a },
-	{ 0x9011c, 0x18 },
-	{ 0x9011d, 0x7aa },
-	{ 0x9011e, 0x6a },
-	{ 0x9011f, 0xa },
-	{ 0x90120, 0x0 },
-	{ 0x90121, 0x1e9 },
-	{ 0x90122, 0x8 },
-	{ 0x90123, 0x8080 },
-	{ 0x90124, 0x108 },
-	{ 0x90125, 0xf },
-	{ 0x90126, 0x408 },
-	{ 0x90127, 0x169 },
-	{ 0x90128, 0xc },
-	{ 0x90129, 0x0 },
-	{ 0x9012a, 0x68 },
-	{ 0x9012b, 0x9 },
-	{ 0x9012c, 0x0 },
-	{ 0x9012d, 0x1a9 },
-	{ 0x9012e, 0x0 },
-	{ 0x9012f, 0x408 },
-	{ 0x90130, 0x169 },
-	{ 0x90131, 0x0 },
-	{ 0x90132, 0x8080 },
-	{ 0x90133, 0x108 },
-	{ 0x90134, 0x8 },
-	{ 0x90135, 0x7aa },
-	{ 0x90136, 0x6a },
-	{ 0x90137, 0x0 },
-	{ 0x90138, 0x8568 },
-	{ 0x90139, 0x108 },
-	{ 0x9013a, 0xb7 },
-	{ 0x9013b, 0x790 },
-	{ 0x9013c, 0x16a },
-	{ 0x9013d, 0x1f },
-	{ 0x9013e, 0x0 },
-	{ 0x9013f, 0x68 },
-	{ 0x90140, 0x8 },
-	{ 0x90141, 0x8558 },
-	{ 0x90142, 0x168 },
-	{ 0x90143, 0xf },
-	{ 0x90144, 0x408 },
-	{ 0x90145, 0x169 },
-	{ 0x90146, 0xc },
-	{ 0x90147, 0x0 },
-	{ 0x90148, 0x68 },
-	{ 0x90149, 0x0 },
-	{ 0x9014a, 0x408 },
-	{ 0x9014b, 0x169 },
-	{ 0x9014c, 0x0 },
-	{ 0x9014d, 0x8558 },
-	{ 0x9014e, 0x168 },
-	{ 0x9014f, 0x8 },
-	{ 0x90150, 0x3c8 },
-	{ 0x90151, 0x1a9 },
-	{ 0x90152, 0x3 },
-	{ 0x90153, 0x370 },
-	{ 0x90154, 0x129 },
-	{ 0x90155, 0x20 },
-	{ 0x90156, 0x2aa },
-	{ 0x90157, 0x9 },
-	{ 0x90158, 0x0 },
-	{ 0x90159, 0x400 },
-	{ 0x9015a, 0x10e },
-	{ 0x9015b, 0x8 },
-	{ 0x9015c, 0xe8 },
-	{ 0x9015d, 0x109 },
-	{ 0x9015e, 0x0 },
-	{ 0x9015f, 0x8140 },
-	{ 0x90160, 0x10c },
-	{ 0x90161, 0x10 },
-	{ 0x90162, 0x8138 },
-	{ 0x90163, 0x10c },
-	{ 0x90164, 0x8 },
-	{ 0x90165, 0x7c8 },
-	{ 0x90166, 0x101 },
-	{ 0x90167, 0x8 },
-	{ 0x90168, 0x0 },
-	{ 0x90169, 0x8 },
-	{ 0x9016a, 0x8 },
-	{ 0x9016b, 0x448 },
-	{ 0x9016c, 0x109 },
-	{ 0x9016d, 0xf },
-	{ 0x9016e, 0x7c0 },
-	{ 0x9016f, 0x109 },
-	{ 0x90170, 0x0 },
-	{ 0x90171, 0xe8 },
-	{ 0x90172, 0x109 },
-	{ 0x90173, 0x47 },
-	{ 0x90174, 0x630 },
-	{ 0x90175, 0x109 },
-	{ 0x90176, 0x8 },
-	{ 0x90177, 0x618 },
-	{ 0x90178, 0x109 },
-	{ 0x90179, 0x8 },
-	{ 0x9017a, 0xe0 },
-	{ 0x9017b, 0x109 },
-	{ 0x9017c, 0x0 },
-	{ 0x9017d, 0x7c8 },
-	{ 0x9017e, 0x109 },
-	{ 0x9017f, 0x8 },
-	{ 0x90180, 0x8140 },
-	{ 0x90181, 0x10c },
-	{ 0x90182, 0x0 },
-	{ 0x90183, 0x1 },
-	{ 0x90184, 0x8 },
-	{ 0x90185, 0x8 },
-	{ 0x90186, 0x4 },
-	{ 0x90187, 0x8 },
-	{ 0x90188, 0x8 },
-	{ 0x90189, 0x7c8 },
-	{ 0x9018a, 0x101 },
-	{ 0x90006, 0x0 },
-	{ 0x90007, 0x0 },
-	{ 0x90008, 0x8 },
-	{ 0x90009, 0x0 },
-	{ 0x9000a, 0x0 },
-	{ 0x9000b, 0x0 },
-	{ 0xd00e7, 0x400 },
-	{ 0x90017, 0x0 },
-	{ 0x9001f, 0x2a },
-	{ 0x90026, 0x6a },
-	{ 0x400d0, 0x0 },
-	{ 0x400d1, 0x101 },
-	{ 0x400d2, 0x105 },
-	{ 0x400d3, 0x107 },
-	{ 0x400d4, 0x10f },
-	{ 0x400d5, 0x202 },
-	{ 0x400d6, 0x20a },
-	{ 0x400d7, 0x20b },
-	{ 0x2003a, 0x2 },
-	{ 0x2000b, 0x64 },
-	{ 0x2000c, 0xc8 },
-	{ 0x2000d, 0x7d0 },
-	{ 0x2000e, 0x2c },
-	{ 0x12000b, 0xc },
-	{ 0x12000c, 0x19 },
-	{ 0x12000d, 0xfa },
-	{ 0x12000e, 0x10 },
-	{ 0x22000b, 0x3 },
-	{ 0x22000c, 0x6 },
-	{ 0x22000d, 0x3e },
-	{ 0x22000e, 0x10 },
-	{ 0x9000c, 0x0 },
-	{ 0x9000d, 0x173 },
-	{ 0x9000e, 0x60 },
-	{ 0x9000f, 0x6110 },
-	{ 0x90010, 0x2152 },
-	{ 0x90011, 0xdfbd },
-	{ 0x90012, 0x60 },
-	{ 0x90013, 0x6152 },
-	{ 0x20010, 0x5a },
-	{ 0x20011, 0x3 },
-	{ 0x120010, 0x5a },
-	{ 0x120011, 0x3 },
-	{ 0x220010, 0x5a },
-	{ 0x220011, 0x3 },
-	{ 0x40080, 0xe0 },
-	{ 0x40081, 0x12 },
-	{ 0x40082, 0xe0 },
-	{ 0x40083, 0x12 },
-	{ 0x40084, 0xe0 },
-	{ 0x40085, 0x12 },
-	{ 0x140080, 0xe0 },
-	{ 0x140081, 0x12 },
-	{ 0x140082, 0xe0 },
-	{ 0x140083, 0x12 },
-	{ 0x140084, 0xe0 },
-	{ 0x140085, 0x12 },
-	{ 0x240080, 0xe0 },
-	{ 0x240081, 0x12 },
-	{ 0x240082, 0xe0 },
-	{ 0x240083, 0x12 },
-	{ 0x240084, 0xe0 },
-	{ 0x240085, 0x12 },
-	{ 0x400fd, 0xf },
-	{ 0x10011, 0x1 },
-	{ 0x10012, 0x1 },
-	{ 0x10013, 0x180 },
-	{ 0x10018, 0x1 },
-	{ 0x10002, 0x6209 },
-	{ 0x100b2, 0x1 },
-	{ 0x101b4, 0x1 },
-	{ 0x102b4, 0x1 },
-	{ 0x103b4, 0x1 },
-	{ 0x104b4, 0x1 },
-	{ 0x105b4, 0x1 },
-	{ 0x106b4, 0x1 },
-	{ 0x107b4, 0x1 },
-	{ 0x108b4, 0x1 },
-	{ 0x11011, 0x1 },
-	{ 0x11012, 0x1 },
-	{ 0x11013, 0x180 },
-	{ 0x11018, 0x1 },
-	{ 0x11002, 0x6209 },
-	{ 0x110b2, 0x1 },
-	{ 0x111b4, 0x1 },
-	{ 0x112b4, 0x1 },
-	{ 0x113b4, 0x1 },
-	{ 0x114b4, 0x1 },
-	{ 0x115b4, 0x1 },
-	{ 0x116b4, 0x1 },
-	{ 0x117b4, 0x1 },
-	{ 0x118b4, 0x1 },
-	{ 0x12011, 0x1 },
-	{ 0x12012, 0x1 },
-	{ 0x12013, 0x180 },
-	{ 0x12018, 0x1 },
-	{ 0x12002, 0x6209 },
-	{ 0x120b2, 0x1 },
-	{ 0x121b4, 0x1 },
-	{ 0x122b4, 0x1 },
-	{ 0x123b4, 0x1 },
-	{ 0x124b4, 0x1 },
-	{ 0x125b4, 0x1 },
-	{ 0x126b4, 0x1 },
-	{ 0x127b4, 0x1 },
-	{ 0x128b4, 0x1 },
-	{ 0x13011, 0x1 },
-	{ 0x13012, 0x1 },
-	{ 0x13013, 0x180 },
-	{ 0x13018, 0x1 },
-	{ 0x13002, 0x6209 },
-	{ 0x130b2, 0x1 },
-	{ 0x131b4, 0x1 },
-	{ 0x132b4, 0x1 },
-	{ 0x133b4, 0x1 },
-	{ 0x134b4, 0x1 },
-	{ 0x135b4, 0x1 },
-	{ 0x136b4, 0x1 },
-	{ 0x137b4, 0x1 },
-	{ 0x138b4, 0x1 },
-	{ 0x2003a, 0x2 },
-	{ 0xc0080, 0x2 },
-	{ 0xd0000, 0x1 }
-};
-
-struct dram_fsp_msg ddr_dram_fsp_msg[] = {
-	{
-		/* P0 3200mts 1D */
-		.drate = 3200,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp0_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_cfg),
-	},
-	{
-		/* P1 400mts 1D */
-		.drate = 400,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp1_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp1_cfg),
-	},
-	{
-		/* P2 100mts 1D */
-		.drate = 100,
-		.fw_type = FW_1D_IMAGE,
-		.fsp_cfg = ddr_fsp2_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp2_cfg),
-	},
-	{
-		/* P0 3200mts 2D */
-		.drate = 3200,
-		.fw_type = FW_2D_IMAGE,
-		.fsp_cfg = ddr_fsp0_2d_cfg,
-		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_2d_cfg),
-	},
-};
-
-/* ddr timing config params */
-struct dram_timing_info dram_timing = {
-	.ddrc_cfg = ddr_ddrc_cfg,
-	.ddrc_cfg_num = ARRAY_SIZE(ddr_ddrc_cfg),
-	.ddrphy_cfg = ddr_ddrphy_cfg,
-	.ddrphy_cfg_num = ARRAY_SIZE(ddr_ddrphy_cfg),
-	.fsp_msg = ddr_dram_fsp_msg,
-	.fsp_msg_num = ARRAY_SIZE(ddr_dram_fsp_msg),
-	.ddrphy_trained_csr = ddr_ddrphy_trained_csr,
-	.ddrphy_trained_csr_num = ARRAY_SIZE(ddr_ddrphy_trained_csr),
-	.ddrphy_pie = ddr_phy_pie,
-	.ddrphy_pie_num = ARRAY_SIZE(ddr_phy_pie),
-	.fsp_table = { 3200, 400, 100, },
-};
-
diff --git a/board/freescale/imx8mq_a300/ddr/lpddr4_timing_b0.c b/board/freescale/imx8mq_a300/ddr/lpddr4_timing_b0.c
deleted file mode 120000
index 993da51239..0000000000
--- a/board/freescale/imx8mq_a300/ddr/lpddr4_timing_b0.c
+++ /dev/null
@@ -1 +0,0 @@
-../../imx8mq_evk/lpddr4_timing_b0.c
\ No newline at end of file
diff --git a/board/freescale/imx8mq_a300/imx8mq_a300.c b/board/freescale/imx8mq_a300/imx8mq_a300.c
deleted file mode 100644
index 6d689cf491..0000000000
--- a/board/freescale/imx8mq_a300/imx8mq_a300.c
+++ /dev/null
@@ -1,589 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0+
-/*
- * Copyright 2018 NXP
- */
-
-#include <common.h>
-#include <env.h>
-#include <init.h>
-#include <malloc.h>
-#include <errno.h>
-#include <asm/global_data.h>
-#include <asm/io.h>
-#include <miiphy.h>
-#include <netdev.h>
-#include <asm/mach-imx/iomux-v3.h>
-#include <asm-generic/gpio.h>
-#include <fsl_esdhc_imx.h>
-#include <mmc.h>
-#include <asm/arch/imx8mq_pins.h>
-#include <asm/arch/sys_proto.h>
-#include <asm/mach-imx/gpio.h>
-#include <asm/mach-imx/mxc_i2c.h>
-#include <asm/arch/clock.h>
-#include <spl.h>
-#include <linux/bitops.h>
-#include <power/pmic.h>
-#include <power/pfuze100_pmic.h>
-#include "../common/tcpc.h"
-#include "../common/pfuze.h"
-#include <usb.h>
-#include <dwc3-uboot.h>
-#include <persist_idt.h>
-#include <fb_fsl.h>
-#include <dt_table.h>
-#include <video_fb.h>
-#include <idt_ddr_select.h>
-
-DECLARE_GLOBAL_DATA_PTR;
-
-#define UART_PAD_CTRL	(PAD_CTL_DSE6 | PAD_CTL_FSEL1)
-
-#define WDOG_PAD_CTRL	(PAD_CTL_DSE6 | PAD_CTL_HYS | PAD_CTL_PUE)
-
-static iomux_v3_cfg_t const wdog_pads[] = {
-	IMX8MQ_PAD_GPIO1_IO02__WDOG1_WDOG_B | MUX_PAD_CTRL(WDOG_PAD_CTRL),
-};
-
-static iomux_v3_cfg_t const uart_pads[] = {
-	IMX8MQ_PAD_UART1_RXD__UART1_RX | MUX_PAD_CTRL(UART_PAD_CTRL),
-	IMX8MQ_PAD_UART1_TXD__UART1_TX | MUX_PAD_CTRL(UART_PAD_CTRL),
-};
-
-int board_early_init_f(void)
-{
-	struct wdog_regs *wdog = (struct wdog_regs *)WDOG1_BASE_ADDR;
-
-	imx_iomux_v3_setup_multiple_pads(wdog_pads, ARRAY_SIZE(wdog_pads));
-	set_wdog_reset(wdog);
-
-	imx_iomux_v3_setup_multiple_pads(uart_pads, ARRAY_SIZE(uart_pads));
-
-	return 0;
-}
-
-#ifdef CONFIG_FSL_QSPI
-int board_qspi_init(void)
-{
-	set_clk_qspi();
-
-	return 0;
-}
-#endif
-
-#ifdef CONFIG_FEC_MXC
-static int setup_fec(void)
-{
-	struct iomuxc_gpr_base_regs *gpr =
-		(struct iomuxc_gpr_base_regs *)IOMUXC_GPR_BASE_ADDR;
-
-	/* Use 125M anatop REF_CLK1 for ENET1, not from external */
-	clrsetbits_le32(&gpr->gpr[1],
-		IOMUXC_GPR_GPR1_GPR_ENET1_TX_CLK_SEL_MASK, 0);
-	return set_clk_enet(ENET_125MHZ);
-}
-
-int board_phy_config(struct phy_device *phydev)
-{
-	if (phydev->drv->config)
-		phydev->drv->config(phydev);
-
-#ifndef CONFIG_DM_ETH
-	/* enable rgmii rxc skew and phy mode select to RGMII copper */
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x1f);
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, 0x8);
-
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x05);
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, 0x100);
-#endif
-
-	return 0;
-}
-#endif
-
-#ifdef CONFIG_USB_DWC3
-
-#define USB_PHY_CTRL0			0xF0040
-#define USB_PHY_CTRL0_REF_SSP_EN	BIT(2)
-
-#define USB_PHY_CTRL1			0xF0044
-#define USB_PHY_CTRL1_RESET		BIT(0)
-#define USB_PHY_CTRL1_COMMONONN		BIT(1)
-#define USB_PHY_CTRL1_ATERESET		BIT(3)
-#define USB_PHY_CTRL1_VDATSRCENB0	BIT(19)
-#define USB_PHY_CTRL1_VDATDETENB0	BIT(20)
-
-#define USB_PHY_CTRL2			0xF0048
-#define USB_PHY_CTRL2_TXENABLEN0	BIT(8)
-
-static struct dwc3_device dwc3_device_data = {
-#ifdef CONFIG_SPL_BUILD
-	.maximum_speed = USB_SPEED_HIGH,
-#else
-	.maximum_speed = USB_SPEED_SUPER,
-#endif
-	.base = USB1_BASE_ADDR,
-	.dr_mode = USB_DR_MODE_PERIPHERAL,
-	.index = 0,
-	.power_down_scale = 2,
-};
-
-int usb_gadget_handle_interrupts(int index)
-{
-	dwc3_uboot_handle_interrupt(index);
-	return 0;
-}
-
-static void dwc3_nxp_usb_phy_init(struct dwc3_device *dwc3)
-{
-	u32 RegData;
-
-	RegData = readl(dwc3->base + USB_PHY_CTRL1);
-	RegData &= ~(USB_PHY_CTRL1_VDATSRCENB0 | USB_PHY_CTRL1_VDATDETENB0 |
-			USB_PHY_CTRL1_COMMONONN);
-	RegData |= USB_PHY_CTRL1_RESET | USB_PHY_CTRL1_ATERESET;
-	writel(RegData, dwc3->base + USB_PHY_CTRL1);
-
-	RegData = readl(dwc3->base + USB_PHY_CTRL0);
-	RegData |= USB_PHY_CTRL0_REF_SSP_EN;
-	writel(RegData, dwc3->base + USB_PHY_CTRL0);
-
-	RegData = readl(dwc3->base + USB_PHY_CTRL2);
-	RegData |= USB_PHY_CTRL2_TXENABLEN0;
-	writel(RegData, dwc3->base + USB_PHY_CTRL2);
-
-	RegData = readl(dwc3->base + USB_PHY_CTRL1);
-	RegData &= ~(USB_PHY_CTRL1_RESET | USB_PHY_CTRL1_ATERESET);
-	writel(RegData, dwc3->base + USB_PHY_CTRL1);
-}
-#endif
-
-#ifdef CONFIG_USB_TCPC
-struct tcpc_port port;
-struct tcpc_port_config port_config = {
-	.i2c_bus = 0,
-	.addr = 0x50,
-	.port_type = TYPEC_PORT_UFP,
-	.max_snk_mv = 20000,
-	.max_snk_ma = 3000,
-	.max_snk_mw = 15000,
-	.op_snk_mv = 9000,
-};
-
-struct gpio_desc type_sel_desc;
-static iomux_v3_cfg_t ss_mux_gpio[] = {
-	IMX8MQ_PAD_NAND_RE_B__GPIO3_IO15 | MUX_PAD_CTRL(NO_PAD_CTRL),
-};
-
-void ss_mux_select(enum typec_cc_polarity pol)
-{
-	if (pol == TYPEC_POLARITY_CC1)
-		dm_gpio_set_value(&type_sel_desc, 1);
-	else
-		dm_gpio_set_value(&type_sel_desc, 0);
-}
-
-static int setup_typec(void)
-{
-	int ret;
-
-	imx_iomux_v3_setup_multiple_pads(ss_mux_gpio, ARRAY_SIZE(ss_mux_gpio));
-
-	ret = dm_gpio_lookup_name("GPIO3_15", &type_sel_desc);
-	if (ret) {
-		printf("%s lookup GPIO3_15 failed ret = %d
", __func__, ret);
-		return -ENODEV;
-	}
-
-	ret = dm_gpio_request(&type_sel_desc, "typec_sel");
-	if (ret) {
-		printf("%s request typec_sel failed ret = %d
", __func__, ret);
-		return -ENODEV;
-	}
-
-	dm_gpio_set_dir_flags(&type_sel_desc, GPIOD_IS_OUT);
-
-	ret = tcpc_init(&port, port_config, &ss_mux_select);
-	if (ret) {
-		printf("%s: tcpc init failed, err=%d
",
-		       __func__, ret);
-	}
-
-	return ret;
-}
-#endif
-
-#if defined(CONFIG_USB_DWC3) || defined(CONFIG_USB_XHCI_IMX8M)
-int board_usb_init(int index, enum usb_init_type init)
-{
-	int ret = 0;
-
-	if (index == 0 && init == USB_INIT_DEVICE) {
-		imx8m_usb_power(index, true);
-#ifdef CONFIG_USB_TCPC
-		ret = tcpc_setup_ufp_mode(&port);
-#endif
-		dwc3_nxp_usb_phy_init(&dwc3_device_data);
-		return dwc3_uboot_init(&dwc3_device_data);
-	} else if (index == 0 && init == USB_INIT_HOST) {
-#ifdef CONFIG_USB_TCPC
-		ret = tcpc_setup_dfp_mode(&port);
-#endif
-		return ret;
-	}
-
-	return 0;
-}
-
-int board_usb_cleanup(int index, enum usb_init_type init)
-{
-	int ret = 0;
-	if (index == 0 && init == USB_INIT_DEVICE) {
-		dwc3_uboot_exit(index);
-		imx8m_usb_power(index, false);
-	} else if (index == 0 && init == USB_INIT_HOST) {
-#ifdef CONFIG_USB_TCPC
-		ret = tcpc_disable_src_vbus(&port);
-#endif
-	}
-
-	return ret;
-}
-#endif
-
-static struct display_info_t mipi_displays[] = {{
-	.bus	= 0, /* Unused */
-	.addr	= 0, /* Unused */
-	.pixfmt	= GDF_32BIT_X888RGB,
-	.detect	= NULL,
-	.enable	= NULL,
-	.mode	= {
-		.name           = "PANEL", /* 720P60 */
-		.refresh        = 60,
-		.xres           = 1280,
-		.yres           = 720,
-		.pixclock       = 13468, /* 74250  kHz */
-		.left_margin    = 110,
-		.right_margin   = 220,
-		.upper_margin   = 5,
-		.lower_margin   = 20,
-		.hsync_len      = 40,
-		.vsync_len      = 5,
-		.sync           = FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
-		.vmode          = FB_VMODE_NONINTERLACED
-	}
-},};
-
-#define GET_BYTE(x, n)  ((x & (0xff << 8 * n)) >> 8 * n)
-#define FDT_ID_SIZE	128
-#define DTBO_ENTRIES	4
-#define SLOT_A_P_OFFSET	(2048 + 9)
-#define SLOT_B_P_OFFSET	(2048 + 13)
-#define PANEL_PATH "/mipi_dsi_bridge@30A00000/panel@0/display-timings/timing"
-static const char *dtbo_slot[2] = {"dtbo_a", "dtbo_b"};
-int entry_idx;
-
-int get_dtbo_mipi_dsi_timing(void)
-{
-	struct dt_table_header *dt_table;
-	struct dt_table_entry *dt_entry;
-	struct fastboot_ptentry *fpt_en_dtbo;
-	struct fastboot_ptentry *fpt_en_misc;
-	struct blk_desc *dev_desc;
-	const struct fdt_property *fdt_prop;
-	const u32 *value;
-	unsigned char *dt_img;
-	unsigned char *misc_img;
-	char *fdt_blob;
-	char *fdt_id;
-	void *blob;
-	AvbIOResult readret;
-	size_t num_bytes;
-	size_t dtbo_size;
-	size_t misc_size;
-	u32 dtbo_id;
-	u32 fdt_size;
-	u32 pinfo;
-	int len;
-	int slot;
-	int nodeoff;
-	int fdt_count;
-	int fdt_idx = 1;
-	char entry_num[DTBO_ENTRIES] = "";
-
-	fpt_en_misc = fastboot_flash_find_ptn("misc");
-	if (fpt_en_misc > 0) {
-		fdt_id = malloc(sizeof(char) * FDT_ID_SIZE);
-		if (fdt_id == NULL) {
-			puts("fdt_id init fail
");
-			return -1;
-		}
-		if (get_dtb_id(fdt_id, FDT_ID_SIZE)) {
-			printf("Board ID: %s
", fdt_id);
-			env_set("idt,prod-id", fdt_id);
-		} else {
-			puts("Get ID from Board info partition fail
");
-			free(fdt_id);
-			return -1;
-		}
-		dev_desc = blk_get_dev("mmc", mmc_get_env_dev());
-		misc_size = (dev_desc->blksz)*(fpt_en_misc->length);
-		misc_img = malloc(misc_size);
-		if (misc_img == NULL) {
-			puts("dt_img init fail
");
-			free(fdt_id);
-			return -1;
-		}
-		readret = fsl_read_from_partition_multi(NULL,
-							"misc",
-							0,
-							misc_size,
-							misc_img,
-							&num_bytes);
-		if (readret) {
-			printf("fsl_read_from_partition_multi read"
-			       " misc fail, return: %d
", readret);
-			free(fdt_id);
-			free(misc_img);
-			return -1;
-		}
-		slot = (misc_img[SLOT_A_P_OFFSET] >
-			misc_img[SLOT_B_P_OFFSET]) ? 1 : 0;
-		free(misc_img);
-
-		fpt_en_dtbo = fastboot_flash_find_ptn(dtbo_slot[slot]);
-		if (fpt_en_dtbo <= 0) {
-			puts("Get dtbo partition fail
");
-			free(fdt_id);
-			return -1;
-		}
-		dtbo_size = (dev_desc->blksz)*(fpt_en_dtbo->length);
-		dt_img = malloc(dtbo_size);
-		if (dt_img == NULL) {
-			puts("dt_img init fail
");
-			free(fdt_id);
-			return -1;
-		}
-
-		readret = fsl_read_from_partition_multi(NULL,
-							dtbo_slot[slot],
-							0,
-							dtbo_size,
-							dt_img,
-							&num_bytes);
-		if (readret) {
-			printf("fsl_read_from_partition_multi read %s"
-			       " fail, return: %d
", dtbo_slot[slot],
-			       readret);
-			free(fdt_id);
-			free(dt_img);
-			return -1;
-		}
-		dt_table = (struct dt_table_header *)dt_img;
-		fdt_count = fdt32_to_cpu(dt_table->dt_entry_count);
-		printf("
Read %s...	%d dtbs in %s
",
-		       dtbo_slot[slot], fdt_count, dtbo_slot[slot]);
-		while (fdt_idx < (fdt_count + 1)) {
-			dt_entry = (struct dt_table_entry *)
-				   ((ulong)dt_img +
-				    (fdt32_to_cpu(dt_table->
-						  dt_entries_offset) *
-				     fdt_idx));
-			fdt_size = fdt32_to_cpu(dt_entry->dt_size);
-			dtbo_id = fdt32_to_cpu(dt_entry->id);
-			printf("DTBO ID: %lx (", (ulong)dtbo_id);
-			for (len = 3; len >= 0; len--) {
-				if ((GET_BYTE(dtbo_id, len) > 31) &&
-				    (GET_BYTE(dtbo_id, len) < 127))
-					printf("%c",
-					       GET_BYTE(dtbo_id, len));
-			}
-			printf(")	 size (%d)
", fdt_size);
-			fdt_blob = (void *)(ulong)dt_img +
-				   fdt32_to_cpu(dt_entry->dt_offset);
-			if (fdt_check_header(fdt_blob) != 0) {
-				puts("image is not a fdt
");
-				fdt_idx = fdt_count + 1;
-				break;
-			}
-
-			if (fdt_totalsize(fdt_blob) != fdt_size) {
-				printf("fdt size != image size (%d)
",
-				       fdt_size);
-				fdt_idx = fdt_count + 1;
-				break;
-			}
-
-			nodeoff = fdt_path_offset(fdt_blob, "/");
-			fdt_prop = fdt_get_property(fdt_blob,
-						    nodeoff,
-						    "compatible",
-						    &len);
-			if (len >= 0)
-				printf("FDT compatible: %s
",
-				       fdt_prop->data);
-
-			fdt_prop = fdt_get_property(fdt_blob,
-						    nodeoff,
-						    "idt,prod-id",
-						    &len);
-			if (len >= 0) {
-				printf("FDT idt,prod-id: %s
",
-				       fdt_prop->data);
-
-				if (!strncmp(fdt_id, fdt_prop->data,
-					     strlen(fdt_prop->data))) {
-					printf("## Selected Flattened"
-					       " Device Tree: %s
",
-					       fdt_prop->data);
-					break;
-				}
-			}
-
-			fdt_idx++;
-		}
-		if (fdt_idx > fdt_count) {
-			printf("Can't find ID in %s
", dtbo_slot[slot]);
-			fdt_idx = 1;
-			free(dt_img);
-			free(fdt_id);
-			return -1;
-		}
-
-		sprintf(entry_num, "%d", fdt_idx);
-		env_set("entry_idx", entry_num);
-		dt_entry = (struct dt_table_entry *)
-			   ((ulong)dt_img +
-			    (fdt32_to_cpu(dt_table->dt_entries_offset) *
-			     fdt_idx));
-
-		blob = (void *)(ulong)dt_img +
-		       fdt32_to_cpu(dt_entry->dt_offset);
-
-		nodeoff = fdt_path_offset(blob, PANEL_PATH);
-		if (nodeoff < 0 ||
-		    !fdtdec_get_is_enabled(blob, nodeoff)) {
-			printf("%s get fail
", PANEL_PATH);
-			free(dt_img);
-			free(fdt_id);
-			return -1;
-		}
-
-		value = fdt_getprop(blob, nodeoff,
-				    "clock-frequency", &len);
-		pinfo = fdt32_to_cpu(*value);
-		mipi_displays[0].mode.pixclock = pinfo;
-		printf("clock-frequency: %d
", mipi_displays[0].mode.pixclock);
-		value = fdt_getprop(blob, nodeoff, "hactive", &len);
-		pinfo = fdt32_to_cpu(*value);
-		mipi_displays[0].mode.xres = pinfo;
-		printf("hactive: %d
", mipi_displays[0].mode.xres);
-		value = fdt_getprop(blob, nodeoff, "vactive", &len);
-		pinfo = fdt32_to_cpu(*value);
-		mipi_displays[0].mode.yres = pinfo;
-		printf("vactive: %d
", mipi_displays[0].mode.yres);
-		value = fdt_getprop(blob, nodeoff,
-				    "hback-porch", &len);
-		pinfo = fdt32_to_cpu(*value);
-		mipi_displays[0].mode.left_margin = pinfo;
-		printf("hfront-porch: %d
",
-		       mipi_displays[0].mode.left_margin);
-		value = fdt_getprop(blob, nodeoff,
-				    "hfront-porch", &len);
-		pinfo = fdt32_to_cpu(*value);
-		mipi_displays[0].mode.right_margin = pinfo;
-		printf("hback-porch: %d
",
-		       mipi_displays[0].mode.right_margin);
-		value = fdt_getprop(blob, nodeoff,
-				    "hsync-len", &len);
-		pinfo = fdt32_to_cpu(*value);
-		mipi_displays[0].mode.hsync_len = pinfo;
-		printf("hsync-len: %d
",
-		       mipi_displays[0].mode.hsync_len);
-		value = fdt_getprop(blob, nodeoff,
-				    "vfront-porch", &len);
-		pinfo = fdt32_to_cpu(*value);
-		mipi_displays[0].mode.upper_margin = pinfo;
-		printf("vfront-porch: %d
",
-		       mipi_displays[0].mode.upper_margin);
-		value = fdt_getprop(blob, nodeoff,
-				    "vback-porch", &len);
-		pinfo = fdt32_to_cpu(*value);
-		mipi_displays[0].mode.lower_margin = pinfo;
-		printf("vback-porch: %d
",
-		       mipi_displays[0].mode.lower_margin);
-		value = fdt_getprop(blob, nodeoff,
-				    "vsync-len", &len);
-		pinfo = fdt32_to_cpu(*value);
-		mipi_displays[0].mode.vsync_len = pinfo;
-		printf("vsync-len: %d
",
-		       mipi_displays[0].mode.vsync_len);
-		printf("Parse %s panel timing finish

",
-		       dtbo_slot[slot]);
-		free(dt_img);
-		free(fdt_id);
-
-		if (slot == 0)
-			env_set("dtbo_slot", "a");
-
-		if (slot == 1)
-			env_set("dtbo_slot", "b");
-
-	} else {
-		printf("fastboot_flash_find_ptn misc fail: %lu

",
-		       (long unsigned int) fpt_en_misc);
-	}
-
-	return fdt_idx;
-}
-
-int board_init(void)
-{
-#ifdef CONFIG_FSL_QSPI
-	board_qspi_init();
-#endif
-
-#ifdef CONFIG_FEC_MXC
-	setup_fec();
-#endif
-
-#if defined(CONFIG_USB_DWC3) || defined(CONFIG_USB_XHCI_IMX8M)
-	init_usb_clk();
-#endif
-
-#ifdef CONFIG_USB_TCPC
-	setup_typec();
-#endif
-	return 0;
-}
-
-int board_late_init(void)
-{
-#ifdef CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
-	env_set("board_name", "EVK");
-	env_set("board_rev", "iMX8MQ");
-#endif
-
-#ifdef CONFIG_ENV_IS_IN_MMC
-	board_late_mmc_env_init();
-#endif
-	fastboot_setup();
-	entry_idx = get_dtbo_mipi_dsi_timing();
-
-	return 0;
-}
-
-#ifdef CONFIG_ANDROID_SUPPORT
-bool is_power_key_pressed(void) {
-	return (bool)(!!(readl(SNVS_HPSR) & (0x1 << 6)));
-}
-#endif
-
-#ifdef CONFIG_FSL_FASTBOOT
-#ifdef CONFIG_ANDROID_RECOVERY
-int is_recovery_key_pressing(void)
-{
-	return 0; /* TODO */
-}
-#endif /* CONFIG_ANDROID_RECOVERY */
-#endif /* CONFIG_FSL_FASTBOOT */
diff --git a/board/freescale/imx8mq_a300/spl.c b/board/freescale/imx8mq_a300/spl.c
deleted file mode 120000
index 6fecd7f45e..0000000000
--- a/board/freescale/imx8mq_a300/spl.c
+++ /dev/null
@@ -1 +0,0 @@
-../imx8mq_evk/spl.c
\ No newline at end of file
diff --git a/include/configs/imx8mn_a100.h b/include/configs/imx8mn_a100.h
deleted file mode 100644
index 30c3aacfee..0000000000
--- a/include/configs/imx8mn_a100.h
+++ /dev/null
@@ -1,264 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0+ */
-/*
- * Copyright 2018 NXP
- */
-
-#ifndef __IMX8MN_A100_H
-#define __IMX8MN_A100_H
-
-#include <linux/sizes.h>
-#include <linux/stringify.h>
-#include <asm/arch/imx-regs.h>
-#include "imx_env.h"
-
-#define CONFIG_SYS_BOOTM_LEN		(32 * SZ_1M)
-
-#define CONFIG_SPL_MAX_SIZE		(208 * 1024)
-#define CONFIG_SYS_MONITOR_LEN		(512 * 1024)
-#define CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR
-#define CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR	0x300
-#define CONFIG_SYS_UBOOT_BASE	\
-	(QSPI0_AMBA_BASE + CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR * 512)
-
-#ifdef CONFIG_SPL_BUILD
-#define CONFIG_SPL_STACK		0x980000
-#define CONFIG_SPL_BSS_START_ADDR	0x950000
-#define CONFIG_SPL_BSS_MAX_SIZE		SZ_8K	/* 8 KB */
-#define CONFIG_SYS_SPL_MALLOC_START	0x42200000
-#define CONFIG_SYS_SPL_MALLOC_SIZE	SZ_512K	/* 512 KB */
-
-/* For RAW image gives a error info not panic */
-#define CONFIG_SPL_ABORT_ON_RAW_IMAGE
-
-#if defined(CONFIG_NAND_BOOT)
-#define CONFIG_SPL_NAND_SUPPORT
-#define CONFIG_SPL_DMA
-#define CONFIG_SPL_NAND_MXS
-#define CONFIG_SPL_NAND_BASE
-#define CONFIG_SPL_NAND_IDENT
-#define CONFIG_SYS_NAND_U_BOOT_OFFS 	0x4000000 /* Put the FIT out of first 64MB boot area */
-
-/* Set a redundant offset in nand FIT mtdpart. The new uuu will burn full boot image (not only FIT part) to the mtdpart, so we check both two offsets */
-#define CONFIG_SYS_NAND_U_BOOT_OFFS_REDUND \
-	(CONFIG_SYS_NAND_U_BOOT_OFFS + CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR * 512 - 0x8400)
-#endif
-
-#endif
-
-#define CONFIG_CMD_READ
-#define CONFIG_SERIAL_TAG
-#define CONFIG_FASTBOOT_USB_DEV 0
-
-#define CONFIG_REMAKE_ELF
-/* ENET Config */
-/* ENET1 */
-#if defined(CONFIG_FEC_MXC)
-#define CONFIG_ETHPRIME                 "FEC"
-#define PHY_ANEG_TIMEOUT 20000
-
-#define CONFIG_FEC_XCV_TYPE             RGMII
-#define CONFIG_FEC_MXC_PHYADDR          0
-
-#define IMX_FEC_BASE			0x30BE0000
-#endif
-
-#ifdef CONFIG_DISTRO_DEFAULTS
-#define BOOT_TARGET_DEVICES(func) \
-	func(USB, usb, 0) \
-	func(MMC, mmc, 1) \
-	func(MMC, mmc, 2)
-
-#include <config_distro_bootcmd.h>
-#else
-#define BOOTENV
-#endif
-
-/*
- * Another approach is add the clocks for inmates into clks_init_on
- * in clk-imx8mm.c, then clk_ingore_unused could be removed.
- */
-#ifdef CONFIG_TARGET_IMX8MN_DDR4_EVK
-#define JH_ROOT_DTB	"imx8mn-ddr4-evk-root.dtb"
-#else
-#define JH_ROOT_DTB	"imx8mn-evk-root.dtb"
-#endif
-
-#define JAILHOUSE_ENV \
-	"jh_clk=   " \
-	"jh_root_dtb=" JH_ROOT_DTB " " \
-	"jh_mmcboot=mw 0x303d0518 0xff; setenv fdtfile ${jh_root_dtb};" \
-		"setenv jh_clk clk_ignore_unused mem=1212MB; " \
-			   "if run loadimage; then " \
-				   "run mmcboot; " \
-			   "else run jh_netboot; fi;  " \
-	"jh_netboot=mw 0x303d0518 0xff; setenv fdtfile ${jh_root_dtb}; setenv jh_clk clk_ignore_unused mem=1212MB; run netboot;   "
-
-#define CONFIG_MFG_ENV_SETTINGS \
-	CONFIG_MFG_ENV_SETTINGS_DEFAULT \
-	"initrd_addr=0x43800000 " \
-	"initrd_high=0xffffffffffffffff " \
-	"emmc_dev=2 "\
-	"sd_dev=1 " \
-
-/* Initial environment variables */
-#define CONFIG_EXTRA_ENV_SETTINGS		\
-	CONFIG_MFG_ENV_SETTINGS \
-	JAILHOUSE_ENV \
-	BOOTENV \
-	"scriptaddr=0x43500000 " \
-	"kernel_addr_r=" __stringify(CONFIG_LOADADDR) " " \
-	"bsp_script=boot.scr " \
-	"image=Image " \
-	"splashimage=0x50000000 " \
-	"console=ttymxc1,115200 " \
-	"fdt_addr_r=0x43000000 "			\
-	"fdt_addr=0x43000000 "			\
-	"fdt_high=0xffffffffffffffff "		\
-	"boot_fit=no " \
-	"fdtfile=" CONFIG_DEFAULT_FDT_FILE " " \
-	"bootm_size=0x10000000 " \
-	"mmcdev="__stringify(CONFIG_SYS_MMC_ENV_DEV)" " \
-	"mmcpart=" __stringify(CONFIG_SYS_MMC_IMG_LOAD_PART) " " \
-	"mmcroot=" CONFIG_MMCROOT " rootwait rw " \
-	"mmcautodetect=yes " \
-	"mmcargs=setenv bootargs ${jh_clk} console=${console} root=${mmcroot}  " \
-	"loadbootscript=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${bsp_script}; " \
-	"bootscript=echo Running bootscript from mmc ...; " \
-		"source " \
-	"loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image} " \
-	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr_r} ${fdtfile} " \
-	"mmcboot=echo Booting from mmc ...; " \
-		"run mmcargs; " \
-		"if test ${boot_fit} = yes || test ${boot_fit} = try; then " \
-			"bootm ${loadaddr}; " \
-		"else " \
-			"if run loadfdt; then " \
-				"booti ${loadaddr} - ${fdt_addr_r}; " \
-			"else " \
-				"echo WARN: Cannot load the DT; " \
-			"fi; " \
-		"fi; " \
-	"netargs=setenv bootargs ${jh_clk} console=${console} " \
-		"root=/dev/nfs " \
-		"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp " \
-	"netboot=echo Booting from net ...; " \
-		"run netargs;  " \
-		"if test ${ip_dyn} = yes; then " \
-			"setenv get_cmd dhcp; " \
-		"else " \
-			"setenv get_cmd tftp; " \
-		"fi; " \
-		"${get_cmd} ${loadaddr} ${image}; " \
-		"if test ${boot_fit} = yes || test ${boot_fit} = try; then " \
-			"bootm ${loadaddr}; " \
-		"else " \
-			"if ${get_cmd} ${fdt_addr_r} ${fdtfile}; then " \
-				"booti ${loadaddr} - ${fdt_addr_r}; " \
-			"else " \
-				"echo WARN: Cannot load the DT; " \
-			"fi; " \
-		"fi; " \
-	"bsp_bootcmd=echo Running BSP bootcmd ...; " \
-		"mmc dev ${mmcdev}; if mmc rescan; then " \
-		   "if run loadbootscript; then " \
-			   "run bootscript; " \
-		   "else " \
-			   "if run loadimage; then " \
-				   "run mmcboot; " \
-			   "else run netboot; " \
-			   "fi; " \
-		   "fi; " \
-	   "fi;"
-
-
-/* Link Definitions */
-#define CONFIG_LOADADDR			0x40480000
-
-#define CONFIG_SYS_LOAD_ADDR           CONFIG_LOADADDR
-
-#define CONFIG_SYS_INIT_RAM_ADDR        0x40000000
-#define CONFIG_SYS_INIT_RAM_SIZE        0x80000
-#define CONFIG_SYS_INIT_SP_OFFSET \
-	(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
-#define CONFIG_SYS_INIT_SP_ADDR \
-	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
-
-#if defined(CONFIG_ENV_IS_IN_SPI_FLASH)
-#define CONFIG_ENV_SPI_BUS		CONFIG_SF_DEFAULT_BUS
-#define CONFIG_ENV_SPI_CS		CONFIG_SF_DEFAULT_CS
-#define CONFIG_ENV_SPI_MODE		CONFIG_SF_DEFAULT_MODE
-#define CONFIG_ENV_SPI_MAX_HZ		CONFIG_SF_DEFAULT_SPEED
-#endif
-#define CONFIG_MMCROOT			"/dev/mmcblk1p2"  /* USDHC2 */
-
-/* Size of malloc() pool */
-#define CONFIG_SYS_MALLOC_LEN		SZ_32M
-
-#define CONFIG_SYS_SDRAM_BASE           0x40000000
-#define PHYS_SDRAM                      0x40000000
-
-/* IDT: default 1GB ddr, will dynamically get */
-#define PHYS_SDRAM_SIZE			0x40000000
-
-#define CONFIG_MXC_UART_BASE		UART2_BASE_ADDR
-
-/* Monitor Command Prompt */
-#define CONFIG_SYS_CBSIZE		2048
-#define CONFIG_SYS_MAXARGS		64
-#define CONFIG_SYS_BARGSIZE		CONFIG_SYS_CBSIZE
-#define CONFIG_SYS_PBSIZE		(CONFIG_SYS_CBSIZE + \
-					sizeof(CONFIG_SYS_PROMPT) + 16)
-
-#define CONFIG_IMX_BOOTAUX
-
-/* USDHC */
-#define CONFIG_FSL_USDHC
-
-#define CONFIG_SYS_FSL_USDHC_NUM	2
-#define CONFIG_SYS_FSL_ESDHC_ADDR	0
-
-#define CONFIG_SYS_MMC_IMG_LOAD_PART	1
-
-#ifdef CONFIG_NAND_MXS
-#define CONFIG_CMD_NAND_TRIMFFS
-
-/* NAND stuff */
-#define CONFIG_SYS_MAX_NAND_DEVICE     1
-#define CONFIG_SYS_NAND_BASE           0x20000000
-#define CONFIG_SYS_NAND_5_ADDR_CYCLE
-#define CONFIG_SYS_NAND_ONFI_DETECTION
-#define CONFIG_SYS_NAND_USE_FLASH_BBT
-#endif /* CONFIG_NAND_MXS */
-
-#define CONFIG_SYS_I2C_SPEED		100000
-
-/* USB configs */
-#ifndef CONFIG_SPL_BUILD
-#define CONFIG_USBD_HS
-
-#define CONFIG_CMD_USB_MASS_STORAGE
-#define CONFIG_USB_GADGET_MASS_STORAGE
-#define CONFIG_USB_FUNCTION_MASS_STORAGE
-
-#endif
-
-#define CONFIG_USB_GADGET_VBUS_DRAW 2
-
-#define CONFIG_MXC_USB_PORTSC  (PORT_PTS_UTMI | PORT_PTS_PTW)
-#define CONFIG_USB_MAX_CONTROLLER_COUNT         2
-
-#ifdef CONFIG_DM_VIDEO
-#define CONFIG_VIDEO_MXS
-#define CONFIG_VIDEO_LOGO
-#define CONFIG_BMP_16BPP
-#define CONFIG_BMP_24BPP
-#define CONFIG_BMP_32BPP
-#define CONFIG_VIDEO_BMP_RLE8
-#define CONFIG_VIDEO_BMP_LOGO
-#endif
-
-#ifdef CONFIG_ANDROID_SUPPORT
-#include "imx8mn_a100_android.h"
-#endif
-
-#endif
diff --git a/include/configs/imx8mn_a100_android.h b/include/configs/imx8mn_a100_android.h
deleted file mode 100644
index 078c7173d6..0000000000
--- a/include/configs/imx8mn_a100_android.h
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * Copyright 2020 NXP
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-#ifndef IMX8MN_A100_ANDROID_H
-#define IMX8MN_A100_ANDROID_H
-
-#define FSL_FASTBOOT_FB_DEV "mmc"
-
-#ifdef CONFIG_SYS_MALLOC_LEN
-#undef CONFIG_SYS_MALLOC_LEN
-#define CONFIG_SYS_MALLOC_LEN           (32 * SZ_1M)
-#endif
-
-#undef CONFIG_EXTRA_ENV_SETTINGS
-#undef CONFIG_BOOTCOMMAND
-
-#ifdef CONFIG_IMX_HAB
-#define UBOOT_DELAY_TIME 0	/* seconds */
-#else
-#define UBOOT_DELAY_TIME 1	/* seconds */
-#endif /* CONFIG_IMX_HAB */
-
-#define CONFIG_EXTRA_ENV_SETTINGS		\
-	"splashsource=mmc_fs "		\
-	"splashfile=bootmedia/\splash.bmp "		\
-	"splashpos=m,m "			\
-	"splashimage=0x50000000 "		\
-	"fdt_high=0xffffffffffffffff "		\
-	"initrd_high=0xffffffffffffffff "	\
-	"bootdelay="__stringify(UBOOT_DELAY_TIME)" "	\
-	"video_link=2 "	\
-
-/* Enable mcu firmware flash */
-#ifdef CONFIG_FLASH_MCUFIRMWARE_SUPPORT
-#define ANDROID_MCU_FRIMWARE_DEV_TYPE DEV_MMC
-#define ANDROID_MCU_FIRMWARE_START 0x500000
-#define ANDROID_MCU_OS_PARTITION_SIZE 0x40000
-#define ANDROID_MCU_FIRMWARE_SIZE  0x20000
-#define ANDROID_MCU_FIRMWARE_HEADER_STACK 0x20020000
-#endif
-
-#ifdef CONFIG_DUAL_BOOTLOADER
-#define CONFIG_SYS_SPL_PTE_RAM_BASE    0x41580000
-
-#ifdef CONFIG_IMX_TRUSTY_OS
-#define BOOTLOADER_RBIDX_OFFSET  0x3FE000
-#define BOOTLOADER_RBIDX_START   0x3FF000
-#define BOOTLOADER_RBIDX_LEN     0x08
-#define BOOTLOADER_RBIDX_INITVAL 0
-#endif
-
-#endif
-
-#ifdef CONFIG_IMX_TRUSTY_OS
-#define AVB_RPMB
-#define KEYSLOT_HWPARTITION_ID 2
-#define KEYSLOT_BLKS             0x1FFF
-#define NS_ARCH_ARM64 1
-#endif
-
-#endif /* IMX8MN_A100_ANDROID_H */
diff --git a/include/configs/imx8mp_a200.h b/include/configs/imx8mp_a200.h
deleted file mode 100644
index b0915f41b3..0000000000
--- a/include/configs/imx8mp_a200.h
+++ /dev/null
@@ -1,282 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0+ */
-/*
- * Copyright 2019 NXP
- */
-
-#ifndef __IMX8MP_A200_H
-#define __IMX8MP_A200_H
-
-#include <linux/sizes.h>
-#include <linux/stringify.h>
-#include <asm/arch/imx-regs.h>
-#include "imx_env.h"
-
-#define CONFIG_SYS_BOOTM_LEN		(32 * SZ_1M)
-
-#define CONFIG_SPL_MAX_SIZE		(152 * 1024)
-#define CONFIG_SYS_MONITOR_LEN		(512 * 1024)
-#define CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR
-#define CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR	0x300
-#define CONFIG_SYS_UBOOT_BASE	(QSPI0_AMBA_BASE + CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR * 512)
-
-#ifdef CONFIG_SPL_BUILD
-#define CONFIG_SPL_STACK		0x96dff0
-#define CONFIG_SPL_BSS_START_ADDR      0x96e000
-#define CONFIG_SPL_BSS_MAX_SIZE		SZ_8K	/* 8 KB */
-#define CONFIG_SYS_SPL_MALLOC_START	0x42200000
-#define CONFIG_SYS_SPL_MALLOC_SIZE	SZ_512K	/* 512 KB */
-
-/* For RAW image gives a error info not panic */
-#define CONFIG_SPL_ABORT_ON_RAW_IMAGE
-
-#if defined(CONFIG_NAND_BOOT)
-#define CONFIG_SPL_NAND_SUPPORT
-#define CONFIG_SPL_DMA
-#define CONFIG_SPL_NAND_MXS
-#define CONFIG_SPL_NAND_BASE
-#define CONFIG_SPL_NAND_IDENT
-#define CONFIG_SYS_NAND_U_BOOT_OFFS 	0x4000000 /* Put the FIT out of first 64MB boot area */
-
-/* Set a redundant offset in nand FIT mtdpart. The new uuu will burn full boot image (not only FIT part) to the mtdpart, so we check both two offsets */
-#define CONFIG_SYS_NAND_U_BOOT_OFFS_REDUND \
-	(CONFIG_SYS_NAND_U_BOOT_OFFS + CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR * 512 - 0x8400)
-#endif
-
-#endif
-
-#define CONFIG_CMD_READ
-#define CONFIG_SERIAL_TAG
-#define CONFIG_FASTBOOT_USB_DEV 0
-
-#define CONFIG_REMAKE_ELF
-/* ENET Config */
-/* ENET1 */
-
-#if defined(CONFIG_CMD_NET)
-#define CONFIG_ETHPRIME                 "eth1" /* Set eqos to primary since we use its MDIO */
-
-#define CONFIG_FEC_XCV_TYPE             RGMII
-#define CONFIG_FEC_MXC_PHYADDR          1
-
-#define DWC_NET_PHYADDR			1
-
-#define PHY_ANEG_TIMEOUT 20000
-
-#endif
-
-#ifdef CONFIG_DISTRO_DEFAULTS
-#define BOOT_TARGET_DEVICES(func) \
-	func(USB, usb, 0) \
-	func(MMC, mmc, 1) \
-	func(MMC, mmc, 2)
-
-#include <config_distro_bootcmd.h>
-#else
-#define BOOTENV
-#endif
-
-
-#define JAILHOUSE_ENV \
-	"jh_clk=   " \
-	"jh_mmcboot=setenv fdtfile imx8mp-evk-root.dtb;" \
-		"setenv jh_clk clk_ignore_unused mem=1920MB; " \
-			   "if run loadimage; then " \
-				   "run mmcboot; " \
-			   "else run jh_netboot; fi;  " \
-	"jh_netboot=setenv fdtfile imx8mp-evk-root.dtb; setenv jh_clk clk_ignore_unused mem=1920MB; run netboot;   "
-
-#define CONFIG_MFG_ENV_SETTINGS \
-	CONFIG_MFG_ENV_SETTINGS_DEFAULT \
-	"initrd_addr=0x43800000 " \
-	"initrd_high=0xffffffffffffffff " \
-	"emmc_dev=2 "\
-	"sd_dev=1 " \
-
-
-#ifdef CONFIG_NAND_BOOT
-#define MFG_NAND_PARTITION "mtdparts=gpmi-nand:64m(nandboot),16m(nandfit),32m(nandkernel),16m(nanddtb),8m(nandtee),-(nandrootfs)"
-#endif
-
-/* Initial environment variables */
-#if defined(CONFIG_NAND_BOOT)
-#define CONFIG_EXTRA_ENV_SETTINGS \
-	CONFIG_MFG_ENV_SETTINGS \
-	"splashimage=0x50000000 " \
-	"fdt_addr_r=0x43000000 "			\
-	"fdt_addr=0x43000000 "			\
-	"fdt_high=0xffffffffffffffff " \
-	"mtdparts=" MFG_NAND_PARTITION " " \
-	"console=ttymxc1,115200 earlycon=ec_imx6q,0x30890000,115200 " \
-	"bootargs=console=ttymxc1,115200 earlycon=ec_imx6q,0x30890000,115200 ubi.mtd=nandrootfs "  \
-		"root=ubi0:nandrootfs rootfstype=ubifs "		     \
-		MFG_NAND_PARTITION \
-		" " \
-	"bootcmd=nand read ${loadaddr} 0x5000000 0x2000000;"\
-		"nand read ${fdt_addr_r} 0x7000000 0x100000;"\
-		"booti ${loadaddr} - ${fdt_addr_r}"
-
-#else
-#define CONFIG_EXTRA_ENV_SETTINGS		\
-	CONFIG_MFG_ENV_SETTINGS \
-	JAILHOUSE_ENV \
-	BOOTENV \
-	"scriptaddr=0x43500000 " \
-	"kernel_addr_r=" __stringify(CONFIG_LOADADDR) " " \
-	"bsp_script=boot.scr " \
-	"image=Image " \
-	"splashimage=0x50000000 " \
-	"console=ttymxc1,115200 " \
-	"fdt_addr_r=0x43000000 "			\
-	"fdt_addr=0x43000000 "			\
-	"boot_fdt=try " \
-	"fdt_high=0xffffffffffffffff "		\
-	"boot_fit=no " \
-	"fdtfile=" CONFIG_DEFAULT_FDT_FILE " " \
-	"bootm_size=0x10000000 " \
-	"mmcdev="__stringify(CONFIG_SYS_MMC_ENV_DEV)" " \
-	"mmcpart=" __stringify(CONFIG_SYS_MMC_IMG_LOAD_PART) " " \
-	"mmcroot=" CONFIG_MMCROOT " rootwait rw " \
-	"mmcautodetect=yes " \
-	"mmcargs=setenv bootargs ${jh_clk} console=${console} root=${mmcroot}  " \
-	"loadbootscript=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${bsp_script}; " \
-	"bootscript=echo Running bootscript from mmc ...; " \
-		"source " \
-	"loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image} " \
-	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr_r} ${fdtfile} " \
-	"mmcboot=echo Booting from mmc ...; " \
-		"run mmcargs; " \
-		"if test ${boot_fit} = yes || test ${boot_fit} = try; then " \
-			"bootm ${loadaddr}; " \
-		"else " \
-			"if run loadfdt; then " \
-				"booti ${loadaddr} - ${fdt_addr_r}; " \
-			"else " \
-				"echo WARN: Cannot load the DT; " \
-			"fi; " \
-		"fi; " \
-	"netargs=setenv bootargs ${jh_clk} console=${console} " \
-		"root=/dev/nfs " \
-		"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp " \
-	"netboot=echo Booting from net ...; " \
-		"run netargs;  " \
-		"if test ${ip_dyn} = yes; then " \
-			"setenv get_cmd dhcp; " \
-		"else " \
-			"setenv get_cmd tftp; " \
-		"fi; " \
-		"${get_cmd} ${loadaddr} ${image}; " \
-		"if test ${boot_fit} = yes || test ${boot_fit} = try; then " \
-			"bootm ${loadaddr}; " \
-		"else " \
-			"if ${get_cmd} ${fdt_addr_r} ${fdtfile}; then " \
-				"booti ${loadaddr} - ${fdt_addr_r}; " \
-			"else " \
-				"echo WARN: Cannot load the DT; " \
-			"fi; " \
-		"fi; " \
-	"bsp_bootcmd=echo Running BSP bootcmd ...; " \
-		"mmc dev ${mmcdev}; if mmc rescan; then " \
-		   "if run loadbootscript; then " \
-			   "run bootscript; " \
-		   "else " \
-			   "if run loadimage; then " \
-				   "run mmcboot; " \
-			   "else run netboot; " \
-			   "fi; " \
-		   "fi; " \
-	   "fi;"
-#endif
-
-/* Link Definitions */
-#define CONFIG_LOADADDR			0x40480000
-
-#define CONFIG_SYS_LOAD_ADDR		CONFIG_LOADADDR
-
-#define CONFIG_SYS_INIT_RAM_ADDR	0x40000000
-#define CONFIG_SYS_INIT_RAM_SIZE	0x80000
-#define CONFIG_SYS_INIT_SP_OFFSET \
-	(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
-#define CONFIG_SYS_INIT_SP_ADDR \
-	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
-
-#define CONFIG_ENV_SPI_BUS		CONFIG_SF_DEFAULT_BUS
-#define CONFIG_ENV_SPI_CS		CONFIG_SF_DEFAULT_CS
-#define CONFIG_ENV_SPI_MODE		CONFIG_SF_DEFAULT_MODE
-#define CONFIG_ENV_SPI_MAX_HZ		CONFIG_SF_DEFAULT_SPEED
-
-#define CONFIG_MMCROOT			"/dev/mmcblk1p2"  /* USDHC2 */
-
-/* Size of malloc() pool */
-#define CONFIG_SYS_MALLOC_LEN		SZ_32M
-
-/* Totally 6GB DDR */
-#define CONFIG_SYS_SDRAM_BASE		0x40000000
-#define PHYS_SDRAM			0x40000000
-#define PHYS_SDRAM_SIZE			0xC0000000	/* 3 GB */
-#define PHYS_SDRAM_2			0x100000000
-#ifdef CONFIG_TARGET_IMX8MP_DDR4_EVK
-#define PHYS_SDRAM_2_SIZE		0x40000000	/* 1 GB */
-#else
-#define PHYS_SDRAM_2_SIZE		0xC0000000	/* 3 GB */
-#endif
-
-#define CONFIG_MXC_UART_BASE		UART2_BASE_ADDR
-
-/* Monitor Command Prompt */
-#define CONFIG_SYS_CBSIZE		2048
-#define CONFIG_SYS_MAXARGS		64
-#define CONFIG_SYS_BARGSIZE CONFIG_SYS_CBSIZE
-#define CONFIG_SYS_PBSIZE		(CONFIG_SYS_CBSIZE + \
-					sizeof(CONFIG_SYS_PROMPT) + 16)
-
-#define CONFIG_IMX_BOOTAUX
-#define CONFIG_FSL_USDHC
-
-#ifdef CONFIG_TARGET_IMX8MP_DDR4_EVK
-#define CONFIG_SYS_FSL_USDHC_NUM	1
-#else
-#define CONFIG_SYS_FSL_USDHC_NUM	2
-#endif
-#define CONFIG_SYS_FSL_ESDHC_ADDR	0
-
-#define CONFIG_SYS_MMC_IMG_LOAD_PART	1
-
-#ifdef CONFIG_NAND_MXS
-#define CONFIG_CMD_NAND_TRIMFFS
-
-/* NAND stuff */
-#define CONFIG_SYS_MAX_NAND_DEVICE     1
-#define CONFIG_SYS_NAND_BASE           0x20000000
-#define CONFIG_SYS_NAND_5_ADDR_CYCLE
-#define CONFIG_SYS_NAND_ONFI_DETECTION
-#define CONFIG_SYS_NAND_USE_FLASH_BBT
-#endif /* CONFIG_NAND_MXS */
-
-#define CONFIG_SYS_I2C_SPEED		100000
-
-/* USB configs */
-#ifndef CONFIG_SPL_BUILD
-
-#define CONFIG_CMD_USB_MASS_STORAGE
-#define CONFIG_USB_GADGET_MASS_STORAGE
-#define CONFIG_USB_FUNCTION_MASS_STORAGE
-#endif
-
-#define CONFIG_USB_MAX_CONTROLLER_COUNT         2
-#define CONFIG_USBD_HS
-#define CONFIG_USB_GADGET_VBUS_DRAW 2
-
-#ifdef CONFIG_DM_VIDEO
-#define CONFIG_VIDEO_LOGO
-#define CONFIG_BMP_16BPP
-#define CONFIG_BMP_24BPP
-#define CONFIG_BMP_32BPP
-#define CONFIG_VIDEO_BMP_RLE8
-#define CONFIG_VIDEO_BMP_LOGO
-#endif
-
-#ifdef CONFIG_ANDROID_SUPPORT
-#include "imx8mp_a200_android.h"
-#endif
-
-#endif
diff --git a/include/configs/imx8mp_a200_android.h b/include/configs/imx8mp_a200_android.h
deleted file mode 100644
index 1a31af3c36..0000000000
--- a/include/configs/imx8mp_a200_android.h
+++ /dev/null
@@ -1,63 +0,0 @@
-/*
- * Copyright 2021 NXP
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-#ifndef IMX8MP_A200_ANDROID_H
-#define IMX8MP_A200_ANDROID_H
-
-#define FSL_FASTBOOT_FB_DEV "mmc"
-
-#ifdef CONFIG_SYS_MALLOC_LEN
-#undef CONFIG_SYS_MALLOC_LEN
-#define CONFIG_SYS_MALLOC_LEN           (32 * SZ_1M)
-#endif
-
-#undef CONFIG_EXTRA_ENV_SETTINGS
-#undef CONFIG_BOOTCOMMAND
-
-#ifdef CONFIG_IMX_HAB
-#define UBOOT_DELAY_TIME 0	/* seconds */
-#else
-#define UBOOT_DELAY_TIME 1	/* seconds */
-#endif /* CONFIG_IMX_HAB */
-
-#define CONFIG_EXTRA_ENV_SETTINGS		\
-	"splashsource=mmc_fs "		\
-	"splashfile=bootmedia/\splash.bmp "		\
-	"splashpos=m,m "			\
-	"splashimage=0x50000000 "		\
-	"fdt_high=0xffffffffffffffff "		\
-	"initrd_high=0xffffffffffffffff "	\
-	"bootdelay="__stringify(UBOOT_DELAY_TIME)" "	\
-
-/* Enable mcu firmware flash */
-#ifdef CONFIG_FLASH_MCUFIRMWARE_SUPPORT
-#define ANDROID_MCU_FRIMWARE_DEV_TYPE DEV_MMC
-#define ANDROID_MCU_FIRMWARE_START 0x500000
-#define ANDROID_MCU_OS_PARTITION_SIZE 0x40000
-#define ANDROID_MCU_FIRMWARE_SIZE  0x20000
-#define ANDROID_MCU_FIRMWARE_HEADER_STACK 0x20020000
-#endif
-
-#ifdef CONFIG_DUAL_BOOTLOADER
-#define CONFIG_SYS_SPL_PTE_RAM_BASE    0x41580000
-
-#ifdef CONFIG_IMX_TRUSTY_OS
-#define BOOTLOADER_RBIDX_OFFSET  0x3FE000
-#define BOOTLOADER_RBIDX_START   0x3FF000
-#define BOOTLOADER_RBIDX_LEN     0x08
-#define BOOTLOADER_RBIDX_INITVAL 0
-#endif
-
-#endif
-
-#ifdef CONFIG_IMX_TRUSTY_OS
-#define AVB_RPMB
-#define KEYSLOT_HWPARTITION_ID 2
-#define KEYSLOT_BLKS             0x1FFF
-#define NS_ARCH_ARM64 1
-#endif
-
-#endif /* IMX8MP_A200_ANDROID_H */
diff --git a/include/configs/imx8mq_a300.h b/include/configs/imx8mq_a300.h
deleted file mode 100644
index b966bf29fd..0000000000
--- a/include/configs/imx8mq_a300.h
+++ /dev/null
@@ -1,244 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0+ */
-/*
- * Copyright 2018 NXP
- */
-
-#ifndef __IMX8M_A300_H
-#define __IMX8M_A300_H
-
-#include <linux/sizes.h>
-#include <linux/stringify.h>
-#include <asm/arch/imx-regs.h>
-#include "imx_env.h"
-
-#define CONFIG_SYS_BOOTM_LEN		(32 * SZ_1M)
-
-#define CONFIG_SPL_MAX_SIZE		(148 * 1024)
-#define CONFIG_SYS_MONITOR_LEN		(512 * 1024)
-#define CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR
-#define CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR	(0x300 + CONFIG_SECONDARY_BOOT_SECTOR_OFFSET)
-
-#ifdef CONFIG_SPL_BUILD
-/*#define CONFIG_ENABLE_DDR_TRAINING_DEBUG*/
-#define CONFIG_SPL_LDSCRIPT		"arch/arm/cpu/armv8/u-boot-spl.lds"
-#define CONFIG_SPL_STACK		0x187FF0
-#define CONFIG_SPL_BSS_START_ADDR      0x00180000
-#define CONFIG_SPL_BSS_MAX_SIZE        0x2000	/* 8 KB */
-#define CONFIG_SYS_SPL_MALLOC_START    0x42200000
-#define CONFIG_SYS_SPL_MALLOC_SIZE    0x80000	/* 512 KB */
-#define CONFIG_SYS_SPL_PTE_RAM_BASE    0x41580000
-
-/* malloc f used before GD_FLG_FULL_MALLOC_INIT set */
-#define CONFIG_MALLOC_F_ADDR		0x182000
-/* For RAW image gives a error info not panic */
-#define CONFIG_SPL_ABORT_ON_RAW_IMAGE
-
-#undef CONFIG_DM_MMC
-#undef CONFIG_DM_PMIC
-#undef CONFIG_DM_PMIC_PFUZE100
-
-#define CONFIG_SYS_I2C
-
-#define CONFIG_POWER
-#define CONFIG_POWER_I2C
-#define CONFIG_POWER_PFUZE100
-#define CONFIG_POWER_PFUZE100_I2C_ADDR 0x08
-#endif
-
-#define CONFIG_REMAKE_ELF
-
-/* ENET Config */
-/* ENET1 */
-#if defined(CONFIG_FEC_MXC)
-#define CONFIG_ETHPRIME                 "FEC"
-#define PHY_ANEG_TIMEOUT 20000
-
-#define CONFIG_FEC_XCV_TYPE             RGMII
-#define CONFIG_FEC_MXC_PHYADDR          0
-
-#define IMX_FEC_BASE			0x30BE0000
-#endif
-
-#ifdef CONFIG_DISTRO_DEFAULTS
-#define BOOT_TARGET_DEVICES(func) \
-	func(USB, usb, 0) \
-	func(MMC, mmc, 1) \
-	func(MMC, mmc, 0)
-
-#include <config_distro_bootcmd.h>
-#else
-#define BOOTENV
-#endif
-
-/*
- * Another approach is add the clocks for inmates into clks_init_on
- * in clk-imx8mq.c, then clk_ingore_unused could be removed.
- */
-#define JAILHOUSE_ENV \
-	"jh_clk=   " \
-	"jh_mmcboot=setenv fdtfile imx8mq-evk-root.dtb; " \
-		"setenv jh_clk clk_ignore_unused mem=1872M; " \
-			   "if run loadimage; then " \
-				   "run mmcboot; " \
-			   "else run jh_netboot; fi;  " \
-	"jh_netboot=setenv fdtfile imx8mq-evk-root.dtb; setenv jh_clk clk_ignore_unused mem=1872MB; run netboot;   "
-
-#define CONFIG_MFG_ENV_SETTINGS \
-	CONFIG_MFG_ENV_SETTINGS_DEFAULT \
-	"initrd_addr=0x43800000 " \
-	"initrd_high=0xffffffffffffffff " \
-	"emmc_dev=0 "\
-	"sd_dev=1 " \
-
-/* Initial environment variables */
-#define CONFIG_EXTRA_ENV_SETTINGS		\
-	CONFIG_MFG_ENV_SETTINGS \
-	BOOTENV \
-	JAILHOUSE_ENV \
-	"scriptaddr=0x43500000 " \
-	"kernel_addr_r=" __stringify(CONFIG_LOADADDR) " " \
-	"bsp_script=boot.scr " \
-	"image=Image " \
-	"splashimage=0x50000000 " \
-	"console=ttymxc0,115200 " \
-	"fdt_addr_r=0x43000000 "			\
-	"fdt_addr=0x43000000 "			\
-	"fdt_high=0xffffffffffffffff "		\
-	"boot_fdt=try " \
-	"fdtfile=imx8mq-evk.dtb " \
-	"bootm_size=0x10000000 " \
-	"mmcdev="__stringify(CONFIG_SYS_MMC_ENV_DEV)" " \
-	"mmcpart=" __stringify(CONFIG_SYS_MMC_IMG_LOAD_PART) " " \
-	"mmcroot=" CONFIG_MMCROOT " rootwait rw " \
-	"mmcautodetect=yes " \
-	"mmcargs=setenv bootargs ${jh_clk} console=${console} root=${mmcroot}  " \
-	"loadbootscript=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${bsp_script}; " \
-	"bootscript=echo Running bootscript from mmc ...; " \
-		"source " \
-	"loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image} " \
-	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr_r} ${fdtfile} " \
-	"mmcboot=echo Booting from mmc ...; " \
-		"run mmcargs; " \
-		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-			"if run loadfdt; then " \
-				"booti ${loadaddr} - ${fdt_addr_r}; " \
-			"else " \
-				"echo WARN: Cannot load the DT; " \
-			"fi; " \
-		"else " \
-			"echo wait for boot; " \
-		"fi; " \
-	"netargs=setenv bootargs ${jh_clk} console=${console} " \
-		"root=/dev/nfs " \
-		"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp " \
-	"netboot=echo Booting from net ...; " \
-		"run netargs;  " \
-		"if test ${ip_dyn} = yes; then " \
-			"setenv get_cmd dhcp; " \
-		"else " \
-			"setenv get_cmd tftp; " \
-		"fi; " \
-		"${get_cmd} ${loadaddr} ${image}; " \
-		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-			"if ${get_cmd} ${fdt_addr_r} ${fdtfile}; then " \
-				"booti ${loadaddr} - ${fdt_addr_r}; " \
-			"else " \
-				"echo WARN: Cannot load the DT; " \
-			"fi; " \
-		"else " \
-			"booti; " \
-		"fi; " \
-	"bsp_bootcmd=echo Running BSP bootcmd ...; " \
-			"mmc dev ${mmcdev}; if mmc rescan; then " \
-			   "if run loadbootscript; then " \
-				   "run bootscript; " \
-			   "else " \
-				   "if run loadimage; then " \
-					   "run mmcboot; " \
-				   "else run netboot; " \
-				   "fi; " \
-			   "fi; " \
-		   "fi;"
-
-/* Link Definitions */
-#define CONFIG_LOADADDR			0x40480000
-
-#define CONFIG_SYS_LOAD_ADDR           CONFIG_LOADADDR
-
-#define CONFIG_SYS_INIT_RAM_ADDR        0x40000000
-#define CONFIG_SYS_INIT_RAM_SIZE        0x80000
-#define CONFIG_SYS_INIT_SP_OFFSET \
-	(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
-#define CONFIG_SYS_INIT_SP_ADDR \
-	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
-
-#define CONFIG_MMCROOT			"/dev/mmcblk1p2"  /* USDHC2 */
-
-/* Size of malloc() pool */
-#define CONFIG_SYS_MALLOC_LEN		SZ_32M
-
-#define CONFIG_SYS_SDRAM_BASE           0x40000000
-#define PHYS_SDRAM                      0x40000000
-#define PHYS_SDRAM_SIZE	                0x80000000 /* idt: default 2GB DDR for all product */
-/* IDT added SDRAM second bank */
-#define PHYS_SDRAM_2                    0x100000000
-#define PHYS_SDRAM_2_SIZE               0x0      /* IDT: init as 0, dynamically assign */
-
-#define CONFIG_MXC_UART_BASE		UART1_BASE_ADDR
-
-/* Monitor Command Prompt */
-#define CONFIG_SYS_PROMPT_HUSH_PS2	"> "
-#define CONFIG_SYS_CBSIZE		1024
-#define CONFIG_SYS_MAXARGS		64
-#define CONFIG_SYS_BARGSIZE		CONFIG_SYS_CBSIZE
-#define CONFIG_SYS_PBSIZE		(CONFIG_SYS_CBSIZE + \
-					sizeof(CONFIG_SYS_PROMPT) + 16)
-
-#define CONFIG_IMX_BOOTAUX
-
-#define CONFIG_SYS_FSL_USDHC_NUM	2
-#define CONFIG_SYS_FSL_ESDHC_ADDR       0
-
-#define CONFIG_SYS_MMC_IMG_LOAD_PART	1
-
-/* I2C Configs */
-#define CONFIG_SYS_I2C_SPEED		  100000
-
-/* USB configs */
-#ifndef CONFIG_SPL_BUILD
-
-#define CONFIG_CMD_USB_MASS_STORAGE
-#define CONFIG_USB_GADGET_MASS_STORAGE
-#define CONFIG_USB_FUNCTION_MASS_STORAGE
-
-#define CONFIG_CMD_READ
-
-#endif
-
-#define CONFIG_SERIAL_TAG
-#define CONFIG_FASTBOOT_USB_DEV 0
-
-
-#define CONFIG_USB_MAX_CONTROLLER_COUNT         2
-
-#define CONFIG_USBD_HS
-#define CONFIG_USB_GADGET_VBUS_DRAW 2
-
-#ifndef CONFIG_SPL_BUILD
-#define CONFIG_DM_PMIC
-#endif
-
-#ifdef CONFIG_DM_VIDEO
-#define CONFIG_VIDEO_LOGO
-#define CONFIG_BMP_16BPP
-#define CONFIG_BMP_24BPP
-#define CONFIG_BMP_32BPP
-#define CONFIG_VIDEO_BMP_RLE8
-#define CONFIG_VIDEO_BMP_LOGO
-#endif
-
-#ifdef CONFIG_ANDROID_SUPPORT
-#include "imx8mq_a300_android.h"
-#endif
-
-#endif
diff --git a/include/configs/imx8mq_a300_android.h b/include/configs/imx8mq_a300_android.h
deleted file mode 100644
index 9effaaa3fa..0000000000
--- a/include/configs/imx8mq_a300_android.h
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Copyright 2020 NXP
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-#ifndef IMX8MQ_A300_ANDROID_H
-#define IMX8MQ_A300_ANDROID_H
-
-#define FSL_FASTBOOT_FB_DEV "mmc"
-
-#ifdef CONFIG_SYS_MALLOC_LEN
-#undef CONFIG_SYS_MALLOC_LEN
-#define CONFIG_SYS_MALLOC_LEN           (32 * SZ_1M)
-#endif
-
-#undef CONFIG_EXTRA_ENV_SETTINGS
-#undef CONFIG_BOOTCOMMAND
-
-#ifdef CONFIG_IMX_HAB
-#define UBOOT_DELAY_TIME 0	/* seconds */
-#else
-#define UBOOT_DELAY_TIME 1	/* seconds */
-#endif /* CONFIG_IMX_HAB */
-
-#ifdef CONFIG_VIDEO_IMX_NW_DSI
-#define CONFIG_VIDEO_MXS
-#endif /* CONFIG_VIDEO_IMX_NW_DSI */
-
-#define CONFIG_EXTRA_ENV_SETTINGS		\
-	"splashsource=mmc_fs "		\
-	"splashfile=bootmedia/\splash.bmp "		\
-	"splashpos=m,m "			\
-	"splashimage=0x50000000 "		\
-	"sp_rotate=90 "			\
-	"fdt_high=0xffffffffffffffff "		\
-	"initrd_high=0xffffffffffffffff "	\
-	"bootdelay="__stringify(UBOOT_DELAY_TIME)" "	\
-	"video_link=0 "	\
-
-/* Enable mcu firmware flash */
-#ifdef CONFIG_FLASH_MCUFIRMWARE_SUPPORT
-#define ANDROID_MCU_FRIMWARE_DEV_TYPE DEV_MMC
-#define ANDROID_MCU_FIRMWARE_START 0x500000
-#define ANDROID_MCU_OS_PARTITION_SIZE 0x40000
-#define ANDROID_MCU_FIRMWARE_SIZE  0x20000
-#define ANDROID_MCU_FIRMWARE_HEADER_STACK 0x20020000
-#endif
-
-#ifdef CONFIG_DUAL_BOOTLOADER
-#define CONFIG_SYS_SPL_PTE_RAM_BASE    0x41580000
-
-#ifdef CONFIG_IMX_TRUSTY_OS
-#define BOOTLOADER_RBIDX_OFFSET  0x1E000
-#define BOOTLOADER_RBIDX_START   0x1F000
-#define BOOTLOADER_RBIDX_LEN     0x08
-#define BOOTLOADER_RBIDX_INITVAL 0
-#endif
-
-#endif
-
-#ifdef CONFIG_IMX_TRUSTY_OS
-#define AVB_RPMB
-#define KEYSLOT_HWPARTITION_ID 2
-#define KEYSLOT_BLKS             0x1FFF
-#define NS_ARCH_ARM64 1
-#endif
-
-#endif /* IMX8MQ_A300_ANDROID_H */
