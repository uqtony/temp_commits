872e726 George.Huang 2021-08-09

AOS-678: extend meminfo to hold at most 61 memory timings

- Preconditions:
  mem_info.img size is limited to 1024K
  1 timing data body costs 16.5K
  1 timing data header costs 88 bytes

- Summary:
  mem_info.img at most contains 61 timing data and 1 header structure
  max No. of timing data: 1024K/16.5K=62
  size of header struct : (62-1)*88/1024=5.2K -> 6K (=12 blocks)

- Layout of mem_info.img:
  |<header>|<timing-01>|<timing-02>|...|<timing-61>|<zeros>|
  |<  6K  >|<  16.5K  >|<  16.5K  >|...|<  16.5K  >|<zeros>|
  |<                       1024K                          >|

Change-Id: Ibc123b011fdc0d8e8f7264e830523eec33646a96

diff --git a/generate_meminfo.py b/generate_meminfo.py
index eabb217..43ce5ef 100644
--- a/generate_meminfo.py
+++ b/generate_meminfo.py
@@ -78,6 +78,7 @@ DRAM_TIMING_DATA = [['board_info-a300_evt-0_devboard_evt-1_ktc2g.img', '../../nx
                     ['board_info-imx8mq_evt-0_phanbell_evt-0_ktc4g.img', '../../nxp-opensource/uboot-imx/board/freescale/imx8mq_phanbell/ddr/lpddr4_timing_kingston_4gb.c', './mq-phanbell-lpddr4_timing_kingston_4gb.o']
                     ]
 
+HEADER_BLOCK_NUM = 12
 BLOCK_SIZE = 512.0
 CFG_SIZE = 8 # sizeof(struct dram_cfg_param)
 FSP_MSG_ITEMS = 4
@@ -265,7 +266,7 @@ def main(argv):
   mem_root_hdr = struct.pack('I', len(DRAM_TIMING_DATA))
   mem_root_body = bytearray()
   mem_root_tail = bytearray()
-  offset = 2 # first 2 blocks for root header
+  offset = HEADER_BLOCK_NUM # first HEADER_BLOCK_NUM blocks for root header
 
   m_txt = open("./mem_info.txt", "w")
 
@@ -292,13 +293,19 @@ def main(argv):
     mem_root_body += local_blob
 
   # padding header block to BLOCK_SIZE
-  padding = int(BLOCK_SIZE*2 - len(mem_root_hdr))
+  padding = int(BLOCK_SIZE * HEADER_BLOCK_NUM - len(mem_root_hdr))
+  if padding < 0:
+    print('Error: actual header size {} bytes exceeds expected size {} bytes'
+        .format(len(mem_root_hdr), BLOCK_SIZE * HEADER_BLOCK_NUM))
   mem_root_hdr += struct.pack(str(padding) + 'x')
 
   m_txt.close()
 
   # padding the tail to 1MByte
   padding = int(BLOCK_SIZE*2048 - len(mem_root_hdr) - len(mem_root_body))
+  if padding < 0:
+    print('Error: actual image size {} bytes exceeds expected size {} bytes'
+        .format(len(mem_root_hdr)+len(mem_root_body), BLOCK_SIZE * 2048))
   mem_root_tail += struct.pack(str(padding) + 'x')
 
   with open("./mem_info.img", "w") as f:
diff --git a/mq-evk-lpddr4_timing.o b/mq-evk-lpddr4_timing.o
index 97787e5..74247a4 100644
Binary files a/mq-evk-lpddr4_timing.o and b/mq-evk-lpddr4_timing.o differ
