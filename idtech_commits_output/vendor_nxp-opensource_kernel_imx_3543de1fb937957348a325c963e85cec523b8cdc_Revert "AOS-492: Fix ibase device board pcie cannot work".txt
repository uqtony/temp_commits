3543de1fb937 George.Huang 2021-07-23

Revert "AOS-492: Fix ibase device board pcie cannot work"

This reverts commit ea192a3f56f5f065a8ad1f9752e756bf4aff3b82.

Change-Id: Iba35768f479e056122e020a043aec412ba8411cd

diff --git a/arch/arm64/boot/dts/freescale/idt_imx8mq_evt-0_ibr210_evt-0.dtsi b/arch/arm64/boot/dts/freescale/idt_imx8mq_evt-0_ibr210_evt-0.dtsi
index 5762e859a34f..3276b02d7385 100644
--- a/arch/arm64/boot/dts/freescale/idt_imx8mq_evt-0_ibr210_evt-0.dtsi
+++ b/arch/arm64/boot/dts/freescale/idt_imx8mq_evt-0_ibr210_evt-0.dtsi
@@ -602,7 +602,6 @@ &pcie0 {
 	assigned-clock-rates = <10000000>;
 	assigned-clock-parents = <&clk IMX8MQ_SYS2_PLL_50M>;
 	status = "okay";
-	l1ss-support-disabled;
 };
 
 &pgc_gpu {
diff --git a/drivers/pci/controller/dwc/pci-imx6.c b/drivers/pci/controller/dwc/pci-imx6.c
index 9920392466d8..2cb12d776237 100644
--- a/drivers/pci/controller/dwc/pci-imx6.c
+++ b/drivers/pci/controller/dwc/pci-imx6.c
@@ -164,8 +164,6 @@ struct imx6_pcie {
 	const struct imx6_pcie_drvdata *drvdata;
 	struct regulator	*epdev_on;
 	struct phy		*phy;
-
-	bool			l1ss_support_disabled;
 };
 
 /* Parameters for the waiting for PCIe PHY PLL to lock on i.MX7 */
@@ -1236,14 +1234,14 @@ static void imx6_pcie_deassert_core_reset(struct imx6_pcie *imx6_pcie)
 		reset_control_deassert(imx6_pcie->pciephy_reset);
 
 		imx8_pcie_wait_for_phy_pll_lock(imx6_pcie);
-		if ((imx6_pcie->drvdata->flags & IMX6_PCIE_FLAG_SUPPORTS_L1SS) && !imx6_pcie->l1ss_support_disabled) {
+
+		if (imx6_pcie->drvdata->flags & IMX6_PCIE_FLAG_SUPPORTS_L1SS)
 			/*
 			 * Configure the CLK_REQ# high, let the L1SS
 			 * automatically controlled by HW later.
 			 */
 			reset_control_deassert(imx6_pcie->clkreq_reset);
-			imx6_pcie_set_l1_latency(imx6_pcie);
-		}
+		imx6_pcie_set_l1_latency(imx6_pcie);
 		break;
 	case IMX8MP:
 	case IMX8MP_EP:
@@ -1303,14 +1301,13 @@ static void imx6_pcie_deassert_core_reset(struct imx6_pcie *imx6_pcie)
 
 		imx8_pcie_wait_for_phy_pll_lock(imx6_pcie);
 
-		if ((imx6_pcie->drvdata->flags & IMX6_PCIE_FLAG_SUPPORTS_L1SS) && !imx6_pcie->l1ss_support_disabled) {
+		if (imx6_pcie->drvdata->flags & IMX6_PCIE_FLAG_SUPPORTS_L1SS)
 			/*
 			 * Configure the CLK_REQ# high, let the L1SS
 			 * automatically controlled by HW later.
 			 */
 			reset_control_deassert(imx6_pcie->clkreq_reset);
-			imx6_pcie_set_l1_latency(imx6_pcie);
-		}
+		imx6_pcie_set_l1_latency(imx6_pcie);
 		break;
 	case IMX7D:
 	case IMX7D_EP:
@@ -2410,9 +2407,6 @@ static int imx6_pcie_probe(struct platform_device *pdev)
 	imx6_pcie->pci = pci;
 	imx6_pcie->drvdata = of_device_get_match_data(dev);
 
-	/* Find schematic is support l1 ss or not*/
-	imx6_pcie->l1ss_support_disabled = of_property_read_bool(node, "l1ss-support-disabled");
-
 	/* Find the PHY if one is defined, only imx7d uses it */
 	np = of_parse_phandle(node, "fsl,imx7d-pcie-phy", 0);
 	if (np) {
