39aa8f417 max.yang 2021-04-26

AOS-595: Support front-end script to change password for CA users

Change-Id: Ie01bb7dd23286b1287d815b3218da44a3aabb612

diff --git a/tools/releasetools/idt_change_password.py b/tools/releasetools/idt_change_password.py
new file mode 100644
index 000000000..587c49ca3
--- /dev/null
+++ b/tools/releasetools/idt_change_password.py
@@ -0,0 +1,19 @@
+import sys
+import idt_web_service
+
+def usage():
+  print('Usage:')
+  print('    python releasetools/idt_change_password.py [DEMO|PROD]')
+  sys.exit(1)
+
+def main(argv):
+  if len(argv) != 1 or (argv[0] != "DEMO" and argv[0] != "PROD"):
+    usage()
+  ws = idt_web_service.web_service()
+  ws.login("old")
+  ws.change_password()
+  ws.login("new")
+  return
+
+if __name__ == "__main__":
+  main(sys.argv[1:])
diff --git a/tools/releasetools/idt_web_service.py b/tools/releasetools/idt_web_service.py
index 785033d57..c2d8ff8f4 100644
--- a/tools/releasetools/idt_web_service.py
+++ b/tools/releasetools/idt_web_service.py
@@ -15,6 +15,7 @@ class web_service(object):
     else:
       self.HOST_URL  = "http://demo.idtechweb.com:8751/"
     self.AUTH_API    = "api/auth/login"
+    self.PASSWD_API  = "api/auth/password"
     self.PREPARE_API = "api/sign/prepare"
     self.SIGN_API    = "api/sign/apk"
     self.WSCA = "ID TECH PKI PROD-B"
@@ -50,6 +51,42 @@ class web_service(object):
     print("Login Success ------")
     return res.json()["data"]["token"]
 
+  def change_password(self):
+    print("--------------------------------------
Changing password")
+    self.passwd2 = getpass.getpass("New Password:")
+    vrf_passwd   = getpass.getpass("Verify Password:")
+    if self.passwd2 != vrf_passwd:
+      raise RuntimeError("Verifying new password fail")
+
+    chpasswd_header = { "accept" : "*/*",
+                        "Content-Type" : "application/json",
+                        "Authorization": self.token1
+                      }
+    chpasswd_body   = { "user1": { "username" : self.user1,
+                                   "password" : self.passwd1
+                                 },
+                        "username": self.user1,
+                        "oldPassword": self.passwd1,
+                        "newPassword": self.passwd2
+                      }
+
+    res = requests.put(self.HOST_URL + self.PASSWD_API, data=json.dumps(chpasswd_body), headers=chpasswd_header)
+    if res.json()["isSuccess"] is False:
+      raise RuntimeError("Changing password fail: {}".format(res.json()["msg"]))
+
+    print("Done changing password ------")
+    # Clear passwd
+    self.user1 = None
+    self.passwd1 = None
+    self.passwd2 = None
+    vrf_passwd = None
+
+  def login(self, msg=None):
+    print("--------------------------------------
Login {} account/password".format(msg))
+    self.user1   = raw_input("Account:")
+    self.passwd1 = getpass.getpass("Password:")
+    self.token1  = self.doAuth(self.user1, self.passwd1)
+
   def dual_login(self):
     print("--------------------------------------
Starting Dual Login")
     self.user1   = raw_input("Account1 [First User]:")
