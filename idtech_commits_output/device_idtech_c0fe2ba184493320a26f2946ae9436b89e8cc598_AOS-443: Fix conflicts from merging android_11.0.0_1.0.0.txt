c0fe2ba1 George.Huang 2020-12-24

AOS-443: Fix conflicts from merging android_11.0.0_1.0.0

Change-Id: I70734ec96fadfb343e01ec60bf6cf196d8d299d2

diff --git a/common/build/kernel.mk b/common/build/kernel.mk
index 36ae307b..9066470a 100644
--- a/common/build/kernel.mk
+++ b/common/build/kernel.mk
@@ -110,19 +110,13 @@ KERNEL_CONFIG_ADDITION := $(TARGET_DEVICE_DIR)/$(TARGET_KERNEL_ADDITION_DEFCONF)
 else
 KERNEL_CONFIG_ADDITION :=
 endif
-<<<<<<< HEAD
+
 KERNEL_CONFIG_SECURE :=
 ifneq ($(TARGET_KERNEL_SECURE_DEFCONF),)
 ifeq (user,$(TARGET_BUILD_VARIANT))
 KERNEL_CONFIG_SECURE := $(TARGET_DEVICE_DIR)/$(TARGET_KERNEL_SECURE_DEFCONF)
 endif
 endif
-KERNEL_CONFIG_SRC := $(KERNEL_CONFIG_DEFAULT) \
-  $(KERNEL_CONFIG_ADDITION) \
-  $(KERNEL_CONFIG_SECURE)
-KERNEL_CONFIG := $(KERNEL_OUT)/.config
-KERNEL_MERGE_CONFIG := device/idtech/common/tools/mergeconfig.sh
-=======
 
 ifneq ($(TARGET_KERNEL_GKI_DEFCONF),)
 KERNEL_CONFIG_GKI := $(TARGET_DEVICE_DIR)/$(TARGET_KERNEL_GKI_DEFCONF)
@@ -132,11 +126,11 @@ endif
 
 KERNEL_CONFIG_SRC := $(KERNEL_CONFIG_DEFAULT) \
   $(KERNEL_CONFIG_ADDITION) \
+  $(KERNEL_CONFIG_SECURE) \
   $(KERNEL_CONFIG_GKI)
 
 KERNEL_CONFIG := $(KERNEL_OUT)/.config
-KERNEL_MERGE_CONFIG := $(realpath device/nxp/common/tools/merge_config.sh)
->>>>>>> android-11.0.0_1.0.0_history
+KERNEL_MERGE_CONFIG := $(realpath device/idtech/common/tools/merge_config.sh)
 
 KERNEL_HEADERS_INSTALL := $(KERNEL_OUT)/usr
 #KERNEL_MODULES_INSTALL := $(TARGET_OUT)/lib/modules
diff --git a/common/tools/fastboot_imx_flashall.bat b/common/tools/fastboot_imx_flashall.bat
index 54b2b217..0815f95b 100755
--- a/common/tools/fastboot_imx_flashall.bat
+++ b/common/tools/fastboot_imx_flashall.bat
@@ -42,27 +42,21 @@ set vendor_file=vendor.img
 set product_file=product.img
 set partition_file=partition-table.img
 set super_file=super.img
-<<<<<<< HEAD
 set spl_table_file=spl_tab.img
-=======
 set vendorboot_file=vendor_boot.img
->>>>>>> android-11.0.0_1.0.0_history
 set /A support_dtbo=0
 set /A support_recovery=0
 set /A support_dualslot=0
 set /A support_mcu_os=0
 set /A support_dual_bootloader=0
 set /A support_dynamic_partition=0
-<<<<<<< HEAD
 set /A support_board_info=0
 set /A support_mem_info=0
 set /A write_bdinfo_serial=0
 set /A support_idt_dual_spl=0
 set /A support_idt_backup_spl=0
 set /A support_idt_spl_table=0
-=======
 set /A support_vendor_boot=0
->>>>>>> android-11.0.0_1.0.0_history
 set dual_bootloader_partition=
 set bootloader_flashed_to_board=
 set uboot_proper_to_be_flashed=
@@ -77,13 +71,10 @@ set vbmeta_partition=vbmeta
 set dtbo_partition=dtbo
 set mcu_os_partition=mcu_os
 set super_partition=super
-<<<<<<< HEAD
 set board_info_partition=board_info
 set mem_info_partition=mem_info
 set userdata_partition=userdata
-=======
 set vendor_boot_partition=vendor_boot
->>>>>>> android-11.0.0_1.0.0_history
 set /A flash_mcu=0
 set /A statisc=0
 set /A lock=0
@@ -94,7 +85,6 @@ set ser_num=
 set fastboot_tool=fastboot
 set /A error_level=0
 set /A flag=1
-<<<<<<< HEAD
 set lpmake_system_image_a=
 set lpmake_system_image_b=
 set lpmake_vendor_image_a=
@@ -103,9 +93,7 @@ set lpmake_product_image_a=
 set lpmake_product_image_b=
 set /A dont_generate_super=0
 set board_type=
-=======
 
->>>>>>> android-11.0.0_1.0.0_history
 
 :: We want to detect illegal feature input to some extent. Here it's based on SoC names. Since an SoC may be on a
 :: board running different set of images(android and automative for a example), so misuse the features of one set of
@@ -155,13 +143,9 @@ if %1 == -l set /A lock=1 & shift & goto :parse_loop
 if %1 == -e set /A erase=1 & shift & goto :parse_loop
 if %1 == -D set image_directory=%2& shift & shift & goto :parse_loop
 if %1 == -s set ser_num=%2&shift &shift & goto :parse_loop
-<<<<<<< HEAD
 if %1 == -super set /A dont_generate_super=1 & shift & goto :parse_loop
-if %1 == -tos set /A support_trusty=1 & shift & goto :parse_loop
 if %1 == -bdinfo set board_info_file=%2& shift & shift & goto :parse_loop
 if %1 == -serial set serialno_str=%2& set /A write_bdinfo_serial=1& shift & shift & goto :parse_loop
-=======
->>>>>>> android-11.0.0_1.0.0_history
 echo %1 is an illegal option
 call :help & goto :eof
 :parse_end
@@ -227,6 +211,7 @@ if not [%image_directory%] == [] if not %image_directory:~-1% == \ (
 
 if not [%ser_num%] == [] set fastboot_tool=fastboot -s %ser_num%
 
+
 :: check whether provided spl/bootloader/uboot feature is legal
 set uboot_feature_no_pre_hyphen=%uboot_feature:~1%
 if not [%uboot_feature%] == [] (
@@ -358,7 +343,6 @@ echo  -D directory      the directory of of images
 echo                        No need to use this option if images are in current working directory
 echo  -s ser_num        the serial number of board
 echo                        If only one board connected to computer, no need to use this option
-<<<<<<< HEAD
 echo  -super            do not generate super.img when flash the images with dynamic partition feature enabled.
 echo                        Under the condition that dynamic partition feature are enabled:
 echo                          if this option is not used, super.img will be generated under current working directory and flashed to the board.
@@ -366,8 +350,6 @@ echo                          if this option is used, make sure super.img alread
 echo  -bdinfo board_info_file  flash board_info with this board_info_file image
 echo                               If not set, use naming from current board_info partition
 echo  -serial serialno_str  write serial number into device emmc, this could be program once in secure-user build
-=======
->>>>>>> android-11.0.0_1.0.0_history
 goto :eof
 
 :: this function checks whether the value of first parameter is in the array value of second parameter.
@@ -544,7 +526,7 @@ set vendor_partition=vendor%1
 set product_partition=product%1
 set vbmeta_partition=vbmeta%1
 set dtbo_partition=dtbo%1
-<<<<<<< HEAD
+set vendor_boot_partition=vendor_boot%1
 set mem_info_partition=mem_info%1
 goto :eof
 
@@ -617,9 +599,6 @@ IF NOT [%match_mb%] GEQ [1] (
     echo Error: %mb_model% and values in android-info.txt are mismatched
     set /A error_level=3 && goto :exit
 )
-=======
-set vendor_boot_partition=vendor_boot%1
->>>>>>> android-11.0.0_1.0.0_history
 goto :eof
 
 :flash_android
diff --git a/common/tools/fastboot_imx_flashall.sh b/common/tools/fastboot_imx_flashall.sh
index 9e38c1bb..cf24f3f4 100755
--- a/common/tools/fastboot_imx_flashall.sh
+++ b/common/tools/fastboot_imx_flashall.sh
@@ -76,17 +76,13 @@ options:
                         No need to use this option if images are in current working directory
   -s ser_num        the serial number of board
                         If only one board connected to computer, no need to use this option
-<<<<<<< HEAD
   -super            do not generate super.img when flash the images with dynamic partition feature enabled.
                         Under the condition that dynamic partition feature are enabled:
                           if this option is not used, super.img will be generated under "/tmp" and flashed to the board.
                           if this option is used, make sure super.img already exists together with other images.
-  -R                with this option used, choose the u-boot about 1GB RAM setting.
   -bdinfo board_info_file  flash board_info with this board_info_file image
                                If not set, use naming from current board_info partition
   -serial serialno_str  write serial number into device emmc, this could be program once in secure-user build
-=======
->>>>>>> android-11.0.0_1.0.0_history
 EOF
 
 }
@@ -212,7 +208,7 @@ function flash_partition_name
     product_partition="product"${1}
     vbmeta_partition="vbmeta"${1}
     dtbo_partition="dtbo"${1}
-<<<<<<< HEAD
+    vendor_boot_partition="vendor_boot"${1}
     mem_info_partition="mem_info"${1}
 }
 
@@ -273,7 +269,7 @@ function check_android_info
 
     if [ ! ${match_som} -eq 1 ]; then
         echo -e ${RED}${som_model} and values in android-info.txt are mismatched
-	exit 1
+        exit 1
     fi
 
     for val in `grep "mb_model=" ${image_directory}${android_info_file} |sed "s|^mb_model=||g" |sed "s|\|| |g"`;
@@ -285,9 +281,6 @@ function check_android_info
         echo -e ${RED}${mb_model} and values in android-info.txt are mismatched
         exit 1
     fi
-=======
-    vendor_boot_partition="vendor_boot"${1}
->>>>>>> android-11.0.0_1.0.0_history
 }
 
 function flash_android
@@ -326,7 +319,7 @@ function flash_android
         bootloader_flashed_to_board="spl-${soc_name}${ddr_type}${uboot_feature}.bin"
         uboot_proper_to_be_flashed="bootloader-${soc_name}${ddr_type}${uboot_feature}.img"
     else
-        bootloader_flashed_to_board="u-boot-${soc_name}${ddr_type}${ramsize}${uboot_feature}.imx"
+        bootloader_flashed_to_board="u-boot-${soc_name}${ddr_type}${uboot_feature}.imx"
     fi
 
     # in the source code, if AB slot feature is supported, uboot partition name is bootloader0, otherwise it's bootloader
@@ -460,16 +453,13 @@ support_dualslot=0
 support_mcu_os=0
 support_dual_bootloader=0
 support_dynamic_partition=0
-<<<<<<< HEAD
 support_board_info=0
 support_mem_info=0
 write_bdinfo_serial=0
 support_idt_dual_spl=0
 support_idt_backup_spl=0
 support_idt_spl_table=0
-=======
 support_vendor_boot=0
->>>>>>> android-11.0.0_1.0.0_history
 dual_bootloader_partition=""
 bootloader_flashed_to_board=""
 uboot_proper_to_be_flashed=""
@@ -484,13 +474,10 @@ vbmeta_partition="vbmeta"
 dtbo_partition="dtbo"
 mcu_os_partition="mcu_os"
 super_partition="super"
-<<<<<<< HEAD
 board_info_partition="board_info"
 mem_info_partition="mem_info"
 userdata_partition="userdata"
-=======
 vendor_boot_partition="vendor_boot"
->>>>>>> android-11.0.0_1.0.0_history
 flash_mcu=0
 lock=0
 erase=0
@@ -501,15 +488,10 @@ RED='[0;31m'
 STD='[0;0m'
 GREEN='[0;32m'
 result_value=0
-<<<<<<< HEAD
 dont_generate_super=0
 YELLOW='[0;33m'
-ramsize=""
-ramsizetest=0
 board_type=""
-=======
 
->>>>>>> android-11.0.0_1.0.0_history
 
 # We want to detect illegal feature input to some extent. Here it's based on SoC names. Since an SoC may be on a
 # board running different set of images(android and automative for a example), so misuse the features of one set of
@@ -551,13 +533,9 @@ while [ $# -gt 0 ]; do
         -l) lock=1 ;;
         -D) image_directory=$2; shift;;
         -s) ser_num=$2; shift;;
-<<<<<<< HEAD
         -super) dont_generate_super=1 ;;
-        -R) ramsizetest=1 ;;
         -bdinfo) board_info_file=$2; shift;;
         -serial) serialno_str=$2; write_bdinfo_serial=1; shift;;
-=======
->>>>>>> android-11.0.0_1.0.0_history
         *)  echo -e ${RED}$1${STD} is not an illegal option
             help; exit;;
     esac
@@ -620,11 +598,6 @@ if [[ "${ser_num}" != "" ]]; then
     fastboot_tool="fastboot -s ${ser_num}"
 fi
 
-# if ramsizetest is specified, assign 1GB RAM size
-if [ ${ramsizetest} -eq 1 ] ; then
-    ramsize="-ram1GB"
-fi
-
 # check whether provided spl/bootloader/uboot feature is legal
 if [ -n "${uboot_feature}" ]; then
     uboot_feature_no_pre_hyphen=${uboot_feature#-}
diff --git a/common/tools/imx-make.sh b/common/tools/imx-make.sh
index f95ab927..8a3f9d47 100755
--- a/common/tools/imx-make.sh
+++ b/common/tools/imx-make.sh
@@ -126,11 +126,7 @@ if [ -n "${build_kernel}" ] && [ ${TARGET_PRODUCT##*_} = "8mp" ]; then
     build_kernel_module_flag=1;
 fi
 
-<<<<<<< HEAD
 product_makefile=`pwd`/`find device/idtech -maxdepth 4 -name "${TARGET_PRODUCT}.mk"`;
-=======
-product_makefile=`pwd`/`find device/nxp -maxdepth 4 -name "${TARGET_PRODUCT}.mk"`;
->>>>>>> android-11.0.0_1.0.0_history
 product_path=${product_makefile%/*}
 soc_path=${product_path%/*}
 nxp_git_path=${soc_path%/*}
diff --git a/common/tools/update_kerenl_header.sh b/common/tools/update_kerenl_header.sh
index 9541f571..50887af1 100755
--- a/common/tools/update_kerenl_header.sh
+++ b/common/tools/update_kerenl_header.sh
@@ -2,20 +2,12 @@
 
 # usage: cd android_dir & ./common/tools/update_kerenl_header.sh
 # if user add imx special user header file, you can use below way to update:
-<<<<<<< HEAD
 # cd android_dir & touch device/idtech/common/kernel-headers/linux/new_uapi &
-=======
-# cd android_dir & touch device/nxp/common/kernel-headers/linux/new_uapi &
->>>>>>> android-11.0.0_1.0.0_history
 # ./common/tools/update_kerenl_header.sh
 
 bionic_uapi_tool_path="bionic/libc/kernel/tools"
 bionic_kernel_header_path="bionic/libc/kernel/uapi/linux"
-<<<<<<< HEAD
 imx_kernel_header_path="idtech"
-=======
-imx_kernel_header_path="device/nxp/common/kernel-headers/linux/"
->>>>>>> android-11.0.0_1.0.0_history
 
 function prepare_work
 {
@@ -43,11 +35,7 @@ ${bionic_uapi_tool_path}/update_all.py
 
 for file in $(ls ${imx_kernel_header_path})
 do
-<<<<<<< HEAD
     cp ${bionic_kernel_header_path}/$file device/idtech/common/kernel-headers/linux/.
-=======
-    cp ${bionic_kernel_header_path}/$file device/nxp/common/kernel-headers/linux/.
->>>>>>> android-11.0.0_1.0.0_history
 done
 
 clean_work
diff --git a/common/tools/uuu_imx_android_flash.bat b/common/tools/uuu_imx_android_flash.bat
index 8266c286..566ca536 100755
--- a/common/tools/uuu_imx_android_flash.bat
+++ b/common/tools/uuu_imx_android_flash.bat
@@ -46,27 +46,21 @@ set vendor_file=vendor.img
 set product_file=product.img
 set partition_file=partition-table.img
 set super_file=super.img
-<<<<<<< HEAD
 set spl_table_file=spl_tab.img
-=======
 set vendorboot_file=vendor_boot.img
->>>>>>> android-11.0.0_1.0.0_history
 set /A support_dtbo=0
 set /A support_recovery=0
 set /A support_dualslot=0
 set /A support_mcu_os=0
 set /A support_trusty=0
 set /A support_dynamic_partition=0
-<<<<<<< HEAD
 set /A support_board_info=0
 set /A support_mem_info=0
 set /A write_bdinfo_serial=0
 set /A support_idt_dual_spl=0
 set /A support_idt_backup_spl=0
 set /A support_idt_spl_table=0
-=======
 set /A support_vendor_boot=0
->>>>>>> android-11.0.0_1.0.0_history
 set boot_partition=boot
 set recovery_partition=recovery
 set system_partition=system
@@ -108,7 +102,6 @@ set dual_bootloader_partition=
 set /A daemon_mode=0
 set /A flag=1
 set /A dryrun=0
-<<<<<<< HEAD
 set lpmake_system_image_a=
 set lpmake_system_image_b=
 set lpmake_vendor_image_a=
@@ -118,13 +111,11 @@ set lpmake_product_image_b=
 set /A dont_generate_super=0
 set board_type=
 set max_download_size=0x19000000
-=======
 set tmp_dir=%TMP%
 if not [%tmp_dir%] == [] (
     set tmp_dir=%tmp_dir%\
 )
 
->>>>>>> android-11.0.0_1.0.0_history
 
 :: We want to detect illegal feature input to some extent. Here it's based on SoC names. Since an SoC may be on a
 :: board running different set of images(android and automative for a example), so misuse the features of one set of
@@ -174,12 +165,9 @@ if %1 == -y set yocto_image=%2&shift &shift & goto :parse_loop
 if %1 == -i set /A intervene=1 & shift & goto :parse_loop
 if %1 == -daemon set /A daemon_mode=1 & shift & goto :parse_loop
 if %1 == -dryrun set /A dryrun=1 & shift & goto :parse_loop
-<<<<<<< HEAD
 if %1 == -super set /A dont_generate_super=1 & shift & goto :parse_loop
 if %1 == -bdinfo set board_info_file=%2& shift & shift & goto :parse_loop
 if %1 == -serial set serialno_str=%2& set /A write_bdinfo_serial=1& shift & shift & goto :parse_loop
-=======
->>>>>>> android-11.0.0_1.0.0_history
 echo unknown option "%1", please check it.
 call :help & set /A error_level=1 && goto :exit
 :parse_end
@@ -287,15 +275,11 @@ for /f "delims=" %%J in (%tmp_dir%partition-table_2.txt) do (
 )
 
 :: check whether there is "bootloader_b" in partition file
-<<<<<<< HEAD
-find "b.o.o.t.l.o.a.d.e.r._.b." partition-table_3.txt > nul && set /A support_dual_bootloader=1 && echo dual bootloader is supported
+find "b.o.o.t.l.o.a.d.e.r._.b." %tmp_dir%partition-table_3.txt > nul && set /A support_dual_bootloader=1 && echo dual bootloader is supported
 :: check whether there is "board_info" in partition file
-find "b.o.a.r.d._.i.n.f.o." partition-table_3.txt > nul && set /A support_board_info=1 && echo board_info is supported
+find "b.o.a.r.d._.i.n.f.o." %tmp_dir%partition-table_3.txt > nul && set /A support_board_info=1 && echo board_info is supported
 :: check whether there is "mem_info" in partition file
-find "m.e.m._.i.n.f.o." partition-table_3.txt > nul && set /A support_mem_info=1 && echo mem_info is supported
-=======
-find "b.o.o.t.l.o.a.d.e.r._.b." %tmp_dir%partition-table_3.txt > nul && set /A support_dual_bootloader=1 && echo dual bootloader is supported
->>>>>>> android-11.0.0_1.0.0_history
+find "m.e.m._.i.n.f.o." %tmp_dir%partition-table_3.txt > nul && set /A support_mem_info=1 && echo mem_info is supported
 :: check whether there is "dtbo" in partition file
 find "d.t.b.o." %tmp_dir%partition-table_3.txt > nul && set /A support_dtbo=1 && echo dtbo is supported
 :: check whether there is "recovery" in partition file
@@ -583,15 +567,11 @@ if %erase% == 1 (
     if %support_recovery% == 1 (
         echo FB[-t 600000]: erase cache>> %tmp_dir%uuu.lst
     )
-<<<<<<< HEAD
     if EXIST %image_directory%%userdata_file% (
         call :flash_partition %userdata_partition% || set /A error_level=1 && goto :exit
     ) else (
-        echo FB[-t 600000]: erase userdata>> uuu.lst
+        echo FB[-t 600000]: erase userdata>> %tmp_dir%uuu.lst
     )
-=======
-    echo FB[-t 600000]: erase userdata>> %tmp_dir%uuu.lst
->>>>>>> android-11.0.0_1.0.0_history
 )
 
 echo FB: done >> %tmp_dir%uuu.lst
@@ -606,19 +586,11 @@ IF EXIST %image_directory%%uuu_tool% (
     set uuu_tool=%image_directory%%uuu_tool%
 )
 if %daemon_mode% equ 1 (
-<<<<<<< HEAD
-    %uuu_tool% -d uuu.lst
-) else (
-    %uuu_tool% uuu.lst
-    del *.link
-    del uuu.lst
-=======
-    uuu -d %tmp_dir%uuu.lst
+    %uuu_tool% -d %tmp_dir%uuu.lst
 ) else (
-    uuu %tmp_dir%uuu.lst
+    %uuu_tool% %tmp_dir%uuu.lst
     del %tmp_dir%*.link
     del %tmp_dir%uuu.lst
->>>>>>> android-11.0.0_1.0.0_history
 )
 
 
@@ -714,15 +686,12 @@ echo  -i                with this option used, after uboot for uuu loaded and ex
 echo                        This option is for users to manually flash the images to partitions they want to
 echo  -daemon           after uuu script generated, uuu will be invoked with daemon mode. It is used for flash multi boards
 echo  -dryrun           only generate the uuu script under /tmp direcbory but not flash images
-<<<<<<< HEAD
 echo  -super            do not generate super.img when flash the images with dynamic partition feature enabled.
 echo                        Under the condition that dynamic partition feature are enabled:
 echo                          if this option is not used, super.img will be generated under current working directory and flashed to the board.
 echo                          if this option is used, make sure super.img already exists together with other images.
 echo  -bdinfo board_info_file  flash board_info with this board_info_file image
 echo  -serial serialno_str  write serial number into device emmc, this could be program once in secure-user build
-=======
->>>>>>> android-11.0.0_1.0.0_history
 goto :eof
 
 
@@ -768,11 +737,7 @@ if [%board%] == [] (
 goto :eof
 
 :uuu_load_uboot
-<<<<<<< HEAD
-echo uuu_version %uuu_version% > uuu.lst
-=======
-echo uuu_version 1.3.74 > %tmp_dir%uuu.lst
->>>>>>> android-11.0.0_1.0.0_history
+echo uuu_version %uuu_version% > %tmp_dir%uuu.lst
 
 if exist %tmp_dir%%bootloader_used_by_uuu%.link (
     del %tmp_dir%%bootloader_used_by_uuu%.link
@@ -808,16 +773,11 @@ if [%target_dev%] == [emmc] (
 
 if %intervene% == 1 (
 :: in fact, it's not an error, but to align the behaviour of cmd and powershell, a non-zero error value is used.
-<<<<<<< HEAD
     IF EXIST %image_directory%%uuu_tool% (
         set uuu_tool=%image_directory%%uuu_tool%
     )
-    echo FB: done >> uuu.lst
-    %uuu_tool% uuu.lst
-=======
     echo FB: done >> %tmp_dir%uuu.lst
-    uuu %tmp_dir%uuu.lst
->>>>>>> android-11.0.0_1.0.0_history
+    %uuu_tool% %tmp_dir%uuu.lst
     set /A error_level=1 && goto :exit
 )
 
@@ -907,6 +867,9 @@ if not [%partition_to_be_flashed:bootloader=%] == [%partition_to_be_flashed%] (
     goto :start_to_flash
 )
 if not [%partition_to_be_flashed:super=%] == [%partition_to_be_flashed%] (
+    if %dont_generate_super% == 0 (
+        call :make_super_image
+    )
     set img_name=%super_file%
     set flash_option=-S %max_download_size%
     goto :start_to_flash
@@ -940,30 +903,15 @@ if not [%partition_to_be_flashed:userdata=%] == [%partition_to_be_flashed%] (
 
 :start_to_flash
 echo generate lines to flash %img_name% to the partition of %1
-<<<<<<< HEAD
-if [%img_name%] == [%super_file%] (
-    if %dont_generate_super% == 0 (
-        echo FB[-t 600000]: flash %flash_option% %1 %img_name% >> uuu.lst
-    ) else (
-        if exist %img_name%.link (
-            del %img_name%.link
-        )
-        cmd /c mklink %img_name%.link %image_directory%%img_name% > nul
-        echo FB[-t 600000]: flash %flash_option% %1 %img_name%.link >> uuu.lst
-    )
-) else (
-    if exist %img_name%.link (
-        del %img_name%.link
-    )
-    cmd /c mklink %img_name%.link %image_directory%%img_name% > nul
-    echo FB[-t 600000]: flash %1 %img_name%.link >> uuu.lst
-=======
 if exist %tmp_dir%%img_name%.link (
     del %tmp_dir%%img_name%.link
->>>>>>> android-11.0.0_1.0.0_history
 )
 cmd /c mklink %tmp_dir%%img_name%.link %image_directory%%img_name% > nul
-echo FB[-t 600000]: flash %1 %img_name%.link >> %tmp_dir%uuu.lst
+if [%img_name%] == [%super_file%] (
+    echo FB[-t 600000]: flash %flash_option% %1 %img_name%.link >> %tmp_dir%uuu.lst
+) else (
+    echo FB[-t 600000]: flash %1 %img_name%.link >> %tmp_dir%uuu.lst
+)
 goto :eof
 
 
@@ -1073,6 +1021,7 @@ IF NOT [%match_mb%] GEQ [1] (
 goto :eof
 
 :flash_android
+
 :: if dual bootloader is supported, the name of the bootloader flashed to the board need to be updated
 if %support_dual_bootloader% == 1 (
     set bootloader_flashed_to_board=spl-%soc_name%%ddr_type%%uboot_feature%.bin
@@ -1161,7 +1110,7 @@ if %support_dynamic_partition% == 1 (
 )
 
 if %write_bdinfo_serial% == 1 (
-    echo FB: oem setvar dev-serial %serialno_str% >> uuu.lst
+    echo FB: oem setvar dev-serial %serialno_str% >> %tmp_dir%uuu.lst
 )
 
 goto :eof
@@ -1185,6 +1134,45 @@ if not [!dec!] == [0] (
 echo !hex!
 goto :eof
 
+:: this function will invoke lpmake to create super.img, the super.img will
+:: be created in current directory
+:make_super_image
+if exist %super_file% (
+    del %super_file%
+)
+:: now dynamic partition is only enabled in dual slot condition
+if %support_dualslot% == 1 (
+    setlocal enabledelayedexpansion
+    if [%slot%] == [_a] (
+        set lpmake_system_image_a=--image system_a=%image_directory%%systemimage_file%
+        set lpmake_vendor_image_a=--image vendor_a=%image_directory%%vendor_file%
+        set lpmake_product_image_a=--image product_a=%image_directory%%product_file%
+    )
+    if [%slot%] == [_b] (
+        set lpmake_system_image_b=--image system_b=%image_directory%%systemimage_file%
+        set lpmake_vendor_image_b=--image vendor_b=%image_directory%%vendor_file%
+        set lpmake_product_image_b=--image product_b=%image_directory%%product_file%
+    )
+    if [%slot%] == [] (
+        set lpmake_system_image_a=--image system_a=%image_directory%%systemimage_file%
+        set lpmake_vendor_image_a=--image vendor_a=%image_directory%%vendor_file%
+        set lpmake_product_image_a=--image product_a=%image_directory%%product_file%
+        set lpmake_system_image_b=--image system_b=%image_directory%%systemimage_file%
+        set lpmake_vendor_image_b=--image vendor_b=%image_directory%%vendor_file%
+        set lpmake_product_image_b=--image product_b=%image_directory%%product_file%
+    )
+    %image_directory%lpmake.exe --metadata-size 65536 --super-name super --metadata-slots 3 --device super:7516192768 ^
+        --group nxp_dynamic_partitions_a:3747610624 --group nxp_dynamic_partitions_b:3747610624 ^
+        --partition system_a:readonly:0:nxp_dynamic_partitions_a !lpmake_system_image_a! ^
+        --partition system_b:readonly:0:nxp_dynamic_partitions_b !lpmake_system_image_b! ^
+        --partition vendor_a:readonly:0:nxp_dynamic_partitions_a !lpmake_vendor_image_a! ^
+        --partition vendor_b:readonly:0:nxp_dynamic_partitions_b !lpmake_vendor_image_b! ^
+        --partition product_a:readonly:0:nxp_dynamic_partitions_a !lpmake_product_image_a! ^
+        --partition product_b:readonly:0:nxp_dynamic_partitions_b !lpmake_product_image_b! ^
+        --sparse --output !super_file!
+)
+
+goto :eof
 
 :exit
 exit /B %error_level%
diff --git a/common/tools/uuu_imx_android_flash.sh b/common/tools/uuu_imx_android_flash.sh
index 48267bfd..5d6d8e7a 100755
--- a/common/tools/uuu_imx_android_flash.sh
+++ b/common/tools/uuu_imx_android_flash.sh
@@ -83,10 +83,8 @@ options:
                         including the name of yocto sdcard image, this parameter could be a relative path or an absolute path
   -i                with this option used, after uboot for uuu loaded and executed to fastboot mode with target device chosen, this script will stop
                         This option is for users to manually flash the images to partitions they want to
-  -R                with this option used, choose the u-boot about 1GB RAM setting.
   -daemon           after uuu script generated, uuu will be invoked with daemon mode. It is used for flash multi boards
   -dryrun           only generate the uuu script under /tmp direcbory but not flash images
-<<<<<<< HEAD
   -super            do not generate super.img when flash the images with dynamic partition feature enabled.
                        Under the condition that dynamic partition feature are enabled:
                          if this option is not used, super.img will be generated under "/tmp" and flashed to the board.
@@ -94,8 +92,6 @@ options:
   -bdinfo board_info_file  flash board_info with this board_info_file image
                                If not set, use naming from current board_info partition
   -serial serialno_str  write serial number into device emmc, this could be program once in secure-user build
-=======
->>>>>>> android-11.0.0_1.0.0_history
 EOF
 
 }
@@ -203,6 +199,9 @@ function flash_partition
     elif [ "$(echo ${1} | grep "userdata")" != "" ]; then
         img_name=${userdata_file}
     elif [ "$(echo ${1} | grep "super")" != "" ]; then
+        if [ ${dont_generate_super} -eq 0 ]; then
+            make_super_image
+        fi
         img_name=${super_file}
         flash_option="-S ${max_download_size}"
     else
@@ -210,17 +209,9 @@ function flash_partition
     fi
 
     echo -e generate lines to flash ${RED}${img_name}${STD} to the partition of ${RED}${1}${STD}
-<<<<<<< HEAD
-    if [ "${img_name}" != "${super_file}" ] || [ ${dont_generate_super} -eq 1 ]; then
-        rm -f /tmp/${img_name}
-        ln -s ${sym_link_directory}${img_name} /tmp/${img_name}
-    fi
-    echo FB[-t 600000]: flash ${flash_option} ${1} ${img_name} >> /tmp/uuu.lst
-=======
     rm -f /tmp/${img_name}
     ln -s ${sym_link_directory}${img_name} /tmp/${img_name}
-    echo FB[-t 600000]: flash ${1} ${img_name} >> /tmp/uuu.lst
->>>>>>> android-11.0.0_1.0.0_history
+    echo FB[-t 600000]: flash ${flash_option} ${1} ${img_name} >> /tmp/uuu.lst
 }
 
 function flash_userpartitions
@@ -435,6 +426,42 @@ function flash_android
     fi
 }
 
+# this function will invoke lpmake to create super.img, the super.img will
+# be created in /tmp, make sure that there is enouth space
+function make_super_image
+{
+    rm -rf /tmp/${super_file}
+    # now dynamic partition is only enabled in dual slot condition
+    if [ ${support_dualslot} -eq 1 ]; then
+        if [ "${slot}" == "_a" ]; then
+            lpmake_system_image_a="--image system_a=${sym_link_directory}${systemimage_file}"
+            lpmake_vendor_image_a="--image vendor_a=${sym_link_directory}${vendor_file}"
+            lpmake_product_image_a="--image product_a=${sym_link_directory}${product_file}"
+        elif [ "${slot}" == "_b" ]; then
+            lpmake_system_image_b="--image system_b=${sym_link_directory}${systemimage_file}"
+            lpmake_vendor_image_b="--image vendor_b=${sym_link_directory}${vendor_file}"
+            lpmake_product_image_b="--image product_b=${sym_link_directory}${product_file}"
+        else
+            lpmake_system_image_a="--image system_a=${sym_link_directory}${systemimage_file}"
+            lpmake_vendor_image_a="--image vendor_a=${sym_link_directory}${vendor_file}"
+            lpmake_product_image_a="--image product_a=${sym_link_directory}${product_file}"
+            lpmake_system_image_b="--image system_b=${sym_link_directory}${systemimage_file}"
+            lpmake_vendor_image_b="--image vendor_b=${sym_link_directory}${vendor_file}"
+            lpmake_product_image_b="--image product_b=${sym_link_directory}${product_file}"
+        fi
+    fi
+
+        ${sym_link_directory}lpmake --metadata-size 65536 --super-name super --metadata-slots 3 --device super:7516192768 \
+            --group nxp_dynamic_partitions_a:3747610624 --group nxp_dynamic_partitions_b:3747610624 \
+            --partition system_a:readonly:0:nxp_dynamic_partitions_a ${lpmake_system_image_a} \
+            --partition system_b:readonly:0:nxp_dynamic_partitions_b ${lpmake_system_image_b} \
+            --partition vendor_a:readonly:0:nxp_dynamic_partitions_a ${lpmake_vendor_image_a} \
+            --partition vendor_b:readonly:0:nxp_dynamic_partitions_b ${lpmake_vendor_image_b} \
+            --partition product_a:readonly:0:nxp_dynamic_partitions_a ${lpmake_product_image_a} \
+            --partition product_b:readonly:0:nxp_dynamic_partitions_b ${lpmake_product_image_b} \
+            --sparse --output /tmp/${super_file}
+}
+
 # parse command line
 som_model=""
 som_plc=""
@@ -469,16 +496,13 @@ support_dualslot=0
 support_mcu_os=0
 support_trusty=0
 support_dynamic_partition=0
-<<<<<<< HEAD
 support_board_info=0
 support_mem_info=0
 write_bdinfo_serial=0
 support_idt_dual_spl=0
 support_idt_backup_spl=0
 support_idt_spl_table=0
-=======
 support_vendor_boot=0
->>>>>>> android-11.0.0_1.0.0_history
 boot_partition="boot"
 recovery_partition="recovery"
 system_partition="system"
@@ -524,15 +548,16 @@ sym_link_directory=""
 yocto_image_sym_link=""
 daemon_mode=0
 dryrun=0
+lpmake_system_image_a=""
+lpmake_system_image_b=""
+lpmake_vendor_image_a=""
+lpmake_vendor_image_b=""
+lpmake_product_image_a=""
+lpmake_product_image_b=""
 result_value=0
-<<<<<<< HEAD
 dont_generate_super=0
-ramsize=""
-ramsizetest=0
 board_type=""
 max_download_size=0x19000000
-=======
->>>>>>> android-11.0.0_1.0.0_history
 
 # We want to detect illegal feature input to some extent. Here it's based on SoC names. Since an SoC may be on a
 # board running different set of images(android and automative for a example), so misuse the features of one set of
@@ -579,15 +604,11 @@ while [ $# -gt 0 ]; do
         -y) yocto_image=$2; shift;;
         -p) board=$2; shift;;
         -i) intervene=1 ;;
-        -R) ramsizetest=1 ;;
         -daemon) daemon_mode=1 ;;
         -dryrun) dryrun=1 ;;
-<<<<<<< HEAD
         -super) dont_generate_super=1 ;;
         -bdinfo) board_info_file=$2; shift;;
         -serial) serialno_str=$2; write_bdinfo_serial=1; shift;;
-=======
->>>>>>> android-11.0.0_1.0.0_history
         *)  echo -e >&2 ${RED}the option \"${1}\"  you specified is not supported, please check it${STD}
             help; exit;;
     esac
@@ -634,11 +655,6 @@ if [ ${intervene} -eq 1 ] && [ ${daemon_mode} -eq 1 ]; then
     echo -daemon mode will be igonred
 fi
 
-# if ramsizetest is specified, assign 1GB RAM size
-if [ ${ramsizetest} -eq 1 ] ; then
-    ramsize="-ram1GB"
-fi
-
 # for specified directory, make sure there is a slash at the end
 if [[ "${image_directory}" != "" ]]; then
      image_directory="${image_directory%/}/";
@@ -862,7 +878,7 @@ if [ "${som_model}" = "imx8mn" ] && [ "${mb_model}" = "evk" ]; then
 fi
 # default bootloader image name
 bootloader_used_by_uuu=u-boot-${soc_name}${ddr_type}-${board}-uuu-${dev_ddr}${is_signed}.imx
-bootloader_flashed_to_board="u-boot-${soc_name}${ddr_type}${ramsize}${uboot_feature}.imx"
+bootloader_flashed_to_board="u-boot-${soc_name}${ddr_type}${uboot_feature}.imx"
 
 # find the names of the bootloader used by uuu
 if [ "${soc_name}" = imx8mm ] || [ "${soc_name}" = imx8mn ]; then
diff --git a/imx8m/BoardConfigCommon.mk b/imx8m/BoardConfigCommon.mk
index 4c5e4473..aa8ef5bd 100644
--- a/imx8m/BoardConfigCommon.mk
+++ b/imx8m/BoardConfigCommon.mk
@@ -113,19 +113,13 @@ BOARD_GPU_LIBDRM := libdrm_imx
 
 AB_OTA_UPDATER := true
 ifeq ($(IMX_NO_PRODUCT_PARTITION),true)
-<<<<<<< HEAD
-AB_OTA_PARTITIONS := dtbo boot system vendor vbmeta bootloader spl mem_info
-else
-AB_OTA_PARTITIONS := dtbo boot system vendor vbmeta product bootloader spl mem_info
-=======
-AB_OTA_PARTITIONS += dtbo boot system system_ext vendor vbmeta
+AB_OTA_PARTITIONS := dtbo boot system system_ext vendor vbmeta bootloader spl mem_info
 else
 ifeq ($(TARGET_USE_VENDOR_BOOT),true)
-AB_OTA_PARTITIONS += dtbo boot vendor_boot system system_ext vendor vbmeta product
+AB_OTA_PARTITIONS += dtbo boot vendor_boot system system_ext vendor vbmeta product bootloader spl mem_info
 else
-AB_OTA_PARTITIONS += dtbo boot system system_ext vendor vbmeta product
+AB_OTA_PARTITIONS += dtbo boot system system_ext vendor vbmeta product bootloader spl mem_info
 endif
->>>>>>> android-11.0.0_1.0.0_history
 endif
 TARGET_NO_RECOVERY := true
 BOARD_USES_RECOVERY_AS_BOOT := true
@@ -133,13 +127,10 @@ TARGET_RECOVERY_PIXEL_FORMAT := "RGBX_8888"
 
 BOARD_DTBOIMG_PARTITION_SIZE := 4194304
 BOARD_BOOTIMAGE_PARTITION_SIZE := 67108864
-<<<<<<< HEAD
 BOARD_VBMETAIMAGE_PARTITION_SIZE := 1048576
-=======
 ifeq ($(TARGET_USE_VENDOR_BOOT),true)
 BOARD_VENDOR_BOOTIMAGE_PARTITION_SIZE := 67108864
 endif
->>>>>>> android-11.0.0_1.0.0_history
 
 BOARD_VENDORIMAGE_FILE_SYSTEM_TYPE = ext4
 TARGET_COPY_OUT_VENDOR := vendor
@@ -185,13 +176,9 @@ ifeq ($(TARGET_USE_DYNAMIC_PARTITIONS),true)
 
   endif
 else
-<<<<<<< HEAD
-  BOARD_VENDORIMAGE_PARTITION_SIZE := 536870912
-=======
   BOARD_BUILD_SYSTEM_ROOT_IMAGE := true
   BOARD_VENDORIMAGE_PARTITION_SIZE := 671088640
   BOARD_SYSTEM_EXTIMAGE_PARTITION_SIZE := 134217728
->>>>>>> android-11.0.0_1.0.0_history
   ifeq ($(IMX_NO_PRODUCT_PARTITION),true)
     BOARD_SYSTEMIMAGE_PARTITION_SIZE := 2952790016
   else
diff --git a/imx8m/ProductConfigCommon.mk b/imx8m/ProductConfigCommon.mk
index d8654116..f7b239bb 100644
--- a/imx8m/ProductConfigCommon.mk
+++ b/imx8m/ProductConfigCommon.mk
@@ -22,11 +22,6 @@ PRODUCT_MANUFACTURER := nxp
 ifneq (user,$(TARGET_BUILD_VARIANT))
 PRODUCT_PACKAGES += \
     SystemUpdaterSample \
-<<<<<<< HEAD
-=======
-    charger_res_images \
-    charger \
->>>>>>> android-11.0.0_1.0.0_history
     ethernet \
     CubeLiveWallpapers
 ifneq ($(PRODUCT_IMX_CAR),true)
@@ -50,6 +45,7 @@ PRODUCT_PACKAGES += \
     CactusPlayer \
     ExtractorPkg \
     charger_res_images \
+    charger \
     libGLES_android \
     libRS \
     libedid \
@@ -137,18 +133,14 @@ PRODUCT_PACKAGES += \
     camera.device@3.2-impl
 endif
 
-# health
 PRODUCT_PACKAGES += \
-<<<<<<< HEAD
     android.hardware.fastboot@1.0-impl-mock \
     fastboot.default
 
+# health
 PRODUCT_PACKAGES += \
-    android.hardware.health@2.0-service.imx
-=======
     android.hardware.health@2.1-service \
     android.hardware.health@2.1-impl-imx
->>>>>>> android-11.0.0_1.0.0_history
 
 # display
 PRODUCT_PACKAGES += \
@@ -169,11 +161,7 @@ PRODUCT_PACKAGES += \
     gmem_info \
     gpu-top
 
-<<<<<<< HEAD
 # Omx related libs, please align to device/idtech/proprietary/omx/fsl-omx.mk
-=======
-# Omx related libs, please align to device/nxp/proprietary/omx/fsl-omx.mk
->>>>>>> android-11.0.0_1.0.0_history
 PRODUCT_PACKAGES += \
     lib_aac_dec_v2_arm12_elinux \
     lib_aacd_wrap_arm12_elinux_android \
@@ -261,30 +249,16 @@ PRODUCT_PACKAGES += \
 
 # Copy soc related config and binary to board
 PRODUCT_COPY_FILES += \
-<<<<<<< HEAD
-    $(FSL_PROPRIETARY_PATH)/fsl-proprietary/media-profile/media_codecs_google_c2_audio.xml:$(TARGET_COPY_OUT_VENDOR)/etc/media_codecs_google_c2_audio.xml \
-    $(FSL_PROPRIETARY_PATH)/fsl-proprietary/media-profile/media_codecs_google_c2_telephony.xml:$(TARGET_COPY_OUT_VENDOR)/etc/media_codecs_google_c2_telephony.xml \
-    $(FSL_PROPRIETARY_PATH)/fsl-proprietary/media-profile/media_codecs_google_c2_tv.xml:$(TARGET_COPY_OUT_VENDOR)/etc/media_codecs_google_c2_tv.xml \
-    $(FSL_PROPRIETARY_PATH)/fsl-proprietary/media-profile/media_profiles_720p.xml:$(TARGET_COPY_OUT_VENDOR)/etc/media_profiles_720p.xml \
     device/idtech/common/input/Dell_Dell_USB_Entry_Keyboard.idc:$(TARGET_COPY_OUT_VENDOR)/usr/idc/Dell_Dell_USB_Entry_Keyboard.idc \
     device/idtech/common/input/Dell_Dell_USB_Keyboard.idc:$(TARGET_COPY_OUT_VENDOR)/usr/idc/Dell_Dell_USB_Keyboard.idc \
     device/idtech/common/input/Dell_Dell_USB_Keyboard.kl:$(TARGET_COPY_OUT_VENDOR)/usr/keylayout/Dell_Dell_USB_Keyboard.kl \
     device/idtech/common/input/eGalax_Touch_Screen.idc:$(TARGET_COPY_OUT_VENDOR)/usr/idc/HannStar_P1003_Touchscreen.idc \
     device/idtech/common/input/eGalax_Touch_Screen.idc:$(TARGET_COPY_OUT_VENDOR)/usr/idc/Novatek_NT11003_Touch_Screen.idc \
     device/idtech/common/input/eGalax_Touch_Screen.idc:$(TARGET_COPY_OUT_VENDOR)/usr/idc/eGalax_Touch_Screen.idc \
-    device/idtech/common/input/matrix-keypad.kl:$(TARGET_COPY_OUT_VENDOR)/usr/keylayout/matrix-keypad.kl: \
     device/idtech/imx8m/com.example.android.systemupdatersample.xml:$(TARGET_COPY_OUT_SYSTEM)/etc/permissions/com.example.android.systemupdatersample.xml \
+    device/idtech/common/input/matrix-keypad.kl:$(TARGET_COPY_OUT_VENDOR)/usr/keylayout/matrix-keypad.kl: \
     device/idtech/common/input/touchscreen/FW_TDDI_TRUNK_FB.ili:$(TARGET_COPY_OUT_VENDOR)/usr/tp/ili/FW_TDDI_TRUNK_FB.ili \
     device/idtech/common/input/touchscreen/TM050JYHS11_TM_500_20190614.hex:$(TARGET_COPY_OUT_VENDOR)/usr/tp/ili/TM050JYHS11_TM_500_20190614 \
-=======
-    device/nxp/common/input/Dell_Dell_USB_Entry_Keyboard.idc:$(TARGET_COPY_OUT_VENDOR)/usr/idc/Dell_Dell_USB_Entry_Keyboard.idc \
-    device/nxp/common/input/Dell_Dell_USB_Keyboard.idc:$(TARGET_COPY_OUT_VENDOR)/usr/idc/Dell_Dell_USB_Keyboard.idc \
-    device/nxp/common/input/Dell_Dell_USB_Keyboard.kl:$(TARGET_COPY_OUT_VENDOR)/usr/keylayout/Dell_Dell_USB_Keyboard.kl \
-    device/nxp/common/input/eGalax_Touch_Screen.idc:$(TARGET_COPY_OUT_VENDOR)/usr/idc/HannStar_P1003_Touchscreen.idc \
-    device/nxp/common/input/eGalax_Touch_Screen.idc:$(TARGET_COPY_OUT_VENDOR)/usr/idc/Novatek_NT11003_Touch_Screen.idc \
-    device/nxp/common/input/eGalax_Touch_Screen.idc:$(TARGET_COPY_OUT_VENDOR)/usr/idc/eGalax_Touch_Screen.idc \
-    device/nxp/imx8m/com.example.android.systemupdatersample.xml:$(TARGET_COPY_OUT_SYSTEM)/etc/permissions/com.example.android.systemupdatersample.xml \
->>>>>>> android-11.0.0_1.0.0_history
     frameworks/av/services/audiopolicy/config/a2dp_audio_policy_configuration.xml:$(TARGET_COPY_OUT_VENDOR)/etc/a2dp_audio_policy_configuration.xml \
     frameworks/av/services/audiopolicy/config/audio_policy_volumes.xml:$(TARGET_COPY_OUT_VENDOR)/etc/audio_policy_volumes.xml \
     frameworks/av/services/audiopolicy/config/default_volume_tables.xml:$(TARGET_COPY_OUT_VENDOR)/etc/default_volume_tables.xml \
@@ -326,11 +300,7 @@ PRODUCT_PROPERTY_OVERRIDES += \
 PRODUCT_TAGS += dalvik.gc.type-precise
 
 PRODUCT_DEFAULT_DEV_CERTIFICATE := \
-<<<<<<< HEAD
     device/idtech/common/security/testkey
-=======
-    device/nxp/common/security/testkey
->>>>>>> android-11.0.0_1.0.0_history
 
 # In userdebug, add minidebug info the the boot image and the system server to support
 # diagnosing native crashes.
@@ -378,10 +348,8 @@ include frameworks/native/build/tablet-10in-xhdpi-2048-dalvik-heap.mk
 
 PREBUILT_FSL_IMX_CODEC := true
 
-<<<<<<< HEAD
+PRODUCT_SOONG_NAMESPACES += external/mesa3d
+
 # IDT common properties
 PRODUCT_PROPERTY_OVERRIDES += \
     persist.idt.enable_externalsource=0
-=======
-PRODUCT_SOONG_NAMESPACES += external/mesa3d
->>>>>>> android-11.0.0_1.0.0_history
diff --git a/imx8m/evk_8mn/evk_8mn.mk b/imx8m/evk_8mn/evk_8mn.mk
index d8d5a7fc..07debe31 100644
--- a/imx8m/evk_8mn/evk_8mn.mk
+++ b/imx8m/evk_8mn/evk_8mn.mk
@@ -81,22 +81,14 @@ PRODUCT_COPY_FILES += \
     $(IMX_DEVICE_PATH)/required_hardware.xml:$(TARGET_COPY_OUT_VENDOR)/etc/permissions/required_hardware.xml \
     $(IMX_DEVICE_PATH)/ueventd.nxp.rc:$(TARGET_COPY_OUT_VENDOR)/ueventd.rc \
     $(LINUX_FIRMWARE_IMX_PATH)/linux-firmware-imx/firmware/sdma/sdma-imx7d.bin:$(TARGET_COPY_OUT_VENDOR)/firmware/imx/sdma/sdma-imx7d.bin \
-<<<<<<< HEAD
-    device/fsl/common/init/init.insmod.sh:$(TARGET_COPY_OUT_VENDOR)/bin/init.insmod.sh \
-    device/fsl/common/wifi/p2p_supplicant_overlay.conf:$(TARGET_COPY_OUT_VENDOR)/etc/wifi/p2p_supplicant_overlay.conf \
-    device/fsl/common/wifi/bcm_wpa_supplicant_overlay.conf:$(TARGET_COPY_OUT_VENDOR)/etc/wifi/wpa_supplicant_overlay.conf
-
-ifeq ($(TARGET_USE_DYNAMIC_PARTITIONS),true)
-=======
     device/nxp/common/init/init.insmod.sh:$(TARGET_COPY_OUT_VENDOR)/bin/init.insmod.sh \
     device/nxp/common/wifi/p2p_supplicant_overlay.conf:$(TARGET_COPY_OUT_VENDOR)/etc/wifi/p2p_supplicant_overlay.conf \
-    device/nxp/common/wifi/wpa_supplicant_overlay.conf:$(TARGET_COPY_OUT_VENDOR)/etc/wifi/wpa_supplicant_overlay.conf
+    device/nxp/common/wifi/bcm_wpa_supplicant_overlay.conf:$(TARGET_COPY_OUT_VENDOR)/etc/wifi/wpa_supplicant_overlay.conf
 
 # We load the fstab from device tree so this is not needed, but since no kernel modules are installed to vendor
 # boot ramdisk so far, we need this step to generate the vendor-ramdisk folder or build process would fail. This
 # can be deleted once we figure out what kernel modules should be put into the vendor boot ramdisk.
 ifeq ($(TARGET_USE_VENDOR_BOOT),true)
->>>>>>> android-11.0.0_1.0.0_history
 PRODUCT_COPY_FILES += \
     $(IMX_DEVICE_PATH)/fstab.nxp:$(TARGET_COPY_OUT_VENDOR_RAMDISK)/first_stage_ramdisk/fstab.nxp
 endif
@@ -282,23 +274,16 @@ PRODUCT_PACKAGES += \
     wifilogd \
     wificond
 
-<<<<<<< HEAD
 # BCM 1MW Wifi Firmware
 PRODUCT_COPY_FILES += \
     vendor/nxp/imx-firmware/cyw-wifi-bt/1MW_CYW43455/brcmfmac43455-sdio.bin:$(TARGET_COPY_OUT_VENDOR)/firmware/brcm/brcmfmac43455-sdio.bin \
     vendor/nxp/imx-firmware/cyw-wifi-bt/1MW_CYW43455/brcmfmac43455-sdio.clm_blob:$(TARGET_COPY_OUT_VENDOR)/firmware/brcm/brcmfmac43455-sdio.clm_blob \
     vendor/nxp/imx-firmware/cyw-wifi-bt/1MW_CYW43455/brcmfmac43455-sdio.txt:$(TARGET_COPY_OUT_VENDOR)/firmware/brcm/brcmfmac43455-sdio.txt
-=======
+
 # WiFi RROs
 PRODUCT_PACKAGES += \
     WifiOverlay
 
-# NXP 8987 Wifi and Bluetooth Combo Firmware
-PRODUCT_COPY_FILES += \
-    vendor/nxp/imx-firmware/nxp/FwImage_8987/sdiouart8987_combo_v0.bin:vendor/firmware/sdiouart8987_combo_v0.bin \
-    vendor/nxp/imx-firmware/nxp/android_wifi_mod_para.conf:vendor/firmware/wifi_mod_para_sd8987.conf
->>>>>>> android-11.0.0_1.0.0_history
-
 # Wifi regulatory
 PRODUCT_COPY_FILES += \
     external/wireless-regdb/regulatory.db:vendor/firmware/regulatory.db \
diff --git a/imx8m/evk_8mn/init.rc b/imx8m/evk_8mn/init.rc
index 1534ea09..5697bc75 100644
--- a/imx8m/evk_8mn/init.rc
+++ b/imx8m/evk_8mn/init.rc
@@ -111,15 +111,9 @@ on early-boot && property:vendor.skip.charger_not_need=0
     write /sys/block/mmcblk1/queue/read_ahead_kb 2048
     write /sys/block/mmcblk2/queue/read_ahead_kb 2048
 
-<<<<<<< HEAD
-    # Set period_us for usb audio
-    setprop ro.audio.usb.period_us 20000
-
     # Wifi firmware reload path
     chown wifi wifi /sys/module/brcmfmac/parameters/alternative_fw_path
 
-=======
->>>>>>> android-11.0.0_1.0.0_history
     # Prepare for wifi
     setprop wifi.interface wlan0
     setprop wifi.direct.interface p2p-dev-wlan0
diff --git a/imx8m/evk_8mp/evk_8mp.mk b/imx8m/evk_8mp/evk_8mp.mk
index 8a5ddde9..6c973e3c 100644
--- a/imx8m/evk_8mp/evk_8mp.mk
+++ b/imx8m/evk_8mp/evk_8mp.mk
@@ -286,23 +286,16 @@ PRODUCT_PACKAGES += \
     wifilogd \
     wificond
 
-<<<<<<< HEAD
 # nxp 8997 Firmware
 PRODUCT_COPY_FILES += \
     vendor/nxp/imx-firmware/nxp/FwImage_8997/pcie8997_wlan_v4.bin:vendor/firmware/mrvl/pcie8997_wlan_v4.bin \
     vendor/nxp/imx-firmware/nxp/FwImage_8997/pcieuart8997_combo_v4.bin:vendor/firmware/mrvl/pcieuart8997_combo_v4.bin \
     vendor/nxp/imx-firmware/nxp/FwImage_8997/uart8997_bt_v4.bin:vendor/firmware/mrvl/uart8997_bt_v4.bin \
-=======
+
 # WiFi RRO
 PRODUCT_PACKAGES += \
     WifiOverlay
 
-# nxp 8997 wifi and bluetooth combo Firmware
-PRODUCT_COPY_FILES += \
-    vendor/nxp/imx-firmware/nxp/FwImage_8997/pcieuart8997_combo_v4.bin:vendor/firmware/pcieuart8997_combo_v4.bin \
-    vendor/nxp/imx-firmware/nxp/android_wifi_mod_para.conf:vendor/firmware/wifi_mod_para.conf
->>>>>>> android-11.0.0_1.0.0_history
-
 # Wifi regulatory
 PRODUCT_COPY_FILES += \
     external/wireless-regdb/regulatory.db:vendor/firmware/regulatory.db \
diff --git a/imx8m/evk_8mq/evk_8mq.mk b/imx8m/evk_8mq/evk_8mq.mk
index 102d365f..65c84865 100644
--- a/imx8m/evk_8mq/evk_8mq.mk
+++ b/imx8m/evk_8mq/evk_8mq.mk
@@ -79,22 +79,14 @@ PRODUCT_COPY_FILES += \
     $(IMX_DEVICE_PATH)/required_hardware.xml:$(TARGET_COPY_OUT_VENDOR)/etc/permissions/required_hardware.xml \
     $(IMX_DEVICE_PATH)/ueventd.nxp.rc:$(TARGET_COPY_OUT_VENDOR)/ueventd.rc \
     $(LINUX_FIRMWARE_IMX_PATH)/linux-firmware-imx/firmware/sdma/sdma-imx7d.bin:$(TARGET_COPY_OUT_VENDOR)/firmware/imx/sdma/sdma-imx7d.bin \
-<<<<<<< HEAD
-    device/fsl/common/init/init.insmod.sh:$(TARGET_COPY_OUT_VENDOR)/bin/init.insmod.sh \
-    device/fsl/common/wifi/p2p_supplicant_overlay.conf:$(TARGET_COPY_OUT_VENDOR)/etc/wifi/p2p_supplicant_overlay.conf \
-    device/fsl/common/wifi/bcm_wpa_supplicant_overlay.conf:$(TARGET_COPY_OUT_VENDOR)/etc/wifi/wpa_supplicant_overlay.conf
-
-ifeq ($(TARGET_USE_DYNAMIC_PARTITIONS),true)
-=======
     device/nxp/common/init/init.insmod.sh:$(TARGET_COPY_OUT_VENDOR)/bin/init.insmod.sh \
     device/nxp/common/wifi/p2p_supplicant_overlay.conf:$(TARGET_COPY_OUT_VENDOR)/etc/wifi/p2p_supplicant_overlay.conf \
-    device/nxp/common/wifi/wpa_supplicant_overlay.conf:$(TARGET_COPY_OUT_VENDOR)/etc/wifi/wpa_supplicant_overlay.conf
+    device/nxp/common/wifi/bcm_wpa_supplicant_overlay.conf:$(TARGET_COPY_OUT_VENDOR)/etc/wifi/wpa_supplicant_overlay.conf
 
 # We load the fstab from device tree so this is not needed, but since no kernel modules are installed to vendor
 # boot ramdisk so far, we need this step to generate the vendor-ramdisk folder or build process would fail. This
 # can be deleted once we figure out what kernel modules should be put into the vendor boot ramdisk.
 ifeq ($(TARGET_USE_VENDOR_BOOT),true)
->>>>>>> android-11.0.0_1.0.0_history
 PRODUCT_COPY_FILES += \
     $(IMX_DEVICE_PATH)/fstab.nxp:$(TARGET_COPY_OUT_VENDOR_RAMDISK)/first_stage_ramdisk/fstab.nxp
 endif
@@ -279,21 +271,16 @@ PRODUCT_PACKAGES += \
     wifilogd \
     wificond
 
-<<<<<<< HEAD
-# BCM Bluetooth vendor config
-=======
 # WiFi RRO
 PRODUCT_PACKAGES += \
     WifiOverlay
 
-# NXP 8997 Bluetooth vendor config
->>>>>>> android-11.0.0_1.0.0_history
+# BCM Bluetooth vendor config
 PRODUCT_PACKAGES += \
     bt_vendor.conf
 
 # BCM 1CX Bluetooth Firmware
 PRODUCT_COPY_FILES += \
-<<<<<<< HEAD
     vendor/nxp/imx-firmware/cyw-wifi-bt/1CX_CYW4356/BCM4354A2.1CX.hcd:$(TARGET_COPY_OUT_VENDOR)/firmware/brcm/CYW4354A2.1CX.hcd
 
 # BCM 1CX Wifi Firmware
@@ -301,10 +288,6 @@ PRODUCT_COPY_FILES += \
     vendor/nxp/imx-firmware/cyw-wifi-bt/1CX_CYW4356/brcmfmac4356-pcie.bin:$(TARGET_COPY_OUT_VENDOR)/firmware/brcm/brcmfmac4356-pcie.bin \
     vendor/nxp/imx-firmware/cyw-wifi-bt/1CX_CYW4356/brcmfmac4356-pcie.clm_blob:$(TARGET_COPY_OUT_VENDOR)/firmware/brcm/brcmfmac4356-pcie.clm_blob \
     vendor/nxp/imx-firmware/cyw-wifi-bt/1CX_CYW4356/brcmfmac4356-pcie.txt:$(TARGET_COPY_OUT_VENDOR)/firmware/brcm/brcmfmac4356-pcie.txt
-=======
-    vendor/nxp/imx-firmware/nxp/FwImage_8997/pcieuart8997_combo_v4.bin:vendor/firmware/pcieuart8997_combo_v4.bin \
-    vendor/nxp/imx-firmware/nxp/android_wifi_mod_para.conf:vendor/firmware/wifi_mod_para.conf
->>>>>>> android-11.0.0_1.0.0_history
 
 # Wifi regulatory
 PRODUCT_COPY_FILES += \
diff --git a/imx8m/evk_8mq/init.rc b/imx8m/evk_8mq/init.rc
index b423df78..1414a9a8 100644
--- a/imx8m/evk_8mq/init.rc
+++ b/imx8m/evk_8mq/init.rc
@@ -113,34 +113,20 @@ on early-boot && property:vendor.skip.charger_not_need=0
     write /sys/block/mmcblk0/queue/read_ahead_kb 2048
     write /sys/block/mmcblk1/queue/read_ahead_kb 2048
 
-<<<<<<< HEAD
-    # Set period_us for usb audio
-    setprop ro.audio.usb.period_us 20000
-
     # Wifi firmware reload path
     chown wifi wifi /sys/module/brcmfmac/parameters/alternative_fw_path
 
-=======
->>>>>>> android-11.0.0_1.0.0_history
     # Prepare for wifi
     setprop wifi.interface wlan0
 
-<<<<<<< HEAD
-    setprop persist.service.bdroid.bdaddr 22:22:67:C6:69:73
-
     # Prepare for bluetooth
     chmod 665 /sys/class/rfkill/rfkill0/state
     chown bluetooth bluetooth /sys/class/rfkill/rfkill0/state
     write /sys/class/rfkill/rfkill0/state 0
 
-    # Prepare for RIL
-    setprop ro.ril.wake_lock_timeout 300
-
     # Use ro.boot.lcd_density to override ro.sf.lcd_density
     setprop ro.sf.lcd_density ${ro.boot.lcd_density}
 
-=======
->>>>>>> android-11.0.0_1.0.0_history
     # Disable surfaceflinger back pressure propagate
     setprop debug.sf.disable_backpressure 1
 
@@ -170,14 +156,10 @@ on early-boot && property:vendor.skip.charger_not_need=0
     # enlarge media max memory size to 3G.
     setprop ro.media.maxmem 3221225471
 
-<<<<<<< HEAD
     setprop wifi.direct.interface p2p-dev-wlan0
     start vendor.wifi_hal_legacy
 
-on boot
-=======
 on boot && property:vendor.skip.charger_not_need=0
->>>>>>> android-11.0.0_1.0.0_history
     start audioserver
     start mediadrm
     start media
diff --git a/imx8m/sepolicy/bootanim.te b/imx8m/sepolicy/bootanim.te
index 0fde3b5e..7fef8cda 100644
--- a/imx8m/sepolicy/bootanim.te
+++ b/imx8m/sepolicy/bootanim.te
@@ -1,9 +1,5 @@
-<<<<<<< HEAD
-typeattribute bootanim system_writes_vendor_properties_violators;
 typeattribute bootanim mlstrustedsubject;
 
-=======
->>>>>>> android-11.0.0_1.0.0_history
 get_prop(bootanim, vendor_default_prop)
 
 allow bootanim ashmem_device:chr_file {execute};
diff --git a/imx8m/sepolicy/file.te b/imx8m/sepolicy/file.te
index 9ce92550..c3689b9f 100644
--- a/imx8m/sepolicy/file.te
+++ b/imx8m/sepolicy/file.te
@@ -2,12 +2,6 @@ type mediadrm_vendor_data_file, file_type, data_file_type;
 type debugfs_dma, debugfs_type, fs_type;
 type debugfs_sw_sync, debugfs_type, fs_type;
 type sysfs_soc, sysfs_type, fs_type;
-<<<<<<< HEAD
-type binderfs, fs_type;
-type binderfs_logs, fs_type;
-type binderfs_logs_proc, fs_type;
+type proc_util_clamp, fs_type, proc_type;
 type sysfs_usb_uevent, sysfs_type, fs_type;
 type idtech_data_file, file_type, data_file_type, core_data_file_type;
-=======
-type proc_util_clamp, fs_type, proc_type;
->>>>>>> android-11.0.0_1.0.0_history
diff --git a/imx8m/sepolicy/file_contexts b/imx8m/sepolicy/file_contexts
index af9ff0aa..86aaa772 100644
--- a/imx8m/sepolicy/file_contexts
+++ b/imx8m/sepolicy/file_contexts
@@ -92,8 +92,11 @@
 /vendor/bin/hw/android\.hardware\.dumpstate@1\.1-service\.imx      u:object_r:hal_dumpstate_impl_exec:s0
 /dev/cpu_dma_latency u:object_r:latency_device:s0
 /vendor/bin/hw/android\.hardware\.oemlock@1\.0-service\.imx      u:object_r:hal_oemlock_impl_exec:s0
-<<<<<<< HEAD
-/vendor/bin/hw/android\.hardware\.boot@1\.0-service\.imx      u:object_r:hal_bootctl_default_exec:s0
+
+# partitions of boot device
+/dev/block/by-name/vendor_boot_[ab]          u:object_r:boot_block_device:s0
+
+/vendor/bin/hw/android\.hardware\.camera\.provider@2\.6-service-google       u:object_r:hal_camera_default_exec:s0
 
 # lsusb command
 /sys/devices/platform/38200000\.usb/xhci-hcd\.0\.auto/usb[0-9]/uevent          u:object_r:sysfs_usb_uevent:s0
@@ -113,10 +116,3 @@
 /system/etc/ppp/ip-down          u:object_r:ppp_exec:s0
 /system/etc/ppp/ip-up-vpn        u:object_r:ppp_exec:s0
 /dev/usb/lp0                     u:object_r:ptr_device:s0
-=======
-
-# partitions of boot device
-/dev/block/by-name/vendor_boot_[ab]          u:object_r:boot_block_device:s0
-
-/vendor/bin/hw/android\.hardware\.camera\.provider@2\.6-service-google       u:object_r:hal_camera_default_exec:s0
->>>>>>> android-11.0.0_1.0.0_history
diff --git a/imx8m/sepolicy/platform_app.te b/imx8m/sepolicy/platform_app.te
index 1f942c0a..1f417a58 100644
--- a/imx8m/sepolicy/platform_app.te
+++ b/imx8m/sepolicy/platform_app.te
@@ -1,5 +1,3 @@
-<<<<<<< HEAD
-typeattribute platform_app system_writes_vendor_properties_violators;
 typeattribute platform_app mlstrustedsubject;
 
 allow platform_app idtech_data_file:dir { create_dir_perms rw_dir_perms };
@@ -8,9 +6,5 @@ allow platform_app idtech_data_file:dir { add_name write };
 allow platform_app ptr_device:chr_file rw_file_perms;
 allow platform_app idtech_prop:property_service  { set };
 
-get_prop(platform_app, vendor_default_prop)
-set_prop(platform_app, public_vendor_default_prop)
 get_prop(platform_app, idtech_prop)
-=======
 get_prop(platform_app, vendor_default_prop)
->>>>>>> android-11.0.0_1.0.0_history
diff --git a/imx8m/sepolicy/property.te b/imx8m/sepolicy/property.te
index 0ea9694a..7887458a 100644
--- a/imx8m/sepolicy/property.te
+++ b/imx8m/sepolicy/property.te
@@ -2,11 +2,7 @@ type vendor_wc_prop, property_type;
 type vendor_usb_config_prop, property_type;
 type vendor_power_hal_prop, property_type;
 type vendor_bluetooth_prop, property_type;
-<<<<<<< HEAD
-type public_vendor_default_prop, property_type;
 type idtech_prop, property_type;
-=======
 type vendor_public_default_prop, property_type;
->>>>>>> android-11.0.0_1.0.0_history
 type vendor_wifi_version, property_type;
 type vendor_logging_prop, property_type;
diff --git a/imx8m/sepolicy/property_contexts b/imx8m/sepolicy/property_contexts
index 0629862f..f236669c 100644
--- a/imx8m/sepolicy/property_contexts
+++ b/imx8m/sepolicy/property_contexts
@@ -202,29 +202,10 @@ sys.SECOND_DISPLAY_ENABLED          u:object_r:vendor_default_prop:s0
 ro.mediacomponents.package          u:object_r:vendor_default_prop:s0
 AQROOT                              u:object_r:vendor_default_prop:s0
 CL_NOPREPROCESS                     u:object_r:vendor_default_prop:s0
-<<<<<<< HEAD
-ro.camera.req.fmq.size              u:object_r:vendor_default_prop:s0
-ro.camera.res.fmq.size              u:object_r:vendor_default_prop:s0
-ro.rfkilldisabled                   u:object_r:vendor_default_prop:s0
+
 # serial number for mdnsd broadcast
 ro.idt.serialno                     u:object_r:vendor_default_prop:s0
 
-# vendor_bluetooth_prop
-persist.bluetooth.a4wp              u:object_r:vendor_bluetooth_prop:s0
-persist.bluetooth.csoc.cnt          u:object_r:vendor_bluetooth_prop:s0
-persist.service.bdroid.fwsnoop      u:object_r:vendor_bluetooth_prop:s0
-persist.service.bdroid.sibs         u:object_r:vendor_bluetooth_prop:s0
-persist.service.bdroid.snooplog     u:object_r:vendor_bluetooth_prop:s0
-persist.service.bdroid.soclog       u:object_r:vendor_bluetooth_prop:s0
-persist.service.bdroid.ssrlvl       u:object_r:vendor_bluetooth_prop:s0
-persist.set.rx_delay                u:object_r:vendor_bluetooth_prop:s0
-ro.bluetooth.emb_wp_mode            u:object_r:vendor_bluetooth_prop:s0
-ro.bluetooth.wipower                u:object_r:vendor_bluetooth_prop:s0
-unified_bt_logging                  u:object_r:vendor_bluetooth_prop:s0
-persist.BT3_2.version               u:object_r:vendor_bluetooth_prop:s0
-=======
->>>>>>> android-11.0.0_1.0.0_history
-
 ro.radio.noril                      u:object_r:radio_prop:s0 exact string
 vendor.rild.                        u:object_r:radio_prop:s0
 rild.                               u:object_r:radio_prop:s0
diff --git a/imx8m/sepolicy/update_engine.te b/imx8m/sepolicy/update_engine.te
index 61d38c0f..28f911ae 100644
--- a/imx8m/sepolicy/update_engine.te
+++ b/imx8m/sepolicy/update_engine.te
@@ -7,8 +7,5 @@ allow update_engine mnt_user_file:lnk_file { read write };
 allow update_engine sdcardfs:dir { search };
 allow update_engine sdcardfs:file { read open getattr };
 allow update_engine media_rw_data_file:file { read open getattr };
-<<<<<<< HEAD
-allow update_engine vfat:file { getattr open read };
-=======
 allow update_engine loop_device:blk_file { open write };
->>>>>>> android-11.0.0_1.0.0_history
+allow update_engine vfat:file { getattr open read };
