10d93d66fee0 George.Huang 2020-05-30

Merge tag 'android_10_idt_dev_200527-2' into test_merge

android_10_idt_dev_vp6820_8mq-userdebug-daily_66

diff --cc arch/arm64/boot/dts/freescale/Makefile
index 7b902a8d417f,2b01e49e8fa2..9c5420c2d9ad
--- a/arch/arm64/boot/dts/freescale/Makefile
+++ b/arch/arm64/boot/dts/freescale/Makefile
@@@ -45,84 -13,160 +45,243 @@@ dtb-$(CONFIG_ARCH_LAYERSCAPE) += fsl-ls
  dtb-$(CONFIG_ARCH_LAYERSCAPE) += fsl-ls2080a-simu.dtb
  dtb-$(CONFIG_ARCH_LAYERSCAPE) += fsl-ls2088a-qds.dtb
  dtb-$(CONFIG_ARCH_LAYERSCAPE) += fsl-ls2088a-rdb.dtb
 +dtb-$(CONFIG_ARCH_LAYERSCAPE) += fsl-lx2160a-qds.dtb
 +dtb-$(CONFIG_ARCH_LAYERSCAPE) += fsl-lx2160a-rdb.dtb
 +
 +dtb-$(CONFIG_ARCH_MXC) += imx8mm-evk.dtb imx8mm-evk-rpmsg.dtb imx8mm-evk-rm67191.dtb \
 +			  imx8mm-ddr4-evk.dtb imx8mm-evk-root.dtb imx8mm-evk-inmate.dtb \
 +			  imx8mm-ddr4-evk-rm67191.dtb imx8mm-evk-revb.dtb imx8mm-ddr4-evk-revb.dtb \
 +			  imx8mm-ddr4-evk-revb-rm67191.dtb imx8mm-ddr4-evk-no-product.dtb \
 +			  imx8mm-evk-no-product.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mm-evk-ak4497.dtb imx8mm-evk-ak5558.dtb imx8mm-evk-audio-tdm.dtb \
 +			  imx8mm-ddr4-evk-no-dynamic_partition.dtb imx8mm-ddr4-evk-no-product-no-dynamic_partition.dtb \
 +			  imx8mm-evk-no-dynamic_partition.dtb imx8mm-evk-no-product-no-dynamic_partition.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mn-evk.dtb imx8mn-evk-rm67191.dtb imx8mn-ddr4-evk.dtb imx8mn-ddr4-evk-ak5558.dtb \
 +			  imx8mn-ddr4-evk-rm67191.dtb imx8mn-ddr4-evk-rpmsg.dtb \
 +			  imx8mn-ddr4-evk-no-product.dtb imx8mn-ddr4-evk-no-dynamic_partition.dtb \
 +			  imx8mn-ddr4-evk-no-product-no-dynamic_partition.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mn-ddr4-evk-root.dtb imx8mn-ddr4-evk-inmate.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-evk.dtb imx8mq-evk-rpmsg.dtb imx8mq-evk-pcie1-m2.dtb \
 +			  imx8mq-evk-no-product.dtb imx8mq-evk-no-dynamic_partition.dtb \
 +			  imx8mq-evk-no-product-no-dynamic_partition.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-evk-ak4497.dtb imx8mq-evk-audio-tdm.dtb imx8mq-evk-pdm.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-evk-root.dtb imx8mq-evk-inmate.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-evk-lcdif-rm67191.dtb imx8mq-evk-lcdif-adv7535.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-hummingboard-pulse.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-evk-dcss-rm67191.dtb imx8mq-evk-dcss-adv7535.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-evk-dual-display.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-librem5-devkit.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-nitrogen.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-pico-pi.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-evk-dp.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-zii-ultra-rmb3.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-zii-ultra-zest.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8mq-ddr3l-val.dtb imx8mq-ddr4-val.dtb imx8mq-ddr4-val-gpmi-nand.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8qm-mek.dtb imx8qm-mek-ov5640.dtb imx8qm-mek-md.dtb \
 +			  imx8qm-mek-car2.dtb imx8qm-mek-car2-md.dtb \
 +			  imx8qm-mek-enet2-tja1100.dtb imx8qm-mek-rpmsg.dtb \
 +			  imx8qm-mek-hdmi.dtb imx8qm-mek-dsp.dtb \
 +			  imx8qm-mek-jdi-wuxga-lvds1-panel.dtb \
 +			  imx8qm-lpddr4-val.dtb imx8qm-lpddr4-val-mqs.dtb \
 +			  imx8qm-lpddr4-val-spdif.dtb imx8qm-mek-ca53.dtb \
 +			  imx8qm-mek-ca72.dtb imx8qm-lpddr4-val-ca53.dtb \
 +			  imx8qm-lpddr4-val-ca72.dtb imx8qm-ddr4-val.dtb \
 +			  imx8qm-lpddr4-val-lpspi.dtb imx8qm-lpddr4-val-lpspi-slave.dtb \
 +			  imx8qm-mek-dsi-rm67191.dtb imx8qm-lpddr4-val-dp.dtb\
 +			  imx8qm-mek-ov5640-no-product.dtb \
 +			  imx8qm-mek-ov5640-no-dynamic_partition.dtb \
 +			  imx8qm-mek-ov5640-no-product-no-dynamic_partition.dtb \
 +			  imx8qp-lpddr4-val.dtb imx8dm-lpddr4-val.dtb \
 +			  imx8qm-mek-car.dtb imx8qm-mek-car-md.dtb \
 +			  imx8qm-mek-car-a72.dtb imx8qm-mek-car-md-a72.dtb \
 +			  imx8qm-mek-car2-a72.dtb imx8qm-mek-car2-md-a72.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8qm-mek-dom0.dtb imx8qm-mek-domu.dtb imx8qm-mek-domu-car.dtb \
 +			  imx8qm-mek-root.dtb imx8qm-mek-inmate.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8qxp-ai_ml.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8dxl-phantom-mek.dtb \
 +			  imx8dxl-phantom-mek-rpmsg.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8qxp-mek.dtb imx8qxp-mek-dsp.dtb imx8qxp-mek-ov5640.dtb \
 +			  imx8qxp-mek-car2.dtb \
 +			  imx8qxp-mek-enet2.dtb imx8qxp-mek-enet2-tja1100.dtb \
 +			  imx8qxp-mek-sof-cs42888.dtb imx8qxp-mek-sof-wm8960.dtb \
 +			  imx8qxp-mek-rpmsg.dtb imx8qxp-mek-a0.dtb \
 +			  imx8qxp-mek-it6263-lvds0-dual-channel.dtb \
 +			  imx8qxp-mek-it6263-lvds1-dual-channel.dtb \
 +			  imx8qxp-mek-jdi-wuxga-lvds0-panel.dtb \
 +			  imx8qxp-mek-jdi-wuxga-lvds1-panel.dtb \
 +			  imx8qxp-mek-dsi-rm67191.dtb \
 +			  imx8qxp-mek-ov5640-rpmsg.dtb \
 +			  imx8qxp-lpddr4-val-a0.dtb \
 +			  imx8qxp-lpddr4-val.dtb imx8qxp-lpddr4-val-mqs.dtb imx8qxp-ddr3l-val.dtb \
 +			  imx8qxp-lpddr4-val-lpspi.dtb imx8qxp-lpddr4-val-lpspi-slave.dtb \
 +			  imx8qxp-lpddr4-val-spdif.dtb imx8qxp-lpddr4-val-gpmi-nand.dtb imx8dxp-lpddr4-val.dtb \
 +			  imx8qxp-17x17-val.dtb imx8dx-lpddr4-val.dtb imx8dx-17x17-val.dtb \
 +			  imx8qxp-lpddr4-val-mlb.dtb \
 +			  imx8qxp-mek-ov5640-rpmsg-no-product.dtb \
 +			  imx8qxp-mek-car.dtb \
 +			  imx8qxp-mek-ov5640-rpmsg-no-dynamic_partition.dtb \
 +			  imx8qxp-mek-ov5640-rpmsg-no-product-no-dynamic_partition.dtb
 +dtb-$(CONFIG_ARCH_MXC) += imx8qxp-mek-dom0.dtb imx8qxp-mek-root.dtb \
 +			  imx8qxp-mek-inmate.dtb
  
++<<<<<<< HEAD
 +dtb-$(CONFIG_ARCH_S32) += s32v234-evb.dtb \
 +			  s32v234-sbc.dtb
++=======
+ dtb-$(CONFIG_ARCH_FSL_IMX8QM) += fsl-imx8qm-lpddr4-arm2.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-dom0.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-domu.dtb \
+ 				 fsl-imx8qm-ddr4-arm2.dtb \
+ 				 fsl-imx8qm-ddr4-arm2-hdmi.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2_ca53.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2_ca72.dtb \
+ 				 fsl-imx8qm-mek.dtb \
+ 				 fsl-imx8qm-mek-rpmsg.dtb \
+ 				 fsl-imx8qm-mek-car.dtb \
+ 				 fsl-imx8qm-mek-car-md.dtb \
+ 				 fsl-imx8qm-mek-car2.dtb \
+ 				 fsl-imx8qm-mek-car2-md.dtb \
+ 				 fsl-imx8qm-mek-dsp.dtb \
+ 				 fsl-imx8qm-mek-ov5640.dtb \
+ 				 fsl-imx8qm-mek_ca53.dtb \
+ 				 fsl-imx8qm-mek_ca72.dtb \
+ 				 fsl-imx8qm-mek-hdmi.dtb \
+ 				 fsl-imx8qm-mek-hdmi-in.dtb \
+ 				 fsl-imx8qm-mek-dsi-rm67191.dtb \
+ 				 fsl-imx8qm-mek-enet2-tja1100.dtb \
+ 				 fsl-imx8qm-mek-jdi-wuxga-lvds1-panel.dtb \
+ 				 fsl-imx8qm-mek-dom0.dtb \
+ 				 fsl-imx8qm-mek-dom0-dpu2.dtb \
+ 				 fsl-imx8qm-mek-domu.dtb \
+ 				 fsl-imx8qm-mek-domu-car.dtb \
+ 				 fsl-imx8qm-mek-domu-dpu1.dtb \
+ 				 fsl-imx8qm-mek-domu-dpu1-hdmi.dtb \
+ 				 fsl-imx8qm-mek-root.dtb \
+ 				 fsl-imx8qm-mek-inmate.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-dp.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-hdmi.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-hdmi-in.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-8cam.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-it6263-dual-channel.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-jdi-wuxga-lvds1-panel.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-lpspi.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-lpspi-slave.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-spdif.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-mqs.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-usb3.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-dsi-rm67191.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-enet2-tja1100.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-hsic.dtb \
+ 				 fsl-imx8dm-lpddr4-arm2.dtb \
+ 				 fsl-imx8qp-lpddr4-arm2.dtb \
+ 				 fsl-imx8qm-lpddr4-arm2-dp-dig-pll.dtb \
+ 				 fsl-imx8qm-mek-car-no-product.dtb \
+ 				 fsl-imx8qm-mek-car2-no-product.dtb \
+ 				 fsl-imx8qm-mek-ov5640-no-product.dtb
+ dtb-$(CONFIG_ARCH_FSL_IMX8QXP) += fsl-imx8qxp-lpddr4-arm2.dtb \
+ 				  fsl-imx8qxp-mek.dtb \
+ 				  fsl-imx8qxp-mek-car.dtb \
+ 				  fsl-imx8qxp-mek-car2.dtb \
+ 				  fsl-imx8qxp-mek-rpmsg.dtb \
+ 				  fsl-imx8qxp-mek-dsp.dtb \
+ 				  fsl-imx8qxp-mek-dom0.dtb \
+ 				  fsl-imx8qxp-mek-ov5640.dtb \
+ 				  fsl-imx8qxp-mek-enet2.dtb \
+ 				  fsl-imx8qxp-mek-enet2-tja1100.dtb \
+ 				  fsl-imx8qxp-mek-dsi-rm67191.dtb \
+ 				  fsl-imx8qxp-mek-a0.dtb \
+ 				  fsl-imx8qxp-mek-lcdif.dtb \
+ 				  fsl-imx8qxp-mek-it6263-lvds0-dual-channel.dtb \
+ 				  fsl-imx8qxp-mek-it6263-lvds1-dual-channel.dtb \
+ 				  fsl-imx8qxp-mek-jdi-wuxga-lvds0-panel.dtb \
+ 				  fsl-imx8qxp-mek-jdi-wuxga-lvds1-panel.dtb \
+ 				  fsl-imx8qxp-mek-root.dtb \
+ 				  fsl-imx8qxp-mek-inmate.dtb \
+ 				  fsl-imx8qxp-lpddr4-arm2-enet2.dtb \
+ 				  fsl-imx8qxp-lpddr4-arm2-enet2-tja1100.dtb \
+ 				  fsl-imx8qxp-lpddr4-arm2-gpmi-nand.dtb \
+ 				  fsl-imx8qxp-lpddr4-arm2-lpspi.dtb \
+ 				  fsl-imx8qxp-lpddr4-arm2-lpspi-slave.dtb \
+ 				  fsl-imx8qxp-lpddr4-arm2-spdif.dtb \
+ 				  fsl-imx8qxp-lpddr4-arm2-mlb.dtb \
+ 				  fsl-imx8qxp-lpddr4-arm2-mqs.dtb \
+ 				  fsl-imx8qxp-lpddr4-arm2-wm8962.dtb \
+ 				  fsl-imx8qxp-lpddr4-arm2-dsp.dtb \
+ 				  fsl-imx8qxp-lpddr4-arm2-dsi-rm67191.dtb \
+ 				  fsl-imx8qxp-lpddr4-arm2-a0.dtb \
+ 				  fsl-imx8qxp-17x17-val.dtb \
+ 				  fsl-imx8qxp-ddr3l-val.dtb \
+ 				  fsl-imx8dx-17x17-val.dtb \
+ 				  fsl-imx8dx-lpddr4-arm2.dtb \
+ 				  fsl-imx8dxp-lpddr4-arm2.dtb \
+ 				  fsl-imx8dxl-phantom-mek.dtb \
+ 				  fsl-imx8dxl-phantom-mek-rpmsg.dtb \
+ 				  fsl-imx8qxp-mek-car-no-product.dtb \
+ 				  fsl-imx8qxp-mek-car2-no-product.dtb \
+ 				  fsl-imx8qxp-mek-ov5640-no-product.dtb
+ dtb-$(CONFIG_ARCH_FSL_IMX8MQ) += fsl-imx8mq-ddr3l-arm2.dtb \
+ 				 fsl-imx8mq-ddr4-arm2.dtb \
+ 				 fsl-imx8mq-ddr4-arm2-gpmi-nand.dtb \
+ 				 fsl-imx8mq-evk.dtb \
+ 				 fsl-imx8mq-evk-idtech-spi.dtb \
+ 				 fsl-imx8mq-evk-b3.dtb \
+ 				 fsl-imx8mq-evk-m4.dtb \
+ 				 fsl-imx8mq-evk-pcie1-m2.dtb \
+ 				 fsl-imx8mq-evk-lcdif-adv7535.dtb \
+ 				 fsl-imx8mq-evk-lcdif-adv7535-b3.dtb \
+ 				 fsl-imx8mq-evk-lcdif-rm67191.dtb \
+ 				 fsl-imx8mq-evk-mipi-csi2.dtb \
+ 				 fsl-imx8mq-evk-pdm.dtb \
+ 				 fsl-imx8mq-evk-dcss-adv7535.dtb \
+ 				 fsl-imx8mq-evk-dcss-adv7535-b3.dtb \
+ 				 fsl-imx8mq-evk-dcss-rm67191.dtb \
+ 				 fsl-imx8mq-evk-dcss-rm67191-b3.dtb \
+ 				 fsl-imx8mq-evk-dual-display.dtb \
+ 				 fsl-imx8mq-evk-dual-display-b3.dtb \
+ 				 fsl-imx8mq-evk-ak4497.dtb \
+ 				 fsl-imx8mq-evk-audio-tdm.dtb \
+ 				 fsl-imx8mq-evk-drm.dtb \
+ 				 fsl-imx8mq-evk-root.dtb \
+ 				 fsl-imx8mq-evk-inmate.dtb \
+ 				 fsl-imx8mq-evk-dp.dtb \
+ 				 fsl-imx8mq-evk-edp.dtb \
+ 				 fsl-imx8mq-phanbell.dtb \
+ 				 fsl-imx8mq-phanbell-no-product.dtb \
+ 				 fsl-imx8mq-evk-no-product.dtb \
+ 				 idt_imx8mq_evt-0_evk_dual-0.dtb \
+ 				 idt_imx8mq_evt-0_evk_evk-0.dtb \
+ 				 idt_imx8mq_evt-0_evk_idtechspi-0.dtb \
+ 				 idt_imx8mq_evt-0_evk_mipi-0.dtb \
+ 				 idt_imx8mq_evt-0_evk_mipipanel-0.dtb \
+ 				 idt_imx8mq_evt-0_evk_ram1gb-0.dtb \
+ 				 idt_a300_evt-0_devboard_evt-0.dtb \
+ 				 idt_a300_evt-0_devboard_hdmi-0.dtb \
+ 				 idt_a300_evt-0_devboard_evt-1.dtb
+ dtb-$(CONFIG_ARCH_FSL_IMX8MM) += fsl-imx8mm-evk.dtb \
+ 				 fsl-imx8mm-evk-drm.dtb \
+ 				 fsl-imx8mm-evk-ak4497.dtb \
+ 				 fsl-imx8mm-evk-m4.dtb \
+ 				 fsl-imx8mm-evk-ak5558.dtb \
+ 				 fsl-imx8mm-evk-audio-tdm.dtb \
+ 				 fsl-imx8mm-ddr3l-val.dtb \
+ 				 fsl-imx8mm-ddr4-evk.dtb \
+ 				 fsl-imx8mm-ddr4-val.dtb \
+ 				 fsl-imx8mm-evk-rm67191.dtb \
+ 				 fsl-imx8mm-evk-root.dtb \
+ 				 fsl-imx8mm-evk-inmate.dtb \
+ 				 fsl-imx8mm-evk-revb.dtb \
+ 				 fsl-imx8mm-evk-revb-rm67191.dtb \
+ 				 fsl-imx8mm-ddr4-evk-rm67191.dtb \
+ 				 fsl-imx8mm-ddr4-qca9377-evk.dtb \
+ 				 fsl-imx8mm-evk-no-product.dtb \
+ 				 fsl-imx8mm-ddr4-evk-no-product.dtb
+ dtb-$(CONFIG_ARCH_FSL_IMX8MN) += fsl-imx8mn-ddr4-evk.dtb \
+ 				 fsl-imx8mn-ddr4-evk-rpmsg.dtb \
+ 				 fsl-imx8mn-ddr4-evk-rm67191.dtb \
+ 				 fsl-imx8mn-ddr4-evk-ak5558.dtb \
+ 				 fsl-imx8mn-ddr4-evk-root.dtb \
+ 				 fsl-imx8mn-ddr4-evk-inmate.dtb \
+ 				 fsl-imx8mn-ddr4-evk-no-product.dtb \
+ 				 idt_imx8mn_evt-0_evk_rpmsg-0.dtb \
+ 				 idt_imx8mn_evt-0_evk_evk-0.dtb
++>>>>>>> android_10_idt_dev_200527-2
diff --cc arch/arm64/configs/defconfig
index c69d9f822d97,09cdf2cd97cf..f97f94abe15b
--- a/arch/arm64/configs/defconfig
+++ b/arch/arm64/configs/defconfig
@@@ -252,12 -215,15 +252,13 @@@ CONFIG_MTD_SPI_NOR=
  CONFIG_MTD_UBI=y
  CONFIG_BLK_DEV_LOOP=y
  CONFIG_BLK_DEV_NBD=m
 -CONFIG_XEN_BLKDEV_BACKEND=y
  CONFIG_VIRTIO_BLK=y
 -CONFIG_BLK_DEV_NVME=m
 +CONFIG_BLK_DEV_NVME=y
  CONFIG_SENSORS_FXOS8700=y
  CONFIG_SENSORS_FXAS2100X=y
+ CONFIG_IDG_SPI=y
  CONFIG_SRAM=y
 +CONFIG_EEPROM_AT24=y
  CONFIG_EEPROM_AT25=m
  # CONFIG_SCSI_PROC_FS is not set
  CONFIG_BLK_DEV_SD=y
diff --cc drivers/gpu/drm/panel/Kconfig
index f152bc4eeb53,133c923ae615..450dc88958ef
--- a/drivers/gpu/drm/panel/Kconfig
+++ b/drivers/gpu/drm/panel/Kconfig
@@@ -316,43 -186,30 +316,63 @@@ config DRM_PANEL_SITRONIX_ST7789
  	  Say Y here if you want to enable support for the Sitronix
  	  ST7789V controller for 240x320 LCD panels
  
 -config DRM_PANEL_RAYDIUM_RM67191
 -	tristate "Raydium RM67191 FHD panel"
 -	depends on OF
 -	depends on DRM_MIPI_DSI
 +config DRM_PANEL_SONY_ACX565AKM
 +	tristate "Sony ACX565AKM panel"
 +	depends on GPIOLIB && OF && SPI
  	depends on BACKLIGHT_CLASS_DEVICE
  	help
 -	  Say Y here if you want to enable support for Raydium RM67191 FHD
 -	  (1080x1920) DSI panel.
 +	  Say Y here if you want to enable support for the Sony ACX565AKM
 +	  800x600 3.5" panel (found on the Nokia N900).
 +
 +config DRM_PANEL_TPO_TD028TTEC1
 +	tristate "Toppoly (TPO) TD028TTEC1 panel driver"
 +	depends on OF && SPI
 +	depends on BACKLIGHT_CLASS_DEVICE
 +	help
 +	  Say Y here if you want to enable support for TPO TD028TTEC1 480x640
 +	  2.8" panel (found on the OpenMoko Neo FreeRunner and Neo 1973).
 +
 +config DRM_PANEL_TPO_TD043MTEA1
 +	tristate "Toppoly (TPO) TD043MTEA1 panel driver"
 +	depends on GPIOLIB && OF && REGULATOR && SPI
 +	help
 +	  Say Y here if you want to enable support for TPO TD043MTEA1 800x480
 +	  4.3" panel (found on the OMAP3 Pandora board).
 +
 +config DRM_PANEL_TPO_TPG110
 +	tristate "TPO TPG 800x400 panel"
 +	depends on OF && SPI && GPIOLIB
 +	depends on BACKLIGHT_CLASS_DEVICE
 +	help
 +	  Say Y here if you want to enable support for TPO TPG110
 +	  400CH LTPS TFT LCD Single Chip Digital Driver for up to
 +	  800x400 LCD panels.
  
++<<<<<<< HEAD
 +config DRM_PANEL_TRULY_NT35597_WQXGA
 +	tristate "Truly WQXGA"
 +	depends on OF
 +	depends on DRM_MIPI_DSI
 +	help
 +	  Say Y here if you want to enable support for Truly NT35597 WQXGA Dual DSI
 +	  Video Mode panel
++=======
+ config DRM_PANEL_TIANMA_TM050JDHC02
+ 	tristate "TianMa TM050JDHC02 FHD panel"
+ 	depends on OF
+ 	depends on DRM_MIPI_DSI
+ 	depends on BACKLIGHT_CLASS_DEVICE
+ 	help
+ 	  Say Y here if you want to enable support for TianMa TM050JDHC02 HD
+ 	  (1280x720) DSI panel.
+ 
+ config DRM_PANEL_DATAIMAGE_5INCHLCM
+ 	tristate "DataImage 5InchLCM HD Panel"
+ 	depends on OF
+ 	depends on DRM_MIPI_DSI
+ 	depends on BACKLIGHT_CLASS_DEVICE
+ 	help
+ 	  Say Y here if you want to enable support for DataImage 5InchLCM HD
+ 	  (1280x720) DSI panel.
++>>>>>>> android_10_idt_dev_200527-2
  endmenu
diff --cc drivers/gpu/drm/panel/Makefile
index b6cd39fe0f20,67381a20e24b..31d26e8eba09
--- a/drivers/gpu/drm/panel/Makefile
+++ b/drivers/gpu/drm/panel/Makefile
@@@ -29,12 -17,8 +29,18 @@@ obj-$(CONFIG_DRM_PANEL_SAMSUNG_S6E63M0
  obj-$(CONFIG_DRM_PANEL_SAMSUNG_S6E8AA0) += panel-samsung-s6e8aa0.o
  obj-$(CONFIG_DRM_PANEL_SEIKO_43WVF1G) += panel-seiko-43wvf1g.o
  obj-$(CONFIG_DRM_PANEL_SHARP_LQ101R1SX01) += panel-sharp-lq101r1sx01.o
 +obj-$(CONFIG_DRM_PANEL_SHARP_LS037V7DW01) += panel-sharp-ls037v7dw01.o
  obj-$(CONFIG_DRM_PANEL_SHARP_LS043T1LE01) += panel-sharp-ls043t1le01.o
 +obj-$(CONFIG_DRM_PANEL_SITRONIX_ST7701) += panel-sitronix-st7701.o
  obj-$(CONFIG_DRM_PANEL_SITRONIX_ST7789V) += panel-sitronix-st7789v.o
++<<<<<<< HEAD
 +obj-$(CONFIG_DRM_PANEL_SONY_ACX565AKM) += panel-sony-acx565akm.o
 +obj-$(CONFIG_DRM_PANEL_TPO_TD028TTEC1) += panel-tpo-td028ttec1.o
 +obj-$(CONFIG_DRM_PANEL_TPO_TD043MTEA1) += panel-tpo-td043mtea1.o
 +obj-$(CONFIG_DRM_PANEL_TPO_TPG110) += panel-tpo-tpg110.o
 +obj-$(CONFIG_DRM_PANEL_TRULY_NT35597_WQXGA) += panel-truly-nt35597.o
++=======
+ obj-$(CONFIG_DRM_PANEL_RAYDIUM_RM67191) += panel-raydium-rm67191.o
+ obj-$(CONFIG_DRM_PANEL_TIANMA_TM050JDHC02) += panel-ilitek-ili9881c_idt.o
+ obj-$(CONFIG_DRM_PANEL_DATAIMAGE_5INCHLCM) += panel-himax-hx8394f.o
++>>>>>>> android_10_idt_dev_200527-2
diff --cc drivers/input/touchscreen/goodix.c
index 0403102e807e,f7d842d577b9..aa9c60f0efed
--- a/drivers/input/touchscreen/goodix.c
+++ b/drivers/input/touchscreen/goodix.c
@@@ -53,17 -56,17 +55,22 @@@ struct goodix_ts_data 
  	const char *cfg_name;
  	struct completion firmware_loading_complete;
  	unsigned long irq_flags;
++<<<<<<< HEAD
 +	unsigned int contact_size;
++=======
+ 	unsigned irq_tmp;
+ 	unsigned rst_tmp;
++>>>>>>> android_10_idt_dev_200527-2
  };
  
  #define GOODIX_GPIO_INT_NAME		"irq"
  #define GOODIX_GPIO_RST_NAME		"reset"
  
- #define GOODIX_MAX_HEIGHT		4096
- #define GOODIX_MAX_WIDTH		4096
+ #define GOODIX_MAX_HEIGHT		1280
+ #define GOODIX_MAX_WIDTH		720
  #define GOODIX_INT_TRIGGER		1
  #define GOODIX_CONTACT_SIZE		8
 +#define GOODIX_MAX_CONTACT_SIZE		9
  #define GOODIX_MAX_CONTACTS		10
  
  #define GOODIX_CONFIG_MAX_LENGTH	240
@@@ -323,23 -302,10 +330,25 @@@ static void goodix_ts_report_touch_8b(s
  			       input_x, input_y, true);
  	input_report_abs(ts->input_dev, ABS_MT_TOUCH_MAJOR, input_w);
  	input_report_abs(ts->input_dev, ABS_MT_WIDTH_MAJOR, input_w);
+ 	dev_dbg(&ts->client->dev, "goodix_ts_report_touch(), "
+ 		"X=%d, Y=%d, W=%d
", input_x, input_y, input_w);
  }
  
 +static void goodix_ts_report_touch_9b(struct goodix_ts_data *ts, u8 *coor_data)
 +{
 +	int id = coor_data[1] & 0x0F;
 +	int input_x = get_unaligned_le16(&coor_data[3]);
 +	int input_y = get_unaligned_le16(&coor_data[5]);
 +	int input_w = get_unaligned_le16(&coor_data[7]);
 +
 +	input_mt_slot(ts->input_dev, id);
 +	input_mt_report_slot_state(ts->input_dev, MT_TOOL_FINGER, true);
 +	touchscreen_report_pos(ts->input_dev, &ts->prop,
 +			       input_x, input_y, true);
 +	input_report_abs(ts->input_dev, ABS_MT_TOUCH_MAJOR, input_w);
 +	input_report_abs(ts->input_dev, ABS_MT_WIDTH_MAJOR, input_w);
 +}
 +
  /**
   * goodix_process_events - Process incoming events
   *
@@@ -573,26 -548,9 +595,30 @@@ static int goodix_get_gpio_config(struc
  
  	if (!ts->client)
  		return -EINVAL;
- 	dev = &ts->client->dev;
  
++<<<<<<< HEAD
 +	ts->avdd28 = devm_regulator_get(dev, "AVDD28");
 +	if (IS_ERR(ts->avdd28)) {
 +		error = PTR_ERR(ts->avdd28);
 +		if (error != -EPROBE_DEFER)
 +			dev_err(dev,
 +				"Failed to get AVDD28 regulator: %d
", error);
 +		return error;
 +	}
 +
 +	ts->vddio = devm_regulator_get(dev, "VDDIO");
 +	if (IS_ERR(ts->vddio)) {
 +		error = PTR_ERR(ts->vddio);
 +		if (error != -EPROBE_DEFER)
 +			dev_err(dev,
 +				"Failed to get VDDIO regulator: %d
", error);
 +		return error;
 +	}
 +
++=======
+ 	dev = &ts->client->dev;
+ 	np = dev->of_node;
++>>>>>>> android_10_idt_dev_200527-2
  	/* Get the interrupt GPIO pin number */
  	gpiod = devm_gpiod_get_optional(dev, GOODIX_GPIO_INT_NAME, GPIOD_IN);
  	if (IS_ERR(gpiod)) {
diff --cc drivers/misc/Kconfig
index 25c7a479da7a,ca5608c92652..1e826c83580d
--- a/drivers/misc/Kconfig
+++ b/drivers/misc/Kconfig
@@@ -382,6 -416,22 +382,25 @@@ config DS168
  	  This driver can also be built as a module.  If so, the module
  	  will be called ds1682.
  
++<<<<<<< HEAD
++=======
+ config SPEAR13XX_PCIE_GADGET
+ 	bool "PCIe gadget support for SPEAr13XX platform"
+ 	depends on ARCH_SPEAR13XX && BROKEN
+ 	default n
+ 	help
+ 	 This option enables gadget support for PCIe controller. If
+ 	 board file defines any controller as PCIe endpoint then a sysfs
+ 	 entry will be created for that controller. User can use these
+ 	 sysfs node to configure PCIe EP as per his requirements.
+ 
+ config IDG_SPI
+ 	tristate "IDG SPI Communication Support"
+ 	help
+ 	  This driver supports IDG SPI from the idtech on
+ 	  Android platform.
+ 
++>>>>>>> android_10_idt_dev_200527-2
  config VMWARE_BALLOON
  	tristate "VMware Balloon Driver"
  	depends on VMWARE_VMCI && X86 && HYPERVISOR_GUEST
diff --cc drivers/net/phy/micrel.c
index 63dedec0433d,b8d70a6d3164..c86b40eb5ead
--- a/drivers/net/phy/micrel.c
+++ b/drivers/net/phy/micrel.c
@@@ -480,8 -432,11 +480,8 @@@ static int ksz9021_config_init(struct p
  	return 0;
  }
  
 -#define MII_KSZ9031RN_MMD_CTRL_REG	0x0d
 -#define MII_KSZ9031RN_MMD_REGDATA_REG	0x0e
 -#define OP_DATA				1
  #define KSZ9031_PS_TO_REG		60
- 
+ #define KSZ9131_PS_TO_REG		100
  /* Extended registers */
  /* MMD Address 0x0 */
  #define MII_KSZ9031RN_FLP_BURST_TX_LO	3
@@@ -687,7 -664,7 +691,11 @@@ static int ksz9131_of_load_skew_values(
  		return 0;
  
  	if (matches < numfields)
++<<<<<<< HEAD
 +		newval = phy_read_mmd(phydev, 2, reg);
++=======
+ 		newval = ksz9031_extended_read(phydev, OP_DATA, 2, reg);
++>>>>>>> android_10_idt_dev_200527-2
  	else
  		newval = 0;
  
@@@ -701,7 -678,7 +709,11 @@@
  					<< (field_sz * i));
  		}
  
++<<<<<<< HEAD
 +	return phy_write_mmd(phydev, 2, reg, newval);
++=======
+ 	return ksz9031_extended_write(phydev, OP_DATA, 2, reg, newval);
++>>>>>>> android_10_idt_dev_200527-2
  }
  
  static int ksz9131_config_init(struct phy_device *phydev)
@@@ -720,6 -697,7 +732,10 @@@
  	char *control_skews[2] = {"txen-skew-psec", "rxdv-skew-psec"};
  	const struct device *dev_walker;
  	int ret;
++<<<<<<< HEAD
++=======
+ 	int reg;
++>>>>>>> android_10_idt_dev_200527-2
  
  	dev_walker = &phydev->mdio.dev;
  	do {
@@@ -754,9 -732,20 +770,26 @@@
  	if (ret < 0)
  		return ret;
  
++<<<<<<< HEAD
 +	return 0;
 +}
 +
++=======
+ 	ret=phy_write_mmd(phydev, 0x2, 0x0004,0);
+ 	if (ret < 0)
+ 		return ret;
+ 	ret=phy_write_mmd(phydev, 0x2, 0x0005,0);
+ 	if (ret < 0)
+ 		return ret;
+ 	ret=phy_write_mmd(phydev, 0x2, 0x0008,0x03ff);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	return 0;
+ }
+ 
+ 
++>>>>>>> android_10_idt_dev_200527-2
  #define KSZ8873MLL_GLOBAL_CONTROL_4	0x06
  #define KSZ8873MLL_GLOBAL_CONTROL_4_DUPLEX	BIT(6)
  #define KSZ8873MLL_GLOBAL_CONTROL_4_SPEED	BIT(4)
@@@ -1126,28 -1098,29 +1159,45 @@@ static struct phy_driver ksphy_driver[
  	.phy_id		= PHY_ID_KSZ9031,
  	.phy_id_mask	= MICREL_PHY_ID_MASK,
  	.name		= "Micrel KSZ9031 Gigabit PHY",
 -	.features	= PHY_GBIT_FEATURES,
 -	.flags		= PHY_HAS_INTERRUPT,
  	.driver_data	= &ksz9021_type,
  	.probe		= kszphy_probe,
 +	.get_features	= ksz9031_get_features,
  	.config_init	= ksz9031_config_init,
 +	.soft_reset	= genphy_soft_reset,
 +	.read_status	= ksz9031_read_status,
 +	.ack_interrupt	= kszphy_ack_interrupt,
 +	.config_intr	= kszphy_config_intr,
 +	.get_sset_count = kszphy_get_sset_count,
 +	.get_strings	= kszphy_get_strings,
 +	.get_stats	= kszphy_get_stats,
 +	.suspend	= genphy_suspend,
 +	.resume		= kszphy_resume,
 +}, {
 +	.phy_id		= PHY_ID_KSZ9131,
 +	.phy_id_mask	= MICREL_PHY_ID_MASK,
 +	.name		= "Microchip KSZ9131 Gigabit PHY",
 +	/* PHY_GBIT_FEATURES */
 +	.driver_data	= &ksz9021_type,
 +	.probe		= kszphy_probe,
 +	.config_init	= ksz9131_config_init,
  	.read_status	= ksz9031_read_status,
+ 	.ack_interrupt	= kszphy_ack_interrupt,
+ 	.config_intr	= kszphy_config_intr,
+ 	.get_sset_count = kszphy_get_sset_count,
+ 	.get_strings	= kszphy_get_strings,
+ 	.get_stats	= kszphy_get_stats,
+ 	.suspend	= genphy_suspend,
+ 	.resume		= kszphy_resume,
+ }, {
+ 	.phy_id		= PHY_ID_KSZ9131,
+ 	.phy_id_mask	= MICREL_PHY_ID_MASK,
+ 	.name		= "Microchip KSZ9131 Gigabit PHY",
+ 	.features	= PHY_GBIT_FEATURES,
+ 	.flags		= PHY_HAS_INTERRUPT,
+ 	.driver_data	= &ksz9021_type,
+ 	.probe		= kszphy_probe,
+ 	.config_init	= ksz9131_config_init,
+ 	.read_status	= ksz9031_read_status,
  	.ack_interrupt	= kszphy_ack_interrupt,
  	.config_intr	= kszphy_config_intr,
  	.get_sset_count = kszphy_get_sset_count,
diff --cc drivers/net/usb/qmi_wwan.c
index 4196c0e32740,f725c2b6eeaa..6ac3dd09fcd4
--- a/drivers/net/usb/qmi_wwan.c
+++ b/drivers/net/usb/qmi_wwan.c
@@@ -946,16 -865,29 +946,38 @@@ static const struct driver_info	qmi_wwa
  #define QMI_GOBI_DEVICE(vend, prod) \
  	QMI_FIXED_INTF(vend, prod, 0)
  
 +/* Quectel does not use fixed interface numbers on at least some of their
 + * devices. We need to check the number of endpoints to ensure that we bind to
 + * the correct interface.
 + */
 +#define QMI_QUIRK_QUECTEL_DYNCFG(vend, prod) \
 +	USB_DEVICE_AND_INTERFACE_INFO(vend, prod, USB_CLASS_VENDOR_SPEC, \
 +				      USB_SUBCLASS_VENDOR_SPEC, 0xff), \
 +	.driver_info = (unsigned long)&qmi_wwan_info_quirk_quectel_dyncfg
 +
  static const struct usb_device_id products[] = {
+ #if 1 //Added by Quectel
+ #ifndef QMI_FIXED_INTF
+ /* map QMI/wwan function by a fixed interface number */
+ #define QMI_FIXED_INTF(vend, prod, num) \
+ 	.match_flags = USB_DEVICE_ID_MATCH_DEVICE |
+ 	USB_DEVICE_ID_MATCH_INT_INFO, \
+ 	.idVendor = vend, \
+ 	.idProduct = prod, \
+ 	.bInterfaceClass = 0xff, \
+ 	.bInterfaceSubClass = 0xff, \
+ 	.bInterfaceProtocol = 0xff, \
+ 	.driver_info = (unsigned long)&qmi_wwan_force_int##num,
+ #endif
+ 	{ QMI_FIXED_INTF(0x05C6, 0x9003, 4) }, /* Quectel UC20 */
+ 	{ QMI_FIXED_INTF(0x2C7C, 0x0125, 4) }, /* Quectel EC25 */
+ 	{ QMI_FIXED_INTF(0x2C7C, 0x0121, 4) }, /* Quectel EC21 */
+ 	{ QMI_FIXED_INTF(0x05C6, 0x9215, 4) }, /* Quectel EC20 */
+ 	{ QMI_FIXED_INTF(0x2C7C, 0x0191, 4) }, /* Quectel EG91 */
+ 	{ QMI_FIXED_INTF(0x2C7C, 0x0195, 4) }, /* Quectel EG95 */
+ 	{ QMI_FIXED_INTF(0x2C7C, 0x0296, 4) }, /* Quectel BG96 */
+ 	{ QMI_FIXED_INTF(0x2C7C, 0x0435, 4) }, /* Quectel AG35 */
+ #endif
  	/* 1. CDC ECM like devices match on the control interface */
  	{	/* Huawei E392, E398 and possibly others sharing both device id and more... */
  		USB_VENDOR_AND_INTERFACE_INFO(HUAWEI_VENDOR_ID, USB_CLASS_VENDOR_SPEC, 1, 9),
diff --cc drivers/spi/spidev.c
index 255786f2e844,dadb17c323c4..cafacac7a960
--- a/drivers/spi/spidev.c
+++ b/drivers/spi/spidev.c
@@@ -662,9 -669,7 +662,13 @@@ static const struct of_device_id spidev
  	{ .compatible = "lineartechnology,ltc2488" },
  	{ .compatible = "ge,achc" },
  	{ .compatible = "semtech,sx1301" },
++<<<<<<< HEAD
 +	{ .compatible = "lwn,bk4" },
 +	{ .compatible = "dh,dhcom-board" },
 +	{ .compatible = "menlo,m53cpld" },
++=======
+ 	{ .compatible = "spidev" }, /* for device entry test */
++>>>>>>> android_10_idt_dev_200527-2
  	{},
  };
  MODULE_DEVICE_TABLE(of, spidev_dt_ids);
diff --cc drivers/usb/typec/Kconfig
index 895e2418de53,3322040079ce..2832fa4a8a4d
--- a/drivers/usb/typec/Kconfig
+++ b/drivers/usb/typec/Kconfig
@@@ -46,7 -45,61 +46,65 @@@ menuconfig TYPE
  
  if TYPEC
  
++<<<<<<< HEAD
 +source "drivers/usb/typec/tcpm/Kconfig"
++=======
+ config TYPEC_TCPM
+ 	tristate "USB Type-C Port Controller Manager"
+ 	depends on USB
+ 	select USB_ROLE_SWITCH
+ 	select POWER_SUPPLY
+ 	help
+ 	  The Type-C Port Controller Manager provides a USB PD and USB Type-C
+ 	  state machine for use with Type-C Port Controllers.
+ 
+ config TYPEC_HD3SS3220
+ 	tristate "TI HD3SS3220 Type-C DRP Port controller driver"
+ 	depends on I2C
+ 	help
+ 	  Say Y or M here if your system has TI HD3SS3220 Type-C DRP Port
+ 	  controller driver.
+ 
+ 	  If you choose to build this driver as a dynamically linked module, the
+ 	  module will be called hd3ss3220.ko.
+ 
+ if TYPEC_TCPM
+ 
+ config TYPEC_TCPCI
+ 	tristate "Type-C Port Controller Interface driver"
+ 	depends on I2C
+ 	select REGMAP_I2C
+ 	select GPIOLIB
+ 	help
+ 	  Type-C Port Controller driver for TCPCI-compliant controller.
+ 
+ config TYPEC_RT1711H
+ 	tristate "Richtek RT1711H Type-C chip driver"
+ 	depends on I2C
+ 	select TYPEC_TCPCI
+ 	help
+ 	  Richtek RT1711H Type-C chip driver that works with
+ 	  Type-C Port Controller Manager to provide USB PD and USB
+ 	  Type-C functionalities.
+ 
+ source "drivers/usb/typec/fusb302/Kconfig"
+ 
+ config TYPEC_WCOVE
+ 	tristate "Intel WhiskeyCove PMIC USB Type-C PHY driver"
+ 	depends on ACPI
+ 	depends on INTEL_SOC_PMIC
+ 	depends on INTEL_PMC_IPC
+ 	depends on BXT_WC_PMIC_OPREGION
+ 	help
+ 	  This driver adds support for USB Type-C detection on Intel Broxton
+ 	  platforms that have Intel Whiskey Cove PMIC. The driver can detect the
+ 	  role and cable orientation.
+ 
+ 	  To compile this driver as module, choose M here: the module will be
+ 	  called typec_wcove
+ 
+ endif # TYPEC_TCPM
++>>>>>>> android_10_idt_dev_200527-2
  
  source "drivers/usb/typec/ucsi/Kconfig"
  
diff --cc drivers/usb/typec/Makefile
index 6696b7263d61,b421c44af636..a004130b1ceb
--- a/drivers/usb/typec/Makefile
+++ b/drivers/usb/typec/Makefile
@@@ -6,3 -8,6 +6,9 @@@ obj-$(CONFIG_TYPEC_TCPM)	+= tcpm
  obj-$(CONFIG_TYPEC_UCSI)	+= ucsi/
  obj-$(CONFIG_TYPEC_TPS6598X)	+= tps6598x.o
  obj-$(CONFIG_TYPEC)		+= mux/
++<<<<<<< HEAD
++=======
+ obj-$(CONFIG_TYPEC_TCPCI)	+= tcpci.o
+ obj-$(CONFIG_TYPEC_RT1711H)	+= tcpci_rt1711h.o
+ obj-$(CONFIG_TYPEC_HD3SS3220)	+= hd3ss3220.o
++>>>>>>> android_10_idt_dev_200527-2
diff --cc drivers/video/fbdev/core/fbcon.c
index c9235a2f42f8,d625d383ab27..fdd53dec77e9
--- a/drivers/video/fbdev/core/fbcon.c
+++ b/drivers/video/fbdev/core/fbcon.c
@@@ -88,24 -87,7 +88,28 @@@
  #  define DPRINTK(fmt, args...)
  #endif
  
++<<<<<<< HEAD
 +/*
 + * FIXME: Locking
 + *
 + * - fbcon state itself is protected by the console_lock, and the code does a
 + *   pretty good job at making sure that lock is held everywhere it's needed.
 + *
 + * - access to the registered_fb array is entirely unprotected. This should use
 + *   proper object lifetime handling, i.e. get/put_fb_info. This also means
 + *   switching from indices to proper pointers for fb_info everywhere.
 + *
 + * - fbcon doesn't bother with fb_lock/unlock at all. This is buggy, since it
 + *   means concurrent access to the same fbdev from both fbcon and userspace
 + *   will blow up. To fix this all fbcon calls from fbmem.c need to be moved out
 + *   of fb_lock/unlock protected sections, since otherwise we'll recurse and
 + *   deadlock eventually. Aside: Due to these deadlock issues the fbdev code in
 + *   fbmem.c cannot use locking asserts, and there's lots of callers which get
 + *   the rules wrong, e.g. fbsysfs.c entirely missed fb_lock/unlock calls too.
 + */
++=======
+ #define CONSOLE_CURSOR_SHOWING		0	/* enable: 1, disable: 0 */
++>>>>>>> android_10_idt_dev_200527-2
  
  enum {
  	FBCON_LOGO_CANSHOW	= -1,	/* the logo can be shown */
@@@ -674,10 -667,7 +694,14 @@@ static void fbcon_prepare_logo(struct v
  		vc->vc_pos += logo_lines * vc->vc_size_row;
  		kfree(save);
  	}
++<<<<<<< HEAD
 +
 +	if (logo_shown == FBCON_LOGO_DONTSHOW)
 +		return;
 +
++=======
+ #endif /* CONSOLE_CURSOR_SHOWING */
++>>>>>>> android_10_idt_dev_200527-2
  	if (logo_lines > vc->vc_bottom) {
  		logo_shown = FBCON_LOGO_CANSHOW;
  		printk(KERN_INFO
diff --cc drivers/video/fbdev/core/fbmem.c
index 181129c5298a,9afa48a234dd..9bff9055555e
--- a/drivers/video/fbdev/core/fbmem.c
+++ b/drivers/video/fbdev/core/fbmem.c
@@@ -500,25 -507,14 +500,36 @@@ static int fb_show_logo_line(struct fb_
  		image.data = logo_new;
  		fb_set_logo(info, logo, logo_new, fb_logo.depth);
  	}
++<<<<<<< HEAD
 +
 +	if (fb_center_logo) {
 +		int xres = info->var.xres;
 +		int yres = info->var.yres;
 +
 +		if (rotate == FB_ROTATE_CW || rotate == FB_ROTATE_CCW) {
 +			xres = info->var.yres;
 +			yres = info->var.xres;
 +		}
 +
 +		while (n && (n * (logo->width + 8) - 8 > xres))
 +			--n;
 +		image.dx = (xres - n * (logo->width + 8) - 8) / 2;
 +		image.dy = y ?: (yres - logo->height) / 2;
 +	} else {
 +		image.dx = 0;
 +		image.dy = y;
 +	}
 +
++=======
+ #ifdef CONFIG_SPLASH_SCREEN_CENTERED
+ 	/* To show logo at center layout */
+ 	image.dx = ((info->var.xres / 2) - (logo->width / 2));
+ 	image.dy = ((info->var.yres / 2) - (logo->height / 2));
+ #else
+ 	image.dx = 0;
+ 	image.dy = y;
+ #endif /* CONFIG_SPLASH_SCREEN_CENTERED */
++>>>>>>> android_10_idt_dev_200527-2
  	image.width = logo->width;
  	image.height = logo->height;
  
diff --cc sound/soc/codecs/Kconfig
index f128ffabf5e5,2f062da51fbf..6e1f53a98694
--- a/sound/soc/codecs/Kconfig
+++ b/sound/soc/codecs/Kconfig
@@@ -991,10 -851,12 +991,11 @@@ config SND_SOC_RT563
  	depends on I2C
  
  config SND_SOC_RT5640
- 	tristate
+ 	tristate "Realtek ALC5640 CODEC"
+ 	depends on I2C
  
  config SND_SOC_RT5645
 -	tristate "Realtek ALC5645/ACL5650 CODEC"
 -	depends on I2C
 +        tristate
  
  config SND_SOC_RT5651
  	tristate
diff --cc sound/soc/codecs/rt5640.c
index adbae1f36a8a,999bf74937ff..a01876cc2237
--- a/sound/soc/codecs/rt5640.c
+++ b/sound/soc/codecs/rt5640.c
@@@ -2819,8 -2827,8 +2825,13 @@@ static int rt5640_i2c_probe(struct i2c_
  	regmap_update_bits(rt5640->regmap, RT5640_DUMMY1,
  				RT5640_MCLK_DET, RT5640_MCLK_DET);
  
++<<<<<<< HEAD
 +	rt5640->hp_mute = true;
 +	rt5640->irq = i2c->irq;
++=======
+ 	rt5640->hp_mute = 1;
+ 	rt5640->irq = irq;
++>>>>>>> android_10_idt_dev_200527-2
  	INIT_DELAYED_WORK(&rt5640->bp_work, rt5640_button_press_work);
  	INIT_WORK(&rt5640->jack_work, rt5640_jack_work);
  
diff --cc sound/soc/fsl/Makefile
index 2a324247a987,d18642aa5284..e71f473ff3b2
--- a/sound/soc/fsl/Makefile
+++ b/sound/soc/fsl/Makefile
@@@ -92,11 -95,9 +92,12 @@@ snd-soc-imx-ak4458-objs := imx-ak4458.
  snd-soc-imx-ak5558-objs := imx-ak5558.o
  snd-soc-imx-ak4497-objs := imx-ak4497.o
  snd-soc-imx-micfil-objs := imx-micfil.o
+ snd-soc-imx-rt5640-objs := imx-rt5640.o
  snd-soc-imx-dsp-objs := imx-dsp.o
 -snd-soc-imx-audmix-objs := imx-audmix.o
 +snd-soc-imx-si476x-objs := imx-si476x.o
 +snd-soc-imx-hdmi-objs := imx-hdmi.o
 +snd-soc-imx-cdnhdmi-objs := imx-cdnhdmi.o
 +snd-soc-imx-rpmsg-objs := imx-rpmsg.o
  
  obj-$(CONFIG_SND_SOC_EUKREA_TLV320) += snd-soc-eukrea-tlv320.o
  obj-$(CONFIG_SND_SOC_PHYCORE_AC97) += snd-soc-phycore-ac97.o
@@@ -110,20 -111,22 +111,27 @@@ obj-$(CONFIG_SND_SOC_IMX_WM8960) += snd
  obj-$(CONFIG_SND_SOC_IMX_WM8524) += snd-soc-imx-wm8524.o
  obj-$(CONFIG_SND_SOC_IMX_WM8962) += snd-soc-imx-wm8962.o
  obj-$(CONFIG_SND_SOC_IMX_XTOR) += snd-soc-imx-xtor.o
 -obj-$(CONFIG_SND_SOC_IMX_RPMSG) += snd-soc-imx-rpmsg.o
  obj-$(CONFIG_SND_SOC_IMX_SII902X) += snd-soc-imx-sii902x.o
 +obj-$(CONFIG_SND_SOC_IMX_RPMSG) += snd-soc-imx-rpmsg.o
  obj-$(CONFIG_SND_SOC_IMX_SPDIF) += snd-soc-imx-spdif.o
 -obj-$(CONFIG_SND_SOC_IMX_MICFIL) += snd-soc-imx-micfil.o
  obj-$(CONFIG_SND_SOC_IMX_MC13783) += snd-soc-imx-mc13783.o
 +obj-$(CONFIG_SND_SOC_IMX_AUDMIX) += snd-soc-imx-audmix.o
  obj-$(CONFIG_SND_SOC_IMX_MQS) += snd-soc-imx-mqs.o
 -obj-$(CONFIG_SND_SOC_IMX_SI476X) += snd-soc-imx-si476x.o
  obj-$(CONFIG_SND_SOC_IMX_PDM_MIC) += snd-soc-imx-pdm.o
  obj-$(CONFIG_SND_SOC_IMX_AK4458) += snd-soc-imx-ak4458.o
 -obj-$(CONFIG_SND_SOC_IMX_AK4497) += snd-soc-imx-ak4497.o
  obj-$(CONFIG_SND_SOC_IMX_AK5558) += snd-soc-imx-ak5558.o
++<<<<<<< HEAD
 +obj-$(CONFIG_SND_SOC_IMX_AK4497) += snd-soc-imx-ak4497.o
++=======
+ obj-$(CONFIG_SND_SOC_IMX_CDNHDMI) += snd-soc-imx-cdnhdmi.o
+ obj-$(CONFIG_SND_SOC_IMX_HDMI) += snd-soc-imx-hdmi.o
+ obj-$(CONFIG_SND_SOC_IMX_RT5640) += snd-soc-imx-rt5640.o
+ obj-$(CONFIG_SND_SOC_IMX_DSP) += snd-soc-imx-dsp.o
++>>>>>>> android_10_idt_dev_200527-2
  obj-$(CONFIG_SND_SOC_IMX_MICFIL) += snd-soc-imx-micfil.o
 -obj-$(CONFIG_SND_SOC_IMX_AUDMIX) += snd-soc-imx-audmix.o
 +obj-$(CONFIG_SND_SOC_IMX_DSP) += snd-soc-imx-dsp.o
 +obj-$(CONFIG_SND_SOC_IMX_SI476X) += snd-soc-imx-si476x.o
 +obj-$(CONFIG_SND_SOC_IMX_HDMI) += snd-soc-imx-hdmi.o
 +obj-$(CONFIG_SND_SOC_IMX_CDNHDMI) += snd-soc-imx-cdnhdmi.o
  
  AFLAGS_hdmi_pcm.o := -march=armv7-a -mtune=cortex-a9 -mfpu=neon -mfloat-abi=softfp
