24f9c2e82 George.Huang 2020-03-30

AOS-133: Add new option --s SERIAL_NUMBER

Change-Id: Ic607688068d3bbc4bd6b3aa0097e08a7e6c64648

diff --git a/tools/releasetools/ota_call.py b/tools/releasetools/ota_call.py
index ff977edfa..f6cd7ab7e 100644
--- a/tools/releasetools/ota_call.py
+++ b/tools/releasetools/ota_call.py
@@ -76,15 +76,17 @@ class Tools():
 
 ###############################################################
 
-def get_adb_device_serial():
+def get_adb_device_serial(device_sn):
   global _instant
   if _instant is None:
     _instant = Tools()
   msg, ret = _instant.execute_adb(['devices'], False)
-  lines = msg.splitlines()
-  if (len(lines) > 2):
-    _instant._sn = lines[1].split( )[0]
-  else:
+  for line in msg.splitlines():
+    if line == '' or line.startswith('List'):
+      continue
+    if line.split( )[0].startswith(device_sn):
+      _instant._sn = line.split( )[0]
+  if not _instant._sn:
     _instant._sn = ''
   return _instant._sn
 
@@ -142,7 +144,7 @@ def dump_ota_cmd(zip_path):
     for line in cmd_file.readlines():
       print(line.strip())
 
-def execute_cmd(zip_path):
+def execute_cmd(zip_path, device_sn):
   global _instant
   global _ota_cmd
   if _instant is None:
@@ -151,7 +153,7 @@ def execute_cmd(zip_path):
   if not _ota_cmd or not os.path.exists(_ota_cmd):
     raise Exception('_ota_cmd %s is not generated' % _ota_cmd)
 
-  if not get_adb_device_serial():
+  if not get_adb_device_serial(device_sn):
     raise ValueError('Can not find adb devices')
   print('device: %s' % _instant._sn)
 
@@ -183,9 +185,10 @@ def execute_cmd(zip_path):
 if __name__ == '__main__':
   parser = argparse.ArgumentParser()
   parser.add_argument('--update', help='Do update the ota zip', action='store_const', const=True, default=False, required=False)
+  parser.add_argument('-s', help='device sn', required=False, default='')
   parser.add_argument('--zip', help='ota zip path', required=True)
   args = parser.parse_args(sys.argv[1:])
 
   dump_ota_cmd(args.zip)
-  if args.update: execute_cmd(args.zip)
+  if args.update: execute_cmd(args.zip, args.s)
 
