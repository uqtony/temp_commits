e3ab7f3d0012 jenkins 2021-04-26

Merge branch 'merge_android-11.0.0-2.0.0_to_idt-imx-android-11-test' into idt-imx-android-11-test

Change-Id: Id41c9567b8a646d151370ba350b1f31434b58e73

diff --cc cmds/bootanimation/BootAnimation.cpp
index e00d5a9aaf54,cdd80150f19f..0b03db110d97
--- a/cmds/bootanimation/BootAnimation.cpp
+++ b/cmds/bootanimation/BootAnimation.cpp
@@@ -423,7 -391,7 +423,11 @@@ status_t BootAnimation::readyToRun() 
  
      SurfaceComposerClient::Transaction t;
      Rect displayRect(resolution.getWidth(),resolution.getHeight());
++<<<<<<< HEAD
 +    t.setDisplayProjection(mDisplayToken, rotation, displayRect, displayRect);
++=======
+     t.setDisplayProjection(mDisplayToken, ui::ROTATION_0, displayRect, displayRect);
++>>>>>>> merge_android-11.0.0-2.0.0_to_idt-imx-android-11-test
  
      // this guest property specifies multi-display IDs to show the boot animation
      // multiple ids can be set with comma (,) as separator, for example:
diff --cc packages/SystemUI/res-keyguard/values-ar/strings.xml
index 6d86a78360d8,459d162c65db..e4b7d42628cd
--- a/packages/SystemUI/res-keyguard/values-ar/strings.xml
+++ b/packages/SystemUI/res-keyguard/values-ar/strings.xml
@@@ -112,7 -113,7 +113,11 @@@
      <string name="kg_pin_accepted" msgid="1625501841604389716">"تم قبول الرمز"</string>
      <string name="keyguard_carrier_default" msgid="6359808469637388586">"لا تتوفر خدمة."</string>
      <string name="accessibility_ime_switch_button" msgid="9082358310194861329">"تبديل أسلوب الإدخال"</string>
++<<<<<<< HEAD
 +    <string name="airplane_mode" msgid="2528005343938497866">"وضع الطائرة"</string>
++=======
+     <string name="airplane_mode" msgid="2528005343938497866">"وضع الطيران"</string>
++>>>>>>> merge_android-11.0.0-2.0.0_to_idt-imx-android-11-test
      <string name="kg_prompt_reason_restart_pattern" msgid="4720554342633852066">"يجب رسم النقش بعد إعادة تشغيل الجهاز"</string>
      <string name="kg_prompt_reason_restart_pin" msgid="1587671566498057656">"يجب إدخال رقم التعريف الشخصي بعد إعادة تشغيل الجهاز"</string>
      <string name="kg_prompt_reason_restart_password" msgid="8061279087240952002">"يجب إدخال كلمة المرور بعد إعادة تشغيل الجهاز"</string>
diff --cc packages/SystemUI/res-keyguard/values-km/strings.xml
index 24b5c23a6732,fb38bfd88bd4..be6f38f7d672
--- a/packages/SystemUI/res-keyguard/values-km/strings.xml
+++ b/packages/SystemUI/res-keyguard/values-km/strings.xml
@@@ -100,7 -101,7 +101,11 @@@
      <string name="kg_pin_accepted" msgid="1625501841604389716">"កូដត្រូវ​បានទទួល​យក!"</string>
      <string name="keyguard_carrier_default" msgid="6359808469637388586">"គ្មាន​សេវា​ទេ។"</string>
      <string name="accessibility_ime_switch_button" msgid="9082358310194861329">"ប្ដូរ​វិធី​បញ្ចូល"</string>
++<<<<<<< HEAD
 +    <string name="airplane_mode" msgid="2528005343938497866">"មុខងារ​ពេល​ជិះ​យន្តហោះ"</string>
++=======
+     <string name="airplane_mode" msgid="2528005343938497866">"​ពេល​ជិះ​យន្តហោះ"</string>
++>>>>>>> merge_android-11.0.0-2.0.0_to_idt-imx-android-11-test
      <string name="kg_prompt_reason_restart_pattern" msgid="4720554342633852066">"តម្រូវឲ្យប្រើលំនាំ បន្ទាប់ពីឧបករណ៍ចាប់ផ្តើមឡើងវិញ"</string>
      <string name="kg_prompt_reason_restart_pin" msgid="1587671566498057656">"តម្រូវឲ្យបញ្ចូលកូដ PIN បន្ទាប់ពីឧបករណ៍ចាប់ផ្តើមឡើងវិញ"</string>
      <string name="kg_prompt_reason_restart_password" msgid="8061279087240952002">"តម្រូវឲ្យបញ្ចូលពាក្យសម្ងាត់ បន្ទាប់ពីឧបករណ៍ចាប់ផ្តើមឡើងវិញ"</string>
diff --cc packages/SystemUI/res-keyguard/values-uz/strings.xml
index 323fea5a608e,44e419180f6a..d659e24a31de
--- a/packages/SystemUI/res-keyguard/values-uz/strings.xml
+++ b/packages/SystemUI/res-keyguard/values-uz/strings.xml
@@@ -101,9 -102,9 +102,15 @@@
      <string name="keyguard_carrier_default" msgid="6359808469637388586">"Aloqa yo‘q."</string>
      <string name="accessibility_ime_switch_button" msgid="9082358310194861329">"Matn kiritish usulini almashtirish"</string>
      <string name="airplane_mode" msgid="2528005343938497866">"Parvoz rejimi"</string>
++<<<<<<< HEAD
 +    <string name="kg_prompt_reason_restart_pattern" msgid="4720554342633852066">"Qurilma o‘chirib yoqilgandan keyin grafik kalit talab qilinadi"</string>
 +    <string name="kg_prompt_reason_restart_pin" msgid="1587671566498057656">"Qurilma o‘chirib yoqilgandan keyin PIN kod talab qilinadi"</string>
 +    <string name="kg_prompt_reason_restart_password" msgid="8061279087240952002">"Qurilma o‘chirib yoqilgandan keyin parol talab qilinadi"</string>
++=======
+     <string name="kg_prompt_reason_restart_pattern" msgid="4720554342633852066">"Qurilma qayta ishga tushganidan keyin grafik kalitni kiritish zarur"</string>
+     <string name="kg_prompt_reason_restart_pin" msgid="1587671566498057656">"Qurilma qayta ishga tushganidan keyin PIN kodni kiritish zarur"</string>
+     <string name="kg_prompt_reason_restart_password" msgid="8061279087240952002">"Qurilma qayta ishga tushganidan keyin parolni kiritish zarur"</string>
++>>>>>>> merge_android-11.0.0-2.0.0_to_idt-imx-android-11-test
      <string name="kg_prompt_reason_timeout_pattern" msgid="9170360502528959889">"Qo‘shimcha xavfsizlik chorasi sifatida grafik kalit talab qilinadi"</string>
      <string name="kg_prompt_reason_timeout_pin" msgid="5945186097160029201">"Qo‘shimcha xavfsizlik chorasi sifatida PIN kod talab qilinadi"</string>
      <string name="kg_prompt_reason_timeout_password" msgid="2258263949430384278">"Qo‘shimcha xavfsizlik chorasi sifatida parol talab qilinadi"</string>
diff --cc services/core/java/com/android/server/ExtconUEventObserver.java
index 108fa08e18ce,693342869e1c..f933d6328439
--- a/services/core/java/com/android/server/ExtconUEventObserver.java
+++ b/services/core/java/com/android/server/ExtconUEventObserver.java
@@@ -16,9 -16,8 +16,10 @@@
  package com.android.server;
  
  import android.annotation.Nullable;
 +import android.annotation.StringDef;
 +import android.os.FileUtils;
  import android.os.UEventObserver;
+ import android.os.FileUtils;
  import android.util.ArrayMap;
  import android.util.Slog;
  
@@@ -188,15 -102,29 +189,34 @@@ public abstract class ExtconUEventObser
                  Slog.wtf(TAG, file + " exists " + file.exists() + " isDir " + file.isDirectory()
                          + " but listFiles returns null. "
                          + SELINUX_POLICIES_NEED_TO_BE_CHANGED);
 -                return new ArrayList<>(0);  // Always return a new list.
 +                sExtconInfos = new ExtconInfo[0];
              } else {
 -                ArrayList list = new ArrayList(files.length);
 +                ArrayList<ExtconInfo> list = new ArrayList<>(files.length);
                  for (File f : files) {
                      String name = f.getName();
++<<<<<<< HEAD
 +                    ExtconInfo uei = new ExtconInfo(name);
 +                    list.add(uei);
++=======
+                     if (p == null || p.matcher(name).matches()) {
+                         try
+                         {
+                             String state = FileUtils.readTextFile(new File("/sys/class/extcon/" + name + "/state"), 0, null).trim();
+                             if (state.contains("HDMI") || state.contains("HEADPHONE") || state.contains("MICROPHONE") || state.contains("LINE-OUT")) {
+                                 ExtconInfo uei = new ExtconInfo(name);
+                                 list.add(uei);
+                             }
+                         } catch (IOException e) {
+                             Slog.e(TAG, "Can't access /sys/class/extcon/" + name + "/state");
+                             continue;
+                         }
+                         if (LOG) Slog.d(TAG, name + " matches " + regex);
+                     } else {
+                         if (LOG) Slog.d(TAG, name + " does not match " + regex);
+                     }
++>>>>>>> merge_android-11.0.0-2.0.0_to_idt-imx-android-11-test
                  }
 -                return list;
 +                sExtconInfos = list.toArray(new ExtconInfo[0]);
              }
          }
  
diff --cc services/core/java/com/android/server/WiredAccessoryManager.java
index e03e42ad978f,da2225b49ec4..eb7130c3a26e
--- a/services/core/java/com/android/server/WiredAccessoryManager.java
+++ b/services/core/java/com/android/server/WiredAccessoryManager.java
@@@ -490,13 -490,7 +490,17 @@@ final class WiredAccessoryManager imple
          private final List<ExtconInfo> mExtconInfos;
  
          WiredAccessoryExtconObserver() {
++<<<<<<< HEAD
 +            mExtconInfos = ExtconInfo.getExtconInfoForTypes(new String[]{
 +                    ExtconInfo.EXTCON_HEADPHONE,
 +                    ExtconInfo.EXTCON_MICROPHONE,
 +                    ExtconInfo.EXTCON_HDMI,
 +                    ExtconInfo.EXTCON_LINE_OUT,
 +
 +            });
++=======
+             mExtconInfos = ExtconInfo.getExtconInfos(".*extcon.*");
++>>>>>>> merge_android-11.0.0-2.0.0_to_idt-imx-android-11-test
  
          }
  
@@@ -527,23 -521,28 +531,43 @@@
          @Override
          public Pair<Integer, Integer> parseState(ExtconInfo extconInfo, String status) {
              if (LOG) Slog.v(TAG, "status  " + status);
 -            int []maskAndState = {0,0};
 +            int[] maskAndState = {0, 0};
              // extcon event state changes from kernel4.9
              // new state will be like STATE=MICROPHONE=1
HEADPHONE=0
++<<<<<<< HEAD
 +            if (extconInfo.hasCableType(ExtconInfo.EXTCON_HEADPHONE)) {
 +                updateBit(maskAndState, BIT_HEADSET_NO_MIC, status, ExtconInfo.EXTCON_HEADPHONE);
 +            }
 +            if (extconInfo.hasCableType(ExtconInfo.EXTCON_MICROPHONE)) {
 +                updateBit(maskAndState, BIT_HEADSET, status, ExtconInfo.EXTCON_MICROPHONE);
 +            }
 +            if (extconInfo.hasCableType(ExtconInfo.EXTCON_HDMI)) {
 +                updateBit(maskAndState, BIT_HDMI_AUDIO, status, ExtconInfo.EXTCON_HDMI);
 +            }
 +            if (extconInfo.hasCableType(ExtconInfo.EXTCON_LINE_OUT)) {
 +                updateBit(maskAndState, BIT_LINEOUT, status, ExtconInfo.EXTCON_LINE_OUT);
 +            }
++=======
+             String state = extconInfo.getState();
+             if (state != null && state.contains("HEADPHONE")) {
+                 updateBit(maskAndState, BIT_HEADSET_NO_MIC, status, "HEADPHONE") ;
+             }
+ 
+             if (state != null && state.contains("MICROPHONE")) {
+                 updateBit(maskAndState, BIT_HEADSET, status, "MICROPHONE") ;
+             }
+ 
+             if (state != null && state.contains("HDMI")) {
+                 updateBit(maskAndState, BIT_HDMI_AUDIO, status, "HDMI") ;
+             }
+ 
+             if (state != null && state.contains("LINE-OUT")) {
+                 updateBit(maskAndState, BIT_LINEOUT, status, "LINE-OUT") ;
+             }
+ 
++>>>>>>> merge_android-11.0.0-2.0.0_to_idt-imx-android-11-test
              if (LOG) Slog.v(TAG, "mask " + maskAndState[0] + " state " + maskAndState[1]);
 -            return Pair.create(maskAndState[0],maskAndState[1]);
 +            return Pair.create(maskAndState[0], maskAndState[1]);
          }
  
          @Override
diff --cc services/core/java/com/android/server/pm/PackageManagerService.java
index 8e817aef984c,0af4ff4df93f..eee9ed271114
--- a/services/core/java/com/android/server/pm/PackageManagerService.java
+++ b/services/core/java/com/android/server/pm/PackageManagerService.java
@@@ -3651,11 -3657,7 +3658,15 @@@ public class PackageManagerService exte
  
          mServiceStartWithDelay = SystemClock.uptimeMillis() + (60 * 1000L);
  
++<<<<<<< HEAD
 +        try {
 +            AMS4FConnector.shared().start(mContext, mHandler);
 +        } catch (Exception e) {
 +            logCriticalInfo(Log.ERROR, "AMS4FConnector start failed");
 +        }
++=======
+         Slog.i(TAG, "Fix for b/169414761 is applied");
++>>>>>>> merge_android-11.0.0-2.0.0_to_idt-imx-android-11-test
      }
  
      /**
diff --cc services/voiceinteraction/java/com/android/server/soundtrigger/SoundTriggerService.java
index 9b68f3369441,fe0f7b80997e..753110ecca31
--- a/services/voiceinteraction/java/com/android/server/soundtrigger/SoundTriggerService.java
+++ b/services/voiceinteraction/java/com/android/server/soundtrigger/SoundTriggerService.java
@@@ -697,7 -697,7 +697,11 @@@ public class SoundTriggerService extend
              synchronized (mLock) {
                  ModuleProperties properties = mSoundTriggerHelper.getModuleProperties();
                  sEventLogger.log(new SoundTriggerLogger.StringEvent(
++<<<<<<< HEAD
 +                        "getModuleProperties(): " + Objects.toString(properties)));
++=======
+                         "getModuleProperties(): " + properties));
++>>>>>>> merge_android-11.0.0-2.0.0_to_idt-imx-android-11-test
                  return properties;
              }
          }
