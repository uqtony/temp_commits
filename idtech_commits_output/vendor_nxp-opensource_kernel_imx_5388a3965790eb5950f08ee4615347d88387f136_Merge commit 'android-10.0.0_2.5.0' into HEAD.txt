5388a3965790 George.Huang 2020-10-25

Merge commit 'android-10.0.0_2.5.0' into HEAD

Change-Id: I0dcc97b75dd3b1e73956cd2a9c9b1a754f114fe9

diff --cc arch/arm64/boot/dts/freescale/Makefile
index 3187d5e0fda4,ada5bc979059..0f4006e386ca
--- a/arch/arm64/boot/dts/freescale/Makefile
+++ b/arch/arm64/boot/dts/freescale/Makefile
@@@ -67,12 -69,14 +69,14 @@@ dtb-$(CONFIG_ARCH_MXC) += imx8mn-ddr4-e
  dtb-$(CONFIG_ARCH_MXC) += imx8mn-ab2.dtb imx8mn-ddr4-ab2.dtb
  dtb-$(CONFIG_ARCH_MXC) += imx8mp-evk.dtb imx8mp-evk-root.dtb imx8mp-evk-inmate.dtb imx8mp-evk-no-product.dtb imx8mp-evk-rpmsg.dtb \
  			  imx8mp-evk-rm67191.dtb imx8mp-evk-flexcan2.dtb \
 -			  imx8mp-evk-no-dynamic_partition.dts imx8mp-evk-no-product-no-dynamic_partition.dts \
 +			  imx8mp-evk-no-dynamic_partition.dtb imx8mp-evk-no-product-no-dynamic_partition.dtb \
  			  imx8mp-evk-it6263-lvds-dual-channel.dtb \
  			  imx8mp-evk-jdi-wuxga-lvds-panel.dtb imx8mp-ab2.dtb imx8mp-evk-sof-wm8960.dtb \
- 			  imx8mp-evk-dsp.dtb imx8mp-evk-ov2775.dtb imx8mp-evk-basler.dtb
+ 			  imx8mp-evk-dsp.dtb imx8mp-evk-ov2775.dtb imx8mp-evk-basler.dtb imx8mp-evk-pcie-ep.dtb \
+ 			  imx8mp-evk-spdif-lb.dtb imx8mp-evk-dsp-lpa.dtb imx8mp-evk-ov2775-ov5640.dtb \
+ 			  imx8mp-evk-basler-ov5640.dtb imx8mp-evk-dual-ov2775.dtb
  dtb-$(CONFIG_ARCH_MXC) += imx8mq-evk.dtb imx8mq-evk-rpmsg.dtb imx8mq-evk-pcie1-m2.dtb imx8mq-evk-usd-wifi.dtb \
- 			  imx8mq-evk-usdhc2-m2.dtb \
+ 			  imx8mq-evk-usdhc2-m2.dtb imx8mq-evk-pcie-ep.dtb \
  			  imx8mq-evk-no-product.dtb imx8mq-evk-no-dynamic_partition.dtb \
  			  imx8mq-evk-no-product-no-dynamic_partition.dtb
  dtb-$(CONFIG_ARCH_MXC) += imx8mq-evk-ak4497.dtb imx8mq-evk-audio-tdm.dtb imx8mq-evk-pdm.dtb
@@@ -158,29 -167,9 +167,34 @@@ dtb-$(CONFIG_ARCH_MXC) += imx8qxp-mek.d
  dtb-$(CONFIG_ARCH_MXC) += imx8qxp-mek-dom0.dtb imx8qxp-mek-root.dtb \
  			  imx8qxp-mek-inmate.dtb
  dtb-$(CONFIG_ARCH_MXC) += imx8dxl-evk.dtb imx8dxl-evk-rpmsg.dtb \
- 			  imx8dxl-evk-enet0.dtb imx8dxl-evk-enet0-tja1100.dtb imx8dxl-evk-pcie.dtb \
+ 			  imx8dxl-evk-enet0.dtb imx8dxl-evk-enet0-tja1100.dtb \
  			  imx8dxl-evk-lpspi-slave.dtb \
++<<<<<<< HEAD
 +			  imx8dxl-ddr3-evk.dtb
 +
 +dtb-$(CONFIG_ARCH_MXC) += idt_imx8mq_evt-0_evk_evk-0_mic3g.dtb \
 +			 idt_imx8mq_evt-0_evk_dual-0_mic3g.dtb \
 +			 idt_imx8mq_evt-0_evk_mipi-0_mic3g.dtb \
 +			 idt_imx8mq_evt-0_evk_mipipanel-0_mic3g.dtb \
 +			 idt_imx8mq_evt-0_evk_lcdifrm67191-0_mic3g.dtb \
 +			 idt_imx8mq_evt-0_evk_ram1gb-0_mic1g.dtb \
 +			 idt_a300_evt-0_devboard_evt-0_ktc2g.dtb \
 +			 idt_a300_evt-0_devboard_hdmi-0_ktc2g.dtb \
 +			 idt_a300_evt-0_devboard_evt-1_ktc2g.dtb \
 +			 idt_a300_evt-0_devboard_hdmi-1_ktc2g.dtb \
 +			 idt_a300_evt-0_devboard_evt-2_ktc2g.dtb \
 +			 idt_imx8mn_evt-0_evk_rpmsg-0_mic2g.dtb \
 +			 idt_imx8mn_evt-0_evk_evk-0_mic2g.dtb \
 +			 idt_a100_evt-0_devboard_evt-0_ktc2g.dtb \
 +			 idt_a100_evt-0_devboard_evt-1_ktc2g.dtb \
 +			 idt_a100_evt-0_devboard_evt-0_ktc1g.dtb \
 +			 idt_a300_evt-0_devboard_evt-1_ktc4g.dtb \
 +			 idt_imx8mp_evt-0_evk_evk-0_mic6g.dtb
 +
++=======
+ 			  imx8dxl-evk-pcie-ep.dtb \
+ 			  imx8dxl-ddr3-val.dtb imx8dxl-evk-root.dtb imx8dxl-evk-inmate.dtb
++>>>>>>> 60cabbcd605f
  dtb-$(CONFIG_ARCH_S32) += s32v234-evb.dtb \
  			  s32v234-sbc.dtb
 +
diff --cc arch/arm64/boot/dts/freescale/imx8mn-evk.dts
index 7d4ff59d4fab,c47d2147a314..8554deed6d82
--- a/arch/arm64/boot/dts/freescale/imx8mn-evk.dts
+++ b/arch/arm64/boot/dts/freescale/imx8mn-evk.dts
@@@ -63,10 -63,11 +63,18 @@@
  		};
  	};
  
++<<<<<<< HEAD
 +	bt_rfkill {
 +		compatible = "fsl,mxc_bt_rfkill";
 +		bt-power-gpios = <&gpio2 6 GPIO_ACTIVE_LOW>;
 +		status ="okay";
++=======
+ 	ir_recv: ir-receiver {
+ 		compatible = "gpio-ir-receiver";
+ 		gpios = <&gpio1 13 GPIO_ACTIVE_LOW>;
+ 		pinctrl-names = "default";
+ 		pinctrl-0 = <&pinctrl_ir_recv>;
++>>>>>>> 60cabbcd605f
  	};
  
  	usdhc1_pwrseq: usdhc1_pwrseq {
diff --cc arch/arm64/boot/dts/freescale/imx8mq-evk.dts
index 04632138027b,84edc3331e13..e9c47e06dac1
--- a/arch/arm64/boot/dts/freescale/imx8mq-evk.dts
+++ b/arch/arm64/boot/dts/freescale/imx8mq-evk.dts
@@@ -104,10 -111,11 +111,18 @@@
  		};
  	};
  
++<<<<<<< HEAD
 +	bt_rfkill {
 +		compatible = "fsl,mxc_bt_rfkill";
 +		bt-power-gpios = <&gpio3 5 GPIO_ACTIVE_LOW>;
 +		status ="okay";
++=======
+ 	ir_recv: ir-receiver {
+ 		compatible = "gpio-ir-receiver";
+ 		gpios = <&gpio1 12 GPIO_ACTIVE_LOW>;
+ 		pinctrl-names = "default";
+ 		pinctrl-0 = <&pinctrl_ir_recv>;
++>>>>>>> 60cabbcd605f
  	};
  
  	resmem: reserved-memory {
@@@ -746,7 -799,7 +806,11 @@@
  };
  
  &usb3_phy0 {
++<<<<<<< HEAD
 +	#phy-cells = <1>;
++=======
+ 	vbus-power-source = <&ptn5110>;
++>>>>>>> 60cabbcd605f
  	status = "okay";
  };
  
diff --cc drivers/bluetooth/mx8_bt_rfkill.c
index e447385b256b,86cc5e8ae2b0..3918cdcdf5ce
--- a/drivers/bluetooth/mx8_bt_rfkill.c
+++ b/drivers/bluetooth/mx8_bt_rfkill.c
@@@ -45,21 -45,30 +45,40 @@@ static int system_in_suspend
  
  struct mxc_bt_rfkill_data {
  	int bt_power_gpio;
++<<<<<<< HEAD
 +	bool active_low;
++=======
+ 	s32 delay_us;
+ 	s32 post_delay_ms;
++>>>>>>> 60cabbcd605f
  };
  
  struct mxc_bt_rfkill_pdata {
  };
  
- static void mxc_bt_rfkill_reset(void *rfkdata)
+ static int mxc_bt_rfkill_reset(void *rfkdata)
  {
  	struct mxc_bt_rfkill_data *data = rfkdata;
+ 
+ 	if (data->delay_us < 0)
+ 		return -ENOSYS;
+ 
  	printk(KERN_INFO "mxc_bt_rfkill_reset
");
  	if (gpio_is_valid(data->bt_power_gpio)) {
++<<<<<<< HEAD
 +		gpio_set_value_cansleep(data->bt_power_gpio, data->active_low);
 +		msleep(500);
 +		gpio_set_value_cansleep(data->bt_power_gpio, !data->active_low);
++=======
+ 		gpio_set_value_cansleep(data->bt_power_gpio, 0);
+ 		udelay(data->delay_us);
+ 		gpio_set_value_cansleep(data->bt_power_gpio, 1);
+ 		if (data->post_delay_ms > 0)
+ 			msleep(data->post_delay_ms);
++>>>>>>> 60cabbcd605f
  	}
+ 
+ 	return 0;
  }
  
  static int mxc_bt_rfkill_power_change(void *rfkdata, int status)
@@@ -157,7 -169,17 +179,21 @@@ static int mxc_bt_rfkill_probe(struct p
  	}
  
  	data->bt_power_gpio = of_get_named_gpio(np, "bt-power-gpios", 0);
++<<<<<<< HEAD
 +	data->active_low = of_property_read_bool(np, "active-low");
++=======
+ 
+ 	ret = of_property_read_u32(np, "reset-delay-us", &data->delay_us);
+ 	if (ret < 0)
+ 		data->delay_us = -1;
+ 	else if (data->delay_us < 0)
+ 		dev_warn(&pdev->dev, "reset delay too high
");
+ 
+ 	ret = of_property_read_u32(np, "reset-post-delay-ms", &data->post_delay_ms);
+ 	if (ret < 0)
+ 		data->post_delay_ms = -1;
+ 
++>>>>>>> 60cabbcd605f
  	if (data->bt_power_gpio == -EPROBE_DEFER) {
  		printk(KERN_INFO "mxc_bt_rfkill: gpio not ready, need defer
");
  		return -EPROBE_DEFER;
