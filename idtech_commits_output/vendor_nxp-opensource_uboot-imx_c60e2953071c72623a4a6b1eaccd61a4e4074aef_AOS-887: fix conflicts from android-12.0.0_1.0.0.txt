c60e295307 George.Huang 2022-02-25

AOS-887: fix conflicts from android-12.0.0_1.0.0

Change-Id: Id8be8d1b9d931e8c31e44f4520443d378e1ceb50

diff --git a/arch/arm/mach-imx/imx8m/Kconfig b/arch/arm/mach-imx/imx8m/Kconfig
index 8bafd8f3b4..0f9435c88a 100644
--- a/arch/arm/mach-imx/imx8m/Kconfig
+++ b/arch/arm/mach-imx/imx8m/Kconfig
@@ -287,12 +287,9 @@ endchoice
 
 source "board/freescale/imx8mq_evk/Kconfig"
 source "board/freescale/imx8mq_val/Kconfig"
-<<<<<<< HEAD
 source "board/freescale/imx8mq_a300/Kconfig"
 source "board/freescale/imx8mq_phanbell/Kconfig"
-=======
 source "board/freescale/imx8mm_ab2/Kconfig"
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
 source "board/freescale/imx8mm_evk/Kconfig"
 source "board/freescale/imx8mm_val/Kconfig"
 source "board/freescale/imx8mn_evk/Kconfig"
diff --git a/arch/arm/mach-imx/spl.c b/arch/arm/mach-imx/spl.c
index 95599d3f0c..5555fe8dfa 100644
--- a/arch/arm/mach-imx/spl.c
+++ b/arch/arm/mach-imx/spl.c
@@ -319,21 +319,6 @@ ulong board_spl_fit_size_align(ulong size)
 	return size;
 }
 
-<<<<<<< HEAD
-int board_spl_fit_post_load(const void *fit)
-{
-	u32 offset = ALIGN(fdt_totalsize(fit), 0x1000);
-
-	if (imx_hab_authenticate_image((uintptr_t)fit,
-				       offset + IVT_SIZE + CSF_PAD_SIZE,
-				       offset)) {
-		puts("spl: ERROR:  image authentication unsuccessful
");
-		return -1;
-	}
-	return 0;
-}
-=======
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
 #endif
 
 void* board_spl_fit_buffer_addr(ulong fit_size, int sectors, int bl_len)
@@ -415,7 +400,7 @@ exit:
 }
 #endif
 
-void board_spl_fit_post_load(const void *fit, struct spl_image_info *spl_image)
+int board_spl_fit_post_load(const void *fit, struct spl_image_info *spl_image)
 {
 #if defined(CONFIG_IMX_HAB) && !defined(CONFIG_SPL_FIT_SIGNATURE)
 	if (!(spl_image->flags & SPL_FIT_BYPASS_POST_LOAD)) {
@@ -424,7 +409,8 @@ void board_spl_fit_post_load(const void *fit, struct spl_image_info *spl_image)
 		if (imx_hab_authenticate_image((uintptr_t)fit,
 					       offset + IVT_SIZE + CSF_PAD_SIZE,
 					       offset)) {
-			panic("spl: ERROR:  image authentication unsuccessful
");
+			puts("spl: ERROR:  image authentication unsuccessful
");
+			return -1;
 		}
 	}
 #endif
@@ -439,6 +425,7 @@ void board_spl_fit_post_load(const void *fit, struct spl_image_info *spl_image)
 					(void *)(CONFIG_IMX8M_MCU_RDC_STOP_CONFIG_ADDR + ALIGN(strlen(MCU_RDC_MAGIC), 4)));
 	}
 #endif
+	return 0;
 }
 
 #ifdef CONFIG_IMX_TRUSTY_OS
diff --git a/board/freescale/imx8mp_evk/Makefile b/board/freescale/imx8mp_evk/Makefile
index 26969c520b..0f09e44a50 100644
--- a/board/freescale/imx8mp_evk/Makefile
+++ b/board/freescale/imx8mp_evk/Makefile
@@ -8,17 +8,14 @@ obj-y += imx8mp_evk.o
 
 ifdef CONFIG_SPL_BUILD
 obj-y += spl.o
-<<<<<<< HEAD
-ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
-=======
 ifdef CONFIG_IMX8M_LPDDR4_FREQ0_3200MTS
 obj-y += lpddr4_timing_ndm.o
 else
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
+ifdef CONFIG_IMX8M_LPDDR4_FREQ0_2400MTS
 obj-$(CONFIG_IMX8M_LPDDR4) += lpddr4_timing.o
 else
 obj-$(CONFIG_IMX8M_LPDDR4) += lpddr4_timing_4000mts.o
-endif
 obj-$(CONFIG_IMX8M_DDR4) += ddr4_timing.o
 endif
 endif
+endif
diff --git a/common/image-android.c b/common/image-android.c
index d499bfbdfa..74b87af96b 100644
--- a/common/image-android.c
+++ b/common/image-android.c
@@ -142,18 +142,12 @@ static void append_androidboot_args(char *args, uint32_t *len)
 	struct tag_serialnr serialnr;
 	get_board_serial(&serialnr);
 
-<<<<<<< HEAD
 	/* IDTech modified to pass idt serial number to kernel */
 	char idt_serial[BDINFO_DATA_SIZE] = "";
 	idt_get_board_serial(idt_serial);
 
-	sprintf(newbootargs, " androidboot.serialno=%s", idt_serial);
-
-	strncat(commandline, newbootargs, COMMANDLINE_LENGTH - strlen(commandline));
-=======
-	sprintf(args_buf, " androidboot.serialno=%08x%08x", serialnr.high, serialnr.low);
+	sprintf(args_buf, " androidboot.serialno=%s", idt_serial);
 	strncat(args, args_buf, *len - strlen(args));
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
 
 	if (serialnr.high + serialnr.low != 0) {
 		char bd_addr[16]={0};
@@ -191,13 +185,12 @@ static void append_androidboot_args(char *args, uint32_t *len)
 		strncat(args, args_buf, *len - strlen(args));
 	}
 
-<<<<<<< HEAD
 	/* append board type into bootargs */
 	char idt_board_type[BDINFO_DATA_SIZE] = "";
 
 	if (idt_get_board_type(idt_board_type, BDINFO_DATA_SIZE)) {
-		sprintf(newbootargs, " androidboot.board_type=%s", idt_board_type);
-		strncat(commandline, newbootargs, sizeof(commandline) - strlen(commandline));
+		sprintf(args_buf, " androidboot.board_type=%s", idt_board_type);
+		strncat(args, args_buf, sizeof(commandline) - strlen(commandline));
 	} else {
 		printf("WARN: failed to get idt_get_board_type
");
 	}
@@ -211,10 +204,10 @@ static void append_androidboot_args(char *args, uint32_t *len)
 		if ((idt_disp_rotation = get_disp_rotation(i)) != NULL) {
 			if (i != DISPLAY_MAIN)
 				sprintf(append, "_disp_%d", (i+1));
-			sprintf(newbootargs, " androidboot.idt_orientation%s=%s",
+			sprintf(args_buf, " androidboot.idt_orientation%s=%s",
 					(i == DISPLAY_MAIN)?"":append,
 					idt_disp_rotation);
-			strncat(commandline, newbootargs, sizeof(commandline) - strlen(commandline));
+			strncat(args, args_buf, sizeof(commandline) - strlen(commandline));
 		} else {
 			break;
 		}
@@ -223,14 +216,11 @@ static void append_androidboot_args(char *args, uint32_t *len)
 	char idt_display_id[BDINFO_DATA_SIZE] = "";
 
 	if (idt_get_board_display_id(idt_display_id, BDINFO_DATA_SIZE)) {
-		sprintf(newbootargs, " androidboot.idt_display_id=%s", idt_display_id);
-		strncat(commandline, newbootargs, sizeof(commandline) - strlen(commandline));
+		sprintf(args_buf, " androidboot.idt_display_id=%s", idt_display_id);
+		strncat(args, args_buf, sizeof(commandline) - strlen(commandline));
 	}
 
-	sprintf(newbootargs,
-=======
 	sprintf(args_buf,
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
 			" androidboot.boot_device_root=mmcblk%d", mmc_map_to_kernel_blk(mmc_get_env_dev()));
 	strncat(args, args_buf, *len - strlen(args));
 
diff --git a/common/spl/spl_fit.c b/common/spl/spl_fit.c
index 8f19851719..7c60986301 100644
--- a/common/spl/spl_fit.c
+++ b/common/spl/spl_fit.c
@@ -34,11 +34,7 @@ struct spl_fit_info {
 	int conf_node;		/* FDT offset to selected configuration node */
 };
 
-<<<<<<< HEAD
-__weak int board_spl_fit_post_load(const void *fit)
-=======
-__weak void board_spl_fit_post_load(const void *fit, struct spl_image_info *spl_image)
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
+__weak int board_spl_fit_post_load(const void *fit, struct spl_image_info *spl_image)
 {
 	return 0;
 }
@@ -785,15 +781,10 @@ int spl_load_simple_fit(struct spl_image_info *spl_image,
 
 	spl_image->flags |= SPL_FIT_FOUND;
 
-<<<<<<< HEAD
 	ret = 0;
-	if (IS_ENABLED(CONFIG_IMX_HAB) && !(spl_image->flags & SPL_FIT_BYPASS_POST_LOAD))
-		ret = board_spl_fit_post_load(ctx.fit);
+	ret = board_spl_fit_post_load(ctx.fit, spl_image);
 	if (ret < 0)
 		return ret;
-=======
-	board_spl_fit_post_load(ctx.fit, spl_image);
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
 
 	return 0;
 }
diff --git a/drivers/fastboot/fb_fsl/fb_fsl_boot.c b/drivers/fastboot/fb_fsl/fb_fsl_boot.c
index 6afa6ee252..d35049a9db 100644
--- a/drivers/fastboot/fb_fsl/fb_fsl_boot.c
+++ b/drivers/fastboot/fb_fsl/fb_fsl_boot.c
@@ -733,25 +733,19 @@ find_out:
 
 int do_boota(struct cmd_tbl *cmdtp, int flag, int argc, char * const argv[]) {
 
-	u32 avb_metric;
-	u32 kernel_image_size = 0;
-<<<<<<< HEAD
 	int entry_idx;
-	bool check_image_arm64 =  false;
-	bool is_recovery_mode = false;
 	bool retry_boot =  false;
 #ifdef CONFIG_ANDROID_AB_SUPPORT
 	int retry_count_before_avb = -1, retry_count_after_avb = -1;
 #endif
-	bool gki_is_supported = false;
-=======
+	u32 avb_metric;
+	u32 kernel_image_size = 0;
 	u32 ramdisk_size;
 	ulong kernel_addr;
 	ulong ramdisk_addr;
 	int boot_header_version = 0;
 	bool check_image_arm64 =  false;
 	bool is_recovery_mode = false;
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
 
 	/* 'hdr' should point to boot.img */
 	struct andr_img_hdr *hdr = NULL;
diff --git a/drivers/fastboot/fb_fsl/fb_fsl_partitions.c b/drivers/fastboot/fb_fsl/fb_fsl_partitions.c
index f975dfe26a..80cd1017d9 100644
--- a/drivers/fastboot/fb_fsl/fb_fsl_partitions.c
+++ b/drivers/fastboot/fb_fsl/fb_fsl_partitions.c
@@ -243,21 +243,13 @@ static int _fastboot_parts_load_from_ptable(void)
 
 	unsigned int factor = (4096/512);
 	unsigned int spl_start = bootloader_mmc_offset() / dev_desc->blksz;
-	unsigned int spl_length = (ANDROID_BOOTLOADER_SIZE / dev_desc->blksz) / 2 - spl_start;
+	unsigned int spl_length = (boot_loader_psize / dev_desc->blksz) / 2 - spl_start;
 	unsigned int spl_length_4k_aligned = (unsigned int)(spl_length / factor) * factor;
 
 	/* Bootloader aka spl_a */
 	strcpy(ptable[PTN_BOOTLOADER_INDEX].name, FASTBOOT_PARTITION_BOOTLOADER);
-<<<<<<< HEAD
 	ptable[PTN_BOOTLOADER_INDEX].start = spl_start;
 	ptable[PTN_BOOTLOADER_INDEX].length = spl_length_4k_aligned;
-=======
-	ptable[PTN_BOOTLOADER_INDEX].start =
-				bootloader_mmc_offset() / dev_desc->blksz;
-	ptable[PTN_BOOTLOADER_INDEX].length =
-				 boot_loader_psize / dev_desc->blksz;
-
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
 	ptable[PTN_BOOTLOADER_INDEX].partition_id = boot_partition;
 	ptable[PTN_BOOTLOADER_INDEX].flags = FASTBOOT_PTENTRY_FLAGS_UNERASEABLE;
 	strcpy(ptable[PTN_BOOTLOADER_INDEX].fstype, "raw");
diff --git a/drivers/video/nxp/imx/mipi_dsi_northwest.c b/drivers/video/nxp/imx/mipi_dsi_northwest.c
index c6060f4bca..de492290c1 100644
--- a/drivers/video/nxp/imx/mipi_dsi_northwest.c
+++ b/drivers/video/nxp/imx/mipi_dsi_northwest.c
@@ -706,11 +706,7 @@ static int mipi_dsi_pkt_write(struct mipi_dsi_northwest_info *mipi_dsi,
 	int ret = 0;
 	const uint8_t *data = (const uint8_t *)buf;
 
-<<<<<<< HEAD
-	debug("mipi_dsi_pkt_write data_type 0x%x, buf 0x%x, len %u
", data_type, (u32)(uintptr_t)buf, len);
-=======
 	debug("mipi_dsi_pkt_write data_type 0x%x, buf 0x%lx, len %u
", data_type, (ulong)buf, len);
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
 
 	if (len == 0)
 		/* handle generic long write command */
@@ -1318,21 +1314,13 @@ static int mipi_dsi_northwest_init(struct udevice *dev,
 		return -EINVAL;
 	}
 
-<<<<<<< HEAD
 #ifndef CONFIG_IMX8MQ
-	int ret = dev_read_u32(device->dev, "max-data-rate", &dsi->max_data_rate);
-	if (ret) {
-		dev_err(device->dev, "fail to get max-data-rate
");
-		return -EINVAL;
-	}
-=======
 	if (device_is_compatible(device->dev, "fsl,imx7ulp-mipi-dsi")) {
-		ret = dev_read_u32(device->dev, "max-data-rate", &dsi->max_data_rate);
+		int ret = dev_read_u32(device->dev, "max-data-rate", &dsi->max_data_rate);
 		if (ret) {
 			dev_err(device->dev, "fail to get max-data-rate
");
 			return -EINVAL;
 		}
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
 
 		ret = dev_read_u32(device->dev, "phy-ref-clkfreq", &dsi->pll_ref);
 		if (ret) {
diff --git a/drivers/video/nxp/imx/mipi_dsi_northwest_regs.h b/drivers/video/nxp/imx/mipi_dsi_northwest_regs.h
index 02d476c5ca..414d0f2f3d 100644
--- a/drivers/video/nxp/imx/mipi_dsi_northwest_regs.h
+++ b/drivers/video/nxp/imx/mipi_dsi_northwest_regs.h
@@ -23,18 +23,15 @@
 #define DSI_CM			0x100
 #define DSI_PLL_EN		0x80
 
-<<<<<<< HEAD
 #define SRC_MIPIPHY_RCR		0x28
 #define SRC_DISP_RCR		0x34
 
-=======
 #define AVDSIM_SYSCTRL0		0x8
 #define AVDSIM_DSI_RST_DPI_N		0x8
 #define AVDSIM_DSI_RST_ESC_N		0x10
 #define AVDSIM_DSI_RST_BYTE_N		0x20
 #define AVDSIM_DSI_SD			0x4
 #define AVDSIM_DSI_CM			0x2
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
 
 /* dphy */
 #define DPHY_PD_DPHY			0x300
@@ -59,11 +56,6 @@
 #define DPHY_AUTO_PD_EN			0x33c
 #define DPHY_RXLPRP			0x340
 #define DPHY_RXCDRP			0x344
-<<<<<<< HEAD
-#define DPHY_RXHS_SETTLE		0x348
-#define DPHY_BYPASS_PLL			0x34c
-
-=======
 #else
 #define DPHY_RTERM_SEL_REG_NA
 
@@ -79,8 +71,9 @@
 #define DPHY_AUTO_PD_EN			0x340
 #define DPHY_RXLPRP			0x344
 #define DPHY_RXCDRP			0x348
+#define DPHY_RXHS_SETTLE		0x34C
+#define DPHY_BYPASS_PLL			0x350
 #endif
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
 
 /* host */
 #define HOST_CFG_NUM_LANES		0x0
diff --git a/drivers/video/nxp/imx/nw_dsi_imx.c b/drivers/video/nxp/imx/nw_dsi_imx.c
index dcb72550c6..839a4abeab 100644
--- a/drivers/video/nxp/imx/nw_dsi_imx.c
+++ b/drivers/video/nxp/imx/nw_dsi_imx.c
@@ -142,11 +142,8 @@ struct video_bridge_ops nw_dsi_imx_ops = {
 
 static const struct udevice_id nw_dsi_imx_ids[] = {
 	{ .compatible = "fsl,imx7ulp-mipi-dsi" },
-<<<<<<< HEAD
 	{ .compatible = "fsl,imx8mq-nwl-dsi" },
-=======
 	{ .compatible = "fsl,imx8ulp-nwl-dsi" },
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
 	{ }
 };
 
diff --git a/drivers/video/nxp/imx/sec_mipi_dsim.c b/drivers/video/nxp/imx/sec_mipi_dsim.c
index 9ae326ed57..246e7f467d 100644
--- a/drivers/video/nxp/imx/sec_mipi_dsim.c
+++ b/drivers/video/nxp/imx/sec_mipi_dsim.c
@@ -9,7 +9,6 @@
 #include <dm/device_compat.h>
 #include <asm/io.h>
 #include <linux/err.h>
-#include <linux/log2.h>
 #include <linux/bug.h>
 #include <linux/delay.h>
 #include <linux/log2.h>
@@ -286,39 +285,6 @@
  *
  */
 
-#define PLLCTRL_SET_P(x)         REG_PUT(x, 18, 13)
-#define PLLCTRL_SET_M(x)         REG_PUT(x, 12,  3)
-#define PLLCTRL_SET_S(x)         REG_PUT(x,  2,  0)
-
-/* fixed phy ref clk rate */
-#define PHY_REF_CLK		27000000
-
-/* DPHY PLL structure */
-struct sec_mipi_dsim_range {
-	uint32_t min;
-	uint32_t max;
-};
-
-struct sec_mipi_dsim_pll {
-	struct sec_mipi_dsim_range p;
-	struct sec_mipi_dsim_range m;
-	struct sec_mipi_dsim_range s;
-	struct sec_mipi_dsim_range k;
-	struct sec_mipi_dsim_range fin;
-	struct sec_mipi_dsim_range fpref;
-	struct sec_mipi_dsim_range fvco;
-};
-
-struct sec_mipi_dsim_pll pll_1432x = {
-	.p	= { .min = 1,		.max = 63,	},
-	.m	= { .min = 64,		.max = 1023,	},
-	.s	= { .min = 0,		.max = 5,	},
-	.k	= { .min = 0,		.max = 32768,	},	/* abs(k) */
-	.fin	= { .min = 6000,	.max = 300000,	},	/* in KHz */
-	.fpref	= { .min = 2000,	.max = 30000,	},	/* in KHz */
-	.fvco	= { .min = 1050000,	.max = 2100000,	},	/* in KHz */
-};
-
 struct sec_mipi_dsim {
 	void __iomem *base;
 
@@ -1236,20 +1202,6 @@ static int sec_mipi_dsim_bridge_clk_set(struct sec_mipi_dsim *dsim_host)
 {
 	int bpp, ret;
 	uint64_t pix_clk, bit_clk;
-	uint32_t p, m, s;
-	uint32_t best_p = 0, best_m = 0, best_s = 0;
-	uint32_t fin, fout;
-	uint32_t s_pow_2, raw_s;
-	uint64_t mfin, pfvco, pfout, psfout;
-	uint32_t delta, best_delta = ~0U;
-	struct sec_mipi_dsim_range *prange = &pll_1432x.p;
-	struct sec_mipi_dsim_range *mrange = &pll_1432x.m;
-	struct sec_mipi_dsim_range *srange = &pll_1432x.s;
-	struct sec_mipi_dsim_range *krange = &pll_1432x.k;
-	struct sec_mipi_dsim_range *fvco_range  = &pll_1432x.fvco;
-	struct sec_mipi_dsim_range *fpref_range = &pll_1432x.fpref;
-	struct sec_mipi_dsim_range pr_new = *prange;
-	struct sec_mipi_dsim_range sr_new = *srange;
 
 	bpp = mipi_dsi_pixel_format_to_bpp(dsim_host->format);
 	if (bpp < 0)
@@ -1268,92 +1220,6 @@ static int sec_mipi_dsim_bridge_clk_set(struct sec_mipi_dsim *dsim_host)
 	dsim_host->pix_clk = DIV_ROUND_UP_ULL(pix_clk, 1000);
 	dsim_host->bit_clk = DIV_ROUND_UP_ULL(bit_clk, 1000);
 
-<<<<<<< HEAD
-	fout = dsim_host->bit_clk;
-	fin = DIV_ROUND_UP_ULL(PHY_REF_CLK, 1000);  /* pref_clk */
-
-	krange->min = 0;
-	krange->max = 0;
-
-	prange->min = max(prange->min, DIV_ROUND_UP(fin, fpref_range->max));
-	prange->max = min(prange->max, fin / fpref_range->min);
-
-	pfvco = (uint64_t)fvco_range->min * prange->min;
-	mrange->min = max_t(uint32_t, mrange->min,
-			    DIV_ROUND_UP_ULL(pfvco, fin));
-	pfvco = (uint64_t)fvco_range->max * prange->max;
-	mrange->max = min_t(uint32_t, mrange->max,
-			    DIV_ROUND_UP_ULL(pfvco, fin));
-
-	debug("p: min = %u, max = %u, "
-		     "m: min = %u, max = %u, "
-		     "s: min = %u, max = %u
",
-		prange->min, prange->max, mrange->min,
-		mrange->max, srange->min, srange->max);
-
-	for (m = mrange->min; m <= mrange->max; m++) {
-		/* p = m * Fin / Fvco */
-		mfin = (uint64_t)m * fin;
-		pr_new.min = max_t(uint32_t, prange->min,
-				   DIV_ROUND_UP_ULL(mfin, fvco_range->max));
-		pr_new.max = min_t(uint32_t, prange->max,
-				   (mfin / fvco_range->min));
-
-		if (pr_new.max < pr_new.min || pr_new.min < prange->min)
-			continue;
-
-		for (p = pr_new.min; p <= pr_new.max; p++) {
-			/* s = order_pow_of_two((m * Fin) / (p * Fout)) */
-			pfout = (uint64_t)p * fout;
-			raw_s = DIV_ROUND_CLOSEST_ULL(mfin, pfout);
-
-			s_pow_2 = rounddown_pow_of_two(raw_s);
-			sr_new.min = max_t(uint32_t, srange->min,
-					   order_base_2(s_pow_2));
-
-			s_pow_2 = roundup_pow_of_two(DIV_ROUND_CLOSEST_ULL(mfin, pfout));
-			sr_new.max = min_t(uint32_t, srange->max,
-					   order_base_2(s_pow_2));
-
-			if (sr_new.max < sr_new.min || sr_new.min < srange->min)
-				continue;
-
-			for (s = sr_new.min; s <= sr_new.max; s++) {
-				/* fout = m * Fin / (p * 2^s) */
-				psfout = pfout * (1 << s);
-				delta = abs(psfout - mfin);
-				if (delta < best_delta) {
-					best_p = p;
-					best_m = m;
-					best_s = s;
-					best_delta = delta;
-				}
-			}
-		}
-	}
-
-	if (best_delta == ~0U) {
-		printf("%s: Can't find out PMS using default
", __func__);
-		dsim_host->pms = 0x4210;
-		return 0;
-	}
-
-	debug("%s: bitclk %llu pixclk %llu
", __func__, dsim_host->bit_clk, dsim_host->pix_clk);
-	dsim_host->p = best_p;
-	dsim_host->m = best_m;
-	dsim_host->s = best_s;
-
-	if (dsim_host->mode_flags & MIPI_DSI_MODE_VIDEO_SYNC_PULSE)
-		dsim_host->pms = PLLCTRL_SET_P(dsim_host->p) |
-				 PLLCTRL_SET_M(dsim_host->m) |
-				 PLLCTRL_SET_S(dsim_host->s);
-
-	debug("%s: fout = %u, fin = %u, m = %u, "
-	      "p = %u, s = %u, best_delta = %u
"
-	      " dsim_host->pms = 0x%x
",
-	      __func__, fout, fin, dsim_host->m, dsim_host->p, dsim_host->s,
-	      best_delta, dsim_host->pms);
-=======
 	ret = sec_mipi_dsim_calc_pmsk(dsim_host);
 	if (ret) {
 		printf("failed to get pmsk for: fout = %llu
",
@@ -1367,7 +1233,6 @@ static int sec_mipi_dsim_bridge_clk_set(struct sec_mipi_dsim *dsim_host)
 
 	debug("%s: bitclk %llu pixclk %llu pms 0x%x
", __func__,
 		dsim_host->bit_clk, dsim_host->pix_clk, dsim_host->pms);
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
 
 	return 0;
 }
diff --git a/include/spl.h b/include/spl.h
index 6b2b48e05c..c5db4e91c0 100644
--- a/include/spl.h
+++ b/include/spl.h
@@ -707,11 +707,7 @@ int board_return_to_bootrom(struct spl_image_info *spl_image,
  * board_spl_fit_post_load - allow process images after loading finished
  * @fit: Pointer to a valid Flattened Image Tree blob
  */
-<<<<<<< HEAD
-int board_spl_fit_post_load(const void *fit);
-=======
-void board_spl_fit_post_load(const void *fit, struct spl_image_info *spl_image);
->>>>>>> merge_android-12.0.0-1.0.0-er1_to_idt-imx-android-12-dev
+int board_spl_fit_post_load(const void *fit, struct spl_image_info *spl_image);
 
 /**
  * board_spl_fit_size_align - specific size align before processing payload
