77fe970b6c max.yang 2020-03-25

AOS-26: [AVB] U-boot will validate vbmeta's public key before bootup

  1. Since we changed key on vp6820 BoardConfig, it will build only 1 signed vbmeta,
     so we enable config on evk and a300 android_config for all u-boot features
  2. If validate key fail, it will fail to boot, log will be like below.
     -----
     In boota get fastboot lock status error. Set lock status
     avb_slot_verify.c:715: ERROR: vbmeta_a: Public key used to sign data does not match key in chain partition descriptor.
     fsl_avb_ab_flow.c:1171: ERROR: Error verifying slot _a with result ERROR_PUBLIC_KEY_REJECTED - setting unbootable.
     avb_slot_verify.c:715: ERROR: vbmeta_b: Public key used to sign data does not match key in chain partition descriptor.
     fsl_avb_ab_flow.c:1171: ERROR: Error verifying slot _b with result ERROR_PUBLIC_KEY_REJECTED - setting unbootable.
     fsl_avb_ab_flow.c:1186: ERROR: No bootable slots found.
  3. NXP Android 10 changed behavior that if no key input to validate vbmeta,
     then it will validate google's test public key.

Change-Id: I5a21af41a5a48eabbafbd211d3f33d94f1ba33b3

diff --git a/board/freescale/imx8mq_a300/Kconfig b/board/freescale/imx8mq_a300/Kconfig
index cebb3c7e1f..794f7af761 100644
--- a/board/freescale/imx8mq_a300/Kconfig
+++ b/board/freescale/imx8mq_a300/Kconfig
@@ -12,6 +12,14 @@ config SYS_CONFIG_NAME
 config IDT_RAM_2GB
 	bool "2GB RAM configuration for A300"
 
+config IDT_VALID_AVBKEY
+	bool "IDT validate avb key before booting"
+	help
+	  This option should be enable when the vbmeta is signed by
+	  IDT key (This will be done on BoardCOnfig.mk), then u-boot
+	  should validate this key with build-in public key before
+	  booting into kernel.
+
 source "board/freescale/common/Kconfig"
 
 endif
diff --git a/board/freescale/imx8mq_evk/Kconfig b/board/freescale/imx8mq_evk/Kconfig
index 281fdc9ba8..f43acc29d9 100644
--- a/board/freescale/imx8mq_evk/Kconfig
+++ b/board/freescale/imx8mq_evk/Kconfig
@@ -12,6 +12,14 @@ config SYS_CONFIG_NAME
 config IDT_RAM_1GB
 	bool "Enable 1 GB size of system ram setting"
 
+config IDT_VALID_AVBKEY
+	bool "IDT validate avb key before booting"
+	help
+	  This option should be enable when the vbmeta is signed by
+	  IDT key (This will be done on BoardCOnfig.mk), then u-boot
+	  should validate this key with build-in public key before
+	  booting into kernel.
+
 source "board/freescale/common/Kconfig"
 
 endif
diff --git a/include/configs/imx8mq_a300_android.h b/include/configs/imx8mq_a300_android.h
index 1a0ee6bd3b..fae942a78b 100644
--- a/include/configs/imx8mq_a300_android.h
+++ b/include/configs/imx8mq_a300_android.h
@@ -11,6 +11,7 @@
 
 #define CONFIG_ANDROID_AB_SUPPORT
 #define CONFIG_AVB_SUPPORT
+#define CONFIG_IDT_VALID_AVBKEY
 #define CONFIG_SUPPORT_EMMC_RPMB
 #ifdef CONFIG_ANDROID_AB_SUPPORT
 #define CONFIG_SYSTEM_RAMDISK_SUPPORT
diff --git a/include/configs/imx8mq_evk_android.h b/include/configs/imx8mq_evk_android.h
index 1bc980783f..51218c0b8a 100644
--- a/include/configs/imx8mq_evk_android.h
+++ b/include/configs/imx8mq_evk_android.h
@@ -11,6 +11,7 @@
 
 #define CONFIG_ANDROID_AB_SUPPORT
 #define CONFIG_AVB_SUPPORT
+#define CONFIG_IDT_VALID_AVBKEY
 #define CONFIG_SUPPORT_EMMC_RPMB
 #ifdef CONFIG_ANDROID_AB_SUPPORT
 #define CONFIG_SYSTEM_RAMDISK_SUPPORT
diff --git a/include/idtech_public_key.h b/include/idtech_public_key.h
new file mode 100644
index 0000000000..f52691920d
--- /dev/null
+++ b/include/idtech_public_key.h
@@ -0,0 +1,72 @@
+#ifndef __IDTECH_PUBLIC_KEY_H_
+#define __IDTECH_PUBLIC_KEY_H_
+
+unsigned char idtech_public_key[] = {
+	0x00, 0x00, 0x08, 0x00, 0x02, 0x1f, 0x6f, 0x49,
+	0xd2, 0x75, 0xf0, 0xa5, 0x96, 0x99, 0x63, 0xde,
+	0x0b, 0x5c, 0x53, 0xe7, 0xdd, 0x6a, 0x41, 0x1a,
+	0x4b, 0xb3, 0xa6, 0xab, 0xcd, 0xab, 0xad, 0x0d,
+	0x8a, 0x23, 0x35, 0xcd, 0xc1, 0x45, 0xe3, 0x32,
+	0xe1, 0x06, 0x0c, 0xe3, 0xaf, 0xe2, 0xa2, 0x4d,
+	0xf4, 0xe9, 0xe2, 0x34, 0x16, 0x20, 0xa1, 0xa4,
+	0xad, 0x82, 0xb1, 0x98, 0x5c, 0xd4, 0x62, 0xfc,
+	0xae, 0x2b, 0x1f, 0x7c, 0x6b, 0xfa, 0x0b, 0x49,
+	0xda, 0x58, 0x98, 0x5a, 0x66, 0x8a, 0x3b, 0x99,
+	0x8d, 0xe6, 0x91, 0xa4, 0x39, 0x34, 0xf6, 0x7a,
+	0xbf, 0xa9, 0x23, 0x4b, 0x47, 0x77, 0x88, 0x84,
+	0x2d, 0xca, 0xfc, 0x8a, 0x40, 0xb3, 0xcd, 0x30,
+	0xe3, 0x44, 0xf3, 0x8a, 0x36, 0xc0, 0xb9, 0x4c,
+	0xb9, 0x8b, 0xc0, 0xbe, 0xdd, 0xf0, 0x79, 0x09,
+	0x43, 0xe2, 0xa9, 0x4e, 0xcd, 0x2d, 0xc9, 0xd8,
+	0x58, 0x38, 0xc8, 0xdd, 0xf5, 0x0a, 0x65, 0x6e,
+	0x52, 0x1f, 0x21, 0x22, 0x7e, 0xed, 0x2e, 0x0c,
+	0x53, 0x2f, 0x35, 0x7e, 0xf4, 0xdf, 0x9b, 0xc7,
+	0x11, 0xa4, 0xad, 0x70, 0x3b, 0xda, 0xdc, 0x9a,
+	0xa7, 0xd0, 0xdd, 0x80, 0x88, 0x77, 0x13, 0x6f,
+	0x00, 0x8f, 0xdf, 0x80, 0x9f, 0xe2, 0x23, 0x3d,
+	0x5b, 0x47, 0x70, 0x59, 0x4f, 0xff, 0x6a, 0xd4,
+	0x75, 0xd1, 0x83, 0x37, 0x4c, 0x73, 0xa3, 0x91,
+	0x3d, 0x0d, 0xa5, 0xd5, 0x36, 0xd3, 0x1f, 0xb0,
+	0x7f, 0x86, 0xf7, 0xaf, 0x92, 0x06, 0x86, 0xe1,
+	0x2a, 0x42, 0xf2, 0xfe, 0x8e, 0xa6, 0x0c, 0xef,
+	0x92, 0x51, 0xe1, 0x26, 0x8b, 0xb2, 0x57, 0x1f,
+	0x54, 0x85, 0x29, 0xfa, 0xf5, 0x04, 0xc6, 0xfe,
+	0xfa, 0xbf, 0x31, 0xda, 0xec, 0xd7, 0xef, 0x50,
+	0x21, 0xc3, 0x59, 0x8c, 0xd0, 0xb8, 0x4a, 0x05,
+	0x9b, 0x1e, 0xcf, 0xbf, 0xae, 0xf9, 0x80, 0x9c,
+	0x3d, 0x3a, 0xa8, 0x69, 0x28, 0x53, 0x4d, 0x07,
+	0x08, 0x8d, 0x3d, 0xfa, 0x16, 0xc3, 0xc2, 0x75,
+	0x63, 0x90, 0x0b, 0x47, 0xbe, 0x3f, 0x88, 0xa3,
+	0xc2, 0x25, 0xd5, 0xa5, 0x37, 0x60, 0xd9, 0xa3,
+	0x66, 0xf8, 0xb4, 0x4b, 0x30, 0x69, 0x38, 0x4a,
+	0x8a, 0x45, 0xb4, 0xfb, 0x84, 0x46, 0xf2, 0x15,
+	0xcf, 0x41, 0xa8, 0x6d, 0xdf, 0x30, 0x9d, 0xe1,
+	0x86, 0x4b, 0x4b, 0x1a, 0x50, 0x6f, 0x08, 0x65,
+	0x10, 0xfb, 0xbd, 0x90, 0x85, 0xf7, 0x2a, 0xba,
+	0x19, 0x99, 0x4d, 0xf3, 0x9a, 0x67, 0x11, 0x3d,
+	0xce, 0x98, 0x54, 0x24, 0xdd, 0x0f, 0xb4, 0x59,
+	0x88, 0x38, 0x8b, 0x15, 0x16, 0xf6, 0x4f, 0x56,
+	0xe3, 0xab, 0x5d, 0x69, 0x6b, 0xeb, 0x03, 0x99,
+	0xbb, 0xae, 0x7a, 0xda, 0xc5, 0x50, 0xfd, 0x31,
+	0x98, 0x7d, 0x93, 0x60, 0xf5, 0xaf, 0x1e, 0x0b,
+	0x4b, 0x19, 0x60, 0x61, 0xaa, 0xc5, 0xc7, 0x2d,
+	0x16, 0x98, 0xe5, 0xe5, 0x45, 0x29, 0x53, 0xad,
+	0xb3, 0x00, 0xcd, 0x17, 0xbf, 0xa5, 0x50, 0x7b,
+	0x89, 0x13, 0x1f, 0x0b, 0xb5, 0xa2, 0xf2, 0xf0,
+	0x0a, 0x95, 0x4b, 0x7a, 0x04, 0x82, 0x59, 0x2e,
+	0x7a, 0xfe, 0x51, 0xc3, 0x72, 0xc5, 0xcb, 0x78,
+	0xd0, 0xe4, 0x1f, 0x76, 0x66, 0xb2, 0x80, 0x8b,
+	0x33, 0x4d, 0x9d, 0xe6, 0x51, 0xc2, 0x41, 0xff,
+	0x49, 0xea, 0xda, 0x78, 0xa9, 0x05, 0xc5, 0x8d,
+	0xf0, 0x8b, 0xea, 0x86, 0x06, 0x96, 0x8d, 0x95,
+	0x68, 0x3f, 0x9a, 0x9f, 0x93, 0x08, 0x7c, 0x47,
+	0xff, 0x03, 0xd5, 0x4c, 0x28, 0xd5, 0xca, 0x8f,
+	0xf9, 0x92, 0x06, 0x1c, 0xfb, 0xbb, 0xd2, 0xfd,
+	0x8b, 0xb2, 0x28, 0x09, 0xcd, 0x6c, 0xfa, 0x2c,
+	0xa8, 0xc9, 0x0e, 0xe7, 0x22, 0x31, 0xa9, 0x50,
+	0xd4, 0xb7, 0x55, 0xf1, 0x21, 0xca, 0x95, 0x40,
+	0xfc, 0xd1, 0x87, 0xae, 0xf6, 0x4f, 0xe9, 0xc3,
+	0xa5, 0xc7, 0x3d, 0xf5, 0xb4, 0x48, 0xcf, 0x69
+};
+
+#endif
diff --git a/lib/libavb/avb_slot_verify.c b/lib/libavb/avb_slot_verify.c
index cc6240637b..a46721317a 100644
--- a/lib/libavb/avb_slot_verify.c
+++ b/lib/libavb/avb_slot_verify.c
@@ -19,6 +19,15 @@
 #include <memalign.h>
 #endif
 
+#if defined(CONFIG_IDT_VALID_AVBKEY)
+#include "idtech_public_key.h"
+uint8_t* expect_pubkey = idtech_public_key;
+size_t expect_pubkey_size = sizeof(idtech_public_key);
+#else
+uint8_t* expect_pubkey = NULL;
+size_t expect_pubkey_size = 0;
+#endif
+
 /* Maximum number of partitions that can be loaded with avb_slot_verify(). */
 #define MAX_NUMBER_OF_LOADED_PARTITIONS 32
 
@@ -1188,8 +1197,8 @@ AvbSlotVerifyResult avb_slot_verify(AvbOps* ops,
                                0 /* rollback_index_location */,
                                "vbmeta",
                                avb_strlen("vbmeta"),
-                               NULL /* expected_public_key */,
-                               0 /* expected_public_key_length */,
+                               expect_pubkey /* expected_public_key */,
+                               expect_pubkey_size /* expected_public_key_length */,
                                slot_data,
                                &algorithm_type,
                                additional_cmdline_subst);
