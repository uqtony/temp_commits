f5373d678dfd AndrewS 2021-10-20

AOS-764: redwood: PD controller driver and patch

Change-Id: I4fd1410e14c67ecc9b73a1f02f4504e4c0413cb4

diff --git a/arch/arm64/boot/dts/freescale/idt_imx8mq_evt-0_redwood_evt-0.dtsi b/arch/arm64/boot/dts/freescale/idt_imx8mq_evt-0_redwood_evt-0.dtsi
index ba1b49c96fef..e5c5901462c6 100644
--- a/arch/arm64/boot/dts/freescale/idt_imx8mq_evt-0_redwood_evt-0.dtsi
+++ b/arch/arm64/boot/dts/freescale/idt_imx8mq_evt-0_redwood_evt-0.dtsi
@@ -588,7 +588,7 @@ &A53_3 {
 };
 
 &i2c1 {
-	clock-frequency = <100000>;
+	clock-frequency = <400000>;
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_i2c1>;
 	status = "okay";
@@ -688,6 +688,34 @@ tp_st1633i: st1633i@55 {
 		wait-time-interval = <10000>;
 		gpios = <&gpio3 18 GPIO_ACTIVE_LOW>;
 	};
+
+	typec_pd: usb-pd@20 {
+		compatible = "ti,tps65994";
+		reg = <0x20>;
+
+		connector {
+			ports {
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				port@0 {
+					reg = <0>;
+
+					usb_con_hs: endpoint {
+						remote-endpoint = <&typec_hs>;
+					};
+				};
+
+				port@1 {
+					reg = <1>;
+
+					usb_con_ss: endpoint {
+						remote-endpoint = <&typec_ss>;
+					};
+				};
+			};
+		};
+	};
 };
 
 &i2c2 {
@@ -928,6 +956,22 @@ &usb3_phy0 {
 &usb_dwc3_0 {
 	dr_mode = "otg";
 	status = "okay";
+
+	port@0 {
+		reg = <0>;
+
+		typec_hs: endpoint {
+			remote-endpoint = <&usb_con_hs>;
+		};
+	};
+
+	port@1 {
+		reg = <1>;
+
+		typec_ss: endpoint {
+			remote-endpoint = <&usb_con_ss>;
+		};
+	};
 };
 
 &usb3_phy1 {
@@ -996,6 +1040,7 @@ MX8MQ_IOMUXC_SPDIF_TX_GPIO5_IO3				0x19  //CAMERA2_STATUS_LED
 			MX8MQ_IOMUXC_SAI3_MCLK_PWM4_OUT				0x19  //CAMERA2_PWM_WHT_LED
 			MX8MQ_IOMUXC_GPIO1_IO01_GPIO1_IO1			0x19  //PROXIMITY_INT
 			MX8MQ_IOMUXC_GPIO1_IO00_ANAMIX_REF_CLK_32K	0x16
+			MX8MQ_IOMUXC_I2C4_SDA_GPIO5_IO21                        0x00  //USB_SWITCH_EN
 		>;
 	};
 
diff --git a/drivers/usb/typec/Kconfig b/drivers/usb/typec/Kconfig
index a91060cd3dae..1769b6b1005d 100644
--- a/drivers/usb/typec/Kconfig
+++ b/drivers/usb/typec/Kconfig
@@ -83,6 +83,16 @@ config TYPEC_TPS6598X
 	  If you choose to build this driver as a dynamically linked module, the
 	  module will be called tps6598x.ko.
 
+config TYPEC_TPS65994
+	tristate "TI TPS65994 USB Power Delivery controller driver"
+	depends on I2C
+	help
+	  Say Y or M here if your system has TI TPS65994 USB Power Delivery
+	  controller.
+
+	  If you choose to build this driver as a dynamically linked module, the
+	  module will be called tps65994.ko.
+
 config TYPEC_STUSB160X
 	tristate "STMicroelectronics STUSB160x Type-C controller driver"
 	depends on I2C
diff --git a/drivers/usb/typec/Makefile b/drivers/usb/typec/Makefile
index 81c9112c770c..48553d348cd8 100644
--- a/drivers/usb/typec/Makefile
+++ b/drivers/usb/typec/Makefile
@@ -6,6 +6,8 @@ obj-$(CONFIG_TYPEC_TCPM)	+= tcpm/
 obj-$(CONFIG_TYPEC_UCSI)	+= ucsi/
 obj-$(CONFIG_TYPEC_HD3SS3220)	+= hd3ss3220.o
 obj-$(CONFIG_TYPEC_TPS6598X)	+= tps6598x.o
+obj-$(CONFIG_TYPEC_TPS65994)	+= tps65994.o
+obj-$(CONFIG_TYPEC_TPS65994)	+= TPS994LowRegion.o
 obj-$(CONFIG_TYPEC_QCOM_PMIC)	+= qcom-pmic-typec.o
 obj-$(CONFIG_TYPEC_STUSB160X) 	+= stusb160x.o
 obj-$(CONFIG_TYPEC)		+= mux/
diff --git a/drivers/usb/typec/TPS994LowRegion.c b/drivers/usb/typec/TPS994LowRegion.c
new file mode 100644
index 000000000000..7117ea007b38
--- /dev/null
+++ b/drivers/usb/typec/TPS994LowRegion.c
@@ -0,0 +1,658 @@
+const char tps6598x_lowregion_array_gandalf[] = { 0x01, 0x00, 0xe0, 0xac, 0xfe, 0xff, 0xff, 0xff, 0x80, 0x04, 0x00, 0x00, 0x80, 0x24, 0x00, 0x00, 
+0x1e, 0x22, 0x49, 0xdd, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
+0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
+0xff, 0xff, 0xff, 0xff, 0x11, 0x04, 0x09, 0xf5, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
+0xff, 0xff, 0xff, 0xff, 0x00, 0x04, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
+0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
+0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
+0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
+0x01, 0x00, 0x97, 0x02, 0x17, 0x7a, 0xd3, 0x93, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x30, 0x78, 0x31, 0x20, 0xfa, 0x87, 0x32, 0x00, 0x1a, 0x00, 0xff, 0x16, 0x00, 0x0a, 0x0a, 0x38, 
+0x30, 0xcd, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x07, 0xff, 0x17, 0x00, 0x0a, 0x08, 0x04, 0x00, 
+0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x23, 0x00, 0x03, 0x00, 0xe0, 0x01, 0x00, 
+0xff, 0x27, 0x00, 0x09, 0x05, 0x89, 0x12, 0x8c, 0x1d, 0x07, 0x1a, 0x00, 0x20, 0x24, 0xff, 0x28, 
+0x00, 0x03, 0x02, 0x48, 0x2f, 0x00, 0xff, 0x29, 0x00, 0x03, 0x51, 0xc0, 0xc1, 0x00, 0xff, 0x2b, 
+0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0xff, 0x32, 0x00, 0x1e, 0x01, 0xa8, 0x2a, 0x2c, 0xd1, 0x02, 
+0x26, 0x2c, 0xd1, 0x02, 0x00, 0x2c, 0xb1, 0x04, 0x00, 0x2c, 0x41, 0x06, 0x00, 0xf4, 0x41, 0x06, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x33, 0x00, 0x1c, 0x02, 0x2c, 0x91, 
+0x01, 0x10, 0x2c, 0xd1, 0x02, 0x00, 0x2c, 0xc1, 0x03, 0x00, 0x2c, 0xb1, 0x04, 0x00, 0x45, 0x41, 
+0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x37, 0x00, 0x0f, 0x0a, 0xc0, 
+0x12, 0x0f, 0xb4, 0xd0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x42, 
+0x00, 0x02, 0x1a, 0x0d, 0x00, 0xff, 0x43, 0x00, 0x1b, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
+0x00, 0x22, 0x02, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x47, 0x00, 0x18, 0x06, 0x51, 0x04, 0x40, 0xd5, 0x51, 0x04, 
+0x00, 0x00, 0x04, 0x09, 0x00, 0x00, 0x1b, 0x00, 0x80, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x80, 0x07, 0xff, 0x4a, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x01, 0x00, 0xff, 
+0x52, 0x00, 0x06, 0x02, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x56, 0x00, 0x01, 0x3f, 0x80, 
+0xff, 0x5c, 0x00, 0x30, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x62, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
+0x07, 0xff, 0x64, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 
+0xff, 0x77, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x0f, 0xff, 0x7b, 0x00, 0x0f, 0x00, 0x02, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7e, 0x00, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 
+0x01, 0x0a, 0x07, 0x2d, 0x41, 0xf0, 0x16, 0x0a, 0x00, 0x03, 0xf0, 0x32, 0x01, 0x01, 0xfd, 0x3f, 
+0xf0, 0x47, 0x15, 0x00, 0x01, 0xf0, 0x51, 0x00, 0x02, 0x03, 0x86, 0x1c, 0xf0, 0x51, 0x05, 0x00, 
+0x01, 0xf0, 0x52, 0x00, 0x00, 0x03, 0xf0, 0x64, 0x00, 0x00, 0x0e, 0xf0, 0x64, 0x08, 0x00, 0x0e, 
+0x64, 0x00, 0x64, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x73, 0x00, 0x78, 0x00, 0x7d, 0x00, 0x82, 0x00, 
+0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 
+0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 
+0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 
+0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 
+0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 0x87, 0x00, 
+0x87, 0x00, 0x87, 0x00, 0x23, 0x02, 0x00, 0x0a, 0x00, 0x03, 0x02, 0x00, 0x10, 0x00, 0x03, 0x02, 
+0x00, 0x11, 0x00, 0x03, 0x02, 0x00, 0x0a, 0x12, 0x04, 0x02, 0x00, 0x10, 0x00, 0x04, 0x02, 0x00, 
+0x11, 0x00, 0x04, 0x02, 0x00, 0x0a, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x0c, 0x24, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x5c, 0x02, 0x20, 0x5c, 0x5c, 0x02, 0x20, 
+0x6c, 0x5c, 0x02, 0x20, 0x51, 0x38, 0x02, 0x20, 0x05, 0xb1, 0x11, 0x00, 0x00, 0x04, 0x09, 0xf5, 
+0xce, 0x6f, 0x8a, 0x40, 0xad, 0x06, 0x34, 0x02, 0x00, 0x00, 0x00, 0x00, 0x80, 0x24, 0x02, 0x20, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x15, 0x2d, 0x5d, 
+0xf0, 0xb5, 0x8f, 0x49, 0x89, 0xb0, 0x8d, 0x48, 0x48, 0x60, 0x8f, 0x4f, 0x8d, 0x48, 0x38, 0x63, 
+0x8f, 0x49, 0x8e, 0x48, 0x88, 0x62, 0x90, 0x48, 0x8e, 0x49, 0x8d, 0x4a, 0x81, 0x63, 0x80, 0x32, 
+0x8e, 0x49, 0x02, 0x92, 0x51, 0x61, 0x8f, 0x4a, 0x8d, 0x49, 0xd1, 0x61, 0x8f, 0x49, 0x8e, 0x4a, 
+0x08, 0x91, 0x4a, 0x62, 0x8b, 0x4a, 0x8e, 0x49, 0x40, 0x32, 0x51, 0x63, 0x11, 0x46, 0x80, 0x31, 
+0x8c, 0x4b, 0x07, 0x91, 0x4b, 0x60, 0x01, 0x46, 0x40, 0x31, 0x8b, 0x4b, 0x8b, 0x63, 0x8c, 0x46, 
+0x8b, 0x49, 0x8a, 0x4b, 0x06, 0x91, 0xcb, 0x63, 0x80, 0x31, 0x8a, 0x4b, 0xcb, 0x63, 0x8e, 0x46, 
+0xff, 0x39, 0x89, 0x4b, 0x81, 0x39, 0x4b, 0x61, 0x75, 0x49, 0x88, 0x4b, 0xe0, 0x31, 0x8b, 0x63, 
+0x87, 0x4b, 0xcb, 0x63, 0x40, 0x31, 0x0b, 0x60, 0x86, 0x4b, 0x7c, 0x4e, 0x7b, 0x63, 0x86, 0x4b, 
+0x40, 0x3e, 0x33, 0x60, 0x85, 0x4b, 0x13, 0x63, 0x86, 0x4d, 0x85, 0x4a, 0x6a, 0x60, 0x33, 0x46, 
+0x85, 0x4a, 0x40, 0x3b, 0x01, 0x93, 0x9a, 0x60, 0x02, 0x9a, 0x84, 0x4b, 0xd3, 0x60, 0x84, 0x4a, 
+0x0a, 0x61, 0x34, 0x46, 0xc0, 0x3c, 0x83, 0x49, 0xa1, 0x61, 0x83, 0x49, 0x61, 0x60, 0x22, 0x46, 
+0x80, 0x3a, 0x82, 0x49, 0x05, 0x92, 0x91, 0x61, 0x39, 0x46, 0x81, 0x4a, 0xc0, 0x39, 0x4a, 0x66, 
+0x80, 0x4a, 0x61, 0x46, 0x0a, 0x60, 0x80, 0x49, 0x01, 0x62, 0x80, 0x49, 0x81, 0x62, 0x80, 0x48, 
+0xf0, 0x61, 0x80, 0x48, 0x71, 0x46, 0x88, 0x63, 0xfe, 0x1d, 0x7f, 0x48, 0xf9, 0x36, 0xb0, 0x61, 
+0x7e, 0x48, 0x20, 0x61, 0x5a, 0x48, 0x7e, 0x49, 0x40, 0x38, 0x01, 0x62, 0x7d, 0x49, 0xf1, 0x63, 
+0x7d, 0x49, 0x81, 0x61, 0x39, 0x46, 0x7d, 0x4a, 0xc0, 0x39, 0xca, 0x65, 0x7d, 0x4a, 0x7c, 0x49, 
+0x51, 0x61, 0x7d, 0x49, 0xe9, 0x61, 0x2a, 0x46, 0xc0, 0x3a, 0x7c, 0x49, 0x00, 0x92, 0x11, 0x61, 
+0xff, 0x32, 0x81, 0x32, 0x7a, 0x49, 0x04, 0x92, 0x11, 0x62, 0x7a, 0x49, 0x41, 0x61, 0x7b, 0x49, 
+0x79, 0x48, 0x08, 0x60, 0x4f, 0x49, 0x7a, 0x48, 0x80, 0x39, 0x08, 0x62, 0x71, 0x49, 0x79, 0x48, 
+0xa0, 0x31, 0x48, 0x60, 0x00, 0x9a, 0x78, 0x48, 0x4a, 0x49, 0x50, 0x61, 0x77, 0x48, 0x40, 0x39, 
+0x88, 0x63, 0x28, 0x46, 0x40, 0x38, 0x76, 0x49, 0x03, 0x90, 0x81, 0x61, 0x38, 0x46, 0x75, 0x49, 
+0xc0, 0x38, 0x01, 0x66, 0x74, 0x48, 0x61, 0x46, 0x08, 0x61, 0x06, 0x99, 0x73, 0x48, 0x08, 0x63, 
+0x29, 0x46, 0x73, 0x48, 0x80, 0x39, 0xc8, 0x61, 0x72, 0x48, 0x68, 0x63, 0x72, 0x48, 0x80, 0x78, 
+0x00, 0x28, 0x09, 0xd0, 0x71, 0x48, 0xc1, 0x68, 0x00, 0x29, 0x02, 0xd0, 0x80, 0x68, 0x01, 0xf0, 
+0x35, 0xfe, 0x6f, 0x49, 0x07, 0x20, 0x08, 0x70, 0x01, 0xf0, 0x36, 0xfe, 0x6d, 0x48, 0xa8, 0x61, 
+0x04, 0x98, 0x6d, 0x49, 0xc1, 0x60, 0x02, 0x98, 0x6c, 0x49, 0x81, 0x60, 0x01, 0x98, 0x6c, 0x49, 
+0x01, 0x62, 0x32, 0x49, 0x6b, 0x48, 0x40, 0x31, 0x48, 0x61, 0x29, 0x49, 0x6a, 0x48, 0x80, 0x39, 
+0x08, 0x60, 0x01, 0x98, 0x69, 0x49, 0x81, 0x63, 0x23, 0x48, 0x69, 0x49, 0xc0, 0x38, 0x81, 0x64, 
+0x38, 0x49, 0x68, 0x48, 0x40, 0x31, 0x08, 0x63, 0x07, 0x98, 0x67, 0x4a, 0xc2, 0x61, 0x67, 0x48, 
+0x20, 0x60, 0x67, 0x48, 0xa0, 0x60, 0x1e, 0x48, 0x66, 0x4a, 0xc0, 0x30, 0x02, 0x60, 0x03, 0x9a, 
+0x65, 0x4b, 0x13, 0x63, 0x65, 0x4a, 0xb2, 0x63, 0x65, 0x4a, 0x42, 0x63, 0x65, 0x4a, 0x42, 0x62, 
+0x65, 0x48, 0x38, 0x62, 0x14, 0x48, 0x65, 0x4a, 0xc0, 0x30, 0x42, 0x60, 0x64, 0x4a, 0x02, 0x60, 
+0x0f, 0x4a, 0x64, 0x48, 0x20, 0x32, 0x50, 0x60, 0x40, 0x4a, 0x63, 0x48, 0x40, 0x3a, 0x50, 0x62, 
+0x0b, 0x4a, 0x62, 0x48, 0x7c, 0x32, 0x10, 0x60, 0xff, 0x32, 0x61, 0x48, 0x85, 0x32, 0xd0, 0x60, 
+0x60, 0x4a, 0x00, 0x98, 0xc2, 0x60, 0x60, 0x48, 0x88, 0x60, 0x05, 0x98, 0x5f, 0x49, 0x01, 0x61, 
+0x08, 0x98, 0x5f, 0x49, 0xc1, 0x60, 0x09, 0xb0, 0xf0, 0xbd, 0x00, 0x00, 0x11, 0x44, 0x02, 0x20, 
+0xb8, 0x01, 0x02, 0x20, 0x7d, 0x3d, 0x02, 0x20, 0xe8, 0x05, 0x02, 0x20, 0x05, 0x4e, 0x02, 0x20, 
+0xe8, 0x0b, 0x02, 0x20, 0xd5, 0x53, 0x02, 0x20, 0x28, 0x0f, 0x02, 0x20, 0x59, 0x4e, 0x02, 0x20, 
+0x3f, 0x44, 0x02, 0x20, 0x28, 0x0a, 0x02, 0x20, 0x83, 0x44, 0x02, 0x20, 0x28, 0x09, 0x02, 0x20, 
+0xf5, 0x44, 0x02, 0x20, 0x3b, 0x45, 0x02, 0x20, 0x25, 0x55, 0x02, 0x20, 0x61, 0x3f, 0x02, 0x20, 
+0x68, 0x07, 0x02, 0x20, 0x8d, 0x42, 0x02, 0x20, 0xc5, 0x3d, 0x02, 0x20, 0x09, 0x46, 0x02, 0x20, 
+0x2f, 0x46, 0x02, 0x20, 0xd7, 0x3d, 0x02, 0x20, 0x71, 0x46, 0x02, 0x20, 0x8f, 0x46, 0x02, 0x20, 
+0x71, 0x50, 0x02, 0x20, 0xe8, 0x0d, 0x02, 0x20, 0xb1, 0x46, 0x02, 0x20, 0x77, 0x4e, 0x02, 0x20, 
+0xf7, 0x46, 0x02, 0x20, 0x21, 0x3e, 0x02, 0x20, 0xe9, 0x41, 0x02, 0x20, 0x41, 0x41, 0x02, 0x20, 
+0x05, 0x3c, 0x02, 0x20, 0x81, 0x54, 0x02, 0x20, 0x33, 0x54, 0x02, 0x20, 0x09, 0x54, 0x02, 0x20, 
+0xa3, 0x47, 0x02, 0x20, 0x23, 0x43, 0x02, 0x20, 0x19, 0x4d, 0x02, 0x20, 0x43, 0x43, 0x02, 0x20, 
+0x3d, 0x4d, 0x02, 0x20, 0x59, 0x4d, 0x02, 0x20, 0x85, 0x4d, 0x02, 0x20, 0x77, 0x3c, 0x02, 0x20, 
+0xe5, 0x47, 0x02, 0x20, 0xb8, 0x02, 0x02, 0x20, 0xaf, 0x50, 0x02, 0x20, 0x45, 0x4f, 0x02, 0x20, 
+0x01, 0x53, 0x02, 0x20, 0xe1, 0x4c, 0x02, 0x20, 0xf1, 0x50, 0x02, 0x20, 0x28, 0x10, 0x02, 0x20, 
+0x99, 0x48, 0x02, 0x20, 0xc7, 0x48, 0x02, 0x20, 0x41, 0x50, 0x02, 0x20, 0x65, 0x48, 0x02, 0x20, 
+0x39, 0x51, 0x02, 0x20, 0x01, 0x3d, 0x02, 0x20, 0xf3, 0x54, 0x02, 0x20, 0xe3, 0x3f, 0x02, 0x20, 
+0x4f, 0x51, 0x02, 0x20, 0xc7, 0x51, 0x02, 0x20, 0xe4, 0x36, 0x02, 0x20, 0xf4, 0x37, 0x02, 0x20, 
+0x00, 0x37, 0x02, 0x20, 0x97, 0x51, 0x02, 0x20, 0x87, 0x53, 0x02, 0x20, 0x9f, 0x4e, 0x02, 0x20, 
+0xd7, 0x48, 0x02, 0x20, 0x09, 0x49, 0x02, 0x20, 0xf1, 0x4b, 0x02, 0x20, 0x8b, 0x49, 0x02, 0x20, 
+0x3f, 0x3d, 0x02, 0x20, 0xfd, 0x51, 0x02, 0x20, 0x95, 0x4c, 0x02, 0x20, 0x5d, 0x42, 0x02, 0x20, 
+0x75, 0x42, 0x02, 0x20, 0xe9, 0x4e, 0x02, 0x20, 0x1f, 0x52, 0x02, 0x20, 0xb9, 0x55, 0x02, 0x20, 
+0x1b, 0x4f, 0x02, 0x20, 0x29, 0x4f, 0x02, 0x20, 0x93, 0x3d, 0x02, 0x20, 0x31, 0x3f, 0x02, 0x20, 
+0x35, 0x3f, 0x02, 0x20, 0xc3, 0x49, 0x02, 0x20, 0xfb, 0x55, 0x02, 0x20, 0xf1, 0x49, 0x02, 0x20, 
+0x71, 0x4a, 0x02, 0x20, 0xbd, 0x4f, 0x02, 0x20, 0x59, 0x52, 0x02, 0x20, 0x6f, 0x40, 0x02, 0x20, 
+0x75, 0x4b, 0x02, 0x20, 0xf8, 0xb5, 0x06, 0x46, 0x56, 0x48, 0x57, 0x4a, 0x70, 0x43, 0x80, 0x18, 
+0x42, 0x7e, 0x00, 0x25, 0xd3, 0x06, 0x01, 0xd5, 0x02, 0x23, 0x00, 0xe0, 0x01, 0x23, 0x92, 0x06, 
+0x27, 0xd5, 0x00, 0x22, 0x1b, 0x24, 0x64, 0x01, 0x0a, 0xe0, 0x87, 0x18, 0x3f, 0x19, 0xbf, 0x7a, 
+0x7f, 0x06, 0x7f, 0x0e, 0x8f, 0x42, 0x01, 0xd1, 0x01, 0x25, 0x05, 0xe0, 0x52, 0x1c, 0xd2, 0xb2, 
+0x9a, 0x42, 0xf2, 0xd3, 0x00, 0x2d, 0x14, 0xd0, 0x0f, 0x21, 0x89, 0x01, 0x44, 0x18, 0x20, 0x7a, 
+0x00, 0x28, 0x0e, 0xd1, 0x01, 0x20, 0x60, 0x72, 0x2c, 0x21, 0x30, 0x46, 0x01, 0xf0, 0x64, 0xf9, 
+0x42, 0x4b, 0xb0, 0x22, 0x2c, 0x21, 0x30, 0x46, 0x01, 0xf0, 0x57, 0xf9, 0x20, 0x7a, 0x40, 0x1c, 
+0x20, 0x72, 0x28, 0x46, 0xf8, 0xbd, 0xf8, 0xb5, 0x05, 0x46, 0x3a, 0x48, 0x29, 0x46, 0x41, 0x43, 
+0x39, 0x48, 0x0c, 0x18, 0x05, 0x20, 0xc0, 0x01, 0x26, 0x18, 0x77, 0x78, 0xef, 0xf3, 0x10, 0x80, 
+0xc0, 0x07, 0xc0, 0x0f, 0x72, 0xb6, 0x00, 0x90, 0x28, 0x46, 0x01, 0xf0, 0xdb, 0xfc, 0x07, 0x21, 
+0xc9, 0x01, 0xff, 0x20, 0x61, 0x18, 0x48, 0x74, 0x31, 0x4b, 0xf0, 0x22, 0x1a, 0x21, 0x28, 0x46, 
+0x01, 0xf0, 0x33, 0xf9, 0x00, 0x2f, 0x1d, 0xd1, 0x70, 0x78, 0x00, 0x28, 0x1a, 0xd0, 0x00, 0x20, 
+0x70, 0x70, 0xdc, 0x20, 0x29, 0x46, 0x41, 0x43, 0x2a, 0x48, 0x01, 0x22, 0x09, 0x18, 0x4e, 0x79, 
+0xa8, 0x00, 0x29, 0x4b, 0x00, 0x2e, 0x05, 0xd0, 0x1a, 0x54, 0x09, 0x20, 0x80, 0x01, 0x20, 0x18, 
+0x42, 0x70, 0x07, 0xe0, 0x49, 0x7e, 0x00, 0x29, 0x04, 0xd0, 0x1a, 0x54, 0x11, 0x20, 0x40, 0x01, 
+0x20, 0x18, 0x02, 0x75, 0x00, 0x98, 0x00, 0x28, 0x00, 0xd1, 0x62, 0xb6, 0x00, 0x20, 0xf8, 0xbd, 
+0x10, 0xb5, 0xef, 0xf3, 0x10, 0x81, 0xca, 0x07, 0xd2, 0x0f, 0x72, 0xb6, 0x00, 0x24, 0x15, 0x49, 
+0x15, 0x4b, 0x41, 0x43, 0xcb, 0x18, 0x0f, 0x21, 0x89, 0x01, 0x59, 0x18, 0x01, 0x23, 0x4c, 0x72, 
+0x8b, 0x72, 0x00, 0x2a, 0x00, 0xd1, 0x62, 0xb6, 0x82, 0x00, 0x13, 0x49, 0x51, 0x18, 0x89, 0x78, 
+0x04, 0x29, 0x01, 0xd0, 0x07, 0x29, 0x01, 0xd1, 0x01, 0xf0, 0x92, 0xfc, 0x10, 0xbd, 0x09, 0x49, 
+0x09, 0x4a, 0x41, 0x43, 0x8a, 0x18, 0x07, 0x21, 0x10, 0xb5, 0xc9, 0x01, 0x51, 0x18, 0x4a, 0x7c, 
+0xff, 0x2a, 0x02, 0xd0, 0x01, 0xf0, 0x8a, 0xfc, 0x10, 0xbd, 0x01, 0x20, 0x88, 0x74, 0x00, 0x20, 
+0x48, 0x74, 0x10, 0xbd, 0xe4, 0x04, 0x00, 0x00, 0xb0, 0x10, 0x02, 0x20, 0x21, 0xc3, 0x01, 0x00, 
+0xe5, 0xc2, 0x01, 0x00, 0x30, 0x29, 0x02, 0x20, 0x5c, 0x5c, 0x02, 0x20, 0x10, 0xb5, 0x01, 0x29, 
+0x04, 0xd1, 0x0d, 0x4b, 0x82, 0x00, 0x9a, 0x58, 0x00, 0x2a, 0x01, 0xd0, 0x01, 0xf0, 0x74, 0xfc, 
+0x10, 0xbd, 0x10, 0xb5, 0x04, 0x46, 0x01, 0xf0, 0x75, 0xfc, 0x01, 0x20, 0x07, 0x49, 0x00, 0x1b, 
+0x48, 0x43, 0x07, 0x49, 0x40, 0x18, 0xff, 0x30, 0x41, 0x30, 0x00, 0x78, 0x02, 0x28, 0x02, 0xd1, 
+0x80, 0x20, 0x01, 0xf0, 0x6d, 0xfc, 0x10, 0xbd, 0xf0, 0x2a, 0x02, 0x20, 0xe4, 0x04, 0x00, 0x00, 
+0xb0, 0x10, 0x02, 0x20, 0x02, 0x46, 0x10, 0xb5, 0x00, 0x20, 0x2b, 0x2a, 0x02, 0xd0, 0x10, 0x46, 
+0x01, 0xf0, 0x64, 0xfc, 0x10, 0xbd, 0x10, 0xb5, 0x01, 0xf0, 0x66, 0xfc, 0x3d, 0x48, 0x01, 0x68, 
+0xc0, 0x22, 0x91, 0x43, 0x01, 0x60, 0x3c, 0x48, 0x41, 0x6a, 0x40, 0x22, 0x91, 0x43, 0x41, 0x62, 
+0x10, 0xbd, 0x30, 0xb5, 0x04, 0x46, 0x39, 0x4b, 0x00, 0x20, 0x02, 0x46, 0x9d, 0x18, 0x20, 0x35, 
+0x2d, 0x79, 0x6d, 0x06, 0x6d, 0x0e, 0xa5, 0x42, 0x02, 0xd1, 0x0a, 0x54, 0x40, 0x1c, 0xc0, 0xb2, 
+0x52, 0x1c, 0xd2, 0xb2, 0x0d, 0x2a, 0xf1, 0xd3, 0x00, 0x28, 0x00, 0xd1, 0xff, 0x20, 0x30, 0xbd, 
+0xf0, 0xb5, 0x85, 0xb0, 0x1f, 0x46, 0x0c, 0x46, 0x05, 0x46, 0x01, 0x2a, 0x01, 0xd1, 0xc0, 0x19, 
+0xc5, 0xb2, 0x69, 0x46, 0x28, 0x46, 0xff, 0xf7, 0xdc, 0xff, 0x06, 0x46, 0xff, 0x28, 0x13, 0xd1, 
+0x49, 0x2d, 0x01, 0xd0, 0x4a, 0x2d, 0x43, 0xd1, 0x69, 0x46, 0x50, 0x20, 0xff, 0xf7, 0xd1, 0xff, 
+0x06, 0x46, 0xff, 0x28, 0x3c, 0xd0, 0x22, 0x48, 0xc4, 0x55, 0x01, 0x78, 0x00, 0x29, 0x02, 0xd1, 
+0x40, 0x78, 0x00, 0x28, 0x03, 0xd0, 0x01, 0x24, 0x00, 0x25, 0x1e, 0x4f, 0x2e, 0xe0, 0x00, 0x24, 
+0xfa, 0xe7, 0x1a, 0x48, 0x21, 0x46, 0x30, 0x38, 0x02, 0x6d, 0x68, 0x46, 0x43, 0x5d, 0x01, 0x20, 
+0x98, 0x40, 0x02, 0x40, 0xd2, 0x04, 0x04, 0xd0, 0x01, 0x2c, 0x02, 0xd8, 0x01, 0x21, 0x09, 0x1b, 
+0xc9, 0xb2, 0x0b, 0x00, 0x01, 0xf0, 0x0e, 0xfc, 0x05, 0x04, 0x07, 0x0c, 0x12, 0x16, 0x18, 0x00, 
+0xf9, 0x6a, 0x81, 0x43, 0x01, 0xe0, 0xf9, 0x6a, 0x01, 0x43, 0x0f, 0x48, 0x01, 0x60, 0x0b, 0xe0, 
+0x39, 0x68, 0x81, 0x43, 0x39, 0x60, 0xb9, 0x6a, 0x01, 0x43, 0x01, 0xe0, 0xb9, 0x6a, 0x81, 0x43, 
+0xb9, 0x62, 0x01, 0xe0, 0x01, 0xf0, 0xfc, 0xfb, 0x6d, 0x1c, 0xed, 0xb2, 0xb5, 0x42, 0xd0, 0xd3, 
+0x05, 0xb0, 0xf0, 0xbd, 0x00, 0x05, 0x06, 0x40, 0x00, 0x41, 0x09, 0x40, 0x18, 0x24, 0x02, 0x20, 
+0x64, 0x5c, 0x02, 0x20, 0x00, 0x07, 0x06, 0x40, 0x00, 0x06, 0x06, 0x40, 0x70, 0xb5, 0x00, 0x28, 
+0x01, 0xd0, 0x1a, 0x21, 0x00, 0xe0, 0x19, 0x21, 0x00, 0x28, 0x01, 0xd0, 0x0e, 0x4d, 0x00, 0xe0, 
+0x0e, 0x4d, 0x01, 0x24, 0x0e, 0x48, 0x8c, 0x40, 0x04, 0x60, 0x00, 0x21, 0x28, 0x46, 0x01, 0xf0, 
+0xdd, 0xfb, 0x01, 0x21, 0x07, 0x20, 0xc9, 0x02, 0x69, 0x18, 0x88, 0x61, 0x09, 0x48, 0x04, 0x60, 
+0x07, 0x48, 0x80, 0x38, 0x04, 0x60, 0x01, 0x20, 0x40, 0x03, 0x01, 0xf0, 0xd5, 0xfb, 0x70, 0xbd, 
+0x01, 0x20, 0xdb, 0xe7, 0x00, 0x20, 0xd9, 0xe7, 0x00, 0x00, 0x0b, 0x40, 0x00, 0x00, 0x03, 0x40, 
+0x80, 0xe1, 0x00, 0xe0, 0x80, 0xe2, 0x00, 0xe0, 0x10, 0xb5, 0x00, 0x22, 0x23, 0x21, 0x10, 0x46, 
+0x01, 0xf0, 0xc8, 0xfb, 0x00, 0x22, 0x23, 0x21, 0x01, 0x20, 0x01, 0xf0, 0xc3, 0xfb, 0x10, 0xbd, 
+0x70, 0xb5, 0x16, 0x46, 0x01, 0x22, 0x6e, 0x4b, 0x0c, 0x46, 0x05, 0x46, 0x13, 0x29, 0x02, 0xd0, 
+0x23, 0x2c, 0x0f, 0xd0, 0x14, 0xe0, 0x6b, 0x48, 0x10, 0x21, 0x68, 0x43, 0xc3, 0x18, 0x60, 0x33, 
+0x58, 0x78, 0x08, 0x43, 0x58, 0x70, 0x18, 0x78, 0x10, 0x43, 0x18, 0x70, 0x28, 0x46, 0x01, 0xf0, 
+0xde, 0xf8, 0x05, 0xe0, 0x64, 0x49, 0x08, 0x78, 0x00, 0x28, 0x07, 0xd0, 0x01, 0x28, 0x1d, 0xd0, 
+0x32, 0x46, 0x21, 0x46, 0x28, 0x46, 0x01, 0xf0, 0xa3, 0xfb, 0x70, 0xbd, 0x0a, 0x70, 0x18, 0x7e, 
+0x40, 0x06, 0x01, 0x0f, 0x5d, 0x48, 0x00, 0x7f, 0x40, 0x06, 0x00, 0x0f, 0x81, 0x42, 0x00, 0xd8, 
+0x01, 0x46, 0x00, 0x29, 0x07, 0xd0, 0x7d, 0x20, 0x00, 0x01, 0x41, 0x43, 0x58, 0x4a, 0x0a, 0x20, 
+0x01, 0xf0, 0x94, 0xfb, 0x70, 0xbd, 0xff, 0xf7, 0xb7, 0xff, 0x70, 0xbd, 0x02, 0x20, 0x08, 0x70, 
+0x70, 0xbd, 0xf8, 0xb5, 0x07, 0x46, 0x08, 0x78, 0x00, 0x24, 0x0e, 0x46, 0x00, 0x28, 0x28, 0xd0, 
+0x08, 0x28, 0x02, 0xd9, 0x08, 0x25, 0x08, 0x38, 0x01, 0xe0, 0x05, 0x46, 0x00, 0x20, 0x30, 0x70, 
+0x38, 0x79, 0x31, 0x78, 0x40, 0x1a, 0x40, 0x1b, 0xc0, 0xb2, 0x00, 0x90, 0x08, 0xe0, 0x00, 0x98, 
+0x00, 0x19, 0xc0, 0x19, 0x41, 0x79, 0x47, 0x48, 0x01, 0xf0, 0x76, 0xfb, 0x64, 0x1c, 0xe4, 0xb2, 
+0xac, 0x42, 0xf4, 0xd3, 0x01, 0x21, 0x43, 0x48, 0x89, 0x02, 0xc1, 0x61, 0x02, 0x69, 0x0a, 0x43, 
+0x02, 0x61, 0x30, 0x78, 0x00, 0x28, 0x01, 0xd0, 0x02, 0x20, 0x00, 0xe0, 0x03, 0x20, 0x3e, 0x49, 
+0x08, 0x70, 0xf8, 0xbd, 0x10, 0xb5, 0x04, 0x46, 0x1d, 0x21, 0x01, 0xf0, 0x63, 0xfb, 0x35, 0x48, 
+0x33, 0x49, 0x60, 0x43, 0x41, 0x18, 0x0f, 0x20, 0x80, 0x01, 0x09, 0x18, 0x00, 0x22, 0x8a, 0x70, 
+0x03, 0x20, 0x48, 0x70, 0x48, 0x21, 0x20, 0x46, 0x01, 0xf0, 0x5a, 0xfb, 0x10, 0xbd, 0xf8, 0xb5, 
+0x00, 0x26, 0x01, 0xf0, 0x5b, 0xfb, 0x2f, 0x48, 0x81, 0x69, 0x49, 0x05, 0x04, 0xd5, 0x01, 0x69, 
+0x01, 0x26, 0x02, 0x15, 0x91, 0x43, 0x01, 0x61, 0x81, 0x69, 0xc9, 0x06, 0x3b, 0xd5, 0x29, 0x4c, 
+0x10, 0x21, 0xe1, 0x61, 0x52, 0x21, 0x00, 0x20, 0x01, 0xf0, 0x42, 0xfb, 0x20, 0x68, 0x00, 0x06, 
+0x45, 0x0e, 0x20, 0x68, 0xc7, 0x07, 0xff, 0x0f, 0x00, 0x24, 0x1e, 0x48, 0x21, 0x46, 0x41, 0x43, 
+0x1b, 0x48, 0x08, 0x18, 0x58, 0x21, 0x09, 0x5c, 0xc9, 0x09, 0x0b, 0xd0, 0x0f, 0x21, 0x89, 0x01, 
+0x40, 0x18, 0x00, 0x78, 0x40, 0x06, 0x40, 0x0e, 0xa8, 0x42, 0x03, 0xd1, 0x20, 0x46, 0xff, 0xf7, 
+0xb9, 0xff, 0x0b, 0xe0, 0x00, 0x2f, 0x05, 0xd1, 0x29, 0x46, 0x20, 0x46, 0x01, 0xf0, 0x2c, 0xfb, 
+0x00, 0x28, 0x03, 0xd1, 0x64, 0x1c, 0xe4, 0xb2, 0x02, 0x2c, 0xde, 0xd3, 0x11, 0x48, 0x04, 0x21, 
+0x41, 0x60, 0x01, 0xf0, 0x27, 0xfb, 0x10, 0x49, 0x00, 0x28, 0x0d, 0xd0, 0x00, 0x20, 0x08, 0x70, 
+0x04, 0x20, 0x01, 0xf0, 0xe9, 0xfa, 0x00, 0x2e, 0x05, 0xd0, 0x01, 0x20, 0x0b, 0x49, 0x40, 0x07, 
+0x08, 0x60, 0x01, 0xf0, 0x1d, 0xfb, 0xf8, 0xbd, 0x01, 0x20, 0x08, 0x70, 0xf5, 0xe7, 0x00, 0x00, 
+0xb0, 0x10, 0x02, 0x20, 0xe4, 0x04, 0x00, 0x00, 0x66, 0x5c, 0x02, 0x20, 0x90, 0x15, 0x02, 0x20, 
+0x49, 0x3f, 0x02, 0x20, 0x00, 0x00, 0x07, 0x40, 0x91, 0x2f, 0x02, 0x20, 0x80, 0xe2, 0x00, 0xe0, 
+0xf8, 0xb5, 0x04, 0x46, 0x03, 0x78, 0x23, 0x48, 0x23, 0x4d, 0x58, 0x43, 0x42, 0x19, 0x51, 0x7e, 
+0x88, 0x06, 0x3a, 0xd5, 0x1b, 0x26, 0x76, 0x01, 0x92, 0x19, 0xe0, 0x78, 0x96, 0x7a, 0xb0, 0x42, 
+0x04, 0xd0, 0xd2, 0x7a, 0x90, 0x42, 0x30, 0xd1, 0xc8, 0x06, 0x2e, 0xd5, 0x1b, 0x4a, 0x99, 0x00, 
+0x60, 0x79, 0x89, 0x18, 0x88, 0x70, 0x60, 0x79, 0x04, 0x28, 0x26, 0xd1, 0x18, 0x48, 0x01, 0xf0, 
+0xed, 0xfa, 0x17, 0x49, 0x00, 0x02, 0x16, 0x39, 0x49, 0x7e, 0x00, 0x0a, 0x09, 0x06, 0x08, 0x43, 
+0x21, 0x78, 0x10, 0x4a, 0x51, 0x43, 0x49, 0x19, 0x09, 0x6f, 0x0a, 0x46, 0x01, 0x21, 0x09, 0x06, 
+0x8a, 0x43, 0x00, 0x92, 0x0e, 0x4a, 0x6a, 0x32, 0x12, 0x7c, 0x52, 0x07, 0x02, 0xd0, 0x00, 0x9a, 
+0x0a, 0x43, 0x00, 0x92, 0x00, 0x28, 0x00, 0xd1, 0x0a, 0x48, 0x00, 0x99, 0x04, 0x22, 0x01, 0x40, 
+0x00, 0x91, 0x69, 0x46, 0xe0, 0x1d, 0x01, 0xf0, 0xcf, 0xfa, 0x20, 0x46, 0x01, 0xf0, 0xd2, 0xfa, 
+0xf8, 0xbd, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 0xb0, 0x10, 0x02, 0x20, 0x5c, 0x5c, 0x02, 0x20, 
+0x9e, 0x24, 0x02, 0x20, 0xff, 0xef, 0xdf, 0x3f, 0xf7, 0xb5, 0x06, 0x46, 0xef, 0xf3, 0x10, 0x80, 
+0xc5, 0x07, 0xed, 0x0f, 0x72, 0xb6, 0x01, 0x98, 0x19, 0x28, 0x26, 0xd1, 0x7e, 0x48, 0x7f, 0x49, 
+0x70, 0x43, 0x44, 0x18, 0x60, 0x34, 0x20, 0x78, 0x80, 0x06, 0x11, 0xd5, 0x01, 0x21, 0x30, 0x46, 
+0x00, 0xf0, 0x85, 0xfa, 0xdf, 0x27, 0x00, 0x28, 0x02, 0xd1, 0x20, 0x78, 0x38, 0x40, 0x20, 0x70, 
+0x30, 0x46, 0x01, 0xf0, 0xad, 0xfa, 0x01, 0x28, 0x02, 0xd1, 0x20, 0x78, 0x38, 0x40, 0x20, 0x70, 
+0x20, 0x78, 0xc0, 0x06, 0x09, 0xd5, 0x00, 0x21, 0x30, 0x46, 0x00, 0xf0, 0x70, 0xfa, 0x00, 0x28, 
+0x03, 0xd1, 0x20, 0x78, 0xef, 0x21, 0x08, 0x40, 0x20, 0x70, 0x30, 0x46, 0x02, 0x9a, 0x01, 0x99, 
+0x01, 0xf0, 0x9c, 0xfa, 0x00, 0x2d, 0x00, 0xd1, 0x62, 0xb6, 0xfe, 0xbd, 0x10, 0xb5, 0xef, 0xf3, 
+0x10, 0x83, 0xdc, 0x07, 0xe4, 0x0f, 0x72, 0xb6, 0x01, 0xf0, 0x96, 0xfa, 0x00, 0x2c, 0x00, 0xd1, 
+0x62, 0xb6, 0x10, 0xbd, 0x10, 0xb5, 0xef, 0xf3, 0x10, 0x84, 0xe4, 0x07, 0xe4, 0x0f, 0x72, 0xb6, 
+0x01, 0xf0, 0x90, 0xfa, 0x00, 0x2c, 0x00, 0xd1, 0x62, 0xb6, 0x10, 0xbd, 0xfe, 0xb5, 0x05, 0x46, 
+0x01, 0x23, 0x68, 0x46, 0x03, 0x70, 0x0c, 0x46, 0x00, 0x20, 0x01, 0x90, 0x56, 0x49, 0x57, 0x48, 
+0x69, 0x43, 0x0a, 0x18, 0x19, 0x2c, 0x02, 0xd0, 0x33, 0x2c, 0x19, 0xd0, 0x1e, 0xe0, 0x16, 0x46, 
+0x60, 0x36, 0xb0, 0x78, 0x01, 0x07, 0x06, 0xd5, 0x11, 0x46, 0x40, 0x31, 0x8f, 0x7f, 0xbf, 0x07, 
+0xbf, 0x0f, 0x1f, 0x43, 0x8f, 0x77, 0x4e, 0x4b, 0xa9, 0x00, 0xc9, 0x18, 0xc9, 0x78, 0x01, 0x29, 
+0x26, 0xd0, 0x51, 0x7e, 0xc9, 0x07, 0x09, 0xd0, 0xbf, 0x21, 0x08, 0x40, 0xb0, 0x70, 0x05, 0xe0, 
+0x11, 0x20, 0x40, 0x01, 0x10, 0x18, 0x00, 0x78, 0xc0, 0x06, 0x19, 0xd5, 0x21, 0x46, 0x28, 0x46, 
+0x01, 0xf0, 0x5e, 0xfa, 0x57, 0x2c, 0x13, 0xd2, 0x6a, 0x46, 0x21, 0x46, 0x28, 0x46, 0xff, 0xf7, 
+0xad, 0xff, 0x6a, 0x46, 0x21, 0x46, 0x28, 0x46, 0xff, 0xf7, 0x6e, 0xff, 0x68, 0x46, 0x00, 0x78, 
+0x00, 0x28, 0x05, 0xd0, 0x6b, 0x46, 0x01, 0xaa, 0x21, 0x46, 0x28, 0x46, 0xff, 0xf7, 0xaa, 0xff, 
+0xfe, 0xbd, 0x10, 0xb5, 0x37, 0x48, 0x00, 0x21, 0x41, 0x72, 0x00, 0x7a, 0x01, 0x28, 0x07, 0xd1, 
+0x19, 0x21, 0x00, 0x20, 0xff, 0xf7, 0xaa, 0xff, 0x19, 0x21, 0x01, 0x20, 0xff, 0xf7, 0xa6, 0xff, 
+0x10, 0xbd, 0xf3, 0xb5, 0x05, 0x46, 0x01, 0x20, 0x40, 0x1b, 0xc6, 0xb2, 0x2e, 0x48, 0x87, 0xb0, 
+0x01, 0x46, 0x0e, 0xc9, 0x04, 0xac, 0x0e, 0xc4, 0x03, 0x69, 0xc2, 0x68, 0x41, 0x69, 0x80, 0x69, 
+0x00, 0x24, 0x04, 0xaf, 0x01, 0x93, 0x00, 0x92, 0x02, 0x91, 0x03, 0x90, 0x60, 0x00, 0xc1, 0x19, 
+0x49, 0x78, 0x38, 0x5c, 0x2b, 0x46, 0x01, 0x22, 0xff, 0xf7, 0x52, 0xfd, 0x64, 0x1c, 0xe4, 0xb2, 
+0x06, 0x2c, 0xf3, 0xd3, 0x1c, 0x48, 0x29, 0x46, 0x41, 0x43, 0x1c, 0x48, 0x00, 0x22, 0x0b, 0x18, 
+0x07, 0x21, 0xc9, 0x01, 0x5b, 0x18, 0x9a, 0x75, 0x17, 0x4a, 0x56, 0x43, 0x30, 0x18, 0x40, 0x18, 
+0x80, 0x7d, 0x00, 0x28, 0x05, 0xd1, 0x2b, 0x46, 0x00, 0x22, 0x01, 0x21, 0x43, 0x20, 0xff, 0xf7, 
+0x37, 0xfd, 0x08, 0x98, 0x00, 0x28, 0x1d, 0xd1, 0x28, 0x46, 0x01, 0xf0, 0xff, 0xf9, 0x28, 0x46, 
+0x01, 0xf0, 0x02, 0xfa, 0x00, 0x24, 0x6e, 0x46, 0x60, 0x00, 0x81, 0x19, 0x49, 0x78, 0x30, 0x5c, 
+0x2b, 0x46, 0x01, 0x22, 0xff, 0xf7, 0x24, 0xfd, 0x64, 0x1c, 0xe4, 0xb2, 0x07, 0x2c, 0xf3, 0xd3, 
+0x0a, 0x48, 0xc0, 0x6e, 0xc0, 0x06, 0x05, 0xd5, 0x2b, 0x46, 0x01, 0x22, 0x00, 0x21, 0x3f, 0x20, 
+0xff, 0xf7, 0x16, 0xfd, 0x09, 0xb0, 0xf0, 0xbd, 0xe4, 0x04, 0x00, 0x00, 0xb0, 0x10, 0x02, 0x20, 
+0x5c, 0x5c, 0x02, 0x20, 0x08, 0x25, 0x02, 0x20, 0x2c, 0x5c, 0x02, 0x20, 0xe8, 0x23, 0x02, 0x20, 
+0x10, 0xb5, 0xff, 0x49, 0x04, 0x46, 0x48, 0x43, 0xfe, 0x49, 0x41, 0x18, 0x1d, 0x20, 0x40, 0x01, 
+0x09, 0x18, 0x48, 0x79, 0xc0, 0x09, 0x06, 0xd0, 0x08, 0x79, 0x40, 0x07, 0x03, 0xd5, 0x01, 0x21, 
+0x20, 0x46, 0xff, 0xf7, 0xa3, 0xfc, 0x20, 0x46, 0x01, 0xf0, 0xcc, 0xf9, 0x10, 0xbd, 0xf4, 0x4a, 
+0xf4, 0x4b, 0x70, 0xb5, 0x42, 0x43, 0xd2, 0x18, 0x0d, 0x23, 0x9b, 0x01, 0xd4, 0x18, 0x63, 0x7b, 
+0x00, 0x2b, 0x13, 0xd0, 0xf0, 0x4d, 0x83, 0x00, 0xee, 0x58, 0x76, 0x01, 0x0e, 0xd4, 0xeb, 0x58, 
+0x00, 0x2b, 0x0b, 0xd0, 0x19, 0x21, 0x49, 0x01, 0x51, 0x18, 0x8a, 0x7d, 0xfb, 0x23, 0x1a, 0x40, 
+0x8a, 0x75, 0x00, 0x21, 0x61, 0x73, 0x01, 0xf0, 0xb3, 0xf9, 0x70, 0xbd, 0x01, 0xf0, 0xb6, 0xf9, 
+0x70, 0xbd, 0xf8, 0xb5, 0x04, 0x46, 0xe2, 0x4d, 0xe4, 0x4a, 0xe2, 0x48, 0x11, 0x23, 0x65, 0x43, 
+0x11, 0x5d, 0x5b, 0x01, 0x28, 0x18, 0xff, 0x26, 0xc5, 0x18, 0x00, 0x29, 0x18, 0xd1, 0x29, 0x78, 
+0xef, 0x23, 0x19, 0x40, 0x29, 0x70, 0xc1, 0x7c, 0x49, 0x06, 0x11, 0xd5, 0x01, 0x6d, 0xc9, 0x03, 
+0x05, 0xd4, 0x17, 0x21, 0x49, 0x01, 0x40, 0x18, 0x40, 0x7c, 0x16, 0x28, 0x18, 0xd1, 0x02, 0x20, 
+0x10, 0x55, 0xd7, 0x48, 0xd7, 0x49, 0x02, 0x5d, 0x20, 0x46, 0x01, 0xf0, 0x95, 0xf9, 0x0f, 0xe0, 
+0x28, 0x78, 0xc0, 0x06, 0xc7, 0x0f, 0x20, 0x46, 0x01, 0xf0, 0x94, 0xf9, 0x06, 0x46, 0x00, 0x2f, 
+0x06, 0xd1, 0x28, 0x78, 0xc0, 0x06, 0x03, 0xd5, 0x33, 0x21, 0x20, 0x46, 0xff, 0xf7, 0xce, 0xfe, 
+0x30, 0x46, 0xf8, 0xbd, 0xc6, 0x49, 0x38, 0xb5, 0x02, 0x46, 0x4a, 0x43, 0xc5, 0x49, 0x54, 0x18, 
+0x11, 0x21, 0x89, 0x01, 0x61, 0x18, 0x4d, 0x68, 0x01, 0xf0, 0x82, 0xf9, 0xff, 0x20, 0xed, 0x30, 
+0x00, 0x5b, 0x69, 0x46, 0x08, 0x80, 0xa8, 0x00, 0x40, 0x0f, 0x03, 0x28, 0x0c, 0xd1, 0x48, 0x78, 
+0x80, 0x07, 0x09, 0xd5, 0xff, 0x34, 0xc1, 0x34, 0x03, 0x21, 0x60, 0x69, 0xc9, 0x04, 0x88, 0x43, 
+0x01, 0x21, 0x09, 0x05, 0x40, 0x18, 0x60, 0x61, 0x38, 0xbd, 0xf8, 0xb5, 0x04, 0x46, 0x01, 0xf0, 
+0x6d, 0xf9, 0xb3, 0x48, 0x21, 0x46, 0x41, 0x43, 0xb2, 0x48, 0x0b, 0x18, 0x19, 0x46, 0x60, 0x31, 
+0x0d, 0x78, 0x68, 0x07, 0xc2, 0x0f, 0x18, 0x46, 0xff, 0x30, 0xc1, 0x30, 0xc6, 0x7b, 0xf6, 0x43, 
+0xb7, 0x07, 0x40, 0x26, 0x00, 0x2f, 0x21, 0xd0, 0xdc, 0x20, 0xaf, 0x4f, 0x60, 0x43, 0xc0, 0x19, 
+0x40, 0x79, 0x00, 0x28, 0x2e, 0xd0, 0xff, 0x33, 0xe1, 0x33, 0x18, 0x89, 0x6f, 0x46, 0x38, 0x80, 
+0x38, 0x78, 0x7f, 0x78, 0x42, 0x06, 0xd2, 0x0f, 0xbf, 0x07, 0x03, 0xd4, 0x01, 0x2a, 0x01, 0xd0, 
+0x80, 0x06, 0x02, 0xd5, 0x88, 0x78, 0x30, 0x43, 0x88, 0x70, 0x9b, 0x7a, 0x88, 0x78, 0xfd, 0x26, 
+0xdb, 0x07, 0x30, 0x40, 0x9b, 0x0f, 0x18, 0x43, 0x88, 0x70, 0x21, 0xe0, 0x00, 0x69, 0xc0, 0x02, 
+0x83, 0x0f, 0x03, 0x2b, 0x01, 0xd0, 0x80, 0x0f, 0x02, 0xd0, 0x88, 0x78, 0x30, 0x43, 0x02, 0xe0, 
+0x88, 0x78, 0xbf, 0x23, 0x18, 0x40, 0x88, 0x70, 0xc8, 0x78, 0xcf, 0x23, 0x18, 0x40, 0x10, 0x30, 
+0xc8, 0x70, 0x0d, 0xe0, 0x11, 0x20, 0x80, 0x01, 0x18, 0x18, 0x43, 0x68, 0x00, 0x69, 0x9b, 0x00, 
+0x5b, 0x0f, 0x03, 0x2b, 0x0e, 0xd0, 0x00, 0x02, 0x40, 0x0f, 0x03, 0x28, 0x00, 0xd2, 0x01, 0x22, 
+0xfb, 0x20, 0x05, 0x40, 0x90, 0x00, 0x05, 0x43, 0x0d, 0x70, 0x19, 0x21, 0x20, 0x46, 0xff, 0xf7, 
+0x45, 0xfe, 0xf8, 0xbd, 0x00, 0x22, 0xf3, 0xe7, 0x10, 0xb5, 0x04, 0x46, 0x01, 0xf0, 0x0c, 0xf9, 
+0x00, 0x28, 0x04, 0xd0, 0x00, 0x21, 0x20, 0x46, 0x01, 0xf0, 0x0c, 0xf9, 0x04, 0xe0, 0x70, 0x22, 
+0x82, 0x49, 0x20, 0x46, 0x01, 0xf0, 0xe8, 0xf8, 0x81, 0x48, 0x00, 0x5d, 0x10, 0xbd, 0x70, 0xb5, 
+0x04, 0x46, 0x77, 0x48, 0x77, 0x49, 0x60, 0x43, 0x41, 0x18, 0x11, 0x20, 0x40, 0x01, 0x00, 0x22, 
+0x08, 0x18, 0x7b, 0x4d, 0x42, 0x74, 0x29, 0x5d, 0x6f, 0x29, 0x08, 0xd0, 0x01, 0x21, 0x01, 0x75, 
+0x73, 0x48, 0x01, 0x5d, 0x20, 0x46, 0x01, 0xf0, 0xf3, 0xf8, 0x28, 0x5d, 0x70, 0xbd, 0x11, 0x21, 
+0x20, 0x46, 0x01, 0xf0, 0xf3, 0xf8, 0x19, 0x21, 0x20, 0x46, 0xff, 0xf7, 0x0f, 0xfe, 0xef, 0xe7, 
+0x67, 0x4a, 0x68, 0x4b, 0x42, 0x43, 0xd2, 0x18, 0x10, 0xb5, 0xff, 0x32, 0x00, 0x21, 0xc1, 0x32, 
+0xd1, 0x72, 0x6c, 0x4b, 0x82, 0x00, 0x99, 0x54, 0x01, 0xf0, 0xe6, 0xf8, 0x10, 0xbd, 0x60, 0x49, 
+0x60, 0x4a, 0x41, 0x43, 0x89, 0x18, 0x10, 0xb5, 0xff, 0x31, 0xc1, 0x31, 0xca, 0x7a, 0x04, 0x2a, 
+0x03, 0xd1, 0xca, 0x7b, 0xbf, 0x23, 0x1a, 0x40, 0xca, 0x73, 0x01, 0xf0, 0xdb, 0xf8, 0x10, 0xbd, 
+0x10, 0xb5, 0x7d, 0x21, 0x04, 0x46, 0x49, 0x01, 0x01, 0xf0, 0xda, 0xf8, 0x20, 0x46, 0x01, 0xf0, 
+0xdd, 0xf8, 0x97, 0x20, 0xc0, 0x00, 0x5c, 0x49, 0x60, 0x43, 0x41, 0x18, 0x07, 0x20, 0xc0, 0x01, 
+0x09, 0x18, 0x01, 0x22, 0x88, 0x68, 0x12, 0x07, 0x90, 0x43, 0x4d, 0x4a, 0x0f, 0x23, 0x54, 0x43, 
+0x4c, 0x4a, 0x9b, 0x01, 0xa2, 0x18, 0xd2, 0x18, 0xd2, 0x68, 0xd2, 0x00, 0xd2, 0x0f, 0x12, 0x07, 
+0x10, 0x43, 0x88, 0x60, 0x10, 0xbd, 0x70, 0xb5, 0x04, 0x46, 0x50, 0x48, 0x05, 0x5d, 0x20, 0x46, 
+0x01, 0xf0, 0xc2, 0xf8, 0x06, 0x46, 0x4a, 0x48, 0x00, 0x5d, 0xa8, 0x42, 0x05, 0xd1, 0x44, 0x48, 
+0x46, 0x49, 0x02, 0x5d, 0x20, 0x46, 0x01, 0xf0, 0x6f, 0xf8, 0x30, 0x46, 0x70, 0xbd, 0x3c, 0x4b, 
+0x02, 0x46, 0x5a, 0x43, 0x3b, 0x4b, 0x30, 0xb5, 0xd2, 0x18, 0xff, 0x23, 0x15, 0x33, 0x01, 0x20, 
+0x9d, 0x5c, 0x83, 0x02, 0xd4, 0x18, 0xe3, 0x68, 0x01, 0x2d, 0x10, 0xd0, 0x9b, 0x00, 0x5b, 0x0f, 
+0x01, 0x2b, 0x01, 0xd0, 0x02, 0x2b, 0x26, 0xd1, 0xe3, 0x7a, 0x5b, 0x07, 0x5b, 0x0f, 0x03, 0x2b, 
+0x21, 0xd9, 0x83, 0x23, 0xdb, 0x00, 0xd2, 0x18, 0x01, 0x29, 0x1d, 0xd0, 0x12, 0xe0, 0x9b, 0x01, 
+0x5b, 0x0f, 0x01, 0x2b, 0x01, 0xd0, 0x02, 0x2b, 0x15, 0xd1, 0xe3, 0x7a, 0x5b, 0x07, 0x5b, 0x0f, 
+0x1c, 0x1f, 0x03, 0x2c, 0x0f, 0xd2, 0x9b, 0x00, 0xd2, 0x18, 0x81, 0x23, 0xdb, 0x00, 0xd2, 0x18, 
+0x01, 0x29, 0x04, 0xd0, 0x00, 0x29, 0x06, 0xd1, 0x11, 0x68, 0xc9, 0x01, 0x06, 0xe0, 0x11, 0x68, 
+0x89, 0x01, 0x03, 0xe0, 0x00, 0x20, 0x30, 0xbd, 0x11, 0x68, 0x49, 0x01, 0x00, 0x29, 0xf9, 0xda, 
+0x30, 0xbd, 0x70, 0xb5, 0x1e, 0x46, 0x14, 0x46, 0x05, 0x46, 0x01, 0xf0, 0x73, 0xf8, 0x31, 0x46, 
+0x28, 0x46, 0x01, 0xf0, 0x75, 0xf8, 0x06, 0x28, 0x0b, 0xd2, 0x60, 0x21, 0x4d, 0x43, 0x20, 0x49, 
+0x01, 0x23, 0x69, 0x18, 0x00, 0x2c, 0x05, 0xd0, 0x01, 0x2c, 0x07, 0xd0, 0x00, 0x01, 0x08, 0x18, 
+0xc3, 0x71, 0x70, 0xbd, 0x00, 0x01, 0x08, 0x18, 0x83, 0x71, 0x70, 0xbd, 0x00, 0x01, 0x08, 0x18, 
+0x03, 0x72, 0x70, 0xbd, 0x70, 0xb5, 0x04, 0x46, 0x01, 0xf0, 0x60, 0xf8, 0x11, 0x4d, 0x03, 0x46, 
+0xa1, 0x00, 0x68, 0x5c, 0x01, 0x28, 0x33, 0xd1, 0x05, 0x48, 0x12, 0x4a, 0x44, 0x43, 0x05, 0x48, 
+0x20, 0x18, 0x12, 0x5a, 0x10, 0x4c, 0xa2, 0x42, 0x23, 0xd0, 0x10, 0x4c, 0xa2, 0x42, 0x1f, 0xe0, 
+0xe4, 0x04, 0x00, 0x00, 0xb0, 0x10, 0x02, 0x20, 0xf0, 0x2a, 0x02, 0x20, 0xee, 0x2a, 0x02, 0x20, 
+0x04, 0x2b, 0x02, 0x20, 0x20, 0x4e, 0x00, 0x00, 0x30, 0x29, 0x02, 0x20, 0xfc, 0x6c, 0x00, 0x00, 
+0x02, 0x2b, 0x02, 0x20, 0x5c, 0x5c, 0x02, 0x20, 0x78, 0x1a, 0x02, 0x20, 0x10, 0x01, 0x02, 0x20, 
+0x08, 0x00, 0x02, 0x20, 0x1e, 0x02, 0x00, 0x00, 0x87, 0x80, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00, 
+0x06, 0xd1, 0x00, 0x22, 0x6a, 0x54, 0x07, 0x22, 0x01, 0x21, 0xd2, 0x01, 0x80, 0x18, 0x81, 0x74, 
+0x18, 0x46, 0x70, 0xbd, 0x10, 0xb5, 0x04, 0x46, 0xdc, 0x20, 0xd5, 0x49, 0x60, 0x43, 0x40, 0x18, 
+0x40, 0x7e, 0x01, 0x28, 0x0c, 0xd1, 0xd3, 0x48, 0xd3, 0x49, 0x60, 0x43, 0x41, 0x18, 0x60, 0x31, 
+0x48, 0x78, 0xf1, 0x22, 0x10, 0x40, 0x48, 0x70, 0x00, 0x21, 0x20, 0x46, 0x01, 0xf0, 0x14, 0xf8, 
+0x20, 0x46, 0x01, 0xf0, 0x17, 0xf8, 0x10, 0xbd, 0x70, 0xb5, 0xcc, 0x4d, 0x01, 0x20, 0x28, 0x70, 
+0x68, 0x70, 0x01, 0xf0, 0x15, 0xf8, 0x00, 0x24, 0x28, 0x5d, 0x00, 0x28, 0x06, 0xd1, 0x20, 0x46, 
+0x00, 0xf0, 0xc6, 0xfb, 0x03, 0x21, 0x20, 0x46, 0x00, 0xf0, 0x1a, 0xfc, 0x64, 0x1c, 0xe4, 0xb2, 
+0x02, 0x2c, 0xf1, 0xd3, 0x70, 0xbd, 0x10, 0xb5, 0x04, 0x46, 0x01, 0xf0, 0x07, 0xf8, 0xbf, 0x4a, 
+0x01, 0x21, 0x11, 0x55, 0x10, 0xbd, 0xbb, 0x49, 0xbb, 0x4a, 0x41, 0x43, 0x89, 0x18, 0x10, 0xb5, 
+0xff, 0x22, 0x1d, 0x32, 0x52, 0x58, 0x03, 0x24, 0xd2, 0x00, 0x93, 0x0f, 0x01, 0x22, 0x92, 0x02, 
+0x8a, 0x18, 0xd1, 0x68, 0x64, 0x05, 0xa1, 0x43, 0x02, 0x2b, 0x01, 0xd1, 0x5b, 0x05, 0xc9, 0x18, 
+0xd1, 0x60, 0x00, 0xf0, 0xf1, 0xff, 0x10, 0xbd, 0xff, 0xb5, 0x83, 0xb0, 0x04, 0x46, 0x0d, 0x98, 
+0x0c, 0x9d, 0x01, 0x90, 0x1e, 0x46, 0x17, 0x46, 0x00, 0x95, 0x20, 0x46, 0x04, 0x99, 0x00, 0xf0, 
+0xe9, 0xff, 0x00, 0x2e, 0x2f, 0xd0, 0x0f, 0x2f, 0x2d, 0xd1, 0xa6, 0x48, 0xa6, 0x49, 0x60, 0x43, 
+0x40, 0x18, 0xff, 0x21, 0x15, 0x31, 0x09, 0x5c, 0x01, 0x29, 0x24, 0xd1, 0xe9, 0x06, 0xc9, 0x0e, 
+0x06, 0x29, 0x20, 0xd1, 0x04, 0x99, 0x00, 0x29, 0x1d, 0xd1, 0xa1, 0x49, 0xa1, 0x4d, 0x09, 0x5d, 
+0x2a, 0x5d, 0x91, 0x42, 0x17, 0xd0, 0x0b, 0x29, 0x15, 0xd9, 0x01, 0x46, 0xff, 0x31, 0x41, 0x31, 
+0x8a, 0x6b, 0x00, 0x2a, 0x0f, 0xd0, 0xc9, 0x78, 0x00, 0x29, 0x0c, 0xd1, 0x03, 0x21, 0x09, 0x02, 
+0x40, 0x18, 0xc0, 0x79, 0x00, 0x28, 0x02, 0xd0, 0x20, 0x46, 0x00, 0xf0, 0xc1, 0xff, 0x29, 0x5d, 
+0x20, 0x46, 0x00, 0xf0, 0xc3, 0xff, 0x07, 0xb0, 0xf0, 0xbd, 0xf8, 0xb5, 0xdc, 0x21, 0x02, 0x46, 
+0x4a, 0x43, 0x8b, 0x49, 0x55, 0x18, 0x2c, 0x46, 0x20, 0x34, 0x27, 0x79, 0x2e, 0x7c, 0x21, 0x7e, 
+0x00, 0x91, 0x00, 0xf0, 0xb9, 0xff, 0x68, 0x7e, 0x01, 0x28, 0x00, 0xd1, 0x27, 0x71, 0x68, 0x79, 
+0x01, 0x28, 0x00, 0xd1, 0x2e, 0x74, 0x60, 0x7b, 0x01, 0x28, 0x01, 0xd1, 0x00, 0x98, 0x20, 0x76, 
+0xf8, 0xbd, 0x10, 0xb5, 0x04, 0x46, 0x00, 0xf0, 0xad, 0xff, 0x11, 0x28, 0x0f, 0xd1, 0x7d, 0x49, 
+0x7d, 0x4a, 0x61, 0x43, 0x89, 0x18, 0x40, 0x31, 0xc9, 0x7d, 0x89, 0x07, 0x89, 0x0f, 0x02, 0x29, 
+0x05, 0xd1, 0x2c, 0x21, 0x20, 0x46, 0x00, 0xf0, 0x2b, 0xff, 0x79, 0x48, 0x00, 0x5d, 0x10, 0xbd, 
+0x70, 0xb5, 0x05, 0x46, 0x00, 0xf0, 0x9c, 0xff, 0x04, 0x46, 0x11, 0x28, 0x0a, 0xd1, 0x28, 0x46, 
+0x00, 0xf0, 0x9c, 0xff, 0x00, 0x28, 0x05, 0xd0, 0x2c, 0x21, 0x28, 0x46, 0x00, 0xf0, 0x18, 0xff, 
+0x6f, 0x48, 0x44, 0x5d, 0x20, 0x46, 0x70, 0xbd, 0x10, 0xb5, 0x04, 0x46, 0x69, 0x48, 0x6a, 0x4a, 
+0x60, 0x43, 0x82, 0x18, 0x13, 0x46, 0x60, 0x33, 0x02, 0x29, 0x0e, 0xd0, 0x98, 0x78, 0xc0, 0x09, 
+0x0a, 0xd0, 0xff, 0x32, 0x01, 0x32, 0x10, 0x7d, 0x01, 0x28, 0x20, 0x46, 0x12, 0xd0, 0x00, 0xf0, 
+0x83, 0xff, 0x20, 0x46, 0x00, 0xf0, 0x86, 0xff, 0x10, 0xbd, 0x11, 0x46, 0xff, 0x31, 0xc1, 0x31, 
+0x48, 0x7a, 0x01, 0x28, 0xed, 0xd0, 0x88, 0x7a, 0x01, 0x28, 0xea, 0xd0, 0x98, 0x78, 0xc0, 0x09, 
+0xe7, 0xd0, 0x10, 0xbd, 0x00, 0xf0, 0x7c, 0xff, 0x20, 0x46, 0x00, 0xf0, 0x7f, 0xff, 0x10, 0xbd, 
+0xf8, 0xb5, 0x05, 0x46, 0x00, 0xf0, 0xd8, 0xfe, 0x01, 0x46, 0x52, 0x48, 0x52, 0x4a, 0x68, 0x43, 
+0x87, 0x18, 0xff, 0x20, 0x3c, 0x46, 0x15, 0x30, 0xff, 0x34, 0xc1, 0x34, 0xc0, 0x5d, 0x00, 0x29, 
+0x45, 0xd0, 0x01, 0x28, 0x16, 0xd0, 0x28, 0x46, 0x00, 0xf0, 0x6e, 0xff, 0x28, 0x46, 0x00, 0xf0, 
+0x71, 0xff, 0x00, 0x28, 0x39, 0xd0, 0x20, 0x69, 0x40, 0x00, 0x41, 0x0f, 0x28, 0x46, 0xff, 0xf7, 
+0xb3, 0xff, 0x00, 0x20, 0x03, 0x46, 0x01, 0x46, 0x00, 0x90, 0x03, 0x22, 0x28, 0x46, 0x00, 0xf0, 
+0x67, 0xff, 0x42, 0xe0, 0xe0, 0x7a, 0x13, 0x28, 0x1f, 0xd0, 0x04, 0x28, 0x21, 0xd0, 0x0a, 0x28, 
+0x21, 0xd0, 0x60, 0x69, 0x00, 0x26, 0x40, 0x00, 0x41, 0x0f, 0x28, 0x46, 0xff, 0xf7, 0x9c, 0xff, 
+0x28, 0x46, 0x00, 0xf0, 0x49, 0xff, 0xff, 0x37, 0xd5, 0x37, 0x39, 0x78, 0xf8, 0x78, 0x0a, 0x46, 
+0x79, 0x78, 0x00, 0x06, 0x09, 0x02, 0x0a, 0x43, 0xb9, 0x78, 0x09, 0x04, 0x0a, 0x43, 0x02, 0x43, 
+0x31, 0x46, 0x28, 0x46, 0x00, 0xf0, 0x4a, 0xff, 0x1f, 0xe0, 0x28, 0x46, 0x00, 0xf0, 0x4c, 0xff, 
+0x1b, 0xe0, 0x01, 0x26, 0xe7, 0xe7, 0x02, 0x26, 0xe5, 0xe7, 0xac, 0x21, 0x12, 0xe0, 0x01, 0x28, 
+0x16, 0xd0, 0xe0, 0x7b, 0x03, 0x21, 0x08, 0x43, 0xe0, 0x73, 0x28, 0x46, 0x00, 0xf0, 0x42, 0xff, 
+0x28, 0x46, 0x00, 0xf0, 0x45, 0xff, 0x28, 0x46, 0x00, 0xf0, 0x1e, 0xff, 0x19, 0x20, 0xe0, 0x72, 
+0x24, 0x48, 0x41, 0x5d, 0x28, 0x46, 0x00, 0xf0, 0x7b, 0xfe, 0x21, 0x48, 0x40, 0x5d, 0xf8, 0xbd, 
+0xe0, 0x7a, 0x13, 0x28, 0x07, 0xd0, 0x60, 0x69, 0x1f, 0x49, 0xac, 0x22, 0x20, 0x61, 0x28, 0x46, 
+0x00, 0xf0, 0x4a, 0xfe, 0xf1, 0xe7, 0x1e, 0x4a, 0x1c, 0x48, 0xa9, 0x00, 0x50, 0x50, 0xac, 0x22, 
+0x1c, 0x49, 0xf4, 0xe7, 0x13, 0x49, 0x14, 0x4a, 0x41, 0x43, 0x89, 0x18, 0x01, 0x22, 0x10, 0xb5, 
+0x92, 0x02, 0x8a, 0x18, 0xd2, 0x7a, 0x52, 0x07, 0x52, 0x0f, 0x02, 0x2a, 0x0d, 0xd0, 0x16, 0x4a, 
+0xd2, 0x6e, 0x92, 0x07, 0x92, 0x0f, 0x02, 0x2a, 0x04, 0xd1, 0x14, 0x4a, 0x12, 0x68, 0x52, 0x0f, 
+0x03, 0x2a, 0x02, 0xd0, 0x00, 0xf0, 0x12, 0xff, 0x10, 0xbd, 0xff, 0x31, 0x01, 0x31, 0xc9, 0x69, 
+0xc9, 0x00, 0x89, 0x0f, 0x02, 0x29, 0xf7, 0xd1, 0x11, 0x21, 0x00, 0xf0, 0xa7, 0xfe, 0x10, 0xbd, 
+0x30, 0x29, 0x02, 0x20, 0xe4, 0x04, 0x00, 0x00, 0xb0, 0x10, 0x02, 0x20, 0x67, 0x5c, 0x02, 0x20, 
+0x02, 0x2b, 0x02, 0x20, 0x04, 0x2b, 0x02, 0x20, 0x78, 0x69, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 
+0x8c, 0x31, 0x02, 0x20, 0xa4, 0xb5, 0x00, 0x00, 0xe8, 0x23, 0x02, 0x20, 0x9c, 0x37, 0x02, 0x20, 
+0x70, 0xb5, 0x06, 0x46, 0x35, 0x48, 0x81, 0x5d, 0x34, 0x29, 0x3d, 0xd0, 0x37, 0x29, 0x3b, 0xd0, 
+0xa2, 0x29, 0x39, 0xd0, 0x06, 0x29, 0x37, 0xd0, 0x0a, 0x29, 0x35, 0xd0, 0x0b, 0x29, 0x33, 0xd0, 
+0x2f, 0x4a, 0xb0, 0x00, 0x13, 0x58, 0x30, 0x4d, 0x2e, 0x4c, 0x75, 0x43, 0x2c, 0x19, 0x25, 0x46, 
+0x60, 0x35, 0x00, 0x2b, 0x11, 0xd0, 0x58, 0x01, 0x2b, 0xd4, 0x28, 0x29, 0x24, 0xd0, 0x20, 0x6d, 
+0x80, 0x02, 0x19, 0xd5, 0x00, 0x22, 0x11, 0x46, 0x2b, 0x20, 0x00, 0xf0, 0xcd, 0xfe, 0x00, 0x28, 
+0x1f, 0xd1, 0x20, 0x6d, 0x80, 0x02, 0x0f, 0xd4, 0x1b, 0xe0, 0x60, 0x68, 0x80, 0x00, 0x81, 0x0d, 
+0xa0, 0x6f, 0x00, 0x07, 0x80, 0x0f, 0x03, 0x28, 0x0f, 0xd0, 0x02, 0x28, 0x0f, 0xd0, 0x01, 0x28, 
+0x0a, 0xd1, 0x12, 0x20, 0x88, 0x42, 0x0c, 0xd3, 0x28, 0x7f, 0xff, 0x28, 0x04, 0xd1, 0x00, 0x22, 
+0x11, 0x46, 0x30, 0x46, 0x00, 0xf0, 0xb6, 0xfe, 0x70, 0xbd, 0x3c, 0x20, 0xf2, 0xe7, 0x1e, 0x20, 
+0xf0, 0xe7, 0x29, 0x7f, 0xff, 0x29, 0xf7, 0xd0, 0x30, 0x46, 0x00, 0xf0, 0xb1, 0xfe, 0xff, 0x20, 
+0x28, 0x77, 0x70, 0xbd, 0x70, 0xb5, 0x04, 0x46, 0x0d, 0x46, 0x00, 0x78, 0x0f, 0x49, 0x00, 0x02, 
+0x40, 0x18, 0x06, 0x6b, 0x07, 0x20, 0x00, 0x03, 0x06, 0x40, 0x29, 0x46, 0x20, 0x46, 0x00, 0xf0, 
+0xa5, 0xfe, 0x60, 0x78, 0x00, 0x28, 0x07, 0xd1, 0xe0, 0x78, 0x00, 0x28, 0x04, 0xd1, 0x40, 0x21, 
+0xe8, 0x68, 0x0e, 0x43, 0x30, 0x43, 0xe8, 0x60, 0x70, 0xbd, 0x00, 0x00, 0x02, 0x2b, 0x02, 0x20, 
+0xf0, 0x2a, 0x02, 0x20, 0xb0, 0x10, 0x02, 0x20, 0xe4, 0x04, 0x00, 0x00, 0x40, 0x09, 0x09, 0x40, 
+0x1c, 0xb5, 0x40, 0x4b, 0x0c, 0xcb, 0x00, 0x92, 0x01, 0x93, 0x00, 0x22, 0x6b, 0x46, 0x80, 0x00, 
+0x1b, 0x58, 0x0a, 0xe0, 0x88, 0x42, 0x06, 0xd1, 0x90, 0x00, 0x10, 0x18, 0x40, 0x1c, 0x18, 0x18, 
+0x00, 0xf0, 0x2c, 0xfd, 0x1c, 0xbd, 0x52, 0x1c, 0xd2, 0xb2, 0x90, 0x00, 0x10, 0x18, 0x18, 0x5c, 
+0xff, 0x28, 0xef, 0xd1, 0x00, 0x20, 0x1c, 0xbd, 0x70, 0xb5, 0x0c, 0x46, 0x00, 0xf0, 0x74, 0xfe, 
+0x05, 0x46, 0x20, 0x2c, 0x08, 0xd1, 0x00, 0x24, 0x04, 0x21, 0x20, 0x46, 0x00, 0xf0, 0x98, 0xfc, 
+0x64, 0x1c, 0xe4, 0xb2, 0x02, 0x2c, 0xf7, 0xd3, 0x28, 0x46, 0x70, 0xbd, 0x08, 0xb5, 0x2a, 0x48, 
+0x00, 0x6a, 0x00, 0x90, 0x29, 0x48, 0x80, 0x21, 0x42, 0x7e, 0x0a, 0x43, 0x42, 0x76, 0x28, 0x48, 
+0x42, 0x7f, 0x0a, 0x43, 0x42, 0x77, 0x08, 0xbd, 0x10, 0xb5, 0x04, 0x46, 0x00, 0xf0, 0x5a, 0xfe, 
+0x24, 0x49, 0x88, 0x42, 0x09, 0xd1, 0x1f, 0x4a, 0x00, 0x21, 0x08, 0x32, 0x8b, 0x00, 0xd3, 0x58, 
+0xa3, 0x42, 0x03, 0xd1, 0x08, 0x46, 0xff, 0x30, 0x47, 0x30, 0x10, 0xbd, 0x49, 0x1c, 0x03, 0x29, 
+0xf4, 0xd3, 0x10, 0xbd, 0xf8, 0xb5, 0x05, 0x46, 0x01, 0x24, 0x00, 0x20, 0x07, 0x9f, 0xff, 0x39, 
+0x19, 0x4e, 0x0f, 0x39, 0x1a, 0xd0, 0x0a, 0x29, 0x14, 0xd0, 0x01, 0x25, 0x17, 0x4b, 0x18, 0x4e, 
+0x39, 0x29, 0x02, 0xd0, 0x3a, 0x29, 0x19, 0xd1, 0x04, 0xe0, 0xd9, 0x6a, 0x12, 0x78, 0x95, 0x40, 
+0x29, 0x43, 0x03, 0xe0, 0xd9, 0x6a, 0x12, 0x78, 0x95, 0x40, 0xa9, 0x43, 0x31, 0x60, 0x00, 0x24, 
+0x38, 0x60, 0x0b, 0xe0, 0x70, 0x5d, 0x27, 0x28, 0x0a, 0xd0, 0x07, 0xe0, 0x28, 0x46, 0x00, 0xf0, 
+0x27, 0xfe, 0x00, 0x28, 0x04, 0xd0, 0x70, 0x5d, 0x28, 0x28, 0x01, 0xd0, 0x20, 0x46, 0xf8, 0xbd, 
+0x03, 0x20, 0xec, 0xe7, 0x48, 0x5c, 0x02, 0x20, 0x00, 0x80, 0x03, 0x20, 0xb0, 0x10, 0x02, 0x20, 
+0x90, 0x15, 0x02, 0x20, 0x21, 0x43, 0x4d, 0x44, 0x02, 0x2b, 0x02, 0x20, 0x00, 0x07, 0x06, 0x40, 
+0x00, 0x06, 0x06, 0x40, 0x10, 0xb5, 0x00, 0xf0, 0x11, 0xfe, 0x00, 0x21, 0x19, 0x20, 0x00, 0xf0, 
+0x05, 0xf8, 0x00, 0x21, 0x1a, 0x20, 0x00, 0xf0, 0x01, 0xf8, 0x10, 0xbd, 0x82, 0x07, 0xd3, 0x0e, 
+0xff, 0x22, 0x9a, 0x40, 0x89, 0x07, 0x09, 0x0e, 0x99, 0x40, 0x00, 0x28, 0x0b, 0xda, 0x00, 0x07, 
+0x00, 0x0f, 0x08, 0x38, 0x83, 0x08, 0x24, 0x48, 0x9b, 0x00, 0x18, 0x18, 0xc3, 0x69, 0x93, 0x43, 
+0x0b, 0x43, 0xc3, 0x61, 0x70, 0x47, 0x83, 0x08, 0x20, 0x48, 0x9b, 0x00, 0x18, 0x18, 0x03, 0x68, 
+0x93, 0x43, 0x0b, 0x43, 0x03, 0x60, 0x70, 0x47, 0x10, 0xb5, 0x00, 0xf0, 0xed, 0xfd, 0x1c, 0x48, 
+0x00, 0x7e, 0x40, 0x07, 0x03, 0xd4, 0x1b, 0x48, 0x00, 0x7f, 0x40, 0x07, 0x02, 0xd5, 0x1a, 0x48, 
+0x00, 0x21, 0x01, 0x70, 0x10, 0xbd, 0x10, 0xb5, 0x18, 0x48, 0x81, 0x69, 0x49, 0x1c, 0x00, 0x24, 
+0x81, 0x61, 0x01, 0x21, 0x20, 0x46, 0x00, 0xf0, 0x57, 0xf9, 0x64, 0x1c, 0xe4, 0xb2, 0x02, 0x2c, 
+0xf7, 0xd3, 0x13, 0x48, 0x00, 0xf0, 0xd6, 0xfd, 0x00, 0xf0, 0xda, 0xfd, 0x10, 0xbd, 0x10, 0xb5, 
+0x0e, 0x48, 0x10, 0x49, 0x02, 0x68, 0x48, 0x78, 0x0b, 0x78, 0x00, 0x02, 0x18, 0x43, 0xc0, 0x1c, 
+0x80, 0x08, 0x80, 0x00, 0x10, 0x18, 0xca, 0x78, 0x8b, 0x78, 0x11, 0x02, 0x19, 0x43, 0x00, 0xf0, 
+0xcd, 0xfd, 0x00, 0xf0, 0xd1, 0xfd, 0x10, 0xbd, 0x00, 0xed, 0x00, 0xe0, 0x00, 0xe4, 0x00, 0xe0, 
+0xb0, 0x10, 0x02, 0x20, 0x90, 0x15, 0x02, 0x20, 0xa8, 0x24, 0x02, 0x20, 0xf4, 0x37, 0x02, 0x20, 
+0x00, 0x71, 0x02, 0x00, 0x10, 0x38, 0x02, 0x20, 0x10, 0xb5, 0x13, 0x49, 0x14, 0x4c, 0x0a, 0x5c, 
+0x12, 0x49, 0x01, 0x23, 0x41, 0x43, 0x09, 0x19, 0xff, 0x31, 0x61, 0x31, 0x3f, 0x2a, 0x04, 0xd0, 
+0x32, 0x2a, 0x04, 0xd0, 0x4a, 0x2a, 0x04, 0xd0, 0x04, 0xe0, 0x0b, 0x75, 0x02, 0xe0, 0x8b, 0x74, 
+0x00, 0xe0, 0xcb, 0x74, 0x00, 0xf0, 0xae, 0xfd, 0x10, 0xbd, 0x10, 0xb5, 0x1b, 0x29, 0x00, 0xd1, 
+0x2d, 0x21, 0x00, 0xf0, 0xad, 0xfd, 0x10, 0xbd, 0x10, 0xb5, 0x1b, 0x29, 0x00, 0xd1, 0x2d, 0x21, 
+0x00, 0xf0, 0xac, 0xfd, 0x10, 0xbd, 0x00, 0x00, 0x02, 0x2b, 0x02, 0x20, 0xe4, 0x04, 0x00, 0x00, 
+0xb0, 0x10, 0x02, 0x20, 0xfe, 0xb5, 0x1c, 0x46, 0x07, 0x46, 0x1e, 0x78, 0x00, 0xf0, 0xa4, 0xfd, 
+0x05, 0x00, 0x31, 0xd1, 0x38, 0x48, 0x61, 0x1c, 0x47, 0x43, 0x38, 0x48, 0x38, 0x18, 0x40, 0x30, 
+0x07, 0x2e, 0x02, 0xd0, 0x12, 0x2e, 0x27, 0xd1, 0x0d, 0xe0, 0xc0, 0x7d, 0x80, 0x07, 0x80, 0x0f, 
+0x02, 0x28, 0x21, 0xd1, 0x60, 0x78, 0xa2, 0x78, 0x6b, 0x46, 0x5a, 0x70, 0x03, 0x22, 0x10, 0x43, 
+0x18, 0x70, 0x08, 0x70, 0x18, 0xe0, 0x80, 0x7e, 0xc1, 0x07, 0x03, 0xd0, 0x00, 0x07, 0x40, 0x0f, 
+0x04, 0x28, 0x11, 0xd1, 0x00, 0x20, 0x00, 0x90, 0x01, 0x90, 0x69, 0x46, 0x02, 0x90, 0x88, 0x78, 
+0xf7, 0x21, 0x08, 0x40, 0x69, 0x46, 0x88, 0x70, 0x60, 0x78, 0x08, 0x70, 0xa0, 0x78, 0x48, 0x70, 
+0x09, 0x22, 0x60, 0x1c, 0x00, 0xf0, 0xd8, 0xfb, 0x28, 0x46, 0xfe, 0xbd, 0xfe, 0xb5, 0x16, 0x46, 
+0x0d, 0x46, 0x07, 0x46, 0x00, 0xf0, 0x6e, 0xfd, 0x04, 0x46, 0x1b, 0x48, 0x47, 0x43, 0x1b, 0x48, 
+0x38, 0x18, 0xff, 0x30, 0x81, 0x30, 0x81, 0x68, 0x40, 0x68, 0x00, 0x90, 0x01, 0x91, 0x68, 0x46, 
+0x07, 0x88, 0x39, 0x0a, 0xb1, 0x42, 0x01, 0xd3, 0x00, 0x20, 0x0a, 0xe0, 0x00, 0x98, 0x80, 0x03, 
+0x80, 0x0f, 0x42, 0x18, 0x52, 0x1c, 0xb2, 0x42, 0x01, 0xd8, 0x40, 0x1c, 0x01, 0xe0, 0x70, 0x1a, 
+0xc0, 0xb2, 0x82, 0x00, 0x62, 0x70, 0x49, 0x19, 0xa0, 0x1c, 0x00, 0xf0, 0xad, 0xfb, 0x38, 0x06, 
+0x11, 0xd4, 0x38, 0x0a, 0x0f, 0xd1, 0x00, 0x98, 0x01, 0x26, 0x40, 0x03, 0xf6, 0x06, 0x2d, 0x68, 
+0x00, 0xf0, 0x46, 0xfd, 0xc0, 0x06, 0xb5, 0x43, 0x05, 0x43, 0x04, 0x22, 0x69, 0x46, 0xa0, 0x1c, 
+0x00, 0x95, 0x00, 0xf0, 0x99, 0xfb, 0xfe, 0xbd, 0xe4, 0x04, 0x00, 0x00, 0xb0, 0x10, 0x02, 0x20, 
+0x10, 0xb5, 0x04, 0x46, 0x08, 0x49, 0x00, 0x20, 0x08, 0x55, 0x20, 0x46, 0x00, 0xf0, 0x36, 0xfd, 
+0x06, 0x49, 0x00, 0x2c, 0x08, 0x79, 0x03, 0xd0, 0xf3, 0x22, 0x10, 0x40, 0x08, 0x71, 0x10, 0xbd, 
+0x80, 0x08, 0x80, 0x00, 0xfa, 0xe7, 0x00, 0x00, 0x67, 0x5c, 0x02, 0x20, 0x48, 0x24, 0x02, 0x20, 
+0x98, 0x49, 0x99, 0x4a, 0x41, 0x43, 0x89, 0x18, 0x19, 0x22, 0x10, 0xb5, 0x52, 0x01, 0x8a, 0x18, 
+0x12, 0x78, 0x60, 0x2a, 0x02, 0xd0, 0x00, 0xf0, 0x1f, 0xfd, 0x10, 0xbd, 0x03, 0x22, 0x12, 0x02, 
+0x89, 0x18, 0xca, 0x7d, 0x01, 0x2a, 0x08, 0xd0, 0x02, 0x2a, 0xf6, 0xd1, 0x89, 0x7e, 0x00, 0x29, 
+0xf3, 0xd1, 0x1b, 0x21, 0x00, 0xf0, 0x16, 0xfd, 0x10, 0xbd, 0x49, 0x7e, 0xf7, 0xe7, 0x70, 0xb5, 
+0x04, 0x46, 0x88, 0x48, 0x21, 0x46, 0x41, 0x43, 0x87, 0x48, 0x01, 0x26, 0x0d, 0x18, 0x03, 0x20, 
+0x00, 0x02, 0x29, 0x18, 0x88, 0x7e, 0x4a, 0x7e, 0x90, 0x42, 0x02, 0xd9, 0x02, 0x20, 0xc8, 0x75, 
+0x00, 0xe0, 0xce, 0x75, 0x20, 0x46, 0x00, 0xf0, 0x03, 0xfd, 0x17, 0x20, 0x40, 0x01, 0x28, 0x18, 
+0x01, 0x7b, 0x31, 0x43, 0x01, 0x73, 0x18, 0x21, 0x20, 0x46, 0xff, 0xf7, 0xcf, 0xf8, 0x70, 0xbd, 
+0x10, 0xb5, 0xef, 0xf3, 0x10, 0x82, 0xd4, 0x07, 0xe4, 0x0f, 0x72, 0xb6, 0x0c, 0x29, 0x0d, 0xd0, 
+0x06, 0xdc, 0x09, 0x29, 0x0a, 0xd0, 0x0a, 0x29, 0x08, 0xd0, 0x0b, 0x29, 0x0e, 0xd1, 0x05, 0xe0, 
+0x0d, 0x29, 0x03, 0xd0, 0x1e, 0x29, 0x01, 0xd0, 0x1f, 0x29, 0x07, 0xd1, 0x6d, 0x4a, 0x6e, 0x4b, 
+0x42, 0x43, 0xd2, 0x18, 0x40, 0x32, 0x92, 0x7e, 0xd2, 0x07, 0x01, 0xd0, 0x00, 0xf0, 0xde, 0xfc, 
+0x00, 0x2c, 0x00, 0xd1, 0x62, 0xb6, 0x10, 0xbd, 0x70, 0xb5, 0x0c, 0x46, 0x05, 0x46, 0x0a, 0x21, 
+0xff, 0xf7, 0xf2, 0xfe, 0x21, 0x46, 0x28, 0x46, 0x00, 0xf0, 0xd6, 0xfc, 0x70, 0xbd, 0x10, 0xb5, 
+0x04, 0x46, 0x00, 0xf0, 0xd7, 0xfc, 0x5f, 0x48, 0x5f, 0x49, 0x60, 0x43, 0x41, 0x18, 0x08, 0x6d, 
+0x80, 0x00, 0x17, 0xd4, 0xff, 0x31, 0xc1, 0x31, 0xc8, 0x7b, 0xc0, 0x43, 0x80, 0x07, 0x11, 0xd1, 
+0x0a, 0x69, 0x50, 0x00, 0x40, 0x0f, 0x02, 0x28, 0x03, 0xd0, 0x01, 0x28, 0x03, 0xd0, 0x50, 0x21, 
+0x04, 0xe0, 0x54, 0x21, 0x00, 0xe0, 0x52, 0x21, 0x90, 0x04, 0x03, 0xd5, 0x01, 0x22, 0x20, 0x46, 
+0xfe, 0xf7, 0xe6, 0xfe, 0x10, 0xbd, 0x10, 0xb5, 0x04, 0x46, 0x00, 0xf0, 0xb9, 0xfc, 0x4d, 0x49, 
+0x20, 0x46, 0x48, 0x43, 0x4c, 0x49, 0x41, 0x18, 0x19, 0x20, 0x40, 0x01, 0x08, 0x18, 0x00, 0x78, 
+0x4e, 0x28, 0x07, 0xd1, 0x00, 0x21, 0x20, 0x46, 0x00, 0xf0, 0xb0, 0xfc, 0x01, 0x21, 0x20, 0x46, 
+0x00, 0xf0, 0xb2, 0xfc, 0x10, 0xbd, 0x10, 0xb5, 0x44, 0x49, 0x09, 0x7e, 0x49, 0x06, 0x12, 0xd5, 
+0x41, 0x49, 0x0a, 0x7e, 0x52, 0x07, 0x03, 0xd4, 0x41, 0x4a, 0x12, 0x7f, 0x52, 0x07, 0x0a, 0xd5, 
+0x3c, 0x4b, 0x3e, 0x4a, 0x58, 0x43, 0x40, 0x18, 0xc0, 0x32, 0x19, 0x21, 0x49, 0x01, 0x12, 0x78, 
+0x40, 0x18, 0x02, 0x72, 0x10, 0xbd, 0x00, 0xf0, 0x9d, 0xfc, 0x10, 0xbd, 0x10, 0xb5, 0x04, 0x46, 
+0x00, 0xf0, 0x9e, 0xfc, 0x00, 0x28, 0x09, 0xd0, 0x32, 0x49, 0x4c, 0x43, 0x32, 0x49, 0x61, 0x18, 
+0xff, 0x31, 0x01, 0x31, 0x89, 0x7b, 0x00, 0x29, 0x00, 0xd1, 0x00, 0x20, 0x10, 0xbd, 0x70, 0xb5, 
+0x05, 0x46, 0x72, 0xb6, 0x00, 0x21, 0x1a, 0x20, 0xff, 0xf7, 0xf8, 0xfd, 0x62, 0xb6, 0x01, 0x21, 
+0x2c, 0x48, 0xaa, 0x00, 0x14, 0x18, 0xe1, 0x70, 0x28, 0x46, 0x00, 0xf0, 0x87, 0xfc, 0x00, 0x20, 
+0xe0, 0x70, 0x19, 0x21, 0x28, 0x46, 0xff, 0xf7, 0x21, 0xf8, 0x72, 0xb6, 0x03, 0x21, 0x1a, 0x20, 
+0xff, 0xf7, 0xe4, 0xfd, 0x62, 0xb6, 0x70, 0xbd, 0xf8, 0xb5, 0x23, 0x4b, 0x03, 0x21, 0x1e, 0x48, 
+0x1a, 0x68, 0x09, 0x02, 0x01, 0x27, 0x41, 0x18, 0xff, 0x02, 0xd4, 0x07, 0x1f, 0x4d, 0x20, 0x4e, 
+0xc0, 0x19, 0x00, 0x2c, 0x02, 0xd0, 0x4d, 0x62, 0x86, 0x60, 0x01, 0xe0, 0x4e, 0x62, 0x85, 0x60, 
+0x52, 0x1c, 0x1c, 0x4d, 0x1c, 0x4e, 0x1d, 0x4c, 0x1a, 0x60, 0xd0, 0x07, 0x08, 0xd0, 0x00, 0x20, 
+0x00, 0xf0, 0x62, 0xfc, 0x00, 0x28, 0x01, 0xd0, 0x30, 0x68, 0x05, 0xe0, 0x28, 0x68, 0x03, 0xe0, 
+0xa1, 0x69, 0x30, 0x68, 0x81, 0x42, 0xf9, 0xd0, 0xa0, 0x61, 0x0b, 0x48, 0x40, 0x30, 0xc0, 0x7d, 
+0x80, 0x07, 0x80, 0x0f, 0x02, 0x28, 0x06, 0xd0, 0x09, 0x48, 0x40, 0x30, 0xc0, 0x7e, 0x80, 0x07, 
+0x80, 0x0f, 0x02, 0x28, 0x04, 0xd1, 0x01, 0x22, 0x00, 0x20, 0xa1, 0x69, 0x00, 0xf0, 0x4a, 0xfc, 
+0xf8, 0xbd, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 0xb0, 0x10, 0x02, 0x20, 0xe8, 0x23, 0x02, 0x20, 
+0x90, 0x15, 0x02, 0x20, 0x5c, 0x5c, 0x02, 0x20, 0x70, 0x36, 0x02, 0x20, 0x75, 0xdc, 0x01, 0x00, 
+0x61, 0xdc, 0x01, 0x00, 0x58, 0x04, 0x02, 0x20, 0x54, 0x04, 0x02, 0x20, 0x68, 0x24, 0x02, 0x20, 
+0x7c, 0xb5, 0x05, 0x46, 0x29, 0xa2, 0x05, 0xca, 0x03, 0x26, 0x01, 0x92, 0x00, 0x90, 0x00, 0x29, 
+0x22, 0xd0, 0x28, 0x48, 0x28, 0x4a, 0x68, 0x43, 0x82, 0x18, 0xff, 0x20, 0x14, 0x30, 0x83, 0x5c, 
+0xa8, 0x00, 0x00, 0x2b, 0x07, 0xd1, 0x25, 0x4b, 0x1b, 0x58, 0x5b, 0x00, 0x5b, 0x0f, 0x01, 0x2b, 
+0x01, 0xd8, 0x23, 0x4c, 0x12, 0xe0, 0xff, 0x32, 0x61, 0x32, 0xd2, 0x7e, 0x92, 0x09, 0x03, 0x2a, 
+0x00, 0xd0, 0x0a, 0x39, 0x1f, 0x4a, 0x80, 0x18, 0x40, 0x78, 0x6a, 0x46, 0x40, 0x07, 0x40, 0x0f, 
+0x10, 0x5c, 0x48, 0x43, 0x44, 0x08, 0x01, 0xe0, 0x00, 0x24, 0x02, 0x26, 0x02, 0x21, 0x28, 0x46, 
+0x00, 0xf0, 0x06, 0xfc, 0x03, 0x2e, 0x0d, 0xd1, 0x17, 0x48, 0x44, 0x43, 0xa0, 0x0c, 0xff, 0x28, 
+0x00, 0xd9, 0xff, 0x20, 0x15, 0x4a, 0x29, 0x02, 0x89, 0x18, 0x48, 0x61, 0x31, 0x46, 0x28, 0x46, 
+0x00, 0xf0, 0xf6, 0xfb, 0x7c, 0xbd, 0x0b, 0x49, 0x0b, 0x4a, 0x41, 0x43, 0x89, 0x18, 0x10, 0xb5, 
+0xff, 0x31, 0x01, 0x31, 0xca, 0x7c, 0x0e, 0x49, 0x01, 0x2a, 0x04, 0xd0, 0x08, 0x22, 0x0a, 0x70, 
+0x00, 0xf0, 0xec, 0xfb, 0x10, 0xbd, 0x05, 0x22, 0xf9, 0xe7, 0x00, 0x00, 0x5f, 0x5a, 0x55, 0x50, 
+0x4b, 0x46, 0x3c, 0x32, 0xe4, 0x04, 0x00, 0x00, 0xb0, 0x10, 0x02, 0x20, 0xf0, 0x2a, 0x02, 0x20, 
+0x13, 0x0d, 0x00, 0x00, 0x5c, 0x5c, 0x02, 0x20, 0x67, 0x0a, 0x00, 0x00, 0x80, 0x09, 0x09, 0x40, 
+0x04, 0x00, 0x02, 0x20, 0x10, 0xb5, 0x04, 0x46, 0x00, 0xf0, 0xd6, 0xfb, 0x4d, 0x48, 0x0b, 0x21, 
+0x44, 0x43, 0x4d, 0x48, 0x89, 0x01, 0x20, 0x18, 0x41, 0x18, 0x09, 0x8d, 0x89, 0x07, 0x0a, 0xd1, 
+0x11, 0x21, 0x49, 0x01, 0x41, 0x18, 0x49, 0x7c, 0x00, 0x29, 0x04, 0xd0, 0x17, 0x22, 0x00, 0x21, 
+0x52, 0x01, 0x80, 0x18, 0x41, 0x72, 0x10, 0xbd, 0x10, 0xb5, 0x04, 0x46, 0x00, 0xf0, 0xc2, 0xfb, 
+0x40, 0x48, 0x44, 0x43, 0x40, 0x48, 0x21, 0x18, 0xca, 0x1d, 0xff, 0x32, 0xfa, 0x32, 0xd3, 0x6b, 
+0x10, 0x20, 0x83, 0x43, 0x20, 0x31, 0x08, 0x79, 0xc0, 0x07, 0xc0, 0x0e, 0x03, 0x43, 0xd3, 0x63, 
+0x10, 0xbd, 0x38, 0x4a, 0x38, 0x4b, 0x42, 0x43, 0xd2, 0x18, 0x10, 0xb5, 0xff, 0x23, 0x15, 0x33, 
+0x9b, 0x5c, 0x01, 0x2b, 0x02, 0xd0, 0x00, 0xf0, 0xab, 0xfb, 0x10, 0xbd, 0x8f, 0x21, 0x89, 0x00, 
+0x51, 0x18, 0x0b, 0x68, 0x80, 0x21, 0x8b, 0x43, 0x30, 0x49, 0x00, 0x22, 0x09, 0x5c, 0xc9, 0x07, 
+0x09, 0x0e, 0x0b, 0x43, 0xff, 0x21, 0x01, 0x31, 0x8b, 0x43, 0x2d, 0x49, 0x09, 0x5c, 0xc9, 0x07, 
+0xc9, 0x0d, 0x0b, 0x43, 0x78, 0x21, 0x8b, 0x43, 0x10, 0x21, 0x00, 0xf0, 0x97, 0xfb, 0x10, 0xbd, 
+0xfe, 0xb5, 0x06, 0x46, 0x69, 0x46, 0x00, 0xf0, 0x97, 0xfb, 0x22, 0x48, 0x22, 0x49, 0x70, 0x43, 
+0x44, 0x18, 0x61, 0x20, 0x00, 0x5d, 0xc0, 0x07, 0x27, 0xd0, 0x1e, 0x48, 0xe1, 0x1d, 0x1e, 0x4a, 
+0xf9, 0x31, 0x70, 0x43, 0x01, 0x91, 0x85, 0x18, 0x09, 0x7d, 0xff, 0x35, 0xc1, 0x35, 0x01, 0x29, 
+0x0c, 0xd1, 0xef, 0xf3, 0x10, 0x80, 0xc7, 0x07, 0xff, 0x0f, 0x72, 0xb6, 0xe9, 0x6b, 0x02, 0x91, 
+0x30, 0x46, 0xff, 0xf7, 0x87, 0xff, 0x00, 0x2f, 0x00, 0xd1, 0x62, 0xb6, 0x01, 0x98, 0x00, 0x7d, 
+0x00, 0x28, 0x0a, 0xd1, 0xa8, 0x6b, 0x00, 0x99, 0x88, 0x42, 0x06, 0xd0, 0x11, 0x20, 0x40, 0x01, 
+0x20, 0x18, 0x81, 0x7c, 0x04, 0x22, 0x11, 0x43, 0x81, 0x74, 0x30, 0x46, 0x00, 0xf0, 0x78, 0xf9, 
+0xfe, 0xbd, 0x08, 0x49, 0x08, 0x4a, 0x41, 0x43, 0x89, 0x18, 0x11, 0x22, 0x10, 0xb5, 0x92, 0x01, 
+0x89, 0x18, 0x49, 0x68, 0x89, 0x00, 0x49, 0x0f, 0x04, 0x29, 0x01, 0xd1, 0x00, 0xf0, 0x5a, 0xfb, 
+0x10, 0xbd, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 0xb0, 0x10, 0x02, 0x20, 0xc6, 0x36, 0x02, 0x20, 
+0xc8, 0x36, 0x02, 0x20, 0x70, 0xb5, 0x05, 0x46, 0x20, 0x48, 0x21, 0x49, 0x68, 0x43, 0x44, 0x18, 
+0xff, 0x20, 0xcc, 0x30, 0x00, 0x5d, 0x13, 0x28, 0x33, 0xd0, 0x7d, 0x21, 0xc9, 0x00, 0x28, 0x46, 
+0x00, 0xf0, 0x96, 0xf9, 0xef, 0xf3, 0x10, 0x80, 0xc6, 0x07, 0xf6, 0x0f, 0x72, 0xb6, 0x28, 0x46, 
+0x00, 0xf0, 0x3e, 0xfb, 0x20, 0x46, 0xff, 0x30, 0xe1, 0x30, 0x02, 0x89, 0x11, 0x23, 0x9b, 0x01, 
+0xe3, 0x18, 0x5b, 0x68, 0x00, 0x21, 0x9b, 0x00, 0x5b, 0x0f, 0x04, 0x2b, 0x00, 0xd1, 0x01, 0x21, 
+0x03, 0x23, 0x1b, 0x02, 0x9a, 0x43, 0x83, 0x7a, 0x49, 0x02, 0xdb, 0x07, 0xdb, 0x0d, 0x19, 0x43, 
+0x97, 0x23, 0xdb, 0x00, 0x5d, 0x43, 0x11, 0x43, 0x0a, 0x4b, 0x0a, 0x04, 0x07, 0x24, 0x52, 0x1c, 
+0xeb, 0x18, 0xe4, 0x01, 0x1b, 0x19, 0xda, 0x60, 0x01, 0x81, 0x00, 0x2e, 0x00, 0xd1, 0x62, 0xb6, 
+0x70, 0xbd, 0x28, 0x46, 0x00, 0xf0, 0x14, 0xfb, 0x70, 0xbd, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00, 
+0xb0, 0x10, 0x02, 0x20, 0x78, 0x1a, 0x02, 0x20, 0x70, 0xb5, 0x05, 0x46, 0x00, 0x29, 0x03, 0xd0, 
+0x01, 0x21, 0x00, 0xf0, 0x0b, 0xfb, 0x70, 0xbd, 0xff, 0xf7, 0x18, 0xfe, 0x00, 0x28, 0xfa, 0xd0, 
+0x17, 0x48, 0x2c, 0x46, 0x44, 0x43, 0x17, 0x48, 0x21, 0x18, 0x09, 0x6d, 0x89, 0x02, 0xf2, 0xd5, 
+0x00, 0x5d, 0x40, 0x06, 0x04, 0xd5, 0x14, 0x49, 0xa8, 0x00, 0x08, 0x58, 0x40, 0x01, 0xea, 0xd4, 
+0x00, 0x21, 0x28, 0x46, 0x00, 0xf0, 0xf8, 0xfa, 0x70, 0xbd, 0x10, 0xb5, 0x01, 0x23, 0x13, 0x70, 
+0x09, 0x79, 0xc9, 0x06, 0xc9, 0x0e, 0x0e, 0x29, 0x0a, 0xd1, 0x09, 0x49, 0x09, 0x4a, 0x41, 0x43, 
+0x89, 0x18, 0xff, 0x31, 0x01, 0x31, 0xc9, 0x69, 0xc9, 0x00, 0x89, 0x0f, 0x01, 0x29, 0x01, 0xd0, 
+0x01, 0x20, 0x10, 0xbd, 0x2c, 0x21, 0x00, 0xf0, 0x71, 0xf9, 0x00, 0x20, 0x10, 0xbd, 0x00, 0x00, 
+0xe4, 0x04, 0x00, 0x00, 0xb0, 0x10, 0x02, 0x20, 0xf0, 0x2a, 0x02, 0x20, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x2d, 0xb2, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0xc5, 0xb5, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x0f, 0x07, 0x00, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xbd, 0xc2, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0xb3, 0x05, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x89, 0x13, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x5d, 0x10, 0x00, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xf5, 0xd5, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x2d, 0x14, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0xa5, 0x14, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x2b, 0xe8, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xa9, 0xc5, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x31, 0xc6, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0xd7, 0xd5, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xf7, 0xc8, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x7b, 0x4b, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x77, 0xd8, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x8f, 0xc8, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x3b, 0xd8, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x6d, 0xca, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x09, 0xd6, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x2b, 0xc3, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x7d, 0xc9, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xed, 0xc8, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0xb1, 0xe5, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x65, 0xe5, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x4d, 0x4e, 0x00, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x99, 0xd1, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x8f, 0x57, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x25, 0x59, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xe1, 0x56, 0x00, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xb3, 0xca, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0xe3, 0xca, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0xcd, 0xc5, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x91, 0xd4, 0x00, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xbd, 0xe1, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x7d, 0xbf, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x93, 0xd7, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xa5, 0xa8, 0x00, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x2b, 0xb3, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0xa3, 0x83, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x5b, 0xcb, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xcf, 0xde, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x8b, 0xcb, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x21, 0xce, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0xff, 0x9d, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xa3, 0xb6, 0x00, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xff, 0xd7, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x11, 0x6c, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x15, 0xeb, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x65, 0x7e, 0x00, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x2d, 0xcd, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x4b, 0xea, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0xb7, 0xde, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x47, 0xe9, 0x00, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xd1, 0xbb, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0xa1, 0xf4, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x85, 0x73, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x8f, 0x8c, 0x00, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xbb, 0xd4, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x67, 0xcb, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x5b, 0x9c, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xb5, 0xd5, 0x00, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x5d, 0xdc, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0xf7, 0xcb, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x51, 0xd0, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x8b, 0xd0, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x69, 0xd0, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x81, 0xd0, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x43, 0xda, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xe7, 0xd1, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x8f, 0xd4, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0xc9, 0xd1, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x67, 0xe0, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x75, 0xd0, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xb3, 0xd2, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x67, 0x78, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0xcb, 0xca, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xa7, 0xd3, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x5f, 0xd3, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0xa3, 0x0a, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x55, 0x22, 0x00, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x51, 0x34, 0x00, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xc7, 0xda, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x6d, 0x24, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x21, 0x2d, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xd5, 0x00, 0x00, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xc7, 0x2b, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x9b, 0xe5, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0xd5, 0x2c, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xb1, 0x2f, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x75, 0x34, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x59, 0x33, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x0f, 0x3b, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x5b, 0xc7, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xa7, 0xd9, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0xeb, 0x48, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0xd1, 0x5c, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xef, 0xd9, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xb5, 0x5a, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0xeb, 0x9f, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0xc7, 0x51, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x83, 0x56, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xb5, 0x4b, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x35, 0xde, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x3f, 0xde, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x85, 0x4c, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xdd, 0x71, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0xb3, 0x4d, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0xe7, 0xdb, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x23, 0xd8, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xd1, 0xdd, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x41, 0x7d, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0x7f, 0x88, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x43, 0x8a, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xfd, 0x86, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0xc3, 0xde, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0xb3, 0xdf, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0xdd, 0x90, 0x01, 0x00, 
+0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 0x99, 0x95, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 
+0x01, 0x90, 0x01, 0xbd, 0x9f, 0xa1, 0x01, 0x00, 0x03, 0xb4, 0x01, 0x48, 0x01, 0x90, 0x01, 0xbd, 
+0xe5, 0xd0, 0x01, 0x00, 0x6a, 0x8e, 0xef, 0x01, 0x00, 0x28, 0x12, 0x5c, 0x02, 0x20, 0xff, 0x00, 
+0x00, 0x00, 0x00, 0x6a, 0x8e, 0xef, 0x01, 0x00, 0x28, 0x1e, 0x5c, 0x02, 0x20, 0xff, 0x00, 0x00, 
+0x00, 0x00, 0x07, 0x11, 0x02, 0x20, 0x03, 0x02, 0x5d, 0x5c, 0x02, 0x20, 0x01, 0x81, 0xeb, 0x15, 
+0x02, 0x20, 0x03, 0x02, 0x61, 0x5c, 0x02, 0x20, 0x01, 0x81, 0x00, 0x00, 0x1d, 0x00, 0x17, 0x00, 
+0x1f, 0x01, 0x23, 0x01, 0x39, 0x00, 0x4c, 0x00, 0x32, 0x00, 0x30, 0x00, 0x36, 0x00, 0x15, 0x00, 
+0x15, 0x04, 0x3b, 0x00, 0x49, 0x00, 0x00, 0x00, 0xf4, 0x5b, 0x02, 0x20, 0x03, 0x5c, 0x02, 0x20, 
+0x58, 0x58, 0x58, 0x58, 0x47, 0x50, 0x73, 0x68, 0x47, 0x50, 0x73, 0x6c, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
+
+int gSizeLowregionArrayGandalf = sizeof(tps6598x_lowregion_array_gandalf);
diff --git a/drivers/usb/typec/tps65994.c b/drivers/usb/typec/tps65994.c
new file mode 100644
index 000000000000..68fd946e5a08
--- /dev/null
+++ b/drivers/usb/typec/tps65994.c
@@ -0,0 +1,1222 @@
+
+/*
+ * Driver for TI TPS65994 USB Power Delivery controller family
+ */
+
+#include <linux/i2c.h>
+#include <linux/acpi.h>
+#include <linux/device.h>
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/fs.h>
+#include <linux/power_supply.h>
+#include <linux/interrupt.h>
+#include <linux/delay.h>
+#include <linux/usb/typec_dp.h>
+#include <linux/usb/typec.h>
+#include <linux/usb/role.h>
+
+/* Register offsets */
+#define TPS_REG_VID			0x00
+#define TPS_REG_MODE			0x03
+#define TPS_REG_CMD1			0x08
+#define TPS_REG_DATA1			0x09
+#define TPS_REG_DATA2			0x11
+#define TPS_REG_INT_EVENT1		0x14
+#define TPS_REG_INT_EVENT2		0x15
+#define TPS_REG_INT_MASK1		0x16
+#define TPS_REG_INT_MASK2		0x17
+#define TPS_REG_INT_CLEAR1		0x18
+#define TPS_REG_INT_CLEAR2		0x19
+#define TPS_REG_STATUS			0x1a
+#define TPS_REG_DISCOVERED_SVIDS	0x21
+#define TPS_REG_SYSTEM_CONF		0x28
+#define TPS_REG_CTRL_CONF		0x29
+#define TPS_REG_BOOT_STATUS		0x2d
+#define TPS_REG_BUILD_DESC		0x2e
+#define TPS_REG_DEVICE_INFO		0x2f
+#define TPS_REG_POWER_STATUS		0x3f
+#define TPS_REG_RX_IDENTITY_SOP 	0x48
+#define TPS_REG_USER_VID_CONF		0x4a
+#define TPS_REG_DP_SID_STATUS		0x58
+#define TPS_REG_GPIO_CONFIG		0x5c
+#define TPS_REG_I2CMASTER_CONF		0x64
+#define TPS_REG_EVENT_CONFIG		0x6c
+#define TPS_REG_TX_BCDB 		0x7d
+
+/* TPS_REG_INT_* bits */
+#define TPS_REG_INT_PLUG_EVENT		BIT(3)
+
+#define TPS_FIELD_GET(_mask, _reg) ((typeof(_mask))(((_reg) & (_mask)) >> __bf_shf(_mask)))
+
+/* TPS_REG_STATUS bits */
+#define TPS_STATUS_PLUG_PRESENT		BIT(0)
+#define TPS_STATUS_ORIENTATION		BIT(4)
+#define TPS_STATUS_PORTROLE(s)		(!!((s) & BIT(5)))
+#define TPS_STATUS_DATAROLE(s)		(!!((s) & BIT(6)))
+#define TPS_STATUS_VCONN(s)		(!!((s) & BIT(7)))
+
+/* TPS_REG_SYSTEM_CONF bits */
+#define TPS_SYSCONF_PORTINFO(c)		((c) & 7)
+
+enum {
+	TPS_PORTINFO_SINK,
+	TPS_PORTINFO_SOURCE,
+	TPS_PORTINFO_DRP,
+};
+
+/* TPS_REG_POWER_STATUS bits */
+#define TPS_POWER_STATUS_CONNECTION(x)  TPS_FIELD_GET(BIT(0), (x))
+#define TPS_POWER_STATUS_SOURCESINK(x)  TPS_FIELD_GET(BIT(1), (x))
+#define TPS_POWER_STATUS_BC12_DET(x)    TPS_FIELD_GET(BIT(2), (x))
+
+#define TPS_POWER_STATUS_TYPEC_CURRENT_MASK GENMASK(3, 2)
+#define TPS_POWER_STATUS_PWROPMODE(p)	TPS_FIELD_GET(TPS_POWER_STATUS_TYPEC_CURRENT_MASK, (p))
+
+/* external EEPROM */
+#define LOW_REGION_START		0x0
+#define LOW_APP_CONFIG_OFFSET		0x3FC
+#define LOW_REGION_ADDR			0x800
+#define HIGH_REGION_START		0x400
+#define HIGH_APP_CONFIG_OFFSET		0x7FC
+#define HIGH_REGION_ADDR		0x4400
+
+/* patch source */
+#define SOURCE_INTERNAL		0x0
+#define SOURCE_EXTERNAL		0x1
+
+static char patch_path[64];
+
+extern int gSizeLowregionArrayGandalf;
+extern const char tps6598x_lowregion_array_gandalf[];
+
+/* TPS_REG_RX_IDENTITY_SOP */
+struct tps65994_rx_identity_reg {
+	u8 status;
+	struct usb_pd_identity identity;
+} __packed;
+
+/* Standard Task return codes */
+#define TPS_TASK_TIMEOUT		1
+#define TPS_TASK_REJECTED		3
+
+enum {
+	TPS_MODE_APP,
+	TPS_MODE_BOOT,
+	TPS_MODE_PTCH,
+	TPS_MODE_BIST,
+	TPS_MODE_DISC,
+};
+
+static const char *const modes[] = {
+	[TPS_MODE_APP]	= "APP ",
+	[TPS_MODE_BOOT]	= "BOOT",
+	[TPS_MODE_PTCH]	= "PTCH",
+	[TPS_MODE_BIST]	= "BIST",
+	[TPS_MODE_DISC]	= "DISC",
+};
+
+struct tps65994_reg {
+	u8 reg;
+	u8 len;
+};
+
+/* create this table for registers length over 32 bytes */
+/* default using i2c block read, but we cannot use block */
+/* read if length over 32 bytes. */
+static const struct tps65994_reg tps65994_reg_table[] = {
+	{TPS_REG_DATA1, 		64},
+	{TPS_REG_DATA2, 		64},
+	{TPS_REG_DISCOVERED_SVIDS,	33},
+	{TPS_REG_BUILD_DESC,		49},
+	{TPS_REG_DEVICE_INFO,		40},
+	{TPS_REG_USER_VID_CONF,		63},
+	{TPS_REG_DP_SID_STATUS,		37},
+	{TPS_REG_GPIO_CONFIG,		49},
+	{TPS_REG_EVENT_CONFIG,		60},
+	{TPS_REG_TX_BCDB,		36},
+};
+
+/* Unrecognized commands will be replaced with "!CMD" */
+#define INVALID_CMD(_cmd_)		(_cmd_ == 0x444d4321)
+
+struct tps65994 {
+	struct device *dev;
+	struct i2c_client *i2c_client;
+	struct mutex lock; /* device lock */
+
+	struct typec_port *port;
+	struct typec_partner *partner;
+	struct usb_pd_identity partner_identity;
+	struct usb_role_switch *role_sw;
+	struct typec_capability typec_cap;
+
+	struct power_supply *psy;
+	struct power_supply_desc psy_desc;
+	enum power_supply_usb_type usb_type;
+
+	unsigned char reg_addr;
+	unsigned char DP_i2c_addr;
+	unsigned char DP_reg_addr;
+};
+
+static enum power_supply_property tps65994_psy_props[] = {
+	POWER_SUPPLY_PROP_USB_TYPE,
+	POWER_SUPPLY_PROP_ONLINE,
+};
+
+static enum power_supply_usb_type tps65994_psy_usb_types[] = {
+	POWER_SUPPLY_USB_TYPE_C,
+	POWER_SUPPLY_USB_TYPE_PD,
+};
+
+static const char *tps65994_psy_name_prefix = "tps65994-source-psy-";
+
+/*
+ * Max data bytes for Data1, Data2, and other registers. See ch 1.3.2:
+ * https://www.ti.com/lit/ug/slvuan1a/slvuan1a.pdf
+ */
+#define TPS_MAX_LEN	64
+
+static int
+tps65994_i2c_read(struct i2c_client *client, u8 reg, u8 *val, int *len)
+{
+	int ret, i;
+	struct i2c_msg msgs[2];
+	char data[TPS_MAX_LEN + 1] = {};
+	bool block_read = true;
+	int table_size = sizeof(tps65994_reg_table)/sizeof(struct tps65994_reg);
+	int reg_len = 0;
+
+	for (i=0;i<table_size;i++) {
+		if (reg == tps65994_reg_table[i].reg) {
+			reg_len = tps65994_reg_table[i].len;
+			block_read = false;
+		}
+	}
+
+	msgs[0].addr = client->addr;
+	msgs[0].flags = 0;
+	msgs[0].buf = &reg;
+	msgs[0].len = 1;
+
+	msgs[1].addr = client->addr;
+	msgs[1].flags = I2C_M_RD;
+	if (block_read)
+		msgs[1].flags |= I2C_M_RECV_LEN;
+	msgs[1].buf = data;
+	msgs[1].len = block_read ? 1 : reg_len + 1;
+
+	ret = i2c_transfer(client->adapter, msgs, 2);
+	if (ret < 0) {
+		dev_err(&client->dev, "i2c_transfer failed, ret=%d
", ret);
+		goto err;
+	}
+
+	if (!block_read && (data[0] != reg_len))
+		goto err;
+
+	memcpy(val, &data[1], data[0]);
+	if (len)
+		*len = data[0];
+
+	return 0;
+
+err:
+	dev_err(&client->dev, "Failed reading register 0x%02x!
", reg);
+	return ret;
+}
+
+static int tps65994_i2c_write(struct i2c_client *client, u8 reg,
+				const void *val, size_t len)
+{
+	int ret;
+	struct i2c_msg msg;
+	char data[TPS_MAX_LEN+2] = {};
+
+	// send everything in same message
+	data[0] = reg;
+	data[1] = len;
+	memcpy(&data[2], val, len);
+	msg.addr = client->addr;
+	msg.flags = 0;
+	msg.buf = data;
+	msg.len = len+2;
+	ret = i2c_transfer(client->adapter, &msg, 1);
+
+	usleep_range(100, 110);
+
+	if (ret < 0) {
+		dev_err(&client->dev, "Failed writing register 0x%02x!
", reg);
+		return ret;
+	}
+	return 0;
+}
+
+static int tps65994_read_partner_identity(struct tps65994 *tps)
+{
+	struct tps65994_rx_identity_reg id;
+	int ret;
+
+	ret = tps65994_i2c_read(tps->i2c_client, TPS_REG_RX_IDENTITY_SOP,
+				&id, NULL);
+	if (ret)
+		return ret;
+
+	tps->partner_identity = id.identity;
+
+	return 0;
+}
+
+static void tps65994_set_data_role(struct tps65994 *tps,
+				   enum typec_data_role role, bool connected)
+{
+	enum usb_role role_val;
+
+	if (role == TYPEC_HOST)
+		role_val = USB_ROLE_HOST;
+	else
+		role_val = USB_ROLE_DEVICE;
+
+	if (!connected)
+		role_val = USB_ROLE_NONE;
+
+	usb_role_switch_set_role(tps->role_sw, role_val);
+	typec_set_data_role(tps->port, role);
+}
+
+static int tps65994_connect(struct tps65994 *tps, u32 status)
+{
+	struct typec_partner_desc desc;
+	enum typec_pwr_opmode mode;
+	u16 pwr_status;
+	int ret;
+
+	if (tps->partner)
+		return 0;
+
+	ret = tps65994_i2c_read(tps->i2c_client, TPS_REG_POWER_STATUS,
+				&pwr_status, NULL);
+	if (ret)
+		return ret;
+
+	mode = TPS_POWER_STATUS_PWROPMODE(pwr_status);
+
+	desc.usb_pd = mode == TYPEC_PWR_MODE_PD;
+	desc.accessory = TYPEC_ACCESSORY_NONE; /* XXX: handle accessories */
+	desc.identity = NULL;
+
+	if (desc.usb_pd) {
+		ret = tps65994_read_partner_identity(tps);
+		if (ret)
+			return ret;
+		desc.identity = &tps->partner_identity;
+	}
+
+	typec_set_pwr_opmode(tps->port, mode);
+	typec_set_pwr_role(tps->port, TPS_STATUS_PORTROLE(status));
+	typec_set_vconn_role(tps->port, TPS_STATUS_VCONN(status));
+	tps65994_set_data_role(tps, TPS_STATUS_DATAROLE(status), true);
+
+	tps->partner = typec_register_partner(tps->port, &desc);
+	if (IS_ERR(tps->partner))
+		return PTR_ERR(tps->partner);
+
+	if (desc.identity)
+		typec_partner_set_identity(tps->partner);
+
+	power_supply_changed(tps->psy);
+
+	return 0;
+}
+
+static void tps65994_disconnect(struct tps65994 *tps, u32 status)
+{
+	if (!IS_ERR(tps->partner))
+		typec_unregister_partner(tps->partner);
+	tps->partner = NULL;
+	typec_set_pwr_opmode(tps->port, TYPEC_PWR_MODE_USB);
+	typec_set_pwr_role(tps->port, TPS_STATUS_PORTROLE(status));
+	typec_set_vconn_role(tps->port, TPS_STATUS_VCONN(status));
+	tps65994_set_data_role(tps, TPS_STATUS_DATAROLE(status), false);
+
+	power_supply_changed(tps->psy);
+}
+
+static int tps65994_exec_cmd(struct tps65994 *tps, const char *cmd,
+			     size_t in_len, u8 *in_data,
+			     size_t out_len, u8 *out_data)
+{
+	struct i2c_client *client = tps->i2c_client;
+	unsigned long timeout;
+	u32 val;
+	int ret;
+
+	if (in_len) {
+		ret = tps65994_i2c_write(client, TPS_REG_DATA1,
+					 in_data, in_len);
+		if (ret)
+			return ret;
+	}
+
+	ret = tps65994_i2c_write(client, TPS_REG_CMD1, cmd, 4);
+	if (ret < 0)
+		return ret;
+
+	/* set timeout as 2s */
+	timeout = jiffies + msecs_to_jiffies(2000);
+	do {
+		ret = tps65994_i2c_read(client, TPS_REG_CMD1, &val, NULL);
+		if (ret)
+			return ret;
+		if (INVALID_CMD(val))
+			return -EINVAL;
+		if (time_is_before_jiffies(timeout))
+			return -ETIMEDOUT;
+
+		/* busy, delay 10ms */
+		usleep_range(10000, 11000);
+	} while (val);
+
+	if (out_len) {
+		ret = tps65994_i2c_read(client, TPS_REG_DATA1,
+					out_data, NULL);
+		if (ret)
+			return ret;
+		val = out_data[0];
+	}
+
+	switch (val) {
+	case TPS_TASK_TIMEOUT:
+		return -ETIMEDOUT;
+	case TPS_TASK_REJECTED:
+		return -EPERM;
+	default:
+		break;
+	}
+
+	return 0;
+}
+
+static int tps65994_dr_set(struct typec_port *port, enum typec_data_role role)
+{
+	const char *cmd = (role == TYPEC_DEVICE) ? "SWUF" : "SWDF";
+	struct tps65994 *tps = typec_get_drvdata(port);
+	u8 status[5];
+	int ret;
+
+	mutex_lock(&tps->lock);
+
+	ret = tps65994_exec_cmd(tps, cmd, 0, NULL, 0, NULL);
+	if (ret)
+		goto out_unlock;
+
+	ret = tps65994_i2c_read(tps->i2c_client, TPS_REG_STATUS,
+				status, NULL);
+	if (ret)
+		return ret;
+
+	if (role != TPS_STATUS_DATAROLE(status[0])) {
+		ret = -EPROTO;
+		goto out_unlock;
+	}
+
+	tps65994_set_data_role(tps, role, true);
+
+out_unlock:
+	mutex_unlock(&tps->lock);
+
+	return ret;
+}
+
+static int tps65994_pr_set(struct typec_port *port, enum typec_role role)
+{
+	const char *cmd = (role == TYPEC_SINK) ? "SWSk" : "SWSr";
+	struct tps65994 *tps = typec_get_drvdata(port);
+	u8 status[5];
+	int ret;
+
+	mutex_lock(&tps->lock);
+
+	ret = tps65994_exec_cmd(tps, cmd, 0, NULL, 0, NULL);
+	if (ret)
+		goto out_unlock;
+
+	ret = tps65994_i2c_read(tps->i2c_client, TPS_REG_STATUS,
+				status, NULL);
+	if (ret)
+		return ret;
+
+	if (role != TPS_STATUS_PORTROLE(status[0])) {
+		ret = -EPROTO;
+		goto out_unlock;
+	}
+
+	typec_set_pwr_role(tps->port, role);
+
+out_unlock:
+	mutex_unlock(&tps->lock);
+
+	return ret;
+}
+
+static const struct typec_operations tps65994_ops = {
+	.dr_set = tps65994_dr_set,
+	.pr_set = tps65994_pr_set,
+};
+
+/*
+ *	write patch through I2C_EC to tps65994
+ */
+static int tps65994_load_patch(struct tps65994 *tps)
+{
+	struct i2c_client *client = tps->i2c_client;
+	struct i2c_msg msg;
+	const char *cmd_start = "PBMs";
+	const char *cmd_complete = "PBMc";
+	const char *cmd_end = "PBMe";
+	char out_data[64] = {};
+	char in_data[64] = {};
+	char mode[5] = {};
+	int ret;
+	u32 index, retry_cnt;
+	char *ptr;
+
+	mutex_lock(&tps->lock);
+
+	memset(in_data, 0, sizeof(in_data));
+	in_data[0] = gSizeLowregionArrayGandalf & 0xff;
+	in_data[1] = (gSizeLowregionArrayGandalf >> 8) & 0xff;
+	in_data[2] = (gSizeLowregionArrayGandalf >> 16) & 0xff;
+	in_data[3] = (gSizeLowregionArrayGandalf >> 24) & 0xff;
+	in_data[4] = 0x0f;
+	in_data[5] = 0x32;
+	ret = tps65994_exec_cmd(tps, cmd_start, 6, in_data, 64, out_data);
+	if (ret || (out_data[0] != 0)) {
+		dev_err(&client->dev, "failed to send cmd_start
");
+		goto out_unlock;
+	}
+
+	/* write patch through I2C_EC */
+	index = 0;
+	ptr = tps6598x_lowregion_array_gandalf;
+	msg.addr = 0x0f;
+	msg.flags = 0;
+	msg.buf = ptr;
+	msg.len = gSizeLowregionArrayGandalf;
+
+	ret = i2c_transfer(client->adapter, &msg, 1);
+        if (ret < 0) {
+		dev_err(&client->dev, "send patch error
");
+		tps65994_exec_cmd(tps, cmd_end, 0, NULL, 64, out_data);
+		ret = -EAGAIN;
+		goto out_unlock;
+	}
+
+	usleep_range(5000, 6000);
+	// load patch complete, send PBMc
+	ret = tps65994_exec_cmd(tps, cmd_complete, 0, NULL, 64, out_data);
+	if (ret || (out_data[0] != 0)) {
+		dev_err(&client->dev, "failed to send cmd_complete
");
+		goto out_unlock;
+	}
+
+	// check PatchLoaded bit
+	retry_cnt = 0;
+	while (1) {
+		ret = tps65994_i2c_read(client, TPS_REG_INT_EVENT1, out_data, NULL);
+		if (ret) {
+			dev_err(&client->dev, "failed to read INT_EVENT1
");
+			goto out_unlock;
+		}
+		if (!(out_data[10] & 0x1)) {
+			usleep_range(10000, 11000);
+			if (retry_cnt++ > 100) {
+				dev_err(&client->dev, "check PatchLoaded bit INT_EVENT1 failed
");
+				ret = -EAGAIN;
+				goto out_unlock;
+			}
+		} else
+			break;
+	}
+
+	// check mode
+	retry_cnt = 0;
+	while (1) {
+		usleep_range(10000, 11000);
+		ret = tps65994_i2c_read(tps->i2c_client, TPS_REG_MODE,
+					mode, NULL);
+		if (ret)
+			return ret;
+
+		/* check if mode is 'APP ' */
+		if (!strncmp(mode, modes[TPS_MODE_APP], 4))
+			break;
+		if (retry_cnt++ > 100) {
+			dev_err(&client->dev, "check mode failed
");
+			ret = -EAGAIN;
+			break;
+		}
+	}
+
+out_unlock:
+	mutex_unlock(&tps->lock);
+
+	return ret;
+}
+
+static int tps65994_write_region(struct tps65994 *tps, size_t region, size_t value)
+{
+	int ret;
+	char out_data[64] = {};
+	char in_data[64] = {};
+	const char *cmd_flad = "FLad";
+	const char *cmd_flrd = "FLrd";
+	const char *cmd_flwd = "FLwd";
+
+	memset(in_data, 0, sizeof(in_data));
+
+	in_data[0] = region & 0xff;
+	in_data[1] = (region >> 8) & 0xff;
+	in_data[2] = (region >> 16) & 0xff;
+	in_data[3] = (region >> 24) & 0xff;
+	ret = tps65994_exec_cmd(tps, cmd_flad, 4, in_data, 64, out_data);
+	if (ret || (out_data[0] != 0))
+		return ret ? ret : -1;
+
+	in_data[0] = value & 0xff;
+	in_data[1] = (value >> 8) & 0xff;
+	in_data[2] = (value >> 16) & 0xff;
+	in_data[3] = (value >> 24) & 0xff;
+	ret = tps65994_exec_cmd(tps, cmd_flwd, 4, in_data, 64, out_data);
+	if (ret || (out_data[0] != 0))
+		return ret ? ret : -1;
+
+	in_data[0] = region & 0xff;
+	in_data[1] = (region >> 8) & 0xff;
+	in_data[2] = (region >> 16) & 0xff;
+	in_data[3] = (region >> 24) & 0xff;
+	ret = tps65994_exec_cmd(tps, cmd_flrd, 4, in_data, 64, out_data);
+	if (ret)
+		return ret ? ret : -1;
+
+	// compare value and out_data
+	if ((out_data[0] ^ (value & 0xff)) || (out_data[1] ^ ((value >> 8) & 0xff)) ||
+	    (out_data[2] ^ ((value >> 16) & 0xff)) || (out_data[3] ^ ((value >> 24) & 0xff)))
+	{
+		return -1;
+	}
+
+	return 0;
+}
+
+/*
+ *	write patch through I2C3M to tps65994 external EEPROM
+ *	region: 0: low region, 1: high region
+ */
+static int tps65994_write_eeprom(struct tps65994 *tps, int region, int source)
+{
+	const char *cmd_flad = "FLad";
+	const char *cmd_flwd = "FLwd";
+	const char *cmd_flvy = "FLvy";
+	const char *cmd_reset = "GAID";
+	char out_data[64] = {};
+	char in_data[64] = {};
+	int ret;
+	size_t index, file_size, txlen;
+	char *ptr;
+	u32 region_ptr = region ? HIGH_REGION_START : LOW_REGION_START;
+	u32 region_addr = region ? HIGH_REGION_ADDR : LOW_REGION_ADDR;
+	u32 app_conf_offset = region ? HIGH_APP_CONFIG_OFFSET : LOW_APP_CONFIG_OFFSET;
+	struct file *file;
+	loff_t pos = 0;
+	ssize_t bytes;
+
+	dev_info(tps->dev, "starting PD EEPROM update");
+	mutex_lock(&tps->lock);
+
+	if (source == SOURCE_INTERNAL) {
+		ptr = tps6598x_lowregion_array_gandalf;
+		file_size = gSizeLowregionArrayGandalf;
+	} else {
+		file = filp_open(patch_path, O_RDONLY, 0);
+		if (IS_ERR(file)) {
+			dev_err(tps->dev, "Unable to open file: %s", patch_path);
+			ret = -ENOENT;
+			goto out_unlock;
+		}
+		file_size = file->f_inode->i_size;
+	}
+
+	dev_info(tps->dev, "erasing region pointer");
+	/* erase region pointer */
+	ret = tps65994_write_region(tps, region_ptr, 0);
+	if (ret) {
+		dev_err(tps->dev, "failed to clear EEPROM region
");
+		goto out_unlock;
+	}
+
+	dev_info(tps->dev, "set region to program");
+	/* write EEPROM region to program*/
+	in_data[0] = region_addr & 0xff;
+	in_data[1] = (region_addr >> 8) & 0xff;
+	in_data[2] = (region_addr >> 16) & 0xff;
+	in_data[3] = (region_addr >> 24) & 0xff;
+	ret = tps65994_exec_cmd(tps, cmd_flad, 4, in_data, 64, out_data);
+	if (ret || (out_data[0] != 0)) {
+		dev_err(tps->dev, "failed to set EEPROM region
");
+		goto out_unlock;
+	}
+
+	dev_info(tps->dev, "programming EEPROM...");
+	/* flash EEPROM */
+	index = 0;
+	while (1) {
+		txlen = ((file_size - index) > 32) ? 32 : (file_size - index);
+		if (txlen == 0)
+			break;
+
+		if (source == SOURCE_EXTERNAL) {
+			bytes = kernel_read(file, in_data, txlen, &pos);
+			if (bytes < 0) {
+				dev_err(tps->dev, "read patch file error");
+				goto out_unlock;
+			}
+		} else
+			memcpy(in_data, ptr + index, txlen);
+
+		ret = tps65994_exec_cmd(tps, cmd_flwd, txlen, in_data, 64, out_data);
+		if (ret || (out_data[0] != 0)) {
+			dev_err(tps->dev, "failed to write EEPROM
");
+			goto out_unlock;
+		}
+
+		if (txlen != 32)
+			break;
+
+		index += 32;
+	}
+
+	dev_info(tps->dev, "verify EEPROM");
+	/* verify EEPROM */
+	in_data[0] = region_addr & 0xff;
+	in_data[1] = (region_addr >> 8) & 0xff;
+	in_data[2] = (region_addr >> 16) & 0xff;
+	in_data[3] = (region_addr >> 24) & 0xff;
+	ret = tps65994_exec_cmd(tps, cmd_flvy, 4, in_data, 64, out_data);
+	if (ret || (out_data[0] != 0)) {
+		dev_err(tps->dev, "failed to verify EEPROM
");
+		goto out_unlock;
+	}
+
+	dev_info(tps->dev, "set new region pointer");
+	/* set new region */
+	ret = tps65994_write_region(tps, region_ptr, region_addr);
+	if (ret) {
+		dev_err(tps->dev, "failed to set EEPROM new region
");
+		goto out_unlock;
+	}
+	dev_info(tps->dev, "set application config offset");
+	ret = tps65994_write_region(tps, app_conf_offset, 0);
+	if (ret) {
+		dev_err(tps->dev, "failed to set EEPROM app config offset
");
+		goto out_unlock;
+	}
+
+	dev_info(tps->dev, "resetting PD...");
+	/* cold reset */
+	ret = tps65994_i2c_write(tps->i2c_client, TPS_REG_CMD1, cmd_reset, 4);
+	if (ret < 0)
+		return ret;
+
+out_unlock:
+	mutex_unlock(&tps->lock);
+
+	return ret;
+}
+
+static int tps65994_check_mode(struct tps65994 *tps)
+{
+	char mode[5] = { };
+	char int_event1[11] = { };
+	char boot_status[5] = { };
+	int ret;
+	int i, retry;
+	struct i2c_client *client = tps->i2c_client;
+
+	ret = tps65994_i2c_read(client, TPS_REG_MODE, mode, NULL);
+	if (ret) {
+		dev_err(&client->dev, "failed to read mode
");
+		return ret;
+	}
+
+	switch (match_string(modes, ARRAY_SIZE(modes), mode)) {
+	case TPS_MODE_APP:
+		return 0;
+	case TPS_MODE_BOOT:
+		dev_warn(tps->dev, "dead-battery condition
");
+		return 0;
+	case TPS_MODE_PTCH:
+		ret = tps65994_i2c_read(client, TPS_REG_INT_EVENT1, int_event1, NULL);
+		if (ret)
+			return ret;
+		if (!(int_event1[10] & 0x2)) {
+			dev_warn(tps->dev, "PTCH mode but PatchLoaded not been raised
");
+			return -1;
+		}
+
+		retry = 0;
+		while (retry < 10) {
+			ret = tps65994_load_patch(tps);
+			if (ret == -EAGAIN)
+				retry++;
+			else
+				break;
+
+			dev_warn(tps->dev, "loading patch failed, retry %d
", retry);
+			msleep(100);
+		}
+
+		if (!ret) {
+			/* check if I2cEepromPresent raise */
+			ret = tps65994_i2c_read(client, TPS_REG_BOOT_STATUS, boot_status, NULL);
+			if (ret)
+				return ret;
+			dev_info(tps->dev, "boot status=");
+			for (i=0;i<5;i++)
+				dev_info(tps->dev, "0x%X ", boot_status[i]);
+			/* write image to EEPROM if it exist, and region 0 invalid */
+			if (boot_status[0] & 0x58) {
+
+				ret = tps65994_write_eeprom(tps, 0, SOURCE_INTERNAL);
+				if (ret)
+					dev_warn(tps->dev, "write image to EEPROM failed
");
+
+				/* check boot status */
+				ret = tps65994_i2c_read(client, TPS_REG_BOOT_STATUS, boot_status, NULL);
+				if (ret)
+					return ret;
+				dev_info(tps->dev, "boot status after program EEPROM=");
+				for (i=0;i<5;i++)
+					dev_info(tps->dev, "0x%X ", boot_status[i]);
+			} else
+				dev_warn(tps->dev, "I2cEepromPresent not been raised
");
+		}
+		return 0;
+	default:
+		dev_err(tps->dev, "controller in unsupported mode \"%s\"
",
+			mode);
+		break;
+	}
+
+	return -ENODEV;
+}
+
+static int tps65994_psy_get_online(struct tps65994 *tps,
+				   union power_supply_propval *val)
+{
+	int ret;
+	u16 pwr_status;
+
+	ret = tps65994_i2c_read(tps->i2c_client, TPS_REG_POWER_STATUS,
+				&pwr_status, NULL);
+	if (ret)
+		return ret;
+
+	if (TPS_POWER_STATUS_CONNECTION(pwr_status) &&
+	    TPS_POWER_STATUS_SOURCESINK(pwr_status)) {
+		val->intval = 1;
+	} else {
+		val->intval = 0;
+	}
+	return 0;
+}
+
+static int tps65994_psy_get_prop(struct power_supply *psy,
+				 enum power_supply_property psp,
+				 union power_supply_propval *val)
+{
+	struct tps65994 *tps = power_supply_get_drvdata(psy);
+	u16 pwr_status;
+	int ret = 0;
+
+	switch (psp) {
+	case POWER_SUPPLY_PROP_USB_TYPE:
+		ret = tps65994_i2c_read(tps->i2c_client, TPS_REG_POWER_STATUS,
+				&pwr_status, NULL);
+		if (ret)
+			return ret;
+		if (TPS_POWER_STATUS_PWROPMODE(pwr_status) == TYPEC_PWR_MODE_PD)
+			val->intval = POWER_SUPPLY_USB_TYPE_PD;
+		else
+			val->intval = POWER_SUPPLY_USB_TYPE_C;
+		break;
+	case POWER_SUPPLY_PROP_ONLINE:
+		ret = tps65994_psy_get_online(tps, val);
+		break;
+	default:
+		ret = -EINVAL;
+		break;
+	}
+
+	return ret;
+}
+
+static int devm_tps6598_psy_register(struct tps65994 *tps)
+{
+	struct power_supply_config psy_cfg = {};
+	const char *port_dev_name = dev_name(tps->dev);
+	char *psy_name;
+
+	psy_cfg.drv_data = tps;
+	psy_cfg.fwnode = dev_fwnode(tps->dev);
+
+	psy_name = devm_kasprintf(tps->dev, GFP_KERNEL, "%s%s", tps65994_psy_name_prefix,
+				  port_dev_name);
+	if (!psy_name)
+		return -ENOMEM;
+
+	tps->psy_desc.name = psy_name;
+	tps->psy_desc.type = POWER_SUPPLY_TYPE_USB;
+	tps->psy_desc.usb_types = tps65994_psy_usb_types;
+	tps->psy_desc.num_usb_types = ARRAY_SIZE(tps65994_psy_usb_types);
+	tps->psy_desc.properties = tps65994_psy_props;
+	tps->psy_desc.num_properties = ARRAY_SIZE(tps65994_psy_props);
+	tps->psy_desc.get_property = tps65994_psy_get_prop;
+
+	tps->usb_type = POWER_SUPPLY_USB_TYPE_C;
+
+	tps->psy = devm_power_supply_register(tps->dev, &tps->psy_desc,
+					       &psy_cfg);
+	return PTR_ERR_OR_ZERO(tps->psy);
+}
+
+static ssize_t pd_reg_store(struct device *dev, struct device_attribute *attr,
+			const char *buf, size_t count)
+{
+	struct tps65994 *tps = dev_get_drvdata(dev);
+	unsigned long reg;
+	char data[TPS_MAX_LEN + 1] = {};
+	char show[(TPS_MAX_LEN * 2) + 2] = {};
+	char *p;
+	char hex_str[6] = {};
+	int ret, len, i;
+	int buf_index = count - 3;
+
+	memcpy(hex_str, buf, 4);
+	hex_str[4] = '
';
+	ret = kstrtoul(hex_str, 0, &reg);
+	if (ret)
+		goto err_usage;
+
+	mutex_lock(&tps->lock);
+
+	if (count == 5) {
+		ret = tps65994_i2c_read(tps->i2c_client, (unsigned char)reg,
+					data, &len);
+		if (ret) {
+			dev_err(dev, "Failed reading register 0x%02X, ret=%d
", reg, ret);
+			goto out_unlock;
+		}
+		show[0] = '0';
+		show[1] = 'x';
+		p = show + 2;
+		for (i=0;i<len;i++)
+			sprintf(p + (i*2), "%02X", data[len-i-1]);
+		show[(i + 1) * 2] = '
';
+		dev_info(dev, "reg 0x%02X: %s", (unsigned char)reg, show);
+	} else {
+		len = count - 8;
+		if (len <= 0) {
+			ret = -EPERM;
+			goto err_usage;
+		}
+		len /= 2;
+		for (i=0;i<len;i++) {
+			memcpy(hex_str, &buf[buf_index], 2);
+			sscanf(hex_str, "%02X", &data[i]);
+			buf_index -= 2;
+		}
+		ret = tps65994_i2c_write(tps->i2c_client, (unsigned char)reg, data, len);
+		if (ret) {
+			dev_err(dev, "Failed writing register 0x%02X, ret=%d
", reg, ret);
+			goto out_unlock;
+		}
+	}
+
+	mutex_unlock(&tps->lock);
+	return count;
+
+err_usage:
+	dev_info(dev, "usage: REG [VALUE]");
+	dev_info(dev, "echo 0x00 to read register 0x00");
+	dev_info(dev, "echo 0x00 0x123456 to write 0x123456 to register 0x00");
+out_unlock:
+	mutex_unlock(&tps->lock);
+	return ret;
+}
+static DEVICE_ATTR_WO(pd_reg);
+
+static ssize_t dp_reg_store(struct device *dev, struct device_attribute *attr,
+			const char *buf, size_t count)
+{
+	struct tps65994 *tps = dev_get_drvdata(dev);
+	unsigned long addr;
+	unsigned long reg;
+	unsigned long val;
+	const char *cmd_i2cr = "I2Cr";
+	const char *cmd_i2cw = "I2Cw";
+	char out_data[64] = {};
+	char in_data[8] = {};
+	char hex_str[6] = {};
+	int ret;
+
+	/* i2c address */
+	memcpy(hex_str, buf, 4);
+	hex_str[4] = '
';
+	ret = kstrtoul(hex_str, 0, &addr);
+	if (ret)
+		goto err_usage;
+
+	if (buf[4] != ' ') {
+		ret = -EPERM;
+		goto err_usage;
+	}
+	dev_info(dev, "addr=0x%02X", (unsigned char)addr);
+
+	/* device register */
+	memcpy(hex_str, buf + 5, 4);
+	hex_str[4] = '
';
+	ret = kstrtoul(hex_str, 0, &reg);
+	if (ret)
+		goto err_usage;
+	dev_info(dev, "reg=0x%02X", (unsigned char)reg);
+
+	mutex_lock(&tps->lock);
+
+	if (count == 10) {
+		in_data[0] = addr;
+		in_data[1] = reg;
+		in_data[2] = 1;
+		ret = tps65994_exec_cmd(tps, cmd_i2cr, 3, in_data, 64, out_data);
+		if (ret || (out_data[0] != 0)) {
+			dev_err(dev, "Failed reading register 0x%02x!, ret=%d, out_data[0]=%d
",
+					tps->DP_reg_addr, ret, out_data[0]);
+			goto out_unlock;
+		}
+		mutex_unlock(&tps->lock);
+		return sprintf(buf, "0x%X
", out_data[1]);
+	}
+
+	ret = kstrtoul(buf + 10, 0, &val);
+	if (ret)
+		goto err_usage;
+
+	dev_info(dev, "val=0x%02X", (unsigned char)val);
+	in_data[0] = addr;
+	in_data[1] = 2;
+	in_data[2] = 0;
+	in_data[3] = reg;
+	in_data[4] = val;
+	ret = tps65994_exec_cmd(tps, cmd_i2cw, 5, in_data, 64, out_data);
+	if (ret || (out_data[0] != 0)) {
+		dev_err(dev, "Failed reading register 0x%02x!, ret=%d, out_data[0]=%d
",
+				tps->DP_reg_addr, ret, out_data[0]);
+		goto out_unlock;
+	}
+
+	mutex_unlock(&tps->lock);
+	return count;
+
+err_usage:
+	dev_info(dev, "usage: I2C_ADDR REG [VALUE]");
+	dev_info(dev, "echo 0x0e 0x00 to read register 0x00 at 0x0e");
+	dev_info(dev, "echo 0x0e 0x00 0x123456 to write 0x123456 to register 0x00 at 0x0e");
+out_unlock:
+	mutex_unlock(&tps->lock);
+	return ret;
+}
+static DEVICE_ATTR_WO(dp_reg);
+
+static ssize_t update_patch_store(struct device *dev, struct device_attribute *attr,
+			const char *buf, size_t count)
+{
+	struct tps65994 *tps = dev_get_drvdata(dev);
+	int ret;
+
+	strncpy(patch_path, buf, count-1);
+	ret = tps65994_write_eeprom(tps, 0, SOURCE_EXTERNAL);
+	if (ret) {
+		dev_err(dev, "write image to EEPROM failed
");
+		return ret;
+	}
+
+	return count;
+}
+static DEVICE_ATTR_WO(update_patch);
+
+static struct attribute *tps65994_attrs[] = {
+	&dev_attr_pd_reg.attr,
+	&dev_attr_update_patch.attr,
+	&dev_attr_dp_reg.attr,
+	NULL
+};
+
+static struct attribute_group tps65994_group = {
+	.name = "tps65994",
+	.attrs = tps65994_attrs,
+};
+
+static int tps65994_probe(struct i2c_client *client)
+{
+	struct typec_capability typec_cap = { };
+	struct tps65994 *tps;
+	struct fwnode_handle *fwnode;
+	u8 status[5];
+	u32 conf;
+	int ret;
+
+	tps = devm_kzalloc(&client->dev, sizeof(*tps), GFP_KERNEL);
+	if (!tps)
+		return -ENOMEM;
+
+	mutex_init(&tps->lock);
+	tps->dev = &client->dev;
+
+	if (!i2c_check_functionality(client->adapter, I2C_FUNC_I2C)) {
+		dev_err(&client->dev,
+			"I2C/SMBus block functionality not supported!
");
+		return -ENODEV;
+        }
+
+	tps->i2c_client = client;
+	/* Make sure the controller has application firmware running */
+	ret = tps65994_check_mode(tps);
+	if (ret)
+		return ret;
+
+	ret = tps65994_i2c_read(tps->i2c_client, TPS_REG_STATUS,
+				status, NULL);
+	if (ret)
+		return ret;
+
+	ret = tps65994_i2c_read(tps->i2c_client, TPS_REG_SYSTEM_CONF,
+				&conf, NULL);
+	if (ret)
+		return ret;
+
+	/*
+	 * This fwnode has a "compatible" property, but is never populated as a
+	 * struct device. Instead we simply parse it to read the properties.
+	 * This breaks fw_devlink=on. To maintain backward compatibility
+	 * with existing DT files, we work around this by deleting any
+	 * fwnode_links to/from this fwnode.
+	 */
+	fwnode = device_get_named_child_node(&client->dev, "connector");
+	if (!fwnode)
+		return -ENODEV;
+
+	tps->role_sw = fwnode_usb_role_switch_get(fwnode);
+	if (IS_ERR(tps->role_sw)) {
+		ret = PTR_ERR(tps->role_sw);
+		goto err_fwnode_put;
+	}
+
+	typec_cap.revision = USB_TYPEC_REV_1_2;
+	typec_cap.pd_revision = 0x200;
+	typec_cap.prefer_role = TYPEC_NO_PREFERRED_ROLE;
+	typec_cap.driver_data = tps;
+	typec_cap.ops = &tps65994_ops;
+	typec_cap.fwnode = fwnode;
+
+	switch (TPS_SYSCONF_PORTINFO(conf)) {
+	case TPS_PORTINFO_SINK:
+		typec_cap.type = TYPEC_PORT_SNK;
+		typec_cap.data = TYPEC_PORT_UFP;
+		break;
+	case TPS_PORTINFO_SOURCE:
+		typec_cap.type = TYPEC_PORT_SRC;
+		typec_cap.data = TYPEC_PORT_DFP;
+		break;
+	case TPS_PORTINFO_DRP:
+		typec_cap.data = TYPEC_PORT_DRD;
+		break;
+	default:
+		ret = -ENODEV;
+		goto err_role_put;
+	}
+
+	ret = devm_tps6598_psy_register(tps);
+	if (ret)
+		return ret;
+
+	tps->port = typec_register_port(&client->dev, &typec_cap);
+	if (IS_ERR(tps->port)) {
+		ret = PTR_ERR(tps->port);
+		goto err_role_put;
+	}
+	fwnode_handle_put(fwnode);
+
+	if (status[0] & TPS_STATUS_PLUG_PRESENT) {
+		ret = tps65994_connect(tps, status[0]);
+		if (ret)
+			dev_err(&client->dev, "failed to register partner
");
+	}
+
+	i2c_set_clientdata(client, tps);
+
+	ret = sysfs_create_group(&tps->dev->kobj, &tps65994_group);
+	if (ret) {
+		dev_err(&client->dev, "failed to create group in sysfs
");
+		goto err_sysfs;
+	}
+
+	return 0;
+
+err_sysfs:
+	sysfs_remove_group(&tps->dev->kobj, &tps65994_group);
+err_role_put:
+	usb_role_switch_put(tps->role_sw);
+err_fwnode_put:
+	fwnode_handle_put(fwnode);
+
+	return ret;
+}
+
+static int tps65994_remove(struct i2c_client *client)
+{
+	struct tps65994 *tps = i2c_get_clientdata(client);
+
+	tps65994_disconnect(tps, 0);
+	typec_unregister_port(tps->port);
+	usb_role_switch_put(tps->role_sw);
+
+	return 0;
+}
+
+static const struct of_device_id tps65994_of_match[] = {
+	{ .compatible = "ti,tps65994", },
+	{}
+};
+MODULE_DEVICE_TABLE(of, tps65994_of_match);
+
+static const struct i2c_device_id tps65994_id[] = {
+	{ "tps65994" },
+	{ }
+};
+MODULE_DEVICE_TABLE(i2c, tps65994_id);
+
+static struct i2c_driver tps65994_i2c_driver = {
+	.driver = {
+		.name = "tps65994",
+		.of_match_table = tps65994_of_match,
+	},
+	.probe_new = tps65994_probe,
+	.remove = tps65994_remove,
+	.id_table = tps65994_id,
+};
+module_i2c_driver(tps65994_i2c_driver);
+
+MODULE_AUTHOR("Andrew Su <Andrew.Su@idtechproducts.com>");
+MODULE_LICENSE("GPL v2");
+MODULE_DESCRIPTION("TI TPS65994 USB Power Delivery Controller Driver");
