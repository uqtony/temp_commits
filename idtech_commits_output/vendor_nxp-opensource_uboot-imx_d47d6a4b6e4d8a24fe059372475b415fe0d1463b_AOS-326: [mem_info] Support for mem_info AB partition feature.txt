d47d6a4b6e max.yang 2020-09-16

AOS-326: [mem_info] Support for mem_info AB partition feature

  1. The ab info is read from misc partition
  2. Using #1 to read dram data from mem_info_a or mem_info_b
  3. Default behavior after flashing should use slot a
  4. Add log to print slot info

Change-Id: I4e9eaed38666041b70a3ed1240076470990909bf

diff --git a/drivers/idt/multiddr/Makefile b/drivers/idt/multiddr/Makefile
index 6d36b99502..989d62d61b 100644
--- a/drivers/idt/multiddr/Makefile
+++ b/drivers/idt/multiddr/Makefile
@@ -2,6 +2,8 @@
 ## Copyright 2020 IDTech
 #
 
+ccflags-y += -I./lib
+
 ifdef CONFIG_IDT_MULTIPLE_DDR
 obj-$(CONFIG_IDT_MULTIPLE_DDR) += idt_ddr_select.o idt_ddr_size.o
 endif
diff --git a/drivers/idt/multiddr/idt_ddr_select.c b/drivers/idt/multiddr/idt_ddr_select.c
index 50d377b2da..eb23e7b356 100644
--- a/drivers/idt/multiddr/idt_ddr_select.c
+++ b/drivers/idt/multiddr/idt_ddr_select.c
@@ -3,6 +3,7 @@
 #include <errno.h>
 #include <mmc.h>
 #include <idt_ddr_select.h>
+#include <fsl_avb.h>
 
 /*
  *  !!! IMPORTANT !!!
@@ -62,7 +63,8 @@ struct blk_desc* init_mmc_blk(void)
 	return mmc_get_blk_desc(mmc);
 }
 
-void idt_read_block(struct blk_desc * dev_desc, unsigned int start_off, struct idt_dram_hdr* hdr, char* buf) {
+void idt_read_block(struct blk_desc *dev_desc, unsigned int start_off, struct idt_dram_hdr *hdr, char *buf)
+{
 	int carry  = (((hdr->ary_size) * sizeof(struct dram_cfg_param)) % IDT_BLOCK_SIZE) == 0 ? 0 : 1;
 	int blocks =  ((hdr->ary_size) * sizeof(struct dram_cfg_param)  / IDT_BLOCK_SIZE) + carry;
 #if _DEBUG_IDT_DDR
@@ -73,14 +75,37 @@ void idt_read_block(struct blk_desc * dev_desc, unsigned int start_off, struct i
 	}
 }
 
-unsigned int read_mem_root_block(struct blk_desc * dev_desc) {
+/* read misc partition for AB data and return according mem_info offset */
+unsigned int get_misc_ab_info(struct blk_desc *dev_desc)
+{
+	AvbABData *p_abdata = NULL;
+	char misc_ab_info[IDT_BLOCK_SIZE] = "";
+	blk_dread(dev_desc, MISC_ABINFO_BASE, 1, (void *) misc_ab_info);
+	p_abdata = (struct AvbABData *) misc_ab_info;
+
+	if (memcmp(p_abdata->magic, AVB_AB_MAGIC, AVB_AB_MAGIC_LEN) == 0 &&
+			p_abdata->slots[1].priority > p_abdata->slots[0].priority) {
+		printf("using slot b
");
+		return MEM_INFO_B_BASE;
+	} else {
+#if _DEBUG_IDT_DDR
+		printf("IDT: slot A priority: %d, slot B priority: %d
", p_abdata->slots[0].priority, p_abdata->slots[1].priority);
+#endif
+		printf("using slot a
");
+		return MEM_INFO_A_BASE;
+	}
+}
+
+/* take mem_info start offset, read header and compare with board_info, reture dram data offest*/
+unsigned int read_mem_root_block(struct blk_desc *dev_desc, unsigned int root_hdr_off)
+{
 	struct idt_mem_root* p_root = NULL;
 	struct BoardInfoData* p_bdinfo = NULL;
 	char bdinfo[IDT_BLOCK_SIZE] = "";
 	char root_buf[IDT_BLOCK_SIZE*2] = "";
 	blk_dread(dev_desc, BDINFO_BLOCK_BASE, 1, (void *) bdinfo);
-	blk_dread(dev_desc, ROOT_HDR_BLOCK_BASE, 1, (void *) root_buf);
-	blk_dread(dev_desc, ROOT_HDR_BLOCK_BASE + 1, 1, (void *) root_buf + IDT_BLOCK_SIZE);
+	blk_dread(dev_desc, root_hdr_off, 1, (void *) root_buf);
+	blk_dread(dev_desc, root_hdr_off + 1, 1, (void *) root_buf + IDT_BLOCK_SIZE);
 	p_root = (struct idt_mem_root*)root_buf;
 	p_bdinfo = (struct BoardInfoData*)bdinfo;
 
@@ -137,8 +162,9 @@ void idt_spl_dram_init(void)
 	memcpy((void*)hdr_buf, (void*)UUU_MEM_OBJ_ADDR, IDT_BLOCK_SIZE);
 #else
 	struct blk_desc *dev_desc = init_mmc_blk();
-	unsigned dram_data_offset = read_mem_root_block(dev_desc);
-	unsigned int hdr_offset = ROOT_HDR_BLOCK_BASE + dram_data_offset;
+	unsigned int mem_ab_offset = get_misc_ab_info(dev_desc);
+	unsigned int dram_data_offset = read_mem_root_block(dev_desc, mem_ab_offset);
+	unsigned int hdr_offset = mem_ab_offset + dram_data_offset;
 	blk_dread(dev_desc, hdr_offset, 1, (void*) hdr_buf);
 #endif
 
diff --git a/include/idt_ddr_select.h b/include/idt_ddr_select.h
index b049d787fc..9f126b33dc 100644
--- a/include/idt_ddr_select.h
+++ b/include/idt_ddr_select.h
@@ -27,7 +27,9 @@
 
 #define IDT_BLOCK_SIZE  512
 #define BDINFO_BLOCK_BASE 16384   // board_info start from emmc: 8M
-#define ROOT_HDR_BLOCK_BASE 20480 // mem_info start from emmc: 10M
+#define MEM_INFO_A_BASE 20480 // mem_info start from emmc: 10M
+#define MEM_INFO_B_BASE (MEM_INFO_A_BASE + 4096)  // 2M between mem_info_a and mem_info_b
+#define MISC_ABINFO_BASE (28672 + 4)  // ab info is on 2048(4 blocks) offset of misc
 
 struct idt_dram_hdr {
 	unsigned int drate;
