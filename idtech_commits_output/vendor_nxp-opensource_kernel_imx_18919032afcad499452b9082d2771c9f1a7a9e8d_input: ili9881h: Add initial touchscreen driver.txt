18919032afca Sergii Postulga 2020-02-25

input: ili9881h: Add initial touchscreen driver

Signed-off-by: Sergii Postulga <sergii.postulga@idtechproducts.com>
Change-Id: I5afb06d48127e9e76a70e1b76047b8a5bf460421

diff --git a/drivers/input/touchscreen/Kconfig b/drivers/input/touchscreen/Kconfig
index 902ceb889418..6348ca89a858 100644
--- a/drivers/input/touchscreen/Kconfig
+++ b/drivers/input/touchscreen/Kconfig
@@ -441,6 +441,19 @@ config TOUCHSCREEN_ILI210X
 	  To compile this driver as a module, choose M here: the
 	  module will be called ili210x.
 
+config TOUCHSCREEN_ILI9881_I2C
+	tristate "Ilitek ILI9881H based touchscreen"
+	depends on I2C
+	help
+	  Say Y here if you have a ILI9881H based touchscreen
+	  controller. 
+	  Such kind of chipsets can be found in Amazon Kindle Fire
+	  touchscreens.
+
+	  If unsure, say N.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called ILI9881H.
 config TOUCHSCREEN_IPROC
 	tristate "IPROC touch panel driver support"
 	depends on ARCH_BCM_IPROC || COMPILE_TEST
diff --git a/drivers/input/touchscreen/Makefile b/drivers/input/touchscreen/Makefile
index 67e831174dc8..d395bdfeaf59 100644
--- a/drivers/input/touchscreen/Makefile
+++ b/drivers/input/touchscreen/Makefile
@@ -50,6 +50,7 @@ obj-$(CONFIG_TOUCHSCREEN_FUJITSU)	+= fujitsu_ts.o
 obj-$(CONFIG_TOUCHSCREEN_GOODIX)	+= goodix.o
 obj-$(CONFIG_TOUCHSCREEN_HIDEEP)	+= hideep.o
 obj-$(CONFIG_TOUCHSCREEN_ILI210X)	+= ili210x.o
+obj-$(CONFIG_TOUCHSCREEN_ILI9881_I2C)	+= ili/
 obj-$(CONFIG_TOUCHSCREEN_IMX6UL_TSC)	+= imx6ul_tsc.o
 obj-$(CONFIG_TOUCHSCREEN_INEXIO)	+= inexio.o
 obj-$(CONFIG_TOUCHSCREEN_IPROC)		+= bcm_iproc_tsc.o
diff --git a/drivers/input/touchscreen/ili/FW_TDDI_TRUNK_FB.ili b/drivers/input/touchscreen/ili/FW_TDDI_TRUNK_FB.ili
new file mode 100644
index 000000000000..49ecb8dd561c
--- /dev/null
+++ b/drivers/input/touchscreen/ili/FW_TDDI_TRUNK_FB.ili
@@ -0,0 +1,8194 @@
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x02,0x00,0x00,
+0x1F,0x05,0x00,0x00,0x00,0x00,0xFF,0xFF,0x01,0x00,0x00,0x01,0x0F,0xFF,0x01,0x10,0x00,0x01,0x1F,0xFF,0x01,0xE0,0x00,0x01,0xFF,0xFF,0x01,0x20,0x00,0x01,0xAF,0xFF,
+0x48,0x00,0x66,0xD4,0x48,0x00,0x65,0x14,0x48,0x00,0x65,0x32,0x48,0x00,0x65,0x50,
+0x48,0x00,0x65,0x6E,0x48,0x00,0x65,0x8C,0x48,0x00,0x65,0xAA,0x48,0x00,0x65,0xC8,
+0x48,0x00,0x65,0xE6,0x48,0x00,0x66,0x3C,0x48,0x00,0x66,0x3E,0x48,0x00,0x66,0x40,
+0x48,0x00,0x66,0x42,0x48,0x00,0x66,0x44,0x48,0x00,0x66,0x46,0x48,0x00,0x66,0x48,
+0x48,0x00,0x66,0x4A,0x48,0x00,0x66,0x4C,0x48,0x00,0x66,0x4E,0x48,0x00,0x66,0x50,
+0x48,0x00,0x66,0x52,0x48,0x00,0x66,0x54,0x48,0x00,0x66,0x56,0x48,0x00,0x66,0x58,
+0x48,0x00,0x66,0x5A,0x48,0x00,0x66,0x5C,0x48,0x00,0x66,0x5E,0x48,0x00,0x66,0x60,
+0x48,0x00,0x66,0x62,0x48,0x00,0x66,0x64,0x48,0x00,0x66,0x66,0x48,0x00,0x66,0x68,
+0x48,0x00,0x66,0x6A,0x48,0x00,0x66,0x6C,0x48,0x00,0x66,0x6E,0x48,0x00,0x66,0x70,
+0x48,0x00,0x66,0x72,0x48,0x00,0x66,0x75,0x48,0x00,0x66,0x78,0x48,0x00,0x66,0x7B,
+0x48,0x00,0x66,0x7E,0x86,0xCE,0x00,0x00,0x88,0xCE,0x00,0x00,0x9C,0xCE,0x00,0x00,
+0xAE,0xCE,0x00,0x00,0xBC,0xCE,0x00,0x00,0xD4,0xCE,0x00,0x00,0xE2,0xCE,0x00,0x00,
+0x1A,0xCF,0x00,0x00,0x22,0xCF,0x00,0x00,0x38,0xCF,0x00,0x00,0x5C,0xCF,0x00,0x00,
+0xA6,0xCF,0x00,0x00,0xA8,0xCF,0x00,0x00,0xB0,0xCF,0x00,0x00,0xB8,0xCF,0x00,0x00,
+0xC0,0xCF,0x00,0x00,0xFA,0xCF,0x00,0x00,0xFC,0xD0,0x00,0x00,0x90,0xD1,0x00,0x00,
+0xA6,0xD1,0x00,0x00,0xCE,0xD2,0x00,0x00,0xE6,0xD3,0x00,0x00,0x52,0xD4,0x00,0x00,
+0x54,0xD4,0x00,0x00,0x56,0xD4,0x00,0x00,0x58,0xD4,0x00,0x00,0x5A,0xD4,0x00,0x00,
+0x5C,0xD4,0x00,0x00,0x5E,0xD4,0x00,0x00,0x60,0xD4,0x00,0x00,0x62,0xD4,0x00,0x00,
+0x64,0xD4,0x00,0x00,0xE6,0x28,0xE8,0x4C,0x96,0x06,0x46,0x20,0x00,0x81,0x44,0xF0,
+0x01,0x3C,0x38,0x17,0x84,0x00,0x40,0xF0,0xBC,0x00,0xDD,0x0F,0x08,0x16,0x24,0x32,
+0x40,0x4E,0x5C,0x6A,0x40,0x00,0x40,0x08,0x04,0x31,0x00,0x29,0x44,0x1E,0xFF,0xFF,
+0xD5,0x33,0x40,0x00,0x44,0x08,0x04,0x31,0x00,0x29,0x44,0x1D,0xFF,0xFF,0xD5,0x2C,
+0x40,0x00,0x48,0x08,0x04,0x31,0x00,0x29,0x44,0x1B,0xFF,0xFF,0xD5,0x25,0x40,0x00,
+0x4C,0x08,0x04,0x31,0x00,0x29,0x46,0x1F,0xFF,0x7F,0xD5,0x1C,0x40,0x00,0x50,0x08,
+0x04,0x31,0x00,0x29,0x46,0x1F,0xFE,0xFF,0xD5,0x15,0x40,0x00,0x54,0x08,0x04,0x31,
+0x00,0x29,0x46,0x1F,0xFD,0xFF,0xD5,0x0E,0x40,0x00,0x58,0x08,0x04,0x31,0x00,0x29,
+0x46,0x1F,0xFB,0xFF,0xD5,0x07,0x40,0x00,0x5C,0x08,0x04,0x31,0x00,0x29,0x46,0x1F,
+0xF7,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x29,0xDD,0x9E,
+0x44,0x24,0x80,0x90,0x96,0x06,0xB4,0x62,0x40,0x10,0x20,0x08,0x44,0x0F,0xFE,0xFF,
+0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x46,0x10,0x00,0x82,0xA0,0x0A,0x58,0x00,
+0x00,0x01,0xA8,0x0A,0xDD,0x9E,0x46,0x20,0x00,0x82,0x96,0x06,0xA0,0xD5,0x40,0x10,
+0x40,0x08,0x44,0x0E,0xFF,0xFF,0xFE,0x1E,0xFE,0x0F,0xA8,0x15,0xDD,0x9E,0x46,0x00,
+0x00,0x82,0xA0,0x05,0x92,0x10,0x96,0x06,0xDD,0x9E,0xFC,0x40,0x46,0x60,0x00,0x81,
+0x96,0x2F,0x40,0x90,0x20,0x08,0x04,0x03,0x00,0x2A,0x44,0x7F,0xC0,0xFF,0xFE,0x3E,
+0x40,0x00,0x24,0x04,0x14,0x03,0x00,0x2A,0x96,0x6F,0x40,0x90,0xC0,0x08,0x46,0x0F,
+0xFC,0x0F,0x04,0x13,0x00,0x2A,0x50,0x00,0x0F,0xFF,0xFE,0x46,0x40,0x10,0xA4,0x04,
+0x14,0x13,0x00,0x2A,0x96,0xAF,0x04,0x93,0x00,0x2A,0x40,0x11,0x60,0x08,0x46,0x2C,
+0x0F,0xFF,0x50,0x21,0x0F,0xFF,0x40,0x24,0x88,0x02,0xFE,0x8F,0x14,0x23,0x00,0x2A,
+0x04,0x13,0x00,0x2B,0x96,0xEF,0x92,0x26,0x94,0x4E,0xFE,0x5F,0x14,0x13,0x00,0x2B,
+0x97,0x2F,0x40,0x12,0x20,0x08,0x04,0x43,0x00,0x2B,0x97,0x6F,0xFF,0x3E,0xFF,0x0F,
+0x14,0x43,0x00,0x2B,0x04,0x13,0x00,0x2B,0x40,0x52,0xC0,0x08,0xFE,0x0E,0xFE,0x2F,
+0x14,0x03,0x00,0x2B,0x49,0x00,0x04,0x80,0x00,0x0F,0x80,0x20,0x54,0x10,0x00,0x3F,
+0x04,0x03,0x03,0x98,0x92,0x06,0x94,0x06,0xFE,0x0F,0x14,0x03,0x03,0x98,0x00,0x0F,
+0x80,0x24,0x04,0x23,0x03,0x99,0x96,0x2F,0x94,0x46,0x44,0x0F,0xF0,0x3F,0xFE,0x16,
+0xFE,0x0F,0x14,0x03,0x03,0x99,0x49,0x00,0x04,0x60,0xFC,0xC0,0x46,0x30,0x00,0x82,
+0x44,0x41,0x00,0x00,0xB4,0xA3,0x54,0x10,0x87,0xFF,0xFF,0x2F,0xB6,0x83,0xB4,0x83,
+0x94,0x92,0x92,0x8B,0x40,0x42,0x2C,0x08,0xFF,0x0F,0xB6,0x83,0x88,0x40,0x4C,0x01,
+0x00,0x05,0xA0,0x59,0xAA,0x41,0xD5,0xFC,0xB4,0x23,0x44,0x0E,0xFF,0xFF,0xFE,0x0E,
+0xB6,0x03,0xDD,0x9E,0x46,0x30,0x00,0x82,0x44,0x41,0x00,0x00,0xB4,0xA3,0x54,0x10,
+0x87,0xFF,0xFF,0x2F,0xB6,0x83,0xB4,0x83,0x94,0x92,0x92,0x8B,0x40,0x42,0x2C,0x08,
+0xFF,0x0F,0xB6,0x83,0x88,0x40,0x80,0x23,0x4C,0x01,0x00,0x05,0xA3,0x01,0xA9,0x09,
+0xD5,0xFC,0xB4,0x23,0x44,0x0E,0xFF,0xFF,0xFE,0x0E,0xB6,0x03,0xDD,0x9E,0xFC,0x00,
+0x46,0x50,0x00,0x80,0x46,0x3F,0xFF,0x00,0x9D,0x99,0x9D,0x2E,0x94,0xA9,0x88,0x40,
+0x38,0x11,0x18,0x00,0x38,0x21,0x0C,0x00,0x94,0x4C,0xFE,0x57,0x96,0x48,0x18,0x12,
+0x80,0x01,0xDC,0xF5,0xFC,0x80,0xFC,0x00,0x46,0x10,0x00,0x80,0x46,0x2F,0xFE,0xFF,
+0x50,0x50,0x80,0x08,0x50,0x61,0x0F,0xF1,0x50,0x41,0x0F,0xF0,0x50,0x30,0x80,0x0E,
+0x94,0xA9,0x88,0x40,0x38,0x11,0x18,0x00,0x38,0x21,0x10,0x00,0x94,0x4C,0xFE,0x57,
+0x96,0x48,0x18,0x12,0x80,0x01,0xDB,0xF5,0xFC,0x80,0x46,0x20,0x00,0x80,0x84,0x7E,
+0x50,0x51,0x01,0xC4,0xB4,0x85,0x96,0x06,0xFE,0xE6,0xFE,0x1F,0xB6,0x05,0x96,0x57,
+0xB4,0x65,0x40,0x00,0xA0,0x08,0x44,0x1F,0xF8,0xFF,0xFE,0x5E,0xFE,0x47,0xB6,0x25,
+0xDD,0x9E,0x46,0x20,0x00,0x81,0x40,0x00,0x40,0x08,0x04,0x11,0x00,0x11,0x96,0x49,
+0xFE,0x0F,0x14,0x01,0x00,0x11,0xDD,0x9E,0x46,0x20,0x00,0x81,0x40,0x00,0x40,0x08,
+0x04,0x11,0x00,0x10,0x96,0x49,0xFE,0x0F,0x14,0x01,0x00,0x10,0xDD,0x9E,0x46,0x20,
+0x00,0x81,0x04,0x11,0x00,0x10,0x92,0x30,0x40,0x10,0xC0,0x08,0xFE,0x0F,0x14,0x01,
+0x00,0x10,0xDD,0x9E,0x46,0x20,0x00,0x81,0x04,0x11,0x00,0x11,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x0F,0x14,0x01,0x00,0x11,0xDD,0x9E,0x46,0x20,0x00,0x81,0x84,0x30,
+0x04,0x31,0x00,0x12,0x96,0x1F,0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x12,0xDD,0x9E,
+0x46,0x20,0x00,0x80,0x84,0x30,0x04,0x31,0x00,0x70,0x96,0x1F,0xFE,0x5E,0xFE,0x0F,
+0x14,0x01,0x00,0x70,0xDD,0x9E,0x46,0x20,0x00,0x81,0x84,0x3E,0x04,0x31,0x00,0x13,
+0x96,0x06,0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x13,0xDD,0x9E,0x46,0x20,0x00,0x81,
+0x96,0x06,0x04,0x31,0x00,0x12,0x40,0x10,0x20,0x08,0x44,0x0F,0xFE,0xFF,0xFE,0x1E,
+0xFE,0x0F,0x14,0x01,0x00,0x12,0xDD,0x9E,0x46,0x20,0x00,0x81,0x96,0x0F,0x40,0x10,
+0x48,0x08,0x04,0x31,0x00,0x12,0x46,0x0F,0xFF,0x3F,0x50,0x00,0x0F,0xFF,0xFE,0x1E,
+0xFE,0x0F,0x14,0x01,0x00,0x12,0xDD,0x9E,0x46,0x00,0x00,0x81,0x04,0x00,0x00,0x12,
+0x92,0x12,0x96,0x0F,0xDD,0x9E,0x44,0x14,0x80,0x10,0xB4,0x01,0x92,0x0D,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x11,0xFA,0x50,0xAE,0x80,0xB4,0x01,0x92,0x0E,0x96,0x06,
+0xC0,0x06,0x44,0x04,0x80,0x11,0x44,0x10,0x00,0x40,0xAE,0x40,0x44,0x14,0x80,0x10,
+0xB4,0x01,0x92,0x0F,0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x11,0x44,0x2F,0xFF,0x80,
+0xAE,0x80,0xB4,0x01,0x92,0x09,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x11,0x84,0x22,
+0xAE,0x40,0x44,0x14,0x80,0x10,0xB4,0x01,0x92,0x0C,0x96,0x06,0xC0,0x05,0x44,0x04,
+0x80,0x11,0xFA,0x40,0xAE,0x80,0xB4,0x01,0x92,0x17,0x96,0x06,0xC0,0x06,0x44,0x04,
+0x80,0x12,0x44,0x1F,0xFF,0x80,0xAE,0x40,0xDD,0x9E,0x00,0x00,0x46,0x10,0x00,0x81,
+0x04,0x30,0x80,0x39,0xC0,0x0B,0x5A,0x00,0x01,0x0D,0x5A,0x00,0x02,0x0E,0x84,0x40,
+0x5A,0x08,0x03,0x0D,0x46,0x23,0xF3,0xC0,0xD5,0x09,0x46,0x23,0x00,0x00,0xD5,0x06,
+0x46,0x23,0x51,0x40,0xD5,0x03,0x46,0x23,0xA2,0x80,0x46,0x1C,0x0C,0x3F,0x50,0x10,
+0x8F,0xFF,0x40,0x01,0x84,0x02,0x46,0x10,0x00,0x81,0xFE,0x17,0x14,0x00,0x80,0x39,
+0xDD,0x9E,0x46,0x20,0x00,0x81,0x96,0x0F,0x40,0x10,0x58,0x08,0x04,0x31,0x00,0x39,
+0x46,0x0F,0xF3,0xFF,0x50,0x00,0x0F,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x39,
+0xDD,0x9E,0x46,0x10,0x00,0x81,0x04,0x30,0x80,0x39,0xC0,0x11,0x5A,0x00,0x01,0x09,
+0x5A,0x00,0x02,0x0A,0x5A,0x08,0x03,0x0B,0x44,0x03,0xFF,0xC0,0xD5,0x08,0x44,0x01,
+0x55,0x40,0xD5,0x05,0x44,0x02,0xAA,0x80,0xD5,0x02,0x84,0x00,0x44,0x23,0xFF,0xC0,
+0x44,0x1C,0x00,0x3F,0xFE,0x5E,0xFE,0x16,0xFE,0x0F,0x46,0x10,0x00,0x81,0x14,0x00,
+0x80,0x39,0xDD,0x9E,0x46,0x20,0x00,0x81,0x96,0x0F,0x04,0x31,0x00,0x39,0x40,0x10,
+0x28,0x08,0x44,0x0F,0xF3,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x39,0xDD,0x9E,
+0x46,0x20,0x00,0x81,0x46,0x31,0x55,0x10,0x50,0x31,0x84,0x40,0x50,0x51,0x00,0xE4,
+0xB4,0x25,0xA8,0xE9,0xA1,0x2A,0x84,0x78,0xFE,0xE6,0xE6,0x05,0xA8,0xEA,0xE8,0x3A,
+0x44,0xF0,0x06,0x10,0x38,0x07,0x80,0x00,0x40,0xF0,0x3C,0x00,0x4A,0x00,0x3C,0x00,
+0x06,0x1C,0x28,0x3E,0x54,0x00,0x46,0x03,0xA3,0x2A,0x92,0x26,0x50,0x00,0x03,0x00,
+0x94,0x4E,0x14,0x01,0x00,0x38,0x58,0x10,0x80,0x3A,0xD5,0x22,0x84,0x00,0x92,0x26,
+0x14,0x01,0x00,0x38,0x94,0x4E,0xD5,0x1C,0x46,0x05,0x55,0x55,0x92,0x26,0x50,0x00,
+0x05,0x55,0x94,0x4E,0x14,0x01,0x00,0x38,0x58,0x10,0x80,0x15,0xD5,0x11,0x46,0x0A,
+0xAA,0xAA,0x92,0x26,0x50,0x00,0x0A,0xAA,0x94,0x4E,0x14,0x01,0x00,0x38,0x58,0x10,
+0x80,0x2A,0xD5,0x06,0x84,0x1F,0x14,0x01,0x00,0x38,0x58,0x10,0x80,0x3F,0x14,0x11,
+0x00,0x39,0xDD,0x9E,0xDD,0x9E,0x44,0x24,0x50,0x00,0x96,0x06,0xB4,0x62,0x94,0x42,
+0x84,0x1B,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x44,0x04,0x50,0x28,0xB4,0x00,
+0x92,0x04,0x96,0x06,0xDD,0x9E,0x92,0x00,0x46,0x20,0x00,0x83,0x84,0x3C,0x04,0x31,
+0x00,0x10,0x96,0x0F,0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x10,0xDD,0x9E,0x46,0x20,
+0x00,0x83,0x96,0x06,0x04,0x31,0x00,0x10,0x40,0x10,0x20,0x08,0x44,0x0F,0xFE,0xFF,
+0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x10,0xDD,0x9E,0xFC,0x40,0x46,0x20,0x00,0x83,
+0x44,0x5F,0xFE,0xFF,0x83,0x82,0xBB,0x18,0x46,0x40,0x0F,0x03,0xFE,0xEE,0xBB,0x98,
+0xBB,0x18,0x50,0x42,0x0C,0x0F,0x92,0x68,0x40,0x31,0xA0,0x08,0x58,0x31,0x80,0x46,
+0xBB,0x98,0xBF,0x39,0xBE,0x3A,0x04,0x91,0x00,0x3B,0xFF,0xE6,0xFF,0xA6,0x40,0x44,
+0x90,0x02,0x04,0x90,0x80,0x02,0xBB,0x3C,0xB5,0x41,0x89,0x24,0xA1,0x0B,0x96,0xDF,
+0x88,0xEA,0x04,0xA0,0x80,0x01,0x98,0x5C,0xBB,0x18,0x88,0xCA,0x58,0x31,0x81,0x00,
+0xBB,0x98,0xBB,0x18,0x92,0x68,0x40,0x31,0xA0,0x08,0x58,0x31,0x80,0x46,0xBB,0x98,
+0xBF,0xB9,0xBE,0xBA,0x14,0x91,0x00,0x3B,0x96,0xC9,0xB9,0x3C,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x5F,0xB9,0xBC,0xB4,0x20,0xB9,0xB9,0xA0,0x41,0xB9,0xBA,0xA0,0x42,
+0xB9,0xBB,0xA4,0x46,0xB8,0x3C,0x92,0x10,0x40,0x00,0x40,0x08,0xFE,0x0F,0xB8,0xBC,
+0xB8,0x18,0xFF,0x46,0xBD,0x98,0xFC,0xC0,0xFC,0x20,0x46,0x20,0x00,0x83,0x44,0x3F,
+0xFE,0xFF,0x83,0x82,0xBC,0x18,0x94,0x4A,0xFE,0xE6,0xBB,0x98,0xBB,0x18,0x50,0x51,
+0x00,0xE4,0x92,0x68,0x40,0x31,0xA0,0x08,0x58,0x31,0x80,0x48,0xBB,0x98,0xBB,0x18,
+0x50,0x61,0x00,0xE8,0x58,0x31,0x81,0x00,0xBB,0x98,0x50,0x71,0x00,0xEC,0x88,0x20,
+0x50,0x21,0x00,0xF0,0x46,0x30,0x00,0x83,0x4C,0x00,0x80,0x12,0xA2,0xC1,0xB6,0x65,
+0x83,0x80,0xBB,0x3F,0x02,0x40,0x01,0x7E,0xB6,0x66,0xBB,0x7F,0xB6,0x67,0xB4,0x62,
+0x92,0x70,0x40,0x31,0xC0,0x08,0xFE,0xE7,0xB6,0x62,0xD5,0xED,0x83,0x83,0xB9,0x18,
+0x44,0x0F,0xFE,0xFF,0xFE,0x0E,0xB8,0x98,0xFC,0xA0,0xFC,0x20,0x46,0x10,0x00,0x83,
+0x44,0x2F,0xFE,0xFF,0x83,0x81,0xBB,0x18,0x46,0x40,0xF0,0x3C,0xFE,0x9E,0xBA,0x98,
+0xBA,0x18,0x50,0x32,0x00,0xF0,0x92,0x48,0x40,0x21,0x20,0x08,0x58,0x21,0x00,0x46,
+0xBA,0x98,0xBE,0x39,0xB4,0x80,0xBD,0x3A,0xFF,0x9E,0x88,0xC4,0xA1,0x01,0xBF,0x3B,
+0xFF,0x5E,0x88,0xA4,0xA1,0x02,0xBA,0x3C,0xFE,0xFE,0x88,0x83,0xA0,0xC3,0x54,0x21,
+0x00,0xF0,0xBE,0xB9,0x98,0x13,0xBD,0xBA,0xBC,0xBB,0x96,0x81,0xB8,0x3C,0x92,0x10,
+0x40,0x00,0x40,0x08,0xFE,0x17,0xB8,0xBC,0xFC,0xA0,0x44,0x14,0x80,0x90,0x84,0x5E,
+0xB4,0x61,0x96,0x06,0xFE,0x9E,0xFE,0x87,0xB6,0x41,0xB4,0x81,0x44,0x2F,0xFF,0xEF,
+0x94,0xC4,0xFE,0xA6,0xFE,0x9F,0xB6,0x41,0xB4,0x61,0x44,0x2F,0xFB,0xFF,0xFE,0x9E,
+0x40,0x00,0x28,0x08,0xFE,0x17,0xB6,0x01,0x46,0x10,0x00,0x80,0x84,0x18,0x50,0x30,
+0x82,0x6C,0xB4,0x43,0xFE,0x16,0xB6,0x03,0xB4,0x43,0x44,0x0F,0xF0,0xFF,0xFE,0x16,
+0x58,0x00,0x0A,0x00,0xB6,0x03,0xDD,0x9E,0x52,0x00,0x00,0x01,0x46,0x20,0x00,0x80,
+0x96,0x06,0xC9,0x08,0x40,0x10,0x20,0x08,0x04,0x31,0x00,0x79,0x44,0x0F,0xFE,0xFF,
+0xD5,0x07,0x40,0x10,0x40,0x08,0x04,0x31,0x00,0x79,0x44,0x0E,0xFF,0xFF,0xFE,0x1E,
+0xFE,0x0F,0x14,0x01,0x00,0x79,0xDD,0x9E,0x46,0x10,0x00,0x82,0x5A,0x08,0x01,0x0B,
+0x50,0x30,0x80,0x20,0xB4,0x03,0x58,0x00,0x00,0x02,0xB6,0x03,0xB4,0x43,0x84,0x1E,
+0xD5,0x04,0x04,0x20,0x80,0x08,0x84,0x1D,0xFE,0x16,0x14,0x00,0x80,0x08,0xDD,0x9E,
+0x46,0x30,0x00,0x83,0x54,0x10,0x00,0x01,0x50,0x51,0x83,0xB8,0xB4,0x85,0x40,0x20,
+0xA0,0x08,0x44,0x1F,0xFE,0xFF,0xFE,0x66,0xFE,0x57,0xB6,0x25,0xB4,0x25,0xE6,0x01,
+0x44,0x0F,0xFD,0xFF,0x40,0xF7,0xA4,0x08,0xFE,0x0E,0x40,0x00,0x3C,0x04,0xB6,0x05,
+0xDD,0x9E,0x46,0x30,0x00,0x83,0x54,0x10,0x00,0x01,0x50,0x51,0x83,0xB8,0xB4,0x85,
+0x40,0x20,0xA8,0x08,0x44,0x1F,0xFB,0xFF,0xFE,0x66,0xFE,0x57,0xB6,0x25,0xB4,0x25,
+0xE6,0x01,0x44,0x0F,0xF7,0xFF,0x40,0xF7,0xAC,0x08,0xFE,0x0E,0x40,0x00,0x3C,0x04,
+0xB6,0x05,0xDD,0x9E,0x44,0x27,0x20,0x68,0x96,0x01,0xB4,0x22,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x47,0xB6,0x22,0x44,0x27,0x20,0x70,0xB4,0x22,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x47,0xB6,0x22,0x44,0x27,0x20,0x78,0xB4,0x22,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x47,0xB6,0x22,0x44,0x27,0x20,0x80,0xB4,0x22,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x47,0xB6,0x22,0x44,0x27,0x20,0x88,0xB4,0x22,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x47,0xB6,0x22,0x44,0x27,0x20,0x90,0xB4,0x22,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0xC8,0x0A,0x44,0x17,0x20,0x00,0x46,0x0F,
+0xEF,0xFF,0xB4,0x41,0x50,0x00,0x0F,0xFF,0xFE,0x16,0xD5,0x09,0x5A,0x08,0x01,0x09,
+0x44,0x17,0x20,0x00,0x46,0x00,0x10,0x00,0xB4,0x41,0xFE,0x17,0xB6,0x01,0xDD,0x9E,
+0x44,0x27,0x20,0x00,0x84,0x3E,0xB4,0x62,0x96,0x06,0xFE,0x5E,0xFE,0x0F,0xB6,0x02,
+0xDD,0x9E,0x44,0x27,0x20,0x04,0x84,0x3E,0xB4,0x62,0x96,0x06,0xFE,0x5E,0xFE,0x0F,
+0xB6,0x02,0xDD,0x9E,0x44,0x27,0x20,0x00,0x96,0x06,0xB4,0x62,0x40,0x10,0x40,0x08,
+0x44,0x0E,0xFF,0xFF,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0xC9,0x06,0x44,0x27,
+0x10,0x00,0xB4,0x22,0xFE,0x0F,0xD5,0x08,0x5A,0x18,0x01,0x08,0x44,0x27,0x10,0x00,
+0xFE,0x03,0xB4,0x22,0xFE,0x0E,0xB6,0x02,0xDD,0x9E,0x5A,0x18,0x01,0x07,0x44,0x27,
+0x10,0x04,0xB4,0x22,0xFE,0x0F,0xD5,0x07,0xC9,0x07,0x44,0x27,0x10,0x04,0xFE,0x03,
+0xB4,0x22,0xFE,0x0E,0xB6,0x02,0xDD,0x9E,0x5A,0x18,0x01,0x07,0x44,0x27,0x10,0x08,
+0xB4,0x22,0xFE,0x0F,0xD5,0x07,0xC9,0x07,0x44,0x27,0x10,0x08,0xFE,0x03,0xB4,0x22,
+0xFE,0x0E,0xB6,0x02,0xDD,0x9E,0x44,0x16,0x00,0x00,0x5A,0x08,0x01,0x06,0xB4,0x01,
+0x58,0x00,0x00,0x01,0xD5,0x04,0xB4,0x41,0x84,0x1E,0xFE,0x16,0xB6,0x01,0xDD,0x9E,
+0x44,0x16,0x00,0x00,0xB4,0x41,0x5A,0x08,0x01,0x06,0x44,0x01,0x00,0x00,0xFE,0x17,
+0xD5,0x04,0x44,0x0E,0xFF,0xFF,0xFE,0x16,0xB6,0x01,0xDD,0x9E,0x44,0x06,0x00,0x00,
+0xB4,0x00,0x92,0x1C,0x96,0x06,0xDD,0x9E,0x44,0x16,0x00,0x30,0x5A,0x08,0x01,0x06,
+0xB4,0x01,0x58,0x00,0x01,0x00,0xD5,0x05,0xB4,0x41,0x44,0x0F,0xFE,0xFF,0xFE,0x16,
+0xB6,0x01,0xDD,0x9E,0x44,0x36,0x38,0x14,0x40,0x00,0x20,0x08,0x40,0x20,0x20,0x09,
+0xB4,0x03,0x96,0x6F,0x92,0x18,0x40,0x00,0x60,0x08,0xFE,0x17,0x44,0x26,0x38,0x08,
+0xB6,0x03,0xB4,0x62,0x40,0x00,0xE0,0x08,0x46,0x1C,0x0F,0xFF,0x50,0x10,0x8F,0xFF,
+0xFE,0x5E,0xFE,0x47,0xB6,0x22,0x44,0x16,0x38,0x04,0x44,0x01,0x00,0x00,0xB4,0x41,
+0xFE,0x17,0xB6,0x01,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x03,0x96,0x06,0xC0,0xFD,
+0x44,0x04,0x80,0x0C,0x84,0x28,0xAE,0x40,0xDD,0x9E,0x44,0x36,0x34,0x14,0x40,0x00,
+0x20,0x08,0x40,0x20,0x20,0x09,0xB4,0x03,0x96,0x6F,0x92,0x18,0x40,0x00,0x60,0x08,
+0xFE,0x17,0x44,0x26,0x34,0x08,0xB6,0x03,0xB4,0x62,0x40,0x00,0xE0,0x08,0x46,0x1C,
+0x0F,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x5E,0xFE,0x47,0xB6,0x22,0x44,0x16,0x34,0x04,
+0x44,0x01,0x00,0x00,0xB4,0x41,0xFE,0x17,0xB6,0x01,0x44,0x14,0x80,0x0C,0xB4,0x01,
+0x92,0x13,0x96,0x06,0xC0,0xFD,0x44,0x04,0x80,0x0E,0x84,0x28,0xAE,0x40,0xDD,0x9E,
+0xFC,0x01,0xB6,0x3F,0x80,0x22,0xF3,0x81,0x49,0xFF,0xFF,0xA6,0xB4,0x1F,0xF1,0x01,
+0x49,0xFF,0xFF,0xCD,0xFC,0x81,0x44,0x16,0x3C,0x04,0xB4,0x01,0x58,0x00,0x00,0x01,
+0xB6,0x01,0xDD,0x9E,0x44,0x26,0x38,0x04,0xB4,0x22,0x44,0x06,0x38,0x04,0x92,0x28,
+0x96,0x46,0xC9,0xFB,0xB4,0x40,0x84,0x3E,0xFE,0x56,0xB6,0x20,0x80,0x20,0xB4,0x01,
+0x92,0x08,0x96,0x06,0xC8,0xFD,0x44,0x26,0x34,0x04,0xB4,0x22,0x44,0x06,0x34,0x04,
+0x92,0x28,0x96,0x46,0xC9,0xFB,0xB4,0x40,0x84,0x3E,0xFE,0x56,0xB6,0x20,0x80,0x20,
+0xB4,0x01,0x92,0x08,0x96,0x06,0xC8,0xFD,0xDD,0x9E,0xFC,0x00,0x46,0x60,0x00,0x83,
+0x83,0x86,0xB8,0x27,0x58,0x00,0x00,0x01,0xB8,0xA7,0xB8,0x27,0x58,0x00,0x01,0x00,
+0xB8,0xA7,0x84,0x01,0x49,0x00,0x08,0x9B,0xB9,0x27,0x84,0x1E,0xFE,0x0E,0xB8,0xA7,
+0xB9,0x27,0x44,0x0F,0xFE,0xFF,0xFE,0x0E,0xB8,0xA7,0xFC,0x80,0xFC,0x40,0x46,0x60,
+0x00,0x83,0x84,0xFE,0x83,0x86,0x04,0x93,0x00,0x14,0x96,0x06,0x40,0x74,0x9C,0x02,
+0xFE,0x3F,0xB8,0x94,0x96,0x5F,0xBF,0x14,0x40,0x00,0xE0,0x08,0x46,0x1F,0x0F,0xFF,
+0x50,0x10,0x8F,0xFF,0xFE,0x7E,0xFE,0x47,0xB9,0x94,0x97,0x2F,0xB9,0x14,0x40,0x02,
+0x44,0x08,0x46,0x4F,0xF8,0x1F,0x50,0x42,0x0F,0xFF,0xFF,0x0E,0xFF,0x07,0xBC,0x94,
+0x97,0x6F,0x40,0x02,0xAC,0x08,0xBD,0x14,0x44,0x1E,0x07,0xFF,0xFF,0x4E,0xFF,0x47,
+0xBD,0x94,0xB8,0x15,0x54,0x21,0x03,0xFF,0x92,0x0A,0x40,0x00,0x28,0x08,0xFE,0x17,
+0xB8,0x95,0x96,0xF7,0x40,0x01,0xC0,0x08,0xB9,0x15,0x46,0x3F,0xF8,0x0F,0x50,0x31,
+0x8F,0xFF,0xFE,0xCE,0xFE,0xC7,0xBB,0x95,0xFC,0xC0,0x46,0x00,0x00,0x83,0x04,0x00,
+0x00,0x16,0x96,0x01,0xDD,0x9E,0xFC,0x00,0x46,0x40,0x00,0x83,0x84,0x61,0x83,0x84,
+0xBE,0x13,0x84,0xBE,0xFE,0x1E,0xFF,0x76,0xFE,0x2F,0xB8,0x93,0xFE,0x5E,0x40,0x30,
+0xA0,0x08,0xB9,0x60,0x44,0x0F,0xFE,0xFF,0xFE,0x46,0xFE,0x5F,0xB9,0xE0,0x96,0xA7,
+0x40,0x01,0x20,0x08,0xBA,0x13,0x44,0x1F,0xE0,0xFF,0xFE,0x8E,0xFE,0x87,0xBA,0x93,
+0xFC,0x80,0x46,0x30,0x00,0x83,0x96,0x8F,0x50,0x41,0x81,0x84,0xB6,0x04,0xA8,0x61,
+0xA0,0x62,0x84,0x1C,0xFE,0x0E,0xFE,0x87,0xA8,0xA2,0xDD,0x9E,0x46,0x20,0x00,0x83,
+0x96,0x27,0x04,0x11,0x00,0x60,0x92,0x25,0x94,0x4D,0xFE,0x47,0x14,0x11,0x00,0x60,
+0xDD,0x9E,0x46,0x20,0x00,0x83,0x84,0x3E,0x04,0x31,0x00,0x12,0x96,0x06,0xFE,0x5E,
+0xFE,0x0F,0x14,0x01,0x00,0x12,0xDD,0x9E,0xB4,0x40,0x46,0x10,0x00,0x80,0x14,0x20,
+0x80,0x48,0xA0,0x01,0x14,0x00,0x80,0x4A,0xDD,0x9E,0xFC,0x40,0x46,0x20,0x00,0x83,
+0x50,0x61,0x00,0xE4,0x83,0x82,0xBB,0x18,0x50,0x71,0x00,0xE8,0x58,0x31,0x81,0x00,
+0xBB,0x98,0xBB,0x18,0x50,0x91,0x00,0xEC,0x92,0x68,0x40,0x31,0xA0,0x08,0x58,0x31,
+0x80,0x88,0xBB,0x98,0x8C,0x02,0x84,0xA0,0x50,0x21,0x00,0xF0,0x46,0x30,0x00,0x83,
+0xD1,0x22,0x22,0x30,0x00,0x00,0x22,0x40,0x7F,0xFF,0x40,0x31,0xC0,0x08,0x88,0x64,
+0xB6,0x66,0x22,0x30,0x00,0x02,0x22,0x40,0x00,0x01,0x40,0x31,0xC0,0x08,0x88,0x64,
+0xB6,0x67,0x22,0x30,0x00,0x04,0x22,0x40,0x00,0x03,0x40,0x31,0xC0,0x08,0x88,0x64,
+0xB6,0x69,0xB4,0x62,0x8C,0xA1,0x92,0x70,0x40,0x31,0xC0,0x08,0xB6,0x62,0x97,0x68,
+0x8C,0x0C,0xD5,0xDD,0x83,0x83,0xB9,0x18,0x44,0x0F,0xFE,0xFF,0xFE,0x0E,0xB8,0x98,
+0xFC,0xC0,0x46,0x20,0x00,0x83,0x96,0x0F,0x04,0x31,0x00,0x12,0x40,0x10,0x40,0x08,
+0x44,0x0C,0xFF,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x12,0xDD,0x9E,0xFC,0x00,
+0x84,0x40,0x44,0x64,0x00,0xC0,0x38,0x30,0x88,0x00,0x38,0x40,0x09,0x01,0x99,0x56,
+0x40,0x31,0xB0,0x08,0x95,0x69,0xFE,0xE7,0x96,0xD9,0x8C,0x41,0xAC,0xE8,0x5A,0x28,
+0x14,0xF4,0xFC,0x80,0x46,0x20,0x00,0x83,0x96,0x06,0x04,0x31,0x00,0x26,0x94,0x41,
+0x84,0x1D,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x26,0xDD,0x9E,0x46,0x20,0x00,0x81,
+0x96,0x06,0xA0,0xD5,0x40,0x10,0x20,0x08,0x44,0x0F,0xFE,0xFF,0xFE,0x1E,0xFE,0x0F,
+0xA8,0x15,0xDD,0x9E,0xC9,0x08,0x46,0x20,0x00,0x91,0x84,0x3E,0xB4,0x62,0x96,0x06,
+0xFE,0x5E,0xD5,0x0A,0x5A,0x18,0x01,0x0B,0x46,0x20,0x00,0x91,0x96,0x06,0xB4,0x62,
+0x94,0x41,0x84,0x1D,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0xFC,0x00,0x44,0x00,
+0x00,0xC8,0x49,0x00,0x07,0x6C,0x44,0x14,0x50,0x0C,0x46,0x60,0x00,0x81,0xB4,0x01,
+0x58,0x00,0x00,0x04,0xB6,0x01,0xFA,0x18,0x49,0x00,0x07,0x6A,0x83,0x86,0xB8,0x1C,
+0x58,0x00,0x01,0x00,0xB8,0x9C,0x84,0x01,0x49,0x00,0x07,0x62,0xB9,0x1C,0x44,0x01,
+0x00,0x00,0xFE,0x0F,0xB8,0x9C,0x44,0x00,0x01,0xF4,0x49,0x00,0x07,0x50,0xB9,0x1C,
+0x46,0x00,0x10,0x00,0xFE,0x0F,0xB8,0x9C,0x44,0x00,0x01,0xF4,0x49,0x00,0x07,0x47,
+0xFC,0x80,0x00,0x00,0x46,0x10,0x00,0x80,0x50,0x50,0x80,0x80,0x50,0x10,0x80,0xB0,
+0xA2,0x81,0xAA,0xA9,0xD9,0xFE,0xDD,0x9E,0x46,0x10,0x00,0x80,0x50,0x50,0x80,0xB0,
+0x50,0x10,0x80,0xC4,0xA2,0x81,0xAA,0xA9,0xD9,0xFE,0xDD,0x9E,0xB4,0x40,0x46,0x10,
+0x00,0x80,0x14,0x20,0x80,0x47,0xA0,0x01,0x14,0x00,0x80,0x49,0xDD,0x9E,0x46,0x10,
+0x00,0x80,0x50,0x50,0x81,0x40,0x50,0x30,0x81,0x4C,0xA6,0x41,0xA6,0x80,0x94,0x4C,
+0xFE,0x57,0x96,0x48,0xAE,0x68,0x00,0x10,0x00,0x0D,0x00,0x20,0x00,0x0C,0x94,0x4C,
+0xFE,0x57,0x96,0x48,0x10,0x12,0x80,0x0C,0x8C,0xA1,0x8C,0x02,0xDB,0xEF,0xDD,0x9E,
+0x46,0x10,0x00,0x80,0x50,0x50,0x80,0x40,0x50,0x30,0x80,0x46,0xA6,0x41,0xA6,0x80,
+0x94,0x4C,0xFE,0x57,0x96,0x48,0xAE,0x68,0x00,0x10,0x00,0x0D,0x00,0x20,0x00,0x0C,
+0x94,0x4C,0xFE,0x57,0x96,0x48,0x10,0x12,0x80,0x0C,0x8C,0xA1,0x8C,0x02,0xDB,0xEF,
+0xDD,0x9E,0xA6,0x81,0x80,0xA0,0x94,0x94,0x08,0x12,0x80,0x05,0xFE,0x8F,0x46,0x10,
+0x00,0x80,0x96,0x90,0x10,0x20,0x80,0x48,0xA6,0xA9,0xA6,0xC5,0x94,0x94,0xFE,0x9F,
+0x96,0x90,0x10,0x20,0x80,0x54,0xA6,0x83,0xA6,0xC2,0x94,0x94,0xFE,0x9F,0x96,0x90,
+0x10,0x20,0x80,0x49,0xA6,0xAB,0xA6,0xEA,0x94,0x94,0xFE,0x9F,0x96,0x90,0x10,0x20,
+0x80,0x55,0xA6,0x84,0x84,0x0F,0xFE,0x86,0x40,0x31,0x40,0x08,0x46,0x4F,0xFF,0x0F,
+0x04,0x20,0x80,0x12,0x50,0x42,0x0F,0xFF,0xFE,0xA6,0xFE,0x9F,0x14,0x20,0x80,0x12,
+0xA6,0xAC,0xFE,0x16,0x40,0x20,0x40,0x08,0x04,0x00,0x80,0x15,0xFE,0x26,0xFE,0x17,
+0x14,0x00,0x80,0x15,0xDD,0x9E,0x46,0x10,0x00,0x80,0x50,0x50,0x80,0x58,0x50,0x30,
+0x80,0x5E,0xA6,0x41,0xA6,0x80,0x94,0x4C,0xFE,0x57,0x96,0x48,0xAE,0x68,0x00,0x10,
+0x00,0x0D,0x00,0x20,0x00,0x0C,0x94,0x4C,0xFE,0x57,0x96,0x48,0x10,0x12,0x80,0x0C,
+0x8C,0xA1,0x8C,0x02,0xDB,0xEF,0xDD,0x9E,0xA6,0x81,0x80,0xA0,0x94,0x94,0x08,0x12,
+0x80,0x05,0xFE,0x8F,0x46,0x10,0x00,0x80,0x96,0x90,0x10,0x20,0x80,0x60,0xA6,0xA9,
+0xA6,0xC5,0x94,0x94,0xFE,0x9F,0x96,0x90,0x10,0x20,0x80,0x6C,0xA6,0x83,0xA6,0xC2,
+0x94,0x94,0xFE,0x9F,0x96,0x90,0x10,0x20,0x80,0x61,0xA6,0xAB,0xA6,0xEA,0x94,0x94,
+0xFE,0x9F,0x96,0x90,0x10,0x20,0x80,0x6D,0xA6,0x84,0x84,0x0F,0xFE,0x86,0x40,0x31,
+0x40,0x08,0x46,0x4F,0xFF,0x0F,0x04,0x20,0x80,0x18,0x50,0x42,0x0F,0xFF,0xFE,0xA6,
+0xFE,0x9F,0x14,0x20,0x80,0x18,0xA6,0xAC,0xFE,0x16,0x40,0x20,0x40,0x08,0x04,0x00,
+0x80,0x1B,0xFE,0x26,0xFE,0x17,0x14,0x00,0x80,0x1B,0xDD,0x9E,0xE6,0x06,0xE8,0x57,
+0xFC,0x20,0x46,0x70,0x00,0x81,0x44,0xF0,0x10,0x74,0x38,0x07,0x80,0x00,0x40,0xF0,
+0x3C,0x00,0xDD,0x0F,0x06,0x16,0x34,0x62,0x76,0x44,0x04,0x03,0x80,0x20,0x54,0x10,
+0x87,0xFF,0x92,0x0B,0x40,0x00,0x2C,0x08,0xD5,0x0C,0x54,0x10,0x87,0xFF,0x40,0x00,
+0xC0,0x08,0x04,0x23,0x80,0x20,0x46,0x1F,0x80,0x0F,0x50,0x10,0x8F,0xFF,0xFE,0x56,
+0xFE,0x47,0x14,0x13,0x80,0x20,0xFC,0xA0,0x04,0x03,0x80,0x21,0x54,0x10,0x87,0xFF,
+0x92,0x0B,0x40,0x00,0x2C,0x08,0xD5,0x0C,0x54,0x10,0x87,0xFF,0x40,0x00,0xC0,0x08,
+0x04,0x23,0x80,0x21,0x46,0x1F,0x80,0x0F,0x50,0x10,0x8F,0xFF,0xFE,0x56,0xFE,0x47,
+0x14,0x13,0x80,0x21,0xFC,0xA0,0x83,0x87,0xB8,0x22,0x54,0x10,0x87,0xFF,0x92,0x0B,
+0x40,0x00,0x2C,0x08,0xFE,0x47,0xB9,0xA2,0xFC,0xA0,0x80,0xC1,0x49,0xFF,0xFD,0x54,
+0x54,0x13,0x03,0xFF,0x95,0x8E,0x04,0x13,0x83,0x98,0x44,0x0F,0x00,0x3F,0xFE,0x46,
+0xFE,0x77,0x14,0x13,0x83,0x98,0x49,0xFF,0xFD,0x40,0xFC,0xA0,0xDD,0x9E,0x46,0x20,
+0x00,0x83,0x96,0x06,0x40,0x10,0x60,0x08,0x04,0x31,0x00,0xC0,0x46,0x0F,0xEF,0xFF,
+0x50,0x00,0x0F,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0xC0,0xDD,0x9E,0x46,0x20,
+0x00,0x83,0x96,0x06,0x40,0x10,0x64,0x08,0x04,0x31,0x00,0xC0,0x46,0x0F,0xDF,0xFF,
+0x50,0x00,0x0F,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0xC0,0xDD,0x9E,0x46,0x20,
+0x00,0x83,0x96,0x0F,0x04,0x31,0x00,0x0F,0x40,0x10,0x20,0x08,0x44,0x0F,0xFC,0xFF,
+0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x0F,0xDD,0x9E,0x46,0x20,0x00,0x83,0x84,0x3E,
+0x04,0x31,0x00,0x0F,0x96,0x06,0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x0F,0xDD,0x9E,
+0x46,0x20,0x00,0x83,0x96,0x06,0x04,0x31,0x00,0x0F,0x40,0x10,0x28,0x08,0x44,0x0F,
+0xFB,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x0F,0xDD,0x9E,0x46,0x10,0x00,0x83,
+0x44,0x01,0x00,0x00,0x04,0x20,0x80,0x0E,0xFE,0x17,0x14,0x00,0x80,0x0E,0xDD,0x9E,
+0x46,0x20,0x00,0x83,0x46,0x3F,0x7F,0xFF,0x50,0x51,0x00,0x38,0xB4,0x85,0x50,0x31,
+0x8F,0xFF,0xFE,0xE6,0xB6,0x65,0xB4,0x85,0x46,0x3E,0xFF,0xFF,0x50,0x31,0x8F,0xFF,
+0xFE,0xE6,0xB6,0x65,0x5A,0x08,0x01,0x04,0x84,0x1F,0xD5,0x02,0x84,0x00,0x14,0x01,
+0x00,0x0B,0x14,0x01,0x00,0x0C,0x04,0x01,0x00,0x33,0x5A,0x18,0x01,0x0B,0x58,0x00,
+0x0F,0xFF,0x14,0x01,0x00,0x33,0x04,0x01,0x00,0x34,0x58,0x00,0x0F,0xFF,0xD5,0x0B,
+0x92,0x0C,0x40,0x00,0x30,0x08,0x14,0x01,0x00,0x33,0x04,0x01,0x00,0x34,0x92,0x0C,
+0x40,0x00,0x30,0x08,0x14,0x01,0x00,0x34,0xDD,0x9E,0x46,0x10,0x00,0x83,0x96,0x06,
+0x50,0x50,0x80,0x38,0xB4,0x85,0x44,0x2F,0xFE,0xFF,0x40,0x30,0x20,0x08,0xFE,0xA6,
+0xFE,0x9F,0xB6,0x45,0xB4,0x65,0x44,0x2F,0xFD,0xFF,0x40,0x00,0x24,0x08,0xFE,0x9E,
+0xFE,0x17,0xB6,0x05,0xDD,0x9E,0x46,0x20,0x00,0x81,0x50,0x51,0x00,0x90,0x50,0x31,
+0x00,0x9A,0x08,0x20,0x00,0x01,0x88,0x41,0x96,0x90,0x18,0x22,0x80,0x01,0xDB,0xFA,
+0xDD,0x9E,0xE6,0x25,0xE8,0x33,0x96,0x1F,0x46,0x20,0x00,0x81,0x44,0xF0,0x12,0x7C,
+0x38,0x17,0x84,0x00,0x40,0xF0,0xBC,0x00,0x4A,0x00,0x3C,0x00,0x06,0x0E,0x1A,0x28,
+0x36,0x00,0x04,0x31,0x00,0x23,0x84,0x30,0xD5,0x1D,0x94,0x04,0x04,0x31,0x00,0x23,
+0x44,0x1F,0xFF,0x0F,0xD5,0x17,0x40,0x00,0x20,0x08,0x04,0x31,0x00,0x23,0x44,0x1F,
+0xF0,0xFF,0xD5,0x10,0x40,0x00,0x30,0x08,0x04,0x31,0x00,0x23,0x44,0x1F,0x0F,0xFF,
+0xD5,0x09,0x46,0x1F,0xFF,0x0F,0x40,0x00,0x40,0x08,0x04,0x31,0x00,0x23,0x50,0x10,
+0x8F,0xFF,0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x23,0xDD,0x9E,0x84,0x00,0xDD,0x9E,
+0x46,0x20,0x00,0x81,0x54,0x00,0x03,0xFF,0x40,0x10,0x40,0x08,0x04,0x31,0x00,0x49,
+0x46,0x0F,0xC0,0x0F,0x50,0x00,0x0F,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x49,
+0xDD,0x9E,0xE6,0x06,0xE8,0x52,0xFC,0x20,0x46,0x70,0x00,0x81,0x54,0x60,0x83,0xFF,
+0x44,0xF0,0x13,0x10,0x38,0x07,0x80,0x00,0x40,0xF0,0x3C,0x00,0x4A,0x00,0x3C,0x00,
+0x06,0x2E,0x46,0x56,0x66,0x16,0x83,0x87,0xB9,0x30,0x92,0x2A,0x40,0x10,0xA8,0x08,
+0xFF,0x8F,0xBE,0xB0,0xFC,0xA0,0x83,0x87,0xB8,0x31,0x46,0x2F,0xC0,0x0F,0x50,0x21,
+0x0F,0xFF,0x40,0x63,0x40,0x08,0xFE,0x16,0xFE,0x37,0xB8,0xB1,0xFC,0xA0,0x83,0x87,
+0xB8,0x30,0x46,0x2F,0xC0,0x0F,0x50,0x21,0x0F,0xFF,0x40,0x63,0x40,0x08,0xFE,0x16,
+0xFE,0x37,0xB8,0xB0,0xFC,0xA0,0x83,0x87,0xB9,0x31,0x92,0x2A,0x40,0x10,0xA8,0x08,
+0xFF,0x8F,0xBE,0xB1,0xFC,0xA0,0x83,0x87,0xB9,0x32,0x92,0x2A,0x40,0x10,0xA8,0x08,
+0xFF,0x8F,0xBE,0xB2,0xFC,0xA0,0x49,0xFF,0xFC,0x0F,0x40,0x13,0x40,0x08,0x04,0x03,
+0x83,0x98,0x46,0x6F,0xC0,0x0F,0x50,0x63,0x0F,0xFF,0xFF,0x86,0xFF,0x8F,0x14,0x63,
+0x83,0x98,0x49,0xFF,0xFB,0xFA,0xFC,0xA0,0xDD,0x9E,0x54,0x20,0x80,0x03,0xE6,0x08,
+0x54,0x10,0x80,0x0C,0x90,0x22,0x4E,0xF2,0x00,0x93,0x96,0x4F,0x46,0x30,0x00,0x81,
+0x96,0x8F,0x44,0xF0,0x13,0xC0,0x38,0x07,0x80,0x00,0x40,0xF0,0x3C,0x00,0xDD,0x0F,
+0x08,0x24,0x40,0x5E,0x7C,0x9C,0xBC,0xE8,0x50,0x51,0x80,0x9C,0xB4,0x85,0x84,0x1C,
+0xFE,0x26,0xFE,0x47,0xB6,0x25,0xB4,0x25,0x44,0x0C,0xFF,0xFF,0x40,0x21,0x40,0x08,
+0xFE,0x0E,0xD5,0x72,0x50,0x51,0x80,0x9C,0xB4,0x85,0x84,0x13,0xFE,0x26,0x94,0x4A,
+0xFE,0x47,0xB6,0x25,0x40,0x21,0x48,0x08,0xB4,0x05,0x46,0x1F,0xFF,0x3F,0xD5,0x4E,
+0x50,0x51,0x80,0x9C,0xB4,0x85,0x44,0x0F,0xFF,0xCF,0xFE,0x26,0x94,0x4C,0xFE,0x47,
+0xB6,0x25,0x40,0x21,0x50,0x08,0xB4,0x05,0x46,0x1F,0xFC,0xFF,0xD5,0x3F,0x50,0x51,
+0x80,0x9C,0xB4,0x85,0x44,0x0F,0xFF,0x3F,0xFE,0x26,0x94,0x4E,0xFE,0x47,0xB6,0x25,
+0x40,0x21,0x58,0x08,0xB4,0x05,0x46,0x1F,0xF3,0xFF,0xD5,0x30,0x50,0x51,0x80,0x9C,
+0xB4,0x85,0x44,0x0F,0xFC,0xFF,0xFE,0x26,0x40,0x10,0xA0,0x08,0xFE,0x47,0xB6,0x25,
+0x40,0x21,0x60,0x08,0xB4,0x05,0x46,0x1F,0xCF,0xFF,0xD5,0x20,0x50,0x51,0x80,0x9C,
+0xB4,0x85,0x44,0x0F,0xF3,0xFF,0xFE,0x26,0x40,0x10,0xA8,0x08,0xFE,0x47,0xB6,0x25,
+0x40,0x21,0x68,0x08,0xB4,0x05,0x46,0x1F,0x3F,0xFF,0xD5,0x10,0x50,0x51,0x80,0x9C,
+0xB4,0x85,0x44,0x0F,0xCF,0xFF,0xFE,0x26,0x40,0x10,0xB0,0x08,0xFE,0x47,0xB6,0x25,
+0x40,0x21,0x70,0x08,0xB4,0x05,0x46,0x1C,0xFF,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x0E,
+0xFE,0x17,0x14,0x01,0x80,0x27,0xDD,0x9E,0x50,0x51,0x80,0x9C,0xB4,0x85,0x44,0x0F,
+0x3F,0xFF,0xFE,0x26,0x40,0x10,0xB8,0x08,0xFE,0x47,0xB6,0x25,0xB4,0x05,0x40,0x21,
+0x78,0x08,0x94,0x02,0x92,0x02,0xFE,0x87,0x14,0x21,0x80,0x27,0xDD,0x9E,0xDD,0x9E,
+0xFC,0x40,0x80,0xE0,0x44,0x04,0x34,0x38,0x5A,0x78,0x01,0x2B,0x80,0xC1,0xB4,0x20,
+0x44,0x9F,0xE0,0xFF,0x58,0x10,0x80,0x02,0xB6,0x20,0x80,0x27,0x49,0xFF,0xFB,0x17,
+0x44,0x04,0x34,0x50,0x97,0xA7,0xB4,0x20,0x40,0x63,0x20,0x08,0x40,0x10,0xA4,0x02,
+0xFE,0x77,0xB6,0x20,0x80,0x27,0x49,0xFF,0xFB,0x0A,0x44,0x04,0x38,0x3C,0xB4,0x20,
+0x58,0x10,0x80,0x02,0xB6,0x20,0x80,0x27,0x49,0xFF,0xFA,0xD6,0x44,0x04,0x38,0x58,
+0xB4,0x20,0x40,0x10,0xA4,0x02,0xFF,0x8F,0xB6,0xC0,0x80,0x27,0xD5,0x0E,0xB4,0x20,
+0x84,0xDD,0xFE,0x76,0xB6,0x20,0x84,0x21,0x49,0xFF,0xFA,0xF1,0x44,0x04,0x38,0x3C,
+0xB4,0x20,0xFF,0x8E,0xB6,0xC0,0x84,0x21,0x49,0xFF,0xFA,0xBE,0xFC,0xC0,0x92,0x00,
+0xC8,0x04,0x44,0x07,0x20,0x0C,0xD5,0x03,0x44,0x07,0x20,0x10,0xB4,0x00,0x40,0x00,
+0x30,0x08,0x92,0x0C,0xDD,0x9E,0xFC,0x00,0x80,0xC1,0x49,0xFF,0xFF,0xF3,0x84,0x40,
+0x80,0x22,0xE2,0x46,0xE8,0x05,0x38,0x10,0x0A,0x0A,0x8C,0x41,0xD5,0xFB,0xFC,0x80,
+0x44,0x27,0x20,0x1C,0x54,0x00,0x0F,0xFF,0xB4,0x22,0x92,0x2C,0x40,0x10,0xB0,0x08,
+0xFE,0x47,0xB6,0x22,0xDD,0x9E,0x44,0x27,0x20,0x34,0x54,0x00,0x0F,0xFF,0xB4,0x22,
+0x92,0x2C,0x40,0x10,0xB0,0x08,0xFE,0x47,0xB6,0x22,0xDD,0x9E,0x44,0x27,0x20,0x38,
+0x54,0x00,0x0F,0xFF,0xB4,0x22,0x92,0x2C,0x40,0x10,0xB0,0x08,0xFE,0x47,0xB6,0x22,
+0xDD,0x9E,0x44,0x27,0x20,0x54,0x84,0x30,0xB4,0x62,0x96,0x1F,0xFE,0x5E,0xFE,0x0F,
+0xB6,0x02,0xDD,0x9E,0x44,0x27,0x20,0x54,0x96,0x1F,0xB4,0x62,0x40,0x10,0x20,0x08,
+0x44,0x0F,0xF0,0xFF,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x44,0x27,0x20,0x58,
+0x96,0x1F,0x40,0x10,0x40,0x08,0xB4,0x62,0x46,0x0F,0xFF,0x0F,0x50,0x00,0x0F,0xFF,
+0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x44,0x04,0x00,0x9C,0xA6,0x00,0xDD,0x9E,
+0x46,0x10,0x00,0x81,0x04,0x00,0x80,0x6E,0x58,0x00,0x00,0x01,0x14,0x00,0x80,0x6E,
+0xDD,0x9E,0xFC,0x00,0x44,0x04,0x2C,0x1C,0x84,0x41,0xB4,0x20,0x80,0x62,0x58,0x10,
+0x81,0x00,0xB6,0x20,0xB4,0x20,0x58,0x10,0x80,0x80,0xB6,0x20,0x44,0x04,0x28,0x1C,
+0x44,0x14,0x24,0x1C,0x49,0xFF,0xFA,0x96,0xFC,0x80,0x46,0x20,0x00,0x80,0x84,0x30,
+0x50,0x41,0x01,0xD0,0xB4,0x64,0x96,0x1F,0xFE,0x5E,0xFE,0x47,0xB6,0x24,0xB4,0x64,
+0x44,0x1F,0xFF,0x0F,0x94,0x04,0xFE,0x5E,0xFE,0x0F,0xB6,0x04,0xDD,0x9E,0x00,0x00,
+0x44,0x24,0x80,0x88,0x84,0x3E,0xB4,0x62,0x96,0x06,0xFE,0x5E,0xFE,0x47,0xB6,0x22,
+0xB4,0x62,0x84,0x3D,0x94,0x01,0xFE,0x5E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0xFC,0x00,
+0x44,0x64,0x00,0x18,0x84,0x41,0xAE,0xB0,0xA6,0x72,0x84,0x1E,0xFE,0x46,0xAE,0x72,
+0xA6,0x72,0x44,0x30,0x98,0x81,0x58,0x10,0x80,0x02,0xAE,0x72,0xA6,0x72,0x58,0x10,
+0x80,0x04,0xAE,0x72,0xA6,0x73,0x58,0x10,0x80,0x02,0xAE,0x73,0xA6,0x73,0x58,0x10,
+0x80,0x04,0xAE,0x73,0xA6,0x73,0x58,0x10,0x80,0x08,0xAE,0x73,0xA6,0x73,0x58,0x10,
+0x80,0x10,0xAE,0x73,0x44,0x14,0x00,0x10,0xB6,0x61,0xAE,0xB1,0xA6,0x72,0x58,0x10,
+0x80,0x10,0xAE,0x72,0xA6,0x72,0x54,0x10,0x80,0xDF,0xAE,0x72,0xA6,0xB2,0x44,0x1F,
+0xFF,0x80,0xFE,0x57,0xAE,0x72,0xA6,0x73,0xFE,0x0E,0xAE,0x33,0xA6,0x33,0x58,0x00,
+0x00,0x20,0xAE,0x33,0xA6,0x33,0x58,0x00,0x00,0x40,0xAE,0x33,0x49,0x00,0x03,0x0B,
+0xE6,0x03,0x44,0x14,0x50,0x10,0xA6,0x32,0xE9,0x10,0x54,0x00,0x00,0xFB,0xAE,0x32,
+0xB4,0x01,0x92,0x08,0x40,0x00,0x20,0x08,0xB6,0x01,0x44,0x14,0x70,0x00,0x44,0x0E,
+0xFF,0xFF,0xB4,0x41,0xFE,0x16,0xD5,0x11,0x58,0x00,0x00,0x04,0xAE,0x32,0xB4,0x01,
+0x92,0x08,0x40,0x00,0x20,0x08,0x58,0x00,0x00,0x98,0xB6,0x01,0x44,0x14,0x70,0x00,
+0x44,0x01,0x00,0x00,0xB4,0x41,0xFE,0x17,0xB6,0x01,0xFC,0x80,0x44,0x37,0x20,0x44,
+0x46,0x0F,0xC0,0x0F,0xB4,0x23,0x50,0x00,0x0F,0xFF,0xFE,0x46,0x46,0x20,0x24,0x00,
+0xFE,0x57,0xB6,0x23,0x44,0x37,0x20,0x48,0x44,0x23,0x00,0x00,0xB4,0x23,0xFE,0x46,
+0xFE,0x57,0x44,0x27,0x20,0x4C,0xB6,0x23,0xB4,0x22,0x46,0x30,0x0C,0x00,0x92,0x2C,
+0x40,0x10,0xB0,0x08,0x58,0x10,0x82,0x52,0xB6,0x22,0xB4,0x22,0xFE,0x46,0xFE,0x5F,
+0xB6,0x22,0x44,0x27,0x20,0x50,0x46,0x30,0x00,0x90,0xB4,0x22,0x92,0x2C,0x40,0x10,
+0xB0,0x08,0x58,0x10,0x82,0x40,0xB6,0x22,0xB4,0x22,0xFE,0x0E,0xB6,0x02,0x44,0x27,
+0x20,0x04,0x46,0x0F,0xFF,0x0F,0xB4,0x22,0x50,0x00,0x0F,0xFF,0xFE,0x46,0xFE,0x5F,
+0xB6,0x22,0xB4,0x62,0x46,0x1F,0xF0,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x5E,0x46,0x30,
+0x03,0x00,0xFE,0x5F,0xB6,0x22,0x46,0x20,0x00,0x80,0x44,0x1F,0xF0,0xFF,0x50,0x41,
+0x01,0xC0,0xB4,0x64,0xFE,0x5E,0x58,0x10,0x88,0x00,0xB6,0x24,0xB4,0x24,0xFE,0x0E,
+0x44,0x12,0x00,0x00,0xFE,0x0F,0xB6,0x04,0xDD,0x9E,0x46,0x20,0x00,0x91,0x40,0x00,
+0x40,0x08,0xA0,0x56,0x96,0x49,0xFE,0x0F,0xA8,0x16,0xDD,0x9E,0xE6,0x05,0xE8,0x31,
+0x46,0x10,0x00,0x91,0x44,0xF0,0x18,0x34,0x38,0x07,0x80,0x00,0x40,0xF0,0x3C,0x00,
+0x4A,0x00,0x3C,0x00,0x06,0x14,0x22,0x30,0x3E,0x00,0xA0,0x0A,0x92,0x10,0x40,0x00,
+0x40,0x08,0x58,0x00,0x00,0x0A,0xD5,0x1C,0xA0,0x0A,0x92,0x10,0x40,0x00,0x40,0x08,
+0x58,0x00,0x00,0x23,0xD5,0x15,0xA0,0x0A,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,
+0x00,0x46,0xD5,0x0E,0xA0,0x0A,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,0x00,0x96,
+0xD5,0x07,0xA0,0x0A,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,0x01,0xF4,0xA8,0x0A,
+0xDD,0x9E,0x46,0x2F,0xFC,0x0F,0x46,0x10,0x00,0x91,0x50,0x21,0x0F,0xFF,0x5A,0x08,
+0x01,0x08,0x04,0x00,0x80,0x0E,0xFE,0x86,0x44,0x02,0x00,0x00,0xD5,0x06,0x04,0x00,
+0x80,0x0E,0xFE,0x86,0x44,0x01,0x00,0x00,0xFE,0x87,0x14,0x20,0x80,0x0E,0xA0,0x09,
+0x92,0x06,0x94,0x06,0x58,0x00,0x00,0x01,0xA8,0x09,0xDD,0x9E,0xFC,0x00,0x46,0x60,
+0x00,0x91,0x84,0x01,0xA8,0x31,0x44,0x00,0x01,0xF4,0xA8,0x32,0x83,0x86,0xB9,0x0A,
+0x46,0x0F,0xC0,0x0F,0x50,0x00,0x0C,0x00,0xFE,0x46,0x58,0x10,0x80,0x01,0xB9,0x8A,
+0xB9,0x0B,0xFE,0x0E,0x58,0x00,0x02,0x40,0xB8,0x8B,0xB9,0x0C,0x44,0x0F,0xC0,0xC0,
+0xFE,0x0E,0x58,0x00,0x20,0x01,0xB8,0x8C,0xB9,0x0D,0x46,0x0E,0x0E,0x0E,0x50,0x00,
+0x00,0xE0,0xFE,0x0E,0x46,0x10,0x60,0x11,0x50,0x10,0x82,0x01,0xFE,0x0F,0xB8,0x8D,
+0xB9,0x0E,0x46,0x0F,0xFC,0x0C,0x50,0x00,0x00,0xF3,0xFE,0x0E,0x44,0x11,0x01,0x0C,
+0xFE,0x0F,0xB8,0x8E,0x49,0xFF,0xFE,0x72,0xE6,0x03,0xA0,0x36,0x92,0x10,0x40,0x00,
+0x40,0x08,0xE9,0x1F,0x58,0x00,0x00,0x28,0xA8,0x36,0x83,0x86,0xB8,0x08,0x92,0x10,
+0x40,0x00,0x40,0x08,0x58,0x00,0x00,0x28,0xB8,0x88,0xA0,0x35,0x92,0x10,0x40,0x00,
+0x40,0x08,0x58,0x00,0x00,0x28,0xA8,0x35,0xA0,0x37,0x92,0x10,0x40,0x00,0x40,0x08,
+0x58,0x00,0x00,0x28,0xA8,0x37,0xA0,0x76,0x46,0x00,0x02,0x80,0x96,0x49,0xD5,0x1E,
+0x58,0x00,0x46,0x00,0xA8,0x36,0x83,0x86,0xB8,0x08,0x92,0x10,0x40,0x00,0x40,0x08,
+0x58,0x00,0x46,0x00,0xB8,0x88,0xA0,0x35,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,
+0x46,0x00,0xA8,0x35,0xA0,0x37,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,0x46,0x00,
+0xA8,0x37,0xA0,0x76,0x46,0x04,0x60,0x00,0x96,0x49,0xFE,0x47,0xA8,0x76,0x83,0x86,
+0xB9,0x08,0x96,0x49,0xFE,0x47,0xB9,0x88,0xA0,0x75,0x96,0x49,0xFE,0x47,0xA8,0x75,
+0xA0,0x77,0x96,0x49,0xFE,0x0F,0xA8,0x37,0x46,0x00,0x00,0x91,0x83,0x80,0xB9,0x12,
+0x58,0x10,0xBF,0x3F,0xB9,0x92,0xBA,0x13,0x44,0x1E,0xE0,0x80,0xFE,0x56,0x44,0x21,
+0x00,0x48,0xFE,0x57,0xB9,0x93,0xFC,0x80,0x46,0x00,0x00,0x91,0x50,0x30,0x00,0x44,
+0xB4,0x23,0x58,0x10,0x80,0x01,0xB6,0x23,0xB4,0x43,0x84,0x3E,0xFE,0x56,0xB6,0x23,
+0xDD,0x9E,0x92,0x00,0x44,0x17,0x30,0x10,0xB4,0x01,0x96,0x06,0xC0,0xFE,0x44,0x17,
+0x30,0x10,0xB4,0x01,0x92,0x03,0x96,0x06,0x5A,0x00,0x01,0xFD,0xDD,0x9E,0x84,0xA0,
+0xD0,0x05,0x40,0x00,0x00,0x09,0x8C,0xA1,0xD5,0xFC,0xDD,0x9E,0xC9,0x08,0x44,0x24,
+0x00,0x0C,0x96,0x06,0xA6,0x50,0x54,0x10,0x80,0xFE,0xD5,0x0A,0x5A,0x18,0x01,0x0B,
+0x44,0x24,0x00,0x0C,0x96,0x06,0xA6,0x50,0x94,0x01,0x54,0x10,0x80,0xFD,0xFE,0x0F,
+0xAE,0x10,0xDD,0x9E,0xC8,0x04,0x44,0x05,0x00,0x00,0xD5,0x03,0x44,0x05,0x00,0x10,
+0xA6,0x02,0xDD,0x9E,0xC9,0x04,0x44,0x15,0x00,0x00,0xD5,0x05,0x5A,0x18,0x01,0x05,
+0x44,0x15,0x00,0x10,0xAE,0x0A,0xDD,0x9E,0xC9,0x0A,0x44,0x24,0x80,0x80,0x96,0x06,
+0x40,0x10,0x60,0x08,0xB4,0x62,0x46,0x0F,0xEF,0xFF,0xD5,0x0B,0x5A,0x18,0x01,0x0F,
+0x44,0x24,0x80,0x80,0x96,0x06,0x40,0x10,0x64,0x08,0xB4,0x62,0x46,0x0F,0xDF,0xFF,
+0x50,0x00,0x0F,0xFF,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0xCA,0x0C,0x44,0x40,
+0xFA,0x00,0x42,0x20,0x10,0x24,0x40,0x11,0x04,0x0E,0x44,0x20,0x00,0x64,0x40,0x10,
+0x88,0x36,0xD5,0x0E,0x3C,0x2D,0xF8,0xEF,0xFE,0x84,0x44,0x00,0x03,0xE8,0x40,0x21,
+0x00,0x57,0x40,0x11,0x04,0x0D,0x44,0x20,0x00,0x64,0x40,0x10,0x88,0x37,0x96,0x49,
+0xCB,0x04,0x44,0x05,0x00,0x04,0xD5,0x05,0x5A,0x38,0x01,0x05,0x44,0x05,0x00,0x14,
+0xAC,0x40,0xDD,0x9E,0xC8,0x08,0x44,0x14,0x80,0x03,0x84,0x01,0xAE,0x08,0x44,0x15,
+0x00,0x08,0xD5,0x09,0x5A,0x08,0x01,0x09,0x44,0x14,0x80,0x03,0x84,0x42,0xAE,0x88,
+0x44,0x15,0x00,0x18,0xAE,0x09,0xDD,0x9E,0xC8,0x08,0x44,0x04,0x80,0x03,0x84,0x21,
+0xAE,0x40,0x44,0x15,0x00,0x08,0xD5,0x09,0x5A,0x08,0x01,0x0C,0x44,0x04,0x80,0x03,
+0x84,0x22,0xAE,0x40,0x44,0x15,0x00,0x18,0xA6,0x08,0x58,0x00,0x00,0x02,0xAE,0x08,
+0xDD,0x9E,0xC8,0x08,0x44,0x04,0x80,0x03,0x84,0x21,0xAE,0x40,0x44,0x15,0x00,0x08,
+0xD5,0x09,0x5A,0x08,0x01,0x0C,0x44,0x04,0x80,0x03,0x84,0x22,0xAE,0x40,0x44,0x15,
+0x00,0x18,0xA6,0x08,0x54,0x00,0x00,0xFD,0xAE,0x08,0xDD,0x9E,0xC9,0x04,0x44,0x15,
+0x00,0x00,0xD5,0x05,0x5A,0x18,0x01,0x05,0x44,0x15,0x00,0x10,0xAE,0x08,0xDD,0x9E,
+0x84,0x21,0xC0,0x04,0x5A,0x08,0x01,0x06,0x84,0x22,0x44,0x04,0x80,0x03,0xAE,0x40,
+0xDD,0x9E,0x44,0x04,0x80,0x00,0xA6,0x03,0x92,0x01,0x96,0x06,0xC0,0x1A,0xFC,0x00,
+0x44,0x04,0x80,0x03,0x84,0x22,0xAE,0x40,0x49,0x00,0x3F,0xA6,0xC8,0x11,0x3C,0x0D,
+0xF8,0xB4,0xC0,0x0E,0x49,0x00,0x3C,0x13,0x80,0xC0,0xC8,0x0A,0x49,0x00,0x24,0x51,
+0x49,0x00,0x40,0xFD,0xC0,0x05,0x80,0x06,0x80,0x26,0x49,0x00,0x23,0xB6,0xFC,0x80,
+0xDD,0x9E,0x46,0x20,0x00,0x81,0x84,0x3E,0xA0,0xD5,0x96,0x06,0xFE,0x5E,0xFE,0x0F,
+0xA8,0x15,0xDD,0x9E,0x46,0x00,0x00,0x81,0xA0,0x05,0x96,0x06,0xDD,0x9E,0x44,0x24,
+0x50,0x14,0x84,0x3E,0xB4,0x62,0x96,0x06,0xFE,0x5E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,
+0x44,0x25,0x10,0x04,0xB4,0x22,0x92,0x30,0x40,0x10,0xC0,0x08,0xFE,0x0F,0xB6,0x02,
+0xDD,0x9E,0x44,0x15,0x10,0x0C,0xB4,0x01,0x58,0x00,0x01,0x00,0xB6,0x01,0xDD,0x9E,
+0x44,0x15,0x10,0x0C,0xB4,0x01,0x92,0x08,0x40,0x00,0x20,0x08,0x58,0x00,0x00,0x01,
+0xB6,0x01,0x44,0x15,0x10,0x18,0xB4,0x01,0x96,0x00,0x5A,0x00,0x5A,0xFE,0xDD,0x9E,
+0xFC,0x40,0x44,0x00,0x01,0x2C,0x49,0x00,0x00,0x72,0x44,0x75,0x10,0x0C,0x44,0x9F,
+0xFF,0x98,0x84,0x00,0xAE,0x38,0xFA,0x18,0x10,0x93,0x80,0x00,0x49,0x00,0x00,0x67,
+0x44,0x05,0x10,0x18,0x44,0x65,0x10,0x0C,0xB4,0x00,0x96,0x00,0x5A,0x00,0xA5,0xF3,
+0xB4,0x06,0x92,0x08,0x40,0x00,0x20,0x08,0xB6,0x06,0xFC,0xC0,0xC0,0x04,0x5A,0x00,
+0x01,0x1F,0xDD,0x9E,0x44,0x14,0x80,0x82,0x44,0x22,0x00,0x00,0xAE,0x08,0x44,0x14,
+0x80,0x00,0x44,0x04,0x80,0x80,0xB6,0x41,0xB4,0x60,0xFE,0x9F,0xB6,0x40,0x44,0x24,
+0x00,0x00,0xB6,0x41,0xB4,0x60,0xFE,0x9F,0xB6,0x40,0x46,0x20,0x01,0x00,0xB6,0x41,
+0xB4,0x60,0xFE,0x9F,0xB6,0x40,0x46,0x20,0x00,0x80,0xD5,0x23,0x44,0x04,0x80,0x82,
+0x84,0x20,0xAE,0x40,0x44,0x14,0x80,0x00,0x44,0x04,0x80,0x80,0x44,0x21,0x00,0x00,
+0xB6,0x41,0xB4,0x60,0xFE,0x9F,0xB6,0x40,0x44,0x22,0x00,0x00,0xB6,0x41,0xB4,0x60,
+0xFE,0x9F,0xB6,0x40,0x44,0x24,0x00,0x00,0xB6,0x41,0xB4,0x60,0xFE,0x9F,0xB6,0x40,
+0x46,0x20,0x00,0x80,0xB6,0x41,0xB4,0x60,0xFE,0x9F,0xB6,0x40,0x46,0x20,0x01,0x00,
+0xB6,0x41,0xB4,0x60,0xFE,0x9F,0xB6,0x40,0x46,0x20,0x02,0x00,0xB6,0x41,0xB4,0x60,
+0xFE,0x9F,0xB6,0x40,0x46,0x20,0x04,0x00,0xB6,0x41,0xB4,0x20,0xFE,0x8F,0xB6,0x40,
+0xDD,0x9E,0xFC,0x00,0x49,0xFF,0xFC,0x72,0xFC,0x80,0x84,0x2E,0xFE,0x0C,0x8E,0x01,
+0x5A,0x07,0xFF,0x05,0x40,0x00,0x00,0x09,0xD5,0xFB,0xDD,0x9E,0x44,0x10,0x36,0xB0,
+0xFE,0x0C,0x8E,0x01,0x5A,0x07,0xFF,0x05,0x40,0x00,0x00,0x09,0xD5,0xFB,0xDD,0x9E,
+0xFC,0x20,0x44,0x62,0x33,0x90,0x44,0x72,0x10,0x80,0x80,0x06,0x49,0x00,0x19,0xC8,
+0xFD,0x03,0x49,0x00,0x1A,0x12,0xFD,0x03,0x50,0x23,0xFF,0xE8,0x50,0x33,0xFF,0xF4,
+0x00,0x43,0x7F,0xF9,0x49,0x00,0x68,0x5E,0xFC,0xA0,0xFC,0x00,0x84,0x20,0x44,0x20,
+0x0C,0x8C,0x44,0x02,0x33,0x90,0x49,0x00,0x5B,0xC7,0x49,0x00,0x1E,0xCB,0xFC,0x80,
+0xFC,0x00,0x49,0x00,0x4D,0x86,0x50,0x30,0x04,0x80,0x3C,0x44,0x05,0x93,0x84,0x20,
+0x2A,0x20,0x00,0x01,0xE0,0x82,0xE8,0x05,0x84,0x00,0x3E,0x07,0xEF,0x88,0xD5,0x22,
+0x5E,0xF1,0x7F,0x38,0xE8,0x0B,0x8C,0x21,0x5E,0xF1,0x7E,0x70,0x96,0x49,0xE8,0x06,
+0xE6,0x27,0x80,0x41,0xE8,0x02,0x84,0x47,0x96,0x51,0x4C,0x01,0xFF,0xEB,0xE6,0x27,
+0xE9,0x08,0x84,0x01,0x3E,0x07,0xEF,0x89,0x2E,0x07,0xEF,0x88,0x8C,0x01,0xD5,0x04,
+0x84,0x00,0x3E,0x07,0xEF,0x89,0x3E,0x07,0xEF,0x88,0x2E,0x07,0xEF,0x88,0xE6,0x02,
+0xE8,0x03,0x84,0x00,0xD5,0x07,0x49,0x00,0x3A,0x83,0xC8,0xFC,0x3E,0x07,0xEF,0x88,
+0x84,0x01,0xFC,0x80,0xFC,0x00,0x49,0x00,0x3A,0x7B,0xC8,0x04,0x49,0xFF,0xFF,0xC2,
+0xFC,0x80,0x84,0x00,0xFC,0x80,0xFC,0x40,0xB4,0x80,0xA5,0x4C,0x22,0x30,0x80,0x02,
+0xE0,0x85,0x22,0x70,0x80,0x05,0x22,0x60,0x80,0x03,0xE8,0x2B,0x96,0xD9,0xE0,0x83,
+0x81,0x43,0x40,0x92,0x8C,0x01,0x40,0xA2,0x3C,0x1A,0x80,0xC9,0x4E,0x94,0x00,0x04,
+0x52,0x64,0x80,0x00,0x40,0x21,0xA8,0x01,0x4E,0x24,0x00,0x03,0xFE,0x92,0x22,0x70,
+0x80,0x00,0x40,0x15,0x0C,0x01,0x9A,0xEF,0xFE,0x5C,0x40,0x10,0xA4,0x36,0x88,0x27,
+0xE0,0x27,0xE9,0x05,0xE0,0xA1,0x40,0x50,0xBC,0x1A,0x80,0xE5,0x9A,0x72,0xFF,0x14,
+0x42,0x23,0x84,0x24,0x40,0x42,0x18,0x96,0x40,0x21,0x18,0x56,0x88,0x82,0xD5,0x38,
+0x41,0xC3,0x80,0x13,0x40,0x91,0x70,0x01,0xE1,0x24,0xE8,0x35,0x40,0xA3,0x00,0x13,
+0x40,0x31,0x28,0x01,0xE0,0x64,0x80,0xA3,0x40,0x7E,0x28,0x01,0x40,0x52,0x3C,0x1A,
+0x4E,0x74,0x00,0x03,0xFF,0xFA,0x8A,0x65,0x4E,0x34,0x00,0x05,0x40,0x35,0x08,0x01,
+0x88,0x65,0x22,0x80,0x80,0x01,0x9B,0x55,0x8A,0xAA,0x40,0x6E,0x20,0x01,0xFF,0x74,
+0x40,0x15,0x70,0x01,0x40,0x12,0x84,0x36,0x8A,0x28,0x88,0x22,0xE0,0x29,0xE9,0x06,
+0x8A,0x48,0xE0,0x41,0x40,0x20,0xBC,0x1A,0x81,0x22,0x9A,0x7B,0x42,0x52,0x0C,0x24,
+0x42,0x34,0x84,0x24,0x40,0x52,0x9C,0xB6,0x40,0x31,0x9C,0x76,0x99,0x2B,0xB6,0x80,
+0x84,0x01,0xFC,0xC0,0x84,0x00,0xFC,0xC0,0x3C,0x03,0xF7,0xC6,0x96,0x06,0xC0,0x5F,
+0xFC,0x42,0x45,0xC2,0x33,0x90,0x84,0xE0,0x50,0x9E,0x01,0x18,0x00,0x0E,0x01,0x05,
+0x9E,0x41,0xE6,0x22,0xE9,0x03,0x5A,0x08,0x04,0x4D,0xB0,0x43,0x84,0x40,0x80,0x1C,
+0x49,0x00,0x00,0x88,0xF0,0x03,0x44,0x12,0x10,0x68,0x22,0x00,0x00,0x04,0xF0,0x81,
+0x3C,0x63,0xEF,0x08,0xB0,0x01,0x80,0x46,0x49,0xFF,0xFF,0x6F,0x81,0x40,0x3C,0x27,
+0xF7,0x3C,0xF0,0x01,0xF1,0x03,0xE0,0x02,0xE9,0x08,0x3C,0x27,0xF7,0x3D,0x9A,0xB2,
+0xE0,0x02,0x40,0x20,0x3C,0x1B,0x96,0x93,0x22,0x00,0x80,0x05,0xAC,0x8C,0xF0,0x82,
+0x44,0x12,0x10,0x74,0x3C,0x63,0xEF,0x09,0xB0,0x02,0x80,0x46,0x49,0xFF,0xFF,0x55,
+0x81,0x00,0x3C,0x27,0xF7,0x42,0xF0,0x02,0xF1,0x03,0xE0,0x02,0xE9,0x08,0x3C,0x27,
+0xF7,0x43,0x9A,0xB2,0xE0,0x02,0x40,0x20,0x3C,0x1B,0x96,0x93,0xAC,0x8D,0x80,0x1C,
+0x49,0x00,0x00,0x3B,0x4E,0xA3,0x00,0x04,0x4E,0x82,0x00,0x0C,0x44,0x00,0x01,0x24,
+0x80,0x29,0x42,0x13,0x80,0x73,0x80,0x01,0xA6,0x4F,0x58,0x10,0x80,0x40,0xAE,0x47,
+0x8C,0xE1,0x51,0xCE,0x01,0x24,0x5A,0x78,0x0B,0xAB,0xFC,0xC2,0xDD,0x9E,0x04,0x30,
+0x00,0x47,0x92,0x79,0x96,0xD7,0xE4,0x65,0xE8,0x1D,0xFC,0x00,0xFA,0x4C,0x80,0xC0,
+0x42,0x01,0x88,0x73,0x49,0x00,0x5A,0x7A,0x04,0x13,0x00,0x47,0x50,0x03,0x01,0x1B,
+0x92,0x39,0x8C,0x21,0x96,0x57,0xE6,0x25,0xE8,0x07,0xA6,0x84,0x94,0x49,0x54,0x21,
+0x00,0xF1,0xFE,0x57,0xD5,0x04,0xA6,0x44,0x54,0x10,0x80,0xF1,0xAE,0x44,0x84,0x01,
+0xFC,0x80,0x84,0x00,0xDD,0x9E,0x04,0x20,0x00,0x47,0x92,0x59,0x96,0x97,0xE4,0x45,
+0xE8,0x0E,0xFC,0x00,0x9E,0xD1,0x96,0xD8,0x5A,0x38,0xFF,0x03,0x9C,0xD4,0xFA,0x4C,
+0x42,0x01,0x88,0x73,0x49,0x00,0x5A,0x52,0x84,0x01,0xFC,0x80,0x84,0x00,0xDD,0x9E,
+0xE6,0x45,0xE8,0x14,0x04,0x30,0x00,0x47,0x92,0x79,0x96,0xD7,0x9A,0x9A,0x96,0x90,
+0x9E,0xD1,0x96,0xD8,0x97,0x1A,0x4E,0x44,0x00,0x04,0x8C,0x44,0x96,0xD0,0xFA,0x4C,
+0x42,0x01,0x88,0x73,0xB6,0x01,0x84,0x01,0xDD,0x9E,0x84,0x00,0xDD,0x9E,0xFC,0x40,
+0x85,0x46,0x80,0xC0,0x50,0x90,0x04,0x80,0x84,0xE0,0x49,0xFF,0xFE,0x5C,0xE6,0x03,
+0xE9,0x08,0x38,0x03,0x1D,0x11,0x42,0x00,0x28,0x24,0x90,0x01,0x38,0x03,0x1D,0x09,
+0x8C,0xE1,0x5A,0x78,0x12,0xF4,0x50,0x63,0x00,0x24,0x4C,0x64,0xFF,0xEF,0xFC,0xC0,
+0xFC,0x40,0xFF,0x92,0x81,0x40,0x80,0xE1,0x80,0x01,0x81,0x22,0x84,0x20,0x44,0x20,
+0x00,0x40,0x49,0x00,0x5A,0x39,0x97,0xB3,0x84,0x80,0x84,0x49,0xFA,0x22,0x83,0x8A,
+0x42,0x82,0x08,0x24,0x43,0xC2,0x04,0x73,0x84,0x00,0x38,0x3E,0x01,0x11,0x97,0x40,
+0xE0,0x69,0xE9,0x06,0x96,0x2A,0x4E,0x05,0x00,0x20,0xFA,0x61,0xD5,0x12,0xE0,0xC3,
+0xE8,0xFA,0x8C,0x01,0x5A,0x08,0x12,0xF3,0xD5,0x17,0x40,0xF1,0xA0,0x00,0x39,0xC5,
+0x3D,0x11,0x40,0xFE,0x24,0x07,0xE8,0x08,0xE0,0xDC,0xE8,0x06,0x8E,0x61,0x96,0xD8,
+0xE0,0x60,0xE8,0xF4,0xD5,0x03,0x96,0xDA,0xD5,0x02,0x84,0x7F,0x98,0x3C,0x8C,0x61,
+0x38,0x53,0x90,0x08,0xAE,0xC1,0x8C,0x82,0x5A,0x48,0x40,0xD3,0xFC,0xC0,0xFC,0x42,
+0x84,0xA0,0x80,0xE5,0x81,0x25,0xA7,0x89,0x55,0xC2,0x80,0xFF,0xF6,0x82,0xFA,0xC2,
+0xFF,0xAC,0xF6,0x83,0x2E,0x67,0xEF,0x92,0xA7,0x08,0x2F,0xE7,0xEF,0x93,0xF6,0x81,
+0x2E,0x87,0xEF,0x91,0x2E,0xA7,0xEF,0x90,0xF6,0x02,0xE2,0x86,0xE8,0x13,0xF6,0x03,
+0x88,0xC4,0x38,0x60,0x19,0x11,0xE1,0x26,0xE8,0x05,0x15,0xCF,0x80,0x01,0x83,0xC4,
+0x81,0x26,0xE0,0xC7,0xE8,0x04,0x81,0x5C,0x81,0x04,0x80,0xE6,0x8C,0x81,0x97,0x20,
+0xD5,0xEC,0x00,0x4F,0x80,0x04,0x8C,0xA1,0x3F,0xE7,0xEF,0x93,0x3E,0x47,0xEF,0x92,
+0x3E,0x87,0xEF,0x91,0x3E,0xA7,0xEF,0x90,0x8C,0x22,0x5A,0x58,0x20,0xCE,0x12,0x91,
+0x00,0x00,0xAD,0xD8,0xFC,0xC2,0xFC,0x41,0x81,0x20,0x80,0xE1,0x80,0x02,0xFA,0x2F,
+0x81,0x42,0x44,0x20,0x02,0x40,0xB6,0x7F,0xF4,0x81,0x49,0x00,0x59,0xBD,0x84,0x60,
+0x80,0xC3,0x80,0x23,0x80,0xA3,0x84,0x09,0x38,0x43,0x8C,0x00,0x43,0xE1,0x80,0x24,
+0x41,0xC3,0x8C,0x00,0x00,0x0E,0x00,0x01,0xE2,0x80,0xE8,0x1B,0x40,0x22,0x78,0x00,
+0xB5,0x1F,0x38,0x04,0x89,0x11,0xE1,0x00,0x88,0x20,0xE8,0x10,0x04,0x8F,0x80,0x01,
+0x8C,0xC1,0xE1,0x00,0x97,0xB3,0xE8,0x04,0x44,0x00,0x00,0xDF,0xD5,0x03,0x44,0x00,
+0x00,0x5F,0x8C,0xA1,0x38,0x05,0x08,0x08,0x97,0x69,0x8C,0x81,0x97,0x20,0xD5,0xE3,
+0x8C,0x62,0x5A,0x38,0x40,0xDA,0x3C,0x1F,0xFC,0x58,0x3C,0x6B,0xF8,0xB2,0x80,0x05,
+0xFC,0xC1,0xFC,0x48,0xFA,0x94,0x50,0x50,0x00,0x24,0x84,0x20,0x80,0x61,0x44,0x60,
+0x7F,0xFF,0x42,0x20,0x90,0x24,0x38,0x20,0x08,0x11,0x38,0x2F,0x85,0x09,0xE0,0x46,
+0x40,0x61,0x3C,0x1B,0x8C,0x21,0xE0,0x62,0x40,0x31,0x3C,0x1B,0x5A,0x18,0x20,0xF3,
+0x3C,0x14,0x05,0xAF,0xE0,0x23,0xE9,0x05,0x8C,0x02,0x4C,0x02,0xFF,0xE8,0xFC,0xC8,
+0x84,0x60,0x80,0x43,0x80,0xE3,0x38,0x9F,0x8D,0x11,0x40,0xA4,0x98,0x01,0xE1,0x41,
+0xE8,0x04,0x8C,0x41,0x88,0xE9,0x96,0x90,0x8C,0x61,0x5A,0x38,0x20,0xF6,0xCA,0x02,
+0x84,0x41,0x40,0x11,0x04,0x09,0x88,0x27,0x40,0x10,0x88,0x36,0x5E,0xF0,0x80,0xC9,
+0xE9,0x04,0x44,0x10,0x00,0xC8,0xD5,0x04,0x4E,0x14,0x00,0x03,0x84,0x20,0x40,0x60,
+0x84,0x0A,0x97,0xB1,0x84,0x60,0x3C,0x74,0x05,0xAF,0x38,0x2F,0x8D,0x11,0x88,0xE1,
+0xE0,0xE2,0x42,0x71,0x90,0x24,0xE8,0x03,0x8A,0x46,0xD5,0x02,0x8A,0x41,0x8C,0x61,
+0x38,0x20,0x1C,0x09,0x5A,0x38,0x20,0xF1,0xD5,0xC8,0xFC,0x00,0x84,0xC0,0x84,0x03,
+0x84,0x20,0x3E,0x67,0xEF,0xAD,0x49,0x00,0x53,0x73,0x84,0x04,0x84,0x20,0x49,0x00,
+0x53,0x6F,0x84,0x09,0x84,0x20,0x49,0x00,0x53,0x6B,0x84,0x0E,0x84,0x20,0x49,0x00,
+0x53,0x67,0x84,0x0F,0x84,0x20,0x49,0x00,0x53,0x63,0x84,0x0A,0x84,0x20,0x49,0x00,
+0x53,0x5F,0x84,0x0B,0x84,0x20,0x49,0x00,0x53,0x5B,0x3E,0x67,0xEF,0xAC,0xFC,0x80,
+0xFC,0x21,0x44,0x52,0x00,0x00,0x80,0xE2,0x80,0xC3,0xA4,0xA8,0xA4,0xE9,0x22,0x10,
+0x80,0x00,0x22,0x00,0x00,0x00,0x9A,0x59,0x9A,0x10,0xB6,0x1F,0xF1,0x81,0xA5,0x2C,
+0x3A,0x0F,0x84,0x00,0xA5,0x6D,0x49,0x00,0x1F,0x15,0x3A,0x0F,0x84,0x20,0xB4,0x1F,
+0xAC,0x38,0xF0,0x01,0xAC,0x30,0xFC,0xA1,0x46,0x27,0xFF,0xFF,0x84,0x20,0x44,0x52,
+0x2F,0x04,0x50,0x21,0x0F,0xFF,0x44,0x32,0x2E,0xD8,0x38,0x22,0x86,0x0A,0x38,0x21,
+0x86,0x0A,0x8C,0x21,0x44,0x42,0x2F,0x04,0x5A,0x18,0x0B,0xF9,0xFC,0x40,0x2E,0x37,
+0xE2,0x44,0x84,0xA0,0x40,0x91,0x88,0x08,0x81,0x44,0xD3,0x14,0x40,0x70,0x24,0x00,
+0x80,0x40,0x4C,0x23,0x80,0x0B,0x38,0x62,0x16,0x02,0xA2,0x51,0xE0,0xC1,0x40,0x13,
+0x3C,0x1B,0x38,0x15,0x16,0x0A,0xD5,0xF6,0x8C,0xA1,0x97,0x68,0x50,0x00,0x00,0x2C,
+0xD5,0xED,0xFC,0xC0,0x2E,0x27,0xE2,0x44,0x46,0x18,0x00,0x00,0x84,0x00,0x44,0x42,
+0x2E,0xAC,0x44,0x52,0x2E,0x80,0xE0,0x02,0xE8,0x0B,0x38,0x32,0x02,0x02,0xCB,0x06,
+0x38,0x32,0x82,0x02,0xE0,0x23,0x40,0x11,0xBC,0x1B,0x8C,0x01,0xD5,0xF5,0x84,0x00,
+0x44,0x52,0x2E,0x54,0x44,0x42,0x2F,0x04,0xE0,0x02,0xE8,0x0B,0x38,0x32,0x82,0x02,
+0xC3,0x06,0x38,0x32,0x02,0x02,0x8A,0x61,0x38,0x32,0x02,0x0A,0x8C,0x01,0xD5,0xF5,
+0x84,0x00,0x44,0x52,0x2E,0xAC,0x44,0x42,0x2E,0xD8,0xE0,0x02,0xE8,0x0B,0x38,0x32,
+0x82,0x02,0xC3,0x06,0x38,0x32,0x02,0x02,0x88,0x61,0x38,0x32,0x02,0x0A,0x8C,0x01,
+0xD5,0xF5,0x84,0x00,0x44,0x52,0x2E,0xAC,0x44,0x42,0x2E,0x80,0xE0,0x02,0xE8,0x0B,
+0x38,0x32,0x82,0x02,0xCB,0x06,0x38,0x32,0x02,0x02,0x8A,0x61,0x38,0x32,0x02,0x0A,
+0x8C,0x01,0xD5,0xF5,0xDD,0x9E,0xFC,0x40,0x44,0x32,0x2E,0x54,0x84,0x81,0x38,0x41,
+0x82,0x0A,0x44,0x32,0x2F,0x30,0x2E,0x57,0xE2,0x44,0x38,0x11,0x82,0x0A,0xFA,0x3C,
+0x42,0x20,0x04,0x73,0x44,0x62,0x2F,0x04,0x84,0x20,0x44,0x72,0x2E,0xD8,0x44,0x42,
+0x2E,0x80,0x44,0x92,0x2D,0xFC,0x96,0xC8,0xE2,0x65,0xE8,0x13,0x38,0xA3,0x02,0x02,
+0x38,0x33,0x86,0x02,0x88,0x6A,0x38,0xA1,0x06,0x02,0x8A,0x6A,0x38,0xA2,0x06,0x02,
+0xE1,0x43,0xE8,0x05,0x38,0x32,0x06,0x0A,0x38,0x04,0x86,0x0A,0x8C,0x21,0xD5,0xEC,
+0xFC,0xC0,0xFC,0x48,0x44,0xA2,0x2F,0x5C,0xB6,0x1F,0x2E,0x97,0xE2,0x44,0x2E,0x57,
+0xEF,0x14,0x4C,0x54,0x80,0xE0,0x84,0x20,0xFA,0x5C,0x44,0x02,0x2E,0x54,0x49,0x00,
+0x58,0x43,0x84,0x20,0xFA,0x5C,0x44,0x02,0x2E,0xAC,0x49,0x00,0x58,0x3D,0x44,0x02,
+0x2F,0x30,0x84,0x3F,0xFA,0x5C,0x49,0x00,0x58,0x37,0x84,0xE0,0xE0,0xE9,0xE8,0x15,
+0x38,0x05,0x1E,0x02,0x5A,0x0F,0xFF,0x10,0x44,0x02,0x2F,0x30,0x84,0x3E,0x38,0x10,
+0x1E,0x0A,0x44,0x02,0x2E,0x54,0x84,0x21,0xF7,0x85,0x38,0x10,0x1E,0x0A,0x80,0xC9,
+0x80,0x47,0xD5,0x06,0x8C,0xE1,0xD5,0xEB,0x84,0x20,0x80,0xC9,0x80,0x41,0xFA,0x1C,
+0xB4,0x7F,0x42,0x31,0x00,0x73,0x84,0xA0,0x45,0xE2,0x2E,0x80,0x44,0x42,0x2F,0x04,
+0x44,0x82,0x2E,0xD8,0x44,0xF2,0x2D,0xFC,0x4C,0x54,0x80,0x10,0x39,0xC2,0x0A,0x02,
+0x38,0x04,0x16,0x02,0x88,0x1C,0x39,0xC1,0x96,0x02,0x38,0x27,0x96,0x0A,0x8A,0x1C,
+0x38,0x0F,0x16,0x0A,0x8C,0xA1,0xD5,0xF1,0x85,0x20,0x44,0x82,0x2E,0xAC,0xE1,0x21,
+0xE8,0x39,0xB0,0x05,0x05,0xCF,0x80,0x00,0x38,0x70,0x26,0x02,0xFA,0x1C,0x43,0xC3,
+0x80,0x73,0x84,0xC0,0x44,0x42,0x2F,0x04,0x44,0x52,0x2E,0xD8,0x2E,0x07,0xE2,0x44,
+0xE0,0xC0,0x4E,0xF2,0x00,0x7D,0x38,0x22,0x1E,0x02,0x38,0x02,0x9A,0x02,0x94,0xF2,
+0x88,0x02,0x38,0x2E,0x1A,0x02,0x4C,0x20,0x40,0x1C,0x38,0x04,0x1A,0x02,0xC8,0x18,
+0x44,0x02,0x2E,0x28,0xF5,0x83,0x38,0x00,0x0C,0x02,0xF4,0x82,0x5A,0x07,0xFF,0x13,
+0x84,0x41,0x38,0x24,0x0C,0x0A,0x88,0x41,0xF2,0x81,0xB0,0x85,0x38,0x01,0x06,0x0A,
+0x80,0x27,0xB4,0x5F,0x49,0xFF,0xFF,0x49,0xF1,0x01,0xF5,0x03,0xF4,0x02,0x8C,0xC1,
+0xD5,0xD6,0x2E,0x07,0xE2,0x44,0xE0,0xC0,0xE9,0x37,0x49,0xFF,0xFE,0xF5,0x84,0x20,
+0x80,0xC1,0x45,0xC2,0x2E,0x80,0x2E,0x07,0xE2,0x44,0xE0,0xC0,0xE8,0x2A,0x38,0x04,
+0x1A,0x02,0x94,0xB2,0xC8,0x24,0x38,0x0E,0x1A,0x02,0xC8,0x21,0x44,0x02,0x2E,0x28,
+0x38,0x00,0x08,0x02,0x5A,0x0F,0xFF,0x07,0x44,0x02,0x2D,0xFC,0x38,0x70,0x1A,0x02,
+0xD5,0x1B,0x84,0x61,0x38,0x34,0x08,0x0A,0x44,0x32,0x2E,0x54,0x38,0x31,0x82,0x02,
+0xCB,0x0E,0xB0,0xC5,0x50,0x90,0x80,0x01,0x38,0x01,0x86,0x0A,0x44,0x12,0x2D,0xFC,
+0x38,0x10,0x88,0x02,0xB4,0x5F,0x49,0xFF,0xFF,0x10,0x80,0x29,0x8C,0xC1,0xD5,0xD4,
+0x85,0x20,0x48,0xFF,0xFF,0x8E,0x2E,0x07,0xE2,0x44,0xE0,0xC0,0xE8,0x1B,0x2E,0x07,
+0xEF,0x14,0x44,0x12,0x2F,0x30,0x8C,0x01,0x3E,0x07,0xEF,0x14,0x44,0x02,0x2E,0x28,
+0x5A,0x7F,0xFE,0x04,0x48,0xFF,0xFF,0x2B,0x38,0x25,0x1E,0x02,0x38,0x70,0x1A,0x0A,
+0x38,0x65,0x1E,0x0A,0x38,0x70,0x9E,0x02,0x80,0xC2,0xD5,0xF3,0x8D,0x21,0x48,0xFF,
+0xFF,0x70,0xFC,0xC8,0xFC,0x01,0xF0,0x81,0x84,0x00,0x80,0xC1,0x3E,0x07,0xEF,0x14,
+0x84,0x3F,0xFA,0x5C,0x44,0x02,0x2F,0x5C,0x49,0x00,0x57,0x5E,0x84,0x3F,0xFA,0x5C,
+0x44,0x02,0x2E,0x28,0x49,0x00,0x57,0x58,0xF0,0x01,0x3E,0x67,0xE2,0x44,0x49,0xFF,
+0xFE,0x5D,0xF0,0x01,0x49,0xFF,0xFE,0xFF,0xFC,0x81,0x00,0x00,0x3A,0x6F,0xAA,0xBC,
+0xEF,0xEC,0x9E,0x11,0xF0,0x81,0x83,0x81,0x84,0x80,0x85,0x40,0x4E,0x07,0x00,0x36,
+0xF0,0x01,0x84,0xC0,0x40,0x80,0x10,0x01,0x4E,0x86,0x00,0x08,0xD5,0x27,0x8C,0xC1,
+0x97,0xB0,0xE0,0xC8,0x4E,0xF2,0x00,0x23,0x40,0x93,0x08,0x08,0x50,0x34,0x80,0x04,
+0x38,0x0E,0x1A,0x11,0x38,0x1E,0x0C,0x11,0x89,0x3C,0xE0,0x01,0x40,0x7E,0x0C,0x00,
+0xE8,0xEF,0x84,0x44,0x80,0x29,0xB0,0x03,0x49,0x00,0x57,0x00,0x8C,0xC1,0x80,0x27,
+0x84,0x44,0x80,0x09,0x49,0x00,0x56,0xFA,0x97,0xB0,0x80,0x07,0xB0,0x43,0x84,0x44,
+0x49,0x00,0x56,0xF4,0x40,0x03,0x20,0x07,0xC8,0xE0,0x8D,0x41,0xF0,0x01,0x54,0xA5,
+0x00,0xFF,0xE1,0x40,0x80,0x8A,0xE9,0xCD,0xEC,0x14,0x3A,0x6F,0xAA,0x84,0xDD,0x9E,
+0xC3,0x66,0x3A,0x6F,0xAA,0xBC,0x8E,0x61,0xA7,0x83,0x00,0x90,0x00,0x02,0x96,0xD8,
+0x94,0xD9,0x2E,0x77,0xDE,0x16,0x8C,0x63,0x9D,0x51,0xEF,0xFC,0x2E,0x07,0xDE,0x17,
+0x88,0x43,0xFB,0x4F,0x87,0x80,0x85,0x00,0x00,0x32,0xFF,0xFF,0x20,0xF2,0x80,0x00,
+0x88,0x66,0x96,0xDA,0x4E,0x35,0x00,0x24,0x41,0xE1,0x9C,0x07,0x4F,0xE2,0x00,0x20,
+0x40,0xF4,0xBC,0x00,0x40,0xF7,0x80,0x10,0x4E,0xF5,0x00,0x1A,0x41,0xE7,0x80,0x07,
+0x4F,0xE2,0x00,0x16,0x83,0xC1,0x43,0xE3,0xBC,0x73,0x38,0x3F,0x0C,0x00,0x54,0xF1,
+0x80,0x20,0xE8,0x0D,0x54,0xF1,0x80,0x3F,0x5A,0xF0,0x3F,0x24,0x54,0xF1,0x80,0x1F,
+0x5A,0xF0,0x1F,0x06,0x4E,0x83,0x00,0x18,0x81,0x43,0x85,0x01,0x8C,0xA2,0xDA,0xD5,
+0xE7,0x02,0xE9,0x1E,0xA6,0x60,0x44,0x00,0x00,0x3F,0xE6,0x39,0xE8,0x08,0x94,0x8A,
+0x88,0x44,0x8C,0x21,0xAF,0x95,0x10,0x91,0x00,0x04,0xAE,0x60,0xEC,0x04,0x3A,0x6F,
+0xAA,0x84,0xDD,0x9E,0x4C,0x35,0x3F,0xEC,0x8D,0x01,0x54,0x84,0x00,0xFF,0xD5,0xE9,
+0x51,0xCE,0x00,0x01,0x8C,0xA2,0x55,0xCE,0x00,0xFF,0xDA,0xB7,0xD5,0xE2,0x80,0x0A,
+0x4E,0x83,0xFF,0xEE,0xFA,0x0F,0x4F,0xC2,0xFF,0xEB,0xD5,0xDD,0xFA,0x0F,0xDD,0x9E,
+0x3A,0x6F,0xAA,0xBC,0xEF,0xD4,0x44,0x02,0x00,0x68,0x80,0xC2,0xF2,0x81,0x81,0x43,
+0xF4,0x84,0xF5,0x82,0x3A,0x20,0x14,0x00,0x22,0x0F,0x80,0x24,0xF0,0x85,0x00,0x0F,
+0x80,0x4C,0xF0,0x83,0xB0,0x06,0x3A,0x20,0x14,0x20,0x4E,0xA2,0x00,0x23,0x81,0x21,
+0x2E,0x87,0xDE,0x16,0xA6,0x72,0xA6,0x33,0x80,0x69,0x42,0x30,0xA0,0x73,0x38,0x01,
+0x80,0x00,0x80,0x26,0x96,0x2E,0x8C,0x27,0x84,0xC0,0xC8,0x0E,0x48,0x00,0x00,0x20,
+0x00,0x20,0x7F,0xFF,0x80,0x69,0xA6,0x00,0x42,0x31,0x20,0x73,0x38,0x01,0x80,0x00,
+0x8C,0x24,0x96,0x2E,0xC0,0x14,0x8C,0xC1,0x97,0xB0,0x80,0x01,0x4C,0x65,0x7F,0xF2,
+0xF0,0x04,0xEC,0x2C,0x3A,0x6F,0xAA,0x84,0xDD,0x9E,0xA6,0xBA,0xA6,0x7B,0x80,0x69,
+0x42,0x31,0x20,0x73,0x38,0x01,0x84,0x08,0x8C,0xC1,0x97,0xB0,0xE2,0xCA,0xE8,0xF1,
+0xF0,0x01,0x41,0xC3,0x08,0x08,0x40,0x70,0x70,0x00,0x80,0x07,0x80,0x29,0xB0,0x86,
+0xF3,0x03,0xF4,0x02,0x49,0xFF,0xFF,0x46,0x5A,0x08,0x1F,0xE9,0xF0,0x04,0xE6,0x0B,
+0xE8,0xEC,0xF0,0x01,0xF3,0x05,0xF2,0x04,0x38,0x00,0x70,0x11,0x58,0x11,0x00,0x20,
+0xE0,0x03,0x8C,0x41,0xE9,0xE2,0xA6,0xFA,0xA6,0x3B,0x80,0x89,0x42,0x41,0xA0,0x73,
+0x96,0x90,0xF2,0x84,0x38,0x12,0x00,0x08,0xD5,0xD8,0x92,0x00,0xB4,0x81,0x3A,0x6F,
+0xA8,0xBC,0xB5,0x00,0xA1,0x81,0xA0,0x09,0xA0,0x4A,0xC4,0x07,0x44,0xA0,0x7F,0xFF,
+0xFA,0xA0,0x80,0xEA,0x48,0x00,0x00,0x25,0xC8,0xFA,0xD5,0x4D,0xE1,0x49,0xE8,0x26,
+0x85,0xFF,0x4E,0x45,0x00,0x03,0x85,0xE1,0x40,0x44,0x84,0x0A,0x42,0x47,0x90,0x24,
+0x85,0x21,0x4E,0x04,0x00,0x03,0x85,0x3F,0x4E,0x04,0x00,0x03,0xFE,0x02,0x90,0x01,
+0x42,0x04,0x80,0x24,0x85,0x21,0x4E,0x14,0x00,0x03,0x85,0x3F,0x4E,0x14,0x00,0x03,
+0xFE,0x4A,0x8E,0xA1,0x90,0x21,0x97,0x68,0x42,0x14,0x84,0x24,0xC5,0x0E,0x81,0x24,
+0x4E,0x44,0xFF,0xDE,0x52,0x92,0x00,0x00,0xD5,0xDA,0x81,0xE0,0x4E,0x04,0x00,0x04,
+0x52,0xF0,0x00,0x00,0xE0,0xEF,0xE9,0xD5,0xFF,0x84,0x42,0x62,0x20,0x73,0xFE,0x04,
+0x88,0xC1,0x42,0x02,0x10,0x73,0x81,0x22,0x80,0xE3,0x49,0x00,0x0C,0x15,0x84,0x41,
+0x4E,0x64,0x00,0x04,0x44,0x2F,0xFF,0xFF,0x10,0x24,0x80,0x00,0x80,0x26,0x4E,0x64,
+0x00,0x03,0xFE,0x72,0x40,0x10,0x80,0x36,0x40,0x00,0x94,0x0A,0x96,0x02,0xB6,0x27,
+0x42,0x00,0x00,0x24,0x3A,0x6F,0xA8,0x84,0xDD,0x9E,0x92,0x00,0xE6,0x62,0xE9,0x3A,
+0xA5,0x08,0xE0,0x80,0xE9,0x04,0xA4,0x10,0x4A,0x00,0x78,0x20,0x46,0x47,0xFF,0xFF,
+0x50,0x42,0x0F,0xFF,0x88,0x83,0x38,0x50,0x91,0x01,0xE0,0x05,0xE8,0x28,0x3A,0x6F,
+0xA4,0x3C,0x84,0x80,0x8E,0x61,0xE0,0x83,0xE8,0x20,0x9D,0x61,0x95,0xE1,0x38,0x40,
+0x91,0x01,0x97,0x69,0xE0,0x04,0xE9,0x17,0x38,0x60,0x95,0x01,0x40,0x92,0x84,0x08,
+0xE0,0x06,0xE8,0x11,0x38,0x11,0x1C,0x01,0x9B,0x04,0x38,0x51,0x24,0x01,0x9A,0x30,
+0x98,0xE0,0xFE,0x0C,0x42,0x02,0x14,0x73,0x40,0x11,0x84,0x0A,0x88,0x01,0x40,0x00,
+0x0C,0x16,0xD5,0x0B,0x80,0x85,0xD5,0xE0,0x84,0x00,0xD5,0x07,0x38,0x01,0x11,0x01,
+0xDD,0x9E,0x84,0x00,0x4A,0x00,0x78,0x20,0x3A,0x6F,0xA4,0x04,0xDD,0x9E,0x92,0x00,
+0x3A,0x6F,0xA8,0xBC,0x80,0xC0,0x81,0x21,0x80,0xE2,0x4E,0x14,0x00,0x05,0xFF,0x82,
+0x52,0x90,0x80,0x00,0x80,0x06,0x49,0x00,0x0B,0xDA,0x81,0x40,0x80,0x09,0x49,0x00,
+0x0B,0xD6,0x8A,0x0A,0x80,0x2A,0x96,0x00,0xE6,0x36,0xE9,0x0E,0x84,0x41,0x4E,0x64,
+0x00,0x03,0x84,0x5F,0x4E,0x64,0x00,0x03,0xFF,0xB2,0x90,0xC1,0x8E,0x21,0xFF,0x94,
+0x91,0x21,0x96,0x48,0xD5,0xF2,0x98,0x81,0x96,0x90,0xE6,0x56,0xE8,0xF0,0xCE,0x05,
+0x4E,0x92,0x00,0x43,0x81,0x46,0xD5,0x06,0x81,0x46,0x4E,0x64,0x00,0x04,0x52,0xA3,
+0x00,0x00,0xE1,0x2A,0xE8,0x08,0x40,0x34,0xA0,0x08,0x40,0x31,0x98,0x76,0x4E,0x34,
+0x00,0x0B,0xD5,0x07,0x40,0x33,0x20,0x08,0x40,0x31,0xA4,0x76,0x4E,0x34,0x00,0x04,
+0x52,0x31,0x80,0x00,0x44,0x12,0x04,0x38,0x80,0x03,0x50,0x20,0x80,0x16,0x84,0x6B,
+0x49,0xFF,0xFF,0x76,0xE1,0x2A,0x84,0x2A,0xE8,0x06,0x52,0x00,0x03,0x84,0x40,0x00,
+0x04,0x16,0xD5,0x03,0x40,0x00,0x04,0x16,0x4E,0x65,0x00,0x04,0x52,0x00,0x00,0x00,
+0x5A,0x07,0xA6,0x06,0x5E,0xF0,0x7F,0xA7,0xE9,0x0A,0xD5,0x03,0x44,0x00,0x00,0x5A,
+0x5E,0xF0,0x00,0x5B,0xE9,0x06,0x44,0x00,0x00,0x5A,0xD5,0x03,0x44,0x0F,0xFF,0xA7,
+0xB6,0x07,0x84,0x01,0xD5,0x02,0x80,0x09,0x3A,0x6F,0xA8,0x84,0xDD,0x9E,0x92,0x00,
+0x3A,0x6F,0xA8,0xBC,0x80,0xE0,0x84,0x00,0xAE,0x10,0xEF,0xF8,0xB4,0x07,0x81,0x21,
+0x50,0xA1,0x00,0x00,0x49,0x00,0x0B,0x6B,0x10,0x0F,0x80,0x04,0x04,0x03,0x80,0x01,
+0x49,0x00,0x0B,0x65,0x10,0x0F,0x80,0x05,0x50,0x83,0x80,0x08,0x04,0x03,0x80,0x02,
+0x49,0x00,0x0B,0x5D,0x10,0x0F,0x80,0x06,0x04,0x04,0x00,0x01,0x49,0x00,0x0B,0x57,
+0x10,0x0F,0x80,0x07,0x00,0x1F,0x80,0x04,0xE6,0x2F,0xE8,0x0F,0x00,0x0F,0x80,0x07,
+0xE6,0x0F,0xE8,0x0B,0x88,0x01,0x5A,0x00,0x1C,0x09,0x00,0x1F,0x80,0x06,0x00,0x0F,
+0x80,0x05,0x88,0x01,0xE4,0x1C,0xE9,0x26,0x80,0xA7,0x84,0x20,0xB0,0x01,0x98,0x81,
+0x50,0x32,0x80,0x08,0xB4,0x05,0x84,0x81,0x4E,0x04,0x00,0x04,0x44,0x4F,0xFF,0xFF,
+0x4E,0x04,0x00,0x03,0xFE,0x02,0x90,0x01,0xFE,0x24,0xAA,0x29,0xA6,0x10,0xE4,0x02,
+0xE9,0x07,0x5E,0xF0,0x00,0x22,0xE8,0x06,0x8E,0x01,0x96,0x00,0xD5,0x04,0x84,0x01,
+0xD5,0x02,0xFA,0x10,0x18,0x01,0x00,0x01,0xDB,0xE6,0x8C,0x22,0x5A,0x18,0x04,0xE0,
+0xD5,0xCA,0xB4,0x67,0x04,0x24,0x00,0x01,0xA0,0x79,0xA1,0x3A,0x42,0x01,0x88,0x24,
+0x42,0x02,0x04,0x75,0xFF,0x9A,0x84,0x3C,0x8A,0xC2,0xFE,0x0C,0x42,0x03,0x18,0x73,
+0x4E,0x05,0x00,0x67,0xCB,0x0C,0x44,0x00,0x00,0x40,0x14,0x04,0x80,0x01,0x44,0x00,
+0x00,0x64,0xB6,0x69,0x10,0x05,0x00,0x00,0x48,0x00,0x00,0x53,0xCA,0x0C,0x44,0x00,
+0x00,0x40,0xB6,0x09,0x44,0x00,0x00,0x64,0x14,0x24,0x80,0x01,0x10,0x05,0x00,0x00,
+0x48,0x00,0x00,0x47,0x49,0x00,0x0A,0xC8,0x9A,0x46,0xFF,0xB2,0x9B,0x30,0xB4,0xC7,
+0x04,0x04,0x00,0x01,0x90,0x81,0x88,0x06,0xE0,0x80,0x90,0x21,0xE8,0x16,0x9A,0xC1,
+0x44,0x20,0x00,0x64,0xFE,0xD4,0x9B,0x04,0x40,0x61,0x90,0xD6,0x4E,0x65,0x00,0x0A,
+0x5E,0xF3,0x00,0x65,0xE9,0x02,0x80,0xC2,0x52,0x63,0x00,0x64,0x97,0xB0,0xD5,0x03,
+0x50,0x61,0x00,0x00,0x10,0x65,0x00,0x00,0xA0,0xF9,0xFF,0x1A,0x4E,0x45,0x00,0x03,
+0x80,0x64,0xB4,0x47,0x8A,0x41,0x80,0x02,0x4E,0x24,0x00,0x03,0xFE,0x12,0xA1,0xBA,
+0x88,0x60,0xFF,0x72,0x4E,0x55,0x00,0x04,0x50,0x62,0x80,0x00,0x04,0x04,0x00,0x01,
+0x9A,0x41,0x80,0x01,0x4E,0x14,0x00,0x03,0xFE,0x0A,0x88,0x06,0xE0,0x03,0xE8,0x05,
+0xB6,0x89,0x14,0x24,0x80,0x01,0xD5,0x04,0xB6,0x29,0x14,0x54,0x80,0x01,0xB4,0x09,
+0xC8,0x09,0x04,0x04,0x80,0x01,0xC8,0x06,0x10,0x05,0x00,0x00,0xD5,0x04,0x84,0x00,
+0xD5,0x02,0x84,0x01,0xEC,0x08,0x3A,0x6F,0xA8,0x84,0xDD,0x9E,0x3A,0x6F,0xAA,0xBC,
+0xEF,0x9C,0x85,0x00,0x81,0x40,0x80,0xE1,0xB6,0x5F,0x80,0x28,0xFA,0x40,0xB0,0x14,
+0x81,0x23,0x80,0xC4,0x14,0x8F,0x80,0x04,0x95,0xFA,0x49,0x00,0x54,0x3D,0x80,0x28,
+0xB0,0x06,0x84,0x48,0x49,0x00,0x54,0x38,0x88,0xEA,0x80,0xAA,0x50,0x14,0x00,0x00,
+0x45,0xE2,0x30,0x20,0xD7,0x3C,0xA6,0x2B,0x22,0x82,0x80,0x00,0x44,0x32,0x33,0x08,
+0x38,0x2F,0x01,0x01,0x88,0x28,0x8A,0x49,0xF2,0x8C,0xA6,0x2A,0x5E,0xF1,0x0C,0x9A,
+0x38,0x01,0x81,0x01,0x8A,0x06,0xF0,0x8D,0xE8,0x28,0x5E,0xF0,0x19,0x33,0xE8,0x25,
+0x91,0x05,0x84,0x80,0xB0,0x0C,0xB0,0x94,0x38,0xF0,0x12,0x02,0x94,0x23,0x88,0x02,
+0x84,0x60,0xB0,0x8C,0x38,0x21,0x0E,0x02,0x42,0x27,0x88,0x24,0x4E,0x27,0x00,0x04,
+0x90,0x48,0xD5,0x05,0xFE,0x92,0x90,0x48,0x52,0x21,0x00,0x00,0x05,0xC0,0x00,0x00,
+0x43,0xC1,0x20,0x73,0x1D,0xC0,0x00,0x01,0x5A,0x30,0x01,0x04,0x84,0x61,0xD5,0xEA,
+0x5A,0x40,0x01,0x04,0x80,0x83,0xD5,0xDF,0x8C,0xA4,0xD5,0xC5,0x90,0x25,0x4E,0x16,
+0x00,0x03,0x84,0x21,0xF0,0x14,0x50,0x2F,0x80,0x1D,0x40,0x00,0x04,0x16,0xF0,0x94,
+0xF0,0x15,0x40,0x00,0x04,0x16,0xF0,0x95,0xF0,0x16,0x40,0x00,0x04,0x16,0xF0,0x96,
+0xF0,0x17,0x40,0x10,0x04,0x36,0xF1,0x97,0xB0,0x14,0xB0,0x48,0x49,0xFF,0xFE,0xBA,
+0x5A,0x00,0x01,0x04,0x48,0x00,0x00,0x7C,0x04,0x8F,0x80,0x09,0x05,0xCF,0x80,0x08,
+0x10,0x0F,0x80,0x1E,0x80,0x28,0x80,0x1C,0x50,0x2F,0x80,0x14,0x49,0xFF,0xFE,0x3A,
+0x5A,0x08,0x01,0x6E,0x52,0x14,0x00,0x00,0x52,0x0E,0x00,0x00,0xF1,0x92,0x42,0x14,
+0x18,0x24,0x42,0x10,0x24,0x75,0xF1,0x93,0xF1,0x08,0xF0,0x91,0xF0,0x09,0xFF,0x8C,
+0x42,0x60,0x24,0x75,0xF0,0x8E,0xF0,0x05,0xFE,0x8A,0xF6,0x90,0x84,0xC0,0xF2,0x8F,
+0x10,0x0F,0x80,0x1C,0x81,0x06,0x81,0x26,0x45,0xC2,0x30,0x20,0x44,0x42,0x33,0x08,
+0x4C,0xA3,0x80,0x2A,0x22,0x05,0x00,0x00,0xB0,0x51,0x89,0x20,0x00,0x05,0x00,0x03,
+0x50,0x2F,0x80,0x0F,0xB0,0xC4,0x38,0x0E,0x01,0x01,0xF4,0x81,0xF0,0x8A,0x00,0x05,
+0x00,0x02,0x38,0x02,0x01,0x01,0xF0,0x8B,0x50,0x0F,0x80,0x28,0x49,0xFF,0xFD,0x60,
+0x22,0x15,0x00,0x00,0x50,0x2F,0x80,0x0F,0x42,0x80,0x04,0x73,0xB0,0xC4,0xB0,0x4E,
+0x50,0x0F,0x80,0x28,0x49,0xFF,0xFD,0x54,0x2A,0x15,0x00,0x02,0x42,0x60,0x04,0x73,
+0xF4,0x01,0xD5,0xD7,0x40,0x04,0x24,0x16,0x49,0x00,0x09,0xA6,0x44,0x10,0x00,0x6E,
+0xFE,0x0C,0x50,0x10,0x00,0x32,0x80,0x01,0x96,0x49,0x5C,0xF0,0x93,0x89,0xE9,0x03,
+0x44,0x00,0x13,0x88,0x12,0x0F,0x80,0x0D,0x40,0x03,0x24,0x16,0x49,0x00,0x09,0x94,
+0x44,0x10,0x00,0x68,0xFE,0x0C,0x50,0x00,0x00,0x32,0x80,0x20,0x96,0x01,0x5C,0xF0,
+0x13,0x89,0xE9,0x03,0x44,0x10,0x13,0x88,0x12,0x1F,0x80,0x0C,0xB4,0x1F,0xB0,0x46,
+0x84,0x48,0x49,0x00,0x53,0x33,0xEC,0x64,0x3A,0x6F,0xAA,0x84,0xDD,0x9E,0x92,0x00,
+0x3A,0x6F,0xAA,0xBC,0x51,0xFF,0xFA,0x9C,0xF0,0x8D,0x84,0x00,0xF1,0x9D,0xF2,0x9E,
+0x10,0x0F,0x80,0x9D,0x84,0x20,0x44,0x20,0x02,0x68,0x50,0x0F,0x82,0xF8,0x49,0x00,
+0x53,0x43,0x84,0x20,0x44,0x20,0x00,0x66,0x44,0x02,0x2F,0x88,0x49,0x00,0x53,0x3C,
+0x84,0x20,0x84,0x4B,0x44,0x02,0x13,0x1C,0x49,0x00,0x53,0x36,0x84,0x00,0x84,0x3F,
+0x3C,0x0F,0xFB,0xE0,0x3E,0x07,0xEF,0x16,0x3E,0x17,0xEF,0x15,0x3C,0x0B,0xF7,0xA7,
+0x3C,0x0B,0xFA,0x03,0x44,0x12,0x33,0x48,0xF0,0x0D,0x44,0x22,0x30,0xC8,0x44,0x30,
+0x00,0x64,0xF4,0x1E,0x49,0xFF,0xF9,0x59,0xF0,0x93,0x3C,0x07,0xF9,0xF5,0x5E,0xF0,
+0x01,0x68,0xE9,0x05,0x90,0x01,0xF0,0x94,0x48,0x00,0x00,0x05,0x44,0x00,0x00,0xB4,
+0xF0,0x94,0xF0,0x13,0x4E,0x02,0x01,0xC7,0x84,0x00,0xF0,0x8C,0xF0,0x9A,0x84,0x08,
+0xF0,0x8F,0x84,0x00,0xF0,0x90,0xF0,0x8B,0xF0,0x0C,0xF2,0x0C,0x94,0x41,0x44,0x02,
+0x33,0x48,0xF3,0x0C,0x38,0x20,0x09,0x00,0x88,0x01,0xF2,0x91,0xF0,0xA3,0xFA,0x42,
+0xF0,0x0B,0xFE,0x9C,0xF2,0xA4,0xF0,0x8E,0xF0,0x23,0xF1,0x11,0xA6,0x01,0xE2,0x20,
+0x4E,0xF2,0x01,0x9D,0xF1,0x11,0x44,0x02,0x30,0xC8,0x88,0x01,0xF1,0x24,0x38,0x00,
+0x04,0x00,0x96,0x36,0x4E,0x02,0x01,0x8B,0x50,0x0F,0x80,0x9D,0xF0,0x81,0xF0,0x0F,
+0x84,0xC0,0xF0,0x82,0x84,0x01,0xF0,0x83,0x50,0x0F,0x80,0x9E,0xF0,0x84,0x50,0x7F,
+0x82,0x08,0xB0,0x28,0xF0,0x89,0x22,0x1F,0x80,0x18,0xB6,0xFF,0xF6,0x85,0xF6,0x86,
+0xF6,0x87,0xF6,0x88,0xF0,0x11,0x44,0x20,0x00,0x40,0xF3,0x10,0x44,0x42,0x30,0xC8,
+0x04,0x5F,0x80,0x0D,0x49,0x00,0x14,0x0F,0x2E,0x17,0xEF,0x16,0x8C,0x21,0x3E,0x17,
+0xEF,0x16,0xF1,0x1D,0xE0,0x01,0x4E,0xF3,0x01,0x62,0xF0,0x0D,0x50,0x13,0x80,0x00,
+0x00,0x2F,0x80,0x9D,0x49,0xFF,0xFB,0x6C,0x02,0x0F,0x80,0x4F,0x2E,0x10,0x0B,0x40,
+0xE2,0x20,0xE9,0x09,0x00,0x0F,0x80,0x9D,0x9E,0x42,0xE6,0x2D,0x4E,0xF3,0x00,0x2F,
+0x48,0x00,0x03,0xFD,0x00,0x1F,0x80,0x9D,0x80,0x06,0x96,0xB0,0xE2,0x41,0xE8,0x0B,
+0x38,0xF3,0x9A,0x11,0xF2,0x14,0xE0,0x4F,0xE8,0x03,0x8C,0x01,0x96,0x01,0x8C,0xC1,
+0x48,0xFF,0xFF,0xF5,0x3C,0x13,0xFA,0x03,0xE2,0x20,0xE8,0xE5,0x5C,0xF0,0x00,0x3D,
+0x3C,0x0B,0xFA,0x03,0x80,0x20,0xE9,0x03,0x44,0x10,0x00,0x3C,0x96,0x49,0x84,0x00,
+0x50,0x2F,0x81,0x90,0x50,0x3F,0x82,0x08,0xE2,0x01,0xE8,0xD5,0x38,0x41,0x82,0x01,
+0x38,0x41,0x01,0x09,0x8C,0x01,0x96,0x00,0xD5,0xF8,0xE6,0x06,0x80,0x20,0xE9,0x03,
+0x44,0x10,0x00,0x05,0x55,0xE0,0x80,0xFF,0x50,0x0F,0x7F,0xFF,0x84,0x20,0x80,0x61,
+0x80,0x41,0xF0,0x92,0xF0,0x12,0xE0,0x40,0x4E,0xF2,0x03,0xC1,0x9C,0x11,0x96,0x00,
+0xF0,0x8F,0x94,0x92,0x50,0x0F,0x82,0x08,0x88,0x40,0xF6,0x0F,0xE2,0xDE,0xE8,0x4D,
+0x50,0x0F,0x82,0x08,0x95,0x32,0x88,0x80,0xA7,0xD3,0xA6,0x23,0x00,0x91,0x00,0x02,
+0x9A,0x38,0x96,0x02,0xA7,0x62,0x81,0x00,0x4E,0x04,0x00,0x04,0x52,0x80,0x00,0x00,
+0x5A,0x88,0x01,0x39,0x40,0x54,0x94,0x01,0x97,0x6A,0x81,0x05,0x4E,0x54,0x00,0x04,
+0x52,0x82,0x80,0x00,0x5A,0x88,0x01,0x2F,0xA5,0x20,0x02,0x81,0x00,0x00,0x40,0xF2,
+0x00,0x11,0x40,0xA4,0x00,0x11,0xE1,0x4F,0x40,0x44,0x3C,0x1A,0x97,0x23,0xC4,0x1B,
+0x9A,0x38,0xFA,0x22,0x42,0x04,0x84,0x73,0xF1,0x0D,0x40,0x54,0x94,0x01,0x38,0x30,
+0x81,0x11,0x44,0x00,0x00,0x64,0xFE,0xC4,0xFA,0x02,0x42,0x72,0x80,0x73,0x38,0x10,
+0x9D,0x11,0x44,0x00,0x00,0x64,0xFE,0x44,0x40,0x31,0x90,0x76,0x40,0x10,0x90,0x36,
+0x96,0xDB,0x96,0x4B,0xE0,0x61,0x80,0x03,0x40,0x00,0xBC,0x1B,0x5E,0xF0,0x00,0x3C,
+0xE9,0x06,0x8C,0xC1,0x97,0xB0,0xD5,0xB3,0xF2,0x0F,0xD5,0xA5,0x00,0x0F,0x82,0x0A,
+0xE6,0x02,0x4E,0xF3,0x03,0x64,0x84,0x04,0xF0,0x8F,0xF6,0x0B,0x44,0x70,0x00,0x00,
+0x50,0x9F,0x82,0x08,0x00,0x0F,0x80,0x9D,0xE2,0xE0,0xE8,0x07,0x38,0xF4,0x9E,0x11,
+0xF0,0x1E,0xE0,0x0F,0x4E,0xF3,0x01,0x7D,0xF0,0x1D,0x80,0x86,0xB6,0x1F,0xF0,0x0F,
+0x00,0x3F,0x80,0x9D,0xF0,0x81,0x44,0x12,0x30,0xC8,0x50,0x2F,0x82,0x08,0x44,0x52,
+0x2F,0x88,0xF0,0x0D,0x49,0xFF,0xFB,0x4E,0xF0,0x8B,0x00,0x0F,0x80,0x9D,0xB1,0xF1,
+0xF0,0x99,0x44,0x02,0x00,0x78,0x84,0xC0,0x3A,0x20,0x14,0x00,0x3A,0x23,0x94,0x20,
+0x84,0x21,0x84,0x4B,0xB0,0x2E,0xF6,0xA9,0xF6,0xAA,0xF6,0xAB,0x49,0x00,0x51,0xDC,
+0x80,0x26,0xFA,0x5C,0xB0,0x35,0x49,0x00,0x51,0xD7,0x80,0x26,0x44,0x20,0x00,0x2C,
+0x50,0x0F,0x81,0x00,0x49,0x00,0x51,0xD0,0x50,0x9F,0x81,0x58,0x80,0x26,0xFA,0x5C,
+0x50,0x0F,0x81,0x2C,0x49,0x00,0x51,0xC8,0x80,0x09,0x80,0x26,0x44,0x20,0x00,0x38,
+0x49,0x00,0x51,0xC2,0x50,0xAF,0x82,0x08,0x2E,0x07,0xDE,0x16,0xF6,0x95,0xF0,0x92,
+0x14,0x9F,0x80,0x25,0x2E,0x07,0xDE,0x17,0xF7,0xA1,0xF0,0xA2,0xF5,0x15,0xF1,0x19,
+0x4C,0x50,0xC1,0x64,0x00,0x0F,0x81,0x86,0xF4,0x29,0xF0,0x95,0x00,0x0F,0x81,0x85,
+0xF3,0x2A,0xF0,0x92,0xF1,0x2B,0x05,0xEF,0x80,0x5D,0x00,0x6F,0x81,0x5B,0x00,0x7F,
+0x81,0x5A,0x00,0x9F,0x81,0x59,0x00,0xAF,0x81,0x58,0xF0,0x0E,0xF2,0x0B,0xE2,0x02,
+0x4E,0xF3,0x02,0x67,0x00,0x0F,0x80,0x54,0x10,0xAF,0x81,0x58,0x10,0x0F,0x81,0x86,
+0x00,0x0F,0x80,0x48,0x10,0x9F,0x81,0x59,0x10,0x0F,0x81,0x85,0xF0,0x0E,0x10,0x7F,
+0x81,0x5A,0xE2,0x02,0x10,0x6F,0x81,0x5B,0x15,0xEF,0x80,0x5D,0xF4,0xA9,0xF3,0xAA,
+0xF1,0xAB,0xE8,0x24,0xB1,0xAC,0x40,0x31,0x90,0x76,0x50,0x0F,0x82,0x08,0x40,0x40,
+0x90,0x96,0x80,0x46,0xF1,0x19,0xF3,0xD9,0xF4,0xDA,0x49,0xFF,0xFD,0x29,0xF5,0x0E,
+0x44,0x10,0x00,0x38,0x50,0x0F,0x85,0x60,0x42,0x02,0x84,0x73,0x50,0x00,0x7D,0x9C,
+0x3A,0x23,0x0C,0x00,0x3A,0x20,0x0C,0x20,0x8C,0xA1,0xF0,0x0B,0x97,0x68,0xD8,0xF3,
+0xF0,0x0E,0xF1,0x0B,0xE2,0x01,0x4E,0xF3,0x02,0x85,0xF0,0x11,0x8C,0x01,0x96,0x00,
+0xF0,0x91,0xF0,0x0B,0xF0,0x8E,0x48,0xFF,0xFE,0x61,0xF0,0x1A,0x5A,0x00,0x01,0x0D,
+0xF0,0x0C,0x8C,0x01,0x14,0x0F,0x80,0x0C,0x5A,0x00,0x20,0x04,0x48,0xFF,0xFE,0x46,
+0xD5,0x03,0xF0,0x13,0xF0,0x8B,0xF1,0x13,0x50,0x0F,0x81,0x90,0x49,0x00,0x58,0x62,
+0x3C,0x0F,0xFB,0xE0,0x44,0x10,0x00,0xFF,0x44,0x02,0x2F,0xF0,0x84,0x4B,0x3C,0x60,
+0x05,0x95,0x49,0x00,0x51,0x39,0xF0,0x0B,0x5A,0x08,0x02,0x06,0x95,0xB2,0x84,0x05,
+0x40,0x63,0x00,0xD6,0xF0,0x0B,0x8E,0x03,0x96,0x00,0xE6,0x03,0xE8,0x06,0x95,0xB1,
+0x84,0x03,0x40,0x63,0x00,0xD6,0xD5,0x05,0xF0,0x0B,0xE6,0x06,0xE9,0x02,0x90,0xC1,
+0x84,0x45,0x42,0x03,0x08,0x24,0x90,0x03,0xF0,0x8D,0x84,0x07,0xFE,0x34,0x90,0x03,
+0xF0,0x8E,0x84,0x03,0xFE,0x34,0x90,0x01,0x85,0x40,0xF0,0x8F,0x40,0x83,0x04,0x0A,
+0x50,0x1F,0x82,0xF8,0x80,0xEA,0xF2,0x90,0xF2,0x0B,0x54,0x05,0x00,0xFF,0xE2,0x02,
+0x4E,0xF2,0x00,0x7C,0x00,0x00,0x80,0x2B,0xC0,0x14,0x5A,0x00,0x11,0x13,0x00,0x00,
+0x80,0x2C,0xC0,0x0F,0x5A,0x00,0x1F,0x0E,0x9E,0x81,0xE6,0x42,0xE9,0x0C,0x9E,0x83,
+0xE6,0x44,0xE9,0x0B,0x8E,0x1C,0xE6,0x03,0xF0,0x0F,0x40,0x03,0x3C,0x1A,0xD5,0x07,
+0x80,0x08,0xD5,0x05,0xF0,0x0D,0xD5,0x03,0x04,0x0F,0x80,0x0E,0x3C,0x2D,0xFB,0xD6,
+0x54,0x21,0x20,0x00,0xC2,0x06,0x84,0x46,0xFE,0x14,0xF2,0x10,0x40,0x00,0x08,0x16,
+0x04,0x20,0x80,0x08,0xE0,0x40,0xE9,0x05,0x44,0x00,0x00,0x01,0x3C,0x0F,0xFC,0x4A,
+0x00,0x00,0x80,0x2E,0xC0,0x44,0x44,0x02,0x13,0x1C,0x38,0x00,0x28,0x00,0xF0,0x8C,
+0xC8,0x3E,0x3C,0xFD,0xFC,0x4A,0x5A,0xF8,0x01,0x3B,0x44,0x00,0x00,0x38,0x42,0x93,
+0x80,0x24,0x44,0x02,0x13,0x4C,0x88,0x09,0x51,0xE0,0x00,0x0C,0x80,0x01,0x3A,0x20,
+0x14,0x04,0x3A,0x2F,0x14,0x24,0x3A,0x20,0x14,0x04,0x3A,0x2F,0x14,0x24,0x3A,0x20,
+0x14,0x04,0x3A,0x2F,0x14,0x24,0x3A,0x20,0x0C,0x00,0x44,0x02,0x13,0x4C,0x89,0x20,
+0x3A,0x2F,0x0C,0x20,0x50,0x24,0x80,0x30,0x9C,0x39,0x10,0xA1,0x00,0x05,0x44,0x32,
+0x13,0x4C,0x44,0x22,0x2F,0xF0,0x44,0x40,0x00,0x38,0x42,0x30,0x10,0x73,0x38,0x71,
+0x28,0x08,0x00,0x2F,0x80,0x30,0x10,0xF1,0x80,0x04,0x84,0x7F,0xE4,0xEB,0x10,0x34,
+0x80,0x3B,0x84,0xEB,0x10,0x24,0x80,0x30,0xE8,0x02,0x97,0xC0,0x50,0xA5,0x00,0x01,
+0x50,0x10,0x80,0x38,0x48,0xFF,0xFF,0x82,0x4E,0x73,0x00,0x04,0x3C,0x7F,0xFC,0x4A,
+0x3E,0x77,0xF1,0x5C,0x51,0xFF,0x85,0x64,0x3A,0x6F,0xAA,0x84,0xDD,0x9E,0x94,0x7A,
+0x88,0x29,0xFA,0x42,0xA6,0x0B,0xA6,0x4A,0x80,0x60,0x42,0x30,0x88,0x73,0x80,0x43,
+0x44,0x32,0x30,0xC8,0x38,0x21,0x88,0x10,0x4E,0x24,0x00,0x20,0x50,0x2F,0x80,0x9D,
+0xF2,0x81,0xF2,0x0F,0x58,0x33,0x00,0x20,0xF2,0x82,0x50,0x4F,0x80,0x9E,0x84,0x40,
+0x8C,0xC1,0xF2,0x83,0xF4,0x84,0xF2,0x85,0xF2,0x86,0xF2,0x87,0xF2,0x88,0xF2,0x89,
+0xB7,0x3F,0x44,0x20,0x00,0x80,0x96,0xD8,0x44,0x42,0x30,0xC8,0xF5,0x0D,0x97,0xB0,
+0x49,0x00,0x11,0xA1,0xE6,0xCB,0xE8,0x05,0x8C,0xE1,0x97,0xF8,0x48,0xFF,0xFE,0x4C,
+0x84,0x01,0xF0,0x9A,0x48,0xFF,0xFE,0x52,0x00,0x75,0x00,0x03,0xF1,0x12,0x00,0x25,
+0x00,0x02,0x80,0x07,0x42,0x01,0x04,0x73,0xF0,0x9B,0xF1,0x1B,0x44,0x02,0x30,0xC8,
+0x38,0x10,0x04,0x00,0x54,0x00,0x80,0x20,0x4E,0x02,0x01,0x04,0x5A,0x18,0x3F,0x04,
+0x48,0x00,0x00,0xBE,0x96,0x67,0xE6,0x2B,0x4E,0xF2,0x00,0xFC,0x94,0x0A,0x50,0x9F,
+0x80,0xD4,0x40,0x34,0x80,0x00,0x50,0x5F,0x81,0x00,0x50,0x4F,0x81,0x2C,0xF3,0x96,
+0x98,0xE8,0x88,0x04,0xF3,0x97,0xF0,0x98,0x50,0x3F,0x82,0xF8,0x44,0x00,0x00,0x38,
+0x42,0x30,0x80,0x73,0x80,0x03,0xB0,0xEE,0x38,0x31,0x84,0x00,0x5A,0x30,0x01,0x04,
+0x48,0x00,0x00,0x89,0x84,0x60,0x14,0x9F,0x80,0x1F,0x80,0xC3,0x81,0x25,0xF4,0xA0,
+0xF4,0x21,0x04,0x8F,0x80,0x21,0x38,0x52,0x0D,0x00,0x95,0x19,0x88,0xA7,0x97,0x68,
+0x88,0x88,0x41,0xE2,0x80,0x10,0x20,0x42,0x00,0x01,0x4F,0xE5,0x00,0x4C,0x04,0x8F,
+0x80,0x12,0x40,0xFF,0x20,0x07,0xE8,0x46,0x88,0x82,0x97,0x20,0xF4,0x9C,0x20,0x8F,
+0x80,0x70,0x4E,0x85,0x00,0x40,0xF4,0x22,0xE1,0x04,0xE8,0x3C,0xF4,0x12,0x8C,0xC1,
+0x43,0xE4,0x10,0x73,0xF4,0x0D,0x04,0x80,0x00,0x08,0x97,0xB0,0x38,0xF2,0x79,0x11,
+0x44,0x42,0x30,0xC8,0x89,0x0F,0x14,0x80,0x00,0x08,0x38,0x82,0x78,0x00,0x5A,0x88,
+0x1F,0x2A,0x4E,0xF7,0x00,0x07,0x04,0x80,0x00,0x07,0x89,0x0F,0x14,0x80,0x00,0x07,
+0x50,0xF7,0xFF,0x9C,0x4E,0xF7,0x00,0x1F,0xF4,0x1F,0x38,0x82,0x06,0x02,0x89,0x0F,
+0x38,0x82,0x06,0x0A,0x44,0x42,0x30,0x20,0x38,0x82,0x15,0x01,0x38,0x54,0x86,0x02,
+0x42,0x57,0xA0,0x73,0x38,0x54,0x86,0x0A,0xF5,0x1C,0x44,0x42,0x33,0x08,0x38,0x52,
+0x15,0x01,0xF4,0x20,0x38,0x42,0x06,0x02,0x42,0x47,0x94,0x73,0xF5,0x20,0x38,0x42,
+0x86,0x0A,0x8C,0x61,0xF5,0x0F,0x97,0x18,0xE2,0x85,0xE9,0xA3,0x22,0x35,0x00,0x00,
+0x04,0x40,0x00,0x08,0xFF,0x9C,0x9B,0x74,0x44,0x30,0x03,0xE8,0xFE,0xEC,0x40,0x61,
+0x98,0xD6,0xAE,0x82,0xAE,0x83,0x10,0x20,0x00,0x2C,0xF3,0x1B,0xF2,0x0D,0x12,0x60,
+0x00,0x1A,0xAF,0xC0,0xAF,0xC1,0x10,0x70,0x00,0x2B,0x38,0x21,0x0D,0x11,0xB0,0xEE,
+0x88,0x82,0x14,0x40,0x00,0x08,0x84,0x80,0x12,0x20,0x00,0x13,0x38,0x41,0x84,0x08,
+0xD5,0x25,0xA6,0x43,0xE2,0x22,0xE8,0x03,0xAE,0x83,0xD5,0x05,0xA6,0x42,0xE2,0x41,
+0xE8,0x02,0xAE,0x82,0x00,0x15,0x00,0x03,0xA6,0x81,0xE2,0x41,0xE8,0x03,0xAE,0x41,
+0xD5,0x0D,0xA6,0x80,0xE2,0x22,0xE8,0x0A,0xAE,0x40,0xD5,0x08,0xB0,0x6B,0xF1,0x98,
+0xB0,0x6A,0xF1,0x97,0xB0,0x69,0xF0,0x25,0xF1,0x96,0xF2,0x12,0x00,0x15,0x00,0x02,
+0x42,0x70,0x88,0x73,0xF2,0x0D,0x38,0x21,0x1D,0x11,0xA0,0x47,0x88,0x22,0xA8,0x47,
+0xF1,0x14,0xE0,0x22,0xE8,0x06,0x00,0x10,0x00,0x2D,0x8C,0x21,0x10,0x10,0x00,0x2D,
+0x50,0x21,0x7F,0x9C,0x4E,0x27,0x00,0x26,0xF1,0x16,0xF3,0x16,0xB4,0x21,0x88,0x22,
+0xB6,0x23,0x00,0x15,0x00,0x03,0x44,0x32,0x30,0x20,0x38,0x31,0x85,0x01,0xF1,0x17,
+0xB4,0x21,0x42,0x11,0x0C,0x73,0xF3,0x17,0xB6,0x23,0x00,0x15,0x00,0x02,0x44,0x32,
+0x33,0x08,0x38,0x31,0x85,0x01,0xF1,0x18,0xB4,0x21,0x42,0x11,0x0C,0x73,0xF2,0x18,
+0xB6,0x22,0x00,0x10,0x00,0x2E,0x5A,0x10,0xFF,0x05,0x8C,0x21,0x10,0x10,0x00,0x2E,
+0xF6,0x15,0x8D,0x44,0x8C,0xC1,0x96,0x30,0xF0,0x95,0x48,0xFF,0xFD,0x81,0xB0,0xB5,
+0x38,0x51,0x02,0x02,0x4E,0x57,0x00,0x26,0x44,0x20,0x00,0x38,0x50,0xFF,0x82,0xF8,
+0x42,0xF0,0x08,0x73,0x50,0x2F,0x81,0x00,0x88,0x85,0x38,0x21,0x02,0x02,0xF2,0x96,
+0x40,0x22,0x84,0x0A,0xF2,0x97,0x04,0x8F,0x80,0x17,0xF2,0x16,0x89,0x02,0x50,0x2F,
+0x81,0x2C,0x40,0x84,0x15,0x16,0x14,0x87,0x80,0x03,0x38,0x81,0x02,0x02,0xF2,0x17,
+0x88,0x28,0x88,0x48,0x40,0x21,0x14,0x56,0x14,0x27,0x80,0x04,0xF2,0x16,0x88,0x62,
+0x44,0x50,0x00,0x38,0x50,0x2F,0x82,0xF8,0x42,0x20,0x14,0x73,0xA1,0x57,0x04,0x8F,
+0x80,0x15,0x41,0xEF,0x14,0x00,0x00,0x51,0x00,0x2E,0x89,0x05,0x80,0xA8,0x97,0x68,
+0x04,0x8F,0x80,0x12,0xF5,0x95,0x00,0x51,0x00,0x2D,0x89,0x05,0x80,0xA8,0x00,0x81,
+0x00,0x03,0x97,0x68,0xE2,0xC8,0xF5,0x92,0xE9,0x06,0xA7,0x52,0x81,0x06,0xE2,0xA7,
+0x40,0x72,0xBC,0x1B,0xA7,0x51,0xE3,0x25,0xE9,0x06,0xA6,0x90,0x80,0xA9,0xE2,0x4A,
+0x40,0xA1,0x3C,0x1B,0x8C,0x01,0x96,0x00,0x80,0xC8,0x81,0x25,0x48,0xFF,0xFD,0x40,
+0x00,0x0F,0x80,0x9D,0x3C,0x13,0xF7,0xA7,0xE2,0x20,0xE8,0x07,0x3C,0x0B,0xF7,0xA7,
+0x00,0x0F,0x80,0x40,0x3E,0x07,0xEF,0x15,0x44,0x10,0x00,0x38,0xF2,0x0E,0x50,0x0F,
+0x82,0xF8,0x42,0x01,0x04,0x73,0x00,0x2F,0x80,0x40,0x10,0x20,0x00,0x32,0xF0,0x0E,
+0xF2,0x0B,0x8C,0x01,0x97,0x40,0xF5,0x8E,0xDA,0xF2,0xF0,0x10,0xE6,0x0B,0x4E,0xF2,
+0xFD,0x74,0x8C,0x01,0x96,0x00,0xF0,0x90,0x5A,0x08,0x0B,0x04,0x48,0xFF,0xFD,0x6D,
+0xE6,0x4B,0x4E,0xF3,0xFD,0x54,0x48,0xFF,0xFD,0x68,0x84,0x08,0xF0,0x8F,0x48,0xFF,
+0xFC,0x9E,0x92,0x00,0x3B,0xFF,0xFC,0xBC,0xEF,0xFC,0xFA,0x40,0x5A,0x08,0x04,0x0A,
+0x44,0x12,0x10,0x30,0x44,0x02,0x2D,0x14,0x49,0x00,0x4E,0x78,0x48,0x00,0x00,0x08,
+0x44,0x02,0x2D,0x14,0x44,0x12,0x10,0x20,0x49,0x00,0x4E,0x70,0xEC,0x04,0x3B,0xFF,
+0xFC,0x84,0xDD,0x9E,0x3A,0x6F,0xA4,0xBC,0xEF,0xF4,0x3C,0x64,0x05,0x92,0xF0,0x81,
+0x3C,0x94,0x05,0x93,0x3C,0x74,0x05,0x94,0x49,0x00,0x41,0x9D,0x5A,0x08,0x01,0x19,
+0x3C,0x27,0xF9,0xF5,0x84,0x24,0x40,0x11,0x04,0x36,0x5E,0xF0,0x81,0xC2,0xE8,0x03,
+0x44,0x10,0x01,0xC2,0xFA,0x1D,0x44,0xF0,0x00,0x64,0xFE,0x84,0x40,0x21,0x3C,0x56,
+0x5E,0xF1,0x02,0x58,0x96,0x4B,0xE8,0x51,0x44,0x20,0x02,0x58,0xD5,0x4E,0x84,0xA0,
+0x44,0x12,0x33,0x88,0x44,0x00,0x0C,0x8C,0x98,0xA9,0x00,0x21,0x01,0x0D,0xE6,0x42,
+0xE8,0x06,0x50,0x52,0x81,0x24,0xD8,0xF9,0x84,0x20,0xD5,0x03,0x44,0x10,0x00,0x01,
+0x3C,0x0D,0xFB,0xD6,0x3C,0x47,0xF9,0xF5,0x96,0x1E,0xC8,0x1B,0x5A,0x18,0x01,0x1A,
+0x2E,0x10,0x11,0x99,0xE6,0x23,0xE9,0x15,0x5E,0xF2,0x01,0xF5,0xE8,0x12,0x84,0x1A,
+0xFE,0x0C,0x50,0x00,0x00,0x64,0x42,0x14,0x80,0x24,0x44,0xF0,0x00,0x64,0x40,0x10,
+0xBC,0x36,0x96,0x4B,0x9C,0x31,0xE0,0x20,0x40,0x10,0x3C,0x1B,0x40,0x90,0x80,0x11,
+0xFA,0x62,0x44,0x20,0x00,0x64,0xFE,0xE4,0x40,0x31,0x88,0x76,0xE0,0x66,0x40,0x61,
+0xBC,0x1A,0x84,0x24,0x44,0x30,0x00,0x55,0x40,0x12,0x04,0x36,0x42,0x02,0x0C,0x24,
+0xE1,0x21,0x40,0x00,0x08,0x16,0x40,0x90,0xBC,0x1B,0x80,0x47,0xE0,0x07,0x97,0xB3,
+0x50,0x14,0x80,0x00,0x40,0x20,0x3C,0x1A,0x3C,0x0D,0xFB,0xD6,0x96,0x93,0x54,0x00,
+0x20,0x00,0xC0,0x15,0x84,0x03,0x84,0x62,0xFF,0x84,0x40,0x63,0x0C,0xD6,0xE0,0x26,
+0x40,0x60,0xBC,0x1B,0xFE,0x44,0x40,0x10,0x8C,0x36,0xE0,0x41,0x40,0x11,0x3C,0x1B,
+0xFE,0x84,0x40,0x21,0x0C,0x56,0x97,0xB3,0x96,0x4B,0x96,0x93,0xF0,0x01,0xEC,0x0C,
+0x3C,0x6B,0xF7,0xBC,0x3A,0x6F,0xA4,0x84,0x3C,0x1B,0xF7,0xA6,0x3C,0x1B,0xF7,0xBD,
+0x3C,0x2B,0xF7,0xBE,0x48,0xFF,0xFA,0xA6,0xFC,0x40,0xEE,0x98,0x44,0x62,0x33,0x90,
+0x87,0x80,0x80,0xE6,0x81,0x3C,0x44,0x82,0x15,0xC0,0x84,0x02,0x10,0x03,0x81,0x06,
+0x02,0x03,0x80,0x80,0x54,0xAE,0x00,0xFF,0xC0,0x38,0x00,0x03,0x81,0x05,0x5A,0x08,
+0x02,0x2A,0xB0,0x41,0x84,0x40,0x80,0x07,0x49,0xFF,0xF3,0x6C,0xF0,0x01,0x40,0x14,
+0x94,0x08,0xB0,0x82,0x88,0x22,0x22,0x20,0x00,0x04,0x22,0x33,0x80,0x46,0xA8,0x89,
+0x22,0x20,0x00,0x05,0xA8,0x8A,0x50,0x20,0x80,0x08,0xA8,0xD1,0x80,0x41,0x22,0x33,
+0x80,0x47,0x18,0xA1,0x00,0x10,0xA8,0xCC,0x04,0x33,0x80,0x3D,0xB4,0x00,0xA8,0xD1,
+0x04,0x23,0x80,0x3C,0xA8,0x0F,0x50,0x04,0x80,0x01,0xA8,0x8E,0x54,0x90,0x00,0xFF,
+0xD5,0x0C,0x5A,0x00,0x04,0xD8,0x5A,0x08,0x03,0x09,0x80,0x0A,0x49,0x00,0x10,0xB0,
+0x38,0x14,0x70,0x00,0xE2,0x20,0xE8,0xCE,0x51,0xCE,0x00,0x01,0x50,0x73,0x81,0x24,
+0x5B,0xC8,0x0B,0xBD,0x2E,0x07,0xF1,0x5C,0xC0,0x41,0x80,0x49,0x44,0x02,0x13,0x4C,
+0xB0,0x42,0x84,0xE0,0x49,0x00,0x06,0x93,0x81,0x27,0x02,0x03,0x00,0x80,0xC0,0x28,
+0x00,0x03,0x01,0x05,0x5A,0x08,0x01,0x25,0xB0,0x41,0x84,0x40,0x80,0x06,0x49,0xFF,
+0xF3,0x21,0xF1,0x01,0x94,0x3D,0xB0,0x82,0x88,0x02,0x22,0x20,0x80,0x04,0x22,0x33,
+0x00,0x46,0xA8,0x81,0x22,0x20,0x80,0x05,0x8C,0xE1,0xA8,0x82,0x50,0x20,0x00,0x08,
+0xA8,0xD1,0x80,0x40,0x22,0x33,0x00,0x47,0x18,0x91,0x00,0x10,0xA8,0xC4,0x83,0x86,
+0xBB,0x3D,0xB4,0x21,0xA8,0xD1,0xBA,0x3C,0xA8,0x47,0xA8,0x86,0x97,0xF8,0x50,0x04,
+0x80,0x01,0x54,0x90,0x00,0xFF,0x50,0x63,0x01,0x24,0x5A,0x98,0x0B,0xD0,0x44,0x02,
+0x13,0x4C,0xB0,0x42,0x80,0x47,0x49,0x00,0x06,0x5A,0xED,0x68,0xFC,0xC0,0xFC,0x47,
+0xE6,0x2C,0x80,0xE1,0xF2,0x81,0x4E,0xF2,0x01,0x86,0x81,0x00,0x5A,0x20,0x01,0x04,
+0x48,0x00,0x01,0x49,0x44,0x00,0x00,0x38,0x45,0xC2,0x13,0x4C,0x42,0x04,0x00,0x24,
+0x40,0x9E,0x00,0x00,0xF0,0x82,0x04,0x04,0x80,0x0A,0x44,0x60,0x01,0x24,0xF0,0x87,
+0x00,0x04,0x80,0x3A,0x10,0x14,0x80,0x3B,0x10,0x0F,0x80,0x30,0x22,0x04,0x80,0x0E,
+0x22,0x14,0x80,0x0C,0x12,0x0F,0x80,0x13,0x12,0x0F,0x80,0x11,0x50,0x04,0x80,0x28,
+0xF0,0x83,0xA4,0x05,0xFF,0xBC,0x44,0xA2,0x33,0x88,0x12,0x0F,0x80,0x19,0x50,0x03,
+0x00,0x08,0x50,0x34,0x80,0x30,0x50,0x24,0x80,0x20,0x12,0x1F,0x80,0x12,0x12,0x1F,
+0x80,0x10,0x88,0x0A,0xB0,0x47,0xF2,0x85,0xF3,0x84,0x49,0xFF,0xF2,0x7A,0xF3,0x04,
+0x40,0x15,0x18,0x00,0x50,0x10,0x81,0x23,0xA6,0x1F,0x8D,0x28,0x54,0x40,0x00,0x0F,
+0x95,0x64,0xA7,0x09,0x92,0x04,0x97,0x1F,0xFF,0x2F,0xAF,0x09,0x00,0x41,0x80,0x08,
+0x96,0x0F,0x95,0x22,0xFE,0x27,0xAE,0x0A,0xF2,0x05,0x40,0x45,0x18,0x00,0x50,0x52,
+0x01,0x10,0x05,0xE1,0x00,0x02,0x04,0x12,0x00,0x40,0xF0,0x03,0xE0,0x3E,0x40,0x1F,
+0x3C,0x1B,0x14,0x12,0x00,0x40,0xA6,0x5C,0x44,0xF0,0x00,0x38,0xAE,0x6E,0x80,0x7C,
+0x50,0x14,0x00,0x01,0x42,0x30,0xBC,0x73,0xA6,0x5E,0xA4,0x05,0xAE,0x6F,0xF1,0x02,
+0xAC,0x2A,0x88,0x3C,0x80,0x1C,0xA0,0x4B,0x80,0x4A,0x14,0x12,0x00,0x39,0x02,0x12,
+0x00,0x84,0xC9,0x1F,0x00,0x24,0x80,0x0E,0x50,0x03,0x00,0xE8,0x5A,0x28,0x01,0x14,
+0x89,0x40,0xF0,0x02,0x88,0x1C,0x8C,0x10,0x3A,0x20,0x0C,0x00,0x00,0x04,0x80,0x0D,
+0x3A,0x25,0x0C,0x20,0x5C,0xF0,0x00,0x29,0x4E,0xF2,0x00,0xD7,0x10,0x12,0x00,0xEC,
+0x48,0x00,0x00,0xD3,0x88,0x0A,0x84,0x48,0x49,0x00,0x4C,0xCE,0x48,0x00,0x00,0xCD,
+0x00,0x14,0x80,0x0D,0x5C,0xF0,0x80,0x29,0xE9,0x4D,0x20,0x52,0x00,0xEC,0x20,0x44,
+0x80,0x0C,0x8A,0x85,0x5E,0xF2,0x00,0x5B,0xE9,0x04,0x50,0x42,0x7F,0x4C,0xD5,0x07,
+0x5E,0xF2,0x7F,0xA6,0xE8,0x04,0x50,0x42,0x00,0xB4,0x97,0x23,0x80,0x64,0x4E,0x44,
+0x00,0x03,0xFE,0xE2,0xE4,0x62,0xE9,0x36,0x84,0x21,0x4E,0x44,0x00,0x04,0x44,0x10,
+0xFF,0xFF,0x8E,0x61,0xFE,0x5C,0x96,0x4B,0x80,0x61,0x4E,0x14,0x00,0x03,0xFE,0xCA,
+0xE4,0x62,0xE9,0x04,0x84,0x62,0x40,0x10,0x8C,0x36,0x88,0x25,0x96,0x49,0x97,0x4B,
+0x5E,0xF2,0x80,0x5B,0xE9,0x05,0x50,0x10,0xFF,0x4C,0x97,0x4B,0xD5,0x0A,0x5E,0xF2,
+0xFF,0xA7,0xE8,0x07,0x50,0x10,0x80,0xB4,0x97,0x4B,0x5E,0xF2,0xFF,0xA7,0xE9,0x09,
+0x5E,0xF2,0x80,0x5B,0x80,0x25,0xE9,0x03,0x44,0x10,0x00,0x5A,0x96,0x4A,0xD5,0x03,
+0x44,0x1F,0xFF,0xA7,0x44,0x30,0x01,0x24,0x80,0x82,0x42,0x43,0x8C,0x73,0x10,0x12,
+0x00,0xEC,0x44,0x10,0x00,0x38,0x80,0x80,0x42,0x44,0x04,0x73,0x00,0x12,0x00,0x16,
+0x8C,0x88,0x5A,0x18,0x01,0x72,0x44,0x10,0x01,0x24,0x80,0x62,0x42,0x33,0x84,0x73,
+0xA5,0x25,0x02,0x11,0x80,0x75,0x8A,0x81,0x80,0x64,0x4E,0x44,0x00,0x03,0xFE,0xE2,
+0x5E,0xF1,0x80,0x33,0xE9,0x1E,0x4E,0x45,0x00,0x04,0x84,0x81,0xD5,0x02,0x84,0x9F,
+0x50,0x31,0xFF,0xCE,0xFE,0xE4,0x84,0x82,0x40,0x31,0x90,0x76,0x88,0x23,0x4E,0x15,
+0x00,0x09,0x5E,0xF0,0x93,0x89,0xE9,0x03,0x44,0x10,0x13,0x88,0x96,0x49,0xD5,0x02,
+0x84,0x20,0x44,0x30,0x01,0x24,0x80,0x82,0x42,0x43,0x8C,0x73,0x12,0x12,0x00,0x75,
+0x44,0x10,0x01,0x24,0x80,0x62,0x42,0x33,0x84,0x73,0x44,0x10,0x00,0x38,0x42,0x04,
+0x04,0x73,0x02,0x41,0x80,0x74,0x02,0x30,0x00,0x08,0x8A,0x64,0x80,0x23,0x4E,0x34,
+0x00,0x03,0xFE,0x5A,0x5E,0xF0,0x80,0x33,0xE9,0x2F,0x84,0x01,0x4E,0x34,0x00,0x03,
+0x84,0x1F,0x50,0x10,0xFF,0xCE,0xFE,0x44,0x84,0x02,0x40,0x10,0x80,0x36,0x98,0x21,
+0x4E,0x05,0x00,0x09,0x5E,0xF0,0x13,0x89,0xE9,0x03,0x44,0x00,0x13,0x88,0x96,0x01,
+0xD5,0x02,0x84,0x00,0x44,0x10,0x01,0x24,0x42,0x23,0x84,0x73,0x12,0x01,0x00,0x74,
+0xD5,0x13,0xF0,0x01,0x5A,0x08,0x02,0x37,0x44,0x00,0x01,0x24,0x44,0x62,0x33,0x90,
+0x42,0x60,0x80,0x73,0x80,0x06,0xB0,0x46,0x84,0x40,0x49,0xFF,0xF1,0x93,0x80,0x06,
+0xF1,0x06,0x49,0xFF,0xF1,0x56,0x44,0x02,0x33,0x88,0x44,0x10,0x01,0x24,0x80,0x40,
+0x42,0x23,0x84,0x73,0x02,0x11,0x00,0x84,0xC9,0x0D,0x44,0x30,0x00,0x38,0x44,0x12,
+0x13,0x4C,0x42,0x14,0x0C,0x73,0xA0,0xCE,0xA0,0x4F,0x12,0x31,0x00,0x8C,0x12,0x11,
+0x00,0x8D,0x44,0x10,0x01,0x24,0x42,0x03,0x84,0x73,0x00,0x1F,0x80,0x04,0x02,0x50,
+0x00,0x84,0x10,0x10,0x01,0x0E,0x44,0x10,0xFF,0xFF,0xD1,0x04,0x8C,0xA1,0x12,0x50,
+0x00,0x84,0xFC,0xC7,0xFC,0x01,0x49,0x00,0x3D,0x9C,0xF0,0x81,0x49,0xFF,0xEF,0xDB,
+0xE6,0x03,0xE9,0x04,0xF0,0x01,0x49,0xFF,0xF1,0x74,0xF0,0x01,0x44,0x12,0x33,0x48,
+0x3C,0x24,0x05,0xAF,0x49,0xFF,0xF1,0x86,0xF0,0x01,0x44,0x12,0x33,0x48,0x44,0x22,
+0x15,0xDA,0x44,0x32,0x15,0xD8,0x49,0xFF,0xF1,0xBC,0x3C,0x13,0xF7,0xC7,0x3C,0xF7,
+0xF9,0xF5,0x3C,0x24,0x05,0xAF,0x84,0x1E,0xFE,0x0E,0xE0,0x4F,0x3C,0x0B,0xF7,0xC7,
+0xE8,0x05,0x58,0x00,0x00,0x01,0x3C,0x0B,0xF7,0xC7,0xFC,0x81,0xFC,0x40,0x84,0x20,
+0x84,0x4C,0x44,0x02,0x13,0x40,0x49,0x00,0x4B,0xA7,0x84,0x00,0x3C,0x0B,0xF7,0xC7,
+0x84,0x01,0x49,0x00,0x0E,0x4E,0x84,0x03,0x49,0x00,0x0E,0x5E,0x84,0x20,0x44,0x20,
+0x0C,0x94,0x44,0x02,0x33,0x88,0x49,0x00,0x4B,0x97,0x49,0x00,0x0E,0x9B,0x49,0x00,
+0x2A,0xF6,0x5A,0x00,0x01,0x05,0x44,0x00,0x00,0x5A,0xD5,0x03,0x44,0x00,0x00,0x7D,
+0x3C,0x08,0x05,0xAF,0x84,0x00,0x3E,0x07,0xF1,0x4C,0x84,0x01,0x49,0xFF,0xFC,0xDC,
+0x44,0x00,0x00,0xB3,0x3C,0x08,0x05,0x9A,0x44,0x00,0x18,0x7F,0x3C,0x08,0x05,0x9B,
+0x44,0x00,0x00,0xCA,0x3C,0x08,0x05,0x9C,0x44,0x00,0x31,0x9A,0x3C,0x08,0x05,0x9D,
+0x49,0x00,0x02,0x01,0x84,0x01,0x49,0x00,0x02,0x09,0x84,0x04,0x3E,0x00,0x0B,0x44,
+0x84,0x05,0x3E,0x00,0x0B,0x46,0x44,0x00,0x00,0x40,0x3E,0x00,0x0B,0x45,0x84,0x0A,
+0x3E,0x00,0x0B,0x47,0x3C,0x70,0x05,0x9A,0x84,0x01,0x3E,0x00,0x0B,0x48,0x3C,0x50,
+0x05,0x9C,0x3C,0x04,0x05,0x9B,0x97,0x3B,0x84,0x60,0x2E,0x97,0xDE,0x16,0x40,0xA0,
+0x10,0x01,0x96,0x6B,0x3C,0x64,0x05,0x9D,0x80,0x43,0x44,0x82,0x30,0x20,0x8A,0x80,
+0x45,0xE0,0x00,0x11,0x96,0x10,0xE2,0x09,0x88,0x6A,0xE8,0x09,0x98,0x23,0x40,0x00,
+0x78,0x16,0x88,0x07,0x38,0x04,0x09,0x09,0x8C,0x41,0xD5,0xF5,0x84,0x60,0x9B,0xF1,
+0x2E,0x47,0xDE,0x17,0x8A,0x26,0x80,0x43,0x44,0x92,0x33,0x08,0xFA,0xCF,0x96,0x10,
+0xE2,0x04,0x88,0x67,0xE8,0x09,0x98,0x0B,0x40,0x00,0x18,0x16,0x88,0x05,0x38,0x04,
+0x89,0x09,0x8C,0x41,0xD5,0xF5,0x3C,0x0D,0xFB,0xD6,0x58,0x00,0x08,0x00,0x3C,0x0F,
+0xFB,0xD6,0x3C,0x1D,0xFB,0xD6,0x84,0x01,0x3C,0x0B,0xF7,0xC6,0x44,0x0F,0xFF,0x7F,
+0xFE,0x0E,0x3C,0x0F,0xFB,0xD6,0x3C,0x0D,0xFB,0xD6,0x58,0x00,0x00,0x04,0x3C,0x0F,
+0xFB,0xD6,0x84,0x00,0x3C,0x0B,0xF7,0xC5,0xFC,0xC0,0x84,0x00,0x3E,0x07,0xF1,0x4C,
+0xDD,0x9E,0xFC,0x00,0x2E,0x07,0xE2,0x74,0x96,0x16,0xC0,0x03,0x84,0x04,0xD5,0x02,
+0x84,0x01,0x49,0xFF,0xFC,0x59,0xFC,0x80,0xFC,0x00,0x84,0x01,0x49,0x00,0x01,0x96,
+0xFC,0x80,0x84,0x00,0x3E,0x07,0xE2,0x74,0x3C,0x0D,0xFB,0xD6,0x96,0x1E,0xC0,0x04,
+0x84,0x04,0x3E,0x07,0xE2,0x74,0x2E,0x07,0xE2,0x74,0xC8,0x04,0x84,0x01,0x3E,0x07,
+0xE2,0x74,0xDD,0x9E,0xFC,0x00,0x49,0x00,0x29,0xDB,0xC8,0x05,0x2E,0x07,0xE2,0x74,
+0x5A,0x08,0x04,0x04,0x84,0x04,0xD5,0x02,0x84,0x01,0x49,0xFF,0xFC,0x35,0x49,0xFF,
+0xFF,0xE2,0x2E,0x07,0xE2,0x74,0x2E,0x57,0xF1,0x4C,0xD0,0x07,0x3E,0x07,0xF1,0x4C,
+0x49,0xFF,0xFF,0xC9,0x49,0xFF,0xFF,0xD2,0xFC,0x80,0xFC,0x42,0x81,0x21,0x80,0xC2,
+0xB0,0x41,0x84,0x40,0x81,0x40,0x80,0xE3,0x49,0xFF,0xF0,0x54,0xF2,0x01,0x22,0x15,
+0x00,0x8A,0x22,0x05,0x00,0x8B,0x22,0x41,0x00,0x06,0x9B,0x0C,0x22,0x11,0x00,0x07,
+0xF4,0x82,0x8A,0x01,0xF0,0x83,0xB0,0x02,0x49,0x00,0x08,0x27,0xE0,0x09,0xE8,0x1A,
+0x84,0x20,0x84,0x4C,0x44,0x32,0x30,0x44,0x80,0x03,0x42,0x00,0x88,0x73,0x00,0x40,
+0x00,0x0A,0xCC,0x0D,0xF1,0x01,0x22,0x20,0x80,0x06,0x22,0x10,0x80,0x07,0xB6,0x40,
+0xA8,0x41,0x10,0x70,0x00,0x0A,0xAD,0x84,0x84,0x01,0xFC,0xC2,0x8C,0x21,0x5A,0x18,
+0x0B,0xED,0x84,0x00,0xFC,0xC2,0xFC,0x41,0x3C,0x63,0xF9,0xF7,0x84,0x0A,0xFF,0x84,
+0x2E,0x00,0x11,0x99,0x97,0xB1,0x3C,0x17,0xF9,0xF6,0xC0,0x07,0xC6,0x06,0x44,0x00,
+0x00,0x64,0xFE,0x44,0x96,0x49,0xC9,0x0B,0x44,0x02,0x13,0x2C,0x84,0x20,0x84,0x4B,
+0x49,0x00,0x4A,0x82,0x84,0x00,0x3E,0x07,0xF1,0x3A,0xFC,0xC1,0x2E,0x07,0xF1,0x3A,
+0xC8,0x18,0x44,0x22,0x33,0x88,0x84,0x0B,0x52,0x40,0xB2,0x64,0x52,0x53,0x19,0x32,
+0x00,0x31,0x01,0x0D,0xC3,0x17,0x22,0x71,0x00,0x8F,0x22,0x31,0x00,0x8E,0xE0,0xE4,
+0xE8,0x11,0xE0,0xC3,0xE8,0x0F,0xE0,0x65,0xE8,0x0D,0x84,0x01,0x3E,0x07,0xF1,0x3A,
+0x44,0x92,0x33,0x90,0x44,0xA2,0x13,0x2C,0x50,0x84,0x8C,0x8C,0x52,0x70,0xB2,0x64,
+0xD5,0x07,0x8E,0x01,0x96,0x00,0x50,0x21,0x01,0x24,0xC8,0xE3,0xD5,0xF2,0x00,0x04,
+0x81,0x05,0xC0,0x1F,0xB0,0x41,0x84,0x40,0x80,0x09,0x49,0xFF,0xEF,0xDB,0xF1,0x01,
+0x2E,0x20,0x11,0x99,0xE6,0x42,0x22,0x00,0x80,0x08,0x22,0x10,0x80,0x09,0xE9,0x1E,
+0x2E,0x27,0xF1,0x3A,0x5A,0x28,0x01,0x1B,0xE0,0xE1,0xE8,0x0E,0xE0,0x06,0xE9,0x05,
+0x52,0x13,0x19,0x32,0xE0,0x20,0xE8,0x08,0x84,0x04,0x10,0x04,0x81,0x05,0x84,0x01,
+0x10,0x05,0x00,0x00,0xD5,0x0B,0x00,0x05,0x00,0x00,0x5A,0x08,0x01,0x08,0x84,0x00,
+0x10,0x05,0x00,0x00,0x84,0x02,0x10,0x04,0x81,0x05,0x50,0x94,0x81,0x24,0x8D,0x41,
+0x4C,0x94,0x7F,0xCF,0xFC,0xC1,0x84,0xA0,0x80,0x25,0x44,0x32,0x33,0x88,0x44,0x20,
+0x0C,0x8C,0x98,0x2B,0x00,0x00,0x01,0x0D,0x8E,0x02,0xE6,0x02,0xE8,0x03,0x8C,0x21,
+0x96,0x48,0x50,0x52,0x81,0x24,0xDA,0xF6,0xC1,0x05,0x84,0x01,0x3C,0x0F,0xFC,0x52,
+0xDD,0x9E,0x3C,0x0D,0xFC,0x52,0x5A,0x08,0x01,0x07,0x3E,0x07,0xF4,0xA8,0x3C,0x1F,
+0xFC,0x52,0xDD,0x9E,0x3C,0x1F,0xFC,0x52,0x80,0x01,0xDD,0x9E,0x4E,0x05,0x00,0x22,
+0xE4,0x02,0xE9,0x20,0x40,0x50,0x08,0x0A,0x84,0x22,0xCD,0x05,0x8E,0x22,0x96,0x4A,
+0x84,0x40,0xD5,0x07,0xD0,0xFC,0x8C,0x22,0x96,0x4A,0x40,0x50,0x04,0x0E,0xD5,0xF6,
+0x4E,0x15,0x00,0x0E,0x94,0x91,0x9C,0xD1,0x40,0x50,0x04,0x0E,0x42,0xF1,0x8C,0x24,
+0xE0,0xAF,0x8E,0x22,0x40,0x21,0xBC,0x1A,0x96,0x4A,0xD5,0xF3,0x80,0x02,0xDD,0x9E,
+0x84,0x00,0xDD,0x9E,0xFC,0x00,0x49,0xFF,0xFF,0xDB,0xFC,0x80,0x9A,0xCB,0x8A,0x02,
+0xFE,0xDC,0x42,0x30,0x00,0x73,0x44,0x00,0x00,0x64,0x40,0x01,0x80,0x16,0xDD,0x9E,
+0xFE,0x5C,0x42,0x10,0x08,0x73,0x80,0x01,0xDD,0x9E,0xB4,0x20,0x84,0x61,0x4E,0x14,
+0x00,0x03,0x84,0x7F,0x4E,0x14,0x00,0x03,0xFE,0x4A,0x84,0x40,0x40,0x40,0x88,0x0E,
+0xC4,0x04,0x8C,0x41,0x96,0x90,0xD5,0xFB,0x52,0x21,0x00,0x1F,0x96,0x90,0x40,0x10,
+0x88,0x0C,0xFE,0x5C,0xB6,0x20,0x80,0x02,0xDD,0x9E,0x46,0x18,0x00,0x00,0x4C,0x00,
+0x80,0x11,0xC0,0x10,0x4E,0x04,0x00,0x03,0xFE,0x02,0xFA,0xAF,0x40,0x10,0x14,0x0E,
+0x96,0x46,0xC9,0x04,0x8E,0xA1,0x97,0x68,0xD5,0xFA,0x9C,0x29,0x96,0x00,0xDD,0x9E,
+0xFA,0x10,0xDD,0x9E,0x84,0x60,0x80,0x43,0xE2,0x61,0xE8,0x07,0x38,0x40,0x0D,0x11,
+0x8C,0x61,0x88,0x44,0x96,0xD8,0xD5,0xF9,0x4E,0x26,0x00,0x03,0x84,0x41,0x40,0x21,
+0x04,0x56,0x84,0x80,0x96,0x93,0x80,0x64,0xE2,0x81,0xE8,0x09,0x38,0x50,0x11,0x11,
+0x8C,0x81,0x8A,0xA2,0x42,0x32,0x94,0x73,0x97,0x20,0xD5,0xF7,0xFC,0x00,0x80,0x03,
+0x4E,0x36,0x00,0x03,0x84,0x01,0x40,0x00,0x04,0x16,0x49,0xFF,0xFF,0x9D,0x96,0x03,
+0xFC,0x80,0x84,0x00,0x84,0x20,0x3E,0x07,0xF4,0x04,0x3C,0x1F,0xFD,0x00,0x3E,0x17,
+0xF1,0x51,0x3E,0x07,0xF3,0xFD,0xDD,0x9E,0xFC,0x00,0x5A,0x08,0x04,0x07,0x44,0x02,
+0x2D,0x2C,0x44,0x12,0x10,0x58,0xD5,0x05,0x44,0x02,0x2D,0x2C,0x44,0x12,0x10,0x50,
+0x84,0x48,0x49,0x00,0x49,0x33,0xFC,0x80,0xA7,0x08,0xA6,0xC0,0xE2,0x64,0x40,0x32,
+0x3C,0x1A,0xAE,0xD0,0xA7,0x01,0xA6,0xC9,0xE2,0x83,0x40,0x32,0x3C,0x1A,0xAE,0xD1,
+0xA7,0x0A,0xA6,0xC2,0xA6,0x4B,0xA6,0x03,0xE2,0x64,0x40,0x32,0x3C,0x1A,0xE2,0x01,
+0x40,0x10,0x3C,0x1A,0xAE,0xD2,0xAE,0x53,0xDD,0x9E,0xFC,0x48,0x51,0xCF,0x80,0x14,
+0x80,0xE1,0x81,0x20,0x84,0x20,0x81,0x42,0x80,0x1C,0xFA,0x5C,0x81,0x05,0xF3,0x83,
+0x80,0xC4,0x49,0x00,0x49,0x31,0xA6,0x7B,0x2F,0xE7,0xDE,0x16,0xA6,0x3A,0x80,0x41,
+0x42,0x20,0x78,0x73,0x38,0x54,0x89,0x01,0x8A,0xA8,0x96,0xAB,0xF2,0x81,0x4E,0x22,
+0x00,0x82,0x44,0x22,0x30,0x20,0x44,0x40,0x00,0xFF,0x38,0x11,0x05,0x01,0x85,0x20,
+0xF1,0x82,0x44,0x12,0x33,0x08,0x80,0x4A,0x38,0x80,0x81,0x01,0x80,0x1C,0x45,0xC0,
+0xFF,0xFF,0x40,0x11,0x28,0x01,0xF3,0x03,0x96,0x48,0xE2,0x23,0xE8,0x27,0x08,0x41,
+0x00,0x01,0x80,0x66,0x44,0x10,0x00,0x38,0x42,0x32,0x04,0x73,0x00,0xF1,0x80,0x30,
+0x5A,0xF8,0x01,0xF1,0x38,0x10,0x12,0x02,0xC9,0xED,0xA0,0x5B,0xA0,0xDC,0xF5,0x02,
+0x40,0x34,0x0C,0x01,0x9A,0x69,0xFE,0xDC,0x42,0x30,0x84,0x73,0x92,0x63,0xC3,0x07,
+0x40,0xFE,0x0C,0x06,0xE8,0x05,0x44,0x30,0xFF,0xFF,0xD5,0x02,0x80,0x6F,0x40,0x3E,
+0x0C,0x77,0x38,0x30,0x12,0x0A,0x89,0x23,0xD5,0xD5,0x84,0x20,0x50,0x23,0x00,0x1C,
+0x80,0xA1,0xB0,0x05,0x55,0xC0,0x80,0xFF,0x38,0x30,0x06,0x02,0xC3,0x20,0xF4,0x01,
+0xB4,0x02,0xFE,0xE4,0x04,0x41,0x7F,0xFC,0x04,0xFF,0x80,0x02,0x40,0x31,0xA4,0x77,
+0xFF,0x04,0x40,0xA0,0x0C,0x00,0x42,0x41,0xBC,0x73,0x40,0x42,0x28,0x97,0x14,0x41,
+0x7F,0xFC,0x04,0x41,0x7F,0xFD,0x8C,0xA1,0xFE,0x24,0x42,0x01,0xA0,0x73,0x40,0x00,
+0x28,0x17,0x97,0x68,0x14,0x01,0x7F,0xFD,0xB7,0x42,0x80,0x9C,0x8C,0x21,0x50,0x21,
+0x00,0x38,0x5A,0x18,0x0B,0xD8,0x5A,0x58,0x01,0x16,0x44,0x00,0x00,0x38,0x42,0x62,
+0x00,0x73,0x00,0x03,0x00,0x2E,0xF2,0x18,0x8C,0x01,0x10,0x03,0x00,0x2E,0xA6,0x3B,
+0xA6,0x7A,0x88,0x02,0x42,0x00,0xF8,0x73,0x00,0x13,0x00,0x29,0x58,0x10,0x80,0x20,
+0xAE,0x40,0xFC,0xC8,0xFC,0x47,0x3C,0x0D,0xFB,0xD6,0x54,0x00,0x20,0x00,0xC8,0x06,
+0x44,0x00,0x03,0x20,0x44,0x20,0x08,0x34,0xD5,0x05,0x44,0x00,0x00,0xC8,0x44,0x20,
+0x04,0x1A,0x3C,0x1D,0xFB,0xD6,0x54,0x10,0xA0,0x00,0xC9,0x04,0x44,0x70,0x05,0xDC,
+0xD5,0x03,0x44,0x70,0x02,0xEE,0x3C,0x1D,0xFB,0xD6,0x54,0x10,0xA0,0x00,0xC9,0x03,
+0x84,0x22,0xD5,0x02,0x84,0x21,0x3C,0x33,0xF7,0xC5,0x96,0xC6,0xC3,0x04,0xFA,0x64,
+0xF3,0x81,0xD5,0x02,0xF1,0x81,0x42,0xA1,0x08,0x24,0xF2,0x01,0xFE,0x04,0x42,0x31,
+0x28,0x24,0x44,0x20,0x00,0x64,0x40,0x00,0x08,0x16,0xFF,0xFC,0xF0,0x85,0x42,0x00,
+0x9C,0x24,0xF0,0x82,0x40,0x00,0x08,0x16,0xF0,0x86,0x46,0x00,0x08,0x95,0x50,0x00,
+0x04,0x40,0x40,0x31,0x88,0x76,0xFE,0x0C,0xF3,0x84,0xF0,0x83,0x44,0x62,0x33,0x90,
+0x85,0x20,0x02,0x03,0x00,0x80,0x4E,0x02,0x00,0xBF,0xB0,0x49,0x84,0x40,0x80,0x06,
+0x49,0xFF,0xED,0xE0,0xB0,0x4A,0x84,0x41,0x80,0x06,0x49,0xFF,0xED,0xDB,0xB0,0x4B,
+0x84,0x42,0x80,0x06,0x49,0xFF,0xED,0xD6,0xB0,0x4C,0x84,0x43,0x80,0x06,0x49,0xFF,
+0xED,0xD1,0xB0,0x4D,0x84,0x44,0x80,0x06,0x49,0xFF,0xED,0xCC,0xF1,0x09,0x87,0xC4,
+0x22,0x20,0x80,0x04,0x22,0x00,0x80,0x05,0x12,0x20,0x80,0x08,0x12,0x00,0x80,0x09,
+0x02,0x33,0x00,0x80,0xE6,0x65,0xE8,0x04,0x9E,0x59,0x41,0xE0,0x80,0x13,0x44,0x40,
+0x01,0x24,0x44,0x12,0x34,0xA8,0x42,0x14,0x90,0x73,0xA0,0x49,0x4E,0x15,0x00,0x25,
+0x22,0xF3,0x00,0x89,0x22,0x43,0x00,0x88,0x8A,0x0F,0x8A,0x44,0xFE,0x04,0x42,0x01,
+0x08,0x73,0x44,0x22,0x71,0x00,0xE0,0x40,0xE8,0x17,0x40,0x00,0xD8,0x08,0x00,0x53,
+0x01,0x18,0x90,0x1A,0xD8,0x06,0x96,0x4B,0x00,0x53,0x01,0x19,0x90,0x2A,0xD1,0x0C,
+0x44,0x10,0x01,0x24,0x44,0x02,0x34,0xA8,0x42,0x04,0x84,0x73,0xA6,0x87,0x44,0x1F,
+0xFF,0x80,0xFE,0x57,0xAE,0x47,0x44,0x40,0x00,0x49,0x84,0x00,0x42,0x24,0x90,0x24,
+0x80,0x20,0xB1,0x49,0xF2,0x87,0xE2,0x3E,0xE8,0x2F,0x9C,0x89,0x38,0x42,0x86,0x02,
+0x38,0x82,0x8A,0x02,0x38,0x22,0x86,0x02,0x22,0xF1,0x00,0x04,0x22,0x24,0x00,0x04,
+0x22,0x84,0x00,0x05,0x40,0x27,0x88,0x01,0x22,0xF2,0x00,0x05,0x40,0x87,0xA0,0x01,
+0xE6,0x22,0xE8,0x10,0xF4,0x07,0x40,0xF2,0x04,0x00,0x50,0xF7,0x80,0x24,0x40,0xF7,
+0x88,0x08,0x44,0x42,0x33,0x88,0x40,0xF2,0x3C,0x00,0x12,0x27,0x80,0x02,0x12,0x87,
+0x80,0x03,0x42,0x84,0x20,0x24,0x42,0x81,0x08,0x73,0xE0,0x08,0x8C,0x21,0x40,0x04,
+0x3C,0x1B,0x96,0x48,0xD5,0xD1,0xE6,0x62,0xE8,0x03,0xF0,0x04,0xD5,0x0B,0x44,0x20,
+0x01,0x24,0x44,0x12,0x34,0xA8,0x42,0x14,0x88,0x73,0xA0,0x49,0x4E,0x15,0x00,0x06,
+0xF0,0x05,0x14,0x03,0x00,0x3D,0xD5,0x1D,0x98,0x78,0xE0,0x27,0xE9,0x05,0xE1,0x41,
+0x40,0x15,0x3C,0x1B,0xD5,0x02,0x80,0x27,0xF2,0x01,0x94,0x02,0xFE,0x54,0x44,0x20,
+0x00,0x64,0x40,0x10,0x88,0x36,0x14,0x13,0x00,0x3D,0xF1,0x02,0xE0,0x01,0xE9,0x08,
+0xF1,0x03,0xE0,0x20,0x40,0x10,0x3C,0x1A,0x40,0x00,0x88,0x16,0xD5,0x02,0xF0,0x06,
+0x14,0x03,0x00,0x3C,0x8D,0x21,0x50,0x63,0x01,0x24,0x5A,0x90,0x0B,0x04,0x48,0xFF,
+0xFF,0x3A,0xFC,0xC7,0xFC,0x42,0x44,0x62,0x30,0x44,0x81,0x20,0x81,0x41,0x81,0x02,
+0x83,0x83,0x50,0x73,0x00,0x84,0x00,0x03,0x00,0x0A,0xC8,0x06,0x8C,0xCC,0x4C,0x63,
+0xFF,0xFC,0x84,0x00,0xFC,0xC2,0xB4,0x26,0x40,0x04,0x84,0x01,0xB6,0x1F,0xA0,0x31,
+0x40,0x14,0x04,0x01,0x40,0x25,0x00,0x01,0x40,0x0E,0x00,0x01,0xF0,0x83,0x80,0x1F,
+0xF1,0x82,0xF2,0x81,0x49,0x00,0x04,0xE1,0xA4,0x74,0xE0,0x01,0xE8,0xE8,0xB0,0x02,
+0x49,0x00,0x04,0xDB,0xA4,0x74,0xE0,0x20,0xE8,0xE2,0x84,0x01,0xFC,0xC2,0xFC,0x43,
+0x94,0xDD,0x40,0xA0,0x8C,0x00,0x80,0xE0,0x00,0x05,0x00,0x00,0x44,0x80,0x01,0x24,
+0x42,0x00,0x20,0x24,0x8C,0x08,0x44,0x62,0x33,0x88,0x81,0x22,0x88,0x06,0xB0,0x41,
+0x84,0x40,0x49,0xFF,0xEC,0xDF,0x2E,0x00,0x11,0x99,0xE6,0x03,0xE9,0x03,0x84,0x00,
+0xFC,0xC3,0xF2,0x01,0x44,0x00,0x00,0x38,0x42,0x74,0x80,0x73,0x22,0x11,0x00,0x08,
+0xA0,0x3E,0x8A,0x01,0xF0,0x82,0x22,0x01,0x00,0x09,0xA0,0xBF,0x8A,0x40,0xF2,0x83,
+0x00,0x25,0x00,0x00,0x42,0x61,0x20,0x73,0x50,0x23,0x01,0x00,0x22,0x31,0x00,0x02,
+0x8A,0x23,0xF1,0x84,0x22,0x11,0x00,0x03,0x8A,0x01,0x04,0x13,0x80,0x0A,0xF0,0x85,
+0x44,0x00,0x00,0x64,0xFE,0x0C,0x04,0x13,0x00,0x40,0x40,0x00,0x04,0x16,0x5E,0xF0,
+0x00,0x33,0xE8,0xD6,0xE4,0x1F,0xE8,0x04,0x44,0x60,0x01,0x90,0xD5,0x03,0x44,0x60,
+0x02,0x8A,0xB0,0x04,0x49,0x00,0x04,0x89,0x5E,0xF0,0x02,0x58,0xE8,0xC9,0xB0,0x02,
+0x49,0x00,0x04,0x83,0x40,0x03,0x00,0x07,0xFC,0xC3,0xFC,0x40,0x51,0xFF,0xFD,0xE8,
+0x81,0x00,0xA6,0x00,0xF1,0x84,0x4E,0x02,0x01,0x84,0x4E,0x22,0x01,0x82,0xE6,0x0C,
+0x80,0x20,0xE9,0x02,0x84,0x2B,0x96,0x08,0xE6,0x4C,0xF0,0x83,0x80,0x02,0xE9,0x02,
+0x84,0x0B,0x96,0x00,0xF0,0x82,0x46,0x30,0x50,0x00,0x84,0x00,0xB0,0x8D,0x84,0x20,
+0x88,0x40,0x38,0x31,0x06,0x0A,0x8C,0x21,0x5A,0x18,0x0B,0xFD,0x50,0x00,0x00,0x2C,
+0x5A,0x09,0xE4,0xF6,0x3C,0x03,0xF7,0xC5,0x96,0x06,0x56,0x00,0x00,0x01,0xF0,0x89,
+0x49,0x00,0x25,0xDD,0xC0,0x04,0x3C,0x03,0xF7,0xC5,0x96,0x06,0xF0,0x85,0xF0,0x04,
+0x87,0x80,0x9D,0x84,0x81,0x3C,0x54,0x0E,0x00,0xFF,0xF0,0x88,0xB0,0x4D,0xFA,0x1C,
+0x42,0x1E,0x00,0x73,0x84,0x00,0x50,0xA4,0x00,0x18,0xF1,0x87,0xF0,0x81,0x00,0x0F,
+0x80,0x04,0xF0,0x8A,0x84,0x00,0xF0,0x8C,0x00,0x05,0x00,0x23,0x5A,0x00,0xFF,0x04,
+0x48,0x00,0x00,0xD7,0xB4,0xE6,0xA1,0x31,0xA0,0xB2,0xA0,0xF3,0x88,0x47,0x88,0x64,
+0x04,0x15,0x00,0x01,0xB4,0x0A,0x49,0xFF,0xFC,0xE3,0xA1,0x36,0xF0,0x86,0x04,0x15,
+0x00,0x01,0xB4,0x0A,0xB4,0x46,0xA0,0xF1,0xF4,0x8B,0x04,0x75,0x00,0x04,0x49,0xFF,
+0xFF,0x1B,0x5A,0x08,0x01,0x04,0x48,0x00,0x00,0xBC,0x80,0x08,0xF1,0x04,0xF2,0x0A,
+0xF3,0x08,0x49,0xFF,0xFF,0x3E,0x5A,0x08,0x01,0x04,0x48,0x00,0x00,0xB2,0xF4,0x0B,
+0xE0,0xE4,0x80,0x04,0x40,0x03,0xBC,0x1A,0xE0,0x87,0x94,0x05,0x40,0x43,0xBC,0x1A,
+0x40,0x70,0x10,0xF6,0xF0,0x05,0x5A,0x08,0x01,0x32,0x00,0x04,0x00,0x00,0x5A,0x08,
+0x01,0x2E,0x00,0x13,0x7F,0xFC,0x44,0x00,0x01,0x24,0xFE,0x0C,0x44,0x12,0x33,0x88,
+0x88,0x20,0x00,0x10,0x81,0x0D,0x5A,0x18,0x02,0x22,0x2E,0x10,0x11,0x99,0x5A,0x18,
+0x01,0x1E,0x44,0x12,0x34,0xA8,0x88,0x01,0x00,0x25,0x7F,0xF4,0xA0,0x01,0x40,0x10,
+0x58,0x08,0x90,0x3A,0x96,0x48,0x96,0x03,0xE2,0x22,0x90,0x0A,0xE9,0x0F,0x00,0x25,
+0x7F,0xF5,0xE2,0x41,0xE9,0x0B,0x00,0x15,0x7F,0xF6,0x96,0x00,0xE2,0x01,0xE9,0x06,
+0x00,0x15,0x7F,0xF7,0xE2,0x20,0x4E,0xF2,0x00,0xD3,0xF5,0x06,0x46,0x00,0x50,0x00,
+0xE0,0x05,0xE8,0x02,0x80,0xA0,0xF0,0x09,0xC0,0x0A,0x5E,0xF3,0x80,0x20,0xE9,0x07,
+0x5E,0xF3,0x80,0x41,0xE9,0x05,0x44,0x70,0x00,0x40,0xD5,0x02,0xFA,0xF0,0xA0,0x34,
+0xE0,0x05,0xE8,0x5A,0xA0,0x75,0xE0,0x01,0xE8,0x5B,0xB4,0x6A,0xB4,0x46,0x04,0x45,
+0x00,0x01,0x9A,0x9A,0xA0,0x73,0xA0,0xF1,0xA0,0x32,0x9A,0xE3,0x42,0x40,0x84,0x24,
+0x42,0x40,0x00,0x73,0x42,0x91,0x8C,0x24,0xF5,0x8A,0xF4,0x86,0x42,0x91,0x08,0x73,
+0x49,0xFF,0xFC,0x68,0xF4,0x06,0xF5,0x0A,0x4E,0x04,0x00,0x03,0xFE,0x02,0x44,0x10,
+0x7F,0xFF,0xE0,0x20,0xE8,0x08,0xE0,0x89,0x90,0x01,0xE8,0x03,0x91,0x22,0xD5,0xFA,
+0x90,0x82,0xD5,0xF8,0x4E,0x92,0x00,0x23,0xC4,0x23,0xFE,0x04,0xF0,0x8C,0xB0,0x0C,
+0xF4,0x8B,0xF5,0x8A,0x49,0xFF,0xFC,0x53,0xF0,0x86,0xF0,0x0C,0x40,0x90,0x25,0x36,
+0xB0,0x0C,0x14,0x9F,0x80,0x0C,0x49,0xFF,0xFC,0x4A,0xF1,0x06,0xF4,0x0B,0x88,0x01,
+0x96,0x40,0xF0,0x0C,0xF5,0x0A,0x40,0x40,0x10,0x96,0xE6,0x3F,0xE9,0x05,0x9E,0x09,
+0x90,0x81,0x96,0x40,0xD5,0xFB,0xF4,0x8C,0xD5,0x04,0x80,0x29,0xD5,0x02,0x80,0x24,
+0x84,0x01,0x40,0x00,0x04,0x0C,0x90,0x07,0xF1,0x0C,0x94,0x06,0xE0,0x01,0xE8,0x08,
+0xA0,0x35,0xE0,0x05,0xE9,0x05,0xFF,0x7C,0x40,0x92,0x94,0x0A,0xD5,0x03,0x46,0x90,
+0x50,0x00,0xF1,0x01,0xF0,0x07,0x50,0xA5,0x00,0x38,0x38,0x90,0x06,0x0A,0x80,0x01,
+0x8C,0x01,0xF0,0x81,0x00,0x0F,0x80,0x04,0xF1,0x03,0xE2,0x01,0x4E,0xF3,0xFF,0x11,
+0x51,0xCE,0x00,0x01,0xF1,0x02,0x54,0x0E,0x00,0xFF,0xE2,0x01,0x50,0x63,0x00,0x20,
+0x4E,0xF3,0xFE,0xFB,0xF0,0x02,0xF1,0x03,0xF2,0x03,0xE2,0x01,0xF1,0x02,0xB1,0x8D,
+0x40,0x11,0x3C,0x1B,0x80,0x06,0x49,0xFF,0xEE,0x5F,0x44,0x70,0x01,0x24,0x44,0x22,
+0x2F,0x5C,0x84,0x20,0x84,0x0B,0x46,0x30,0x50,0x00,0x44,0x40,0x00,0x38,0x44,0x52,
+0x33,0x88,0x85,0x41,0x87,0x9F,0x0C,0x91,0x00,0x01,0x81,0xE9,0x42,0xF0,0x80,0x73,
+0x38,0xF3,0x3E,0x02,0x4C,0xF1,0xC0,0x05,0x15,0xC1,0x7F,0xFF,0xD5,0x18,0x4E,0x95,
+0x00,0x17,0x05,0xEF,0x80,0x04,0x40,0xF0,0x94,0x08,0x38,0xFF,0x3C,0x00,0x83,0xC8,
+0x43,0xE4,0x90,0x73,0x81,0x25,0x42,0x97,0x9C,0x73,0x10,0xFF,0x00,0x3B,0x81,0xE9,
+0x10,0xA4,0x81,0x0E,0x04,0x91,0x7F,0xFF,0x10,0x97,0x81,0x22,0x8C,0x21,0x04,0xFF,
+0x80,0x02,0x54,0x90,0x80,0xFF,0xE3,0x2F,0xE9,0xD7,0xD5,0x0A,0xF0,0x06,0xA0,0x75,
+0x40,0x00,0x1C,0x16,0x94,0x05,0xE0,0x01,0x4E,0xF2,0xFF,0x29,0xD5,0x9B,0x51,0xFF,
+0x82,0x18,0xFC,0xC0,0xFC,0x40,0x84,0x81,0x40,0x42,0x04,0x0C,0xE4,0x02,0x40,0x20,
+0x04,0x0C,0x95,0xA1,0x9D,0xE5,0x50,0x92,0x7F,0xFB,0xE9,0x23,0x84,0x60,0x90,0x01,
+0x8C,0x61,0x5A,0x08,0x01,0xFE,0x40,0x21,0x0C,0x0E,0x40,0x01,0x84,0x0C,0x85,0x00,
+0xE0,0x49,0xE9,0x03,0xE0,0xE2,0xE8,0x16,0x80,0x68,0xE0,0x46,0xE8,0x06,0xFE,0x94,
+0x40,0x21,0x04,0x0E,0x8C,0x61,0xD5,0xFA,0x81,0x03,0x81,0x44,0x84,0xA0,0xD3,0x04,
+0x91,0x41,0x8C,0xA1,0xD5,0xFD,0xE4,0xAA,0x88,0x0A,0x90,0x41,0xE9,0xEA,0xD5,0x02,
+0x84,0x00,0xFC,0xC0,0xFC,0x58,0xF0,0x8F,0x44,0x02,0x00,0x98,0xF1,0x88,0xB0,0x5B,
+0xF2,0x81,0x3A,0x20,0x14,0x04,0x3A,0x20,0x94,0x24,0xA4,0x00,0xAC,0x08,0x44,0x12,
+0x00,0xAC,0xB0,0x17,0x3A,0x20,0x94,0x00,0x3A,0x20,0x14,0x20,0xF0,0x01,0xC8,0x09,
+0x3C,0x04,0x05,0x9B,0x3C,0x14,0x05,0x9A,0x9A,0x41,0x2E,0x07,0xDE,0x16,0xD5,0x08,
+0x3C,0x04,0x05,0x9D,0x3C,0x14,0x05,0x9C,0x9A,0x41,0x2E,0x07,0xDE,0x17,0x8E,0x01,
+0x96,0x02,0x40,0x00,0x80,0x16,0x96,0x03,0xF0,0x8D,0x84,0x00,0x44,0x62,0x13,0x4C,
+0xF0,0x84,0xF5,0x04,0xF1,0x08,0x4C,0x50,0x82,0x0D,0x00,0x03,0x00,0x3C,0x4E,0x02,
+0x02,0x01,0x04,0x03,0x00,0x0A,0xF0,0x85,0x4E,0x07,0x01,0xFC,0xF0,0x01,0xC8,0x08,
+0x00,0x53,0x00,0x37,0x4E,0x52,0x01,0xF6,0x2E,0x07,0xDE,0x16,0xD5,0x07,0x00,0x53,
+0x00,0x38,0x4E,0x52,0x01,0xEF,0x2E,0x07,0xDE,0x17,0x8E,0x01,0x4C,0x50,0x01,0xEA,
+0x00,0x03,0x00,0x37,0xF0,0x82,0x00,0x03,0x00,0x38,0xF0,0x83,0x84,0x02,0xF0,0x8E,
+0x84,0x20,0x84,0x46,0xB0,0x11,0x49,0x00,0x44,0xF7,0xB0,0x20,0x84,0x20,0xFA,0x42,
+0x49,0x00,0x44,0xF2,0x84,0x00,0x50,0xAF,0x80,0x6C,0xF0,0x86,0x00,0x05,0x00,0x00,
+0xF1,0x02,0xF0,0x89,0x88,0x01,0x96,0x00,0xF0,0x87,0x20,0x0F,0x80,0x1C,0x20,0x15,
+0x00,0x01,0x4E,0x05,0x00,0xD1,0xF2,0x03,0x96,0x48,0x99,0xCA,0x97,0xF8,0xF1,0x8A,
+0x96,0x7A,0x4E,0x15,0x00,0xC9,0x2E,0x97,0xDE,0x16,0xE0,0x09,0x4E,0xF2,0x00,0xC4,
+0x2E,0x27,0xDE,0x17,0xE0,0x22,0xF2,0x8B,0x4E,0xF2,0x00,0xBE,0x42,0x00,0xA4,0x73,
+0xF2,0x0F,0x94,0x41,0x88,0x22,0xF1,0x8C,0x22,0x10,0x80,0x00,0x84,0x60,0x4E,0x15,
+0x00,0x06,0xF2,0x06,0x80,0x61,0x88,0x41,0xF2,0x86,0xF2,0x08,0x5A,0x20,0x02,0x04,
+0x48,0x00,0x00,0x9A,0x2E,0x57,0xF1,0x9A,0x2E,0x27,0xF1,0xD2,0x4C,0x51,0x40,0x94,
+0x2E,0x47,0xF1,0x96,0x2E,0x27,0xF1,0xCE,0x88,0x44,0xE4,0x54,0x4E,0xF2,0x00,0x8C,
+0x45,0xC2,0x30,0xC8,0x44,0x8F,0xFF,0xDF,0x38,0x0E,0x00,0x00,0x84,0x21,0x40,0x00,
+0x20,0x02,0x3E,0x17,0xF4,0x13,0x5A,0x00,0x1F,0x04,0x48,0x00,0x00,0x81,0x84,0x20,
+0xFA,0x5C,0xB0,0x25,0x49,0x00,0x44,0x98,0x84,0x40,0x80,0x9C,0x80,0xA8,0x80,0x22,
+0x51,0xEF,0x80,0x5C,0x44,0x82,0x2F,0xF0,0x51,0xCF,0x80,0x54,0xF3,0x07,0x38,0x01,
+0x78,0x00,0x88,0x03,0x96,0x00,0x40,0x3F,0x08,0x00,0xE2,0x09,0x20,0x31,0x80,0x01,
+0xE8,0x18,0x88,0x67,0x04,0xFF,0x80,0x0B,0x96,0xD8,0xE2,0x6F,0xE8,0x12,0x88,0x04,
+0x42,0x01,0xA4,0x73,0xA6,0x00,0x40,0x30,0x14,0x02,0x5A,0x30,0x1F,0x0B,0x96,0x27,
+0x38,0x34,0x00,0x00,0x5A,0x30,0xFF,0x06,0x38,0x0E,0x04,0x08,0x8C,0x21,0x96,0x49,
+0x8C,0x42,0x5A,0x28,0x10,0xDD,0xF2,0x07,0x44,0x02,0x30,0x20,0x50,0x8F,0x80,0x54,
+0x38,0x90,0x09,0x01,0x44,0x02,0x33,0x08,0x45,0xC0,0x00,0x38,0x39,0xE0,0x1D,0x01,
+0x84,0x00,0x80,0x60,0x44,0x70,0xFF,0xFF,0xE2,0x01,0xE8,0x29,0x38,0x44,0x00,0x00,
+0x44,0x52,0x13,0x58,0x42,0x52,0x70,0x73,0x00,0xF2,0x80,0x30,0x5A,0xF8,0x01,0x1D,
+0xB0,0xA5,0x38,0x21,0x12,0x02,0xCA,0x18,0xA0,0xAB,0xA1,0x6C,0x40,0x24,0x88,0x01,
+0x40,0x5F,0x14,0x01,0xFF,0x6C,0x42,0x51,0x08,0x73,0x92,0xA5,0xC5,0x06,0xE2,0xE5,
+0xE8,0x05,0x44,0x50,0xFF,0xFF,0xD5,0x02,0x80,0xAF,0xB0,0xA5,0x40,0x53,0x94,0xB7,
+0x38,0x51,0x12,0x0A,0x88,0x65,0x8C,0x01,0x96,0x00,0xD5,0xD7,0xF0,0x0C,0xF2,0x04,
+0x22,0x10,0x00,0x00,0xB0,0x25,0x38,0x00,0x0A,0x02,0xFE,0x0C,0x40,0x30,0x0C,0x77,
+0x96,0xDB,0xD5,0x05,0x84,0x00,0x3E,0x07,0xF4,0x13,0x80,0x61,0xF0,0x0A,0xF1,0x09,
+0x8C,0x01,0x8C,0x21,0x96,0x48,0x96,0x00,0x84,0x43,0x42,0x00,0x88,0x73,0xB0,0x60,
+0x38,0x30,0x81,0x09,0x8D,0x42,0x50,0x0F,0x80,0x7E,0x4C,0xA0,0x7F,0x21,0xB0,0xA0,
+0x84,0x20,0x50,0xAF,0x80,0x44,0x84,0x00,0xF3,0x01,0x38,0x41,0x01,0x01,0xCB,0x07,
+0x38,0x35,0x05,0x01,0x88,0x64,0x38,0x35,0x05,0x09,0xD5,0x06,0x38,0x35,0x01,0x01,
+0x88,0x64,0x38,0x35,0x01,0x09,0x8C,0x01,0x5A,0x08,0x03,0xF0,0x8C,0x21,0x8C,0x46,
+0x5A,0x18,0x03,0xEB,0xF0,0x08,0x5A,0x08,0x01,0x25,0x22,0x0F,0x80,0x23,0x22,0xFF,
+0x80,0x22,0xE0,0x0F,0xE8,0x09,0xF0,0x01,0xC8,0x04,0xF0,0x02,0x8E,0x01,0xD5,0x0C,
+0xF0,0x03,0x8E,0x01,0xD5,0x0E,0x22,0xFF,0x80,0x24,0xE0,0x0F,0xE8,0x0C,0xF0,0x01,
+0xC8,0x06,0xF0,0x02,0x8C,0x01,0x96,0x00,0xF0,0x82,0xD5,0x05,0xF0,0x03,0x8C,0x01,
+0x96,0x00,0xF0,0x83,0xF0,0x0E,0x5A,0x00,0x01,0x05,0x84,0x01,0x48,0xFF,0xFE,0xD1,
+0x2E,0x07,0xF4,0x13,0x5A,0x08,0x01,0x07,0xA0,0x36,0x83,0x86,0xB8,0x88,0xA0,0x37,
+0xB8,0x89,0xF0,0x06,0x44,0x70,0x00,0x64,0xF1,0x05,0xFF,0xC4,0x44,0x00,0x00,0x55,
+0xFE,0x0C,0xE0,0xE0,0x4E,0xF3,0x00,0x9E,0xF0,0x06,0xE0,0x01,0xE8,0x08,0x40,0x73,
+0x84,0xF6,0x50,0x93,0xFF,0xAB,0x52,0x73,0x80,0x64,0xD5,0x03,0x84,0xE0,0x85,0x21,
+0x22,0x15,0x00,0x00,0x22,0x05,0x00,0x01,0xE0,0x01,0xE8,0x03,0x12,0x15,0x00,0x01,
+0x22,0x0F,0x80,0x24,0x22,0x2F,0x80,0x23,0xE0,0x40,0xE8,0x03,0x12,0x0F,0x80,0x23,
+0x88,0x01,0x22,0x2F,0x80,0x23,0x44,0x10,0x00,0x64,0xFE,0x0C,0x44,0x10,0x00,0x82,
+0xFE,0x54,0xE0,0x20,0xE9,0x1B,0x44,0x10,0x00,0x5A,0xFE,0x54,0xE0,0x01,0xE9,0x18,
+0x84,0x7E,0x94,0x51,0xFE,0x9C,0x40,0x10,0x04,0x36,0x40,0x00,0x08,0x16,0x50,0x10,
+0xFF,0xD3,0x50,0x00,0x00,0x41,0x42,0x30,0x1C,0x24,0x42,0xF4,0x84,0x24,0xE0,0x6F,
+0x40,0x70,0xBC,0x1B,0x40,0x90,0x3C,0x1B,0xD5,0x03,0x84,0xE1,0x85,0x20,0x85,0x00,
+0x51,0xCF,0x80,0x4C,0xB0,0x11,0x38,0x00,0x21,0x11,0x4E,0x06,0x00,0x06,0xB0,0x51,
+0x84,0x01,0x38,0x00,0xA1,0x09,0x38,0x05,0x21,0x11,0x84,0x28,0x49,0xFF,0xFD,0xE4,
+0x38,0x0E,0x21,0x09,0x8D,0x01,0x5A,0x88,0x03,0xEF,0x02,0x0E,0x00,0x01,0x22,0x1E,
+0x00,0x02,0x22,0x2E,0x00,0x00,0x94,0x01,0x8A,0x01,0x8A,0x02,0x96,0x03,0xC0,0x08,
+0x8A,0x22,0xF2,0x0D,0x94,0x01,0xFE,0x54,0x40,0x00,0x80,0x16,0x96,0x03,0xF1,0x01,
+0x40,0x24,0x9C,0x00,0xC9,0x18,0xF3,0x02,0x44,0x12,0x30,0x20,0x38,0x10,0x8D,0x11,
+0x88,0x01,0xA0,0x76,0xFF,0xCC,0x42,0x70,0x24,0x73,0x40,0x73,0x88,0xF6,0x4E,0x75,
+0x00,0x08,0x3C,0x23,0xEF,0x08,0xE0,0x47,0x40,0x71,0x3C,0x1B,0xD5,0x02,0xF7,0x01,
+0xA9,0xF6,0xD5,0x17,0xF3,0x03,0x44,0x12,0x33,0x08,0x38,0x10,0x8D,0x11,0x88,0x01,
+0xA0,0x77,0xFF,0xCC,0x42,0x70,0x24,0x73,0x40,0x73,0x88,0xF6,0x4E,0x75,0x00,0x08,
+0x3C,0x03,0xEF,0x09,0xE0,0x07,0x40,0x70,0x3C,0x1B,0xD5,0x02,0x84,0xE0,0xA9,0xF7,
+0xF0,0x04,0x50,0x63,0x00,0x38,0x8C,0x01,0x96,0x00,0xF0,0x84,0x48,0xFF,0xFD,0xF3,
+0xFC,0xD8,0xFC,0x41,0x80,0xE0,0x84,0x48,0x80,0xC1,0x80,0x1F,0x84,0x20,0x49,0x00,
+0x43,0x0B,0x84,0x60,0x3C,0x9D,0xFB,0xA4,0x2E,0x4F,0xF4,0x12,0x50,0x03,0x80,0x1C,
+0x80,0xA3,0x80,0x43,0xD6,0x18,0x00,0x10,0x00,0x14,0x5A,0x18,0x01,0x10,0xE6,0x42,
+0xB4,0xE0,0xE8,0x03,0x38,0x7F,0x8A,0x0A,0x00,0x10,0x00,0x12,0x8C,0x41,0x88,0x61,
+0xE1,0x27,0x96,0x90,0x96,0xD9,0xE8,0x02,0x84,0x80,0x8C,0xA1,0x97,0x68,0x50,0x00,
+0x00,0x38,0xD5,0xE9,0x5A,0x28,0x02,0x17,0xE6,0x79,0xE8,0x14,0xF1,0x01,0xB4,0x1F,
+0x80,0xA1,0xE0,0x01,0x40,0x50,0x3C,0x1A,0xE0,0x20,0x40,0x00,0xBC,0x1B,0x84,0x25,
+0xFE,0x0C,0x40,0xF0,0x09,0xF6,0xE0,0xAF,0xE8,0x05,0x8C,0x81,0x3E,0x47,0xF4,0x12,
+0xD5,0x11,0x8E,0x81,0xE6,0x79,0x3E,0x47,0xF4,0x12,0xE9,0x0C,0x3C,0x03,0xFA,0x08,
+0xE6,0x19,0xE9,0x08,0x84,0x01,0x3C,0x0F,0xFD,0x03,0x84,0x00,0x3E,0x07,0xF4,0x12,
+0xD5,0x07,0x2E,0x07,0xF4,0x08,0xC8,0x04,0xCA,0x03,0x3C,0x2F,0xFD,0x03,0x2E,0x17,
+0xF4,0x12,0x3E,0x27,0xF4,0x08,0x80,0x01,0x96,0x4A,0xE4,0x2C,0x3C,0x3B,0xFA,0x08,
+0xE9,0x03,0x84,0x0B,0xD5,0x05,0x96,0x42,0x4E,0x14,0x00,0x03,0x84,0x00,0x96,0x42,
+0x3E,0x07,0xF4,0x12,0xC1,0x0A,0x3C,0x0D,0xFD,0x03,0xC8,0x07,0x3C,0x03,0xF7,0xC7,
+0x58,0x00,0x00,0x40,0x3C,0x0B,0xF7,0xC7,0xFC,0xC1,0xFC,0x01,0x44,0x62,0x13,0x4C,
+0x84,0x40,0xA6,0x70,0xF0,0x81,0x49,0xFF,0xFD,0x47,0xF0,0x01,0xA6,0x70,0x84,0x41,
+0x49,0xFF,0xFD,0x42,0xFC,0x81,0xFC,0x00,0xB4,0x40,0x80,0xA2,0x4E,0x24,0x00,0x03,
+0xFF,0x52,0x84,0xC0,0x50,0x43,0x00,0x0F,0x40,0x12,0x90,0x0E,0xC1,0x03,0x8C,0xC1,
+0xD5,0xFA,0xA0,0x41,0x80,0x61,0x4E,0x14,0x00,0x03,0xFE,0xCA,0x40,0x31,0x90,0x0E,
+0xCB,0xF7,0x40,0x21,0x18,0x0E,0x40,0x10,0x98,0x0E,0xB6,0x40,0xA8,0x41,0x42,0x00,
+0x84,0x24,0x42,0x01,0x08,0x73,0x49,0xFF,0xF8,0x97,0x40,0x00,0x18,0x0C,0xFC,0x80,
+0xFC,0x41,0x80,0xC0,0x81,0x23,0x22,0x00,0x80,0x08,0x22,0x31,0x00,0x08,0x8A,0x03,
+0xB6,0x1F,0x22,0x00,0x80,0x09,0x22,0x11,0x00,0x09,0x8A,0x01,0xF0,0x81,0x80,0x1F,
+0x49,0xFF,0xFF,0xCB,0x80,0xE0,0x80,0x06,0x49,0xFF,0xFF,0xC7,0x94,0x79,0xE0,0x20,
+0xE8,0x3C,0x84,0xA0,0x80,0x25,0x80,0x45,0xFA,0x71,0x4C,0x54,0x80,0x09,0x40,0x13,
+0x94,0x1A,0xFE,0x5C,0x90,0x25,0x88,0x41,0xE0,0x02,0xE8,0x04,0xFA,0x30,0x84,0x40,
+0xD5,0x04,0x8C,0xA1,0x97,0x68,0xD5,0xF2,0x50,0x30,0xFF,0xE0,0x96,0xD8,0xE2,0x69,
+0xE8,0x04,0x88,0x41,0x8C,0x21,0xD5,0xF9,0xE2,0xA9,0xE9,0x0C,0xB4,0x26,0xA0,0x31,
+0x94,0x4D,0x94,0x05,0x40,0x10,0x88,0x36,0x40,0x00,0x08,0x16,0xB6,0x26,0xA8,0x31,
+0xD5,0x12,0x5A,0x50,0x01,0x13,0xB4,0x26,0xFA,0x51,0xFE,0x7C,0x40,0x10,0x80,0x36,
+0xFE,0x54,0x90,0x25,0xB6,0x26,0xA0,0x71,0xFF,0xCC,0x40,0x03,0x80,0x16,0xFE,0x84,
+0x90,0x45,0xA8,0xB1,0x84,0x01,0xFC,0xC1,0x84,0x00,0xFC,0xC1,0xFC,0x22,0x80,0xC0,
+0x50,0x70,0x0C,0x8C,0x00,0x03,0x01,0x05,0xC0,0x42,0xB0,0x41,0x84,0x40,0x80,0x06,
+0x49,0xFF,0xE7,0x98,0xF0,0x01,0x22,0x20,0x00,0x04,0x22,0x10,0x00,0x05,0xAC,0x86,
+0xAC,0x47,0x12,0x20,0x00,0x08,0x12,0x10,0x00,0x09,0x02,0x03,0x00,0x80,0x5A,0x08,
+0x01,0x07,0x12,0x23,0x00,0x8A,0x12,0x13,0x00,0x8B,0xD5,0x1E,0x02,0x33,0x00,0x81,
+0x5A,0x38,0x01,0x26,0xE6,0x04,0xE8,0x23,0x22,0x03,0x00,0x8A,0x9A,0x82,0x22,0x03,
+0x00,0x8B,0xF2,0x82,0x9A,0x41,0xB0,0x02,0xF1,0x83,0x49,0xFF,0xFF,0x56,0x5E,0xF0,
+0x00,0x64,0xE8,0x15,0xF0,0x01,0x22,0x10,0x00,0x04,0x12,0x13,0x00,0x8A,0x22,0x00,
+0x00,0x05,0x12,0x03,0x00,0x8B,0x04,0x03,0x00,0x47,0x40,0x10,0x58,0x08,0x96,0x03,
+0x90,0x3A,0x90,0x0A,0x10,0x13,0x01,0x18,0x10,0x03,0x01,0x19,0x50,0x63,0x01,0x24,
+0x4C,0x63,0xFF,0xBA,0xFC,0xA2,0xFC,0x46,0xFA,0x44,0x80,0xC0,0x00,0xA0,0x80,0x0C,
+0x00,0x80,0x80,0x0D,0xB0,0x02,0x84,0x20,0xB1,0xC7,0x49,0x00,0x41,0xBD,0x80,0x07,
+0x84,0x20,0xFA,0x44,0x49,0x00,0x41,0xB8,0x51,0xC3,0x0C,0x8C,0x00,0x03,0x01,0x05,
+0x5A,0x08,0x02,0x69,0x85,0x24,0x80,0x06,0xB0,0x41,0x80,0x49,0x49,0xFF,0xE7,0x3A,
+0x4E,0xA2,0x00,0x0D,0x5A,0xA8,0x01,0x15,0xF0,0x01,0xB0,0x82,0x22,0x10,0x00,0x06,
+0x38,0x11,0x26,0x0A,0x22,0x00,0x00,0x07,0xD5,0x09,0xF0,0x01,0xB0,0x82,0x22,0x10,
+0x00,0x04,0x38,0x11,0x26,0x0A,0x22,0x00,0x00,0x05,0x38,0x03,0xA6,0x0A,0x4E,0x92,
+0x00,0x07,0x50,0x04,0xFF,0xFF,0x54,0x90,0x00,0xFF,0xD5,0xDE,0xF1,0x01,0x5A,0x80,
+0x01,0x05,0x5A,0x80,0x02,0x08,0xD5,0x38,0x02,0x03,0x00,0x81,0xE6,0x02,0xE8,0x12,
+0xD5,0x33,0x02,0x03,0x00,0x81,0x5A,0x08,0x02,0x18,0x02,0x03,0x00,0x80,0xE6,0x02,
+0xE9,0x2B,0x04,0x03,0x00,0x48,0x96,0x0E,0xC0,0x05,0xF0,0x03,0xAC,0x0E,0xA0,0x39,
+0xD5,0x22,0xF2,0x02,0xF0,0x03,0x88,0x02,0x90,0x01,0xAC,0x0E,0xB4,0x47,0xA0,0x39,
+0x88,0x02,0x90,0x01,0xD5,0x18,0xE6,0x03,0xE9,0x17,0x02,0x03,0x00,0x80,0xE6,0x03,
+0xE9,0x13,0xF2,0x02,0xF0,0x04,0x88,0x02,0x40,0x20,0x08,0x0A,0xF0,0x03,0x90,0x01,
+0x88,0x02,0xAC,0x0E,0xB4,0x47,0xA0,0x3A,0x88,0x02,0x40,0x20,0x08,0x0A,0xA0,0x39,
+0x90,0x01,0x88,0x02,0xAC,0x0F,0xA4,0x0E,0x12,0x00,0x80,0x08,0xA4,0x0F,0x12,0x00,
+0x80,0x09,0x50,0x63,0x01,0x24,0x4C,0x6E,0x7F,0x93,0xFC,0xC6,0xFC,0x40,0xB4,0xE0,
+0xA1,0x42,0xA1,0x09,0xB4,0xC1,0x04,0x90,0x00,0x01,0xA0,0x0A,0x42,0x33,0x90,0x24,
+0x42,0x12,0x90,0x24,0x42,0x10,0x24,0x75,0x42,0x33,0x24,0x75,0xFE,0x3C,0x42,0x03,
+0x14,0x75,0xCB,0x05,0xC9,0x0C,0x5C,0x00,0x00,0x01,0xFC,0xC0,0x40,0x00,0x0C,0x16,
+0x40,0x10,0x8C,0x36,0xA8,0x11,0xB6,0x22,0x84,0x02,0xFC,0xC0,0x80,0x03,0xFC,0xC0,
+0xFC,0x49,0x81,0x40,0x00,0x0F,0x80,0x68,0x81,0x21,0xF0,0x83,0x84,0x00,0xF0,0x87,
+0xF0,0x88,0xF0,0x89,0xF0,0x8A,0xF0,0x8B,0xF0,0x8C,0x02,0x05,0x00,0x80,0x80,0xC2,
+0xE6,0x06,0xF3,0x85,0x83,0x84,0xF5,0x82,0x80,0xE0,0xE9,0x02,0x84,0xE5,0x84,0x03,
+0xFE,0x34,0x97,0xF9,0xF0,0x84,0x85,0x00,0x40,0x14,0x08,0x08,0xB0,0x8D,0x88,0x22,
+0x80,0x0A,0x54,0x24,0x00,0xFF,0x8D,0x01,0x49,0xFF,0xE6,0x8C,0x5A,0x88,0x05,0xF6,
+0xF2,0x0D,0xF0,0x0E,0xF4,0x09,0x22,0x31,0x00,0x06,0x22,0x10,0x00,0x08,0x85,0x00,
+0x9A,0x59,0x22,0x31,0x00,0x07,0x22,0x20,0x00,0x09,0xF1,0x81,0x41,0xE1,0x88,0x01,
+0xF1,0x87,0x15,0xEF,0x80,0x08,0xF3,0x0A,0xB1,0x4D,0x50,0x24,0x00,0x01,0x96,0x90,
+0xE2,0x47,0xE8,0x17,0x50,0x81,0x7F,0xFF,0x38,0xF2,0xA2,0x02,0x38,0x82,0x8A,0x02,
+0x22,0x17,0x80,0x06,0x22,0x84,0x00,0x08,0x8A,0x28,0x22,0x87,0x80,0x07,0x38,0xF2,
+0x8A,0x02,0x88,0x81,0x22,0xF7,0x80,0x09,0x8B,0x0F,0x88,0x68,0x81,0x02,0xD5,0xE6,
+0xE6,0xE3,0xF4,0x89,0xF3,0x8A,0xE9,0x11,0xF3,0x0F,0x22,0x40,0x00,0x06,0xF1,0x01,
+0x22,0x21,0x80,0x08,0x22,0x00,0x00,0x07,0x8A,0x44,0x88,0x22,0xF1,0x8B,0x22,0x11,
+0x80,0x09,0x9A,0x08,0x88,0x1E,0xF0,0x8C,0xF1,0x09,0x4E,0x14,0x00,0x03,0xFE,0x4A,
+0x44,0x00,0x7F,0xFF,0xE0,0x01,0x80,0x20,0xE9,0x07,0xF0,0x0A,0x4E,0x04,0x00,0x03,
+0xFE,0x02,0xE0,0x20,0xE8,0x04,0x84,0x00,0xF0,0x89,0xF0,0x8A,0xF1,0x0B,0x4E,0x14,
+0x00,0x03,0xFE,0x4A,0x44,0x00,0x7F,0xFF,0xE0,0x01,0x80,0x20,0xE9,0x07,0xF0,0x0C,
+0x4E,0x04,0x00,0x03,0xFE,0x02,0xE0,0x20,0xE8,0x04,0x84,0x00,0xF0,0x8B,0xF0,0x8C,
+0xB0,0x07,0x49,0xFF,0xFE,0x02,0x4E,0x07,0x00,0x06,0xB0,0x07,0x49,0xFF,0xFD,0xFD,
+0xD5,0x02,0x84,0x01,0xF1,0x04,0xE0,0x20,0xE9,0x1F,0xE0,0xC0,0xE8,0x1A,0xF2,0x07,
+0xF4,0x08,0x50,0x13,0x7F,0xF6,0x96,0x49,0x42,0x31,0x04,0x24,0xFE,0x64,0x40,0x31,
+0x80,0x76,0x40,0x00,0x80,0x16,0x8A,0x43,0x9A,0x20,0x84,0x63,0xFE,0x9C,0x84,0xA2,
+0xFE,0xC4,0x40,0x21,0x14,0x56,0x40,0x31,0x94,0x76,0xF2,0x87,0xF3,0x88,0xD5,0x04,
+0x84,0x00,0xF0,0x87,0xF0,0x88,0xB0,0x0B,0x49,0xFF,0xFD,0xD7,0x4E,0x07,0x00,0x06,
+0xB0,0x0B,0x49,0xFF,0xFD,0xD2,0xD5,0x02,0x84,0x01,0x04,0x25,0x00,0x47,0x46,0x11,
+0x00,0x00,0xFE,0x56,0xC1,0x04,0x84,0x00,0xF0,0x8B,0xD5,0x16,0x84,0x23,0x95,0xB2,
+0x40,0x63,0x04,0xD6,0x96,0x71,0xE0,0x20,0xE8,0xF7,0xF2,0x0B,0x8E,0xCA,0x97,0xB1,
+0xF1,0x0C,0x42,0x31,0x18,0x24,0x40,0x31,0x80,0x76,0xFF,0x8C,0x8A,0x43,0x40,0x03,
+0x00,0x16,0xF2,0x8B,0x9A,0x08,0xF0,0x8C,0xB0,0x09,0x49,0xFF,0xFD,0xAE,0x4E,0x07,
+0x00,0x06,0xB0,0x09,0x49,0xFF,0xFD,0xA9,0xD5,0x02,0x84,0x01,0x04,0x35,0x00,0x47,
+0x46,0x11,0x00,0x00,0xFE,0xCE,0xC3,0x05,0x84,0x00,0xF0,0x89,0xF0,0x8A,0xD5,0x15,
+0xF1,0x05,0x94,0x8A,0x96,0x51,0xE0,0x20,0xE8,0x12,0xF4,0x09,0xF2,0x0A,0x92,0x21,
+0x42,0x52,0x04,0x24,0xFE,0x54,0x40,0x52,0x80,0xB6,0x40,0x10,0x80,0x36,0x8A,0x85,
+0x9A,0x51,0xF4,0x89,0xF1,0x8A,0x80,0x03,0x80,0x60,0xD5,0x31,0x5A,0x88,0x04,0x27,
+0xF0,0x07,0xC8,0x24,0xF1,0x08,0xC9,0x25,0xF0,0x0B,0xC8,0x22,0xF1,0x0C,0xC9,0x21,
+0x84,0x21,0x80,0x01,0x80,0x61,0xB0,0x8D,0xE2,0x27,0xE8,0x16,0x9F,0x09,0x38,0x51,
+0x12,0x02,0x38,0x41,0x06,0x02,0x22,0xA2,0x80,0x06,0x22,0x62,0x00,0x06,0x4C,0xA3,
+0x00,0x03,0x84,0x60,0x22,0x52,0x80,0x07,0x22,0x42,0x00,0x07,0xD4,0x02,0x84,0x00,
+0x8C,0x21,0x96,0x48,0xD5,0xEA,0xCB,0x07,0xD5,0x04,0x80,0x03,0xD5,0x02,0x80,0x01,
+0x84,0x60,0xF3,0x89,0xC8,0x03,0xF0,0x8A,0xD5,0x02,0x84,0x01,0xF1,0x09,0xF2,0x02,
+0xF5,0x03,0x42,0x41,0x04,0x24,0x84,0x24,0xF2,0x07,0x40,0x42,0x04,0x96,0x42,0x4E,
+0x08,0x73,0xF2,0x0B,0xF7,0x02,0x42,0x42,0x88,0x73,0xF2,0x0A,0xF6,0x08,0xFE,0xBC,
+0x40,0x11,0x04,0x36,0x42,0x1E,0x18,0x73,0xF2,0x0C,0xF6,0x03,0x44,0x50,0x00,0x64,
+0x42,0x13,0x08,0x73,0x40,0x42,0x14,0x96,0x40,0x10,0x94,0x36,0x5A,0x38,0x01,0x15,
+0xF2,0x0D,0x22,0x51,0x00,0x06,0x3C,0x27,0xF7,0x3C,0x4C,0x22,0x80,0x08,0x3C,0x37,
+0xF7,0x3D,0x3C,0x23,0xEF,0x08,0x8A,0x43,0xDA,0x07,0xF2,0x0E,0x22,0x21,0x00,0x08,
+0x8A,0xA2,0xB6,0xA9,0xD5,0x02,0xB6,0x89,0x5A,0x08,0x01,0x16,0xF0,0x0D,0x22,0x50,
+0x00,0x07,0x3C,0x07,0xF7,0x42,0x4C,0x02,0x80,0x08,0x3C,0x27,0xF7,0x43,0x3C,0x03,
+0xEF,0x09,0x8A,0x02,0xD8,0x08,0xF0,0x0E,0x22,0x00,0x00,0x09,0x8A,0xA0,0x14,0x54,
+0x80,0x01,0xFC,0xC9,0x14,0x14,0x80,0x01,0xFC,0xC9,0xFC,0x43,0xB1,0xC2,0xB5,0x00,
+0x3A,0x23,0x94,0x20,0x00,0x4F,0x80,0x38,0x04,0x90,0x00,0x01,0x4E,0x42,0x00,0x8E,
+0x4E,0x85,0x00,0x03,0x80,0x43,0x4E,0x95,0x00,0x04,0xA1,0xFB,0xD5,0x02,0xA1,0xFA,
+0x5A,0x48,0x03,0x26,0x80,0x28,0x4E,0x84,0x00,0x04,0x52,0x14,0x00,0x00,0xE0,0x41,
+0xE9,0x04,0x84,0x20,0xB6,0x20,0xD5,0x08,0x84,0x21,0x4E,0x84,0x00,0x03,0x84,0x3F,
+0x42,0x81,0x04,0x75,0xB7,0x00,0x80,0x29,0x4E,0x94,0x00,0x04,0x52,0x14,0x80,0x00,
+0xE0,0xE1,0xE9,0x04,0x84,0x20,0xA8,0x41,0xFC,0xC3,0x84,0x21,0x4E,0x94,0x00,0x03,
+0x84,0x3F,0x42,0x93,0x84,0x75,0x14,0x90,0x00,0x01,0xFC,0xC3,0x81,0x40,0x5A,0x40,
+0x02,0x04,0x80,0xC1,0xD5,0x38,0x42,0x53,0xA0,0x24,0x42,0x41,0x24,0x24,0x84,0xC0,
+0xFE,0xEA,0x52,0xF2,0x00,0x00,0x51,0xC3,0x00,0x0F,0x80,0x25,0x4E,0x54,0x00,0x03,
+0x80,0x23,0x40,0x10,0xF0,0x0E,0xC1,0x04,0x8C,0xC1,0x97,0xB0,0xD5,0xF5,0x80,0x04,
+0x4E,0x44,0x00,0x03,0x80,0x0F,0x40,0x00,0x70,0x0E,0xC8,0xF7,0x40,0x42,0x18,0x0E,
+0x40,0x52,0x98,0x0E,0x42,0x02,0x10,0x24,0x42,0x02,0x94,0x73,0xF2,0x81,0x49,0xFF,
+0xF5,0x5B,0x40,0x60,0x18,0x0C,0xF2,0x01,0xC6,0x30,0x42,0x04,0xA4,0x24,0x42,0x04,
+0x20,0x73,0xFF,0xD4,0x49,0xFF,0xF5,0x50,0xFE,0x3C,0x40,0x60,0x18,0xD6,0x4E,0x64,
+0x00,0x03,0xFF,0xB2,0x80,0x0A,0x49,0xFF,0xFC,0x90,0x84,0x65,0x42,0x13,0x0C,0x24,
+0xE0,0x20,0xE9,0x1B,0xE0,0xC0,0xE9,0x06,0x84,0x00,0xB6,0x0A,0x14,0x05,0x00,0x01,
+0xFC,0xC3,0x42,0x24,0x18,0x24,0x42,0x64,0x98,0x24,0x40,0x21,0x00,0x56,0xB4,0x8A,
+0x40,0x63,0x00,0xD6,0x80,0x2A,0xA0,0x09,0x9A,0xA2,0x9B,0x86,0xFE,0x9C,0xFE,0xF4,
+0x90,0x42,0x90,0x62,0xB6,0x4A,0xA8,0xC9,0xFC,0xC3,0x84,0x4A,0xFE,0x54,0xE0,0x20,
+0xE8,0x04,0x8E,0x0A,0x96,0x01,0xDD,0x9E,0x96,0x09,0xDD,0x9E,0xB4,0x60,0x4E,0x35,
+0x00,0x0B,0xE0,0x23,0xE9,0x08,0xA0,0x01,0x4E,0x05,0x00,0x06,0xE0,0x40,0x56,0x07,
+0x80,0x01,0xDD,0x9E,0x84,0x00,0xDD,0x9E,0xA7,0x60,0x5C,0xF2,0x80,0x3C,0xE8,0x0F,
+0x95,0x6A,0x88,0xA3,0xAE,0x2B,0xA6,0x20,0x94,0x02,0x88,0x03,0xAE,0x42,0xA6,0x20,
+0x38,0x21,0x82,0x09,0xA6,0x20,0x8C,0x01,0xAE,0x20,0xDD,0x9E,0xFC,0x40,0x84,0xC0,
+0x44,0x70,0x7F,0xFF,0x80,0x86,0x38,0x91,0x9A,0x11,0x54,0xA3,0x00,0xFF,0xE0,0xE9,
+0x8C,0xC1,0x40,0x74,0xBC,0x1A,0x54,0x93,0x00,0xFF,0x40,0x45,0x3C,0x1A,0xE3,0x25,
+0xE9,0xF3,0xE0,0xE2,0xE8,0x06,0x95,0x22,0x88,0x64,0xAE,0x1B,0xAE,0x5A,0xAC,0x98,
+0xFC,0xC0,0xFC,0x5A,0x81,0x22,0x00,0x2F,0x80,0xF8,0x12,0x1F,0x80,0x19,0xF2,0x89,
+0x00,0x2F,0x80,0xFC,0xF1,0x40,0xF2,0x85,0x00,0x2F,0x81,0x04,0x12,0x0F,0x80,0x18,
+0xF2,0x87,0x84,0x00,0x2E,0x27,0xDE,0x16,0xAC,0x08,0xF2,0x81,0xF1,0x05,0x2E,0x27,
+0xDE,0x17,0xF3,0x86,0xB6,0x9F,0xF5,0x83,0xF2,0x88,0x5A,0x18,0x01,0x04,0xF1,0x3D,
+0xAE,0x08,0x85,0x01,0x87,0x80,0x4E,0x82,0x01,0x42,0x50,0x04,0x7F,0xFF,0xB0,0x4C,
+0xB0,0x8C,0x38,0x60,0x82,0x11,0x94,0x42,0x88,0x22,0x54,0x80,0x00,0xFF,0x22,0x70,
+0x80,0x01,0xF0,0x01,0xFE,0x3C,0xF0,0x82,0xF1,0x02,0xB4,0x1F,0x88,0x01,0x38,0x00,
+0x18,0x00,0x40,0x50,0x24,0x02,0x4C,0x54,0xFF,0xE8,0x40,0x14,0xA4,0x05,0x81,0x46,
+0xF1,0x8A,0x40,0x50,0x24,0x02,0x4C,0x54,0x80,0x11,0x50,0x25,0x7F,0xFF,0x96,0x10,
+0xF0,0x84,0x8E,0xC1,0xB4,0x1F,0xF1,0x02,0x97,0xB3,0x88,0x06,0x38,0x00,0x04,0x00,
+0x40,0x14,0xA4,0x05,0xF1,0x8A,0xD5,0x73,0xF1,0x01,0xE1,0x41,0xE8,0xEF,0xF1,0x0A,
+0xFE,0x0E,0xF1,0x02,0x54,0x00,0x00,0xE0,0x40,0x55,0x04,0x00,0xF1,0x06,0xFE,0x0F,
+0xB4,0x3F,0x38,0x00,0x94,0x08,0xF0,0x40,0xF1,0x40,0xA4,0x00,0x8C,0x01,0xAC,0x08,
+0xF0,0x05,0x5A,0x08,0x01,0x14,0xF0,0x03,0x80,0x27,0xF3,0x3C,0x38,0x00,0x15,0x11,
+0xF4,0x3D,0xF0,0x84,0xF2,0x04,0x80,0x0A,0xF5,0x8B,0x49,0xFF,0xFF,0x5F,0xF0,0x04,
+0xF5,0x0B,0xE0,0x1C,0x40,0x0E,0x3C,0x1B,0x83,0x80,0xF0,0x07,0x5A,0x08,0x01,0x0E,
+0xF0,0x03,0x38,0x00,0x15,0x11,0x40,0xFE,0x00,0x07,0xE8,0x07,0xF1,0x42,0x83,0x80,
+0x10,0xA0,0x80,0x00,0xF1,0x43,0xAF,0xC8,0x50,0x05,0x00,0x01,0x40,0xA0,0x00,0x11,
+0xB4,0x1F,0xF1,0x02,0x88,0x0A,0x38,0x00,0x04,0x00,0xD5,0xAC,0x4E,0x65,0x00,0x34,
+0xF1,0x0A,0xFE,0x0E,0xF1,0x02,0x54,0x00,0x00,0xE0,0x40,0xA3,0x04,0x00,0xF1,0x06,
+0xFE,0x0F,0xB4,0x3F,0x38,0x00,0xA8,0x08,0xF0,0x40,0xF1,0x40,0xA4,0x00,0x8C,0x01,
+0xAC,0x08,0xF0,0x05,0x5A,0x08,0x01,0x12,0xF0,0x03,0x80,0x27,0xF3,0x3C,0x38,0x50,
+0x29,0x11,0xF4,0x3D,0x80,0x45,0x80,0x06,0xF5,0x8B,0x49,0xFF,0xFF,0x1F,0xF5,0x0B,
+0xE0,0xBC,0x40,0x5E,0x3C,0x1B,0x83,0x85,0xF0,0x07,0x5A,0x00,0x01,0x15,0x8E,0xC1,
+0xB4,0x1F,0x97,0xB3,0xF1,0x02,0x88,0x06,0x38,0x00,0x04,0x00,0x40,0x50,0x24,0x02,
+0x4C,0x54,0xBF,0xCE,0xF0,0x09,0x8C,0xC1,0x97,0xB0,0x5A,0x00,0x08,0x11,0x84,0x40,
+0x80,0x02,0xD5,0x15,0xF0,0x03,0x38,0x00,0x29,0x11,0x40,0xFE,0x00,0x07,0xE8,0xE8,
+0xF1,0x42,0x83,0x80,0xAF,0x88,0xF1,0x43,0xAF,0xC8,0xD5,0xE2,0xF0,0x01,0x9E,0x81,
+0xF0,0x04,0x40,0x20,0x08,0x07,0x84,0x00,0x40,0x00,0x18,0x06,0xF1,0x08,0x8E,0x21,
+0xE0,0xE1,0xE8,0x40,0x97,0xF9,0x8A,0xC0,0x9C,0xF9,0xF0,0x01,0x96,0xDB,0x42,0x51,
+0x80,0x24,0xF0,0x04,0x80,0x26,0x40,0xA0,0x08,0x00,0xB4,0x1F,0x41,0xE0,0x14,0x00,
+0xE1,0x41,0xE9,0x2C,0x80,0x01,0x84,0x80,0xB4,0x3F,0x88,0x20,0x38,0x10,0x94,0x00,
+0x40,0x14,0x84,0x02,0x4C,0x14,0x80,0x11,0x80,0x20,0xC4,0x19,0xB1,0x0C,0x8E,0x01,
+0x38,0x02,0x22,0x09,0x40,0x04,0x08,0x08,0x88,0x04,0xAC,0xC1,0x50,0x04,0x00,0x01,
+0x54,0x80,0x00,0xFF,0xD5,0x0C,0xF1,0x01,0xE0,0x01,0xE8,0xEF,0x8C,0x01,0x96,0x03,
+0x84,0x81,0xD5,0xE3,0xE1,0x41,0xE9,0xDD,0x8C,0x21,0x96,0x4B,0x38,0x0F,0x04,0x00,
+0x40,0x04,0x80,0x02,0x4C,0x04,0xFF,0xF8,0xD5,0xD4,0xE4,0x62,0xE8,0x07,0x48,0xFF,
+0xFE,0xFC,0xE4,0xE2,0x4E,0xF3,0xFE,0xF9,0x8A,0xC0,0xF0,0x01,0x8E,0xE1,0x97,0xFB,
+0x42,0x33,0x80,0x24,0xF0,0x04,0x88,0x02,0x80,0x40,0xB4,0x1F,0x99,0x03,0xE0,0x46,
+0x4E,0xF3,0xFE,0xEB,0x80,0x06,0x84,0x20,0xB4,0xBF,0x88,0xA0,0x38,0x52,0x8C,0x00,
+0x40,0x54,0x94,0x02,0x4C,0x54,0x80,0x11,0x80,0xC0,0xC1,0x19,0xB0,0x4C,0x8E,0x01,
+0x38,0x00,0xA2,0x09,0x40,0x04,0x08,0x08,0x88,0x01,0xAD,0xC1,0x50,0x04,0x00,0x01,
+0x54,0x80,0x00,0xFF,0xD5,0x0C,0xF5,0x01,0xE0,0x05,0xE8,0xEF,0x8C,0x01,0x96,0x03,
+0x84,0x21,0xD5,0xE3,0xE0,0x46,0xE9,0xDC,0x8C,0xC1,0x97,0xB3,0x38,0x52,0x18,0x00,
+0x40,0x54,0x94,0x02,0x4C,0x54,0xFF,0xF8,0xD5,0xD3,0x80,0x1C,0xFC,0xDA,0x84,0x20,
+0x44,0x22,0x15,0xCC,0x9D,0x02,0xE6,0x24,0x80,0x60,0x40,0x32,0x3C,0x1A,0x38,0x31,
+0x04,0x08,0x8C,0x21,0x5A,0x18,0x0B,0xF9,0xDD,0x9E,0x44,0x12,0x15,0xCC,0x38,0x00,
+0x80,0x00,0xDD,0x9E,0x84,0x20,0x44,0x22,0x15,0xC0,0x38,0x01,0x04,0x08,0x8C,0x21,
+0x5A,0x18,0x0B,0xFD,0xDD,0x9E,0x44,0x12,0x15,0xC0,0x38,0x00,0x80,0x00,0xDD,0x9E,
+0x44,0x30,0x01,0x24,0x44,0x22,0x33,0x88,0x42,0x20,0x0C,0x73,0x10,0x11,0x01,0x0D,
+0xDD,0x9E,0x44,0x22,0x34,0xAB,0x44,0x30,0x01,0x24,0xC1,0x17,0xFE,0xC4,0x99,0x13,
+0x8C,0x45,0x38,0x01,0x0C,0x02,0x92,0x05,0x8C,0x01,0x96,0x1F,0x54,0x10,0x00,0x07,
+0x94,0x8D,0xA6,0x65,0x92,0x03,0x96,0x67,0xFE,0x57,0xAE,0x65,0xA6,0x66,0x54,0x10,
+0x80,0xFE,0xFE,0x0F,0xAE,0x26,0xDD,0x9E,0x42,0x20,0x0C,0x73,0xA6,0x55,0x96,0x67,
+0xAE,0x55,0xA6,0x56,0x54,0x10,0x80,0xFE,0xAE,0x56,0xDD,0x9E,0x44,0x20,0x01,0x24,
+0x44,0x12,0x34,0xB0,0x42,0x10,0x08,0x73,0xB4,0x01,0x92,0x05,0x96,0x1F,0xDD,0x9E,
+0x84,0x00,0x3C,0x0B,0xFA,0x0C,0xDD,0x9E,0x3C,0x23,0xFA,0x0C,0x84,0x20,0x40,0x31,
+0x04,0x0E,0x96,0xC6,0x96,0x08,0xC3,0x07,0x8C,0x21,0x5A,0x18,0x0B,0xFA,0x44,0x00,
+0x00,0xFF,0xDD,0x9E,0x84,0x61,0x40,0x11,0x84,0x0C,0xFE,0x8F,0x3C,0x2B,0xFA,0x0C,
+0xDD,0x9E,0x84,0x21,0x40,0x00,0x80,0x0C,0x3C,0x13,0xFA,0x0C,0xFE,0x03,0xFE,0x0E,
+0x3C,0x0B,0xFA,0x0C,0xDD,0x9E,0xFC,0x00,0x49,0x00,0x2F,0xE4,0xC8,0x05,0x84,0x01,
+0x3E,0x07,0xE2,0xCC,0xFC,0x80,0x84,0x02,0x3E,0x07,0xE2,0xCC,0x49,0x00,0x18,0x82,
+0xFC,0x80,0xFC,0x00,0x49,0x00,0x17,0xEA,0x84,0x01,0x49,0x00,0x0F,0x33,0x49,0x00,
+0x0F,0x20,0xFC,0x80,0xFC,0x06,0x84,0x00,0x3E,0x07,0xF4,0x20,0x3C,0x03,0xF7,0xC7,
+0x96,0x0E,0x96,0x01,0xC0,0x02,0x84,0x01,0x3E,0x07,0xF4,0x1A,0x84,0x07,0x49,0x00,
+0x37,0x12,0x5A,0x08,0x01,0x08,0x84,0x07,0x84,0x20,0x49,0x00,0x36,0xF1,0x49,0x00,
+0x1B,0xA9,0x2E,0x07,0xE2,0xCC,0x5A,0x00,0x01,0x05,0x5A,0x00,0x03,0x32,0xD5,0x50,
+0x49,0x00,0x1B,0x2B,0x5A,0x08,0x01,0x0F,0x84,0x00,0x49,0x00,0x18,0xB6,0x84,0x01,
+0x49,0x00,0x2F,0xB4,0x84,0x03,0x3E,0x07,0xE2,0xCC,0x84,0x00,0x3C,0x0B,0xFA,0x0E,
+0xD5,0x3C,0x49,0x00,0x18,0x40,0x5A,0x00,0x01,0xF1,0x49,0x00,0x2F,0xA4,0x5A,0x08,
+0x01,0x38,0x2E,0x07,0xF4,0x1A,0x5A,0x08,0x01,0x06,0x3C,0x03,0xFA,0x0E,0x8C,0x01,
+0xD5,0x02,0x84,0x00,0x3C,0x0B,0xFA,0x0E,0x3C,0x03,0xFA,0x0E,0xE6,0x0A,0xE9,0x28,
+0x84,0x00,0x49,0x00,0x2F,0x93,0x84,0x00,0x3C,0x0B,0xFA,0x0E,0xD5,0x21,0x84,0x00,
+0x49,0x00,0x4E,0xA7,0x80,0xC0,0x5A,0x08,0x01,0x19,0x49,0x00,0x1B,0x6F,0x49,0x00,
+0x1B,0x5B,0x84,0x00,0x49,0x00,0x2D,0x9F,0x84,0x00,0x49,0x00,0x18,0x91,0x49,0x00,
+0x17,0x85,0x84,0x00,0x3C,0x0B,0xFA,0x0F,0x3C,0x0B,0xFA,0x0E,0x3E,0x67,0xE2,0xCC,
+0x49,0x00,0x0C,0xA7,0x84,0x02,0xD5,0x02,0x84,0x01,0x3E,0x07,0xF4,0x20,0x2E,0x07,
+0xE2,0xCC,0x8E,0x03,0xE6,0x02,0x3C,0x0D,0xF8,0xEA,0xE8,0x0B,0xB6,0x1F,0xF0,0x81,
+0xF0,0x82,0xF0,0x83,0xF0,0x84,0xF0,0x85,0xF0,0x86,0xF0,0x87,0xF0,0x88,0xD5,0x1C,
+0x44,0x12,0x00,0x01,0xB6,0x3F,0x44,0x11,0x00,0x02,0xF1,0x81,0x44,0x10,0x80,0x04,
+0xF1,0x82,0x44,0x10,0x40,0x08,0xF1,0x83,0x44,0x10,0x20,0x10,0xF1,0x84,0x44,0x10,
+0x10,0x20,0xF1,0x85,0x44,0x10,0x08,0x40,0xF1,0x86,0x44,0x10,0x04,0x80,0xF1,0x87,
+0x44,0x10,0x03,0x00,0xF1,0x88,0xF0,0x89,0xF0,0x8A,0xF0,0x8B,0x80,0x1F,0x49,0xFF,
+0xD8,0xEB,0x2E,0x07,0xF4,0x20,0xFC,0x86,0xDD,0x9E,0x3C,0xF7,0xF7,0x92,0x5E,0xF7,
+0x80,0xB4,0xE8,0x0C,0xFC,0x00,0x49,0x00,0x1B,0x7A,0x80,0x20,0x84,0x00,0x5A,0x10,
+0x01,0x03,0x80,0x20,0x49,0x00,0x12,0xA1,0xFC,0x80,0xDD,0x9E,0x44,0x24,0x10,0x14,
+0xA6,0x10,0x44,0x14,0x10,0x14,0x96,0x06,0xC0,0xFC,0xA6,0x08,0x54,0x00,0x00,0xFE,
+0xAE,0x08,0xDD,0x9E,0xFC,0x20,0x80,0xC1,0x44,0x14,0x10,0x14,0x80,0xE0,0xA6,0x08,
+0x54,0x00,0x00,0xFE,0xAE,0x08,0x84,0x00,0x49,0x00,0x0C,0x03,0x49,0x00,0x0B,0xCD,
+0x40,0x00,0x00,0x09,0x88,0xE6,0x4C,0x63,0x80,0x07,0x08,0x03,0x00,0x01,0x49,0x00,
+0x0B,0xD2,0xD5,0xFA,0x84,0x01,0x49,0x00,0x0B,0xF4,0xFC,0xA0,0xFC,0x01,0x84,0x06,
+0x10,0x0F,0x80,0x04,0xB0,0x41,0x84,0x01,0x49,0xFF,0xFF,0xDE,0xFC,0x81,0xFC,0x00,
+0x44,0x14,0x10,0x14,0xA6,0x08,0x54,0x00,0x00,0xFE,0xAE,0x08,0x84,0x00,0x49,0x00,
+0x0B,0xE0,0x49,0x00,0x0B,0xAA,0x40,0x00,0x00,0x09,0x84,0x05,0x49,0x00,0x0B,0xB3,
+0x44,0x00,0x00,0xFF,0x49,0x00,0x0B,0xAF,0x44,0x04,0x10,0x10,0xA7,0x80,0x84,0x01,
+0x97,0xB0,0x49,0x00,0x0B,0xCE,0x80,0x06,0xFC,0x80,0xFC,0x40,0x44,0x14,0x10,0x14,
+0x80,0xC0,0xA6,0x08,0x54,0x00,0x00,0xFE,0xAE,0x08,0x44,0x04,0x10,0x00,0x84,0x20,
+0xAE,0x40,0x44,0x04,0x10,0x04,0x44,0x10,0x00,0x55,0xAE,0x40,0x44,0x1F,0xFF,0xAA,
+0xAE,0x41,0x44,0x10,0x00,0x66,0xAE,0x42,0x40,0x00,0x00,0x09,0x44,0x74,0x10,0x08,
+0x44,0x00,0x00,0x9F,0xB6,0x07,0x49,0xFF,0xFF,0x93,0x50,0x93,0x00,0x03,0x44,0x80,
+0x00,0xFF,0x44,0xA4,0x10,0x10,0xB7,0x07,0x49,0xFF,0xFF,0x8A,0x00,0x05,0x00,0x00,
+0x18,0x03,0x00,0x01,0x4C,0x64,0xFF,0xF9,0x44,0x04,0x10,0x00,0x84,0x21,0xAE,0x40,
+0xFC,0xC0,0xFC,0x00,0x80,0xC0,0x49,0xFF,0xFF,0xA3,0x84,0x00,0x49,0x00,0x0B,0x91,
+0x49,0x00,0x0B,0x5B,0xFA,0x10,0x49,0x00,0x0B,0x66,0x5C,0xF3,0x00,0x40,0x80,0x26,
+0xE9,0x03,0x44,0x10,0x00,0x3F,0x96,0x08,0x40,0x00,0x30,0x08,0x49,0x00,0x0B,0x69,
+0x84,0x01,0x49,0x00,0x0B,0x7E,0x40,0x00,0x00,0x09,0x40,0x00,0x00,0x09,0x40,0x00,
+0x00,0x09,0x49,0xFF,0xFF,0x8E,0x96,0x06,0xC0,0x05,0x84,0x0A,0x49,0xFF,0xDF,0x6F,
+0xD5,0xF9,0xFC,0x80,0xFC,0x43,0x83,0x80,0x84,0x00,0xF0,0x85,0xB0,0x05,0x81,0x01,
+0x81,0x42,0x49,0xFF,0xFF,0x9C,0xF0,0x05,0x44,0x5E,0xFF,0xFF,0xFF,0x46,0x46,0x00,
+0x03,0x02,0x50,0x00,0x05,0xC2,0xD0,0x04,0x44,0x90,0x01,0x00,0xD5,0x02,0xFB,0x30,
+0x84,0xC0,0x44,0x74,0x10,0x08,0x49,0xFF,0xFF,0x63,0x44,0x04,0x10,0x00,0x84,0x20,
+0xAE,0x40,0x44,0x04,0x10,0x04,0x44,0x10,0x00,0x55,0xAE,0x40,0x44,0x1F,0xFF,0xAA,
+0xAE,0x41,0x44,0x10,0x00,0x66,0xAE,0x42,0x40,0x03,0x20,0x00,0x40,0x20,0x40,0x09,
+0x40,0x10,0x20,0x09,0x84,0x62,0x96,0x00,0x96,0x48,0x96,0x97,0xF0,0x81,0xF1,0x82,
+0xF2,0x83,0xB6,0x67,0x49,0xFF,0xFF,0x1C,0xF2,0x03,0xB6,0x47,0x49,0xFF,0xFF,0x18,
+0xF1,0x02,0xB6,0x27,0x49,0xFF,0xFF,0x14,0xF0,0x01,0xB6,0x07,0x49,0xFF,0xFF,0x10,
+0x40,0x00,0x00,0x09,0x38,0x0E,0x18,0x00,0x8C,0xC1,0xB6,0x07,0x97,0xB1,0x49,0xFF,
+0xFF,0x07,0x40,0x03,0x20,0x00,0x40,0x00,0x24,0x37,0xC1,0x03,0x4C,0x65,0x7F,0xF4,
+0x44,0x04,0x10,0x00,0x84,0x21,0xAE,0x40,0x40,0x00,0x00,0x09,0x40,0x00,0x00,0x09,
+0x49,0xFF,0xFF,0x27,0x96,0x06,0xC0,0x05,0x84,0x02,0x49,0xFF,0xDF,0x08,0xD5,0xF9,
+0x4C,0x65,0x7F,0xB3,0xFC,0xC3,0x40,0x00,0x60,0x08,0x46,0x20,0x4C,0x11,0xFE,0x0D,
+0x50,0x21,0x0D,0xB7,0x84,0x28,0x94,0xC1,0x4E,0x04,0x00,0x05,0x40,0x01,0x88,0x03,
+0xD5,0x02,0x80,0x03,0x8E,0x21,0x96,0x48,0xC9,0xF7,0xDD,0x9E,0xFC,0x41,0x84,0x1F,
+0xF0,0x81,0x84,0xC0,0x44,0x92,0x10,0x00,0x44,0x70,0x0F,0xFC,0x5C,0xF3,0x01,0x00,
+0xE8,0x04,0x38,0x04,0x98,0x00,0xD5,0x03,0x44,0x00,0x00,0xFF,0xF1,0x01,0x49,0xFF,
+0xFF,0xDC,0x8C,0xC1,0xF0,0x81,0x4C,0x63,0xFF,0xF3,0xF0,0x01,0xFC,0xC1,0x2E,0x07,
+0xE2,0xCD,0x5A,0x00,0x01,0x14,0xFC,0x00,0x2E,0x07,0xE2,0xCD,0x5A,0x08,0x02,0x05,
+0x84,0x03,0x3E,0x07,0xE2,0xCD,0x2E,0x07,0xE2,0xCD,0x5A,0x08,0x04,0x05,0x84,0x01,
+0x3E,0x07,0xE2,0xCD,0x49,0xFF,0xEF,0xAB,0xFC,0x80,0xDD,0x9E,0xFC,0x00,0x49,0x00,
+0x1D,0xA3,0x80,0xC0,0xC8,0x06,0x49,0xFF,0xF0,0x90,0x40,0x03,0x00,0x06,0xFC,0x80,
+0x84,0x01,0xFC,0x80,0xFC,0x42,0x44,0x70,0x01,0x24,0x44,0x22,0x33,0x88,0xFE,0x3C,
+0x40,0xA1,0x00,0x00,0x50,0x95,0x01,0x08,0x00,0x34,0x80,0x05,0xE6,0x62,0xE9,0x74,
+0x8C,0x08,0x99,0xC2,0x80,0xC1,0x84,0x40,0xB0,0x41,0x80,0x07,0x49,0xFF,0xE0,0x22,
+0x80,0x07,0xB0,0x42,0x84,0x41,0x49,0xFF,0xE0,0x1D,0x02,0x05,0x00,0x84,0x5A,0x08,
+0x01,0x09,0xF0,0x01,0x02,0x10,0x00,0x08,0x02,0x00,0x00,0x09,0xAC,0x72,0xD5,0x41,
+0x02,0x04,0x80,0x01,0x5A,0x00,0x01,0x04,0x5A,0x08,0x02,0x12,0xF2,0x01,0xF1,0x02,
+0x22,0x31,0x00,0x08,0x22,0x00,0x80,0x08,0x88,0x03,0x90,0x01,0xAC,0x32,0x22,0x21,
+0x00,0x09,0x22,0x00,0x80,0x09,0x88,0x02,0x90,0x01,0xD5,0x2B,0x80,0x07,0xB0,0x43,
+0x84,0x42,0x49,0xFF,0xDF,0xF7,0xF2,0x03,0xF0,0x01,0xF7,0x02,0x22,0x41,0x00,0x08,
+0x22,0x10,0x00,0x08,0x22,0x31,0x00,0x09,0x22,0x23,0x80,0x08,0x9B,0x0C,0x90,0x81,
+0x40,0x91,0x0C,0x08,0x9A,0x8A,0x9A,0x54,0x95,0x62,0x88,0xA9,0x94,0x49,0x88,0x25,
+0x22,0x00,0x00,0x09,0x90,0x23,0xAC,0x72,0x22,0x13,0x80,0x09,0x9A,0xC3,0x90,0x61,
+0x95,0x0B,0x9A,0x41,0x94,0x9A,0x9A,0x0B,0x88,0x44,0x94,0x01,0x88,0x02,0x90,0x03,
+0xA4,0x72,0xAC,0x33,0x80,0x01,0x96,0x4B,0x5E,0xF0,0x99,0x33,0xE9,0x03,0x44,0x00,
+0x19,0x32,0x96,0x43,0x4E,0x14,0x00,0x03,0x84,0x00,0xA4,0x73,0xAC,0x32,0x80,0x01,
+0x96,0x4B,0x5E,0xF0,0xB2,0x65,0xE9,0x03,0x44,0x00,0x32,0x64,0x96,0x43,0x4E,0x14,
+0x00,0x03,0x84,0x00,0xAC,0x33,0xFC,0xC2,0x04,0x00,0x00,0x47,0x46,0x10,0x10,0x00,
+0xFE,0x46,0xC1,0x09,0x40,0x10,0x50,0x09,0x92,0x10,0xFE,0x0D,0x96,0x1F,0x5C,0x00,
+0x00,0x01,0xDD,0x9E,0x84,0x01,0xDD,0x9E,0xFC,0x20,0x04,0x60,0x00,0x47,0x84,0x4C,
+0x92,0xD4,0x97,0x9F,0x80,0xE0,0x42,0x03,0x08,0x73,0x50,0x00,0x00,0x94,0x49,0x00,
+0x39,0xE5,0x8C,0xC1,0x84,0x26,0x40,0x23,0x04,0xD6,0x02,0x23,0x80,0x8F,0x97,0x70,
+0x96,0x9F,0x50,0x03,0x81,0x1B,0xDA,0x0B,0x8C,0xA1,0x40,0x52,0x84,0x36,0x54,0x50,
+0x80,0x0F,0xA6,0x43,0x54,0x10,0x80,0xF0,0xFE,0x6F,0xAE,0x43,0xA6,0x43,0x95,0xB4,
+0x96,0x5F,0xFF,0x8F,0xA6,0x44,0xAF,0x83,0x58,0x10,0x80,0x01,0xAE,0x44,0xFC,0xA0,
+0xFC,0x42,0x3A,0x0F,0x84,0x20,0x80,0xE0,0x2E,0x07,0xEE,0x21,0x80,0xC1,0xC0,0x02,
+0x9B,0xD7,0x2E,0x07,0xEE,0x22,0xC0,0x02,0x9B,0x9E,0x2E,0x07,0xEE,0x23,0xC0,0x0B,
+0x40,0x93,0x00,0x13,0x96,0x11,0x96,0x61,0x80,0xC7,0x80,0x85,0x80,0x43,0x80,0xE9,
+0x80,0xA1,0x80,0x60,0x42,0x03,0x90,0x24,0x42,0x13,0x14,0x24,0x40,0x00,0x08,0x17,
+0x40,0x10,0x8C,0x37,0xFC,0xC2,0xFC,0x47,0x49,0x00,0x1C,0xB6,0xF0,0x84,0x44,0x62,
+0x16,0x14,0x44,0x92,0x33,0x90,0x85,0x40,0xB1,0xCB,0x54,0x05,0x00,0xFF,0xF0,0x85,
+0x84,0x00,0x10,0x03,0x00,0x08,0x10,0x03,0x80,0x08,0x2E,0x07,0xF4,0xA8,0x5A,0x08,
+0x01,0x04,0x48,0x00,0x00,0x95,0x00,0x44,0x81,0x05,0x9E,0x22,0xE6,0x02,0x4E,0xF2,
+0x00,0x8F,0x44,0x20,0x01,0x24,0x44,0x02,0x34,0xB0,0x42,0x25,0x08,0x24,0x38,0x10,
+0x08,0x02,0x40,0x30,0xAC,0x09,0x96,0xC6,0x4E,0x33,0x00,0x82,0x44,0x32,0x15,0xC0,
+0x92,0x25,0x38,0x31,0xA8,0x00,0x96,0x5F,0xE0,0x61,0xE8,0x09,0x5A,0x48,0x03,0x08,
+0x8E,0x05,0x88,0x02,0xA6,0x46,0x58,0x10,0x80,0x08,0xAE,0x46,0xB0,0x47,0x84,0x40,
+0x80,0x09,0x49,0xFF,0xDF,0x17,0xF0,0x07,0x50,0x8F,0x80,0x24,0x22,0x20,0x00,0x08,
+0xAC,0xB2,0x22,0x10,0x00,0x09,0xB4,0x00,0xF2,0x89,0xB6,0x06,0x84,0x01,0x10,0x03,
+0x00,0x08,0xF1,0x8A,0x3C,0x03,0xEF,0x08,0xAC,0x73,0xF0,0x81,0xF2,0x01,0x3C,0x03,
+0xEF,0x09,0xF0,0x82,0xF3,0x02,0x3C,0x03,0xEF,0x0C,0xF0,0x83,0xF4,0x03,0x3D,0xC3,
+0xEF,0x0D,0x3A,0x04,0x04,0x00,0x80,0xBC,0x49,0xFF,0xFF,0x7C,0xF0,0x89,0xAC,0x32,
+0x02,0x04,0x80,0x81,0x14,0x14,0x00,0x01,0xE6,0x02,0xAC,0x73,0xE8,0x05,0x00,0x14,
+0x81,0x05,0x5A,0x18,0x03,0x2B,0x84,0x41,0xB0,0x48,0x80,0x09,0x49,0xFF,0xDE,0xE2,
+0xF0,0x05,0x80,0x27,0x49,0xFF,0xFE,0xA8,0xF0,0x07,0xF2,0x01,0xF3,0x02,0xB4,0x20,
+0xF0,0x08,0xF4,0x03,0x80,0xBC,0xB4,0x00,0x88,0x01,0x84,0x22,0x40,0x00,0x04,0x16,
+0xB6,0x07,0x84,0x01,0x22,0x13,0x80,0x02,0x10,0x03,0x80,0x08,0x22,0x03,0x80,0x03,
+0xF1,0x89,0xF0,0x8A,0x3A,0x04,0x04,0x00,0x49,0xFF,0xFF,0x4C,0xB6,0x08,0x14,0x14,
+0x00,0x01,0xAC,0x3A,0xAC,0x7B,0xD5,0x09,0x5A,0x08,0x01,0x08,0x3A,0x23,0x10,0x00,
+0x3A,0x23,0x90,0x20,0x10,0x03,0x80,0x08,0xF0,0x04,0xC8,0x05,0x80,0x09,0x80,0x27,
+0x49,0xFF,0xFF,0x0C,0x80,0x09,0x80,0x26,0x49,0xFF,0xFF,0x08,0x8D,0x41,0x8C,0xCC,
+0x50,0x94,0x81,0x24,0x5A,0xA0,0x0A,0x04,0x48,0xFF,0xFF,0x59,0xFC,0xC7,0xFC,0x00,
+0x2E,0x17,0xF6,0x28,0xC1,0x08,0x49,0x00,0x27,0x08,0x49,0x00,0x27,0x12,0x49,0x00,
+0x1B,0xD8,0xD5,0x07,0x49,0x00,0x27,0x01,0x49,0x00,0x27,0x39,0x49,0x00,0x1B,0xD6,
+0x49,0x00,0x1B,0xDA,0xFC,0x80,0xFC,0x01,0x84,0x00,0x49,0x00,0x1B,0xF3,0x44,0x12,
+0x16,0x14,0x84,0x00,0x49,0x00,0x1C,0x42,0xF0,0x81,0x84,0x27,0x84,0x00,0x49,0x00,
+0x1D,0x42,0xF0,0x01,0xFC,0x81,0xFC,0x20,0x3C,0x2D,0xFF,0x13,0x5A,0x20,0x01,0x3E,
+0x80,0xE1,0x80,0xC0,0x49,0x00,0x1B,0xD8,0xC8,0x2E,0x5A,0x68,0x01,0x05,0x49,0x00,
+0x1B,0xD9,0xD5,0x14,0x49,0xFF,0xFF,0xE1,0x80,0xC0,0xC8,0x10,0x84,0x01,0x49,0xFF,
+0xDB,0xF2,0x80,0x06,0x84,0x21,0x49,0xFF,0xDB,0x89,0x3E,0x67,0xF4,0xAE,0x3E,0x67,
+0xF4,0xA8,0x3C,0x6F,0xFC,0x52,0x5A,0x70,0x01,0x21,0x84,0x01,0x84,0x2F,0x49,0x00,
+0x33,0x01,0x84,0x01,0x80,0x20,0x49,0x00,0x33,0x0B,0x84,0x01,0x49,0xFF,0xDB,0xB4,
+0x84,0x00,0x49,0x00,0x1B,0x85,0x49,0x00,0x1B,0x97,0x84,0x00,0x49,0x00,0x1D,0x13,
+0x84,0x01,0xD5,0x0C,0x84,0x01,0x49,0xFF,0xDB,0xCE,0x84,0x00,0x84,0x21,0x49,0xFF,
+0xDB,0x65,0x84,0x00,0x3E,0x07,0xF4,0xAE,0x84,0x00,0xFC,0xA0,0xFC,0x00,0xC0,0x0B,
+0x5A,0x08,0x01,0x05,0x49,0x00,0x2A,0x6D,0xD5,0x06,0x84,0xC0,0x5A,0x08,0x02,0x05,
+0x49,0x00,0x2A,0x6A,0x80,0xC0,0x84,0x02,0x49,0x00,0x1B,0x94,0x84,0x02,0x44,0x12,
+0x16,0x14,0x49,0x00,0x1B,0xE3,0xC6,0x04,0x80,0x06,0x49,0x00,0x1C,0x9E,0x49,0x00,
+0x2A,0x64,0x49,0x00,0x1C,0xAC,0x84,0x02,0x84,0x27,0x49,0x00,0x1C,0xDC,0xFC,0x80,
+0x3C,0x0D,0xFF,0x13,0x5A,0x00,0x01,0x16,0xFC,0x00,0x49,0x00,0x1B,0x75,0x80,0xC0,
+0xC8,0x04,0x49,0xFF,0xFF,0x82,0xD5,0x07,0x5A,0x00,0x01,0x0B,0x49,0x00,0x1B,0x6F,
+0x49,0xFF,0xFF,0xCE,0x80,0x06,0x49,0x00,0x1B,0x3B,0x49,0x00,0x1B,0x4D,0xFC,0x80,
+0xDD,0x9E,0xFC,0x00,0x49,0x00,0x17,0xD3,0x5A,0x08,0x01,0x06,0x84,0x00,0x44,0x10,
+0x07,0xD0,0xD5,0x04,0x84,0x00,0x44,0x10,0x75,0x30,0x49,0x00,0x32,0x9B,0x84,0x00,
+0x84,0x21,0x49,0x00,0x32,0xA5,0x84,0x00,0x49,0x00,0x17,0xCA,0xFC,0x80,0x3E,0x07,
+0xF4,0xAC,0xDD,0x9E,0x2E,0x07,0xF4,0xAF,0xDD,0x9E,0xFC,0x00,0x49,0x00,0x15,0x0F,
+0x49,0xFF,0xFB,0x92,0x3E,0x07,0xF4,0xAD,0x49,0xFF,0xFC,0x30,0x49,0xFF,0xFB,0x83,
+0xFC,0x80,0xFC,0x41,0x2E,0x07,0xF4,0xFB,0x96,0x0E,0xC0,0x0C,0x2E,0x07,0xF4,0xFB,
+0x84,0x20,0x54,0x00,0x00,0xFD,0x3E,0x07,0xF4,0xFB,0x3E,0x17,0xF4,0x9F,0x3E,0x17,
+0xF6,0x28,0x49,0x00,0x17,0x9C,0xC0,0x50,0x2E,0x07,0xF4,0x9F,0xC8,0x4D,0x2E,0x07,
+0xF4,0xFB,0x96,0x06,0xC0,0x08,0x46,0x05,0xB9,0x2E,0x44,0x14,0x00,0x54,0x50,0x00,
+0x07,0xF4,0xB6,0x01,0x44,0x64,0x80,0x80,0x46,0xAF,0xEF,0xFF,0xB5,0x26,0xB4,0xE6,
+0x40,0x04,0xE0,0x09,0x54,0x90,0x00,0x01,0xB4,0x06,0x50,0xA5,0x0F,0xFF,0x40,0x00,
+0x28,0x02,0xB6,0x06,0xB4,0x06,0x46,0x8F,0xDF,0xFF,0x44,0x11,0xE0,0x00,0x50,0x84,
+0x0F,0xFF,0x44,0x21,0xF3,0xEE,0x8A,0x41,0x40,0x00,0x20,0x02,0x96,0x91,0xB6,0x06,
+0x44,0x00,0xDD,0x40,0x49,0x00,0x2F,0x7A,0x49,0x00,0x0D,0x7A,0x84,0x01,0x3E,0x07,
+0xF4,0x9F,0x49,0x00,0x1A,0x51,0x46,0x08,0x88,0x88,0x44,0x14,0x00,0x54,0x50,0x00,
+0x08,0x88,0xB6,0x01,0xB4,0x06,0x40,0x94,0xE0,0x08,0x40,0x00,0x28,0x02,0x40,0x90,
+0x24,0x04,0xB7,0x26,0xB4,0x06,0x92,0xF9,0x97,0xC6,0x40,0x73,0xE4,0x08,0x40,0x00,
+0x20,0x02,0xFF,0xC7,0xB6,0xE6,0x2E,0x07,0xF4,0xFB,0x96,0x06,0xC0,0x1A,0x44,0x14,
+0x00,0x54,0x46,0x0A,0x67,0xC9,0x50,0x00,0x0D,0xFE,0xB6,0x01,0x2E,0x07,0xF4,0xFB,
+0x44,0x17,0x10,0x08,0x58,0x00,0x00,0x04,0x3E,0x07,0xF4,0xFB,0x2E,0x07,0xF4,0xFB,
+0x54,0x00,0x00,0xFE,0x3E,0x07,0xF4,0xFB,0xB4,0x01,0x58,0x00,0x01,0x00,0xB6,0x01,
+0x84,0x00,0x3E,0x07,0xF4,0xAB,0x49,0x00,0x17,0x2A,0x80,0x60,0x2E,0x07,0xF4,0x9F,
+0xCB,0x48,0x5A,0x08,0x01,0x3E,0x44,0x64,0x80,0x80,0x46,0x8F,0xEF,0xFF,0xB5,0x26,
+0xB4,0xE6,0x40,0x04,0xE0,0x09,0x54,0x90,0x00,0x01,0xB4,0x06,0x50,0x84,0x0F,0xFF,
+0x40,0x00,0x20,0x02,0xF3,0x81,0xB6,0x06,0xB4,0x06,0x46,0xAF,0xDF,0xFF,0x50,0xA5,
+0x0F,0xFF,0x40,0x00,0x28,0x02,0xB6,0x06,0x44,0x20,0xFD,0xBE,0x44,0x00,0xDD,0x40,
+0x80,0x20,0x8A,0x40,0x49,0x00,0x2F,0x12,0x49,0x00,0x0D,0x12,0xF3,0x01,0x44,0x04,
+0x00,0x54,0x3E,0x37,0xF4,0x9F,0xB6,0x60,0x49,0x00,0x19,0xE6,0xB4,0x06,0x40,0x94,
+0xE0,0x08,0x40,0x00,0x20,0x02,0x40,0x90,0x24,0x04,0xB7,0x26,0xB4,0x06,0x92,0xF9,
+0x97,0xC6,0x40,0x73,0xE4,0x08,0x40,0x00,0x28,0x02,0xFF,0xC7,0xB6,0xE6,0x49,0x00,
+0x3B,0x99,0x2E,0x07,0xF1,0x5C,0xC0,0x2A,0x84,0x01,0x3E,0x07,0xF4,0xAB,0xD5,0x26,
+0xC0,0x25,0x3C,0x0D,0xFF,0x13,0xC8,0x04,0x49,0x00,0x45,0x3E,0xD5,0x03,0x49,0xFF,
+0xDE,0x3E,0x49,0xFF,0xFB,0x54,0x3C,0x0D,0xFB,0xD6,0x54,0x00,0x10,0x00,0xC0,0x11,
+0x3C,0xF7,0xF7,0x8E,0x5E,0xF7,0xFE,0x70,0xE8,0x11,0x84,0x01,0x3C,0x1D,0xFB,0xD6,
+0x3E,0x07,0xF4,0xAB,0x44,0x0F,0xEF,0xFF,0xFE,0x0E,0x3C,0x0F,0xFB,0xD6,0xD5,0x06,
+0x3C,0xF7,0xF7,0x92,0x5E,0xF7,0x80,0xC8,0xE8,0xD8,0xFC,0xC1,0xFC,0x00,0x49,0x00,
+0x2F,0x74,0x5A,0x08,0x01,0x0A,0x49,0x00,0x16,0xB2,0xC8,0x03,0x84,0x04,0xD5,0x02,
+0x84,0x03,0x3E,0x07,0xF4,0xB1,0xFC,0x80,0xFC,0x00,0x49,0x00,0x12,0x79,0x49,0xFF,
+0xFC,0x8F,0x80,0xC0,0x5A,0x08,0x01,0x06,0x49,0xFF,0xFD,0x77,0x3E,0x67,0xF4,0xAC,
+0xFC,0x80,0x2E,0x07,0xF4,0xAD,0x5A,0x08,0x01,0x06,0x84,0x22,0x3E,0x17,0xF4,0xB3,
+0xDD,0x9E,0x5A,0x08,0x02,0x07,0x84,0x01,0x3E,0x07,0xF4,0xB3,0x84,0x01,0xDD,0x9E,
+0x84,0x00,0xDD,0x9E,0xFC,0x00,0x49,0x00,0x16,0x8A,0xC8,0x03,0x49,0x00,0x16,0xDB,
+0x49,0x00,0x11,0xB0,0x49,0x00,0x0E,0xE8,0x49,0x00,0x2A,0xD0,0x49,0x00,0x2A,0x2A,
+0x49,0x00,0x12,0x40,0x49,0x00,0x28,0xFF,0x49,0x00,0x2D,0x26,0x49,0x00,0x2A,0x22,
+0x49,0x00,0x13,0x3E,0x49,0x00,0x16,0x73,0xC8,0x04,0x49,0x00,0x2B,0x7F,0xD5,0x05,
+0x2E,0x07,0xF4,0xFB,0x96,0x06,0xC8,0xFA,0x49,0xFF,0xFA,0x2F,0x49,0x00,0x2C,0x66,
+0x49,0xFF,0xEB,0x56,0x49,0xFF,0xFE,0x8F,0x49,0x00,0x05,0x88,0x49,0x00,0x16,0x5F,
+0x80,0x40,0x5A,0x08,0x01,0x08,0x44,0x00,0x07,0xD0,0x84,0x20,0x80,0x62,0x49,0x00,
+0x30,0x88,0x84,0x01,0x3E,0x07,0xF4,0xB3,0x49,0x00,0x16,0x51,0xC8,0x04,0x84,0x01,
+0x49,0x00,0x2E,0x12,0xFC,0x80,0xFC,0x00,0x49,0x00,0x29,0xDE,0x49,0x00,0x29,0xDD,
+0xC0,0x08,0x49,0x00,0x28,0xBE,0x49,0x00,0x28,0x93,0x84,0x02,0x3E,0x07,0xF4,0xB3,
+0xFC,0x80,0xFC,0x01,0x2E,0x07,0xF4,0xB0,0x5A,0x00,0x01,0x2E,0xC0,0x04,0x5A,0x00,
+0x02,0x37,0xD5,0x69,0x49,0x00,0x28,0xB7,0x84,0x00,0x49,0x00,0x2A,0xCF,0x49,0x00,
+0x16,0x2E,0x80,0xC0,0xC8,0x1C,0x49,0x00,0x29,0xD5,0xC0,0x15,0x80,0x06,0x49,0x00,
+0x12,0xEF,0x80,0x06,0x49,0x00,0x28,0x94,0x80,0x06,0x49,0x00,0x27,0xDE,0x49,0x00,
+0x29,0xCC,0xB6,0x1F,0x49,0x00,0x29,0xCC,0xF0,0x81,0xB4,0x3F,0x80,0x06,0xF2,0x01,
+0x49,0x00,0x2A,0x42,0x84,0x02,0x84,0x20,0x49,0x00,0x13,0xBD,0x84,0x01,0x49,0x00,
+0x2A,0xAD,0xD5,0x3E,0x49,0x00,0x29,0xA0,0x49,0x00,0x29,0x9F,0xC0,0x3C,0x49,0x00,
+0x28,0x80,0x84,0x00,0x49,0x00,0x0D,0xAF,0x84,0x02,0xD5,0x33,0x49,0x00,0x29,0x9D,
+0xC0,0x32,0x2E,0x07,0xF4,0xB4,0xC8,0x0C,0x44,0x14,0x50,0x28,0xB4,0x01,0x92,0x03,
+0x96,0x06,0x5A,0x00,0x01,0x06,0xB4,0x01,0x92,0x01,0x96,0x06,0xC8,0x05,0x2E,0x07,
+0xF4,0xAF,0x5A,0x00,0x02,0x21,0x3C,0x0D,0xFF,0x15,0x5A,0x00,0x01,0x1D,0x49,0x00,
+0x28,0x60,0x84,0x01,0x49,0x00,0x0D,0x8F,0x5A,0x08,0x01,0x11,0x49,0x00,0x15,0xDF,
+0xC8,0x05,0x49,0x00,0x29,0x87,0x49,0x00,0x13,0xFC,0x49,0x00,0x14,0x49,0x84,0x00,
+0x49,0x00,0x27,0xA9,0x84,0x01,0x3E,0x07,0xF4,0xB3,0x49,0x00,0x28,0x5E,0x84,0x01,
+0x3E,0x07,0xF4,0xB0,0xFC,0x81,0xFC,0x00,0x84,0x01,0x84,0x20,0x49,0x00,0x30,0xA8,
+0x84,0x01,0x49,0x00,0x1A,0xB8,0x84,0x00,0x3E,0x07,0xF4,0xAC,0xFC,0x80,0xFC,0x00,
+0x2E,0x07,0xF4,0x9E,0x5A,0x00,0x01,0x3C,0xC0,0x07,0x5A,0x08,0x02,0x04,0x48,0x00,
+0x00,0x81,0x48,0x00,0x00,0xD3,0x3C,0x0D,0xFB,0xD6,0x54,0x00,0x10,0x00,0xC0,0x65,
+0x2E,0x07,0xEF,0x93,0x2E,0x17,0xEF,0xAF,0x8A,0x01,0x4E,0x04,0x00,0x03,0xFE,0x02,
+0xE4,0x02,0xE8,0x16,0x2E,0x07,0xEF,0x92,0x2E,0x17,0xEF,0xAE,0x8A,0x01,0x4E,0x04,
+0x00,0x03,0xFE,0x02,0xE4,0x02,0xE8,0x0C,0x3C,0x17,0xF7,0xD8,0x84,0x03,0xFE,0x0C,
+0x85,0xE5,0x40,0xF0,0x3D,0xF6,0x3C,0x07,0xF7,0xD9,0xE0,0x0F,0xE8,0x05,0x2E,0x07,
+0xEF,0xA8,0x4E,0x02,0x00,0x8C,0x3C,0xF7,0xF7,0x92,0x5E,0xF7,0x81,0x91,0xE9,0x2E,
+0x2E,0x07,0xEF,0xA8,0x5A,0x08,0x01,0x2B,0x48,0x00,0x00,0x81,0x2E,0x07,0xEF,0x93,
+0x2E,0x17,0xEF,0xAF,0x8A,0x01,0x4E,0x04,0x00,0x03,0xFE,0x02,0xE4,0x02,0xE8,0x22,
+0x2E,0x07,0xEF,0x92,0x2E,0x17,0xEF,0xAE,0x8A,0x01,0x4E,0x04,0x00,0x03,0xFE,0x02,
+0xE4,0x02,0xE8,0x18,0x3C,0x17,0xF7,0xD8,0x84,0x03,0xFE,0x0C,0x85,0xE5,0x40,0xF0,
+0x3D,0xF6,0x3C,0x07,0xF7,0xD9,0xE0,0x0F,0xE9,0x0D,0x3C,0xF7,0xF7,0x92,0x5E,0xF7,
+0x81,0x91,0xE8,0x1A,0x84,0x00,0x3E,0x07,0xF4,0x9D,0x84,0x02,0x3E,0x07,0xF4,0x9E,
+0xD5,0x74,0x2E,0x07,0xEF,0xA8,0xC8,0xF2,0x2E,0x07,0xF4,0x9D,0x8C,0x01,0x96,0x00,
+0xE6,0x02,0x3E,0x07,0xF4,0x9D,0xE9,0x0D,0x84,0x00,0x3E,0x07,0xF4,0x9E,0x49,0x00,
+0x0C,0x27,0x84,0x04,0xD5,0x60,0x2E,0x07,0xEF,0xA8,0x5A,0x08,0x01,0xE5,0xD5,0xED,
+0x3C,0x07,0xF7,0xDA,0x3C,0x17,0xF7,0x8E,0xFE,0x02,0xE0,0x20,0xE9,0xEE,0xD5,0x55,
+0x2E,0x07,0xEF,0x93,0x2E,0x17,0xEF,0xAF,0x8A,0x01,0x4E,0x04,0x00,0x03,0xFE,0x02,
+0xE4,0x02,0xE8,0x16,0x2E,0x07,0xEF,0x92,0x2E,0x17,0xEF,0xAE,0x8A,0x01,0x4E,0x04,
+0x00,0x03,0xFE,0x02,0xE4,0x02,0xE8,0x0C,0x3C,0x17,0xF7,0xD8,0x84,0x03,0xFE,0x0C,
+0x85,0xE5,0x40,0xF0,0x3D,0xF6,0x3C,0x07,0xF7,0xD9,0xE0,0x0F,0xE8,0x04,0x2E,0x07,
+0xEF,0xA8,0xC0,0x0A,0x3C,0xF7,0xF7,0x92,0x5E,0xF7,0x81,0x91,0xE9,0x11,0x2E,0x07,
+0xEF,0xA8,0x5A,0x08,0x01,0x0E,0x3C,0x07,0xF7,0xDA,0x3C,0x17,0xF7,0x8E,0xFE,0x02,
+0xE0,0x20,0xE9,0xBB,0x84,0x00,0x3E,0x07,0xF4,0x9D,0x84,0x01,0xD5,0xA8,0x2E,0x07,
+0xF4,0x9D,0x8C,0x01,0x96,0x00,0xE6,0x02,0x3E,0x07,0xF4,0x9D,0xE9,0x16,0x84,0x00,
+0x3E,0x07,0xF4,0x9E,0x49,0xFF,0xFF,0x29,0x49,0x00,0x0B,0xD2,0x49,0xFF,0xD9,0x93,
+0xE6,0x03,0xE9,0x03,0xFA,0x0E,0xD5,0x03,0x44,0x00,0x45,0xF6,0x84,0x22,0x49,0x00,
+0x2D,0x63,0x84,0x01,0x3E,0x07,0xF4,0xB1,0xFC,0x80,0xFC,0x20,0x49,0x00,0x18,0x6C,
+0x5A,0x08,0x02,0x08,0x49,0xFF,0xFD,0x07,0x84,0x00,0x3E,0x07,0xF4,0xB1,0xD5,0x0C,
+0x49,0xFF,0xD9,0x79,0xE6,0x03,0xE9,0xF7,0x49,0x00,0x14,0xD1,0xC0,0xF4,0x3C,0x0D,
+0xFF,0x13,0x5A,0x00,0x01,0xF1,0x2E,0x07,0xF4,0xB1,0xC8,0x44,0x2E,0x17,0xF4,0xAB,
+0x5A,0x18,0x01,0x04,0x49,0x00,0x2F,0x9B,0x84,0x00,0x49,0x00,0x2F,0xBC,0x5A,0x00,
+0x01,0x0E,0x3C,0x0D,0xFB,0xD6,0x54,0x00,0x10,0x00,0xC0,0x3A,0x2E,0x07,0xEF,0xB6,
+0xC8,0x37,0x49,0x00,0x14,0xB4,0x5A,0x08,0x01,0x34,0x49,0x00,0x18,0x3D,0x5A,0x00,
+0x02,0x30,0x49,0x00,0x14,0xAC,0x5A,0x08,0x01,0x28,0x2E,0x07,0xF4,0xA0,0x8C,0x01,
+0x3E,0x07,0xF4,0xA0,0x49,0x00,0x14,0xA3,0x80,0xC0,0xC8,0x0E,0x84,0x01,0x80,0x26,
+0x49,0x00,0x2F,0x7E,0x80,0x06,0x44,0x10,0x75,0x30,0x49,0x00,0x2F,0x6B,0x80,0x06,
+0x84,0x21,0x49,0x00,0x2F,0x75,0x2E,0x07,0xF4,0xA0,0x4E,0x02,0x00,0xDE,0x84,0xC0,
+0x3E,0x60,0x0A,0xDC,0x49,0xFF,0xFE,0xC1,0x84,0x01,0x3E,0x07,0xF4,0xB1,0x3E,0x67,
+0xF4,0xA0,0x84,0xE1,0xD5,0x06,0x49,0x00,0x14,0x13,0x4E,0x02,0x00,0xC4,0x84,0xE0,
+0x2E,0x07,0xF4,0xB1,0x5A,0x08,0x03,0x04,0x49,0xFF,0xFE,0xBB,0x2E,0x67,0xF4,0xB1,
+0x5A,0x68,0x01,0x0C,0x80,0x06,0x49,0x00,0x14,0x7B,0x49,0x00,0x2B,0x12,0x84,0x02,
+0x3E,0x07,0xF4,0xB1,0x3E,0x67,0xF4,0xA9,0x2E,0x07,0xF4,0xB1,0x5A,0x00,0x02,0x04,
+0x48,0x00,0x00,0x87,0x2E,0x07,0xF4,0xA9,0x5A,0x08,0x01,0x1D,0x49,0x00,0x0B,0x3C,
+0x84,0x00,0x3E,0x07,0xF4,0xA9,0x49,0x00,0x2C,0xDF,0xFA,0x18,0x49,0x00,0x2C,0xE7,
+0x49,0xFF,0xD8,0xF9,0xE6,0x03,0xE9,0x03,0xFA,0x18,0xD5,0x03,0x44,0x00,0x46,0x00,
+0x49,0x00,0x2C,0xDD,0x49,0xFF,0xFD,0x94,0x49,0x00,0x0B,0x2A,0x3E,0x07,0xE2,0xCE,
+0xD5,0x67,0x2E,0x07,0xF4,0xAB,0x5A,0x08,0x01,0x06,0x84,0x04,0x3E,0x07,0xF4,0xB1,
+0xD5,0x5F,0x2E,0x07,0xF4,0x9C,0x84,0xC0,0x5A,0x08,0x01,0x13,0x84,0x00,0x3E,0x07,
+0xF4,0x9C,0x49,0x00,0x14,0x34,0x5A,0x08,0x01,0x06,0x49,0x00,0x0B,0x21,0x3E,0x07,
+0xE2,0xCE,0x3C,0x67,0xF7,0x92,0x44,0x00,0x00,0x82,0x40,0x60,0x18,0x07,0x2E,0x07,
+0xE2,0xCE,0x49,0x00,0x0B,0x48,0x5A,0x08,0x01,0x44,0xCE,0x42,0x2E,0x67,0xF6,0x27,
+0x97,0xB0,0x5A,0x68,0x01,0x37,0x49,0x00,0x14,0x1A,0xC8,0x33,0x49,0x00,0x28,0xB6,
+0x49,0xFF,0xCD,0x6D,0xC8,0x2E,0x84,0x0C,0xFA,0x2E,0x49,0x00,0x2E,0xE3,0x84,0x0C,
+0x80,0x26,0x49,0x00,0x2E,0xED,0x80,0x06,0x49,0xFF,0xCD,0x57,0x49,0xFF,0xCD,0x5F,
+0x5A,0x00,0x01,0x0C,0x84,0x0C,0x49,0x00,0x2E,0xFE,0x5A,0x08,0x01,0xF9,0x84,0x00,
+0x3E,0x07,0xF6,0x27,0x3E,0x07,0xF6,0x26,0x84,0x0C,0x84,0x20,0x49,0x00,0x2E,0xD8,
+0x2E,0x67,0xF6,0x27,0x97,0xB0,0x5A,0x68,0x01,0x0D,0x80,0x06,0x49,0x00,0x25,0xC3,
+0x84,0x00,0x49,0xFF,0xCC,0x2D,0x80,0x06,0x49,0x00,0x25,0xC9,0x3E,0x67,0xF6,0x26,
+0x49,0x00,0x0A,0xC2,0x49,0xFF,0xFD,0x2C,0x84,0x01,0x3E,0x07,0xF4,0x9C,0x2E,0x07,
+0xF4,0xB1,0x5A,0x08,0x04,0x0E,0x3C,0x1D,0xFB,0xD6,0x44,0x0F,0xEF,0xFF,0xFE,0x0E,
+0x3C,0x0F,0xFB,0xD6,0x49,0xFF,0xFB,0xFF,0x84,0x00,0x3E,0x07,0xF4,0xB1,0x49,0x00,
+0x13,0xCE,0x80,0x40,0x5A,0x08,0x01,0x21,0x2E,0x10,0x0A,0xDC,0xC1,0x05,0x8E,0x21,
+0x3E,0x10,0x0A,0xDC,0xD5,0x19,0x44,0x00,0x07,0xD0,0x80,0x62,0x49,0x00,0x2D,0xF1,
+0xD5,0x13,0x49,0x00,0x27,0x67,0x4E,0x03,0xFF,0x3C,0x49,0x00,0x13,0xB8,0x4E,0x02,
+0xFF,0x0E,0x48,0xFF,0xFF,0x36,0x49,0x00,0x13,0xB2,0x5A,0x00,0x01,0x04,0x48,0xFF,
+0xFF,0x2A,0x48,0xFF,0xFF,0x1E,0x80,0x07,0xFC,0xA0,0xFC,0x00,0x49,0x00,0x27,0x45,
+0xC0,0x6A,0x49,0xFF,0xF9,0x76,0x2E,0x07,0xE2,0xCD,0x5A,0x08,0x03,0x05,0x49,0x00,
+0x26,0x2C,0xD5,0x52,0x49,0x00,0x26,0x15,0x49,0xFF,0xE8,0x5E,0x49,0xFF,0xFB,0xDF,
+0x49,0x00,0x26,0x23,0x49,0xFF,0xFC,0xF7,0x5A,0x08,0x01,0x08,0x84,0x00,0x49,0x00,
+0x13,0x97,0x49,0xFF,0xDA,0xF4,0xD5,0x4F,0x49,0xFF,0xD8,0x9E,0x2E,0x17,0xE2,0xCF,
+0x5A,0x00,0x01,0x0C,0x5A,0x10,0x01,0x0C,0x3C,0x0D,0xFB,0xD6,0x96,0x36,0xC8,0x05,
+0x2E,0x07,0xEF,0xB6,0x5A,0x08,0x01,0x1E,0x84,0x0A,0xC1,0x02,0x84,0x05,0x3E,0x07,
+0xEF,0x18,0x84,0x06,0xC1,0x02,0x84,0x05,0x3C,0x1D,0xFB,0xD6,0x3E,0x07,0xEF,0x17,
+0x44,0x0F,0xFF,0xBF,0xFE,0x0E,0x3C,0x0F,0xFB,0xD6,0x84,0x23,0x84,0x00,0x3E,0x07,
+0xEF,0xB6,0x3E,0x07,0xE2,0xCF,0x3E,0x17,0xF4,0xB3,0x3E,0x07,0xF4,0xB0,0xD5,0x23,
+0x49,0xFF,0xFB,0xB1,0x2E,0x07,0xF4,0x21,0xC0,0x18,0x5A,0x08,0x01,0x12,0x49,0x00,
+0x25,0xB8,0xC0,0x03,0x49,0x00,0x18,0x1E,0x44,0x00,0x04,0x84,0x49,0x00,0x16,0x51,
+0x84,0x00,0x3E,0x07,0xF4,0x21,0x84,0x01,0x3E,0x07,0xF4,0xB3,0xD5,0x0C,0x5A,0x08,
+0x02,0xF5,0x49,0x00,0x25,0xA9,0xD5,0xEE,0x49,0xFF,0xFE,0x61,0xC8,0xF5,0x49,0xFF,
+0xFC,0x95,0xD5,0xF2,0xFC,0x80,0x00,0x00,0xFC,0x40,0x49,0x00,0x16,0xC5,0x80,0xE0,
+0x49,0x00,0x18,0x25,0x5A,0x08,0x01,0x05,0x84,0x20,0x49,0x00,0x2E,0x11,0x84,0x01,
+0x49,0x00,0x2E,0x29,0x5A,0x08,0x01,0x07,0x84,0x20,0x49,0x00,0x2E,0x09,0x49,0x00,
+0x16,0x9B,0x5A,0x78,0x02,0x5C,0x2E,0x07,0xF4,0xAC,0x5A,0x00,0x01,0x04,0x48,0x00,
+0x00,0x8F,0x49,0x00,0x18,0x0C,0x5A,0x00,0x01,0x04,0x48,0x00,0x00,0x89,0x2E,0x07,
+0xF4,0xA8,0x5A,0x08,0x01,0x05,0x84,0x00,0x3E,0x07,0xF4,0xA8,0x44,0x64,0x80,0x80,
+0x44,0x0B,0xFF,0xFF,0xB4,0x26,0xFE,0x0E,0xB6,0x06,0xB4,0x26,0x46,0x0F,0xFE,0xFF,
+0x50,0x00,0x0F,0xFF,0xFE,0x0E,0xB6,0x06,0xB4,0x26,0x46,0x0F,0xFD,0xFF,0x50,0x00,
+0x0F,0xFF,0xFE,0x0E,0xB6,0x06,0x84,0x00,0x49,0xFF,0xFB,0x0C,0x84,0x00,0x3E,0x07,
+0xF4,0xAC,0x84,0x00,0x49,0x00,0x17,0xE7,0xB4,0x26,0x44,0x04,0x00,0x00,0xFE,0x0F,
+0xB6,0x06,0xB4,0x26,0x46,0x00,0x01,0x00,0xFE,0x0F,0xB6,0x06,0xB4,0x26,0x46,0x00,
+0x02,0x00,0xFE,0x0F,0xB6,0x06,0x44,0x10,0x01,0x90,0x84,0x01,0x49,0x00,0x2D,0xB2,
+0x84,0x01,0x80,0x20,0x49,0x00,0x2D,0xBC,0x49,0x00,0x17,0xC9,0x80,0xC0,0xC8,0x47,
+0x84,0x01,0x49,0x00,0x2D,0xD0,0x81,0x20,0x5A,0x08,0x01,0xF8,0x80,0x26,0x49,0x00,
+0x2D,0xAF,0x80,0x09,0x49,0x00,0x17,0xBF,0xD5,0x3A,0xCF,0x39,0x2E,0x07,0xF4,0xAE,
+0x44,0x15,0x10,0x20,0xB6,0x01,0xC8,0x26,0x2E,0x67,0xF4,0xAC,0x5A,0x68,0x01,0x23,
+0x80,0x26,0x80,0x07,0x49,0xFF,0xD6,0x84,0x80,0x06,0x49,0xFF,0xD6,0x45,0x80,0x06,
+0x49,0xFF,0xD6,0x54,0x80,0x06,0x80,0x26,0x49,0xFF,0xD6,0x00,0x80,0x07,0x80,0x26,
+0x49,0xFF,0xFA,0x5B,0x5A,0x08,0x01,0x08,0x3E,0x07,0xF4,0xAE,0x80,0x07,0x49,0x00,
+0x17,0x9A,0xD5,0x08,0x80,0x06,0x49,0xFF,0xD6,0x56,0x80,0x07,0x80,0x26,0x49,0xFF,
+0xD5,0xED,0x2E,0x67,0xF4,0xAE,0xCE,0x0B,0x2E,0x07,0xF4,0xA8,0x5A,0x08,0x01,0x08,
+0x49,0x00,0x17,0x85,0x5A,0x08,0x01,0x04,0x3E,0x67,0xF4,0xA8,0x2E,0x07,0xF4,0xB3,
+0xC0,0x19,0x5A,0x78,0x01,0x0E,0x84,0x04,0x3E,0x07,0xF4,0xB3,0x84,0x00,0x49,0x00,
+0x27,0x25,0x84,0x00,0x49,0x00,0x01,0xAB,0x49,0x00,0x24,0xFB,0xD5,0x0B,0x5A,0x08,
+0x04,0x0A,0x84,0x01,0x3E,0x07,0xF4,0xB3,0x84,0x01,0x49,0x00,0x27,0x17,0x49,0x00,
+0x24,0xFA,0x2E,0x07,0xF4,0xB3,0xE6,0x05,0xE8,0x19,0x44,0xF0,0x6F,0x08,0x38,0x07,
+0x80,0x00,0x40,0xF0,0x3C,0x00,0xDD,0x0F,0x06,0x12,0x18,0x1E,0x0C,0x00,0x49,0xFF,
+0xFB,0xDB,0xD5,0x0C,0x49,0x00,0x20,0xEA,0xD5,0x09,0x49,0xFF,0xFC,0x16,0xD5,0x06,
+0x49,0xFF,0xFE,0xB5,0xD5,0x03,0x49,0xFF,0xFC,0x1E,0xFC,0xC0,0xFC,0x40,0x2E,0x07,
+0xF4,0xFB,0x84,0xC1,0x96,0x06,0xC0,0x2C,0x2E,0x07,0xF4,0xFB,0x58,0x00,0x00,0x02,
+0x3E,0x07,0xF4,0xFB,0x49,0x00,0x07,0xD4,0x84,0x00,0x80,0x80,0xFA,0x2F,0xFA,0x58,
+0x84,0x61,0x49,0x00,0x07,0x55,0xFA,0x04,0x49,0xFF,0xD6,0xF2,0x84,0x00,0x80,0x80,
+0xFA,0x2F,0xFA,0x40,0x84,0x61,0x49,0x00,0x07,0x4B,0x44,0x00,0x00,0x32,0x49,0xFF,
+0xD6,0xE7,0x84,0x00,0x49,0x00,0x29,0xF8,0x84,0x01,0x49,0x00,0x12,0x33,0x3E,0x67,
+0xF4,0xAF,0x3E,0x67,0xF6,0x2A,0x49,0x00,0x11,0xF6,0x49,0x00,0x12,0xEC,0x84,0xC0,
+0x84,0xE1,0x49,0x00,0x2C,0xD8,0x49,0x00,0x2C,0xAE,0x2E,0x07,0xF4,0xAF,0xE6,0x05,
+0xE8,0xF9,0x44,0xF0,0x6F,0xB0,0x38,0x07,0x81,0x01,0x40,0xF0,0x3C,0x00,0xDD,0x0F,
+0x0A,0x00,0x12,0x00,0x5E,0x00,0xDE,0x00,0x9A,0x01,0x49,0x00,0x12,0x5D,0x48,0x00,
+0x00,0xE8,0x84,0x01,0x3E,0x77,0xF4,0xB2,0x49,0x00,0x2C,0x81,0x3E,0x67,0xF4,0xB3,
+0x3E,0x67,0xF4,0xB1,0x3E,0x67,0xF4,0xAA,0x49,0x00,0x12,0x01,0x5A,0x08,0x01,0x17,
+0x49,0x00,0x12,0x03,0x5A,0x08,0x02,0x04,0x84,0x03,0xD5,0x02,0x84,0x04,0x3E,0x07,
+0xF4,0xAF,0x2E,0x07,0xF6,0x25,0xC0,0x03,0x84,0x04,0xD5,0x05,0x2E,0x07,0xF6,0x24,
+0xC0,0xC9,0x84,0x03,0x3E,0x07,0xF4,0xAF,0xD5,0xC5,0x84,0x02,0xD5,0xFC,0x49,0x00,
+0x11,0x90,0x49,0x00,0x11,0xA0,0x3E,0x67,0xF4,0xB4,0x49,0x00,0x11,0x93,0x81,0x20,
+0x5A,0x08,0x01,0x23,0x3E,0x07,0xF4,0xAA,0x84,0x00,0x49,0x00,0x26,0x77,0x49,0x00,
+0x07,0x5F,0x84,0x00,0x80,0x80,0xFA,0x2F,0xFA,0x58,0x80,0x69,0x49,0x00,0x06,0xE0,
+0xFA,0x04,0x49,0xFF,0xD6,0x7D,0x84,0x00,0x80,0x80,0xFA,0x2F,0xFA,0x40,0x80,0x69,
+0x49,0x00,0x06,0xD6,0x44,0x00,0x00,0x32,0x49,0xFF,0xD6,0x72,0x84,0x00,0x3E,0x67,
+0xF4,0xB2,0x49,0x00,0x29,0x81,0x49,0x00,0x11,0x86,0x2E,0x17,0xF4,0xAA,0x5A,0x08,
+0x01,0x0B,0x84,0x00,0x3C,0x0F,0xFF,0x15,0x5A,0x18,0x01,0x06,0x49,0x00,0x12,0x73,
+0x48,0x00,0x00,0x87,0xC9,0x87,0x49,0xFF,0xFE,0x71,0x48,0xFF,0xFF,0x84,0x2E,0x07,
+0xF6,0x2C,0xC8,0x04,0x2E,0x07,0xF6,0x2B,0xC0,0x1A,0x2E,0x07,0xF6,0x24,0x54,0x90,
+0x00,0xFF,0x4E,0x93,0x00,0x15,0x80,0x09,0x3E,0x77,0xF6,0x25,0x3E,0x77,0xF4,0xAA,
+0x49,0x00,0x26,0x34,0x3E,0x97,0xF4,0xB2,0x49,0x00,0x11,0x5D,0x5A,0x08,0x01,0x08,
+0x2E,0x07,0xF4,0xAA,0x3C,0x9F,0xFF,0x15,0x5A,0x00,0x01,0xDA,0x3E,0x67,0xF6,0x24,
+0x2E,0x07,0xF6,0x25,0xC8,0x05,0x49,0x00,0x11,0x35,0x49,0x00,0x11,0x4C,0x49,0x00,
+0x11,0x3A,0x81,0x20,0x5A,0x08,0x01,0x22,0x3E,0x07,0xF4,0xAA,0x84,0x00,0x49,0x00,
+0x26,0x15,0x49,0x00,0x06,0xFD,0x84,0x00,0x80,0x80,0xFA,0x2F,0xFA,0x41,0x80,0x69,
+0x49,0x00,0x06,0x7E,0x44,0x00,0x00,0x96,0x49,0xFF,0xD6,0x1A,0x84,0x00,0x80,0x80,
+0xFA,0x2F,0xFA,0x59,0x80,0x69,0x49,0x00,0x06,0x73,0xFA,0x04,0x49,0xFF,0xD6,0x10,
+0x49,0x00,0x11,0xC7,0x3E,0x67,0xF4,0xB2,0x49,0x00,0x11,0x03,0x5A,0x08,0x01,0x0A,
+0x3E,0x67,0xF6,0x28,0x49,0x00,0x29,0x18,0x2E,0x07,0xF4,0xAA,0x5A,0x00,0x01,0x29,
+0x2E,0x07,0xF4,0xAA,0x4E,0x03,0xFF,0x27,0xD5,0x9F,0x3E,0x67,0xF6,0x2C,0x2E,0x07,
+0xF6,0x25,0xC0,0x22,0x2E,0x07,0xF6,0x2A,0xC0,0x1F,0x84,0x00,0x3E,0x77,0xF4,0xAA,
+0x49,0x00,0x25,0xDC,0x2E,0xA7,0xF4,0xAA,0x85,0x20,0x3E,0x67,0xF4,0xB2,0x3C,0x9F,
+0xFF,0x15,0x5A,0xA8,0x01,0x12,0x3E,0x77,0xF6,0x24,0x3E,0x67,0xF6,0x25,0x3E,0x67,
+0xF6,0x2A,0x49,0x00,0x11,0xF0,0x80,0x0A,0x80,0x29,0x49,0xFF,0xD4,0x77,0x3E,0x77,
+0xF4,0xAF,0x48,0xFF,0xFF,0x00,0x49,0x00,0x10,0xDE,0x81,0x20,0x5A,0x08,0x01,0x22,
+0x3E,0x07,0xF4,0xAA,0x84,0x00,0x49,0x00,0x25,0xB9,0x49,0x00,0x06,0xA1,0x84,0x00,
+0x80,0x80,0xFA,0x2F,0xFA,0x41,0x80,0x69,0x49,0x00,0x06,0x22,0x44,0x00,0x00,0x96,
+0x49,0xFF,0xD5,0xBE,0x84,0x00,0x80,0x80,0xFA,0x2F,0xFA,0x59,0x80,0x69,0x49,0x00,
+0x06,0x17,0xFA,0x04,0x49,0xFF,0xD5,0xB4,0x49,0x00,0x11,0x6B,0x3E,0x67,0xF4,0xB2,
+0x49,0x00,0x10,0xA7,0x5A,0x08,0x01,0x08,0x49,0x00,0x28,0xBE,0x2E,0x07,0xF4,0xAA,
+0x5A,0x00,0x01,0xCF,0x2E,0x07,0xF4,0xAA,0x4E,0x03,0xFE,0xCD,0x44,0x10,0x00,0xEB,
+0x49,0x00,0x2B,0xA5,0x49,0x00,0x10,0xD2,0x84,0x0A,0x49,0xFF,0xD5,0x99,0x84,0x01,
+0x44,0x10,0x00,0xEB,0x49,0x00,0x2B,0x9B,0x48,0xFF,0xFE,0xBD,0x2E,0x07,0xF4,0xB2,
+0xDD,0x9E,0x3E,0x07,0xF4,0xB2,0xDD,0x9E,0xDD,0x9E,0x46,0x10,0x00,0x81,0xC8,0x06,
+0x04,0x00,0x80,0x33,0x58,0x00,0x02,0x00,0xD5,0x06,0x04,0x20,0x80,0x33,0x44,0x0F,
+0xFD,0xFF,0xFE,0x16,0x14,0x00,0x80,0x33,0xDD,0x9E,0x44,0x24,0x2C,0x14,0x84,0x30,
+0xB4,0x62,0x96,0x1F,0xFE,0x5E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x44,0x24,0x2C,0x14,
+0x96,0x1F,0xB4,0x62,0x40,0x10,0x20,0x08,0x44,0x0F,0xF0,0xFF,0xFE,0x1E,0xFE,0x0F,
+0xB6,0x02,0xDD,0x9E,0xDD,0x9E,0xFC,0x00,0x44,0x24,0x80,0x10,0x84,0x01,0xB4,0x22,
+0x96,0x46,0xC1,0x0B,0xAE,0x10,0x3E,0x07,0xF4,0xC3,0x3E,0x07,0xF4,0xC0,0x3C,0x0D,
+0xFD,0x2E,0x8C,0x01,0x3C,0x0F,0xFD,0x2E,0x44,0x04,0x80,0x10,0xB4,0x00,0x92,0x0A,
+0x96,0x06,0xC0,0x0E,0x44,0x04,0x80,0x11,0x84,0x24,0xAE,0x40,0x49,0x00,0x01,0x7A,
+0x44,0x07,0x20,0x00,0xB4,0x00,0x92,0x08,0x96,0x06,0x49,0x00,0x01,0x58,0x44,0x04,
+0x80,0x10,0x84,0x21,0xB4,0x00,0x92,0x08,0x96,0x06,0xC0,0x08,0x44,0x04,0x80,0x11,
+0xAE,0x40,0x3E,0x17,0xF4,0xC1,0x3E,0x17,0xF4,0xC0,0x44,0x04,0x80,0x10,0xB4,0x20,
+0x92,0x27,0x96,0x46,0xC1,0x04,0x44,0x1F,0xFF,0x80,0xAE,0x40,0xB4,0x00,0x92,0x05,
+0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x10,0xFA,0x30,0xAE,0x40,0x44,0x04,0x80,0x10,
+0xB4,0x20,0x92,0x26,0x96,0x46,0xC1,0x04,0x44,0x10,0x00,0x40,0xAE,0x40,0xB4,0x00,
+0x92,0x18,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x13,0x84,0x21,0xAE,0x40,0x44,0x04,
+0x80,0x10,0xB4,0x00,0x92,0x15,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x12,0xFA,0x30,
+0xAE,0x40,0xFC,0x80,0xFC,0x00,0x44,0x24,0x80,0x10,0x84,0x21,0xB4,0x02,0x92,0x04,
+0x96,0x06,0xC0,0x14,0xFA,0x00,0xAE,0x10,0x3E,0x17,0xF4,0xC2,0x3E,0x17,0xF4,0xC0,
+0x3C,0x0D,0xFD,0x2F,0x8C,0x01,0x3C,0x0F,0xFD,0x2F,0x46,0x00,0x00,0x81,0x04,0x00,
+0x00,0xF0,0x92,0x03,0x96,0x06,0x49,0x00,0x01,0x02,0x44,0x14,0x80,0x10,0xB4,0x01,
+0x92,0x0B,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x11,0x84,0x48,0xAE,0x80,0xB4,0x01,
+0x92,0x03,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x10,0x84,0x28,0xAE,0x40,0x44,0x04,
+0x80,0x10,0xB4,0x20,0x92,0x22,0x96,0x46,0xC1,0x03,0x84,0x24,0xAE,0x40,0xB4,0x00,
+0x92,0x01,0x96,0x06,0xC0,0x0E,0x44,0x04,0x80,0x90,0xB4,0x00,0x92,0x01,0x96,0x06,
+0x5A,0x08,0x01,0x08,0x44,0x14,0x80,0x10,0x84,0x42,0xAE,0x88,0x3E,0x07,0xF4,0xB4,
+0x44,0x14,0x80,0x10,0xB4,0x01,0x92,0x19,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x13,
+0x84,0x42,0xAE,0x80,0xB4,0x01,0x92,0x16,0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x12,
+0x44,0x10,0x00,0x40,0xAE,0x40,0xFC,0x80,0xFC,0x00,0x80,0xC0,0x49,0xFF,0xCB,0xD4,
+0x46,0x20,0x00,0x81,0x97,0x86,0x94,0x32,0x04,0x61,0x03,0x93,0x84,0x3B,0xFF,0x8E,
+0xFF,0x87,0x14,0x61,0x03,0x93,0x49,0xFF,0xCB,0xC0,0xFC,0x80,0x44,0x24,0x50,0x1C,
+0x40,0x00,0x40,0x08,0xB4,0x22,0x96,0x49,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x44,0x24,
+0x50,0x1C,0x44,0x1F,0x00,0xFF,0xB4,0x62,0x40,0x00,0x20,0x08,0xFE,0x5E,0xFE,0x0F,
+0xB6,0x02,0xDD,0x9E,0x3E,0x07,0xF4,0xC4,0xDD,0x9E,0x44,0x07,0x21,0x00,0x46,0x10,
+0x20,0x00,0xB4,0x40,0xFE,0x57,0xB6,0x20,0x80,0x20,0xB4,0x01,0x92,0x19,0x96,0x06,
+0xC8,0xFD,0xDD,0x9E,0x44,0x27,0x21,0x1C,0x96,0x1F,0x40,0x10,0x60,0x08,0xB4,0x62,
+0x46,0x0F,0x0F,0xFF,0x50,0x00,0x0F,0xFF,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,
+0x44,0x24,0x80,0x84,0x96,0x06,0xB4,0x62,0x40,0x10,0x40,0x08,0x44,0x0E,0xFF,0xFF,
+0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x44,0x04,0x80,0x04,0xA6,0x02,0x92,0x01,
+0x96,0x06,0xC0,0x08,0x44,0x04,0x80,0x06,0x84,0x22,0xAE,0x40,0x84,0x01,0x3E,0x07,
+0xF4,0xC5,0x44,0x04,0x80,0x04,0x84,0x21,0xA6,0x02,0x96,0x06,0xC0,0x06,0x44,0x04,
+0x80,0x06,0xAE,0x40,0x3E,0x17,0xF4,0xC4,0xDD,0x9E,0x44,0x04,0x80,0x04,0xA6,0x03,
+0x92,0x01,0x96,0x06,0xDD,0x9E,0x44,0x04,0x10,0x04,0x44,0x10,0x00,0x55,0xAE,0x40,
+0x44,0x1F,0xFF,0xAA,0xAE,0x41,0x44,0x10,0x00,0x66,0xAE,0x42,0x40,0x00,0x00,0x09,
+0xDD,0x9E,0x44,0x14,0x10,0x08,0xB6,0x01,0x44,0x14,0x80,0x04,0xA6,0x0B,0x92,0x01,
+0x96,0x06,0xC0,0xFD,0x44,0x04,0x80,0x07,0x84,0x22,0xAE,0x40,0xDD,0x9E,0xFC,0x00,
+0x80,0xC0,0x92,0x10,0x96,0x00,0x49,0xFF,0xFF,0xEE,0x40,0x03,0x20,0x09,0x96,0x00,
+0x49,0xFF,0xFF,0xE9,0x96,0x30,0x49,0xFF,0xFF,0xE6,0xFC,0x80,0x44,0x24,0x10,0x00,
+0x96,0x06,0xA6,0x53,0x54,0x10,0x80,0xFE,0xFE,0x0F,0xAE,0x13,0xDD,0x9E,0x44,0x14,
+0x10,0x00,0xAE,0x08,0xDD,0x9E,0x44,0x04,0x10,0x12,0x84,0x20,0xAE,0x40,0xDD,0x9E,
+0x44,0x14,0x10,0x0C,0xB6,0x01,0xDD,0x9E,0x44,0x24,0x10,0x14,0x96,0x06,0xA6,0x53,
+0x54,0x10,0x80,0xFE,0xFE,0x0F,0xAE,0x13,0xDD,0x9E,0x44,0x14,0x10,0x10,0xAE,0x0B,
+0xDD,0x9E,0x44,0x14,0x10,0x10,0xAE,0x08,0xDD,0x9E,0x3E,0x07,0xE2,0xD4,0xDD,0x9E,
+0x2E,0x07,0xE2,0xD4,0xDD,0x9E,0x44,0x37,0x20,0x00,0x54,0x10,0x00,0x01,0xB4,0x83,
+0x40,0x20,0xA0,0x08,0x44,0x1F,0xFE,0xFF,0xFE,0x66,0xFE,0x57,0xB6,0x23,0x3E,0x07,
+0xE2,0xD4,0xDD,0x9E,0x44,0x07,0x20,0x00,0xB4,0x00,0x92,0x18,0x96,0x06,0xDD,0x9E,
+0x84,0x01,0x3E,0x07,0xE2,0xD5,0xDD,0x9E,0x2E,0x07,0xE2,0xD5,0xDD,0x9E,0x84,0x00,
+0x3E,0x07,0xE2,0xD5,0xDD,0x9E,0xC8,0x07,0x44,0x17,0x10,0x18,0xA6,0x08,0x54,0x00,
+0x00,0xFE,0xD5,0x08,0x5A,0x08,0x01,0x0F,0x44,0x17,0x10,0x18,0xA6,0x08,0x58,0x00,
+0x00,0x01,0xAE,0x08,0x44,0x17,0x10,0x0C,0xB4,0x01,0x58,0x00,0x01,0x00,0xB6,0x01,
+0xDD,0x9E,0x5A,0x08,0x02,0x0D,0x44,0x17,0x10,0x18,0xA6,0x08,0x58,0x00,0x00,0x01,
+0xAE,0x08,0x44,0x07,0x10,0x0C,0xB4,0x20,0x84,0x20,0xB6,0x20,0xDD,0x9E,0x3C,0x0D,
+0xFD,0x36,0xC0,0x0B,0xA4,0x80,0x3C,0x13,0xFA,0x68,0x8E,0x21,0xE0,0x41,0xE8,0x05,
+0xA4,0x40,0x8C,0x21,0x96,0x49,0xAC,0x40,0xA4,0x80,0x3C,0x13,0xFA,0x6A,0xE2,0x41,
+0xE9,0x0C,0x84,0x20,0xAC,0x40,0x44,0x06,0x00,0x34,0x44,0x10,0x00,0x5A,0xB6,0x20,
+0x84,0x01,0x3E,0x07,0xE2,0xD6,0xD5,0x0B,0x3C,0x1D,0xFD,0x38,0xC1,0x08,0xA4,0x00,
+0x88,0x01,0x44,0x16,0x00,0x34,0xA6,0x00,0x96,0x00,0xB6,0x01,0x44,0x06,0x00,0x00,
+0xB4,0x00,0x92,0x08,0x96,0x06,0x5A,0x08,0x01,0x0B,0x44,0x06,0x00,0x30,0xB4,0x20,
+0x58,0x10,0x80,0x01,0xB6,0x20,0xB4,0x20,0x96,0x46,0xC9,0xFE,0xDD,0x9E,0xFC,0x40,
+0x3C,0x0D,0xFD,0x36,0x84,0x20,0xAC,0x40,0x3C,0x1D,0xFD,0x38,0xC1,0x08,0xA4,0x00,
+0x88,0x01,0x44,0x16,0x00,0x34,0xA6,0x00,0x96,0x00,0xB6,0x01,0x84,0xE0,0x44,0x94,
+0x80,0x00,0x44,0xA4,0x80,0x80,0x00,0x64,0x80,0x02,0xB4,0x0A,0x92,0xC3,0x92,0x13,
+0x96,0x06,0xFF,0x86,0xC6,0x16,0x44,0x04,0x80,0x02,0x84,0x28,0xAE,0x40,0x44,0x06,
+0x00,0x00,0xB4,0x00,0x92,0x08,0x96,0x06,0x5A,0x08,0x01,0x32,0x44,0x06,0x00,0x30,
+0xB4,0x20,0x58,0x10,0x80,0x01,0xB6,0x20,0xB4,0x20,0x96,0x46,0xC9,0xFE,0xFC,0xC0,
+0x00,0x04,0x80,0x02,0x40,0x10,0x10,0x09,0xB4,0x0A,0x92,0x14,0x96,0x06,0xFE,0x0E,
+0xC0,0x08,0x44,0x04,0x80,0x02,0xFA,0x20,0xAE,0x40,0x49,0xFF,0xFF,0x8A,0x80,0xE6,
+0x00,0x04,0x80,0x02,0x40,0x10,0x18,0x09,0xB4,0x0A,0x92,0x16,0x96,0x06,0xFE,0x0E,
+0xC0,0x07,0x44,0x04,0x80,0x02,0x44,0x10,0x00,0x40,0xAE,0x40,0xFC,0xC0,0x84,0x01,
+0x8C,0xE1,0x49,0xFF,0xD3,0x0C,0x5C,0xF3,0xA7,0x11,0xE9,0xBE,0xFC,0xC0,0x44,0x16,
+0x00,0x34,0xB6,0x01,0xDD,0x9E,0x3C,0x0F,0xFD,0x39,0x02,0x0F,0x80,0x00,0x3C,0x4B,
+0xFA,0x6A,0x3C,0x1F,0xFD,0x38,0x3C,0x5B,0xFA,0x69,0x3C,0x2F,0xFD,0x37,0x3C,0x3F,
+0xFD,0x36,0x3C,0x0B,0xFA,0x68,0xDD,0x9E,0x3C,0x0B,0xFA,0x6A,0xDD,0x9E,0x3E,0x07,
+0xE2,0xD6,0xDD,0x9E,0x2E,0x07,0xE2,0xD6,0xDD,0x9E,0x3C,0x0F,0xFD,0x33,0xDD,0x9E,
+0x3C,0x0F,0xFD,0x32,0xDD,0x9E,0xFC,0x20,0x44,0x14,0x80,0x00,0x44,0x04,0x80,0x80,
+0xA6,0x8A,0xB4,0x00,0x92,0x10,0x96,0x06,0xFE,0x16,0xC0,0x05,0x44,0x04,0x80,0x02,
+0x84,0x41,0xAE,0x80,0xA6,0x0A,0x40,0x10,0x04,0x09,0x44,0x04,0x80,0x80,0xB4,0x00,
+0x92,0x11,0x96,0x06,0xFE,0x0E,0xC0,0x05,0x44,0x04,0x80,0x02,0x84,0x22,0xAE,0x40,
+0x44,0x04,0x80,0x00,0xA6,0x02,0x40,0x10,0x08,0x09,0x44,0x04,0x80,0x80,0xB4,0x00,
+0x92,0x12,0x96,0x06,0xFE,0x0E,0x4E,0x02,0x00,0xA4,0x44,0x04,0x80,0x02,0x84,0x24,
+0xAE,0x40,0x3C,0x0D,0xFD,0x37,0x3C,0x2D,0xFD,0x39,0x84,0x20,0xAC,0x40,0xC2,0x06,
+0x44,0x16,0x00,0x28,0xB4,0x21,0x96,0x48,0xAE,0x50,0xC0,0x0B,0xA4,0x80,0x3C,0x13,
+0xFA,0x69,0x8E,0x21,0xE0,0x41,0xE8,0x05,0xA4,0x40,0x8C,0x21,0x96,0x49,0xAC,0x40,
+0x44,0x06,0x00,0x00,0xB4,0x00,0x92,0x08,0x96,0x06,0x5A,0x00,0x01,0x06,0x84,0xC0,
+0x44,0x76,0x00,0x30,0xD5,0x12,0x44,0x06,0x00,0x30,0xB4,0x20,0x58,0x10,0x80,0x01,
+0xB6,0x20,0xB4,0x20,0x96,0x46,0xC9,0xFE,0xD5,0xF3,0x84,0x01,0x8C,0xC1,0x49,0xFF,
+0xD2,0x86,0x5C,0xF3,0x08,0x01,0xE8,0x66,0x44,0x34,0x80,0x00,0x44,0x24,0x80,0x80,
+0xA6,0x1A,0x40,0x10,0x0C,0x09,0xB4,0x02,0x92,0x13,0x96,0x06,0xFE,0x0E,0xC0,0x16,
+0x44,0x04,0x80,0x02,0x84,0x28,0xAE,0x40,0x44,0x06,0x00,0x00,0xB4,0x00,0x92,0x08,
+0x96,0x06,0x5A,0x08,0x01,0x50,0x44,0x06,0x00,0x30,0xB4,0x20,0x58,0x10,0x80,0x01,
+0xB6,0x20,0xB4,0x20,0x96,0x46,0xC9,0xFE,0xD5,0x45,0xA6,0x1A,0x40,0x10,0x10,0x09,
+0xB4,0x02,0x92,0x14,0x96,0x06,0xFE,0x0E,0xC0,0x2D,0x44,0x04,0x80,0x02,0xFA,0x20,
+0xAE,0x40,0x3C,0x2D,0xFD,0x39,0x3C,0x0D,0xFD,0x37,0xC2,0x08,0xA4,0x40,0x88,0x22,
+0x44,0x26,0x00,0x38,0xB4,0x42,0x96,0x90,0xAE,0x88,0xC0,0x0B,0xA4,0x80,0x3C,0x13,
+0xFA,0x69,0x8E,0x21,0xE0,0x41,0xE8,0x05,0xA4,0x40,0x8C,0x21,0x96,0x49,0xAC,0x40,
+0x44,0x06,0x00,0x00,0xB4,0x00,0x92,0x08,0x96,0x06,0x5A,0x00,0x01,0x04,0x84,0xC0,
+0xD5,0x09,0xB4,0x07,0x58,0x00,0x00,0x01,0xB6,0x07,0xB4,0x07,0x96,0x06,0xC8,0xFE,
+0xD5,0xF7,0x44,0x04,0x80,0x00,0xA6,0x02,0x40,0x10,0x14,0x09,0x44,0x04,0x80,0x80,
+0xB4,0x00,0x92,0x15,0x96,0x06,0xFE,0x0E,0xC0,0x99,0x44,0x04,0x80,0x02,0xFA,0x30,
+0xAE,0x40,0x3C,0x0D,0xFD,0x33,0xC0,0x04,0x3C,0x0D,0xFD,0x33,0xDD,0x20,0x44,0x04,
+0x80,0x00,0xA6,0x02,0x40,0x10,0x0C,0x09,0x44,0x04,0x80,0x80,0xB4,0x00,0x92,0x13,
+0x96,0x06,0xFE,0x0E,0xC8,0x14,0x44,0x04,0x80,0x00,0xA6,0x02,0x40,0x10,0x10,0x09,
+0x44,0x04,0x80,0x80,0xB4,0x00,0x92,0x14,0x96,0x06,0xFE,0x0E,0xC0,0x1D,0x44,0x04,
+0x80,0x02,0xFA,0x20,0xAE,0x40,0x49,0xFF,0xFE,0x64,0xD5,0x16,0x44,0x04,0x80,0x02,
+0x84,0x28,0xAE,0x40,0x44,0x06,0x00,0x00,0xB4,0x00,0x92,0x08,0x96,0x06,0x5A,0x08,
+0x01,0xE4,0x44,0x06,0x00,0x30,0xB4,0x20,0x58,0x10,0x80,0x01,0xB6,0x20,0xB4,0x20,
+0x96,0x46,0xC9,0xFE,0xD5,0xD9,0x44,0x14,0x80,0x00,0xA6,0x0A,0x40,0x20,0x14,0x09,
+0x44,0x04,0x80,0x80,0xB4,0x00,0x92,0x15,0x96,0x06,0xFE,0x16,0xC0,0x05,0x44,0x04,
+0x80,0x02,0xFA,0x50,0xAE,0x80,0xA6,0x0A,0x40,0x10,0x18,0x09,0x44,0x04,0x80,0x80,
+0xB4,0x00,0x92,0x16,0x96,0x06,0xFE,0x0E,0xC0,0x06,0x44,0x04,0x80,0x02,0x44,0x10,
+0x00,0x40,0xAE,0x40,0xFC,0xA0,0x46,0x20,0x00,0x83,0x96,0x06,0x04,0x31,0x00,0x14,
+0x94,0x41,0x84,0x1D,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x14,0xDD,0x9E,0x46,0x00,
+0x00,0x83,0x04,0x00,0x00,0x16,0x92,0x10,0x54,0x00,0x03,0xFF,0xDD,0x9E,0xFC,0x00,
+0x46,0x60,0x00,0x83,0x44,0x01,0x00,0x00,0xA0,0x71,0xFE,0x0F,0xA8,0x31,0x84,0x01,
+0x49,0xFF,0xD1,0xA5,0xA0,0x71,0x44,0x0E,0xFF,0xFF,0xFE,0x0E,0xA8,0x31,0xFC,0x80,
+0x46,0x20,0x00,0x80,0x84,0x3E,0x04,0x31,0x00,0x77,0x96,0x06,0xFE,0x5E,0xFE,0x0F,
+0x14,0x01,0x00,0x77,0xDD,0x9E,0x40,0x21,0x40,0x08,0x40,0x10,0xA0,0x08,0x88,0x22,
+0x88,0x20,0x46,0x00,0x00,0x80,0x14,0x10,0x00,0x78,0xDD,0x9E,0xFC,0x41,0xF5,0x81,
+0x81,0x00,0x81,0x22,0x80,0xE3,0x80,0xC4,0x46,0x50,0x00,0x80,0xC0,0x03,0x5A,0x08,
+0x01,0x18,0x83,0x85,0xBA,0x77,0x46,0x1F,0xEF,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x56,
+0xB9,0xF7,0x84,0x23,0x49,0xFF,0xC4,0xAB,0x38,0x14,0x99,0x01,0x84,0x02,0x49,0xFF,
+0xCB,0x07,0x38,0x03,0x98,0x00,0x84,0x22,0x49,0xFF,0xCC,0x05,0xFC,0xC1,0x81,0x41,
+0x83,0x85,0xB9,0x77,0x46,0x00,0x10,0x00,0xFE,0x0F,0xB8,0xF7,0x84,0x23,0x84,0x01,
+0x49,0xFF,0xC4,0x95,0x50,0x25,0x7F,0xFF,0x80,0x06,0xF1,0x01,0x96,0x90,0x49,0xFF,
+0xFF,0xC4,0xFC,0xC1,0x46,0x20,0x00,0x80,0x96,0x06,0x04,0x31,0x00,0x75,0x40,0x10,
+0x28,0x08,0x44,0x0F,0xFB,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x75,0xDD,0x9E,
+0x46,0x20,0x00,0x91,0x96,0x06,0x04,0x31,0x00,0x14,0x94,0x41,0x84,0x1D,0xFE,0x1E,
+0xFE,0x0F,0x14,0x01,0x00,0x14,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0x44,0x14,
+0x00,0x48,0x84,0x1F,0xB6,0x01,0x44,0x14,0x00,0x4C,0xB6,0x01,0xDD,0x9E,0xC8,0x04,
+0x44,0x07,0x20,0x14,0xD5,0x03,0x44,0x07,0x20,0x18,0xB4,0x00,0x40,0x00,0x30,0x08,
+0x92,0x0C,0xDD,0x9E,0xFC,0x00,0x80,0xC1,0x49,0xFF,0xCD,0x34,0x84,0x40,0x50,0x00,
+0x09,0x48,0x80,0x22,0xE2,0x46,0xE8,0x04,0xAA,0x41,0x8C,0x41,0xD5,0xFC,0xFC,0x80,
+0xFC,0x00,0x44,0x04,0x00,0x9C,0xA6,0x00,0xE6,0x03,0xE9,0x24,0x44,0x64,0x0C,0x40,
+0x84,0x41,0xA6,0x32,0x80,0x62,0x58,0x00,0x00,0x08,0xAE,0x32,0x44,0x14,0x04,0x40,
+0x44,0x04,0x08,0x40,0x49,0xFF,0xC8,0x26,0xA6,0x32,0x84,0x41,0x54,0x00,0x00,0xF7,
+0xAE,0x32,0x44,0x14,0x04,0x40,0x44,0x04,0x08,0x40,0x80,0x62,0x49,0xFF,0xC8,0x1A,
+0x44,0x07,0x20,0xC0,0x46,0x10,0x20,0x00,0xB4,0x40,0xFE,0x57,0xB6,0x20,0x80,0x20,
+0xD5,0x3C,0x49,0x00,0x0C,0x44,0xC8,0xDB,0x44,0x64,0x50,0x28,0xB4,0x06,0x92,0x10,
+0x96,0x06,0x5A,0x00,0x01,0x05,0x44,0x64,0x50,0x28,0xD5,0x25,0x2E,0x07,0xF4,0xB4,
+0xC8,0x0E,0xB4,0x06,0x92,0x03,0x96,0x06,0xC8,0x0A,0xB4,0x06,0x92,0x01,0x96,0x06,
+0xC0,0x06,0x3C,0x0D,0xFF,0x15,0x5A,0x08,0x01,0xEB,0xD5,0xEE,0x49,0xFF,0xF4,0x6C,
+0x5A,0x08,0x02,0xF9,0xD5,0xE9,0x2E,0x07,0xF4,0xB4,0xC8,0x12,0xB4,0x06,0x92,0x03,
+0x96,0x06,0xC8,0x0E,0xB4,0x06,0x92,0x01,0x96,0x06,0xC0,0x0A,0x3C,0x0D,0xFF,0x15,
+0x5A,0x00,0x01,0xAE,0xB4,0x06,0x92,0x10,0x96,0x06,0xC0,0xEE,0xD5,0xA8,0x49,0xFF,
+0xF4,0x53,0x5A,0x08,0x02,0xF5,0xD5,0xA3,0xB4,0x01,0x92,0x19,0x96,0x06,0xC8,0xFD,
+0x84,0x01,0x49,0xFF,0xFC,0xCC,0xFC,0x80,0x44,0x34,0x00,0x54,0x84,0x21,0xB4,0x43,
+0x40,0x00,0x80,0x0C,0xFE,0x03,0xFE,0x16,0xB6,0x03,0xDD,0x9E,0x44,0x04,0x00,0x50,
+0x44,0x1F,0x98,0x81,0xAC,0x40,0x84,0x21,0xAC,0x41,0xDD,0x9E,0xFC,0x00,0x80,0xC0,
+0x44,0x04,0x80,0x90,0x54,0x13,0x00,0x01,0xB4,0x80,0x84,0x5D,0x94,0xC9,0xFE,0xA6,
+0xFE,0x9F,0xB6,0x40,0x46,0x00,0x00,0x81,0x84,0x5E,0x83,0x80,0xBB,0x15,0xFE,0x9E,
+0xFE,0x57,0xB9,0x95,0x84,0x00,0x3E,0x07,0xF4,0xB4,0x44,0x04,0x80,0x10,0x84,0x22,
+0xAE,0x40,0x49,0xFF,0xD0,0x78,0xE6,0x03,0xE9,0x2A,0x44,0x14,0x00,0x18,0xA6,0x0A,
+0x5A,0x68,0x01,0x13,0x54,0x00,0x00,0xFB,0xAE,0x0A,0x44,0x14,0x50,0x10,0xB4,0x01,
+0x92,0x08,0x40,0x00,0x20,0x08,0xB6,0x01,0x44,0x14,0x70,0x00,0x44,0x0E,0xFF,0xFF,
+0xB4,0x41,0xFE,0x16,0xD5,0x13,0x58,0x00,0x00,0x04,0xAE,0x0A,0x44,0x14,0x50,0x10,
+0xB4,0x01,0x92,0x08,0x40,0x00,0x20,0x08,0x58,0x00,0x00,0x98,0xB6,0x01,0x44,0x14,
+0x70,0x00,0x44,0x01,0x00,0x00,0xB4,0x41,0xFE,0x17,0xB6,0x01,0xFC,0x80,0x46,0x00,
+0x00,0x91,0xA0,0x02,0x96,0x01,0xDD,0x9E,0xDD,0x9E,0x46,0x30,0x00,0x91,0x58,0x20,
+0x00,0x01,0x14,0x21,0x80,0x11,0x44,0x20,0xFF,0xFE,0xFE,0x16,0x14,0x01,0x80,0x11,
+0x46,0x00,0x20,0x00,0xFE,0x47,0x44,0x07,0x20,0xC0,0xB6,0x20,0xDD,0x9E,0x46,0x10,
+0x00,0x81,0x44,0x02,0x00,0x00,0x04,0x20,0x80,0x6E,0xFE,0x17,0x14,0x00,0x80,0x6E,
+0xDD,0x9E,0x44,0x27,0x30,0x10,0xB4,0x22,0x92,0x21,0x96,0x46,0x5A,0x10,0x01,0xFD,
+0xFC,0x00,0x44,0x17,0x30,0x00,0xB6,0x01,0x84,0x02,0x49,0xFF,0xCE,0x9A,0xFC,0x80,
+0xFC,0x00,0x46,0x61,0xFF,0xF9,0x50,0x03,0x05,0x27,0x49,0xFF,0xFF,0xEC,0x50,0x03,
+0x04,0x87,0x49,0xFF,0xFF,0xE8,0xFC,0x80,0xFC,0x00,0x46,0x61,0xFF,0xF9,0x50,0x03,
+0x05,0x00,0x49,0xFF,0xFF,0xE0,0x50,0x03,0x04,0x00,0x49,0xFF,0xFF,0xDC,0xFC,0x80,
+0xFC,0x00,0x46,0x11,0xFF,0xFF,0x50,0x10,0x8F,0x00,0xFE,0x0F,0x49,0xFF,0xFF,0xD3,
+0xFC,0x80,0xFC,0x00,0x46,0x11,0xFF,0xFF,0xFE,0x0F,0x49,0xFF,0xFF,0xCC,0xFC,0x80,
+0xFC,0x00,0x46,0x01,0xFF,0xFF,0x50,0x00,0x02,0xBB,0x49,0xFF,0xFF,0xC4,0xFC,0x80,
+0xFC,0x00,0x46,0x01,0xFF,0xFF,0x50,0x00,0x03,0xCC,0x49,0xFF,0xFF,0xBC,0xFC,0x80,
+0xFC,0x00,0x44,0x67,0x30,0x04,0x49,0xFF,0xFF,0xC5,0x49,0xFF,0xCE,0x4D,0xB4,0x26,
+0x84,0x1E,0xFE,0x0E,0xB6,0x06,0x44,0x00,0x03,0xE8,0x49,0xFF,0xCE,0x52,0xB4,0x06,
+0x58,0x00,0x00,0x01,0xB6,0x06,0x44,0x00,0x03,0xE8,0x49,0xFF,0xCE,0x4A,0x49,0xFF,
+0xFF,0xD9,0x49,0xFF,0xCE,0x39,0x46,0x01,0xFF,0xFF,0x49,0xFF,0xFF,0x9C,0x49,0xFF,
+0xCE,0x33,0x49,0xFF,0xCF,0xC0,0xE6,0x03,0xE8,0x0B,0x49,0xFF,0xFF,0xD3,0x49,0xFF,
+0xCE,0x2B,0x46,0x01,0xFF,0xFF,0x49,0xFF,0xFF,0x8E,0x49,0xFF,0xCE,0x25,0x44,0x67,
+0x30,0x04,0x44,0x00,0x03,0xE8,0x49,0xFF,0xCE,0x2C,0xB4,0x26,0x84,0x1E,0xFE,0x0E,
+0xB6,0x06,0x44,0x00,0x03,0xE8,0x49,0xFF,0xCE,0x24,0xB4,0x06,0x58,0x00,0x00,0x01,
+0xB6,0x06,0x44,0x00,0x03,0xE8,0x49,0xFF,0xCE,0x1C,0x44,0x04,0x80,0x0A,0x84,0x24,
+0xAE,0x40,0x84,0x22,0xAE,0x40,0x84,0x21,0xAE,0x40,0xFC,0x80,0xFC,0x41,0xF0,0x81,
+0x80,0xE1,0x80,0xC2,0x81,0x43,0x81,0x24,0x49,0xFF,0xFF,0x74,0xF0,0x01,0x5A,0x00,
+0xFF,0x06,0x49,0xFF,0xFF,0x87,0x49,0xFF,0xCD,0xF7,0x40,0xA5,0x20,0x08,0x40,0x95,
+0x24,0x04,0x40,0x63,0x40,0x08,0x40,0x64,0x98,0x04,0x40,0x03,0xE0,0x08,0xFE,0x37,
+0x49,0xFF,0xFF,0x51,0x49,0xFF,0xFF,0x6A,0xFC,0xC1,0x44,0x27,0x30,0x10,0xB4,0x22,
+0x92,0x21,0x96,0x46,0x5A,0x10,0x01,0xFD,0xFC,0x20,0x44,0x14,0x80,0x0A,0x84,0x42,
+0xAE,0x88,0x44,0x17,0x30,0x00,0x44,0x60,0x10,0x00,0xB6,0x01,0x44,0x74,0x80,0x08,
+0xB4,0x07,0x92,0x11,0x96,0x06,0xC0,0x0D,0x44,0x04,0x80,0x08,0xB4,0x00,0x92,0x12,
+0x96,0x06,0xC8,0x10,0x44,0x07,0x30,0x14,0xB4,0x00,0x92,0x10,0x96,0x00,0xFC,0xA0,
+0x2E,0x07,0xF4,0xF0,0xC8,0xF2,0x84,0x01,0x8E,0xC1,0x49,0xFF,0xCD,0xCA,0xCE,0xE9,
+0xD5,0xEC,0x44,0x00,0xFF,0xFF,0xFC,0xA0,0xFC,0x41,0xF0,0x81,0x40,0x21,0x20,0x08,
+0x46,0x02,0xF0,0x00,0x40,0x91,0x00,0x04,0x40,0x10,0xC0,0x08,0x40,0x94,0x84,0x04,
+0x84,0xC0,0x49,0xFF,0xFF,0x1F,0xF0,0x01,0x49,0xFF,0xFF,0x34,0x49,0xFF,0xCD,0xA4,
+0x80,0x09,0x49,0xFF,0xFF,0xBC,0x5C,0xF0,0x01,0x00,0x80,0xE0,0xE9,0x08,0x8C,0xC1,
+0x84,0x01,0x97,0xB0,0x49,0xFF,0xCF,0x34,0x5A,0x68,0x04,0xED,0x49,0xFF,0xFF,0x16,
+0x5A,0x60,0x04,0x04,0x80,0x07,0xFC,0xC1,0x84,0x00,0xFC,0xC1,0xFC,0x00,0x44,0x17,
+0x30,0x08,0xB4,0x01,0x92,0x05,0x94,0x05,0x58,0x00,0x00,0x01,0xB6,0x01,0x49,0xFF,
+0xFE,0xF9,0x49,0xFF,0xCF,0x10,0xE6,0x03,0xE8,0x07,0x49,0xFF,0xFF,0x23,0x46,0x01,
+0xFF,0xFF,0x49,0xFF,0xFE,0xE0,0x84,0x06,0xFA,0x2F,0x44,0x20,0x00,0xAC,0x84,0x61,
+0x84,0x80,0x49,0xFF,0xFF,0x6D,0x84,0x06,0xFA,0x2F,0x44,0x20,0x00,0xAD,0x84,0x61,
+0x84,0x80,0x49,0xFF,0xFF,0x65,0x44,0x04,0x80,0x0A,0x84,0x24,0xAE,0x40,0x84,0x22,
+0xAE,0x40,0x44,0x04,0x80,0x88,0x44,0x14,0x00,0x00,0xB4,0x40,0xFE,0x57,0xB6,0x20,
+0xB4,0x40,0x44,0x12,0x00,0x00,0xFE,0x57,0xB6,0x20,0x49,0xFF,0xFE,0xD7,0xFC,0x80,
+0xFC,0x20,0x84,0x2C,0x84,0x41,0x84,0x05,0x49,0xFF,0xFF,0x98,0x97,0xC0,0x84,0x2D,
+0x84,0x41,0x84,0x05,0x49,0xFF,0xFF,0x92,0x97,0x80,0x80,0x87,0x84,0x05,0xFA,0x2F,
+0x44,0x20,0x00,0xC0,0x84,0x61,0x49,0xFF,0xFF,0x3B,0x80,0x86,0x84,0x05,0xFA,0x2F,
+0x44,0x20,0x00,0xC1,0x84,0x61,0x49,0xFF,0xFF,0x33,0x80,0x87,0x84,0x05,0xFA,0x2F,
+0x44,0x20,0x00,0xC2,0x84,0x61,0x49,0xFF,0xFF,0x2B,0x80,0x86,0x84,0x05,0xFA,0x2F,
+0x44,0x20,0x00,0xC3,0x84,0x61,0x49,0xFF,0xFF,0x23,0x80,0x87,0x84,0x05,0xFA,0x2F,
+0x44,0x20,0x00,0xC4,0x84,0x61,0x49,0xFF,0xFF,0x1B,0x80,0x86,0x84,0x05,0xFA,0x2F,
+0x44,0x20,0x00,0xC5,0x84,0x61,0x49,0xFF,0xFF,0x13,0x80,0x87,0x84,0x05,0xFA,0x2F,
+0x44,0x20,0x00,0xC6,0x84,0x61,0x49,0xFF,0xFF,0x0B,0x84,0x05,0xFA,0x2F,0x44,0x20,
+0x00,0xC7,0x84,0x61,0x80,0x86,0x49,0xFF,0xFF,0x03,0xFC,0xA0,0x44,0x04,0x80,0x0A,
+0x84,0x24,0xAE,0x40,0x44,0x17,0x21,0x04,0x46,0x38,0x00,0x00,0xB4,0x01,0x92,0x14,
+0x40,0x00,0x50,0x08,0xB6,0x01,0x44,0x07,0x21,0x08,0xB4,0x20,0x92,0x28,0x40,0x10,
+0xA0,0x08,0xB6,0x20,0xB4,0x40,0x46,0x1F,0xCF,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x8E,
+0xB6,0x40,0xB4,0x40,0xFE,0x9F,0xB6,0x40,0x44,0x27,0x21,0x10,0xB4,0x02,0x94,0x01,
+0x92,0x01,0xB6,0x02,0x44,0x27,0x21,0x14,0xB4,0x02,0x92,0x14,0x40,0x00,0x50,0x08,
+0xB6,0x02,0x44,0x07,0x21,0x18,0xB4,0x40,0x92,0x48,0x40,0x21,0x20,0x08,0xB6,0x40,
+0xB4,0x40,0xFE,0x56,0xB6,0x20,0xB4,0x20,0xFE,0x5F,0xB6,0x20,0x44,0x17,0x21,0x1C,
+0xB4,0x01,0x92,0x11,0x40,0x00,0x44,0x08,0xB6,0x01,0xB4,0x41,0x46,0x0F,0x0F,0xFF,
+0x50,0x00,0x0F,0xFF,0xFE,0x16,0xB6,0x01,0x44,0x17,0x21,0x00,0x46,0x0F,0xFF,0x0F,
+0xB4,0x41,0x50,0x00,0x0F,0xFF,0xFE,0x16,0xB6,0x01,0x44,0x04,0x80,0x07,0x84,0x22,
+0xAE,0x40,0x44,0x04,0x10,0x00,0x44,0x24,0x10,0x10,0xAE,0x42,0x84,0x21,0xAE,0x40,
+0x84,0x20,0xAE,0x53,0xA6,0x43,0x54,0x10,0x80,0xFE,0xAE,0x43,0x44,0x04,0x10,0x0C,
+0x84,0x20,0xB6,0x20,0x84,0x1F,0xAE,0x10,0xDD,0x9E,0x3C,0x0F,0xFD,0x3D,0xDD,0x9E,
+0xC8,0x04,0x44,0x05,0x00,0x04,0xD5,0x03,0x44,0x05,0x00,0x14,0xA4,0x00,0x96,0x01,
+0xDD,0x9E,0x44,0x04,0x80,0x00,0xA6,0x03,0x96,0x06,0xC0,0x0D,0x44,0x04,0x80,0x03,
+0x84,0x21,0xAE,0x40,0x3C,0x0D,0xFD,0x3D,0xC0,0x06,0xFC,0x00,0x3C,0x0D,0xFD,0x3D,
+0xDD,0x20,0xFC,0x80,0xDD,0x9E,0x46,0x20,0x00,0x81,0x84,0x3E,0x04,0x31,0x00,0x14,
+0x96,0x06,0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x14,0xDD,0x9E,0x44,0x14,0x70,0x08,
+0x5A,0x08,0x01,0x09,0xB4,0x01,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,0x78,0x23,
+0xD5,0x05,0xB4,0x01,0x92,0x10,0x40,0x00,0x40,0x08,0xB6,0x01,0xDD,0x9E,0x44,0x14,
+0x00,0x0C,0xAE,0x09,0xDD,0x9E,0x44,0x05,0x10,0x00,0xB4,0x00,0x92,0x08,0x96,0x17,
+0xDD,0x9E,0x44,0x25,0x10,0x00,0x96,0x17,0xB4,0x62,0x40,0x10,0x20,0x08,0x44,0x0F,
+0xF8,0xFF,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x44,0x24,0x80,0x84,0x96,0x06,
+0xB4,0x62,0x40,0x10,0x20,0x08,0x44,0x0F,0xFE,0xFF,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,
+0xDD,0x9E,0x44,0x25,0x10,0x00,0x84,0x3E,0xB4,0x62,0x96,0x06,0xFE,0x5E,0xFE,0x0F,
+0xB6,0x02,0xDD,0x9E,0x84,0x00,0x3E,0x07,0xF4,0xFA,0xDD,0x9E,0xFC,0x00,0x49,0x00,
+0x09,0x1E,0x5A,0x08,0x01,0x04,0x84,0x02,0xD5,0x02,0x84,0x04,0x3E,0x07,0xE2,0xD7,
+0x2E,0x07,0xE2,0xD7,0x49,0xFF,0xCB,0x34,0x84,0x04,0xFC,0x80,0xFC,0x00,0x3C,0x0D,
+0xFB,0xD6,0x54,0x00,0x10,0x00,0xC0,0x08,0x2E,0x07,0xEF,0xA8,0x5A,0x00,0x01,0x1D,
+0x2E,0x07,0xE2,0xD7,0xD5,0x0D,0x3C,0xF7,0xF7,0x92,0x2E,0x07,0xE2,0xD7,0x5E,0xF7,
+0x80,0x64,0xE8,0x0C,0x3C,0xF7,0xF7,0x8E,0x5E,0xF7,0xFF,0x9D,0xE9,0x07,0xE4,0x03,
+0xE8,0x03,0x8C,0x01,0xD5,0x06,0x84,0x04,0xD5,0x07,0xE4,0x03,0xE9,0x04,0x8E,0x01,
+0x96,0x00,0xD5,0x02,0x84,0x02,0x3E,0x07,0xE2,0xD7,0x2E,0x07,0xE2,0xD7,0x49,0xFF,
+0xCB,0x07,0x2E,0x07,0xE2,0xD7,0x5A,0x08,0x04,0x04,0x84,0x02,0xFC,0x80,0x84,0x04,
+0xFC,0x80,0x2E,0x17,0xF4,0xFA,0x8C,0x21,0x96,0x48,0xE2,0x20,0x3E,0x17,0xF4,0xFA,
+0x56,0x07,0x80,0x01,0xDD,0x9E,0xFC,0x42,0x81,0x40,0xC1,0x05,0x84,0xE8,0x5A,0x18,
+0x01,0x07,0xD5,0x03,0x44,0x70,0x00,0x64,0x84,0xC1,0xD5,0x03,0x84,0xE1,0x84,0xC0,
+0x49,0x00,0x1C,0x73,0x81,0x20,0x4E,0xA3,0x00,0x11,0x49,0xFF,0xC9,0x7B,0xF0,0x81,
+0x49,0x00,0x1B,0x22,0xF0,0x82,0xF1,0x01,0x44,0x00,0x02,0x40,0xF2,0x02,0x80,0x66,
+0x80,0x87,0x49,0x00,0x03,0x6F,0xFC,0xC2,0x5A,0xA8,0x01,0x1E,0x49,0x00,0x1B,0x17,
+0xF0,0x82,0x4E,0x93,0x00,0x05,0x49,0x00,0x1C,0xD4,0xD5,0x03,0x49,0x00,0x1C,0xCE,
+0xF0,0x81,0x80,0x09,0x49,0xFF,0xFC,0x1D,0xF0,0x83,0x44,0x10,0x00,0x42,0xF0,0x02,
+0xF2,0x01,0xF3,0x03,0xFD,0x23,0x49,0x00,0x03,0x68,0xF0,0x01,0x44,0x10,0x00,0x42,
+0x49,0xFF,0xC5,0x3D,0xFC,0xC2,0xFC,0x20,0x51,0xFF,0xFB,0x80,0x44,0x10,0x00,0xC0,
+0x84,0x40,0x80,0xE0,0x50,0x0F,0x81,0x80,0x49,0x00,0x02,0xC8,0x80,0x1F,0x44,0x10,
+0x00,0xC0,0x49,0x00,0x02,0xD2,0x84,0xC0,0x49,0xFF,0xCD,0x25,0xE6,0x03,0x50,0x0F,
+0x81,0x80,0xE8,0x10,0x38,0x00,0x1A,0x02,0x90,0x08,0x96,0x43,0x38,0x0F,0x99,0x11,
+0x50,0x00,0x7F,0xC0,0x94,0x05,0x9A,0x08,0x40,0x00,0x20,0x08,0x38,0x03,0x9A,0x0A,
+0xD5,0x0C,0x38,0x10,0x1A,0x02,0x38,0x0F,0x99,0x11,0x90,0x28,0x96,0x4B,0x8A,0x20,
+0x40,0x10,0xA0,0x08,0x38,0x13,0x9A,0x0A,0x8C,0xC1,0x5A,0x68,0xC0,0xDF,0x80,0x07,
+0x80,0x26,0x84,0x40,0x44,0x30,0x02,0x52,0x49,0x00,0x03,0x00,0x51,0xFF,0x84,0x80,
+0xFC,0xA0,0xFC,0x21,0x80,0xC0,0x2E,0x0F,0xF4,0xF9,0xC8,0x19,0x2E,0x1F,0xF4,0xF8,
+0xC9,0x16,0xCE,0x42,0x49,0xFF,0xF9,0x16,0x49,0xFF,0xFB,0xC3,0x80,0xE0,0x49,0x00,
+0x1B,0xF4,0x49,0xFF,0xC8,0xFF,0x80,0x26,0x38,0x23,0x85,0x11,0x40,0x21,0x20,0x08,
+0x38,0x20,0x06,0x0A,0x8C,0x21,0x5A,0x1A,0x40,0xF9,0xD5,0x2E,0x2E,0x17,0xEF,0x18,
+0xE0,0x20,0xE9,0x2A,0x2E,0xFF,0xF4,0xF8,0x2E,0x17,0xEF,0x17,0xE0,0x2F,0xE9,0x24,
+0xCE,0x23,0x49,0x00,0x1A,0x8E,0xF0,0x81,0x49,0xFF,0xCC,0xCD,0xE6,0x03,0xE9,0x04,
+0xF0,0x01,0x49,0xFF,0xCE,0x66,0x3C,0x14,0x05,0xAF,0xF5,0x01,0x84,0x03,0xFE,0x44,
+0x50,0x22,0x84,0x80,0xD5,0x33,0x8C,0x01,0x5A,0x00,0x12,0x2E,0x38,0xF2,0x81,0x11,
+0xE0,0x2F,0xE8,0xFA,0x84,0x00,0x3E,0x07,0xF4,0xF8,0x49,0x00,0x1A,0x61,0x84,0x00,
+0x84,0x21,0x49,0xFF,0xFF,0x3A,0x2E,0x1F,0xF4,0xF9,0x2E,0x07,0xEF,0x18,0xE0,0x01,
+0xE9,0x07,0x2E,0x0F,0xF4,0xF8,0x2E,0x27,0xEF,0x17,0xE0,0x40,0xE8,0x0A,0x5A,0x68,
+0x01,0x11,0x84,0x00,0x3E,0x07,0xF4,0xF9,0x3E,0x07,0xF4,0xF8,0x80,0x06,0xD5,0x10,
+0x5A,0x68,0x01,0x08,0x8C,0x21,0x8C,0x01,0x3E,0x17,0xF4,0xF9,0x3E,0x07,0xF4,0xF8,
+0x84,0x00,0xD5,0x06,0x50,0x52,0x80,0x24,0xD2,0xD9,0x84,0x00,0xD5,0xD0,0xFC,0xA1,
+0x44,0x04,0x00,0x54,0x46,0x1C,0x9A,0xE7,0xB4,0xA0,0x50,0x10,0x83,0xDB,0xD1,0x27,
+0x46,0x18,0x88,0x88,0x50,0x10,0x88,0x88,0xD9,0x08,0x44,0x15,0x10,0x10,0xB4,0x21,
+0x40,0x10,0xA0,0x08,0xC1,0x1C,0xD5,0x06,0x46,0x1F,0x38,0xA9,0x50,0x10,0x84,0xEF,
+0xD9,0x0D,0x46,0x14,0xE1,0xD5,0x50,0x10,0x8C,0x63,0xB6,0x20,0x2E,0x07,0xF4,0xFB,
+0x58,0x00,0x00,0x01,0x3E,0x07,0xF4,0xFB,0xDD,0x9E,0x46,0x1A,0x67,0xC9,0x50,0x10,
+0x8D,0xFE,0xD9,0x05,0x46,0x1B,0xEE,0xFF,0x8C,0x2D,0xB6,0x20,0xDD,0x9E,0x4E,0x05,
+0x00,0x19,0x8E,0x01,0x40,0x10,0x04,0x0A,0xFE,0x0F,0x40,0x10,0x08,0x0A,0xFE,0x0F,
+0x40,0x10,0x10,0x0A,0xFE,0x0F,0x40,0x10,0x20,0x0A,0xFE,0x0F,0x40,0x10,0x40,0x0A,
+0xFE,0x47,0x8C,0x21,0x84,0x00,0x90,0x21,0xC1,0x03,0x8C,0x01,0xD5,0xFD,0xDD,0x9E,
+0x84,0x00,0xDD,0x9E,0xFC,0x4D,0x44,0x02,0x00,0xD4,0x50,0xFF,0x80,0x18,0x80,0xC0,
+0x80,0x2F,0x3A,0x23,0x14,0x04,0x3A,0x20,0x94,0x24,0x81,0x46,0x83,0x81,0x3A,0x25,
+0x14,0x04,0x44,0x92,0x00,0xFC,0x3A,0x2E,0x14,0x24,0x80,0x89,0x3A,0x25,0x0C,0x00,
+0x80,0xBF,0x3A,0x2E,0x0C,0x20,0x3A,0x22,0x0C,0x04,0x3A,0x22,0x8C,0x24,0x45,0xE2,
+0x16,0xF8,0xA5,0xE0,0x3A,0x27,0x94,0x04,0x81,0xFE,0x81,0x1F,0x3A,0x27,0x94,0x24,
+0x3A,0x20,0x94,0x04,0x80,0x2F,0x3A,0x20,0x94,0x24,0x3A,0x2E,0x0C,0x00,0x3A,0x20,
+0x8C,0x20,0x44,0x12,0x16,0xEC,0x3A,0x24,0x0C,0x04,0x3A,0x20,0x8C,0x24,0xAD,0xC8,
+0xB0,0x50,0x3A,0x20,0x14,0x04,0x80,0x01,0x3A,0x20,0x14,0x24,0x81,0x00,0x3A,0x23,
+0x14,0x04,0x3A,0x24,0x14,0x24,0xB1,0x83,0x3A,0x25,0x0C,0x00,0x80,0x86,0x3A,0x24,
+0x0C,0x20,0x3A,0x24,0x8C,0x04,0x44,0x92,0x04,0xD4,0x3A,0x22,0x0C,0x24,0x3A,0x20,
+0x94,0x04,0x80,0x29,0x3A,0x20,0x94,0x24,0x3A,0x20,0x14,0x04,0x80,0x01,0x3A,0x20,
+0x14,0x24,0x3A,0x24,0x0C,0x00,0x3A,0x20,0x0C,0x20,0x44,0x02,0x04,0xC8,0x3A,0x23,
+0x0C,0x04,0x3A,0x20,0x0C,0x24,0xAD,0xC0,0xFC,0xCD,0xFC,0x48,0x83,0x81,0x50,0xAF,
+0x80,0x14,0x44,0x12,0x01,0x08,0x80,0xC0,0x80,0x0A,0x81,0x22,0x3A,0x20,0x8C,0x04,
+0x3A,0x20,0x0C,0x24,0xA4,0x48,0xFA,0x40,0xAC,0x40,0x50,0x8F,0x80,0x30,0x84,0x20,
+0xB0,0x08,0x49,0x00,0x27,0xC1,0x80,0x08,0x84,0x20,0xFA,0x40,0x49,0x00,0x27,0xBC,
+0x5A,0x98,0x01,0x03,0x87,0x80,0xC6,0x04,0x44,0x12,0x17,0x9C,0xD5,0x03,0x44,0x12,
+0x17,0xA8,0x58,0x04,0x80,0x01,0x8C,0x01,0x84,0xE0,0xB6,0x1F,0x8D,0x21,0x84,0x83,
+0x84,0x61,0x38,0x05,0x1C,0x00,0xF3,0x83,0xF4,0x82,0x38,0x60,0x80,0x00,0xB4,0x1F,
+0x8C,0xC1,0xFF,0x84,0x97,0xB1,0x40,0x63,0x24,0xD6,0x80,0x06,0xF1,0x81,0x49,0xFF,
+0xFF,0x48,0xF4,0x02,0x97,0x78,0x40,0x52,0x90,0xB7,0xF3,0x03,0x38,0x24,0x16,0x02,
+0x8C,0x08,0x41,0xE1,0x28,0x08,0x40,0x20,0x70,0x01,0x40,0x01,0x80,0x0C,0x40,0x60,
+0x18,0xD7,0xB0,0x08,0x94,0x94,0x38,0x00,0x16,0x02,0x88,0x5E,0x40,0x00,0x28,0x08,
+0x88,0xC0,0xB0,0x08,0x8C,0xE1,0x38,0x24,0x16,0x0A,0x38,0x60,0x16,0x0A,0xF1,0x01,
+0x5A,0x78,0x0A,0xD1,0x80,0x28,0x49,0xFF,0xC0,0x52,0xFC,0xC8,0x80,0x80,0x84,0x40,
+0x9A,0xE0,0x96,0xD8,0xE2,0x61,0xE8,0x08,0x08,0x32,0x00,0x01,0xE2,0x62,0x40,0x31,
+0x3C,0x1B,0x80,0x43,0xD5,0xF6,0x9C,0x11,0x96,0x00,0xDD,0x9E,0xFC,0x40,0x51,0xFF,
+0xFB,0xE0,0x44,0x20,0x04,0x00,0x81,0x40,0x81,0x21,0xB0,0x08,0x84,0x20,0x49,0x00,
+0x27,0x5B,0xB1,0x81,0x44,0x12,0x01,0x08,0x80,0x06,0x3A,0x20,0x8C,0x04,0x3A,0x20,
+0x0C,0x24,0xA4,0x48,0xB1,0xC4,0xAC,0x40,0xFA,0x40,0x84,0x20,0x80,0x07,0x49,0x00,
+0x27,0x4B,0x84,0x2A,0x4E,0xA3,0x00,0x3D,0x44,0x02,0x17,0xA8,0x49,0xFF,0xFF,0xD0,
+0x80,0x20,0x80,0x4A,0x84,0xA3,0x44,0xA2,0x16,0xF8,0x45,0xE2,0x16,0xEC,0x96,0x10,
+0x40,0x00,0x14,0x17,0x40,0x30,0x20,0x08,0xB1,0x08,0x41,0xC2,0x0C,0x00,0x84,0x60,
+0x54,0x81,0x80,0xFF,0xE3,0x01,0xE8,0x12,0x38,0x83,0x08,0x00,0x38,0x85,0x22,0x02,
+0x38,0x84,0x0D,0x01,0x54,0xF4,0x03,0xFF,0x38,0x8E,0x0E,0x02,0x40,0x84,0x28,0x08,
+0x89,0x0F,0x38,0x8E,0x0E,0x0A,0x8C,0x61,0xD5,0xEC,0x38,0x33,0x08,0x00,0x8C,0x41,
+0x38,0x3F,0x0C,0x00,0x8A,0x69,0x54,0x81,0x83,0xFF,0x38,0x33,0x82,0x02,0x40,0x31,
+0xA8,0x08,0x88,0x68,0x38,0x33,0x82,0x0A,0x5A,0x28,0x0A,0xD3,0xD5,0x3B,0x44,0x02,
+0x17,0x9C,0x49,0xFF,0xFF,0x95,0x80,0x20,0x84,0x40,0x84,0xA3,0x44,0xA2,0x04,0xD4,
+0x45,0xE2,0x04,0xC8,0x97,0x10,0x40,0x42,0x14,0x97,0x40,0x32,0x20,0x08,0xB0,0x08,
+0x41,0xC0,0x0C,0x00,0x84,0x60,0x54,0x81,0x80,0xFF,0xE3,0x01,0xE8,0x12,0x38,0x83,
+0x08,0x00,0x38,0x85,0x22,0x02,0x38,0x84,0x0D,0x01,0x54,0xF4,0x03,0xFF,0x38,0x8E,
+0x0E,0x02,0x40,0x84,0x28,0x08,0x89,0x0F,0x38,0x8E,0x0E,0x0A,0x8C,0x61,0xD5,0xEC,
+0x38,0x33,0x08,0x00,0x8C,0x41,0x38,0x3F,0x0C,0x00,0x8A,0x69,0x54,0x81,0x83,0xFF,
+0x38,0x33,0x92,0x02,0x40,0x31,0xA8,0x08,0x88,0x68,0x38,0x33,0x92,0x0A,0x5A,0x28,
+0x0A,0xD3,0xB0,0x08,0x49,0xFF,0xBF,0xFA,0x80,0x07,0x49,0xFF,0xC0,0x30,0x51,0xFF,
+0x84,0x20,0xFC,0xC0,0xFC,0x00,0x49,0x00,0x18,0x8C,0x50,0x30,0x04,0x80,0x50,0x50,
+0x00,0x22,0x50,0x20,0x00,0x10,0x80,0x20,0x22,0x40,0x80,0x00,0x22,0x62,0x80,0x00,
+0x1A,0x60,0x80,0x01,0x1A,0x42,0xFF,0xFF,0xDA,0xF8,0x50,0x00,0x00,0x24,0x4C,0x01,
+0xFF,0xF0,0xFC,0x80,0xFC,0x00,0x49,0x00,0x18,0x74,0x50,0x20,0x04,0x5C,0x50,0x40,
+0x02,0x40,0x50,0x30,0x00,0x24,0x80,0x22,0x22,0x60,0x80,0x00,0x22,0x50,0x00,0x00,
+0x1A,0x60,0x00,0x01,0x1A,0x50,0x80,0x01,0x4C,0x01,0xFF,0xF8,0x50,0x21,0x7F,0xDC,
+0x4C,0x02,0x7F,0xF1,0xFC,0x80,0xFC,0x41,0x80,0xE0,0x80,0x02,0xF3,0x81,0x81,0x44,
+0x80,0xC5,0x81,0x21,0x49,0xFF,0xF9,0x6D,0x81,0x00,0xF0,0x01,0x49,0xFF,0xC6,0xAA,
+0x40,0x44,0x28,0x00,0x95,0x72,0x84,0x60,0x84,0x20,0x98,0x99,0x96,0x91,0xC7,0x0B,
+0x95,0x92,0x88,0xC5,0x38,0xA2,0x09,0x01,0x38,0x60,0x18,0x02,0x90,0xC8,0x8A,0xCA,
+0x38,0x63,0x89,0x09,0x4E,0x92,0x00,0x06,0x38,0x62,0x09,0x11,0x38,0x64,0x89,0x09,
+0x8C,0x21,0x5A,0x18,0x12,0xEC,0x8C,0x72,0x96,0xD9,0x5A,0x3A,0x40,0xE7,0x49,0xFF,
+0xFF,0xA3,0x49,0xFF,0xFF,0xB9,0xFC,0xC1,0xFC,0x00,0x80,0x43,0x80,0x64,0x84,0x80,
+0x80,0xA4,0x49,0xFF,0xFF,0xCA,0xFC,0x80,0xFC,0x20,0xFD,0x30,0x80,0x02,0x49,0xFF,
+0xC6,0x79,0x95,0xFA,0x80,0xA6,0x88,0xE6,0x50,0x00,0x09,0x48,0xD7,0x04,0xA2,0x41,
+0xAA,0x69,0xD5,0xFD,0xFC,0xA0,0xFC,0x20,0xFD,0x30,0x84,0x00,0x49,0xFF,0xF9,0x29,
+0x95,0xF9,0x80,0xA6,0x88,0xE6,0x50,0x00,0x04,0xA4,0xD7,0x06,0x2A,0x10,0x00,0x01,
+0x1A,0x12,0x80,0x01,0xD5,0xFB,0xFC,0xA0,0xFC,0x20,0x80,0xE0,0x80,0x02,0x80,0xC1,
+0x49,0xFF,0xC6,0x58,0x84,0x40,0x96,0x51,0xE2,0x26,0xE8,0x07,0x38,0x10,0x0A,0x02,
+0x38,0x13,0x8A,0x0A,0x8C,0x41,0xD5,0xF8,0xFC,0xA0,0xFC,0x40,0x80,0xC0,0x80,0x02,
+0x81,0x23,0x80,0xE1,0x49,0xFF,0xF9,0x05,0x81,0x40,0x84,0x6C,0x5A,0x98,0x02,0x07,
+0x49,0x00,0x19,0x30,0x84,0x63,0xC0,0x02,0x80,0x69,0x80,0x0A,0x40,0x91,0x84,0x08,
+0x84,0x20,0x40,0xA1,0x80,0x13,0x96,0x89,0xE2,0x47,0xE8,0x1E,0x84,0xA0,0x80,0x85,
+0x40,0x82,0x80,0x13,0xE3,0x0A,0xE8,0x06,0x38,0x80,0x15,0x11,0x8C,0xA1,0x88,0x88,
+0xD5,0xF8,0x5C,0xF1,0x00,0x40,0x40,0x42,0x0C,0x96,0xE8,0x09,0x54,0x51,0x00,0x01,
+0x95,0x6D,0x92,0x41,0x88,0x45,0x38,0x43,0x09,0x09,0xD5,0x03,0x38,0x43,0x05,0x09,
+0x8C,0x21,0x88,0x09,0xD5,0xE1,0xFC,0xC0,0xFC,0x40,0x81,0x20,0x95,0x9A,0x80,0x02,
+0x80,0xE1,0x97,0xB1,0x49,0xFF,0xC6,0x0E,0x88,0xC0,0x84,0x40,0x96,0x51,0xE2,0x27,
+0xE8,0x07,0x38,0x04,0x8A,0x02,0x38,0x03,0x0A,0x0A,0x8C,0x41,0xD5,0xF8,0xFC,0xC0,
+0xFC,0x00,0x94,0x02,0x88,0x01,0x4C,0x10,0x00,0x0F,0xB4,0xC1,0x2A,0x51,0x00,0x01,
+0x40,0x52,0xA0,0x08,0x8A,0xA6,0xFF,0xA4,0x42,0x61,0x94,0x73,0x40,0x63,0x10,0xD6,
+0xAB,0x89,0xD5,0xF2,0xFC,0x80,0xFC,0x40,0x84,0xE0,0x97,0xB9,0xE2,0xC1,0xE8,0x12,
+0x38,0x91,0x9E,0x02,0xB4,0xC0,0x40,0x94,0xA0,0x08,0x8B,0x26,0xFF,0xAC,0x42,0x62,
+0x24,0x73,0x40,0x63,0x14,0xD6,0xAB,0x81,0x90,0xC8,0x38,0x61,0x1D,0x09,0x8C,0xE1,
+0xD5,0xED,0xFC,0xC0,0x2E,0x07,0xF6,0x23,0xDD,0x9E,0xFC,0x01,0x84,0x1F,0xB6,0x1F,
+0xF0,0x81,0x80,0x1F,0x49,0xFF,0xC1,0xB2,0x84,0x01,0x49,0xFF,0xC1,0xA4,0x84,0x01,
+0x49,0xFF,0xC2,0x1A,0x84,0x22,0x84,0x01,0x80,0x61,0x80,0xA0,0x44,0x40,0x00,0x3F,
+0x84,0x44,0x49,0xFF,0xC1,0x1D,0x84,0x01,0x49,0xFF,0xF7,0xE7,0x84,0x01,0x80,0x20,
+0x80,0x40,0x49,0xFF,0xC1,0x5A,0x84,0x0A,0x49,0xFF,0xC1,0x82,0x46,0x00,0x42,0x10,
+0x50,0x00,0x08,0x20,0x80,0x20,0x84,0x40,0x49,0xFF,0xC1,0x6D,0x49,0xFF,0xC3,0xD0,
+0x84,0x01,0x49,0xFF,0xC3,0xBF,0x84,0x00,0x49,0xFF,0xF8,0x3E,0x44,0x04,0x55,0x08,
+0x44,0x1F,0xFF,0x7F,0xB4,0x40,0xFE,0x56,0xB6,0x20,0xB4,0x20,0x58,0x10,0x80,0x10,
+0xB6,0x20,0x84,0x21,0x49,0xFF,0xC0,0x7B,0x84,0x06,0x3E,0x07,0xF6,0x23,0xFC,0x81,
+0xFC,0x54,0x44,0x02,0x01,0x20,0x50,0xAF,0x80,0x10,0x80,0x20,0x80,0x8A,0x3A,0x20,
+0x8C,0x04,0x3A,0x22,0x0C,0x24,0x50,0x9F,0x80,0x1C,0xA4,0x48,0x3A,0x20,0x0C,0x04,
+0x80,0x09,0xF1,0x81,0x3A,0x20,0x0C,0x24,0x44,0x12,0x01,0x2C,0xB0,0x0A,0x80,0xC0,
+0x3A,0x20,0x94,0x04,0x3A,0x23,0x14,0x24,0xB4,0x21,0xB1,0x94,0xF1,0x83,0x44,0x12,
+0x01,0x40,0x81,0xE1,0xF1,0x82,0x3A,0x27,0x94,0x04,0x3A,0x23,0x14,0x24,0x81,0x0F,
+0x83,0xC6,0x3A,0x24,0x14,0x04,0x3A,0x2F,0x14,0x24,0x83,0x86,0xB1,0xCF,0x44,0x62,
+0x01,0x68,0x3A,0x24,0x0C,0x00,0x80,0x27,0x3A,0x2F,0x0C,0x20,0x3A,0x23,0x14,0x04,
+0x3A,0x20,0x94,0x24,0xB4,0x46,0x50,0x14,0x7F,0xE0,0xB1,0x9E,0xF2,0x82,0x3A,0x20,
+0x94,0x04,0x80,0x26,0x3A,0x20,0x94,0x24,0x3A,0x27,0x94,0x04,0x81,0xE1,0x3A,0x27,
+0x94,0x24,0x3A,0x24,0x0C,0x00,0x3A,0x27,0x8C,0x20,0x44,0x82,0x17,0x4C,0x3A,0x23,
+0x94,0x04,0x3A,0x24,0x14,0x24,0xF3,0x02,0x44,0x72,0x17,0x24,0xB6,0x68,0x3A,0x23,
+0x14,0x04,0x80,0xC7,0x3A,0x23,0x14,0x24,0x3A,0x20,0x94,0x04,0x80,0x26,0x44,0x62,
+0x17,0x60,0x3A,0x20,0x94,0x24,0x3A,0x27,0x8C,0x00,0x3A,0x20,0x8C,0x20,0x44,0x12,
+0x17,0xA8,0x3A,0x25,0x0C,0x04,0x3A,0x20,0x8C,0x24,0x80,0x41,0x02,0x1F,0x80,0x02,
+0xAC,0x50,0x44,0x12,0x17,0x9C,0x3A,0x24,0x8C,0x04,0x3A,0x20,0x8C,0x24,0x80,0x41,
+0x02,0x1F,0x80,0x02,0xAC,0x50,0x44,0x12,0x17,0x88,0x3A,0x20,0x14,0x04,0x80,0x01,
+0xF1,0x03,0x3A,0x20,0x14,0x24,0xB6,0x20,0xB0,0x14,0x80,0x26,0x3A,0x20,0x14,0x04,
+0x3A,0x20,0x94,0x24,0x80,0x01,0x3A,0x2E,0x14,0x04,0x3A,0x20,0x14,0x24,0x3A,0x2F,
+0x0C,0x00,0x3A,0x20,0x0C,0x20,0xFC,0xD4,0xFC,0x00,0x49,0xFF,0xC0,0x40,0xFC,0x80,
+0xFC,0x00,0xC8,0x06,0x44,0x02,0x17,0x60,0x44,0x12,0x17,0x88,0xD5,0x05,0x44,0x02,
+0x17,0x24,0x44,0x12,0x17,0x4C,0x49,0xFF,0xC1,0x2C,0xFC,0x80,0xFC,0x00,0x49,0x00,
+0x16,0x9C,0x80,0xC0,0x49,0x00,0x07,0xB8,0xC0,0x74,0x2E,0x07,0xF6,0x23,0xAC,0x30,
+0x49,0x00,0x17,0xD0,0x2E,0x17,0xF6,0x23,0xC8,0x04,0x44,0x02,0x17,0x60,0xD5,0x03,
+0x44,0x02,0x17,0x24,0x38,0x00,0x05,0x11,0x46,0x10,0x00,0x81,0xAC,0x31,0x3C,0x03,
+0xFA,0x99,0x44,0x32,0x17,0xB8,0xAC,0x32,0x3C,0x03,0xFA,0xE3,0xAC,0x33,0x2E,0x07,
+0xF6,0x1B,0x50,0x00,0x00,0x64,0xAC,0x34,0x2E,0x07,0xF6,0x1A,0x50,0x00,0x00,0xC8,
+0xAC,0x35,0x2E,0x07,0xF6,0x19,0x50,0x00,0x01,0x2C,0xAC,0x36,0x3C,0x0D,0xF8,0xEB,
+0xAC,0x37,0x83,0x81,0xB8,0x20,0x54,0x00,0x07,0xFF,0x12,0x03,0x00,0x08,0xB8,0x23,
+0x50,0x13,0x00,0x16,0x96,0x1F,0x12,0x03,0x00,0x09,0x44,0x0F,0xFF,0x9C,0x12,0x03,
+0x00,0x0A,0x84,0x00,0x38,0x21,0x82,0x02,0x8C,0x01,0x1A,0x20,0x80,0x01,0x5A,0x08,
+0x14,0xFB,0x3C,0x03,0xF7,0xBC,0x12,0x03,0x00,0x0B,0x3C,0x03,0xF7,0xBD,0x12,0x03,
+0x00,0x0C,0x3C,0x03,0xF7,0xBE,0x12,0x03,0x00,0x0D,0x3C,0x03,0xF9,0xF5,0x12,0x03,
+0x00,0x21,0x3C,0x03,0xF9,0xF4,0x12,0x03,0x00,0x22,0x44,0x00,0x03,0x78,0x12,0x03,
+0x00,0x23,0x2E,0x07,0xF6,0x1D,0x12,0x03,0x00,0x24,0x2E,0x07,0xE2,0xCC,0x12,0x03,
+0x00,0x25,0x2E,0x07,0xF5,0xC5,0x12,0x03,0x00,0x26,0x49,0x00,0x17,0x6B,0x12,0x03,
+0x00,0x27,0x84,0x00,0x12,0x03,0x00,0x28,0x12,0x03,0x00,0x29,0x12,0x03,0x00,0x2A,
+0xFC,0x80,0xFC,0x00,0x49,0xFF,0xC0,0x0B,0x49,0xFF,0xF6,0xA3,0x84,0x00,0xFC,0x80,
+0x84,0x00,0x3E,0x07,0xF5,0xC5,0x3E,0x07,0xF5,0xC4,0xDD,0x9E,0xFC,0x00,0x80,0x41,
+0x84,0x20,0x5A,0x08,0x01,0x03,0x84,0x24,0xCA,0x04,0x44,0x02,0x17,0xA8,0xD5,0x03,
+0x44,0x02,0x17,0x9C,0x49,0xFF,0xC2,0xD1,0xFC,0x80,0xFC,0x00,0x80,0xC0,0x5A,0x08,
+0x01,0x0B,0x84,0x02,0x49,0xFF,0xC2,0x4D,0x80,0x06,0x84,0x20,0x49,0xFF,0xC2,0x7A,
+0x80,0x06,0xD5,0x09,0x84,0x00,0x49,0xFF,0xC2,0x44,0x84,0x00,0x80,0x20,0x49,0xFF,
+0xC2,0x71,0x84,0x00,0x49,0xFF,0xC2,0xA3,0xFC,0x80,0xFC,0x01,0xB6,0x1F,0xF1,0x81,
+0x49,0xFF,0xFF,0xE5,0xB4,0x1F,0xF1,0x01,0x49,0xFF,0xFF,0xD2,0xFC,0x81,0xFC,0x23,
+0x80,0xE0,0xC8,0x04,0x84,0xA4,0x84,0x23,0xD5,0x03,0x84,0xA6,0x84,0x22,0x84,0x40,
+0x8E,0xA1,0x80,0x62,0x80,0x82,0x84,0x02,0x97,0x68,0x49,0xFF,0xF6,0x89,0x44,0x22,
+0x01,0x7C,0x80,0xC2,0x80,0x3F,0x3A,0x23,0x14,0x04,0x3A,0x20,0x94,0x24,0x3A,0x23,
+0x0C,0x00,0x3A,0x20,0x8C,0x20,0x80,0x1F,0x49,0xFF,0xC0,0xF4,0x84,0x00,0x49,0xFF,
+0xC4,0x34,0x84,0x0C,0x49,0xFF,0xC4,0x5C,0xE6,0xE2,0xE8,0x05,0x84,0x01,0x80,0x27,
+0x49,0xFF,0xFF,0xCD,0xFC,0xA3,0xFC,0x00,0x84,0x46,0xC8,0x02,0x84,0x44,0x84,0x20,
+0x3E,0x17,0xF6,0x1D,0x50,0x11,0x00,0x13,0x40,0x10,0x88,0x36,0x3E,0x17,0xF6,0x1E,
+0x49,0xFF,0xFF,0xC7,0x84,0x02,0x49,0x00,0x15,0x0E,0xFC,0x80,0xFC,0x49,0x80,0xE0,
+0x44,0x02,0x00,0x01,0xF0,0x86,0x44,0x01,0x00,0x02,0xF0,0x87,0x44,0x00,0x80,0x04,
+0xF0,0x88,0x44,0x00,0x40,0x08,0xF0,0x89,0x44,0x00,0x20,0x10,0xF0,0x8A,0x44,0x00,
+0x10,0x20,0xF0,0x8B,0x44,0x00,0x08,0x40,0xF0,0x8C,0x44,0x00,0x04,0x80,0xF0,0x8D,
+0x44,0x00,0x03,0x00,0xF0,0x8E,0x3C,0x0D,0xF8,0xEA,0xF0,0x8F,0xF0,0x90,0xF0,0x91,
+0xC7,0x08,0x44,0x92,0x17,0x4C,0x44,0xA2,0x17,0x24,0x85,0x02,0x87,0x85,0xD5,0x07,
+0x85,0x03,0x44,0x92,0x17,0x88,0x44,0xA2,0x17,0x60,0x83,0x88,0xB0,0x06,0x49,0xFF,
+0xC0,0x6B,0x80,0xDF,0xCF,0x11,0x44,0x02,0x01,0x94,0x80,0x3F,0x3A,0x20,0x14,0x04,
+0x3A,0x20,0x94,0x24,0x3A,0x20,0x0C,0x00,0x3A,0x20,0x8C,0x20,0x80,0x1F,0x49,0xFF,
+0xC0,0x91,0x80,0x07,0xD5,0x10,0x44,0x02,0x01,0xAC,0x80,0x3F,0x3A,0x20,0x14,0x04,
+0x3A,0x20,0x94,0x24,0x3A,0x20,0x0C,0x00,0x3A,0x20,0x8C,0x20,0x80,0x1F,0x49,0xFF,
+0xC0,0x81,0x84,0x01,0x49,0x00,0x15,0x7B,0x2E,0x47,0xF6,0x23,0x84,0x00,0x80,0x4A,
+0x80,0x69,0x80,0xA4,0x80,0x20,0x49,0xFF,0xF5,0xFB,0x2E,0x17,0xF6,0x23,0x84,0x00,
+0x38,0x15,0x05,0x01,0x49,0xFF,0xC1,0x14,0x2E,0x17,0xF6,0x23,0x84,0x05,0x38,0x15,
+0x05,0x01,0x49,0xFF,0xC1,0x0D,0x2E,0x07,0xF6,0x23,0x84,0x20,0x38,0x04,0x80,0x00,
+0x49,0xFF,0xC2,0x09,0x2E,0x07,0xF6,0x23,0x84,0x23,0x38,0x04,0x80,0x00,0x49,0xFF,
+0xC2,0x02,0x44,0x00,0x02,0x40,0x49,0xFF,0xC3,0x98,0x80,0x08,0x49,0xFF,0xC3,0xC0,
+0xE6,0xE2,0xE8,0x07,0x2E,0x07,0xF6,0x23,0x40,0xFE,0x00,0x06,0x84,0x01,0xE8,0x02,
+0x84,0x00,0x80,0x27,0x49,0xFF,0xFF,0x2B,0xFC,0xC9,0xFC,0x00,0x2E,0x17,0xEF,0x92,
+0x2E,0x07,0xEF,0x93,0xE6,0x23,0xE8,0x03,0x84,0x20,0xD5,0x06,0xE6,0x3D,0xE9,0x03,
+0xFA,0x2B,0xD5,0x02,0x8E,0x22,0x3E,0x17,0xF6,0x18,0xE6,0x09,0x84,0x29,0x40,0x10,
+0x04,0x17,0xE9,0x03,0x52,0x00,0x00,0x08,0x96,0x00,0xC0,0x0E,0x5A,0x00,0x08,0x11,
+0x5A,0x00,0x01,0x07,0x9E,0x42,0x96,0x48,0x5A,0x00,0x07,0x0F,0xD5,0x02,0x84,0x20,
+0x9C,0xC2,0x96,0xD8,0xD5,0x0B,0x84,0x62,0x84,0x01,0x84,0x20,0xD5,0x07,0x80,0x60,
+0x84,0x26,0x84,0x07,0xD5,0x03,0x84,0x68,0x84,0x25,0x84,0x41,0x40,0x51,0x00,0x0C,
+0x40,0x41,0x04,0x0C,0xFF,0x2F,0x52,0x10,0x80,0x11,0x40,0x51,0x0C,0x0C,0xFF,0x2F,
+0x40,0x11,0x04,0x0C,0x52,0x00,0x00,0x11,0xFE,0x67,0x40,0x01,0x00,0x0C,0xFE,0x0F,
+0x52,0x11,0x80,0x11,0x40,0x11,0x04,0x0C,0xFE,0x0F,0x2E,0x17,0xF6,0x18,0x3C,0x0F,
+0xF8,0xEA,0xFA,0x0F,0x40,0x00,0x04,0x0C,0x80,0x20,0x84,0x40,0x49,0xFF,0xBE,0xD3,
+0xFC,0x80,0xFC,0x49,0xC1,0x07,0x44,0x92,0x17,0x24,0x85,0x42,0x44,0x72,0x17,0x4C,
+0xD5,0x06,0x44,0x92,0x17,0x60,0x85,0x43,0x44,0x72,0x17,0x88,0x5A,0x08,0x03,0x32,
+0xB1,0x86,0x44,0x12,0x01,0xC4,0x80,0x06,0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,
+0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,0x94,0x00,0x44,0x12,0x01,0x7C,
+0x3A,0x20,0x14,0x20,0x80,0x1F,0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,
+0x8C,0x00,0x3A,0x20,0x0C,0x20,0x2E,0x47,0xF6,0x23,0x84,0x20,0x80,0x49,0x80,0x67,
+0x80,0xA4,0x84,0x01,0x49,0xFF,0xF5,0x44,0x80,0x06,0x49,0xFF,0xBF,0x85,0x80,0x1F,
+0x49,0xFF,0xBF,0xB8,0x84,0x00,0x49,0xFF,0xC2,0xF8,0x81,0x5F,0x84,0x0C,0xD5,0x35,
+0x5A,0x08,0x02,0x36,0xB1,0x86,0x44,0x12,0x01,0xF4,0x81,0x06,0x3A,0x20,0x94,0x04,
+0x3A,0x24,0x14,0x24,0x3A,0x20,0x94,0x04,0x3A,0x24,0x14,0x24,0x3A,0x20,0x94,0x00,
+0x44,0x12,0x01,0x94,0x81,0xFF,0x3A,0x24,0x14,0x20,0x3A,0x20,0x94,0x04,0x3A,0x27,
+0x94,0x24,0x3A,0x20,0x8C,0x00,0x3A,0x27,0x8C,0x20,0x49,0x00,0x14,0x90,0x2E,0x47,
+0xF6,0x23,0x84,0x00,0x80,0x20,0x80,0x49,0x80,0x67,0x80,0xA4,0x49,0xFF,0xF5,0x10,
+0x80,0x06,0x49,0xFF,0xBF,0x51,0x80,0x1F,0x49,0xFF,0xBF,0x84,0x44,0x00,0x02,0x40,
+0x49,0xFF,0xC2,0xC3,0x81,0x1F,0x80,0x0A,0x49,0xFF,0xC2,0xEA,0xFC,0xC9,0xFC,0x49,
+0x44,0x12,0x01,0xF4,0xB1,0x86,0x80,0xE0,0x80,0x06,0x3A,0x20,0x94,0x04,0x3A,0x20,
+0x14,0x24,0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,0x94,0x00,0x3A,0x20,
+0x14,0x20,0xC7,0x07,0x44,0x82,0x17,0x24,0x85,0x22,0x44,0xA2,0x17,0x4C,0xD5,0x06,
+0x44,0x82,0x17,0x60,0x85,0x23,0x44,0xA2,0x17,0x88,0x84,0x00,0x49,0x00,0x14,0x57,
+0x2E,0x47,0xF6,0x23,0x84,0x00,0x80,0x20,0x80,0x48,0x80,0x6A,0x80,0xA4,0x49,0xFF,
+0xF4,0xD7,0x80,0x06,0x49,0xFF,0xBF,0x18,0x44,0x00,0x02,0x40,0x49,0xFF,0xC2,0x8D,
+0x80,0x09,0x49,0xFF,0xC2,0xB5,0x46,0x00,0x42,0x10,0x50,0x00,0x08,0x20,0x80,0x20,
+0x84,0x40,0x49,0xFF,0xBE,0x20,0x80,0x1F,0xCF,0x04,0x44,0x12,0x01,0x94,0xD5,0x03,
+0x44,0x12,0x01,0xAC,0x80,0xC0,0x3A,0x20,0x94,0x04,0x3A,0x23,0x14,0x24,0x3A,0x20,
+0x8C,0x00,0x3A,0x23,0x0C,0x20,0x49,0xFF,0xBF,0x2D,0xFC,0xC9,0xDD,0x9E,0xFC,0x45,
+0x80,0xE0,0xF1,0x81,0x80,0xC2,0xF3,0x87,0xF4,0x88,0x49,0xFF,0xF2,0x53,0xB6,0x1F,
+0xCF,0x08,0xF0,0x01,0x44,0x80,0x02,0x40,0x85,0x41,0x85,0x22,0xC8,0x11,0xD5,0x07,
+0x5A,0x78,0x02,0x08,0xF0,0x01,0xC8,0x09,0x81,0x00,0x85,0x44,0x85,0x23,0xD5,0x08,
+0x85,0x00,0x81,0x48,0x81,0x28,0xD5,0x04,0x85,0x00,0x85,0x46,0x81,0x27,0x49,0x00,
+0x15,0x1C,0xC8,0x04,0x49,0x00,0x15,0x95,0xD5,0x03,0x49,0x00,0x15,0x8F,0x80,0xE0,
+0xB4,0x1F,0x49,0xFF,0xF4,0xDE,0x40,0x14,0x04,0x08,0x88,0x20,0x42,0x05,0x24,0x24,
+0x94,0x81,0x94,0x02,0x80,0x69,0xB6,0x1F,0x42,0x03,0x24,0x24,0xF0,0x85,0x96,0x19,
+0xF2,0x82,0x84,0xA0,0x92,0x41,0xF0,0x83,0x50,0x03,0x80,0xC0,0xF2,0x84,0x80,0x85,
+0x51,0xC3,0x80,0x40,0xF0,0x89,0xF0,0x03,0xE2,0x80,0xE8,0x2C,0xF0,0x05,0x80,0xFC,
+0x98,0xA0,0x94,0x91,0x88,0x41,0x85,0x40,0x40,0x05,0x08,0x00,0x50,0x93,0xFF,0xC0,
+0xF0,0x86,0x85,0x00,0xF0,0x06,0x39,0xE0,0x20,0x11,0x2A,0x04,0x80,0x01,0x40,0xFF,
+0x00,0x01,0x4E,0xF4,0x00,0x05,0x8A,0x1E,0x96,0x01,0xD5,0x03,0x40,0x07,0x80,0x13,
+0xE2,0xA0,0x40,0x50,0x3C,0x1B,0xB4,0x1F,0x89,0x00,0x4C,0x93,0xFF,0xED,0xF0,0x02,
+0x50,0x74,0x80,0x40,0x89,0x40,0xF0,0x09,0x4C,0x70,0x7F,0xE0,0x8C,0x81,0x97,0x21,
+0xD5,0xD3,0x94,0x31,0x81,0x41,0x42,0xA0,0x0C,0x73,0x81,0x01,0x80,0x01,0xFA,0x90,
+0x84,0xE0,0xFE,0xF4,0x83,0xCA,0x87,0x80,0xF1,0x04,0xF2,0x01,0x42,0x1E,0x04,0x24,
+0x88,0x23,0xCA,0x05,0x8C,0x21,0x38,0x24,0x05,0x01,0xD5,0x03,0x38,0x20,0x05,0x01,
+0x80,0x22,0x84,0xC0,0x8C,0xC1,0x04,0xFF,0x80,0x03,0x40,0x93,0x00,0x13,0xE3,0x2F,
+0xE8,0x0B,0x38,0x9F,0x19,0x01,0xE2,0x29,0x40,0x14,0xBC,0x1B,0xE3,0x22,0x96,0x49,
+0x40,0x24,0xBC,0x1B,0xD5,0xF0,0x8A,0x22,0xE0,0x27,0x40,0x13,0xBC,0x1B,0x97,0xC9,
+0xF1,0x02,0x41,0xEF,0x04,0x00,0x5B,0xC0,0x01,0x04,0x87,0x81,0xD5,0xD6,0xB4,0x3F,
+0x8E,0x81,0x97,0x21,0x89,0x01,0x88,0x01,0x89,0x41,0xCC,0xCD,0xF0,0x08,0xAD,0x40,
+0xF0,0x07,0xAD,0xC0,0xFC,0xC5,0xFC,0x01,0x49,0x00,0x14,0x84,0x84,0xC5,0xC8,0x02,
+0x84,0xC3,0x49,0x00,0x14,0x7F,0xF0,0x81,0x84,0x00,0xF1,0x01,0x80,0x40,0x44,0x32,
+0x17,0xB6,0x44,0x42,0x17,0x22,0x49,0xFF,0xFF,0x3C,0x3C,0x5D,0xF8,0xEB,0x44,0x10,
+0xFF,0xFF,0x3C,0x03,0xFA,0xE3,0xD9,0x04,0x3C,0x0F,0xF8,0xEB,0xD5,0x05,0x88,0xA0,
+0x92,0xA1,0x3C,0x5F,0xF8,0xEB,0x49,0x00,0x14,0x65,0xC0,0x05,0x49,0x00,0x14,0x62,
+0x5A,0x08,0x01,0x0D,0x2E,0x07,0xF6,0x23,0xE2,0xC0,0xE9,0x08,0x3C,0x03,0xFA,0x99,
+0xE6,0x0A,0xE8,0x36,0x84,0x00,0x3C,0x0B,0xFA,0x99,0x3C,0x03,0xFA,0xE3,0x5C,0xF0,
+0x02,0x59,0x84,0x00,0xE9,0x04,0x2E,0x07,0xF5,0x31,0x8C,0x01,0x3E,0x07,0xF5,0x31,
+0x2E,0x07,0xF5,0x31,0xE6,0x02,0xE9,0x06,0x84,0x00,0x3E,0x07,0xF5,0x31,0x3E,0x07,
+0xF6,0x1A,0x2E,0x07,0xF6,0x1A,0xC8,0x0F,0x3C,0x0D,0xF8,0xEB,0x5C,0xF0,0x00,0xC9,
+0xE8,0x06,0x3C,0x03,0xFA,0x99,0x5C,0xF0,0x02,0x59,0xE9,0x05,0x2E,0x07,0xF5,0x30,
+0x8C,0x01,0xD5,0x02,0x84,0x00,0x3E,0x07,0xF5,0x30,0x2E,0x07,0xF5,0x30,0xE6,0x02,
+0x84,0x00,0xE9,0x08,0x84,0x00,0x3E,0x07,0xF5,0x30,0x84,0x01,0xD5,0x03,0x8E,0x0A,
+0xD5,0xCB,0xFC,0x81,0x84,0x01,0x3E,0x07,0xF6,0x1B,0xDD,0x9E,0x2E,0x07,0xF6,0x1B,
+0xDD,0x9E,0x84,0x00,0x3E,0x07,0xF6,0x1B,0xDD,0x9E,0x2E,0x07,0xF6,0x1A,0xDD,0x9E,
+0x84,0x00,0x3E,0x07,0xF6,0x1A,0xDD,0x9E,0x84,0x01,0x3E,0x07,0xF6,0x19,0xDD,0x9E,
+0x2E,0x07,0xF6,0x19,0xDD,0x9E,0x84,0x00,0x3E,0x07,0xF6,0x19,0xDD,0x9E,0x2E,0x07,
+0xF6,0x2F,0x96,0x00,0xC0,0x05,0x84,0x00,0x3E,0x07,0xF6,0x2F,0x84,0x01,0xDD,0x9E,
+0x2E,0x07,0xF6,0x2E,0x96,0x00,0xC0,0x05,0x84,0x00,0x3E,0x07,0xF6,0x2E,0x84,0x01,
+0xDD,0x9E,0x2E,0x17,0xF6,0x2D,0x96,0x48,0xC1,0x05,0x84,0x00,0x3E,0x07,0xF6,0x2D,
+0xD5,0x07,0x2E,0x07,0xF6,0x29,0x96,0x00,0xC0,0x04,0x3E,0x17,0xF6,0x29,0x84,0x01,
+0xDD,0x9E,0x2E,0x07,0xF6,0x2C,0x96,0x00,0xC0,0x05,0x84,0x00,0x3E,0x07,0xF6,0x2C,
+0xD5,0x10,0x2E,0x17,0xF6,0x2B,0x96,0x48,0xC1,0x05,0x3E,0x07,0xF6,0x2B,0x84,0x01,
+0xD5,0x08,0x2E,0x07,0xF6,0x2A,0x96,0x00,0xC0,0x07,0x3E,0x17,0xF6,0x2A,0x84,0x02,
+0x3E,0x07,0xF6,0x31,0x84,0x01,0xDD,0x9E,0xFC,0x00,0x49,0xFF,0xBB,0x79,0x5A,0x00,
+0x01,0xFE,0x44,0x16,0x20,0x10,0xB4,0x01,0x92,0x01,0x96,0x06,0x5A,0x00,0x01,0xFD,
+0x49,0x00,0x18,0xA1,0x80,0xC0,0xC8,0x09,0x84,0x01,0x49,0xFF,0xF3,0x6B,0x64,0x00,
+0x00,0x20,0x80,0x06,0x49,0xFF,0xF3,0x66,0xFC,0x80,0x2E,0x07,0xF6,0x32,0xDD,0x9E,
+0x3E,0x07,0xF6,0x32,0xDD,0x9E,0x2E,0x07,0xF6,0x31,0xDD,0x9E,0x3E,0x07,0xF6,0x30,
+0xDD,0x9E,0xFC,0x40,0x2E,0x07,0xF6,0x32,0xC8,0x1C,0x49,0xFF,0xF4,0x4A,0x3C,0x1D,
+0xF8,0xEF,0x84,0xCB,0xFF,0x8C,0xFF,0x84,0x49,0xFF,0xF6,0x9F,0x3C,0x7D,0xF8,0xEF,
+0x81,0x20,0x49,0xFF,0xF6,0x9A,0x40,0x03,0x80,0x0D,0x9D,0xC1,0x44,0x00,0x00,0x3C,
+0x40,0x00,0x24,0x0C,0x84,0x2A,0xFE,0x0C,0x40,0x63,0x00,0xD7,0x98,0x3E,0xD5,0x21,
+0x49,0xFF,0xF4,0x2F,0x80,0xC0,0x84,0x01,0x49,0xFF,0xF6,0x4C,0x42,0xA3,0x00,0x24,
+0x84,0x01,0x49,0xFF,0xC3,0x09,0x81,0x20,0x49,0xFF,0xF6,0x7F,0x3C,0x6D,0xF8,0xEF,
+0x80,0xE0,0x49,0xFF,0xF6,0x7A,0x40,0x03,0x00,0x0D,0x9D,0x81,0x40,0x25,0x24,0x0C,
+0x84,0x6B,0x84,0x0A,0x40,0x00,0x1C,0x0C,0xFE,0x9C,0x40,0x11,0x00,0x36,0x98,0x31,
+0x96,0x01,0xFC,0xC0,0xFC,0x00,0x84,0x03,0x49,0xFF,0xF3,0xB0,0x49,0xFF,0xF3,0x21,
+0xFC,0x80,0x2E,0x07,0xF4,0xB5,0xC0,0xFE,0xFC,0x00,0x49,0xFF,0xBC,0xE1,0xFC,0x80,
+0xFC,0x01,0xF0,0x81,0x84,0x01,0x49,0xFF,0xEE,0xEF,0xF0,0x01,0x49,0xFF,0xF3,0x0E,
+0xF0,0x01,0x49,0xFF,0xF3,0x0C,0xF0,0x01,0x49,0xFF,0xF3,0x0A,0xFC,0x81,0xFC,0x00,
+0x84,0x00,0x49,0xFF,0xF6,0x2A,0x84,0x00,0x49,0xFF,0xC3,0x8D,0x84,0x00,0x49,0xFF,
+0xF6,0x2F,0x44,0x00,0x03,0x41,0x84,0x27,0x84,0x40,0x84,0x61,0x49,0x00,0x19,0xB9,
+0x2E,0x07,0xF6,0x31,0xE6,0x02,0xE8,0x08,0x84,0x01,0x84,0x20,0x49,0xFF,0xC2,0xCE,
+0x84,0x01,0x49,0xFF,0xFF,0xD7,0x84,0x00,0x84,0x21,0x49,0xFF,0xC2,0xC7,0x84,0x01,
+0x80,0x20,0x49,0xFF,0xC3,0x3D,0x84,0x00,0x49,0x00,0x11,0x5F,0x84,0x00,0x49,0x00,
+0x11,0x42,0x46,0x00,0x00,0x81,0x83,0x80,0xB9,0x1A,0x92,0x25,0x94,0x4D,0x58,0x10,
+0x80,0x09,0xB9,0x9A,0xBA,0x1A,0x44,0x1F,0xE0,0xFF,0xFE,0x56,0x58,0x10,0x85,0x00,
+0xB9,0x9A,0xBA,0x1A,0x46,0x1F,0xFE,0x0F,0x50,0x10,0x8F,0xFF,0xFE,0x56,0x44,0x25,
+0x00,0x00,0xFE,0x57,0xB9,0x9A,0xBA,0x1A,0x46,0x1E,0x0F,0xFF,0x50,0x10,0x8F,0xFF,
+0xFE,0x56,0x46,0x20,0x30,0x00,0xFE,0x57,0xB9,0x9A,0xB9,0x19,0x44,0x21,0x39,0x0A,
+0x92,0x31,0x40,0x10,0xC4,0x08,0xFE,0x57,0xB9,0x99,0x84,0x00,0x3E,0x07,0xF6,0x32,
+0xFC,0x80,0xFC,0x00,0x84,0x01,0x49,0x00,0x11,0x28,0x84,0x00,0x49,0x00,0x11,0x0B,
+0x2E,0x67,0xF6,0x31,0xCE,0x14,0x80,0x06,0x49,0xFF,0xF5,0xD2,0x80,0x06,0x49,0xFF,
+0xFF,0x89,0x80,0x06,0x80,0x26,0x49,0xFF,0xC2,0x79,0x49,0xFF,0xC3,0xCC,0xE6,0x03,
+0x4E,0xF2,0x00,0xA4,0x49,0xFF,0xF3,0xE6,0x48,0x00,0x00,0xA0,0x5A,0x68,0x01,0x56,
+0x84,0x00,0x49,0xFF,0xFF,0x77,0x84,0x00,0x80,0x20,0x49,0xFF,0xC2,0x67,0x44,0x24,
+0x2C,0x18,0x46,0x0B,0x67,0xFF,0xB4,0x22,0x50,0x00,0x0F,0xFF,0xFE,0x0E,0x46,0x10,
+0x10,0x00,0xFE,0x0F,0xB6,0x02,0x44,0x14,0x24,0x18,0x44,0x04,0x28,0x18,0x80,0x46,
+0x80,0x66,0x49,0xFF,0xBA,0xCF,0x44,0x14,0x2C,0x20,0x44,0x0F,0xFF,0xB3,0xB4,0x41,
+0x80,0x66,0xFE,0x16,0x58,0x00,0x00,0x48,0xB6,0x01,0x80,0x46,0x44,0x04,0x28,0x20,
+0x44,0x14,0x24,0x20,0x49,0xFF,0xBA,0xBE,0x44,0x24,0x2C,0x1C,0x46,0x0F,0xFB,0x3F,
+0xB4,0x22,0x50,0x00,0x0F,0xFF,0xFE,0x0E,0x46,0x10,0x04,0x80,0xFE,0x0F,0xB6,0x02,
+0x44,0x14,0x24,0x1C,0x44,0x04,0x28,0x1C,0x80,0x46,0x80,0x66,0x49,0xFF,0xBA,0xAA,
+0x44,0x14,0x50,0x0C,0x84,0x1E,0xB4,0x41,0xFE,0x16,0xB6,0x01,0x84,0x0F,0x49,0xFF,
+0xC3,0x87,0x44,0x24,0x70,0x04,0x44,0x10,0x89,0x12,0xB4,0x02,0x92,0x10,0x40,0x00,
+0x40,0x08,0xFE,0x0F,0xB6,0x02,0xD5,0x52,0x46,0x00,0x00,0x81,0x83,0x80,0xB9,0x1A,
+0x92,0x25,0x94,0x4D,0x58,0x10,0x80,0x03,0xB9,0x9A,0xBA,0x1A,0x44,0x1F,0xE0,0xFF,
+0xFE,0x56,0x58,0x10,0x82,0x00,0xB9,0x9A,0xBA,0x1A,0x46,0x1F,0xFE,0x0F,0x50,0x10,
+0x8F,0xFF,0xFE,0x56,0x44,0x21,0x00,0x00,0xFE,0x57,0xB9,0x9A,0xBA,0x1A,0x46,0x1E,
+0x0F,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x56,0xB9,0x9A,0xB9,0x19,0x84,0x41,0x92,0x31,
+0x40,0x10,0xC4,0x08,0x58,0x10,0xED,0x60,0x80,0x62,0xB9,0x99,0x44,0x00,0x02,0xBC,
+0x84,0x20,0x49,0x00,0x18,0xCE,0x84,0x21,0x84,0x00,0x49,0xFF,0xC2,0x61,0x84,0x01,
+0x49,0xFF,0xC2,0x68,0x84,0x01,0x80,0x20,0x49,0xFF,0xC1,0xE0,0x84,0x01,0x49,0xFF,
+0xC2,0x2D,0x84,0x01,0x49,0xFF,0xC2,0x87,0x49,0xFF,0xC3,0x2D,0xE6,0x03,0xE8,0x03,
+0x49,0xFF,0xF3,0x48,0x49,0xFF,0xC1,0x98,0x84,0x00,0xFA,0x2F,0x80,0x40,0x84,0x61,
+0x80,0x80,0x49,0xFF,0xF3,0x8D,0x49,0xFF,0xC1,0x8F,0x84,0x00,0x49,0xFF,0xEE,0x90,
+0x84,0x00,0x49,0xFF,0xEE,0x96,0x84,0x01,0x3E,0x07,0xF6,0x32,0x2E,0x07,0xF6,0x31,
+0x5A,0x08,0x02,0x04,0x49,0xFF,0xC5,0xD3,0xFC,0x80,0xFC,0x00,0x49,0xFF,0xF2,0x70,
+0xFC,0x80,0xDD,0x9E,0x84,0x40,0x44,0x42,0x18,0x30,0x96,0xD1,0xE2,0x61,0xE8,0x07,
+0x38,0x30,0x08,0x00,0x38,0x32,0x08,0x08,0x8C,0x41,0xD5,0xF8,0xDD,0x9E,0xFC,0x40,
+0x22,0xFF,0x80,0x14,0x22,0x8F,0x80,0x16,0x22,0xAF,0x80,0x18,0x00,0x9F,0x80,0x34,
+0x00,0x7F,0x80,0x38,0x00,0x6F,0x80,0x3C,0x4E,0x03,0x00,0x99,0x45,0xC7,0x20,0xC0,
+0x46,0x0F,0xFF,0x0F,0x05,0xEE,0x00,0x00,0x96,0x5F,0x50,0x00,0x0F,0xFF,0x40,0x10,
+0xC0,0x08,0x40,0x0F,0x00,0x02,0xFE,0x0F,0xB6,0x1C,0xC4,0x0C,0x44,0x07,0x20,0xC4,
+0x40,0x21,0x30,0x08,0xB4,0x20,0x92,0x4C,0x92,0x34,0x40,0x10,0xD0,0x08,0xFE,0x8F,
+0xB6,0x40,0xC5,0x0C,0x44,0x07,0x20,0xCC,0x40,0x31,0xB0,0x08,0xB4,0x20,0x92,0x6C,
+0x92,0x34,0x40,0x10,0xD0,0x08,0xFE,0xCF,0xB6,0x60,0x44,0x27,0x20,0xD4,0xF0,0x08,
+0xB4,0x22,0x40,0x00,0x30,0x08,0x92,0x34,0x40,0x10,0xD0,0x08,0x92,0x0C,0x44,0x37,
+0x20,0xC8,0xFE,0x0F,0xB6,0x02,0xB4,0x03,0x54,0x17,0x80,0xFF,0x92,0x08,0x40,0x00,
+0x20,0x08,0x44,0x27,0x20,0xD0,0xFE,0x0F,0xB6,0x03,0xB4,0x02,0x54,0x14,0x00,0xFF,
+0x92,0x08,0x40,0x00,0x20,0x08,0xFE,0x0F,0x44,0x17,0x20,0xD8,0xB6,0x02,0xB4,0x01,
+0x54,0xA5,0x00,0xFF,0x92,0x08,0x40,0x00,0x20,0x08,0x40,0x00,0x28,0x04,0xB6,0x01,
+0x54,0x04,0x80,0x03,0x40,0xA0,0x60,0x08,0xB5,0x23,0x46,0x0F,0xCF,0xFF,0x50,0x00,
+0x0F,0xFF,0x40,0x94,0x80,0x02,0x40,0x94,0xA8,0x04,0xB7,0x23,0x97,0xCF,0x40,0x93,
+0xE0,0x08,0xB4,0xE2,0x97,0x8F,0xFF,0xC6,0x40,0x73,0xA4,0x04,0xB6,0xE2,0xB4,0xE1,
+0x40,0x63,0x60,0x08,0xFE,0x3E,0xFE,0x37,0xB6,0x01,0xF0,0x10,0x44,0x77,0x20,0xDC,
+0x40,0x00,0x3C,0x08,0x40,0x60,0x3C,0x09,0xB4,0x07,0x40,0x42,0x7C,0x08,0x92,0x11,
+0x40,0x00,0x44,0x08,0xFE,0x37,0xB6,0x07,0xB4,0x03,0x40,0x52,0xFC,0x08,0x94,0x01,
+0x92,0x01,0xFE,0x27,0xB6,0x03,0xB4,0x02,0x94,0x01,0x92,0x01,0xFE,0x2F,0xB6,0x02,
+0xF0,0x09,0x40,0x20,0x7C,0x08,0xB4,0x01,0x94,0x01,0x92,0x01,0xFE,0x17,0xB6,0x01,
+0x84,0x20,0x44,0x07,0x20,0xE0,0x48,0x00,0x00,0x9D,0x5A,0x00,0x01,0x04,0x48,0x00,
+0x00,0x9A,0x45,0xC7,0x21,0x00,0x46,0x0F,0xFF,0x0F,0x05,0xEE,0x00,0x00,0x96,0x5F,
+0x50,0x00,0x0F,0xFF,0x40,0x10,0xC0,0x08,0x40,0x0F,0x00,0x02,0xFE,0x0F,0xB6,0x1C,
+0xC4,0x0C,0x44,0x07,0x21,0x04,0x40,0x21,0x30,0x08,0xB4,0x20,0x92,0x4C,0x92,0x34,
+0x40,0x10,0xD0,0x08,0xFE,0x8F,0xB6,0x40,0xC5,0x0C,0x44,0x07,0x21,0x0C,0x40,0x31,
+0xB0,0x08,0xB4,0x20,0x92,0x6C,0x92,0x34,0x40,0x10,0xD0,0x08,0xFE,0xCF,0xB6,0x60,
+0x44,0x27,0x21,0x14,0xF0,0x08,0xB4,0x22,0x40,0x00,0x30,0x08,0x92,0x34,0x40,0x10,
+0xD0,0x08,0x92,0x0C,0xFE,0x0F,0xB6,0x02,0x44,0x27,0x21,0x08,0x54,0x17,0x80,0xFF,
+0xB4,0x02,0x54,0x35,0x00,0xFF,0x92,0x08,0x40,0x00,0x20,0x08,0xFE,0x0F,0x44,0x17,
+0x21,0x10,0xB6,0x02,0x54,0x04,0x00,0xFF,0xB5,0x01,0x97,0xCF,0x93,0x08,0x40,0x84,
+0x20,0x08,0x40,0x84,0x00,0x04,0x44,0x07,0x21,0x18,0xB7,0x01,0xB5,0x40,0x97,0x8F,
+0x93,0x48,0x40,0xA5,0x20,0x08,0x40,0xA5,0x0C,0x04,0xB7,0x40,0x54,0x34,0x80,0x03,
+0x46,0xAF,0xCF,0xFF,0xB5,0x22,0x50,0xA5,0x0F,0xFF,0x40,0x31,0xE0,0x08,0x40,0x94,
+0xA8,0x02,0x40,0x94,0x8C,0x04,0xB7,0x22,0x40,0x33,0xE0,0x08,0xB4,0xE1,0x40,0x42,
+0x7C,0x08,0x40,0x73,0xA8,0x02,0xFF,0xDF,0xB6,0xE1,0x40,0x33,0x60,0x08,0xB4,0xC0,
+0x44,0x77,0x21,0x1C,0x40,0x63,0x28,0x02,0xFF,0x9F,0xF3,0x10,0xB6,0xC0,0x40,0x31,
+0xBC,0x08,0x40,0x61,0xBC,0x09,0xB4,0x67,0x40,0x52,0xFC,0x08,0x92,0x71,0x40,0x31,
+0xC4,0x08,0xFE,0xF7,0xB6,0x67,0xB4,0x62,0x94,0xD9,0x92,0x61,0xFF,0x1F,0xB6,0x82,
+0xB4,0x41,0x94,0x91,0x92,0x41,0xFF,0x57,0xB6,0xA1,0xF1,0x09,0x40,0x20,0xFC,0x08,
+0xB4,0x20,0x94,0x49,0x92,0x21,0xFE,0x57,0xB6,0x20,0x84,0x20,0x44,0x07,0x21,0x20,
+0xB6,0x20,0xFC,0xC0,0xFC,0x00,0x84,0x00,0x49,0xFF,0xC1,0x62,0x44,0x16,0x00,0x00,
+0xB4,0x01,0x58,0x00,0x01,0x00,0xB6,0x01,0x44,0x02,0x18,0x30,0x44,0x10,0x00,0x79,
+0xAE,0x41,0x44,0x1F,0xFF,0x84,0xAE,0x42,0x84,0x39,0xAE,0x43,0xFC,0x80,0x84,0x20,
+0x84,0x40,0x3C,0x1B,0xFB,0x1E,0x44,0x42,0x18,0x30,0x80,0x22,0x96,0xD1,0xE2,0x60,
+0xE8,0x06,0x38,0x32,0x08,0x00,0x8C,0x41,0x88,0x23,0xD5,0xF9,0xFC,0x00,0x44,0x22,
+0x18,0x30,0xFE,0x4A,0x96,0x48,0x38,0x11,0x00,0x08,0x8C,0x01,0x96,0x01,0x49,0xFF,
+0xEE,0x9D,0x2E,0x07,0xF6,0x40,0x49,0xFF,0xEE,0x84,0x49,0xFF,0xC1,0x84,0xE6,0x03,
+0xE9,0x03,0x49,0xFF,0xED,0x0C,0xFC,0x80,0xFC,0x01,0x84,0x00,0x3E,0x07,0xFC,0x49,
+0x84,0x01,0x3E,0x07,0xE3,0xB8,0x84,0x20,0x44,0x00,0x01,0x00,0x49,0xFF,0xB7,0xE8,
+0x44,0x00,0x01,0x00,0x84,0x20,0x49,0xFF,0xB7,0xF2,0x44,0x00,0x01,0x00,0x84,0x21,
+0x49,0xFF,0xB7,0xFC,0x44,0x40,0x05,0x78,0xB6,0x9F,0x44,0x12,0x18,0x30,0x44,0x22,
+0x18,0x2E,0x44,0x32,0x18,0x2C,0x44,0x50,0x00,0x90,0x44,0x02,0x1D,0xA8,0x49,0xFF,
+0xEE,0x5C,0x44,0x00,0x9E,0x2C,0x49,0xFF,0xEE,0x72,0x44,0x00,0x97,0x12,0x49,0xFF,
+0xEE,0x71,0x84,0x00,0x49,0xFF,0xB7,0xFE,0x84,0x00,0x3C,0x0B,0xFB,0x1F,0x44,0x00,
+0x05,0x77,0x49,0xFF,0xFF,0xA6,0x49,0xFF,0xFF,0x8F,0xFC,0x81,0xFC,0x00,0xC8,0x03,
+0xFA,0x1A,0xD5,0x03,0x44,0x00,0x05,0x1B,0x49,0xFF,0xFF,0x9B,0xFC,0x80,0xFC,0x00,
+0x84,0x07,0x49,0xFF,0xFF,0x96,0xFC,0x80,0xFC,0x00,0x44,0x00,0x00,0xA9,0x49,0xFF,
+0xFF,0x90,0xFC,0x80,0xFC,0x00,0x44,0x00,0x01,0x00,0x84,0x20,0x49,0xFF,0xB7,0xBE,
+0x84,0x00,0x3C,0x0F,0xFD,0x8D,0x3C,0x0D,0xFD,0x8D,0x5C,0xF0,0x00,0x64,0xE8,0x05,
+0x3C,0x0D,0xFD,0x8D,0x8C,0x01,0xD5,0xF6,0x44,0x00,0x01,0x00,0x84,0x21,0x49,0xFF,
+0xB7,0xAD,0xFC,0x80,0x2E,0x07,0xFC,0x49,0xDD,0x9E,0x2E,0x07,0xE3,0xB8,0xDD,0x9E,
+0xFC,0x00,0x44,0x10,0x00,0xFF,0x80,0xC0,0x44,0x20,0x05,0x78,0x44,0x02,0x18,0x30,
+0x49,0x00,0x1D,0x02,0xCE,0x06,0x44,0x00,0x00,0x5A,0x3E,0x07,0xF6,0x40,0xFC,0x80,
+0x44,0x0F,0xFF,0xA7,0x3E,0x07,0xF6,0x40,0x84,0x05,0x3E,0x07,0xF6,0x41,0xFA,0x0C,
+0x3E,0x07,0xF6,0x42,0xFA,0x10,0x3E,0x07,0xF6,0x43,0x84,0x1F,0x3E,0x07,0xF6,0x44,
+0xFC,0x80,0xFC,0x00,0x04,0x30,0x00,0x47,0x46,0x40,0x10,0x00,0x40,0x51,0xC0,0x09,
+0xFF,0x1E,0x80,0xC0,0x97,0x5F,0xC4,0x26,0x92,0x74,0x96,0xDF,0x4C,0x32,0xC0,0x09,
+0x9D,0x5D,0x84,0x66,0x40,0x32,0x8C,0xB6,0x97,0x68,0x84,0x01,0xD5,0x0F,0x50,0x00,
+0x01,0x1B,0x9D,0x29,0x84,0x66,0x40,0x42,0x0C,0x76,0x54,0x41,0x80,0x0F,0xA6,0xC3,
+0x54,0x31,0x80,0xF0,0xFE,0xE7,0xAE,0xC3,0x84,0x02,0xAE,0x10,0x84,0x4C,0x80,0x01,
+0x80,0x26,0x42,0x12,0x88,0x73,0x50,0x10,0x80,0x94,0x49,0x00,0x1C,0x97,0x84,0x01,
+0xFC,0x80,0xAF,0x10,0x80,0x04,0xFC,0x80,0xFC,0x42,0x84,0x20,0x80,0xE0,0x84,0x4C,
+0xB0,0x01,0x49,0x00,0x1C,0xB1,0x2E,0x07,0xF6,0x33,0x44,0x82,0x33,0x90,0x8C,0x01,
+0x3E,0x07,0xF6,0x33,0x85,0x45,0x84,0xC1,0x87,0x80,0x44,0x92,0x18,0x30,0x80,0x08,
+0xB0,0x41,0x50,0x2F,0x80,0x03,0x49,0xFF,0xFF,0xB6,0x4E,0x02,0x00,0x9C,0x00,0x14,
+0x01,0x05,0x5A,0x18,0x03,0x08,0x00,0x0F,0x80,0x03,0x5A,0x08,0x01,0x04,0x48,0x00,
+0x00,0x92,0x8E,0x22,0xE6,0x22,0x4E,0xF2,0x00,0x8E,0x3C,0x0D,0xFB,0xD6,0x96,0x1E,
+0xC8,0x06,0x44,0x20,0x00,0x5F,0x44,0x10,0x00,0x3C,0xD5,0x05,0x44,0x20,0x00,0xC8,
+0x44,0x10,0x00,0x58,0xF0,0x01,0x5E,0xF0,0x1B,0x59,0xE9,0x21,0x40,0x10,0x08,0x36,
+0x5E,0xF0,0x81,0x00,0xE9,0x03,0x44,0x10,0x00,0xFF,0x50,0x00,0xFF,0x92,0xE6,0x14,
+0xE8,0x02,0x8C,0x34,0x50,0x00,0xFF,0xA6,0xE6,0x14,0xE8,0x04,0x50,0x10,0x80,0x28,
+0xD5,0x2C,0x50,0x00,0xFF,0x69,0xE6,0x14,0xE8,0x03,0x8E,0x34,0xD5,0x26,0x50,0x00,
+0xFF,0x55,0xE6,0x14,0xE8,0x22,0x50,0x10,0xFF,0xD8,0xD5,0x1F,0x40,0x10,0x04,0x36,
+0x5E,0xF0,0x81,0x00,0xE9,0x03,0x44,0x10,0x00,0xFF,0x50,0x00,0xFF,0xE2,0xE6,0x0A,
+0xE8,0x03,0x8C,0x2A,0xD5,0x12,0x50,0x00,0xFF,0xEC,0xE6,0x0A,0xE8,0x03,0x8C,0x34,
+0xD5,0x0C,0x50,0x20,0xFF,0xCD,0xE6,0x4A,0xE8,0x03,0x8E,0x2A,0xD5,0x06,0x50,0x20,
+0xFF,0xC3,0xE6,0x4A,0x40,0x10,0x3C,0x1B,0x00,0x4F,0x80,0x0C,0x5A,0x48,0x01,0x3B,
+0x22,0x0F,0x80,0x04,0x22,0x2F,0x80,0x05,0xCF,0x1F,0x40,0x31,0x20,0x0A,0x54,0x41,
+0x80,0x0F,0x40,0x30,0x10,0x0A,0x54,0x31,0x80,0xF0,0xFE,0xE7,0x38,0x34,0x98,0x08,
+0x9C,0xF1,0x96,0x00,0x38,0x04,0x8C,0x08,0x9C,0x32,0x96,0x90,0x5E,0xF0,0x80,0xFF,
+0x38,0x24,0x80,0x08,0x9C,0x33,0xE9,0x03,0x44,0x10,0x00,0xFE,0x96,0x48,0x38,0x14,
+0x80,0x08,0x87,0x81,0xD5,0x17,0x40,0x11,0x20,0x0A,0x54,0x30,0x80,0x0F,0x40,0x10,
+0x10,0x0A,0x54,0x10,0x80,0xF0,0xFE,0x5F,0x38,0x14,0xA8,0x08,0x50,0x15,0x00,0x01,
+0x96,0x00,0x38,0x04,0x84,0x08,0x50,0x05,0x00,0x02,0x96,0x90,0x38,0x24,0x80,0x08,
+0x83,0x84,0x8C,0xC4,0x50,0x84,0x01,0x24,0x8D,0x43,0x5A,0x60,0x29,0x04,0x48,0xFF,
+0xFF,0x58,0x80,0x1C,0xFC,0xC2,0xFA,0xB3,0x44,0x22,0x18,0x30,0x44,0x30,0x04,0xA3,
+0x80,0x80,0x0A,0x10,0x00,0x01,0x92,0x28,0x38,0x11,0x14,0x08,0x9C,0x69,0xA7,0x20,
+0x8C,0xA2,0x38,0x41,0x04,0x08,0xDB,0xF5,0xDD,0x9E,0x44,0x50,0x04,0xA3,0x44,0x22,
+0x18,0x30,0x44,0x30,0x05,0x07,0x80,0x80,0x0A,0x10,0x00,0x01,0x92,0x28,0x38,0x11,
+0x14,0x08,0x9C,0x69,0xA7,0x20,0x8C,0xA2,0x38,0x41,0x04,0x08,0xDB,0xF5,0xDD,0x9E,
+0x44,0x1F,0xFF,0xB7,0x3E,0x17,0xF6,0x40,0x84,0x24,0x3E,0x17,0xF6,0x41,0x44,0x1F,
+0xFF,0x85,0x3E,0x17,0xF6,0x42,0x2E,0x17,0xF4,0x21,0x3E,0x17,0xF6,0x43,0x84,0xA4,
+0x44,0x22,0x18,0x30,0x44,0x30,0x04,0x84,0x80,0x80,0x0A,0x10,0x00,0x01,0x92,0x28,
+0x38,0x11,0x14,0x08,0x9C,0x69,0xA7,0x20,0x8C,0xA2,0x38,0x41,0x04,0x08,0xDB,0xF5,
+0xDD,0x9E,0xC8,0x03,0x3E,0x17,0xF6,0x69,0xDD,0x9E,0xFC,0x00,0x49,0xFF,0xEC,0xCC,
+0xFC,0x80,0xFC,0x00,0x49,0xFF,0xEC,0xC5,0xFC,0x80,0xFC,0x00,0x49,0x00,0x0D,0x6C,
+0x2E,0x57,0xFC,0x48,0xCD,0x18,0x84,0x32,0x3E,0x17,0xF6,0x40,0x44,0x22,0x18,0x30,
+0x44,0x30,0x04,0x80,0x80,0x80,0x2A,0x10,0x00,0x01,0x9D,0xA9,0x90,0x28,0x96,0x48,
+0x38,0x11,0x18,0x08,0x8C,0xA2,0xA6,0x60,0x38,0x11,0x14,0x08,0xDB,0xF4,0x44,0x00,
+0x04,0x81,0xD5,0x12,0x5A,0x58,0x01,0x13,0x84,0x12,0x3E,0x07,0xF6,0x40,0x44,0x12,
+0x18,0x30,0x80,0x05,0x84,0x40,0x9C,0xC1,0x38,0x20,0x80,0x08,0x8C,0x02,0x38,0x20,
+0x8C,0x08,0x5A,0x08,0x65,0xFA,0x49,0xFF,0xFD,0xDC,0xFC,0x80,0xFC,0x41,0x3C,0x23,
+0xFB,0x1F,0x2E,0x17,0xFB,0xB8,0x96,0x91,0x96,0x48,0x44,0x62,0x1D,0xA8,0x5A,0x18,
+0x35,0x04,0x48,0x00,0x08,0x81,0x5A,0x18,0x30,0x04,0x48,0x00,0x08,0x74,0x5A,0x18,
+0x33,0x04,0x48,0x00,0x08,0x70,0x5A,0x18,0x31,0x04,0x48,0x00,0x08,0x8A,0x5A,0x18,
+0x34,0x04,0x48,0x00,0x08,0x86,0x84,0x00,0x5A,0x18,0x32,0x04,0x48,0x00,0x08,0x77,
+0x5A,0x20,0x03,0x04,0x48,0x00,0x01,0x53,0x5A,0x18,0x53,0x0F,0x2E,0x07,0xFB,0xB9,
+0x2E,0x17,0xFB,0xBA,0x40,0x00,0x20,0x08,0xFE,0x0F,0x50,0x00,0x7F,0xB8,0x5C,0x00,
+0x00,0x01,0x48,0x00,0x04,0x42,0x5A,0x10,0x01,0x05,0x84,0x00,0x48,0x00,0x04,0x3D,
+0x2E,0x07,0xFB,0xB9,0x5A,0x08,0x01,0x16,0x2E,0x17,0xFB,0xBA,0x84,0x00,0x5A,0x18,
+0x01,0x05,0x3C,0x0F,0xFF,0x15,0x84,0x06,0x2E,0x17,0xFB,0xBA,0x4E,0x13,0x04,0x2D,
+0x84,0x01,0x3C,0x0F,0xFF,0x15,0x49,0xFF,0xBE,0x94,0x84,0x07,0x48,0x00,0x04,0x25,
+0x2E,0x07,0xFB,0xB9,0x5A,0x08,0x02,0x13,0x2E,0x07,0xFB,0xBA,0x5A,0x08,0x03,0x04,
+0x48,0x00,0x03,0xC6,0x2E,0x07,0xFB,0xBA,0x4E,0x02,0x03,0xC4,0x2E,0x07,0xFB,0xBA,
+0x5A,0x08,0x01,0xD5,0x84,0x08,0x48,0x00,0x04,0x10,0x2E,0x07,0xFB,0xB9,0x5A,0x08,
+0x03,0x0E,0x2E,0x07,0xFB,0xBA,0xC0,0xCA,0x2E,0x07,0xFB,0xBA,0x5A,0x00,0x01,0xC7,
+0x2E,0x07,0xFB,0xBA,0x84,0x00,0x48,0x00,0x04,0x00,0x2E,0x07,0xFB,0xB9,0x5A,0x08,
+0x04,0x12,0x2E,0x07,0xFB,0xBA,0xC0,0xBA,0x2E,0x07,0xFB,0xBA,0x5A,0x00,0x01,0xB7,
+0x2E,0x07,0xFB,0xBA,0x5A,0x00,0x10,0xB3,0x2E,0x07,0xFB,0xBA,0x84,0x00,0x48,0x00,
+0x03,0xEC,0x2E,0x07,0xFB,0xB9,0x5A,0x00,0x05,0xAA,0x2E,0x07,0xFB,0xB9,0x5A,0x08,
+0x06,0x11,0x2E,0x07,0xFB,0xBA,0x96,0x00,0x5A,0x08,0x01,0x04,0x3C,0x0F,0xFC,0xFD,
+0x2E,0x07,0xFB,0xBA,0x96,0x00,0xC8,0x9A,0x3C,0x0F,0xFC,0xFD,0x48,0x00,0x03,0xD5,
+0x2E,0x07,0xFB,0xB9,0x5A,0x08,0x07,0x11,0x2E,0x07,0xFB,0xBA,0x96,0x00,0x5A,0x08,
+0x01,0x04,0x3C,0x0F,0xFC,0xFC,0x2E,0x07,0xFB,0xBA,0x96,0x00,0xC8,0x87,0x3C,0x0F,
+0xFC,0xFC,0x48,0x00,0x03,0xC2,0x2E,0x07,0xFB,0xB9,0x5A,0x08,0x08,0x0B,0x2E,0x07,
+0xFB,0xBA,0x4E,0x02,0xFF,0x7C,0x2E,0x07,0xFB,0xBA,0x84,0x00,0x48,0x00,0x03,0xB5,
+0x2E,0x07,0xFB,0xB9,0x5A,0x08,0x09,0x04,0x48,0xFF,0xFF,0x71,0x2E,0x07,0xFB,0xB9,
+0x5A,0x08,0x0A,0x33,0x2E,0x07,0xFB,0xBA,0x4E,0x02,0x03,0x56,0x2E,0x07,0xFB,0xBA,
+0x5A,0x08,0x01,0x04,0x48,0x00,0x03,0x52,0x2E,0x07,0xFB,0xBA,0x5A,0x08,0x02,0x04,
+0x48,0x00,0x03,0x4E,0x2E,0x07,0xFB,0xBA,0x5A,0x08,0x03,0x04,0x48,0x00,0x03,0x4A,
+0x2E,0x07,0xFB,0xBA,0x5A,0x08,0x04,0x04,0x48,0x00,0x03,0x46,0x2E,0x07,0xFB,0xBA,
+0x5A,0x08,0x05,0x04,0x48,0x00,0x03,0x42,0x2E,0x07,0xFB,0xBA,0x5A,0x08,0x06,0x04,
+0x48,0x00,0x03,0x3E,0x2E,0x07,0xFB,0xBA,0x5A,0x00,0x07,0x04,0x48,0xFF,0xFF,0x3F,
+0xFA,0x03,0x48,0x00,0x03,0x7A,0x2E,0x07,0xFB,0xB9,0x5A,0x08,0x0B,0x04,0x48,0xFF,
+0xFF,0x36,0x2E,0x07,0xFB,0xB9,0x5A,0x08,0x0C,0x09,0x2E,0x07,0xFB,0xBA,0x2E,0x07,
+0xFB,0xBA,0x84,0x00,0x48,0x00,0x03,0x69,0x2E,0x07,0xFB,0xB9,0x5A,0x08,0x0F,0x09,
+0x2E,0x07,0xFB,0xBA,0x2E,0x07,0xFB,0xBA,0x84,0x00,0x48,0x00,0x03,0x5E,0x2E,0x07,
+0xFB,0xB9,0x5A,0x08,0x10,0x09,0x2E,0x07,0xFB,0xBA,0x2E,0x07,0xFB,0xBA,0x84,0x00,
+0x48,0x00,0x03,0x53,0x2E,0x07,0xFB,0xB9,0x5A,0x08,0x11,0x1A,0x2E,0x07,0xFB,0xBA,
+0xC8,0x07,0x3C,0x0D,0xFB,0xD6,0x58,0x00,0x00,0x08,0x3C,0x0F,0xFB,0xD6,0x2E,0x07,
+0xFB,0xBA,0x5A,0x00,0x01,0x04,0x48,0xFF,0xFF,0x02,0x3C,0x1D,0xFB,0xD6,0x84,0x17,
+0xFE,0x0E,0x3C,0x0F,0xFB,0xD6,0x84,0x00,0x48,0x00,0x03,0x37,0x2E,0x07,0xFB,0xB9,
+0x5A,0x08,0x12,0x09,0x2E,0x07,0xFB,0xBA,0x3C,0x0B,0xF9,0xF7,0x84,0x00,0x48,0x00,
+0x03,0x2C,0x2E,0x07,0xFB,0xB9,0x5A,0x08,0x13,0x13,0x2E,0x07,0xFB,0xBA,0x2E,0x07,
+0xFB,0xBA,0x5C,0xF0,0x00,0x82,0xE8,0x04,0x2E,0x07,0xFB,0xBA,0xD5,0x03,0x44,0x00,
+0x00,0x81,0x3C,0x0B,0xF9,0xF6,0x84,0x00,0x48,0x00,0x03,0x17,0x2E,0x07,0xFB,0xB9,
+0x5A,0x00,0x14,0x04,0x48,0xFF,0xFE,0xD3,0x2E,0x07,0xFB,0xBA,0xC8,0x08,0x3C,0x1D,
+0xFB,0xD6,0x44,0x0F,0xDF,0xFF,0xFE,0x0E,0x3C,0x0F,0xFB,0xD6,0x2E,0x07,0xFB,0xBA,
+0x84,0x00,0x48,0x00,0x03,0x02,0x44,0x00,0x00,0x3C,0x5A,0x28,0x01,0x36,0x5A,0x18,
+0x01,0x04,0x48,0x00,0x02,0xB7,0x5A,0x18,0x03,0x04,0x48,0x00,0x02,0xB5,0x5A,0x18,
+0x20,0x04,0x48,0x00,0x02,0xB3,0x5A,0x18,0x28,0x04,0x48,0x00,0x02,0xB1,0x5A,0x18,
+0x21,0x04,0x48,0x00,0x02,0xAF,0x5A,0x18,0x22,0x04,0x48,0x00,0x02,0xAD,0x5A,0x18,
+0x23,0x04,0x48,0x00,0x02,0xAB,0x5A,0x18,0x15,0x04,0x48,0x00,0x02,0xA9,0x5A,0x18,
+0x17,0x04,0x48,0x00,0x02,0xA7,0x5A,0x18,0x04,0x04,0x48,0x00,0x02,0xA5,0x5A,0x18,
+0xF3,0x04,0x48,0x00,0x02,0xA4,0x5A,0x10,0xFE,0x04,0x48,0x00,0x02,0xCE,0x44,0x00,
+0x00,0x31,0x48,0x00,0x02,0xCA,0x5A,0x20,0x02,0x04,0x48,0x00,0x01,0x3A,0x5A,0x18,
+0xF6,0x0C,0x2E,0x17,0xFB,0xB9,0x5A,0x10,0xF2,0x04,0x48,0x00,0x02,0xBE,0x44,0x00,
+0x00,0x36,0x48,0x00,0x02,0xBA,0x5A,0x18,0x61,0x1D,0x2E,0x17,0xFB,0xB9,0x96,0x48,
+0xC9,0x09,0x44,0x00,0x01,0x00,0x49,0xFF,0xB4,0x49,0x44,0x00,0x00,0x40,0x48,0x00,
+0x02,0xAC,0x2E,0x17,0xFB,0xB9,0x96,0x48,0x5A,0x10,0x01,0x04,0x48,0x00,0x02,0x7A,
+0x44,0x00,0x01,0x00,0x49,0xFF,0xB4,0x3A,0x44,0x00,0x00,0x40,0x48,0x00,0x02,0x9D,
+0x5A,0x18,0x62,0x24,0x2E,0x07,0xFB,0xB9,0x96,0x00,0xC8,0x07,0x49,0xFF,0xE9,0xE5,
+0x44,0x00,0x00,0x41,0x48,0x00,0x02,0x91,0x2E,0x07,0xFB,0xB9,0x96,0x00,0x5A,0x08,
+0x01,0x08,0x49,0xFF,0xE9,0xDA,0x44,0x00,0x00,0x41,0x48,0x00,0x02,0x86,0x2E,0x07,
+0xFB,0xB9,0x5A,0x00,0x02,0x04,0x48,0x00,0x02,0x58,0x80,0x02,0x49,0xFF,0xE9,0xCD,
+0x44,0x00,0x00,0x41,0x48,0x00,0x02,0x79,0x5A,0x18,0xF0,0x1D,0x2E,0x17,0xFB,0xB9,
+0x4E,0x12,0x02,0x4E,0x2E,0x17,0xFB,0xB9,0x5A,0x18,0x01,0x04,0x48,0x00,0x02,0x4A,
+0x2E,0x17,0xFB,0xB9,0x5A,0x18,0x02,0x04,0x48,0x00,0x02,0x46,0x2E,0x17,0xFB,0xB9,
+0x5A,0x10,0xFA,0x04,0x48,0x00,0x02,0x61,0x84,0x21,0x3E,0x17,0xF6,0x38,0x48,0x00,
+0x02,0x5C,0x5A,0x18,0x02,0x15,0x2E,0x17,0xFB,0xB9,0x5A,0x18,0x03,0x04,0x48,0x00,
+0x02,0x35,0x2E,0x17,0xFB,0xB9,0x4E,0x12,0x02,0x33,0x2E,0x17,0xFB,0xB9,0x5A,0x10,
+0x01,0x04,0x48,0x00,0x02,0x4A,0x84,0x08,0x48,0x00,0x02,0x47,0x5A,0x18,0xFA,0x12,
+0x2E,0x17,0xFB,0xB9,0x5A,0x18,0x03,0x04,0x48,0x00,0x02,0x24,0x2E,0x17,0xFB,0xB9,
+0x5A,0x10,0x08,0x04,0x48,0x00,0x02,0x39,0x44,0x00,0x00,0x33,0x48,0x00,0x02,0x35,
+0x5A,0x18,0x01,0x16,0x2E,0x17,0xFB,0xB9,0x5A,0x18,0x01,0x06,0x84,0x00,0x3C,0x0F,
+0xFF,0x15,0x84,0x06,0x2E,0x17,0xFB,0xB9,0x4E,0x13,0x02,0x27,0x84,0x01,0x3C,0x0F,
+0xFF,0x15,0x49,0xFF,0xBC,0x8E,0x84,0x07,0x48,0x00,0x02,0x1F,0x5A,0x18,0x0A,0x33,
+0x2E,0x17,0xFB,0xB9,0x4E,0x12,0x02,0x01,0x2E,0x17,0xFB,0xB9,0x5A,0x18,0x01,0x04,
+0x48,0x00,0x01,0xFD,0x2E,0x17,0xFB,0xB9,0x5A,0x18,0x02,0x04,0x48,0x00,0x01,0xF9,
+0x2E,0x17,0xFB,0xB9,0x5A,0x18,0x03,0x04,0x48,0x00,0x01,0xF5,0x2E,0x17,0xFB,0xB9,
+0x5A,0x18,0x04,0x04,0x48,0x00,0x01,0xF1,0x2E,0x17,0xFB,0xB9,0x5A,0x18,0x05,0x04,
+0x48,0x00,0x01,0xED,0x2E,0x17,0xFB,0xB9,0x5A,0x18,0x06,0x04,0x48,0x00,0x01,0xE9,
+0x2E,0x17,0xFB,0xB9,0x5A,0x10,0x07,0x04,0x48,0x00,0x01,0xEF,0xFA,0x03,0x48,0x00,
+0x01,0xEC,0x5A,0x18,0x06,0x12,0x2E,0x17,0xFB,0xB9,0x96,0x48,0x5A,0x18,0x01,0x04,
+0x3C,0x1F,0xFC,0xFD,0x2E,0x17,0xFB,0xB9,0x96,0x48,0x4E,0x13,0x01,0xDE,0x3C,0x1F,
+0xFC,0xFD,0x48,0x00,0x01,0xDA,0x5A,0x18,0x07,0x12,0x2E,0x17,0xFB,0xB9,0x96,0x48,
+0x5A,0x18,0x01,0x04,0x3C,0x1F,0xFC,0xFC,0x2E,0x17,0xFB,0xB9,0x96,0x48,0x4E,0x13,
+0x01,0xCC,0x3C,0x1F,0xFC,0xFC,0x48,0x00,0x01,0xC8,0x5A,0x18,0x0D,0x04,0x48,0x00,
+0x01,0xC4,0x5A,0x18,0x60,0x12,0x2E,0x17,0xFB,0xB9,0x5A,0x18,0x02,0x04,0x48,0x00,
+0x01,0xB2,0x2E,0x17,0xFB,0xB9,0x5A,0x10,0x01,0x04,0x48,0x00,0x01,0xB6,0x44,0x00,
+0x00,0x35,0x48,0x00,0x01,0xB2,0x5A,0x10,0xB7,0x04,0x48,0x00,0x01,0xAE,0x2E,0x17,
+0xFB,0xB9,0x96,0x48,0x5A,0x18,0x01,0x08,0x3E,0x17,0xF4,0x21,0x44,0x00,0x00,0x44,
+0x48,0x00,0x01,0xA3,0x2E,0x17,0xFB,0xB9,0x96,0x48,0x5A,0x18,0x02,0x08,0x3E,0x17,
+0xF4,0x21,0x44,0x00,0x00,0x44,0x48,0x00,0x01,0x98,0x2E,0x17,0xFB,0xB9,0x5A,0x10,
+0x03,0x04,0x48,0x00,0x01,0x92,0x44,0x00,0x00,0x45,0x48,0x00,0x01,0x8E,0x5A,0x10,
+0x01,0x04,0x48,0x00,0x01,0x8A,0x2E,0x17,0xFB,0xB9,0x5A,0x10,0x0A,0x04,0x48,0x00,
+0x01,0x84,0x2E,0x17,0xFB,0xBA,0x5A,0x18,0x08,0x13,0x5A,0x28,0x06,0x11,0x2E,0x37,
+0xFB,0xBB,0x2E,0x07,0xFB,0xBC,0x2E,0x17,0xFB,0xBD,0x40,0x00,0x20,0x08,0x88,0x03,
+0x40,0x10,0xC0,0x08,0x88,0x01,0x3C,0x0F,0xF8,0xED,0xFA,0x04,0x2E,0x17,0xFB,0xBA,
+0x5A,0x18,0x09,0x19,0x5A,0x28,0x04,0x17,0x2E,0x17,0xFB,0xBB,0x5A,0x18,0x01,0x04,
+0x48,0x00,0x01,0x5C,0x2E,0x17,0xFB,0xBB,0x5A,0x18,0x02,0x04,0x48,0x00,0x01,0x58,
+0x2E,0x17,0xFB,0xBB,0x5A,0x10,0x03,0x04,0x48,0x00,0x01,0x57,0xFA,0x07,0x48,0x00,
+0x01,0x54,0x2E,0x17,0xFB,0xBA,0x5A,0x18,0x10,0x33,0x5A,0x28,0x06,0x31,0x2E,0x17,
+0xFB,0xBB,0x5A,0x18,0x01,0x0D,0x2E,0x27,0xFB,0xBC,0x2E,0x17,0xFB,0xBD,0x40,0x10,
+0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF1,0xD9,0x48,0x00,0x01,0x3F,0x2E,0x17,0xFB,0xBB,
+0x5A,0x18,0x02,0x0D,0x2E,0x27,0xFB,0xBC,0x2E,0x17,0xFB,0xBD,0x40,0x10,0xA0,0x08,
+0x88,0x22,0x3C,0x1B,0xF1,0xD9,0x48,0x00,0x01,0x30,0x2E,0x17,0xFB,0xBB,0x5A,0x10,
+0x03,0x04,0x48,0x00,0x01,0x2A,0x2E,0x27,0xFB,0xBC,0x2E,0x17,0xFB,0xBD,0x40,0x10,
+0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF1,0xD8,0x48,0x00,0x01,0x1F,0x2E,0x17,0xFB,0xBA,
+0x5A,0x18,0x11,0x19,0x5A,0x28,0x04,0x17,0x2E,0x17,0xFB,0xBB,0x5A,0x18,0x01,0x04,
+0x48,0x00,0x01,0x10,0x2E,0x17,0xFB,0xBB,0x5A,0x18,0x02,0x04,0x48,0x00,0x01,0x0C,
+0x2E,0x17,0xFB,0xBB,0x5A,0x10,0x03,0x04,0x48,0x00,0x01,0x07,0xFA,0x0A,0x48,0x00,
+0x01,0x04,0x2E,0x17,0xFB,0xBA,0x5A,0x10,0x12,0x04,0x48,0x00,0x00,0xFE,0x5A,0x20,
+0x19,0x04,0x48,0x00,0x00,0xFA,0x2E,0x17,0xFB,0xBB,0x5A,0x18,0x01,0x46,0x2E,0x17,
+0xFB,0xBC,0x3E,0x17,0xE1,0xFC,0x2E,0x17,0xFB,0xBD,0x3E,0x17,0xE1,0xFE,0x2E,0x17,
+0xFB,0xBE,0x3E,0x17,0xE1,0xFD,0x2E,0x17,0xFB,0xBF,0x2E,0x27,0xFB,0xC0,0x40,0x10,
+0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF0,0xFD,0x2E,0x17,0xFB,0xC1,0x2E,0x27,0xFB,0xC2,
+0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF0,0xFC,0x2E,0x17,0xFB,0xC3,0x2E,0x27,
+0xFB,0xC4,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF1,0x00,0x2E,0x17,0xFB,0xC5,
+0x2E,0x27,0xFB,0xC6,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF1,0x01,0x2E,0x17,
+0xFB,0xC7,0x2E,0x27,0xFB,0xC8,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF1,0x02,
+0x2E,0x17,0xFB,0xC9,0x2E,0x27,0xFB,0xCA,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,
+0xF1,0x03,0x48,0x00,0x00,0xB2,0x2E,0x17,0xFB,0xBB,0x5A,0x18,0x02,0x04,0x48,0x00,
+0x00,0xAC,0x2E,0x17,0xFB,0xBB,0x5A,0x10,0x03,0x04,0x48,0x00,0x00,0xA6,0x2E,0x17,
+0xFB,0xBC,0x3E,0x17,0xE1,0xF0,0x2E,0x17,0xFB,0xBD,0x3E,0x17,0xE1,0xF1,0x2E,0x17,
+0xFB,0xBE,0x3E,0x17,0xE1,0xF2,0x2E,0x17,0xFB,0xBF,0x2E,0x27,0xFB,0xC0,0x40,0x10,
+0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF0,0xF6,0x2E,0x17,0xFB,0xC1,0x2E,0x27,0xFB,0xC2,
+0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF0,0xF7,0x2E,0x17,0xFB,0xC3,0x2E,0x27,
+0xFB,0xC4,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF0,0xF2,0x2E,0x17,0xFB,0xC5,
+0x2E,0x27,0xFB,0xC6,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF0,0xF3,0x2E,0x17,
+0xFB,0xC7,0x2E,0x27,0xFB,0xC8,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF0,0xF4,
+0x2E,0x17,0xFB,0xC9,0x2E,0x27,0xFB,0xCA,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,
+0xF0,0xF5,0x2E,0x17,0xFB,0xCB,0x3E,0x17,0xE1,0xF3,0x2E,0x17,0xFB,0xCC,0x3E,0x17,
+0xE1,0xF4,0x2E,0x17,0xFB,0xCD,0x3E,0x17,0xE1,0xF5,0xD5,0x56,0x84,0x0A,0xD5,0x54,
+0x84,0x09,0xD5,0x52,0x84,0x0B,0xD5,0x50,0x84,0x0C,0xD5,0x4E,0x84,0x0D,0xD5,0x4C,
+0x84,0x0E,0xD5,0x4A,0xFA,0x00,0xD5,0x48,0xFA,0x01,0xD5,0x46,0xFA,0x02,0xD5,0x44,
+0x84,0x02,0xD5,0x42,0x84,0x05,0xD5,0x40,0xFA,0x19,0xD5,0x3E,0xFA,0x1D,0xD5,0x3C,
+0xFA,0x1A,0xD5,0x3A,0xFA,0x1B,0xD5,0x38,0xFA,0x1C,0xD5,0x36,0xFA,0x1E,0xD5,0x34,
+0xFA,0x1F,0xD5,0x32,0x44,0x00,0x00,0x43,0xD5,0x2F,0x44,0x00,0x00,0x30,0xD5,0x2C,
+0x44,0x00,0x00,0x40,0xD5,0x29,0x44,0x00,0x00,0x41,0xD5,0x26,0x84,0x03,0xD5,0x24,
+0xFA,0x0B,0xD5,0x22,0x84,0x04,0xD5,0x20,0x84,0x0A,0xD5,0x1E,0x84,0x09,0xD5,0x1C,
+0x44,0x00,0x00,0x32,0xD5,0x19,0x84,0x0B,0xD5,0x17,0x84,0x0C,0xD5,0x15,0x84,0x0D,
+0xD5,0x13,0x84,0x0E,0xD5,0x11,0xFA,0x00,0xD5,0x0F,0xFA,0x01,0xD5,0x0D,0xFA,0x02,
+0xD5,0x0B,0x44,0x00,0x00,0x34,0xD5,0x08,0xFA,0x05,0xD5,0x06,0xFA,0x06,0xD5,0x04,
+0xFA,0x08,0xD5,0x02,0xFA,0x09,0x84,0x20,0x3C,0x1F,0xF8,0xB4,0x5A,0x08,0x01,0x1A,
+0x44,0x0F,0xFF,0xA7,0x3E,0x07,0xF6,0x40,0x84,0x05,0x3E,0x07,0xF6,0x41,0xFA,0x0C,
+0x3E,0x07,0xF6,0x42,0xFA,0x22,0xFA,0x10,0x3E,0x07,0xF6,0x43,0x3E,0x07,0xF6,0x44,
+0x3E,0x17,0xF6,0x45,0x3E,0x07,0xF6,0x46,0x3E,0x17,0xF6,0x47,0x84,0x08,0xD5,0x3B,
+0x5A,0x08,0x02,0x2E,0x2E,0x07,0xFC,0x49,0x44,0x1F,0xFF,0x81,0x3E,0x17,0xF6,0x40,
+0x3E,0x07,0xF6,0x41,0xC8,0x0C,0x44,0x10,0x00,0x5A,0x3E,0x17,0xF6,0x42,0x3E,0x07,
+0xF6,0x43,0xFA,0x1B,0x3E,0x07,0xF6,0x44,0x84,0x05,0xD5,0x25,0x44,0x0F,0xFF,0xA7,
+0x3E,0x07,0xF6,0x42,0x84,0x05,0x3E,0x07,0xF6,0x43,0xFA,0x0C,0x3E,0x07,0xF6,0x44,
+0xFA,0x22,0xFA,0x10,0x3E,0x07,0xF6,0x45,0x3E,0x17,0xF6,0x46,0x3E,0x07,0xF6,0x47,
+0x3E,0x17,0xF6,0x48,0x3E,0x07,0xF6,0x49,0x84,0x0A,0xD5,0x0D,0x5A,0x08,0x05,0x12,
+0x84,0x01,0x3E,0x07,0xF6,0x40,0x3E,0x17,0xF6,0x41,0x3E,0x17,0xF6,0x42,0x3E,0x07,
+0xF6,0x43,0x84,0x04,0x49,0xFF,0xF9,0x0D,0x49,0xFF,0xE7,0x53,0x48,0x00,0x03,0xAF,
+0x5A,0x08,0x29,0x25,0xFA,0x10,0x84,0x7F,0x84,0x47,0x3E,0x07,0xF6,0x40,0x3E,0x17,
+0xF6,0x41,0x3E,0x17,0xF6,0x42,0x3E,0x37,0xF6,0x43,0x3E,0x27,0xF6,0x44,0x3E,0x37,
+0xF6,0x45,0x3E,0x27,0xF6,0x46,0x84,0x6A,0xFA,0x42,0x3E,0x27,0xF6,0x47,0x3E,0x07,
+0xF6,0x48,0x3E,0x37,0xF6,0x49,0x3E,0x17,0xF6,0x4A,0x3E,0x27,0xF6,0x4B,0x3E,0x07,
+0xF6,0x4C,0x3E,0x17,0xF6,0x4D,0x84,0x0E,0xD5,0xD6,0x5A,0x08,0x2A,0x1C,0xFA,0x11,
+0x3E,0x07,0xF6,0x40,0x44,0x2F,0xFF,0x81,0x84,0x08,0xFA,0x6A,0x3E,0x27,0xF6,0x41,
+0x3E,0x07,0xF6,0x42,0x3E,0x17,0xF6,0x43,0x3E,0x37,0xF6,0x44,0x3E,0x27,0xF6,0x45,
+0x3E,0x07,0xF6,0x46,0x84,0x01,0x3E,0x17,0xF6,0x47,0x3E,0x07,0xF6,0x48,0x84,0x09,
+0xD5,0xBA,0x5A,0x08,0x2B,0x0E,0xFA,0x12,0x3E,0x07,0xF6,0x40,0x84,0x05,0x3E,0x07,
+0xF6,0x41,0x84,0x04,0x3E,0x07,0xF6,0x42,0x3E,0x17,0xF6,0x43,0xD5,0xAB,0x5A,0x08,
+0x43,0x05,0x2E,0x00,0x0A,0xD4,0xD5,0x5E,0x5A,0x08,0x2C,0x0C,0xFA,0x13,0x3E,0x07,
+0xF6,0x40,0x84,0x01,0x3E,0x07,0xF6,0x41,0x3E,0x17,0xF6,0x42,0x84,0x06,0xD5,0x98,
+0x5A,0x08,0x2E,0x06,0x3E,0x17,0xF6,0x40,0x84,0x01,0xD5,0x95,0x5A,0x08,0x2F,0x04,
+0x84,0x00,0xD5,0x48,0x5A,0x08,0x2D,0x2F,0xFA,0x18,0x3E,0x07,0xF6,0x40,0x84,0x62,
+0x84,0x00,0x84,0x26,0x84,0x4C,0x3E,0x37,0xF6,0x41,0x3E,0x07,0xF6,0x42,0x3E,0x17,
+0xF6,0x43,0x3E,0x27,0xF6,0x44,0x3E,0x37,0xF6,0x45,0x3E,0x07,0xF6,0x46,0x84,0x64,
+0x3E,0x17,0xF6,0x47,0x3E,0x27,0xF6,0x48,0x84,0x41,0x3E,0x27,0xF6,0x49,0x3E,0x07,
+0xF6,0x4A,0x3E,0x37,0xF6,0x4B,0x3E,0x37,0xF6,0x4C,0x3E,0x27,0xF6,0x4D,0x3E,0x07,
+0xF6,0x4E,0x84,0x03,0x3E,0x07,0xF6,0x4F,0x3E,0x17,0xF6,0x50,0xFA,0x01,0x48,0xFF,
+0xFF,0x63,0x5A,0x08,0x1B,0x0A,0x84,0x01,0x3E,0x07,0xFC,0x49,0x84,0x01,0x49,0xFF,
+0xE4,0x8A,0x48,0x00,0x03,0x0C,0x5A,0x08,0x30,0x11,0x49,0xFF,0xE4,0x81,0x5A,0x08,
+0x01,0x05,0x44,0x00,0x00,0x40,0xD5,0x06,0x49,0xFF,0xE4,0x7A,0xC8,0xB6,0x44,0x00,
+0x00,0x41,0x3E,0x07,0xF6,0x40,0xD5,0xB1,0x5A,0x08,0x36,0x06,0x49,0xFF,0xFA,0x47,
+0x48,0x00,0x02,0xF5,0x5A,0x08,0x03,0x04,0x84,0x00,0xD5,0x04,0x5A,0x08,0x04,0x07,
+0x84,0x02,0x3E,0x07,0xFC,0x49,0x48,0x00,0x02,0xEA,0x5A,0x08,0x06,0x07,0x84,0x01,
+0x3E,0x07,0xF6,0x2F,0x48,0x00,0x02,0xE3,0x5A,0x08,0x07,0x07,0x84,0x01,0x3E,0x07,
+0xF6,0x2E,0x48,0x00,0x02,0xDC,0x5A,0x08,0x08,0x07,0x84,0x01,0x3E,0x07,0xF6,0x2D,
+0x48,0x00,0x02,0xD5,0x5A,0x08,0x09,0x07,0x84,0x01,0x3E,0x07,0xF6,0x2C,0x48,0x00,
+0x02,0xCE,0x5A,0x08,0x0A,0x07,0x84,0x01,0x3E,0x07,0xF6,0x2B,0x48,0x00,0x02,0xC7,
+0x5A,0x08,0x0B,0x06,0x84,0x01,0x3E,0x07,0xF6,0x29,0xD5,0x0F,0x5A,0x08,0x0C,0x09,
+0x84,0x01,0x3E,0x07,0xF6,0x2A,0x3E,0x07,0xF6,0x28,0x48,0x00,0x02,0xB8,0x5A,0x08,
+0x0D,0x07,0x84,0x01,0x3E,0x07,0xF6,0x2A,0x84,0x00,0xD5,0xF6,0x5A,0x08,0x32,0x04,
+0x84,0x01,0xD5,0x04,0x5A,0x08,0x33,0x07,0x84,0x02,0x3E,0x07,0xE3,0xB8,0x48,0x00,
+0x02,0xA6,0x5A,0x08,0x3C,0x35,0x2E,0x57,0xFB,0xB9,0x2E,0x47,0xFB,0xBB,0x2E,0x07,
+0xFB,0xBA,0x40,0x42,0x20,0x08,0x2E,0x37,0xFB,0xBD,0x2E,0x27,0xFB,0xBC,0xFF,0x07,
+0x84,0x26,0x97,0x68,0x96,0xD8,0x96,0x90,0x84,0x00,0x99,0xE1,0xE0,0xE1,0xE9,0x08,
+0x8C,0x21,0x38,0x93,0x04,0x00,0x96,0x49,0x88,0x09,0x96,0x00,0xD5,0xF8,0x4E,0x03,
+0x02,0x86,0x5A,0x50,0x02,0x04,0x48,0x00,0x02,0x82,0x40,0x31,0xA0,0x08,0xFE,0x9F,
+0x44,0x12,0x10,0x00,0x88,0x41,0x96,0x41,0xE2,0x24,0x4E,0xF2,0x02,0x78,0x9C,0x47,
+0x38,0x13,0x04,0x00,0x38,0x11,0x00,0x08,0x8C,0x01,0xD5,0xF6,0x5A,0x08,0x3D,0x29,
+0x2E,0x07,0xFB,0xBA,0x2E,0x17,0xFB,0xB9,0x40,0x00,0x20,0x08,0x2E,0x27,0xFB,0xBC,
+0xFE,0x0F,0x2E,0x17,0xFB,0xBB,0x40,0x21,0x20,0x08,0xFE,0x8F,0x2E,0x17,0xFB,0xB8,
+0x44,0x32,0x10,0x00,0x96,0x48,0x3E,0x17,0xF6,0x40,0x88,0x43,0x84,0x20,0x44,0x42,
+0x18,0x30,0x96,0xC9,0xE2,0x60,0xE8,0x08,0x9C,0xC9,0x38,0x11,0x04,0x00,0x38,0x12,
+0x0C,0x08,0x80,0x23,0xD5,0xF7,0x8C,0x01,0x96,0x01,0x48,0xFF,0xFE,0x95,0x5A,0x08,
+0x3E,0x31,0x2E,0x07,0xFB,0xB9,0x5A,0x00,0x5A,0x04,0x48,0x00,0x02,0x40,0x2E,0x07,
+0xFB,0xBA,0x5A,0x00,0xA5,0x04,0x48,0x00,0x02,0x3A,0xFA,0x00,0x49,0xFF,0xD9,0xA3,
+0x44,0x11,0x00,0x00,0x44,0x20,0x01,0x00,0x44,0x02,0x10,0x00,0x49,0xFF,0xD9,0xC4,
+0x49,0xFF,0xDA,0x3E,0x40,0x10,0x60,0x09,0x10,0x1F,0x80,0x04,0x40,0x10,0x40,0x09,
+0x10,0x1F,0x80,0x05,0x40,0x10,0x20,0x09,0x10,0x1F,0x80,0x06,0x10,0x0F,0x80,0x07,
+0x44,0x11,0x0F,0xFC,0xB0,0x01,0x84,0x44,0x49,0xFF,0xD9,0xAE,0x48,0x00,0x02,0x17,
+0x5A,0x08,0x3F,0x22,0x2E,0x07,0xFB,0xB9,0x5A,0x08,0x01,0x12,0x2E,0x07,0xFB,0xBA,
+0x96,0x00,0x5A,0x00,0x01,0x08,0x5A,0x00,0x02,0x04,0x48,0x00,0x02,0x08,0x84,0x04,
+0xD5,0x02,0x84,0x02,0x3E,0x07,0xE2,0xCD,0x48,0x00,0x02,0x01,0x44,0x00,0x00,0x35,
+0x3E,0x07,0xF6,0x40,0x2E,0x07,0xE2,0xCD,0x96,0x00,0x3E,0x07,0xF6,0x41,0x84,0x02,
+0x48,0xFF,0xFE,0x42,0x5A,0x08,0x0E,0x0D,0x2E,0x07,0xEF,0xAA,0x58,0x00,0x00,0x01,
+0x3E,0x07,0xEF,0xAA,0x2E,0x07,0xEF,0xAA,0x58,0x00,0x00,0x04,0xD5,0x0D,0x5A,0x08,
+0x10,0x13,0x2E,0x07,0xEF,0xAA,0x58,0x00,0x00,0x01,0x3E,0x07,0xEF,0xAA,0x2E,0x07,
+0xEF,0xAA,0x58,0x00,0x00,0x02,0x3E,0x07,0xEF,0xAA,0x2E,0x07,0xEF,0xAA,0x54,0x00,
+0x00,0xF7,0xD5,0x15,0x5A,0x08,0x11,0x0E,0x2E,0x07,0xEF,0xAB,0x5A,0x08,0x01,0x06,
+0x44,0x0F,0xFF,0x91,0x48,0xFF,0xFE,0xCF,0x44,0x0F,0xFF,0x90,0x48,0xFF,0xFE,0xCB,
+0x5A,0x08,0x12,0x0A,0x2E,0x07,0xEF,0xAA,0x58,0x00,0x00,0x08,0x3E,0x07,0xEF,0xAA,
+0x48,0x00,0x01,0xBD,0x5A,0x08,0x13,0x77,0x3C,0x0D,0xB7,0x75,0x46,0x10,0x0F,0xF0,
+0x92,0x18,0x3E,0x07,0xF6,0x40,0x3C,0x0D,0xB7,0x75,0xFE,0x0E,0x92,0x10,0x3E,0x07,
+0xF6,0x41,0x3C,0x2D,0xB7,0x75,0x44,0x00,0xFF,0x00,0xFE,0x86,0x92,0x48,0x3E,0x27,
+0xF6,0x42,0x3C,0x2D,0xB7,0x75,0x96,0x90,0x3E,0x27,0xF6,0x43,0x3C,0x2D,0xB7,0x76,
+0x92,0x58,0x3E,0x27,0xF6,0x44,0x3C,0x2D,0xB7,0x76,0xFE,0x8E,0x92,0x50,0x3E,0x27,
+0xF6,0x45,0x3C,0x2D,0xB7,0x76,0xFE,0x86,0x92,0x48,0x3E,0x27,0xF6,0x46,0x3C,0x2D,
+0xB7,0x76,0x96,0x90,0x3E,0x27,0xF6,0x47,0x3C,0x2D,0xB7,0x77,0x92,0x58,0x3E,0x27,
+0xF6,0x48,0x3C,0x2D,0xB7,0x77,0xFE,0x8E,0x92,0x50,0x3E,0x27,0xF6,0x49,0x3C,0x2D,
+0xB7,0x77,0xFE,0x86,0x92,0x48,0x3E,0x27,0xF6,0x4A,0x3C,0x2D,0xB7,0x77,0x96,0x90,
+0x3E,0x27,0xF6,0x4B,0x3C,0x2D,0xB7,0x78,0x92,0x58,0x3E,0x27,0xF6,0x4C,0x3C,0x2D,
+0xB7,0x78,0xFE,0x8E,0x92,0x50,0x3E,0x27,0xF6,0x4D,0x3C,0x2D,0xB7,0x78,0xFE,0x86,
+0x92,0x48,0x3E,0x27,0xF6,0x4E,0x3C,0x2D,0xB7,0x78,0x96,0x90,0x3E,0x27,0xF6,0x4F,
+0x3C,0x2D,0xB7,0x79,0x92,0x58,0x3E,0x27,0xF6,0x50,0x3C,0x2D,0xB7,0x79,0xFE,0x56,
+0x92,0x30,0x3E,0x17,0xF6,0x51,0x3C,0x1D,0xB7,0x79,0xFE,0x0E,0x92,0x08,0x3E,0x07,
+0xF6,0x52,0x3C,0x0D,0xB7,0x79,0x96,0x00,0x3E,0x07,0xF6,0x53,0xFA,0x04,0x48,0xFF,
+0xFD,0x93,0x5A,0x08,0x15,0x07,0x84,0x09,0x3E,0x07,0xF6,0x40,0x84,0x01,0xD5,0x07,
+0x5A,0x08,0x16,0x0B,0x84,0x09,0x3E,0x07,0xF6,0x40,0x84,0x02,0x3E,0x07,0xF6,0x41,
+0x2E,0x07,0xF6,0x3B,0xD5,0x0B,0x5A,0x08,0x17,0x10,0x84,0x09,0x3E,0x07,0xF6,0x40,
+0x84,0x03,0x3E,0x07,0xF6,0x41,0x2E,0x07,0xF6,0x39,0x96,0x1F,0x3E,0x07,0xF6,0x42,
+0x84,0x03,0x48,0xFF,0xFD,0x71,0x5A,0x08,0x18,0x5B,0xFA,0x21,0x3E,0x17,0xF6,0x40,
+0x84,0x21,0x3E,0x17,0xF6,0x41,0x2E,0x27,0xE1,0xFC,0x84,0x20,0x3E,0x17,0xF6,0x42,
+0x3E,0x07,0xF6,0x43,0x3E,0x27,0xF6,0x44,0x2E,0x27,0xE1,0xFE,0x3E,0x27,0xF6,0x45,
+0x2E,0x27,0xE1,0xFD,0x3E,0x27,0xF6,0x46,0x3C,0x23,0xF0,0xFD,0x40,0x31,0x20,0x09,
+0x96,0x90,0x3E,0x37,0xF6,0x47,0x3E,0x27,0xF6,0x48,0x3C,0x23,0xF0,0xFC,0x40,0x31,
+0x20,0x09,0x96,0x90,0x3E,0x37,0xF6,0x49,0x3E,0x27,0xF6,0x4A,0x3C,0x23,0xF1,0x00,
+0x40,0x31,0x20,0x09,0x96,0x90,0x3E,0x37,0xF6,0x4B,0x3E,0x27,0xF6,0x4C,0x3C,0x23,
+0xF1,0x01,0x40,0x31,0x20,0x09,0x96,0x90,0x3E,0x37,0xF6,0x4D,0x3E,0x27,0xF6,0x4E,
+0x3C,0x23,0xF1,0x02,0x40,0x31,0x20,0x09,0x96,0x90,0x3E,0x37,0xF6,0x4F,0x3E,0x27,
+0xF6,0x50,0x3C,0x23,0xF1,0x03,0x40,0x31,0x20,0x09,0x96,0x90,0x3E,0x37,0xF6,0x51,
+0x3E,0x27,0xF6,0x52,0x3E,0x17,0xF6,0x53,0x3E,0x17,0xF6,0x54,0x3E,0x17,0xF6,0x55,
+0x3E,0x17,0xF6,0x56,0x3E,0x17,0xF6,0x57,0x48,0xFF,0xFD,0x16,0x5A,0x08,0x19,0x39,
+0xFA,0x01,0x3E,0x07,0xF6,0x40,0x84,0x02,0x3E,0x07,0xF6,0x41,0xFA,0x28,0x84,0x00,
+0x3E,0x07,0xF6,0x42,0x3E,0x17,0xF6,0x43,0x3E,0x07,0xF6,0x44,0x3E,0x07,0xF6,0x45,
+0x3E,0x07,0xF6,0x46,0x3E,0x07,0xF6,0x47,0x3E,0x07,0xF6,0x48,0x3E,0x07,0xF6,0x49,
+0x3E,0x07,0xF6,0x4A,0x3E,0x07,0xF6,0x4B,0x3E,0x07,0xF6,0x4C,0x3E,0x07,0xF6,0x4D,
+0x3E,0x07,0xF6,0x4E,0x3E,0x07,0xF6,0x4F,0x3E,0x07,0xF6,0x50,0x3E,0x07,0xF6,0x51,
+0x3E,0x07,0xF6,0x52,0x3E,0x07,0xF6,0x53,0x3E,0x07,0xF6,0x54,0x3E,0x07,0xF6,0x55,
+0x3E,0x07,0xF6,0x56,0x3E,0x07,0xF6,0x57,0xFA,0x08,0x48,0xFF,0xFC,0xDD,0x5A,0x08,
+0x1A,0x63,0xFA,0x01,0x3E,0x07,0xF6,0x40,0x84,0x03,0x3E,0x07,0xF6,0x41,0x84,0x20,
+0xFA,0x08,0x3E,0x17,0xF6,0x42,0x3E,0x07,0xF6,0x43,0x2E,0x07,0xE1,0xF0,0x3E,0x07,
+0xF6,0x44,0x2E,0x07,0xE1,0xF1,0x3E,0x07,0xF6,0x45,0x2E,0x07,0xE1,0xF2,0x3E,0x07,
+0xF6,0x46,0x3C,0x03,0xF0,0xF6,0x40,0x20,0x20,0x09,0x96,0x00,0x3E,0x27,0xF6,0x47,
+0x3E,0x07,0xF6,0x48,0x3C,0x03,0xF0,0xF7,0x40,0x20,0x20,0x09,0x96,0x00,0x3E,0x27,
+0xF6,0x49,0x3E,0x07,0xF6,0x4A,0x3C,0x03,0xF0,0xF2,0x40,0x20,0x20,0x09,0x96,0x00,
+0x3E,0x27,0xF6,0x4B,0x3E,0x07,0xF6,0x4C,0x3C,0x03,0xF0,0xF3,0x40,0x20,0x20,0x09,
+0x96,0x00,0x3E,0x27,0xF6,0x4D,0x3E,0x07,0xF6,0x4E,0x3C,0x03,0xF0,0xF4,0x40,0x20,
+0x20,0x09,0x96,0x00,0x3E,0x27,0xF6,0x4F,0x3E,0x07,0xF6,0x50,0x3C,0x03,0xF0,0xF5,
+0x40,0x20,0x20,0x09,0x96,0x00,0x3E,0x27,0xF6,0x51,0x3E,0x07,0xF6,0x52,0x2E,0x07,
+0xE1,0xF3,0x3E,0x07,0xF6,0x53,0x2E,0x07,0xE1,0xF4,0x3E,0x07,0xF6,0x54,0x2E,0x07,
+0xE1,0xF5,0x3E,0x07,0xF6,0x55,0x3E,0x17,0xF6,0x56,0xFA,0x07,0x3E,0x17,0xF6,0x57,
+0x48,0xFF,0xFC,0x7A,0x5A,0x08,0x31,0x1A,0x84,0x1E,0x3E,0x07,0xF6,0x40,0x84,0x01,
+0x3E,0x07,0xF6,0x41,0x84,0x02,0x3E,0x07,0xF6,0x42,0x84,0x03,0x3E,0x07,0xF6,0x43,
+0x84,0x04,0x3E,0x07,0xF6,0x44,0x84,0x05,0x3E,0x07,0xF6,0x45,0x84,0x06,0x3E,0x07,
+0xF6,0x46,0x84,0x07,0x48,0xFF,0xFC,0x60,0x5A,0x08,0x44,0x0C,0x84,0x00,0x49,0xFF,
+0xE4,0x20,0x84,0x01,0x3C,0x0F,0xFF,0x13,0x84,0x03,0x3C,0x0F,0xFD,0x29,0xD5,0x06,
+0x5A,0x08,0x45,0x05,0x84,0x00,0x3C,0x0F,0xFF,0x13,0x84,0x01,0x3C,0x0F,0xF8,0xB4,
+0xFC,0xC1,0x5A,0x20,0x03,0x04,0x48,0xFF,0xF8,0xF0,0x84,0x00,0x3C,0x0F,0xF8,0xB4,
+0x48,0xFF,0xFD,0x53,0x5A,0x28,0x03,0x07,0x84,0x00,0x3C,0x0F,0xF8,0xB4,0x48,0xFF,
+0xFD,0xDB,0x44,0x00,0x00,0x3F,0x48,0xFF,0xF8,0xE2,0x5A,0x28,0x03,0x06,0x3C,0x0F,
+0xF8,0xB4,0x48,0xFF,0xFD,0xA0,0x44,0x00,0x00,0x3E,0x48,0xFF,0xF8,0xD8,0x5A,0x28,
+0x03,0x07,0x84,0x00,0x3C,0x0F,0xF8,0xB4,0x48,0xFF,0xFD,0x6C,0x44,0x00,0x00,0x3D,
+0x48,0xFF,0xF8,0xCD,0xFC,0x00,0x44,0x04,0x10,0x04,0x44,0x10,0x00,0x55,0xAE,0x40,
+0x44,0x1F,0xFF,0xAA,0xAE,0x41,0x44,0x10,0x00,0x66,0xAE,0x42,0x84,0x01,0x49,0xFF,
+0xB5,0x40,0xFC,0x80,0x44,0x14,0x10,0x08,0xB6,0x01,0x44,0x14,0x80,0x04,0xA6,0x0B,
+0x92,0x01,0x96,0x06,0xC0,0xFD,0x44,0x04,0x80,0x07,0x84,0x22,0xAE,0x40,0xDD,0x9E,
+0xFC,0x40,0x44,0x37,0x20,0xC0,0x46,0x10,0x20,0x00,0xB4,0x43,0x44,0x47,0x20,0xC4,
+0xFE,0x57,0xB6,0x23,0xB4,0x24,0x44,0x24,0x10,0x10,0x92,0x34,0x40,0x10,0xD0,0x08,
+0xFE,0x57,0xB6,0x24,0x44,0x17,0x20,0xC8,0x40,0x00,0x30,0x08,0xB4,0x41,0x84,0xC1,
+0x92,0x48,0x40,0x21,0x20,0x08,0xB6,0x41,0xB4,0x81,0x46,0x2F,0xCF,0xFF,0x50,0x21,
+0x0F,0xFF,0xFF,0x16,0xB6,0x81,0xB4,0xA1,0x46,0x48,0x00,0x00,0xFF,0x67,0xB6,0xA1,
+0x44,0x57,0x20,0xD0,0x44,0x70,0xA0,0x00,0xB4,0x25,0x44,0x94,0x10,0x00,0x94,0x49,
+0x92,0x21,0xB6,0x25,0x44,0x57,0x20,0xD4,0x40,0x10,0x30,0x09,0xB4,0x05,0x92,0x14,
+0x40,0x00,0x50,0x08,0xFE,0x0F,0xB6,0x05,0x44,0x07,0x20,0xD8,0xB4,0x20,0x92,0x28,
+0x40,0x10,0xA0,0x08,0xFE,0x77,0xB6,0x20,0xB4,0x20,0xFE,0x8E,0xB6,0x40,0xB4,0x20,
+0x44,0x27,0x20,0xDC,0xFF,0x0F,0xB6,0x80,0xB4,0x22,0x46,0x0F,0x0F,0xFF,0x92,0x31,
+0x40,0x10,0xC4,0x08,0xFE,0x7F,0xB6,0x22,0xB4,0x22,0x50,0x00,0x0F,0xFF,0xFE,0x0E,
+0x44,0x14,0x80,0x84,0xB6,0x02,0xB4,0x41,0x44,0x0D,0xFF,0xFF,0xFE,0x16,0xB6,0x01,
+0xB4,0x23,0x46,0x0F,0xFF,0x0F,0x50,0x00,0x0F,0xFF,0xFE,0x0E,0x44,0x11,0x00,0x00,
+0xFE,0x0F,0xB6,0x03,0x84,0x00,0x10,0x64,0x80,0x02,0x10,0x04,0x80,0x00,0x49,0xFF,
+0xFF,0x73,0x84,0x0B,0x49,0xFF,0xFF,0x80,0x80,0x06,0x49,0xFF,0xFF,0x7D,0xFA,0x10,
+0x49,0xFF,0xFF,0x7A,0x84,0x00,0x49,0xFF,0xFF,0x77,0x00,0x04,0x80,0x03,0x54,0x00,
+0x00,0xFE,0x10,0x04,0x80,0x03,0x84,0x00,0x49,0xFF,0xFF,0x6E,0x44,0x04,0x10,0x0C,
+0x44,0x14,0x80,0x07,0xB6,0xE0,0x84,0x02,0xAE,0x08,0x44,0x14,0x80,0x06,0xAE,0x08,
+0x44,0x04,0x10,0x13,0xAF,0x80,0xFC,0xC0,0xFC,0x00,0x49,0xFF,0xE0,0x99,0x5A,0x08,
+0x01,0x0B,0x84,0x00,0x49,0xFF,0xFF,0x66,0x49,0xFF,0xB5,0xA4,0x84,0x00,0x49,0xFF,
+0xE0,0x92,0xD5,0x00,0xFC,0x80,0xC0,0x06,0x5A,0x08,0x01,0x08,0x44,0x00,0x00,0x60,
+0xDD,0x9E,0x44,0x00,0x00,0x58,0xDD,0x9E,0x44,0x00,0x00,0xFF,0xDD,0x9E,0xFC,0x01,
+0x2E,0x17,0xF6,0x3B,0xC9,0x0A,0x2E,0x17,0xF6,0x3A,0xC9,0x0A,0x2E,0x17,0xF6,0x39,
+0xC1,0x0E,0x44,0x0F,0xFF,0xAD,0xD5,0x06,0x44,0x0F,0xFF,0xAB,0xD5,0x03,0x44,0x0F,
+0xFF,0xAC,0x10,0x0F,0x80,0x00,0x10,0x1F,0x80,0x01,0xD5,0x07,0x44,0x1F,0xFF,0xAA,
+0x10,0x1F,0x80,0x00,0x10,0x0F,0x80,0x01,0x84,0x00,0x84,0x28,0x10,0x0F,0x80,0x02,
+0x10,0x1F,0x80,0x03,0x10,0x0F,0x80,0x04,0x10,0x0F,0x80,0x05,0x10,0x0F,0x80,0x06,
+0x84,0x27,0x80,0x1F,0x49,0xFF,0xF2,0xD0,0xFC,0x81,0xFC,0x36,0x2E,0x17,0xF6,0x3B,
+0xC9,0x0A,0x2E,0x17,0xF6,0x3A,0xC9,0x0A,0x2E,0x17,0xF6,0x39,0xC1,0x0E,0x44,0x0F,
+0xFF,0xAD,0xD5,0x06,0x44,0x0F,0xFF,0xAB,0xD5,0x03,0x44,0x0F,0xFF,0xAC,0x10,0x0F,
+0x80,0x04,0x10,0x1F,0x80,0x05,0xD5,0x07,0x44,0x1F,0xFF,0xAA,0x10,0x1F,0x80,0x04,
+0x10,0x0F,0x80,0x05,0x3C,0x37,0xF7,0x9F,0x84,0x00,0x10,0x0F,0x80,0x06,0x44,0x0F,
+0xFF,0xAA,0x3C,0x27,0xF7,0x99,0x10,0x0F,0x80,0x07,0x40,0x01,0xA0,0x0A,0x96,0x01,
+0x94,0x44,0x40,0x01,0x20,0x0A,0x10,0x3F,0x80,0x09,0x96,0x1F,0x3C,0x37,0xF7,0x94,
+0xFE,0x0F,0x10,0x0F,0x80,0x08,0x10,0x2F,0x80,0x0A,0x40,0x01,0xA0,0x0A,0x3C,0x27,
+0xF7,0xA5,0x96,0x01,0x94,0x44,0x40,0x01,0x20,0x0A,0x10,0x3F,0x80,0x0C,0x96,0x1F,
+0x3C,0x37,0xF7,0x9B,0xFE,0x0F,0x10,0x0F,0x80,0x0B,0x10,0x2F,0x80,0x0D,0x40,0x01,
+0xA0,0x0A,0x3C,0x27,0xF7,0x9D,0x96,0x01,0x94,0x44,0x40,0x01,0x20,0x0A,0x10,0x3F,
+0x80,0x0F,0x96,0x1F,0x3C,0x37,0xF7,0x9A,0xFE,0x0F,0x10,0x0F,0x80,0x0E,0x10,0x2F,
+0x80,0x10,0x40,0x01,0xA0,0x0A,0x3C,0x27,0xF7,0xA2,0x96,0x01,0x94,0x44,0x40,0x01,
+0x20,0x0A,0x10,0x3F,0x80,0x12,0x96,0x1F,0x3C,0x37,0xF7,0xB2,0xFE,0x0F,0x10,0x0F,
+0x80,0x11,0x10,0x2F,0x80,0x13,0x40,0x01,0xA0,0x0A,0x3C,0x27,0xF7,0xB6,0x96,0x01,
+0x94,0x44,0x40,0x01,0x20,0x0A,0x10,0x3F,0x80,0x15,0x96,0x1F,0x3C,0x37,0xF7,0xB3,
+0xFE,0x0F,0x10,0x0F,0x80,0x14,0x10,0x2F,0x80,0x16,0x40,0x01,0xA0,0x0A,0x3C,0x27,
+0xF7,0xB7,0x96,0x01,0x94,0x44,0x40,0x01,0x20,0x0A,0x10,0x3F,0x80,0x18,0x96,0x1F,
+0x3C,0x37,0xF7,0xB4,0xFE,0x0F,0x10,0x0F,0x80,0x17,0x10,0x2F,0x80,0x19,0x40,0x01,
+0xA0,0x0A,0x3C,0x27,0xF7,0xB8,0x96,0x01,0x94,0x44,0x40,0x01,0x20,0x0A,0x96,0x1F,
+0x10,0x3F,0x80,0x1B,0x3C,0x37,0xF7,0xB5,0xFE,0x0F,0x10,0x0F,0x80,0x1A,0x10,0x2F,
+0x80,0x1C,0x40,0x01,0xA0,0x0A,0x3C,0x27,0xF7,0xB9,0x96,0x01,0x94,0x44,0x40,0x01,
+0x20,0x0A,0x96,0x1F,0x10,0x3F,0x80,0x1E,0x3C,0x37,0xF7,0x9C,0xFE,0x0F,0x10,0x0F,
+0x80,0x1D,0x10,0x2F,0x80,0x1F,0x40,0x01,0xA0,0x0A,0x3C,0x27,0xF7,0xA3,0x96,0x01,
+0x94,0x44,0x40,0x01,0x20,0x0A,0x96,0x1F,0x10,0x3F,0x80,0x21,0x3C,0x37,0xF7,0xA0,
+0xFE,0x0F,0x10,0x0F,0x80,0x20,0x10,0x2F,0x80,0x22,0x40,0x01,0xA0,0x0A,0x3C,0x27,
+0xF7,0x95,0x96,0x01,0x94,0x44,0x40,0x01,0x20,0x0A,0x96,0x1F,0xFE,0x0F,0x10,0x0F,
+0x80,0x23,0x2E,0x07,0xEF,0x12,0x10,0x3F,0x80,0x24,0x10,0x0F,0x80,0x26,0x2E,0x07,
+0xEF,0x13,0x3C,0x37,0xF7,0x98,0x10,0x0F,0x80,0x27,0x2E,0x07,0xEF,0x11,0x10,0x2F,
+0x80,0x25,0x10,0x0F,0x80,0x28,0x3C,0x27,0xF7,0x9E,0x40,0x01,0xA0,0x0A,0x96,0x01,
+0x94,0x44,0x40,0x01,0x20,0x0A,0x96,0x1F,0xFE,0x0F,0x10,0x0F,0x80,0x29,0x10,0x3F,
+0x80,0x2A,0x10,0x2F,0x80,0x2B,0xB0,0x41,0x84,0x00,0x44,0x72,0x2D,0x50,0x44,0x62,
+0x2D,0xAC,0x38,0x53,0x81,0x11,0x38,0x43,0x01,0x11,0x40,0x22,0xA0,0x0A,0x96,0x91,
+0x94,0xD4,0x40,0x22,0x20,0x0A,0x96,0x9F,0xFE,0x9F,0x8C,0x01,0x10,0x20,0x80,0x28,
+0x10,0x50,0x80,0x29,0x10,0x40,0x80,0x2A,0x8C,0x23,0x5A,0x08,0x28,0xEC,0x3C,0x03,
+0xF7,0x96,0x40,0x10,0x20,0x09,0x10,0x0F,0x80,0xA5,0x84,0x00,0x10,0x1F,0x80,0xA4,
+0x10,0x0F,0x80,0xA6,0x10,0x0F,0x80,0xA7,0x10,0x0F,0x80,0xA8,0x10,0x0F,0x80,0xA9,
+0x10,0x0F,0x80,0xAA,0x10,0x0F,0x80,0xAB,0x10,0x0F,0x80,0xAC,0x44,0x10,0x00,0xA9,
+0xB0,0x01,0x49,0xFF,0xF1,0xA1,0xFC,0xB6,0xFC,0x00,0x44,0x00,0x00,0x64,0x49,0xFF,
+0xA7,0xF2,0x44,0x00,0x23,0x56,0x49,0xFF,0xA7,0xF9,0x44,0x00,0x1F,0x57,0x49,0xFF,
+0xA8,0x00,0x44,0x00,0x01,0x90,0x49,0xFF,0xA8,0x07,0xFC,0x80,0xFC,0x40,0x51,0xFF,
+0xFA,0xE0,0x84,0x20,0xFA,0x50,0xB0,0x10,0x49,0x00,0x10,0x86,0xB1,0x98,0x44,0x02,
+0x02,0x24,0x80,0x26,0x3A,0x20,0x14,0x04,0x3A,0x20,0x94,0x24,0x3A,0x20,0x14,0x00,
+0xB1,0xE0,0x44,0x02,0x02,0x44,0x3A,0x20,0x94,0x20,0x80,0x27,0x3A,0x20,0x14,0x04,
+0x3A,0x20,0x94,0x24,0x3A,0x20,0x14,0x00,0x3A,0x20,0x94,0x20,0x44,0x12,0x02,0x64,
+0xB0,0x0C,0x3A,0x20,0x94,0x00,0x44,0x12,0x02,0x74,0x3A,0x20,0x14,0x20,0xB0,0x07,
+0x3A,0x20,0x8C,0x00,0x3A,0x20,0x0C,0x20,0x44,0x02,0x02,0x7C,0x50,0x8F,0x80,0x24,
+0x3A,0x20,0x10,0x00,0x3A,0x24,0x10,0x20,0x85,0x40,0x39,0xC4,0x28,0x00,0x40,0x0E,
+0x00,0x13,0xC0,0x13,0x5A,0x00,0x03,0x12,0xB0,0x10,0x38,0x00,0x72,0x02,0xC8,0x0D,
+0x38,0x03,0x72,0x02,0x40,0x90,0x04,0x08,0x49,0xFF,0xE0,0x74,0x49,0xFF,0xE3,0x21,
+0xB0,0x50,0x88,0x09,0x38,0x00,0xF2,0x0A,0x8D,0x41,0x5A,0xA8,0x0C,0xE8,0x84,0xC0,
+0xB0,0x10,0x38,0x00,0x1A,0x02,0xF0,0x81,0xC8,0x07,0x8C,0xC1,0x5A,0x68,0x08,0xFA,
+0x51,0xFF,0x85,0x20,0xFC,0xC0,0xB0,0x07,0x87,0x80,0x38,0xA3,0x00,0x00,0x40,0x95,
+0x04,0x08,0x40,0x04,0x80,0x13,0xF0,0x82,0x94,0x01,0xF0,0x83,0x40,0xFE,0x24,0x07,
+0xE8,0xED,0x4F,0xC3,0x00,0x13,0x38,0x83,0x9A,0x01,0x49,0xFF,0xA6,0x92,0x44,0x20,
+0x01,0x20,0x80,0x28,0x42,0x10,0x08,0x73,0xB0,0x0C,0x96,0x49,0x38,0x20,0x19,0x01,
+0xB0,0x28,0x92,0x42,0x49,0xFF,0xA6,0xEC,0x4D,0xC5,0x40,0x14,0x38,0x83,0x9A,0x01,
+0x49,0xFF,0xA6,0x7F,0x44,0x20,0x01,0x20,0x50,0x14,0x02,0x40,0x42,0x10,0x08,0x73,
+0xB0,0x0C,0x96,0x49,0x38,0x20,0x19,0x01,0xB0,0x28,0x92,0x42,0x49,0xFF,0xA6,0xD8,
+0x40,0x14,0xF0,0x01,0x8E,0x21,0x94,0x4C,0x40,0x0E,0x00,0x13,0x97,0x49,0x40,0x1E,
+0x28,0x06,0x94,0xC4,0x84,0x40,0xF1,0x84,0x50,0x8F,0x80,0xA0,0xF4,0x04,0x40,0x11,
+0x04,0x09,0xC4,0x03,0x88,0x23,0xD5,0x03,0x88,0x25,0x96,0x49,0x38,0x44,0x06,0x02,
+0x54,0xF2,0x00,0x1F,0x5A,0xF0,0x1F,0x1A,0x40,0xF2,0x18,0x09,0x54,0xF7,0x80,0x1F,
+0x5A,0xF0,0x1F,0x14,0x04,0xFF,0x80,0x01,0x39,0xE7,0x81,0x01,0x50,0xFF,0x5D,0xEB,
+0x5C,0xF7,0x82,0x13,0xE9,0x06,0x50,0xFF,0x64,0x27,0x5C,0xF7,0x82,0x13,0xE8,0x05,
+0x50,0x42,0x00,0x41,0x38,0x44,0x06,0x0A,0x38,0x44,0x06,0x02,0x40,0xF2,0x48,0x09,
+0x54,0xF7,0x80,0x1F,0x5A,0xF0,0x1F,0x21,0x40,0xF2,0x30,0x09,0x54,0xF7,0x80,0x1F,
+0x5A,0xF0,0x1F,0x1B,0x04,0xFF,0x80,0x02,0x05,0xEF,0x80,0x01,0x40,0xF0,0x3C,0x00,
+0x40,0xF7,0x80,0x13,0x39,0xEF,0x3D,0x01,0x50,0xFF,0x5D,0xEB,0x5C,0xF7,0x82,0x13,
+0xE9,0x06,0x50,0xFF,0x64,0x27,0x5C,0xF7,0x82,0x13,0xE8,0x06,0x44,0xF4,0x10,0x00,
+0x88,0x8F,0x38,0x44,0x06,0x0A,0xF1,0x03,0x8C,0x42,0x88,0x01,0x96,0x90,0x96,0x01,
+0x5A,0x28,0x20,0xAE,0x50,0x5E,0x00,0x01,0x4C,0x55,0x40,0x16,0x38,0x13,0x9A,0x01,
+0xF5,0x85,0xF1,0x84,0x49,0xFF,0xA6,0x05,0x44,0x20,0x01,0x20,0xF1,0x04,0x42,0x10,
+0x08,0x73,0xB0,0x0C,0x96,0x49,0x38,0x20,0x19,0x01,0x80,0x08,0x92,0x42,0x49,0xFF,
+0xA6,0x7B,0xF5,0x05,0x4C,0x54,0xC0,0x16,0x38,0x13,0x9A,0x01,0xF1,0x84,0x49,0xFF,
+0xA5,0xF0,0xF1,0x04,0x44,0x20,0x01,0x20,0x50,0x10,0x82,0x40,0x42,0x10,0x08,0x73,
+0xB0,0x0C,0x96,0x49,0x38,0x20,0x19,0x01,0x80,0x08,0x92,0x42,0x49,0xFF,0xA6,0x64,
+0x50,0x5E,0x00,0x01,0x55,0xC2,0x80,0xFF,0x48,0xFF,0xFF,0x42,0xFC,0x49,0x44,0x12,
+0x02,0x88,0xB1,0x86,0x80,0x06,0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,
+0x8C,0x00,0x3A,0x20,0x0C,0x20,0x84,0x20,0xB0,0x0C,0xFA,0x48,0x49,0x00,0x0F,0x54,
+0x84,0x21,0x10,0x1F,0x80,0x31,0x10,0x1F,0x80,0x3D,0x84,0x02,0x44,0x12,0x02,0xA0,
+0x10,0x0F,0x80,0x32,0x10,0x0F,0x80,0x3E,0x80,0x01,0x80,0x9F,0x3A,0x20,0x0C,0x04,
+0x3A,0x22,0x0C,0x24,0xB1,0xC3,0x3A,0x20,0x8C,0x04,0xA4,0x00,0x80,0x27,0xAC,0x20,
+0x3A,0x20,0x8C,0x24,0xAC,0x08,0x80,0x06,0x49,0xFF,0xAC,0x34,0xB0,0x0C,0x49,0xFF,
+0xAC,0x84,0x80,0x1F,0x49,0xFF,0xAC,0x47,0x80,0x07,0x81,0x3F,0x49,0xFF,0xAC,0x96,
+0xFC,0xC9,0xFC,0x26,0x44,0x12,0x02,0xAC,0x80,0xDF,0x3A,0x20,0x94,0x04,0x3A,0x23,
+0x14,0x24,0x3A,0x20,0x94,0x04,0x3A,0x23,0x14,0x24,0x3A,0x20,0x94,0x00,0x80,0x1F,
+0x80,0xE6,0x3A,0x23,0x14,0x20,0x49,0xFF,0xAB,0xDF,0xFC,0xA6,0xFC,0x2C,0x44,0x12,
+0x02,0xDC,0xB1,0x8C,0x80,0x06,0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,
+0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,0x94,0x00,0x3A,0x20,0x14,0x20,0x84,0x20,
+0xB0,0x06,0xFA,0x48,0x49,0x00,0x0F,0x00,0xB1,0xC1,0x44,0x12,0x03,0x0C,0x80,0x07,
+0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0xB4,0x21,0xB6,0x20,0x80,0x06,0x49,0xFF,
+0xAB,0xBB,0xB0,0x06,0x49,0xFF,0xAB,0xD5,0x80,0x07,0x49,0xFF,0xAB,0xBF,0xFC,0xAC,
+0xFC,0x01,0x44,0x12,0x03,0x20,0x80,0x1F,0x3A,0x20,0x8C,0x00,0x3A,0x2F,0x8C,0x20,
+0x49,0xFF,0xAB,0xBE,0xFC,0x81,0xFC,0x00,0xC8,0x04,0x49,0xFF,0xFE,0x3F,0xFC,0x80,
+0x44,0x00,0x00,0x64,0x49,0xFF,0xA6,0x2F,0x44,0x00,0x13,0xA6,0x49,0xFF,0xA6,0x36,
+0x44,0x00,0x0F,0xA6,0x49,0xFF,0xA6,0x3D,0x44,0x00,0x01,0x90,0x49,0xFF,0xA6,0x44,
+0xFC,0x80,0xFC,0x00,0xE6,0x06,0xE8,0x06,0x44,0x12,0x03,0xC0,0x38,0x00,0x80,0x00,
+0xD5,0x02,0x84,0x00,0x49,0xFF,0xA6,0x4E,0xFC,0x80,0xFC,0x00,0xE6,0x06,0xE8,0x06,
+0x44,0x12,0x03,0xB8,0x38,0x00,0x80,0x00,0xD5,0x02,0x84,0x00,0x8C,0x01,0x96,0x00,
+0x49,0xFF,0xA6,0x35,0xFC,0x80,0xFC,0x00,0x5A,0x00,0x01,0x0E,0xC0,0x04,0x5A,0x00,
+0x02,0x1C,0xFC,0x80,0x84,0x00,0x49,0xFF,0xB2,0x14,0x2E,0x07,0xFC,0x5B,0x49,0xFF,
+0xFF,0xC4,0xD5,0x2A,0x49,0xFF,0xB2,0x0D,0x44,0x00,0x00,0x64,0x49,0xFF,0xA5,0xF3,
+0x44,0x00,0x23,0x96,0x49,0xFF,0xA5,0xFA,0x44,0x00,0x23,0x96,0x49,0xFF,0xA6,0x01,
+0x44,0x00,0x01,0x90,0xD5,0x17,0x84,0x01,0x49,0xFF,0xB1,0xFB,0x44,0x00,0x03,0xE8,
+0x49,0xFF,0xA5,0xE1,0x44,0x00,0x27,0x10,0x49,0xFF,0xA5,0xF3,0x46,0x20,0x00,0x81,
+0x46,0x12,0x71,0x00,0x83,0x82,0xB8,0x10,0x96,0x01,0xFE,0x0F,0xB8,0x90,0x44,0x00,
+0x27,0x10,0x49,0xFF,0xA5,0xF1,0x84,0x00,0x49,0xFF,0xFF,0xB9,0xFC,0x80,0x00,0x00,
+0xE6,0x04,0xE8,0x24,0xFC,0x00,0x44,0xF0,0xB8,0x44,0x38,0x07,0x80,0x00,0x40,0xF0,
+0x3C,0x00,0xDD,0x0F,0x04,0x14,0x1E,0x22,0x84,0x00,0x49,0xFF,0xA8,0xD5,0x84,0x01,
+0x49,0xFF,0xA8,0xC0,0x84,0x01,0xD5,0x0F,0x84,0x00,0x49,0xFF,0xA8,0xCD,0x84,0x01,
+0xD5,0x07,0x84,0x01,0xD5,0x02,0x84,0x00,0x49,0xFF,0xA8,0xC6,0x84,0x00,0x49,0xFF,
+0xA8,0xB1,0x84,0x00,0x49,0xFF,0xA8,0xB7,0xFC,0x80,0xDD,0x9E,0xFC,0x00,0x49,0xFF,
+0xDE,0x79,0x80,0x60,0x3E,0x00,0x0A,0xD0,0x44,0x12,0x23,0xC0,0x44,0x02,0x28,0x40,
+0x44,0x20,0x02,0x40,0x2E,0x47,0xFC,0x5A,0x49,0xFF,0xE7,0xD8,0xFC,0x80,0x44,0x02,
+0x28,0x40,0xDD,0x9E,0x44,0x02,0x23,0xC0,0xDD,0x9E,0x44,0x02,0x21,0xB0,0xDD,0x9E,
+0x44,0x02,0x1E,0xB0,0xDD,0x9E,0x44,0x02,0x1E,0x4C,0xDD,0x9E,0xFC,0x00,0xC0,0x02,
+0x84,0x01,0x49,0xFF,0xA5,0xDB,0x84,0x00,0x49,0xFF,0xA5,0xCA,0xFC,0x80,0xFC,0x00,
+0x84,0x00,0x80,0x20,0x49,0xFF,0xA7,0xDA,0x84,0x00,0x84,0x21,0x49,0xFF,0xA7,0xD6,
+0xFC,0x80,0xFC,0x00,0x84,0x01,0x84,0x20,0x49,0xFF,0xA7,0xD0,0x84,0x01,0x80,0x20,
+0x49,0xFF,0xA7,0xCC,0xFC,0x80,0xFC,0x00,0x49,0xFF,0xDE,0x3C,0x52,0x10,0x00,0x01,
+0x96,0x48,0x84,0x01,0x49,0xFF,0xA7,0xC2,0xFC,0x80,0xFC,0x49,0x80,0x20,0x44,0x02,
+0x03,0x28,0x50,0xAF,0x80,0x0C,0x3A,0x20,0x10,0x00,0x44,0x02,0x03,0x34,0x3A,0x2F,
+0x90,0x20,0x3A,0x20,0x10,0x00,0x3A,0x25,0x10,0x20,0x44,0x22,0x03,0x40,0xB0,0x06,
+0x3A,0x21,0x10,0x00,0x3A,0x20,0x10,0x20,0x44,0x22,0x03,0x4C,0x50,0x9F,0x80,0x24,
+0x3A,0x21,0x10,0x00,0x3A,0x24,0x90,0x20,0x44,0x22,0x02,0x7C,0xB1,0xCC,0x3A,0x21,
+0x10,0x00,0x3A,0x23,0x90,0x20,0x44,0x22,0x03,0x58,0xB1,0x8F,0x3A,0x21,0x10,0x00,
+0x80,0xBF,0x3A,0x23,0x10,0x20,0xC9,0x03,0x80,0x05,0xD5,0x12,0x5A,0x18,0x01,0x04,
+0x80,0x0A,0xD5,0x0E,0x5A,0x10,0x02,0x0D,0x5A,0x18,0x03,0x04,0x80,0x09,0xD5,0x08,
+0x5A,0x18,0x04,0x04,0x80,0x07,0xD5,0x04,0x5A,0x18,0x05,0x06,0x80,0x06,0x49,0xFF,
+0xA4,0xD8,0xFC,0xC9,0x5A,0x10,0x06,0xEA,0xFC,0xC9,0xFC,0x03,0x84,0x20,0x84,0x4C,
+0x80,0xC0,0x80,0x1F,0x49,0x00,0x0D,0xB8,0x44,0x12,0x03,0x64,0xB0,0x03,0x3A,0x20,
+0x90,0x00,0x3A,0x20,0x10,0x20,0xCE,0x03,0x80,0x1F,0xD5,0x03,0x5A,0x68,0x01,0x04,
+0x49,0xFF,0xA4,0xD3,0xFC,0x83,0xFC,0x00,0x84,0x00,0x49,0xFF,0xFF,0xA0,0x84,0x00,
+0x49,0xFF,0xFF,0xE5,0x84,0x00,0x49,0xFF,0xA7,0xB7,0x84,0x00,0x49,0xFF,0xA7,0xE6,
+0x49,0xFF,0xFE,0x36,0x49,0xFF,0xFE,0x84,0x49,0xFF,0xFE,0xAC,0x84,0x00,0x49,0xFF,
+0xAD,0xC9,0x44,0x00,0x02,0x40,0x49,0xFF,0xAD,0xDB,0x44,0x00,0x02,0x40,0x49,0xFF,
+0xAD,0xCC,0x84,0x09,0x49,0xFF,0xAD,0xDF,0x84,0x03,0x49,0xFF,0xAD,0xE5,0x44,0x62,
+0x17,0x60,0x44,0x10,0x00,0xF0,0x84,0x00,0x49,0xFF,0xAC,0x6D,0x49,0xFF,0xE7,0xC4,
+0x38,0x13,0x01,0x01,0x84,0x00,0x49,0xFF,0xAB,0x1B,0x44,0x10,0x00,0xF0,0x84,0x02,
+0x49,0xFF,0xAC,0x61,0x49,0xFF,0xE7,0xB8,0x38,0x13,0x01,0x01,0x84,0x02,0x49,0xFF,
+0xAB,0x0F,0x44,0x10,0x00,0xF0,0x84,0x05,0x49,0xFF,0xAC,0x55,0x49,0xFF,0xE7,0xAC,
+0x38,0x13,0x01,0x01,0x46,0x60,0x00,0x81,0x84,0x05,0x49,0xFF,0xAB,0x01,0x49,0xFF,
+0xA8,0x9B,0x04,0x03,0x03,0x91,0x92,0x0A,0x40,0x00,0x28,0x08,0x58,0x00,0x01,0xC0,
+0x14,0x03,0x03,0x91,0x49,0xFF,0xA8,0x89,0x04,0x03,0x00,0x2C,0x46,0x1F,0xFC,0x0F,
+0x92,0x06,0x94,0x06,0x58,0x00,0x00,0x2D,0x14,0x03,0x00,0x2C,0x04,0x03,0x00,0x2C,
+0x50,0x10,0x8F,0xFF,0x46,0x20,0x02,0xD0,0xFE,0x0E,0xFE,0x17,0x14,0x03,0x00,0x2C,
+0x04,0x03,0x00,0x2D,0x92,0x06,0x94,0x06,0x58,0x00,0x00,0x0A,0x14,0x03,0x00,0x2D,
+0x04,0x03,0x00,0x2D,0xFE,0x46,0x46,0x00,0x00,0xA0,0xFE,0x47,0x14,0x13,0x00,0x2D,
+0x04,0x13,0x00,0x2D,0x46,0x0C,0x0F,0xFF,0x50,0x00,0x0F,0xFF,0xFE,0x0E,0x46,0x10,
+0xA0,0x00,0xFE,0x0F,0x14,0x03,0x00,0x2D,0x04,0x03,0x00,0x2F,0x92,0x06,0x94,0x06,
+0x58,0x00,0x00,0x04,0x14,0x03,0x00,0x2F,0x44,0x00,0x02,0x80,0x49,0xFF,0xAB,0xF2,
+0x84,0x00,0x49,0xFF,0xFE,0xE5,0x49,0xFF,0xFC,0x71,0x49,0xFF,0xAB,0xE9,0x3E,0x07,
+0xFC,0x5B,0xFC,0x80,0xDD,0x9E,0xFC,0x00,0x49,0xFF,0xDD,0x50,0xC0,0x04,0x49,0xFF,
+0xDD,0x50,0x84,0x01,0xFC,0x80,0x2E,0x07,0xF4,0xC2,0x96,0x00,0xC0,0x05,0x84,0x00,
+0x3E,0x07,0xF4,0xC2,0x84,0x01,0xDD,0x9E,0xFC,0x00,0x49,0xFF,0xAB,0xD1,0xFC,0x80,
+0x2E,0x07,0xFC,0x5B,0xDD,0x9E,0x2E,0x07,0xFC,0x5A,0xDD,0x9E,0x2E,0x07,0xFC,0x59,
+0xDD,0x9E,0x2E,0x07,0xFC,0x58,0xDD,0x9E,0x3E,0x07,0xFC,0x58,0xDD,0x9E,0xFC,0x00,
+0x80,0xC0,0x49,0xFF,0xAC,0xBE,0x80,0x06,0x49,0xFF,0xA3,0x47,0x84,0x00,0x84,0x2C,
+0x5A,0x68,0x01,0x1F,0x49,0xFF,0xAC,0x1B,0x84,0x02,0x84,0x2A,0x49,0xFF,0xAC,0x17,
+0x84,0x03,0x84,0x2A,0x49,0xFF,0xAC,0x13,0x84,0x05,0x84,0x2C,0x49,0xFF,0xAC,0x0F,
+0x84,0x07,0x84,0x2C,0x49,0xFF,0xAC,0x0B,0x84,0x00,0x80,0x20,0x49,0xFF,0xA2,0xCC,
+0x84,0x00,0x84,0x22,0x49,0xFF,0xA2,0xC8,0x44,0x02,0x22,0xB8,0xD5,0x41,0x49,0xFF,
+0xAB,0xFE,0x84,0x01,0x84,0x2C,0x49,0xFF,0xAB,0xFA,0x84,0x02,0x84,0x2A,0x49,0xFF,
+0xAB,0xF6,0x84,0x03,0x84,0x2A,0x49,0xFF,0xAB,0xF2,0x84,0x04,0x84,0x2C,0x49,0xFF,
+0xAB,0xEE,0x84,0x05,0x84,0x2C,0x49,0xFF,0xAB,0xEA,0x84,0x06,0x84,0x2C,0x49,0xFF,
+0xAB,0xE6,0x84,0x07,0x84,0x2C,0x49,0xFF,0xAB,0xE2,0x84,0x01,0x84,0x20,0x49,0xFF,
+0xA2,0xA3,0x84,0x01,0x80,0x20,0x49,0xFF,0xA2,0x9F,0x84,0x00,0x84,0x22,0x49,0xFF,
+0xA2,0x9B,0x84,0x00,0x84,0x23,0x49,0xFF,0xA2,0x97,0x84,0x01,0x84,0x24,0x49,0xFF,
+0xA2,0x93,0x84,0x01,0x84,0x25,0x49,0xFF,0xA2,0x8F,0x84,0x01,0x84,0x26,0x49,0xFF,
+0xA2,0x8B,0x84,0x01,0x84,0x27,0x49,0xFF,0xA2,0x87,0x44,0x02,0x23,0x3C,0x44,0x10,
+0x00,0x42,0x49,0xFF,0xA8,0x84,0xFC,0x80,0x44,0x02,0x22,0xB8,0xDD,0x9E,0x44,0x02,
+0x23,0x3C,0xDD,0x9E,0xFC,0x21,0x84,0xC2,0xF0,0x81,0x80,0xE2,0x80,0x01,0x5A,0x10,
+0x01,0x03,0x84,0xC1,0x49,0xFF,0xFF,0x85,0xCF,0x0C,0x84,0x03,0x49,0xFF,0xA5,0x26,
+0x84,0x03,0x49,0xFF,0xA8,0xB0,0xF0,0x01,0x80,0x26,0x49,0xFF,0xE4,0xF9,0xFC,0xA1,
+0x84,0x02,0x49,0xFF,0xA5,0x1B,0x84,0x02,0x49,0xFF,0xA8,0xA5,0xF0,0x01,0x80,0x26,
+0x84,0x40,0x49,0xFF,0xE4,0x7C,0xFC,0xA1,0xFC,0x00,0x84,0x00,0x49,0xFF,0xFD,0x83,
+0x84,0x00,0x84,0x20,0x3E,0x07,0xFC,0x5A,0x3E,0x07,0xFC,0x59,0x80,0x41,0x2E,0x07,
+0xFC,0x5B,0x49,0xFF,0xFF,0xD1,0xFC,0x80,0xFC,0x20,0x44,0x14,0x80,0x90,0x44,0x0F,
+0xFF,0xEF,0xB4,0x41,0x46,0x70,0x00,0x81,0xFE,0x16,0xB6,0x01,0x44,0x04,0x80,0x10,
+0xFA,0x20,0xAE,0x40,0xFA,0xC2,0x50,0x73,0x83,0xD4,0xB4,0x07,0x92,0x0B,0x96,0x27,
+0xC0,0x07,0x8E,0xC1,0xC6,0x05,0x84,0x01,0x49,0xFF,0xB0,0x3A,0xD5,0xF7,0x44,0x04,
+0x80,0x10,0xFA,0x20,0xAE,0x40,0x44,0x14,0x80,0x90,0xB4,0x01,0x58,0x00,0x00,0x10,
+0xB6,0x01,0xFC,0xA0,0xFC,0x00,0x49,0xFF,0xEB,0x7A,0x5A,0x08,0x01,0x09,0x44,0x14,
+0x50,0x28,0xB4,0x01,0x92,0x01,0x96,0x06,0x5A,0x00,0x01,0xFD,0xFC,0x80,0xFC,0x00,
+0x80,0xC0,0x5A,0x08,0x01,0x04,0x49,0xFF,0xFF,0xEF,0x80,0x06,0x49,0x00,0x05,0xDF,
+0x80,0x06,0x49,0xFF,0xA3,0x9A,0xFC,0x80,0xFC,0x20,0x84,0xE0,0x80,0xC0,0x84,0x00,
+0x49,0xFF,0xFF,0xEF,0x49,0xFF,0xFF,0xBA,0x49,0xFF,0xDE,0xEC,0x3E,0x77,0xF4,0xC3,
+0x49,0xFF,0xDC,0x3F,0x3E,0x77,0xF4,0xC2,0x5A,0x68,0x01,0x05,0x80,0x06,0x49,0xFF,
+0xFF,0xE0,0xFC,0xA0,0xFC,0x00,0x3C,0x6D,0xFF,0x14,0xC6,0x0A,0x84,0x01,0x49,0xFF,
+0xFF,0xE5,0x49,0xFF,0xFD,0xC8,0x84,0x00,0x3C,0x0F,0xFF,0x14,0xFC,0x80,0x49,0xFF,
+0xEB,0x3E,0x5A,0x00,0x01,0xF5,0x3E,0x67,0xF4,0xC3,0x49,0xFF,0xDC,0x22,0x3E,0x67,
+0xF4,0xC2,0x49,0xFF,0xFD,0xB8,0xFC,0x80,0xFC,0x00,0x49,0xFF,0xFD,0xAA,0x46,0x00,
+0x00,0x81,0x04,0x00,0x00,0xF5,0x92,0x0B,0x96,0x27,0xC8,0x04,0x49,0xFF,0xEB,0x27,
+0xC0,0x05,0x84,0x00,0x49,0xFF,0xFF,0xC2,0x84,0x01,0x3C,0x0F,0xFF,0x14,0xFC,0x80,
+0xFC,0x00,0x49,0xFF,0xFF,0xD1,0x44,0x64,0x50,0x28,0x2E,0x07,0xF4,0xC2,0xC0,0x0F,
+0x84,0xC0,0x3E,0x67,0xF4,0xC3,0x49,0xFF,0xDB,0xFC,0x3E,0x67,0xF4,0xC2,0x49,0xFF,
+0xFD,0x88,0x49,0xFF,0xFB,0x1D,0x49,0xFF,0xFF,0xD9,0xFC,0x80,0x2E,0x07,0xF4,0xB4,
+0xC8,0x0F,0xB4,0x06,0x92,0x03,0x96,0x06,0x5A,0x00,0x01,0x0B,0xB4,0x06,0x92,0x01,
+0x96,0x06,0xC0,0x06,0x3C,0x0D,0xFF,0x15,0x5A,0x08,0x01,0xE1,0xD5,0xE2,0x49,0xFF,
+0xD3,0x3B,0x5A,0x08,0x02,0xF9,0xD5,0xDD,0xFC,0x49,0x2E,0x67,0xFC,0x5B,0x84,0x00,
+0x49,0xFF,0xFE,0xA7,0x84,0x02,0x49,0xFF,0xA4,0x49,0x80,0x06,0x84,0x20,0x84,0x41,
+0x49,0xFF,0xE3,0xAD,0x84,0x04,0x49,0xFF,0xFD,0x7A,0xB1,0x86,0x44,0x12,0x03,0x70,
+0x80,0x06,0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,0x94,0x04,0x3A,0x20,
+0x14,0x24,0x3A,0x20,0x94,0x00,0x3A,0x20,0x14,0x20,0x44,0x02,0x03,0xA0,0x80,0x3F,
+0x3A,0x20,0x14,0x04,0x3A,0x20,0x94,0x24,0x3A,0x20,0x0C,0x00,0x3A,0x20,0x8C,0x20,
+0x80,0x1F,0x49,0xFF,0xA8,0x5F,0x80,0x06,0x49,0xFF,0xA8,0x26,0x84,0x00,0x3E,0x07,
+0xF4,0xC1,0x80,0xFF,0x49,0xFF,0xFF,0x70,0x44,0x94,0x50,0x28,0x49,0xFF,0xA1,0xB6,
+0x2E,0x07,0xF4,0xC1,0xC0,0x2C,0x84,0x00,0x3E,0x07,0xF4,0xC1,0x49,0xFF,0xFF,0x7E,
+0x49,0xFF,0xFF,0x90,0x84,0x00,0x49,0xFF,0xFD,0x42,0x44,0x12,0x02,0xDC,0x80,0x06,
+0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,
+0x3A,0x20,0x94,0x00,0x3A,0x20,0x14,0x20,0x44,0x02,0x02,0x88,0x80,0x27,0x3A,0x20,
+0x14,0x04,0x3A,0x20,0x94,0x24,0x3A,0x20,0x0C,0x00,0x3A,0x20,0x8C,0x20,0x80,0x07,
+0x49,0xFF,0xA8,0x28,0x80,0x06,0x49,0xFF,0xA7,0xEF,0xFC,0xC9,0x2E,0x07,0xF4,0xB4,
+0xC8,0x0F,0xB4,0x09,0x92,0x03,0x96,0x06,0x5A,0x00,0x01,0x0B,0xB4,0x09,0x92,0x01,
+0x96,0x06,0xC0,0x06,0x3C,0x0D,0xFF,0x15,0x5A,0x08,0x01,0xC4,0xD5,0xC5,0x49,0xFF,
+0xD2,0xBB,0x5A,0x08,0x02,0xF9,0xD5,0xC0,0xFC,0x21,0xB6,0x1F,0x2E,0x07,0xFC,0x5A,
+0x49,0xFF,0xAB,0x28,0xF0,0x81,0xB4,0x1F,0x49,0xFF,0xA5,0x50,0x44,0x10,0x02,0x40,
+0xB4,0x1F,0x49,0xFF,0xAB,0x2A,0x84,0x02,0x49,0xFF,0xFC,0x8C,0x49,0xFF,0xFF,0x14,
+0x49,0xFF,0xEA,0x5D,0x5A,0x08,0x01,0x1E,0x84,0xC2,0x44,0x74,0x50,0x28,0x2E,0x07,
+0xF4,0xC2,0xC8,0x32,0x2E,0x07,0xF4,0xB4,0xC8,0x0F,0xB4,0x07,0x92,0x03,0x96,0x06,
+0x5A,0x00,0x01,0x0B,0xB4,0x07,0x92,0x01,0x96,0x06,0xC0,0x06,0x3C,0x0D,0xFF,0x15,
+0x5A,0x08,0x01,0xEF,0xD5,0x21,0x49,0xFF,0xD2,0x87,0x5A,0x08,0x02,0xF9,0xD5,0x1C,
+0x44,0x64,0x50,0x28,0x2E,0x07,0xF4,0xC2,0xC8,0x22,0x2E,0x07,0xF4,0xB4,0xC8,0x0F,
+0xB4,0x06,0x92,0x03,0x96,0x06,0x5A,0x00,0x01,0x0B,0xB4,0x06,0x92,0x01,0x96,0x06,
+0xC0,0x06,0x3C,0x0D,0xFF,0x15,0x5A,0x08,0x01,0xEF,0xD5,0x11,0x49,0xFF,0xD2,0x6C,
+0x5A,0x08,0x02,0xF9,0xD5,0x0C,0x49,0xFF,0xDB,0x0C,0x84,0x00,0x3E,0x07,0xF4,0xC2,
+0x3E,0x07,0xF4,0xC3,0x5A,0x60,0x01,0xDE,0x84,0xC1,0xD5,0xC2,0x84,0xC0,0x3E,0x67,
+0xF4,0xC3,0x49,0xFF,0xDA,0xFE,0x3E,0x67,0xF4,0xC2,0x49,0xFF,0xFE,0xDF,0x44,0x10,
+0x02,0x40,0xB4,0x5F,0xF0,0x01,0x49,0xFF,0xE4,0x69,0x84,0x01,0x49,0xFF,0xFC,0x32,
+0x84,0x01,0x49,0xFF,0xFE,0xA3,0xFC,0xA1,0xFC,0x00,0x2E,0x07,0xFC,0x5B,0x49,0xFF,
+0xE6,0xC7,0x84,0x00,0x49,0xFF,0xFB,0xCF,0x84,0x20,0x2E,0x27,0xFC,0x59,0x2E,0x07,
+0xFC,0x5B,0x49,0xFF,0xFE,0x21,0x84,0x00,0x49,0xFF,0xFF,0x80,0x2E,0x17,0xFC,0x5A,
+0x2E,0x27,0xFC,0x59,0x2E,0x07,0xFC,0x5B,0x49,0xFF,0xFE,0x16,0x2E,0x07,0xFC,0x5B,
+0x49,0xFF,0xE6,0xAE,0x2E,0x07,0xFC,0x5B,0x49,0xFF,0xE8,0x03,0x49,0xFF,0xE9,0xDF,
+0xC8,0x09,0x2E,0x07,0xFC,0x5B,0x49,0xFF,0xFB,0x98,0x2E,0x07,0xFC,0x5B,0x49,0xFF,
+0xFC,0x47,0x84,0x01,0x49,0xFF,0xFB,0xFE,0x49,0xFF,0xE5,0x90,0x49,0xFF,0xFE,0x84,
+0xFC,0x80,0xFC,0x21,0x84,0x00,0x49,0xFF,0xFE,0x69,0x49,0xFF,0xDA,0xA5,0xF0,0x81,
+0x84,0x00,0x49,0xFF,0xA4,0xAB,0x44,0x10,0x00,0xC0,0x84,0x00,0x49,0xFF,0xDD,0x44,
+0x84,0x05,0x49,0xFF,0xFB,0x90,0x84,0x05,0x49,0xFF,0xFB,0x99,0x84,0x05,0x49,0xFF,
+0xFC,0x4E,0x49,0xFF,0xFB,0x28,0x84,0x02,0x49,0xFF,0xFB,0xDC,0x84,0x01,0x49,0xFF,
+0xFE,0x4D,0x84,0xCA,0x49,0xFF,0xFC,0x2F,0x44,0x74,0x50,0x28,0x84,0x00,0x3E,0x07,
+0xF4,0xC3,0x2E,0x07,0xF4,0xC3,0xC8,0x15,0x2E,0x07,0xF4,0xB4,0xC8,0x0E,0xB4,0x07,
+0x92,0x03,0x96,0x06,0xC8,0x0A,0xB4,0x07,0x92,0x01,0x96,0x06,0xC0,0x06,0x3C,0x0D,
+0xFF,0x15,0x5A,0x08,0x01,0xF0,0xD5,0x05,0x49,0xFF,0xD1,0xD6,0x5A,0x08,0x02,0xF9,
+0x84,0x00,0x3E,0x07,0xF4,0xC2,0x2E,0x07,0xF4,0xC2,0xC8,0x15,0x2E,0x07,0xF4,0xB4,
+0xC8,0x0E,0xB4,0x07,0x92,0x03,0x96,0x06,0xC8,0x0A,0xB4,0x07,0x92,0x01,0x96,0x06,
+0xC0,0x06,0x3C,0x0D,0xFF,0x15,0x5A,0x08,0x01,0xF0,0xD5,0x05,0x49,0xFF,0xD1,0xBC,
+0x5A,0x08,0x02,0xF9,0x8E,0xC1,0x97,0xB0,0xCE,0xCA,0x80,0x06,0x49,0xFF,0xFE,0x0E,
+0x49,0xFF,0xFA,0xF6,0x80,0x06,0x49,0xFF,0xFC,0x02,0x80,0x06,0x49,0xFF,0xFB,0x47,
+0x84,0x03,0x49,0xFF,0xFB,0x8F,0xF0,0x01,0x49,0xFF,0xA4,0x48,0xFC,0xA1,0xFC,0x00,
+0x49,0xFF,0xFF,0x91,0x44,0x02,0x1E,0xB0,0x44,0x10,0x00,0xC0,0x84,0x40,0x49,0xFF,
+0xE3,0x95,0xFC,0x80,0xFC,0x00,0x2E,0x07,0xFC,0x5B,0x49,0xFF,0xE6,0x19,0x2E,0x17,
+0xFC,0x5B,0x84,0x03,0x49,0xFF,0xE6,0xF7,0x84,0x03,0x49,0xFF,0xFB,0x1C,0x2E,0x07,
+0xFC,0x5B,0x84,0x20,0x2E,0x27,0xFC,0x59,0x49,0xFF,0xFD,0x6E,0x49,0xFF,0xE9,0x3F,
+0xC8,0x04,0x84,0x01,0x49,0xFF,0xFD,0xDA,0x84,0x01,0x49,0xFF,0xFB,0x63,0x44,0x64,
+0x50,0x28,0x49,0xFF,0xFD,0xE9,0x2E,0x07,0xF4,0xC2,0xC0,0x1D,0x84,0xC0,0x3E,0x67,
+0xF4,0xC3,0x49,0xFF,0xDA,0x16,0x3E,0x67,0xF4,0xC2,0x49,0xFF,0xFD,0xF7,0x44,0x10,
+0x00,0x42,0x84,0x40,0x84,0x63,0x44,0x02,0x23,0x3C,0x49,0xFF,0xE3,0x90,0x84,0x00,
+0x49,0xFF,0xFA,0xF1,0x2E,0x07,0xFC,0x5B,0x49,0xFF,0xE7,0x3B,0x84,0x01,0x49,0xFF,
+0xFB,0x41,0xFC,0x80,0x2E,0x07,0xF4,0xB4,0xC8,0x0F,0xB4,0x06,0x92,0x03,0x96,0x06,
+0x5A,0x00,0x01,0x0B,0xB4,0x06,0x92,0x01,0x96,0x06,0xC0,0x06,0x3C,0x0D,0xFF,0x15,
+0x5A,0x08,0x01,0xD3,0xD5,0xD4,0x49,0xFF,0xD1,0x47,0x5A,0x08,0x02,0xF9,0xD5,0xCF,
+0xFC,0x46,0x80,0xC0,0x84,0xE1,0x81,0x22,0xF1,0x8B,0x49,0xFF,0xD9,0x28,0xB6,0xDF,
+0x84,0xC0,0x80,0x27,0x44,0x24,0x10,0x10,0x80,0x66,0x80,0x87,0x80,0xA6,0x80,0x07,
+0xF7,0x81,0xF6,0x82,0xF6,0x83,0xF7,0x84,0xF6,0x85,0xF6,0x86,0xF6,0x87,0x14,0x9F,
+0x80,0x08,0x49,0xFF,0xEA,0x8E,0x80,0x06,0x49,0xFF,0xD9,0x1E,0x80,0x07,0x49,0xFF,
+0xD9,0x29,0x80,0x06,0x49,0xFF,0xD9,0x08,0x80,0x06,0x49,0xFF,0xD9,0x82,0x49,0xFF,
+0xD9,0x4C,0x44,0x00,0x00,0x3B,0x49,0xFF,0xD9,0x56,0xF0,0x0B,0x49,0xFF,0xD9,0x61,
+0x80,0x07,0x49,0xFF,0xD9,0x6D,0x80,0x06,0x49,0xFF,0xD9,0x4D,0x49,0xFF,0xD9,0x75,
+0x80,0x09,0x49,0xFF,0xD9,0x77,0x80,0x06,0x49,0xFF,0xD9,0x78,0x80,0x07,0x49,0xFF,
+0xD9,0x75,0x40,0x00,0x00,0x09,0x44,0x04,0x80,0x07,0x84,0x22,0xAE,0x40,0x80,0x07,
+0x49,0xFF,0xD9,0x75,0xFC,0xC6,0xFC,0x00,0x44,0x04,0x30,0x10,0xB4,0x00,0x92,0x08,
+0x96,0x00,0xC0,0x15,0x44,0x14,0x30,0x08,0x84,0x1E,0xB4,0x41,0x44,0x64,0x30,0x0C,
+0xFE,0x16,0xB6,0x01,0xB4,0x06,0x58,0x00,0x00,0x01,0xB6,0x06,0x84,0x01,0x49,0xFF,
+0xAD,0x4F,0xB4,0x06,0x58,0x00,0x00,0x02,0xB6,0x06,0xFC,0x80,0x44,0x14,0x00,0x40,
+0x46,0x20,0x81,0x00,0xB6,0x41,0x44,0x64,0x30,0x0C,0xB6,0x01,0xB4,0x06,0x92,0x04,
+0x96,0x06,0xC8,0xE1,0x44,0x00,0x00,0x64,0x49,0xFF,0xAD,0x31,0x3C,0x00,0x05,0x69,
+0x8C,0x01,0x96,0x01,0x5C,0xF0,0x00,0x64,0x3C,0x08,0x05,0x69,0xE9,0xF0,0xD5,0xD3,
+0xFC,0x00,0x84,0x01,0x49,0xFF,0xA1,0x1C,0x84,0x03,0x49,0xFF,0xA1,0x3C,0x84,0x00,
+0x49,0xFF,0xA1,0xC2,0x84,0x00,0x49,0xFF,0xA1,0x46,0x84,0x03,0x49,0xFF,0xA1,0x64,
+0x84,0x00,0x49,0xFF,0xA1,0x6F,0x84,0x01,0x49,0xFF,0xD8,0x70,0xFC,0x80,0xFC,0x00,
+0x84,0x00,0x44,0x10,0x00,0xF0,0x49,0xFF,0xA7,0xEE,0x84,0x02,0x44,0x10,0x00,0xF0,
+0x49,0xFF,0xA7,0xE9,0x84,0x01,0x44,0x10,0x00,0xF0,0x49,0xFF,0xA7,0xE4,0x84,0x03,
+0x44,0x10,0x00,0xF0,0x49,0xFF,0xA7,0xDF,0x84,0x04,0x44,0x10,0x00,0xF0,0x49,0xFF,
+0xA7,0xDA,0x44,0x10,0x00,0xF0,0x84,0x05,0x49,0xFF,0xA7,0xD5,0x84,0x01,0x49,0xFF,
+0xD7,0x6E,0x84,0x03,0x84,0x2A,0x49,0xFF,0xA8,0x22,0x84,0x00,0x84,0x23,0x49,0xFF,
+0x9E,0xE3,0xFC,0x80,0xFC,0x01,0xF0,0x81,0x49,0xFF,0xA9,0x50,0xE6,0x03,0xE9,0x04,
+0xF0,0x01,0x49,0xFF,0xDC,0x45,0xFC,0x81,0xFC,0x00,0x84,0x01,0x49,0xFF,0xA3,0x75,
+0x84,0x01,0x49,0xFF,0x9F,0x1F,0x84,0x01,0x49,0xFF,0xA2,0x59,0x84,0x00,0x49,0xFF,
+0xFA,0x14,0x84,0x00,0x49,0xFF,0xF9,0xF7,0x84,0x01,0x49,0xFF,0xA1,0x8A,0x84,0x01,
+0x49,0xFF,0xA6,0xB7,0x84,0x01,0x49,0xFF,0xA6,0xC4,0x84,0x01,0x49,0xFF,0xA1,0x81,
+0x84,0x01,0x49,0xFF,0xA6,0xDC,0x84,0x01,0x49,0xFF,0xA2,0x80,0x84,0x01,0x49,0xFF,
+0xA2,0x91,0x84,0x01,0x49,0xFF,0xA2,0xA7,0x49,0xFF,0xA9,0x20,0xE6,0x03,0xE8,0x05,
+0x84,0x01,0x84,0x2F,0x49,0xFF,0xA8,0x7E,0x49,0xFF,0xA9,0x18,0xE6,0x03,0xE9,0x03,
+0x49,0xFF,0xA9,0x18,0x49,0xFF,0xA9,0x12,0xE6,0x03,0xE8,0x03,0x49,0xFF,0xA9,0x1B,
+0x84,0x04,0x49,0xFF,0xA9,0x2C,0xFC,0x80,0xC2,0x19,0xFC,0x00,0x49,0xFF,0xFE,0xF2,
+0x44,0x00,0x00,0xFF,0x49,0xFF,0xD8,0xAF,0x49,0xFF,0xD8,0x59,0xC0,0xFE,0x44,0x04,
+0x80,0x07,0x84,0x22,0xAE,0x40,0x84,0x00,0x49,0xFF,0xD8,0x0E,0x84,0x01,0x49,0xFF,
+0xD8,0x88,0x84,0x00,0x49,0xFF,0xD8,0x7C,0xFC,0x80,0xDD,0x9E,0xC2,0x25,0xFC,0x00,
+0x49,0xFF,0xFE,0xD8,0x44,0x00,0x00,0xFF,0x49,0xFF,0xD8,0x95,0x49,0xFF,0xA8,0xE6,
+0xE6,0x03,0xE8,0x04,0x84,0x0A,0x49,0xFF,0xAC,0x7B,0x44,0x64,0x80,0x04,0xA6,0x32,
+0x96,0x06,0xC0,0xFE,0x49,0xFF,0xD8,0x33,0xC0,0xFB,0x44,0x04,0x80,0x07,0x84,0x22,
+0xAE,0x40,0x84,0x00,0x49,0xFF,0xD7,0xE8,0x84,0x01,0x49,0xFF,0xD8,0x62,0x84,0x00,
+0x49,0xFF,0xD8,0x56,0xFC,0x80,0xDD,0x9E,0xFC,0x00,0x44,0x37,0x20,0x64,0x84,0x30,
+0xB4,0x03,0xFE,0x0E,0x58,0x00,0x00,0x05,0xB6,0x03,0xB4,0x43,0x44,0x0F,0xF0,0xFF,
+0xFE,0x86,0x58,0x21,0x05,0x00,0xB6,0x43,0x44,0x27,0x20,0x6C,0xB4,0x62,0xFE,0x5E,
+0x58,0x10,0x80,0x05,0xB6,0x22,0xB4,0x22,0xFE,0x0E,0x58,0x00,0x05,0x00,0xB6,0x02,
+0x44,0x00,0x00,0x3F,0x49,0xFF,0xA2,0x48,0xFC,0x80,0xFC,0x00,0x49,0xFF,0xA8,0xE9,
+0x49,0xFF,0xA9,0x4E,0x49,0xFF,0xA9,0xFC,0x84,0x01,0x49,0xFF,0xA8,0xD3,0x49,0xFF,
+0xDB,0xF8,0xFC,0x80,0xFC,0x01,0xF1,0x81,0x49,0xFF,0xA9,0x99,0xF0,0x01,0x49,0xFF,
+0xDB,0xDD,0xFC,0x81,0xFC,0x00,0x49,0xFF,0xE7,0x7A,0x5A,0x08,0x01,0x04,0x84,0x00,
+0xD5,0x02,0x84,0x04,0x49,0xFF,0xA9,0x94,0xFC,0x80,0xFC,0x00,0x49,0xFF,0xA9,0x87,
+0xFC,0x80,0x44,0x04,0x40,0x0C,0xB4,0x00,0x92,0x01,0x96,0x06,0x5A,0x00,0x01,0x09,
+0x44,0x07,0x10,0x14,0xB4,0x00,0x92,0x0E,0x56,0x00,0x00,0x01,0x96,0x06,0xDD,0x9E,
+0xFC,0x00,0xC0,0x04,0x49,0xFF,0xFF,0xAA,0xFC,0x80,0x44,0x17,0x20,0x64,0x84,0x70,
+0xB4,0x41,0xFE,0x9E,0xB6,0x41,0xB4,0x81,0x44,0x2F,0xF0,0xFF,0xFF,0x16,0xB6,0x81,
+0x44,0x17,0x20,0x6C,0xB4,0x81,0xFE,0xE6,0xB6,0x61,0xB4,0x61,0xFE,0x9E,0xB6,0x41,
+0x49,0xFF,0xA1,0xFA,0xFC,0x80,0xFC,0x42,0x49,0xFF,0x9F,0xA0,0xB6,0x1F,0x49,0xFF,
+0xD8,0x1B,0xF0,0x81,0x84,0x00,0x49,0xFF,0xFB,0xD9,0x84,0x00,0x49,0xFF,0xA2,0x1E,
+0x84,0x00,0x49,0xFF,0xD8,0x02,0x84,0x00,0x49,0xFF,0xA2,0x2C,0x84,0x01,0x49,0xFF,
+0xA2,0x32,0x49,0xFF,0xAB,0xD0,0xE6,0x03,0xE8,0x03,0x49,0xFF,0xFF,0x77,0x84,0x05,
+0x49,0xFF,0xF9,0x05,0x84,0x05,0x49,0xFF,0xF8,0xF6,0x84,0x05,0x49,0xFF,0xF9,0xB7,
+0x49,0xFF,0xF8,0x91,0x84,0x01,0x49,0xFF,0xFB,0xB9,0x84,0xC2,0x49,0xFF,0xF9,0x9B,
+0x44,0x74,0x50,0x28,0x84,0x00,0x3E,0x07,0xF4,0xC3,0x2E,0x07,0xF4,0xC3,0xC8,0x15,
+0x2E,0x07,0xF4,0xB4,0xC8,0x0E,0xB4,0x07,0x92,0x03,0x96,0x06,0xC8,0x0A,0xB4,0x07,
+0x92,0x01,0x96,0x06,0xC0,0x06,0x3C,0x0D,0xFF,0x15,0x5A,0x08,0x01,0xF0,0xD5,0x05,
+0x49,0xFF,0xCF,0x42,0x5A,0x08,0x02,0xF9,0x84,0x00,0x3E,0x07,0xF4,0xC2,0x2E,0x07,
+0xF4,0xC2,0xC8,0x15,0x2E,0x07,0xF4,0xB4,0xC8,0x0E,0xB4,0x07,0x92,0x03,0x96,0x06,
+0xC8,0x0A,0xB4,0x07,0x92,0x01,0x96,0x06,0xC0,0x06,0x3C,0x0D,0xFF,0x15,0x5A,0x08,
+0x01,0xF0,0xD5,0x05,0x49,0xFF,0xCF,0x28,0x5A,0x08,0x02,0xF9,0x84,0x00,0x3E,0x07,
+0xF4,0xC2,0x5A,0x60,0x01,0x04,0x84,0xC1,0xD5,0xC6,0x49,0xFF,0xF9,0x52,0x84,0x00,
+0x49,0xFF,0xFB,0x74,0x49,0xFF,0xAB,0x77,0xE6,0x03,0xE9,0x04,0x84,0x00,0x49,0xFF,
+0x9F,0x1D,0x84,0x00,0x49,0xFF,0xA0,0xFB,0x84,0x00,0x80,0x20,0x49,0xFF,0xAA,0x16,
+0x49,0xFF,0xAA,0xCA,0xF0,0x82,0x84,0x00,0x49,0xFF,0xAA,0xBD,0x84,0x00,0x49,0xFF,
+0xA9,0x12,0x2E,0x07,0xF4,0xB4,0xC8,0x10,0x44,0x14,0x50,0x28,0xB4,0x01,0x92,0x03,
+0x96,0x06,0xC8,0x0A,0xB4,0x01,0x92,0x01,0x96,0x06,0xC0,0x06,0x3C,0x0D,0xFF,0x15,
+0x5A,0x08,0x01,0x0B,0xD5,0x05,0x49,0xFF,0xCE,0xEF,0x5A,0x08,0x02,0xF9,0x84,0xC0,
+0x80,0xE6,0x81,0x26,0xD5,0x31,0x49,0xFF,0xAB,0x46,0xE6,0x03,0xE8,0x0D,0x46,0x00,
+0x00,0x91,0x04,0x70,0x00,0x11,0x44,0x07,0x20,0xC0,0xB4,0xC0,0x80,0x07,0x80,0x26,
+0x49,0xFF,0xDA,0xF5,0xD5,0x05,0x84,0xC0,0x49,0xFF,0xA9,0x98,0x80,0xE6,0x49,0xFF,
+0xE6,0x8E,0x80,0x40,0x5A,0x08,0x01,0x08,0x44,0x00,0x0D,0xAC,0x84,0x20,0x80,0x62,
+0x49,0x00,0x00,0xB7,0x46,0x00,0x00,0x91,0x85,0x21,0xA0,0x43,0x92,0x26,0x94,0x4E,
+0x58,0x10,0x80,0x20,0xA8,0x43,0x49,0xFF,0xF8,0xFE,0x84,0x01,0x49,0xFF,0xFB,0x09,
+0x84,0x01,0x49,0xFF,0xA3,0x8D,0x49,0xFF,0xE6,0x72,0x80,0x40,0x5A,0x08,0x01,0x08,
+0x44,0x00,0x0D,0xAC,0x84,0x20,0x80,0x62,0x49,0x00,0x00,0x9B,0x84,0x00,0x49,0xFF,
+0xF8,0x3A,0x84,0x00,0x49,0xFF,0xF8,0xFB,0x49,0xFF,0xF7,0xEA,0x49,0xFF,0xE6,0x6B,
+0xF0,0x83,0xF1,0x03,0x84,0x01,0x49,0x00,0x01,0x12,0x5A,0x98,0x01,0x0B,0x49,0xFF,
+0xA1,0xB7,0x5A,0x00,0x01,0xFE,0x64,0x00,0x00,0x20,0x84,0x01,0x3E,0x07,0xF4,0xC0,
+0x84,0x00,0x49,0xFF,0xFA,0xDE,0x49,0xFF,0xF8,0xC4,0x44,0x04,0x80,0x10,0x84,0x21,
+0xAE,0x40,0x44,0x14,0x80,0x11,0x84,0x44,0xAE,0x88,0xFA,0x20,0xAE,0x40,0x85,0x20,
+0x49,0xFF,0xFA,0x9C,0x3E,0x97,0xF4,0xC3,0x49,0xFF,0xD7,0x23,0x3E,0x97,0xF4,0xC2,
+0x49,0xFF,0xAA,0xD9,0xE6,0x03,0xE8,0x06,0x80,0x07,0x80,0x26,0x49,0xFF,0xDA,0x8F,
+0xD5,0x06,0x84,0x00,0x49,0xFF,0xA3,0x44,0x49,0xFF,0xA9,0x30,0x44,0x10,0x00,0xEB,
+0x84,0x01,0x49,0x00,0x00,0xDC,0xB4,0x1F,0x49,0xFF,0x9E,0x70,0xF0,0x02,0x49,0xFF,
+0xAA,0x1A,0x49,0xFF,0xAA,0xC0,0xE6,0x03,0xE8,0x04,0x84,0x00,0x49,0xFF,0xFE,0xBA,
+0x84,0x00,0x49,0xFF,0xA1,0x18,0x84,0x20,0x84,0x01,0x49,0xFF,0xA9,0x5F,0x84,0x00,
+0x49,0xFF,0xF8,0xA5,0x84,0x00,0x49,0xFF,0xF7,0xEA,0x84,0x01,0x49,0xFF,0xA0,0x37,
+0x84,0x01,0x49,0xFF,0xA0,0xFF,0x2E,0x67,0xF4,0xE9,0x44,0x0F,0xFF,0xC8,0x97,0xB0,
+0x3E,0x00,0x0A,0xDC,0xC6,0x07,0x84,0x00,0x84,0xC1,0x3E,0x07,0xF4,0xE9,0x3C,0x6E,
+0x02,0xB6,0x2E,0x07,0xF4,0xE8,0xC0,0x08,0x84,0x00,0x3E,0x07,0xF4,0xE8,0x49,0xFF,
+0xF8,0x59,0x49,0xFF,0xDD,0x5A,0x49,0xFF,0xE1,0xA9,0x49,0xFF,0xE5,0xE8,0x80,0x40,
+0x5A,0x08,0x01,0x08,0x44,0x00,0x01,0xF4,0x84,0x20,0x80,0x62,0x49,0x00,0x00,0x11,
+0x84,0x00,0x49,0xFF,0xF7,0xB0,0xF0,0x01,0x49,0xFF,0xA0,0xC0,0x84,0x01,0x49,0xFF,
+0xFA,0x68,0x49,0xFF,0xF8,0x58,0x49,0xFF,0xFA,0x31,0x80,0x06,0xFC,0xC2,0xFC,0x02,
+0xF0,0x83,0xF1,0x81,0xFD,0x01,0xF2,0x82,0xB6,0x7F,0x49,0xFF,0xA8,0xF1,0xF0,0x01,
+0xB4,0x3F,0x49,0xFF,0xA9,0x09,0xF0,0x03,0xF1,0x01,0xF2,0x02,0xB4,0x7F,0x49,0xFF,
+0xA9,0x27,0xB4,0x1F,0x49,0xFF,0xA9,0x48,0xFC,0x82,0xFC,0x00,0x44,0x00,0xCA,0x1C,
+0x49,0xFF,0xDC,0x2D,0x84,0x20,0x80,0x61,0x84,0x41,0x44,0x00,0x00,0x64,0x49,0xFF,
+0xFF,0xE0,0x84,0x00,0x80,0x20,0x49,0xFF,0xA9,0x73,0x84,0x00,0x80,0x20,0x49,0xFF,
+0xA2,0xCB,0x84,0x00,0x49,0xFF,0xA9,0x76,0x84,0x20,0x84,0x01,0x49,0xFF,0xA8,0xEE,
+0x84,0x00,0x49,0xFF,0xA9,0x3B,0x84,0x40,0x84,0x61,0x44,0x00,0x03,0x41,0x84,0x27,
+0x49,0xFF,0xFF,0xC7,0x84,0x00,0x84,0x21,0x49,0xFF,0xA9,0x5A,0x84,0x01,0x80,0x20,
+0x49,0xFF,0xA2,0xB2,0x49,0x00,0x00,0x5A,0xFC,0x80,0xFC,0x00,0x80,0xC0,0x5A,0x08,
+0x01,0x0D,0x84,0x00,0x3E,0x07,0xF4,0xC0,0x44,0x10,0x01,0xF4,0x84,0x02,0x49,0x00,
+0x00,0x51,0x84,0x02,0x80,0x26,0xD5,0x03,0x84,0x02,0x84,0x20,0x49,0x00,0x00,0x58,
+0xFC,0x80,0xFC,0x00,0x2E,0x07,0xF4,0xC0,0xC0,0x07,0x84,0x02,0x49,0x00,0x00,0x47,
+0x84,0x00,0x3E,0x07,0xF4,0xC0,0x84,0x02,0x49,0x00,0x00,0x65,0x5A,0x08,0x01,0x04,
+0x49,0xFF,0xE6,0xFD,0xFC,0x80,0xFC,0x00,0x84,0x01,0x49,0xFF,0xDC,0x12,0x84,0x07,
+0x49,0xFF,0xDC,0x19,0x84,0x00,0x49,0xFF,0xDC,0x22,0x84,0x00,0x49,0xFF,0xDC,0x2B,
+0x44,0x00,0xFF,0x14,0x49,0xFF,0xA9,0x66,0x49,0xFF,0xA9,0x74,0x49,0xFF,0xA9,0x6B,
+0xFC,0x80,0xFC,0x00,0x49,0xFF,0xA9,0x67,0xFC,0x80,0xFC,0x00,0x5A,0x08,0x01,0x0B,
+0xFE,0x0B,0x96,0x01,0x49,0xFF,0xA9,0x56,0x49,0xFF,0xA9,0x64,0x49,0xFF,0xA9,0x5B,
+0xFC,0x80,0x49,0xFF,0xA9,0x6F,0xFC,0x80,0x3C,0x00,0x05,0x90,0x3C,0x10,0x05,0x90,
+0x96,0x01,0x4C,0x00,0xFF,0xFB,0xDD,0x9E,0x84,0x00,0x3C,0x08,0x05,0x6F,0xDD,0x9E,
+0x44,0x22,0x2C,0xD0,0x38,0x11,0x01,0x09,0xDD,0x9E,0xFC,0x00,0x80,0xC0,0x49,0xFF,
+0xFF,0xED,0x44,0x12,0x2C,0xF0,0x38,0x00,0x99,0x09,0xFC,0x80,0x80,0x60,0x5A,0x18,
+0x01,0x10,0xFC,0x20,0x80,0xC1,0x80,0xE0,0x49,0xFF,0xFF,0xF1,0x3C,0x20,0x05,0x6F,
+0x40,0x13,0x1C,0x0C,0xFE,0x57,0x96,0x49,0x3C,0x18,0x05,0x6F,0xFC,0xA0,0x84,0x41,
+0x3C,0x00,0x05,0x6F,0x40,0x11,0x0C,0x0C,0xFE,0x4B,0xFE,0x46,0x3C,0x18,0x05,0x6F,
+0xDD,0x9E,0x3C,0x10,0x05,0x6F,0x40,0x10,0x80,0x0E,0x96,0x46,0xC9,0x03,0x80,0x01,
+0xDD,0x9E,0xFC,0x00,0x80,0xC0,0x49,0xFF,0xFF,0xC1,0x44,0x12,0x2C,0xF0,0x44,0x22,
+0x2C,0xD0,0x38,0x10,0x99,0x01,0x38,0x21,0x19,0x01,0x8A,0x01,0x96,0x01,0xE2,0x02,
+0x56,0x07,0x80,0x01,0xFC,0x80,0xFC,0x00,0x80,0xC0,0x49,0xFF,0xFF,0xAF,0x44,0x12,
+0x2C,0xF0,0x38,0x10,0x99,0x01,0x8A,0x01,0x96,0x01,0xFC,0x80,0x3C,0x00,0x05,0x90,
+0x8C,0x01,0x96,0x01,0x3C,0x08,0x05,0x90,0xDD,0x9E,0x00,0x00,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x02,0x13,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0xF4,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0xD5,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0xB6,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0x97,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0x78,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0x59,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0x3A,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0x94,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x12,0xA4,0x02,0x64,0x22,0x04,0x02,0x3A,0x1F,0x88,0x3C,
+0x64,0x12,0x00,0x02,0x9E,0x4A,0x64,0x12,0x00,0x03,0x44,0x10,0x00,0xA4,0x38,0x10,
+0x82,0x02,0xDD,0x21,0x3A,0x0F,0x84,0x04,0x64,0x02,0x00,0x43,0x64,0x00,0x00,0x08,
+0x64,0x02,0xA4,0x03,0x64,0x12,0x04,0x03,0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0x94,0x04,
+0x3A,0x0F,0x80,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0x94,0x3C,0x3A,0xFF,0xBF,0xBC,
+0x44,0x10,0x00,0xA4,0x38,0x10,0x82,0x02,0xDD,0x21,0x3A,0xFF,0xBF,0x84,0x3A,0x1F,
+0x94,0x04,0x3A,0x0F,0x80,0x04,0x64,0x00,0x00,0x04,0xD5,0x00,0x3A,0x0F,0x80,0x3C,
+0x84,0x00,0xD5,0xEB,0x3A,0x0F,0x80,0x3C,0x84,0x01,0xD5,0xE7,0x3A,0x0F,0x80,0x3C,
+0x84,0x02,0xD5,0xE3,0x3A,0x0F,0x80,0x3C,0x84,0x03,0xD5,0xDF,0x3A,0x0F,0x80,0x3C,
+0x84,0x04,0xD5,0xDB,0x3A,0x0F,0x80,0x3C,0x84,0x05,0xD5,0xD7,0x3A,0x0F,0x80,0x3C,
+0x84,0x06,0xD5,0xD3,0x3A,0x0F,0x80,0x3C,0x84,0x07,0xD5,0xCF,0x3A,0x0F,0x80,0x3C,
+0x84,0x08,0xD5,0xCB,0x3A,0x0F,0x80,0x3C,0x84,0x09,0xD5,0xC7,0x3A,0x0F,0x80,0x3C,
+0x84,0x0A,0xD5,0xC3,0x3A,0x0F,0x80,0x3C,0x84,0x0B,0xD5,0xBF,0x3A,0x0F,0x80,0x3C,
+0x84,0x0C,0xD5,0xBB,0x3A,0x0F,0x80,0x3C,0x84,0x0D,0xD5,0xB7,0x3A,0x0F,0x80,0x3C,
+0x84,0x0E,0xD5,0xB3,0x3A,0x0F,0x80,0x3C,0x84,0x0F,0xD5,0xAF,0x3A,0x0F,0x80,0x3C,
+0xFA,0x00,0xD5,0xAB,0x3A,0x0F,0x80,0x3C,0xFA,0x01,0xD5,0xA7,0x3A,0x0F,0x80,0x3C,
+0xFA,0x02,0xD5,0xA3,0x3A,0x0F,0x80,0x3C,0xFA,0x03,0xD5,0x9F,0x3A,0x0F,0x80,0x3C,
+0xFA,0x04,0xD5,0x9B,0x3A,0x0F,0x80,0x3C,0xFA,0x05,0xD5,0x97,0x3A,0x0F,0x80,0x3C,
+0xFA,0x06,0xD5,0x93,0x3A,0x0F,0x80,0x3C,0xFA,0x07,0xD5,0x8F,0x3A,0x0F,0x80,0x3C,
+0xFA,0x08,0xD5,0x8B,0x3A,0x0F,0x80,0x3C,0xFA,0x09,0xD5,0x87,0x3A,0x0F,0x80,0x3C,
+0xFA,0x0A,0xD5,0x83,0x3A,0x0F,0x80,0x3C,0xFA,0x0B,0x48,0xFF,0xFF,0x7F,0x3A,0x0F,
+0x80,0x3C,0xFA,0x0C,0x48,0xFF,0xFF,0x7A,0x3A,0x0F,0x80,0x3C,0xFA,0x0D,0x48,0xFF,
+0xFF,0x75,0x3A,0x0F,0x80,0x3C,0xFA,0x0E,0x48,0xFF,0xFF,0x70,0x3A,0x0F,0x80,0x3C,
+0x44,0x00,0x00,0x1F,0x48,0xFF,0xFF,0x6A,0x84,0x01,0x64,0x04,0xC0,0x02,0x44,0x02,
+0x00,0x01,0x64,0x04,0xE0,0x03,0x45,0xD2,0x21,0xF0,0x3F,0xC8,0x00,0x00,0x45,0xF2,
+0x5F,0xF4,0x84,0x00,0x42,0x0E,0x00,0x21,0x49,0x00,0x00,0x42,0x49,0x00,0x03,0x4D,
+0xD5,0x00,0x92,0x00,0xFC,0x00,0x44,0x32,0x11,0x00,0x44,0x22,0x10,0x00,0x9A,0x9A,
+0x44,0x02,0x10,0x00,0x44,0x11,0x10,0x00,0x49,0xFF,0xFB,0x22,0x49,0xFF,0xD9,0x08,
+0x44,0x32,0x05,0xB0,0x44,0x22,0x00,0x00,0x9A,0x9A,0x44,0x02,0x00,0x00,0x44,0x11,
+0x00,0x00,0x49,0xFF,0xFB,0x15,0x49,0xFF,0xD8,0xFB,0x44,0x02,0x11,0x00,0x44,0x22,
+0x40,0x1C,0x84,0x20,0x8A,0x40,0x49,0x00,0x03,0x7F,0xFC,0x80,0x84,0x00,0x64,0x05,
+0xE4,0x03,0x84,0x1F,0x64,0x03,0x04,0x03,0x64,0x03,0x24,0x03,0x64,0x12,0x24,0x02,
+0x44,0x0F,0x0F,0xFF,0xFE,0x0E,0x64,0x02,0x24,0x03,0x64,0x12,0x00,0x02,0x84,0x18,
+0xFE,0x0E,0x64,0x02,0x00,0x03,0x64,0x00,0x00,0x08,0xDD,0x9E,0xFC,0x00,0x49,0xFF,
+0xFF,0xE7,0x64,0x00,0x80,0x02,0x92,0x1E,0xC0,0x06,0x64,0x00,0x84,0x02,0x96,0x2E,
+0xC0,0x02,0xD5,0x00,0x49,0xFF,0xFF,0xB8,0x64,0x12,0x00,0x43,0x64,0x00,0x00,0x08,
+0x64,0x00,0x00,0x08,0xFC,0x80,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,
+0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0x44,0x04,0x80,0x04,0xA6,0x01,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x05,0x84,0x21,0xAE,0x40,0xDD,0x9E,0x44,0x04,0x80,0x01,
+0xA6,0x00,0xC8,0x05,0xFC,0x00,0x49,0xFF,0xD4,0x60,0xFC,0x80,0xDD,0x9E,0xFC,0x00,
+0x44,0x04,0x80,0x00,0xA6,0x03,0x49,0xFF,0xD9,0x16,0xFC,0x80,0x44,0x14,0x80,0x04,
+0x44,0x04,0x80,0x84,0xA6,0x88,0xB4,0x00,0x96,0x06,0xFE,0x16,0xC0,0x03,0x84,0x01,
+0xAE,0x08,0xDD,0x9E,0xFC,0x00,0x44,0x04,0x80,0x00,0xA6,0x03,0x49,0xFF,0xA6,0x5B,
+0xFC,0x80,0x44,0x14,0x80,0x14,0xA6,0x08,0x96,0x06,0xC0,0x09,0x84,0x01,0xAE,0x08,
+0x44,0x14,0x80,0x94,0xB4,0x01,0x58,0x00,0x00,0x01,0xB6,0x01,0x44,0x14,0x80,0x14,
+0xA6,0x08,0x92,0x01,0x96,0x06,0xC0,0x09,0x84,0x02,0xAE,0x08,0x44,0x14,0x80,0x94,
+0xB4,0x01,0x58,0x00,0x00,0x02,0xB6,0x01,0xDD,0x9E,0xFC,0x00,0x49,0xFF,0xD2,0xB6,
+0xFC,0x80,0x44,0x04,0x80,0x04,0xA6,0x02,0x92,0x02,0x96,0x06,0xC0,0x05,0x44,0x04,
+0x80,0x06,0x84,0x24,0xAE,0x40,0xDD,0x9E,0x44,0x14,0x80,0x04,0xA6,0x0B,0x92,0x01,
+0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x07,0x84,0x42,0xAE,0x80,0xA6,0x0B,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x07,0x84,0x21,0xAE,0x40,0xDD,0x9E,0x44,0x04,0x80,0x08,
+0xB4,0x20,0x92,0x24,0x96,0x46,0xC1,0x03,0xFA,0x20,0xAE,0x40,0xB4,0x00,0x84,0x21,
+0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x08,0xAE,0x40,0x3E,0x17,0xF4,0xE9,0x44,0x04,
+0x80,0x08,0xB4,0x20,0x92,0x21,0x96,0x46,0xC1,0x06,0x84,0x22,0xAE,0x40,0x84,0x21,
+0x3E,0x17,0xF4,0xE8,0xB4,0x00,0x92,0x02,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x08,
+0x84,0x24,0xAE,0x40,0xDD,0x9E,0xDD,0x9E,0xFC,0x00,0x49,0xFF,0xD1,0x66,0xFC,0x80,
+0xFC,0x00,0x49,0xFF,0xD1,0xC1,0xFC,0x80,0xFC,0x00,0x49,0xFF,0x9A,0x76,0xFC,0x80,
+0x44,0x14,0x80,0x08,0xB4,0x01,0x92,0x08,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x09,
+0x84,0x41,0xAE,0x80,0xB4,0x01,0x92,0x09,0x96,0x06,0xC0,0x0F,0x44,0x04,0x80,0x09,
+0x84,0x22,0xAE,0x40,0x84,0x01,0x3E,0x07,0xF4,0xF2,0x44,0x04,0x50,0x28,0xB4,0x00,
+0x92,0x06,0x96,0x1F,0x3E,0x07,0xF4,0xF1,0xDD,0x9E,0xFC,0x00,0x44,0x04,0x80,0x08,
+0xB4,0x00,0x92,0x12,0x96,0x06,0xC0,0x58,0x44,0x14,0x80,0x88,0xB4,0x01,0x92,0x12,
+0x96,0x06,0xC0,0x52,0x44,0x04,0x80,0x0A,0x84,0x44,0xAE,0x80,0xB4,0x41,0x44,0x0D,
+0xFF,0xFF,0xFE,0x16,0x44,0x67,0x30,0x04,0xB6,0x01,0xB4,0x26,0x84,0x1E,0xFE,0x0E,
+0xB6,0x06,0x84,0x0A,0x49,0xFF,0xA6,0x7B,0xB4,0x06,0x58,0x00,0x00,0x01,0xB6,0x06,
+0x84,0x0A,0x49,0xFF,0xA6,0x74,0x49,0xFF,0xD6,0x7D,0x44,0x00,0x00,0x87,0x49,0xFF,
+0xD6,0x72,0x44,0x17,0x30,0x10,0xB4,0x01,0x96,0x06,0xC0,0xFE,0x44,0x17,0x30,0x10,
+0xB4,0x01,0x92,0x03,0x96,0x06,0x5A,0x00,0x01,0xFD,0x44,0x67,0x30,0x04,0x84,0x0A,
+0x49,0xFF,0xA6,0x5D,0xB4,0x26,0x84,0x1E,0xFE,0x0E,0xB6,0x06,0x84,0x0A,0x49,0xFF,
+0xA6,0x56,0xB4,0x06,0x58,0x00,0x00,0x01,0xB6,0x06,0x84,0x0A,0x49,0xFF,0xA6,0x4F,
+0x44,0x14,0x80,0x88,0x84,0x01,0x3E,0x07,0xF4,0xF0,0xB4,0x41,0x44,0x02,0x00,0x00,
+0xFE,0x17,0xB6,0x01,0x44,0x04,0x80,0x0A,0x84,0x22,0xAE,0x40,0x3C,0x0D,0xFD,0x3B,
+0x8C,0x01,0x3C,0x0F,0xFD,0x3B,0x44,0x04,0x80,0x08,0x84,0x21,0xB4,0x00,0x92,0x10,
+0x96,0x06,0xC0,0x0C,0x44,0x04,0x80,0x88,0xB4,0x00,0x92,0x10,0x96,0x06,0xC0,0x06,
+0x44,0x04,0x80,0x0A,0x3E,0x17,0xF4,0xF3,0xAE,0x40,0x44,0x04,0x80,0x08,0xB4,0x00,
+0x92,0x11,0x96,0x06,0xC0,0x0B,0x44,0x04,0x80,0x88,0xB4,0x00,0x92,0x11,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x0A,0x84,0x22,0xAE,0x40,0xFC,0x80,0x44,0x14,0x80,0x08,
+0x84,0x41,0xB4,0x01,0x92,0x18,0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x0B,0xAE,0x80,
+0x3E,0x27,0xF4,0xB5,0xB4,0x01,0x92,0x19,0x96,0x06,0xC0,0x1D,0x44,0x04,0x80,0x0B,
+0x84,0x22,0xAE,0x40,0x84,0x00,0x3E,0x07,0xF4,0xB5,0x46,0x00,0x00,0x81,0x44,0x1F,
+0xFE,0xFF,0x50,0x30,0x00,0x70,0xB4,0x43,0xFE,0x56,0xB6,0x23,0xB4,0x43,0x44,0x1E,
+0xFF,0xFF,0xFE,0x56,0xB6,0x23,0xB4,0x43,0x46,0x1F,0xEF,0xFF,0x50,0x10,0x8F,0xFF,
+0xFE,0x56,0xB6,0x23,0x44,0x04,0x80,0x08,0xB4,0x00,0x92,0x1A,0x96,0x06,0xC0,0x0E,
+0x44,0x14,0x70,0x08,0xB4,0x01,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,0x78,0x23,
+0xB6,0x01,0x44,0x04,0x80,0x0B,0x84,0x24,0xAE,0x40,0x44,0x04,0x80,0x08,0xB4,0x00,
+0x92,0x1B,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0B,0x84,0x28,0xAE,0x40,0xDD,0x9E,
+0x44,0x04,0x80,0x04,0xA6,0x02,0x92,0x03,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x06,
+0x84,0x28,0xAE,0x40,0xDD,0x9E,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x10,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x0E,0x84,0x41,0xAE,0x80,0xB4,0x01,0x92,0x11,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x0E,0x84,0x22,0xAE,0x40,0x44,0x14,0x80,0x0C,0xB4,0x01,
+0x92,0x12,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0E,0x84,0x44,0xAE,0x80,0xB4,0x01,
+0x92,0x13,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0E,0x84,0x28,0xAE,0x40,0x44,0x14,
+0x80,0x0C,0xB4,0x01,0x92,0x14,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0E,0xFA,0x40,
+0xAE,0x80,0xB4,0x01,0x92,0x15,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0E,0xFA,0x30,
+0xAE,0x40,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x16,0x96,0x06,0xC0,0x06,0x44,0x04,
+0x80,0x0E,0x44,0x20,0x00,0x40,0xAE,0x80,0xB4,0x01,0x92,0x17,0x96,0x06,0xC0,0x06,
+0x44,0x04,0x80,0x0E,0x44,0x1F,0xFF,0x80,0xAE,0x40,0x44,0x14,0x80,0x0C,0xB4,0x01,
+0x92,0x18,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0F,0x84,0x41,0xAE,0x80,0xB4,0x01,
+0x92,0x19,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0F,0x84,0x22,0xAE,0x40,0x44,0x14,
+0x80,0x0C,0xB4,0x01,0x92,0x1A,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0F,0x84,0x44,
+0xAE,0x80,0xB4,0x01,0x92,0x1B,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0F,0x84,0x28,
+0xAE,0x40,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x1C,0x96,0x06,0xC0,0x05,0x44,0x04,
+0x80,0x0F,0xFA,0x40,0xAE,0x80,0xB4,0x01,0x92,0x1D,0x96,0x06,0xC0,0x05,0x44,0x04,
+0x80,0x0F,0xFA,0x30,0xAE,0x40,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x1E,0x96,0x06,
+0xC0,0x06,0x44,0x04,0x80,0x0F,0x44,0x20,0x00,0x40,0xAE,0x80,0xB4,0x01,0x4E,0x04,
+0x00,0x07,0x44,0x04,0x80,0x0F,0x44,0x1F,0xFF,0x80,0xAE,0x40,0xDD,0x9E,0x44,0x04,
+0x80,0x0C,0xB4,0x20,0x96,0x46,0xC1,0x03,0x84,0x21,0xAE,0x40,0xB4,0x00,0x92,0x01,
+0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0C,0x84,0x22,0xAE,0x40,0x44,0x04,0x80,0x0C,
+0xB4,0x20,0x92,0x22,0x96,0x46,0xC1,0x03,0x84,0x24,0xAE,0x40,0xB4,0x00,0x92,0x03,
+0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0C,0x84,0x28,0xAE,0x40,0x44,0x04,0x80,0x0C,
+0xB4,0x20,0x92,0x24,0x96,0x46,0xC1,0x03,0xFA,0x20,0xAE,0x40,0xB4,0x00,0x92,0x05,
+0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0C,0xFA,0x30,0xAE,0x40,0x44,0x04,0x80,0x0C,
+0xB4,0x20,0x92,0x26,0x96,0x46,0xC1,0x04,0x44,0x10,0x00,0x40,0xAE,0x40,0xB4,0x00,
+0x92,0x07,0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x0C,0x44,0x1F,0xFF,0x80,0xAE,0x40,
+0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x08,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0D,
+0x84,0x41,0xAE,0x80,0xB4,0x01,0x92,0x09,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0D,
+0x84,0x22,0xAE,0x40,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x0A,0x96,0x06,0xC0,0x05,
+0x44,0x04,0x80,0x0D,0x84,0x44,0xAE,0x80,0xB4,0x01,0x92,0x0B,0x96,0x06,0xC0,0x05,
+0x44,0x04,0x80,0x0F,0x84,0x28,0xAE,0x40,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x0C,
+0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0D,0xFA,0x40,0xAE,0x80,0xB4,0x01,0x92,0x0D,
+0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0D,0xFA,0x30,0xAE,0x40,0x44,0x14,0x80,0x0C,
+0xB4,0x01,0x92,0x0E,0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x0D,0x44,0x20,0x00,0x40,
+0xAE,0x80,0xB4,0x01,0x92,0x0F,0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x0D,0x44,0x1F,
+0xFF,0x80,0xAE,0x40,0xDD,0x9E,0x44,0x04,0x80,0x00,0x44,0x14,0x80,0x80,0xA6,0x80,
+0xB4,0x21,0x96,0x46,0xFE,0x56,0xC1,0x03,0x84,0x21,0xAE,0x40,0xA6,0x00,0x40,0x10,
+0x04,0x09,0x44,0x04,0x80,0x80,0xB4,0x00,0x92,0x01,0x96,0x06,0xFE,0x0E,0xC0,0x05,
+0x44,0x04,0x80,0x00,0x84,0x22,0xAE,0x40,0x44,0x14,0x80,0x00,0xA6,0x08,0x40,0x20,
+0x08,0x09,0x44,0x04,0x80,0x80,0xB4,0x00,0x92,0x02,0x96,0x06,0xFE,0x16,0xC0,0x03,
+0x84,0x04,0xAE,0x08,0xA6,0x08,0x40,0x10,0x0C,0x09,0x44,0x04,0x80,0x80,0xB4,0x00,
+0x92,0x03,0x96,0x06,0xFE,0x0E,0xC0,0x05,0x44,0x04,0x80,0x00,0x84,0x28,0xAE,0x40,
+0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,
+0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xFC,0x00,0x44,0x07,0x10,0x18,0x84,0x20,0xAE,0x41,
+0x44,0x16,0x20,0x04,0x46,0x00,0x10,0x00,0xB4,0x41,0xFE,0x17,0xB6,0x01,0x44,0x00,
+0x01,0x00,0x84,0x20,0x49,0xFF,0x9A,0xC4,0x44,0x00,0x01,0x00,0x84,0x20,0x49,0xFF,
+0x9A,0xCE,0x44,0x00,0x01,0x00,0x84,0x21,0x49,0xFF,0x9A,0xD8,0x49,0xFF,0xE2,0xC6,
+0x44,0x14,0x30,0x34,0x46,0x00,0x04,0x00,0xB4,0x41,0xFE,0x17,0xB6,0x01,0x49,0xFF,
+0xD5,0x1F,0x49,0xFF,0xD5,0x57,0x49,0x00,0x12,0x46,0x49,0xFF,0xD7,0xAB,0x49,0xFF,
+0xCD,0x37,0x84,0x00,0xFC,0x80,0x00,0x00,0x80,0x60,0x54,0xF1,0x00,0x03,0xE9,0x1B,
+0xE6,0x44,0xE9,0x19,0x54,0x41,0x80,0x03,0x54,0x50,0x80,0x03,0xDC,0x14,0xC5,0x0A,
+0x52,0x52,0x80,0x04,0x9A,0x95,0x99,0x69,0x08,0x40,0x80,0x01,0x18,0x41,0x80,0x01,
+0xD9,0xFC,0x40,0x51,0x08,0x09,0xC5,0x07,0x95,0x6A,0x99,0x69,0x96,0x8F,0xA3,0x09,
+0xAB,0x19,0xD9,0xFE,0xC2,0x07,0x99,0x4A,0x08,0x40,0x80,0x01,0x18,0x41,0x80,0x01,
+0xD9,0xFC,0xDD,0x9E,0x80,0x60,0xE6,0x44,0xE9,0x1A,0x54,0x51,0x80,0x03,0xC5,0x08,
+0x52,0x52,0x80,0x04,0x9A,0x95,0x99,0x6B,0x18,0x11,0x80,0x01,0xDB,0xFE,0x40,0x51,
+0x08,0x09,0x96,0x8F,0xC5,0x0C,0x95,0x6A,0x99,0x5D,0x96,0x48,0x40,0x40,0xA0,0x08,
+0xFE,0x67,0x40,0x40,0xC0,0x08,0xFE,0x67,0xAA,0x59,0xDB,0xFF,0x99,0x5A,0xD3,0x04,
+0x18,0x11,0x80,0x01,0xD5,0xFD,0xDD,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFC,0x45,0x3C,0x13,0xF7,0xC7,0x84,0x00,0x3E,0x07,0xF1,0x5C,0x44,0x0F,0xFF,0xBF,
+0xFE,0x0E,0x3C,0x13,0xF7,0xC5,0x3C,0x0B,0xF7,0xC7,0x84,0x1D,0xFE,0x0E,0x3C,0x0B,
+0xF7,0xC5,0x49,0xFF,0xDA,0xDF,0x5A,0x00,0x01,0x06,0x3C,0x0C,0x02,0xB6,0x5A,0x08,
+0x01,0x0A,0x3C,0x03,0xF7,0xC5,0x58,0x00,0x00,0x03,0x3C,0x0B,0xF7,0xC5,0x49,0xFF,
+0xDA,0xD4,0x3C,0x23,0xF7,0xC5,0x54,0x01,0x00,0x01,0xC0,0x06,0x3C,0x13,0xF8,0x9C,
+0x8C,0x21,0x3C,0x1B,0xF8,0x9C,0x3C,0x03,0xF8,0x9C,0xE6,0x03,0xE9,0x08,0x84,0x1E,
+0xFE,0x16,0x3C,0x0B,0xF7,0xC5,0x84,0x00,0x3C,0x0B,0xF8,0x9C,0x3C,0xF7,0xF9,0xF5,
+0x5E,0xF7,0x80,0x5A,0xE8,0x0B,0x3C,0x03,0xF9,0xF4,0x50,0x00,0x00,0x59,0x96,0x01,
+0x5C,0xF0,0x00,0xB3,0xE8,0x03,0x49,0xFF,0xDA,0x9E,0x49,0xFF,0xED,0x6A,0x80,0xC0,
+0x49,0xFF,0xA2,0x19,0x49,0xFF,0xB0,0xB8,0x80,0x06,0x49,0xFF,0xAD,0x0D,0x3C,0x0D,
+0xFB,0xE0,0x5A,0x08,0x01,0x0C,0x49,0xFF,0xDA,0x8B,0xC8,0x08,0x49,0xFF,0xDA,0x8F,
+0xC8,0x05,0x49,0xFF,0x9F,0xC4,0x48,0x00,0x02,0xAB,0x49,0xFF,0xAD,0x97,0x44,0x02,
+0x13,0x58,0x2E,0x17,0xF1,0x5C,0x49,0xFF,0xB8,0x76,0x44,0x02,0x2F,0x88,0xB6,0x1F,
+0x44,0x02,0x30,0xC8,0xF0,0x81,0x3C,0x10,0x05,0x95,0x3C,0x00,0x05,0x93,0x3C,0x20,
+0x05,0x97,0x3C,0x30,0x05,0x99,0x3C,0x90,0x05,0x92,0x3C,0x70,0x05,0x94,0x3C,0x50,
+0x05,0x96,0x3C,0x40,0x05,0x98,0x40,0x00,0x40,0x08,0x40,0x10,0xC0,0x08,0x40,0x21,
+0x40,0x08,0x40,0x31,0xC0,0x08,0x40,0x00,0x24,0x04,0xFE,0x7F,0xFE,0xAF,0xFE,0xE7,
+0xF6,0x82,0x44,0x42,0x33,0x90,0x44,0x52,0x13,0x4C,0x49,0x00,0x03,0x63,0x80,0x06,
+0x44,0x12,0x13,0x58,0x2E,0x27,0xF1,0x5C,0x3C,0x34,0x05,0x92,0x49,0xFF,0xB8,0xB7,
+0x2E,0x00,0x0B,0x32,0x3C,0x17,0xF7,0xA6,0x50,0x00,0x00,0x64,0x44,0x90,0x00,0x64,
+0xFE,0x0C,0x40,0x00,0x24,0x16,0x44,0x72,0x33,0x88,0x40,0x90,0x00,0x11,0x81,0x47,
+0x84,0xC0,0x02,0x05,0x00,0x84,0xC0,0x08,0x00,0x05,0x01,0x22,0x80,0x26,0x00,0x25,
+0x01,0x0E,0x49,0xFF,0xAD,0xD6,0x8C,0xC1,0x97,0xB0,0x50,0xA5,0x01,0x24,0x5A,0x68,
+0x0B,0xF2,0x84,0x60,0x44,0x62,0x13,0x4C,0x44,0x82,0x34,0xA8,0x2E,0x07,0xF1,0x5C,
+0xE2,0x60,0xE8,0x1B,0x44,0x00,0x00,0x38,0x80,0x26,0x42,0x11,0x80,0x73,0x00,0x10,
+0x80,0x3B,0x50,0xA1,0x80,0x01,0x5A,0x18,0xFF,0x25,0x80,0x26,0x42,0x15,0x00,0x73,
+0xA6,0x8C,0x5A,0x28,0x01,0x1F,0xF2,0x85,0xF3,0x84,0x49,0xFF,0xBE,0x1F,0xE6,0x0B,
+0x80,0x20,0xF3,0x04,0xF2,0x05,0xE9,0x09,0x49,0xFF,0xB2,0x6E,0x3C,0x0D,0xFB,0xD6,
+0x96,0x1E,0xC0,0x12,0x84,0x04,0xD5,0x11,0x44,0x00,0x01,0x24,0x80,0x88,0x42,0x40,
+0x80,0x73,0xA6,0x27,0x58,0x00,0x00,0x10,0xAE,0x27,0x80,0x03,0x49,0xFF,0xAD,0x99,
+0x54,0x35,0x00,0xFF,0xD5,0xCC,0x84,0x03,0x49,0xFF,0xBD,0xB6,0x3C,0x0C,0x02,0xB6,
+0xC8,0x06,0x85,0x40,0x44,0x72,0x33,0x90,0x80,0xCA,0xD5,0x2A,0x84,0xC0,0x00,0x03,
+0x81,0x0E,0x5A,0x08,0x01,0x0E,0x00,0x03,0x81,0x0D,0xC8,0x0A,0x22,0xF3,0x80,0x8A,
+0x5E,0xF7,0x80,0xC9,0xE9,0x05,0x80,0x06,0x84,0x22,0x49,0xFF,0xBD,0xAB,0x8C,0xC1,
+0x97,0xB0,0x50,0x73,0x81,0x24,0x5A,0x68,0x0B,0xEC,0xD5,0xE4,0x00,0x13,0x81,0x06,
+0x5A,0x10,0x01,0x2C,0x00,0x03,0x81,0x05,0x5A,0x08,0x02,0x04,0x48,0x00,0x01,0x18,
+0x8D,0x41,0x50,0x73,0x81,0x24,0x5A,0xA8,0x0B,0x04,0x48,0x00,0x01,0x30,0x54,0x05,
+0x00,0xFF,0xF0,0x84,0xB0,0x47,0x80,0x07,0x84,0x40,0x49,0xFF,0xA0,0x4B,0x00,0x03,
+0x81,0x05,0xE6,0x05,0xE8,0xE8,0x44,0xF0,0xDF,0xB4,0x38,0x07,0x82,0x02,0x40,0xF0,
+0x3C,0x00,0xDD,0x0F,0xB8,0xFF,0xFF,0xFF,0x8A,0x00,0x00,0x00,0xF8,0x00,0x00,0x00,
+0x6C,0x00,0x00,0x00,0xB0,0x01,0x00,0x00,0x3C,0x0D,0xFB,0xD6,0x8C,0xC1,0x54,0x00,
+0x08,0x00,0x97,0xB0,0xC0,0x17,0xF0,0x07,0x22,0x23,0x80,0x86,0x00,0x00,0x00,0x14,
+0x5C,0xF0,0x00,0x21,0xE9,0x0A,0x3C,0x00,0x05,0x93,0x91,0x21,0x96,0xC3,0xE1,0x23,
+0x40,0x04,0xBC,0x1A,0x40,0x90,0x00,0x11,0xE0,0x49,0xF0,0x04,0xE8,0x04,0x84,0x20,
+0xD5,0x02,0xF0,0x04,0x49,0xFF,0xBD,0x5F,0xF0,0x04,0x49,0xFF,0xBD,0x81,0x81,0x00,
+0xF0,0x04,0x49,0xFF,0xBD,0x3C,0xE2,0x08,0x84,0x21,0xF0,0x04,0xE8,0x0E,0xD5,0x0C,
+0x00,0x03,0x81,0x06,0x5A,0x08,0x01,0x66,0xF0,0x04,0x8C,0xC1,0x84,0x20,0x49,0xFF,
+0xBD,0x4A,0x97,0xB0,0xF0,0x04,0x84,0x22,0x49,0xFF,0xBD,0x3C,0xD5,0x9C,0x00,0x13,
+0x81,0x06,0x5A,0x18,0x02,0x04,0x48,0x00,0x00,0xA0,0x5A,0x18,0x01,0x95,0x3C,0x0D,
+0xFB,0xD6,0x8C,0xC1,0x54,0x00,0x08,0x00,0x97,0xB0,0xC0,0x17,0xF0,0x07,0x22,0x23,
+0x80,0x86,0x00,0x00,0x00,0x14,0x5C,0xF0,0x00,0x21,0xE9,0x0A,0x3C,0x00,0x05,0x93,
+0x91,0x21,0x96,0xC3,0xE1,0x23,0x40,0x04,0xBC,0x1A,0x40,0x90,0x00,0x11,0xE0,0x49,
+0xF0,0x04,0xE8,0x04,0x84,0x20,0xD5,0x02,0xF0,0x04,0x49,0xFF,0xBD,0x1C,0xF0,0x04,
+0x49,0xFF,0xBD,0x3E,0x81,0x00,0xF0,0x04,0x49,0xFF,0xBC,0xF9,0xE2,0x08,0x4E,0xF2,
+0xFF,0x6B,0xF0,0x04,0x84,0x22,0x49,0xFF,0xBD,0x05,0xD5,0x1D,0xF0,0x04,0x84,0x20,
+0x49,0xFF,0xBD,0x09,0x00,0x03,0x81,0x06,0x5A,0x08,0x02,0x14,0x84,0x21,0xF0,0x04,
+0x49,0xFF,0xBD,0x01,0xF0,0x04,0x49,0xFF,0xBD,0x23,0x81,0x00,0xF0,0x04,0x49,0xFF,
+0xBC,0xEC,0xE2,0x08,0xF0,0x04,0xE9,0x59,0x84,0x23,0x49,0xFF,0xBC,0xEB,0xD5,0x63,
+0x8C,0xC1,0x97,0xB0,0xF0,0x04,0x84,0x20,0x49,0xFF,0xBC,0xED,0x48,0xFF,0xFF,0x44,
+0x5A,0x00,0x02,0x04,0x48,0xFF,0xFF,0x40,0xF0,0x04,0x84,0x21,0x49,0xFF,0xBC,0xE3,
+0x44,0x10,0x01,0x2C,0x44,0x20,0x02,0xBC,0x84,0x65,0x80,0x07,0x49,0xFF,0xAF,0x37,
+0xF0,0x04,0x49,0xFF,0xBC,0xFD,0x81,0x00,0xF0,0x04,0x49,0xFF,0xBC,0xC6,0xE2,0x08,
+0xE8,0x0B,0x44,0x10,0x01,0x24,0x44,0x02,0x34,0xAB,0x42,0x05,0x04,0x73,0xA6,0x46,
+0x58,0x10,0x80,0x08,0xAE,0x46,0x44,0x80,0x01,0x24,0x44,0x02,0x34,0xB0,0x42,0x05,
+0x20,0x73,0xB4,0x00,0x92,0x0B,0x96,0x06,0x5A,0x08,0x01,0x2E,0x80,0x07,0x49,0xFF,
+0xBF,0xBD,0x5A,0x08,0x01,0x29,0xF0,0x04,0x49,0xFF,0xBC,0xFD,0x80,0x07,0x84,0x20,
+0x80,0x48,0xD5,0x19,0x00,0x03,0x81,0x06,0x5A,0x08,0x02,0x1A,0x84,0x21,0xF0,0x04,
+0x49,0xFF,0xBC,0xA9,0xF0,0x04,0x49,0xFF,0xBC,0xCB,0x44,0x12,0x15,0xC0,0x38,0x10,
+0xA8,0x00,0xE2,0x20,0xE8,0x10,0xF0,0x04,0x49,0xFF,0xBC,0xE5,0x80,0x07,0x84,0x20,
+0x44,0x20,0x01,0x24,0x49,0xFF,0xF9,0xC0,0x48,0xFF,0xFE,0xEE,0xF0,0x04,0x84,0x20,
+0x49,0xFF,0xBC,0x91,0x8C,0xC1,0x97,0xB0,0x48,0xFF,0xFE,0xE6,0x02,0x53,0x80,0x81,
+0x44,0x00,0xFF,0xFF,0x4C,0x50,0x3E,0xE6,0x22,0x13,0x80,0x12,0x22,0x03,0x80,0x04,
+0x8C,0xA1,0x8A,0x01,0xF0,0x88,0x22,0x13,0x80,0x13,0x22,0x03,0x80,0x05,0x12,0x53,
+0x80,0x81,0x8A,0x01,0xF0,0x89,0xB0,0x08,0x49,0xFF,0xB7,0x0F,0x02,0x13,0x80,0x84,
+0x88,0x01,0x12,0x03,0x80,0x84,0x48,0xFF,0xFE,0xCD,0x3C,0x13,0xF7,0xC7,0x84,0x1D,
+0xFE,0x0E,0xC6,0x03,0x58,0x00,0x00,0x02,0x3C,0x0B,0xF7,0xC7,0x2E,0x00,0x11,0x9C,
+0x3E,0x00,0x11,0x9D,0x2E,0x00,0x11,0x9B,0x3E,0x00,0x11,0x9C,0x2E,0x00,0x11,0x9A,
+0x3E,0x00,0x11,0x9B,0x2E,0x00,0x11,0x99,0x3E,0x00,0x11,0x9A,0x84,0x00,0x3E,0x60,
+0x11,0x99,0x3C,0x0E,0x02,0xB6,0x49,0xFF,0xEC,0x81,0x3C,0x13,0xF7,0xC7,0x5A,0x08,
+0x01,0x09,0x54,0x00,0x80,0x01,0x3E,0x07,0xF1,0x56,0x3E,0x07,0xF1,0x57,0xD5,0x05,
+0x54,0x00,0x80,0x01,0x3E,0x07,0xF1,0x56,0x96,0x4E,0x84,0x02,0xC9,0x30,0x2E,0x07,
+0xF1,0x50,0xE6,0x04,0xE8,0x3C,0x44,0xF0,0xE2,0x64,0x38,0x07,0x80,0x00,0x40,0xF0,
+0x3C,0x00,0xDD,0x0F,0x04,0x16,0x4E,0x36,0x2E,0x07,0xF1,0x56,0x5A,0x08,0x01,0x30,
+0x3E,0x07,0xF1,0x50,0x2E,0x07,0xF1,0x54,0xD5,0x0D,0x2E,0x07,0xF1,0x56,0x5A,0x00,
+0x01,0x06,0x2E,0x07,0xF1,0x57,0x5A,0x08,0x01,0x12,0x2E,0x07,0xF1,0x54,0x5A,0x00,
+0xFF,0x1F,0x8C,0x01,0x3E,0x07,0xF1,0x54,0xD5,0x1A,0x2E,0x07,0xF1,0x56,0x5A,0x00,
+0x01,0x10,0x2E,0x07,0xF1,0x57,0x5A,0x00,0x01,0x0C,0x84,0x00,0x3E,0x07,0xF1,0x50,
+0xD5,0x0E,0x84,0x03,0x3E,0x07,0xF1,0x50,0x2E,0x07,0xF1,0x55,0xD5,0x05,0x2E,0x07,
+0xF1,0x55,0x5A,0x00,0xFF,0x05,0x8C,0x01,0x3E,0x07,0xF1,0x55,0x2E,0x07,0xF1,0x50,
+0x5A,0x08,0x01,0x06,0x84,0x00,0x3E,0x07,0xF1,0x55,0xD5,0x06,0x84,0x20,0x3E,0x17,
+0xF1,0x54,0x5A,0x08,0x03,0xF9,0x49,0xFF,0x9E,0x09,0x49,0xFF,0x9D,0x33,0x49,0xFF,
+0xAE,0x7C,0x84,0x00,0x44,0x32,0x30,0x44,0x98,0x83,0x00,0x11,0x00,0x0A,0xC1,0x04,
+0x8E,0x21,0x10,0x11,0x00,0x0A,0x8C,0x0C,0x5A,0x08,0x84,0xF8,0x2E,0x07,0xF1,0x50,
+0x5A,0x00,0x01,0x19,0xC0,0x07,0x5A,0x08,0x03,0x1B,0x2E,0x07,0xF1,0x55,0xE6,0x1F,
+0xD5,0x15,0x49,0xFF,0xD8,0x5C,0x5A,0x00,0x01,0x06,0x49,0xFF,0xD7,0xE9,0x5A,0x08,
+0x01,0x05,0x84,0x00,0x84,0x21,0xD5,0x03,0x84,0x00,0x80,0x20,0x49,0xFF,0xCF,0x7D,
+0xD5,0x06,0x2E,0x07,0xF1,0x54,0x5C,0xF0,0x00,0xC9,0xE8,0xF4,0xFC,0xC5,0x92,0x00,
+0xFC,0x21,0x80,0xC1,0x84,0x20,0x3E,0x17,0xF3,0xFC,0x44,0x10,0x00,0xFF,0x3C,0x1B,
+0xF7,0xA8,0x2E,0x10,0x0B,0x40,0x85,0xE3,0x40,0x10,0xBC,0x37,0xE2,0x26,0xF0,0x81,
+0x84,0xE0,0xE8,0x30,0x3C,0x13,0xFA,0x03,0xE6,0x2B,0xE8,0x03,0x84,0x00,0xD5,0x27,
+0x5C,0xF0,0x80,0x29,0xE9,0x06,0xFA,0x2E,0x49,0xFF,0xAF,0x2E,0x3C,0x0B,0xF7,0xA8,
+0x3C,0x03,0xFA,0x03,0x2E,0x10,0x0B,0x40,0xE2,0x01,0xE9,0xF1,0x92,0x01,0x5C,0xF0,
+0x00,0x33,0x80,0x20,0xE9,0x03,0x44,0x10,0x00,0x32,0xF0,0x01,0x54,0x10,0xFF,0xFF,
+0x49,0xFF,0xAF,0x1A,0x5E,0xF0,0x00,0x5F,0xE9,0x07,0x3C,0xF7,0xF9,0xFC,0x84,0x21,
+0x5E,0xF7,0x80,0x5F,0xE8,0x02,0x84,0x22,0x3E,0x17,0xF3,0xFC,0x3C,0x0B,0xF9,0xFC,
+0x84,0xE1,0x3C,0x0D,0xFD,0x00,0xC8,0x1B,0x2E,0x10,0x0B,0x40,0x5A,0x78,0x01,0x0A,
+0x3C,0x03,0xFA,0x03,0xE2,0x20,0xE8,0x05,0x84,0x01,0x3C,0x0F,0xFD,0x00,0xD5,0x05,
+0x84,0x03,0xFE,0x0C,0xE0,0x06,0xE9,0xF9,0x2E,0x07,0xEF,0x16,0x2E,0x10,0x0B,0x42,
+0xE2,0x20,0xE8,0x13,0x84,0x00,0x3C,0x0F,0xFD,0x00,0xD5,0x0F,0x49,0xFF,0xD7,0x78,
+0xC0,0x04,0x44,0xF0,0x01,0xC2,0xD5,0x03,0x44,0xF0,0x00,0x96,0x5A,0x70,0x01,0x06,
+0x3C,0x17,0xF9,0xF5,0xE0,0x2F,0xD5,0xEE,0x2E,0x17,0xF1,0x51,0x3C,0x0D,0xFD,0x00,
+0xE6,0x24,0xE8,0x40,0x44,0xF0,0xE4,0x44,0x38,0x17,0x84,0x00,0x40,0xF0,0xBC,0x00,
+0x4A,0x00,0x3C,0x00,0x04,0x28,0x42,0x68,0x5A,0x08,0x01,0x0E,0x2E,0x27,0xF3,0xFA,
+0x84,0x20,0x3E,0x17,0xF3,0xFA,0x5A,0x20,0xFF,0x2E,0x3E,0x07,0xF1,0x51,0x3E,0x07,
+0xF3,0xFD,0xD5,0x28,0x84,0x00,0x3E,0x07,0xF3,0xFA,0xD5,0x24,0x2E,0x17,0xF3,0xFD,
+0x2E,0x20,0x0B,0x44,0xE2,0x22,0xE8,0x05,0x8C,0x21,0x3E,0x17,0xF3,0xFD,0xD5,0x1A,
+0x84,0x22,0xC0,0x0E,0xD5,0x17,0xC8,0x11,0x2E,0x27,0xF4,0x04,0x2E,0x10,0x0B,0x46,
+0x8C,0x41,0x96,0x90,0xE2,0x22,0x3E,0x27,0xF4,0x04,0xE8,0x0C,0x84,0x23,0x3E,0x17,
+0xF1,0x51,0x3E,0x07,0xF4,0x04,0xD5,0x06,0x84,0x01,0xD5,0x02,0x84,0x00,0x3E,0x07,
+0xF1,0x51,0x2E,0x17,0xF3,0xFC,0x2E,0x07,0xF3,0xFB,0x5A,0x18,0x01,0x04,0x8C,0x04,
+0xD5,0x0D,0x5A,0x18,0x02,0x09,0x3C,0x13,0xFA,0x03,0x5C,0xF0,0x80,0x38,0xE9,0x03,
+0x8E,0x01,0xD5,0x04,0xE6,0xC4,0xE9,0xFD,0x8C,0x01,0x3E,0x07,0xF3,0xFB,0x2E,0x07,
+0xF3,0xFB,0x80,0x20,0x96,0x02,0x5E,0xF0,0x00,0x3D,0xE9,0x04,0x44,0x10,0x00,0x3C,
+0xD5,0x05,0x96,0x0A,0x4E,0x04,0x00,0x03,0x84,0x20,0x96,0x8A,0x5E,0xF1,0x00,0x29,
+0x3E,0x17,0xF3,0xFB,0xE9,0x05,0x49,0xFF,0xAE,0x96,0x84,0x00,0xD5,0x09,0x2E,0x07,
+0xF1,0x51,0xC0,0x06,0xC2,0x04,0x8E,0x21,0x3E,0x17,0xF3,0xFB,0x84,0x01,0xFC,0xA1,
+0xFC,0x40,0x51,0xFF,0xFD,0x58,0xB1,0x8E,0x80,0xE4,0x3A,0x03,0x0C,0x20,0x00,0x03,
+0x00,0x0C,0x44,0x12,0x00,0x88,0xF0,0x82,0xB0,0x19,0x81,0x25,0x3A,0x20,0x94,0x00,
+0x3A,0x20,0x14,0x20,0xA4,0x34,0x3C,0x6D,0xFB,0xD6,0x54,0x63,0x20,0x00,0x4E,0x63,
+0x04,0x6E,0xF0,0x84,0x44,0x10,0x00,0xFF,0x84,0x4B,0xB0,0x16,0xF7,0x8A,0x49,0xFF,
+0xF7,0xDB,0xB0,0x32,0x80,0x26,0x44,0x20,0x01,0xE0,0x49,0xFF,0xF7,0xD5,0x3C,0x0D,
+0xFB,0xD6,0x83,0x89,0x54,0x00,0x20,0x00,0xC0,0x13,0xF0,0x04,0xF1,0x02,0x90,0x01,
+0xF0,0x84,0x84,0x06,0xFE,0x44,0x5E,0xF0,0x81,0xF9,0x80,0x01,0xE8,0x06,0x84,0x25,
+0x40,0x00,0x04,0x16,0x96,0x00,0xD5,0x03,0x44,0x00,0x00,0x64,0xF0,0x82,0x3C,0x03,
+0xF7,0xC7,0x96,0x36,0xC0,0x0B,0xF1,0x02,0x00,0x0F,0x80,0x08,0x5C,0xF0,0x80,0x55,
+0xE8,0x03,0x44,0x00,0x00,0x55,0x96,0x00,0xF0,0x82,0x04,0x2F,0x80,0xB2,0x2E,0x37,
+0xDE,0x16,0x51,0xEF,0x80,0x50,0x2E,0x07,0xDE,0x17,0xF0,0x86,0xA6,0x10,0x94,0x02,
+0x88,0x02,0xF0,0x88,0x84,0x00,0xF0,0x83,0xF0,0x08,0x4C,0x20,0x00,0xAE,0x84,0x80,
+0xA7,0x55,0x00,0x91,0x00,0x04,0x80,0x04,0xB1,0xD9,0x44,0xAF,0xFF,0xDF,0x38,0x12,
+0x1C,0x00,0x99,0xBC,0x88,0x25,0x96,0x48,0xE2,0x23,0x20,0x63,0x00,0x01,0xE8,0x25,
+0x88,0xC9,0x04,0x8F,0x80,0x06,0x97,0xB0,0xE2,0xC8,0xE8,0x1F,0x04,0x8F,0x80,0xB3,
+0x88,0x28,0x42,0x13,0x0C,0x73,0xA7,0x88,0x40,0x13,0x28,0x02,0x5A,0x10,0x1F,0x16,
+0x97,0xA7,0x84,0x20,0x54,0x80,0x80,0xFF,0x4C,0x80,0x40,0x07,0x38,0x6F,0x00,0x08,
+0x8C,0x01,0x96,0x00,0xD5,0x0A,0x38,0x8F,0x04,0x00,0x4C,0x83,0x00,0x07,0x8C,0x21,
+0x54,0xF0,0x80,0xFF,0xE2,0x0F,0xE8,0xEF,0x8C,0x82,0x5A,0x48,0x10,0xD2,0x42,0x54,
+0x8C,0x73,0x04,0x1F,0x80,0xB4,0x95,0x69,0x88,0x25,0xF1,0x87,0x84,0xC0,0x4C,0x60,
+0x00,0x69,0x9D,0xF1,0x96,0x78,0xF1,0x85,0x80,0xA1,0xD0,0x61,0x38,0x1F,0x18,0x00,
+0x44,0x42,0x2F,0xF0,0x44,0x72,0x2F,0xF0,0x38,0xF2,0x04,0x00,0x38,0x4F,0x14,0x00,
+0x38,0x83,0x90,0x00,0x5A,0xF0,0xFF,0x51,0x5A,0x80,0xFF,0x4F,0xF7,0x07,0x81,0x3C,
+0x22,0xA3,0x80,0x00,0x44,0x70,0x00,0x64,0x42,0xA5,0x1C,0x24,0x44,0x70,0x00,0x38,
+0x42,0x97,0x9C,0x73,0x50,0x94,0x80,0x30,0x00,0xF4,0x80,0x07,0x00,0x94,0x80,0x08,
+0x04,0x7F,0x80,0xB4,0x42,0xF4,0x8C,0x73,0x38,0x93,0xBD,0x11,0x44,0xF0,0x00,0x38,
+0x80,0xFC,0x42,0x74,0x3C,0x73,0x50,0x83,0x80,0x30,0x00,0xF4,0x00,0x07,0x00,0x84,
+0x00,0x08,0x04,0x7F,0x80,0xB4,0x42,0xF4,0x0C,0x73,0x38,0x83,0xBD,0x11,0x40,0x95,
+0x25,0x37,0x40,0xA5,0x21,0x57,0xE3,0x49,0xE8,0x04,0x54,0x94,0x80,0xFF,0xD5,0x03,
+0x54,0x95,0x00,0xFF,0xF7,0x03,0xE6,0xF4,0xE8,0x17,0x04,0xAF,0x80,0x03,0x85,0x03,
+0xB1,0xE3,0x42,0x75,0x20,0x73,0xE2,0x24,0x81,0x04,0x40,0x80,0xBC,0x1B,0xE2,0x81,
+0x40,0x12,0x3C,0x1A,0xAE,0x79,0xF1,0x03,0x10,0x83,0x80,0x00,0x8C,0x21,0x96,0x48,
+0x10,0x93,0x80,0x02,0xF1,0x83,0x8C,0xA1,0x97,0x68,0xD5,0xA0,0xF6,0x05,0xD5,0x98,
+0x8C,0x44,0x48,0xFF,0xFF,0x53,0x3C,0x03,0xF7,0xA7,0x5C,0xF0,0x00,0x24,0x84,0x00,
+0xE9,0x16,0x80,0x3C,0x84,0x00,0x08,0x20,0x80,0x3E,0x2E,0x37,0xEF,0x15,0x80,0xA0,
+0xD2,0x0B,0xA7,0x08,0x4C,0x41,0xC0,0x04,0x8C,0x01,0x96,0x00,0x8C,0xA1,0x97,0x68,
+0x50,0x10,0x80,0x38,0xD5,0xF6,0x84,0x21,0x40,0x00,0x80,0x06,0xF0,0x85,0x46,0x00,
+0x08,0x95,0x85,0x00,0x50,0x00,0x04,0x3F,0x80,0xE8,0xF0,0x89,0x00,0x0E,0x00,0x00,
+0xE2,0xE0,0x4E,0xF2,0x01,0x10,0xB0,0x16,0x44,0x90,0x00,0x38,0x38,0x70,0x1C,0x08,
+0x9C,0x39,0x96,0x00,0xF0,0x87,0x80,0xC0,0x42,0x03,0xA4,0x24,0xF0,0x88,0x88,0x1C,
+0xF0,0x86,0x00,0x0E,0x00,0x00,0xE2,0xC0,0x4E,0xF2,0x00,0xFA,0xF0,0x06,0x00,0x10,
+0x00,0x3B,0x5A,0x10,0xFF,0x27,0x80,0x1C,0x42,0x03,0x24,0x73,0x00,0x30,0x00,0x3B,
+0x44,0x02,0x33,0x88,0x5A,0x30,0xFF,0x14,0x44,0x20,0x01,0x24,0x80,0x80,0x42,0x40,
+0x88,0x73,0x00,0x42,0x01,0x0D,0x5A,0x48,0x02,0x0B,0x80,0x80,0x42,0x41,0x88,0x73,
+0x00,0x22,0x01,0x0D,0x5A,0x28,0x02,0x04,0x48,0x00,0x00,0xD6,0x44,0x20,0x01,0x24,
+0x42,0x00,0x88,0x73,0x00,0x00,0x01,0x0C,0x5A,0x08,0x01,0x04,0x48,0x00,0x00,0xCC,
+0x80,0x1C,0x42,0x03,0x24,0x73,0x00,0x00,0x00,0x3B,0x5A,0x00,0xFF,0x0E,0x44,0x30,
+0x01,0x24,0x44,0x22,0x33,0x88,0x42,0x20,0x0C,0x73,0x00,0x21,0x01,0x0C,0x5A,0x28,
+0x01,0x04,0x48,0x00,0x00,0xB9,0xE7,0x14,0x4E,0xF2,0x00,0xB6,0xF2,0x06,0x80,0x7C,
+0x42,0x33,0x24,0x73,0xA0,0x96,0xA0,0xDE,0x44,0x40,0x00,0x38,0x9A,0xD3,0x4E,0x34,
+0x00,0x03,0xFE,0xDA,0x80,0x5C,0x80,0xBC,0x42,0x23,0x90,0x73,0x42,0x53,0x10,0x73,
+0xA0,0x97,0xA1,0x2F,0x8A,0x44,0x4E,0x24,0x00,0x03,0xFE,0x92,0xFE,0x94,0x42,0x21,
+0x8C,0x73,0xF3,0x09,0xE0,0x62,0xE8,0x16,0xF3,0x05,0x5A,0x30,0x01,0x04,0x48,0x00,
+0x00,0x93,0x9C,0xF9,0x80,0x9C,0x42,0x41,0xA4,0x73,0x2E,0x57,0xEF,0x15,0xA6,0xE6,
+0x4C,0x51,0xC0,0x8A,0x9C,0xF1,0x80,0x9C,0x42,0x41,0xA4,0x73,0xA6,0xE6,0x4C,0x32,
+0xC0,0x83,0xF5,0x08,0xFA,0x68,0xB1,0x32,0x42,0x44,0x0C,0x73,0x88,0xBC,0x8C,0xAC,
+0xB6,0xA4,0x80,0xBC,0x42,0x53,0x24,0x73,0x8C,0xAC,0x50,0x32,0x00,0x10,0xA9,0x61,
+0xA8,0xA2,0x10,0x72,0x00,0x10,0xF4,0x06,0xAF,0x99,0xB0,0xA3,0x84,0xA0,0x51,0xE2,
+0x00,0x30,0xF4,0x03,0xD4,0x19,0x20,0xAF,0x00,0x05,0xA7,0x10,0x4C,0xA2,0x40,0x11,
+0x80,0x9C,0x42,0x43,0x24,0x73,0x20,0xA2,0x00,0x35,0xA7,0x11,0x4C,0xA2,0x40,0x09,
+0xA7,0x1B,0x00,0xA1,0x00,0x02,0xE3,0x44,0x40,0x45,0x3C,0x1A,0xAF,0x1B,0x8C,0xA1,
+0x97,0x68,0x8C,0x43,0xD5,0xE7,0xFA,0x48,0x5A,0x10,0xFF,0x1F,0x5A,0x00,0xFF,0x19,
+0x44,0x32,0x33,0x88,0x44,0x50,0x01,0x24,0x80,0x83,0x42,0x40,0x94,0x73,0x42,0x30,
+0x14,0x73,0x00,0xA2,0x01,0x0D,0x00,0x51,0x81,0x0D,0xE2,0xAA,0xE9,0x09,0xE3,0x45,
+0xE9,0x0D,0x02,0x42,0x00,0x84,0x02,0x31,0x80,0x84,0xE2,0x83,0xE9,0x07,0xB0,0x32,
+0x42,0x04,0x08,0x73,0xD5,0x0D,0x5A,0x00,0xFF,0x08,0xB0,0x72,0x42,0x14,0x08,0x73,
+0x10,0x00,0x80,0x12,0xD5,0x07,0xB0,0x32,0x42,0x04,0x08,0x73,0x84,0x3F,0x10,0x10,
+0x00,0x12,0xFA,0x08,0xB0,0x72,0x42,0x14,0x00,0x73,0x50,0x30,0x80,0x10,0xA6,0x1A,
+0x81,0x41,0xF3,0x8B,0x5A,0x00,0xFF,0x14,0x44,0x10,0x01,0x24,0xF2,0x0A,0x42,0x20,
+0x04,0x73,0x80,0x02,0xB0,0x53,0x84,0x40,0x49,0xFF,0x9B,0x5C,0xF0,0x13,0xF3,0x0B,
+0xB4,0x20,0x14,0x15,0x00,0x03,0x00,0x00,0x00,0x14,0xAE,0x1C,0x50,0x04,0x00,0x01,
+0x54,0x80,0x00,0xFF,0x8C,0xC1,0x97,0xB0,0x48,0xFF,0xFF,0x05,0xF7,0x07,0x48,0xFF,
+0xFE,0xEF,0xB1,0xB2,0x80,0x06,0x85,0x20,0x4C,0x94,0x00,0x3A,0x50,0x14,0x80,0x01,
+0x54,0x90,0x80,0xFF,0x81,0x49,0x4C,0xA4,0x00,0x31,0xFA,0x48,0xB0,0x72,0x42,0x15,
+0x08,0x73,0xA0,0xC2,0xA0,0x8A,0xE0,0x43,0xE8,0x23,0xB1,0xDD,0x83,0xC0,0x81,0xE7,
+0x3A,0x2F,0x14,0x04,0x3A,0x27,0x94,0x24,0x3A,0x2F,0x0C,0x00,0x80,0xE1,0x3A,0x27,
+0x8C,0x20,0x3A,0x23,0x94,0x04,0xF7,0x83,0x80,0xE0,0x3A,0x23,0x94,0x24,0xF2,0x03,
+0x3A,0x21,0x0C,0x00,0x3A,0x2F,0x0C,0x20,0xB0,0x9D,0x80,0xE2,0x3A,0x23,0x94,0x04,
+0x3A,0x20,0x94,0x24,0xF1,0x03,0x3A,0x27,0x8C,0x00,0x3A,0x20,0x8C,0x20,0x50,0x15,
+0x00,0x01,0x54,0xA0,0x80,0xFF,0xD5,0xD0,0x8C,0x18,0xD5,0xC7,0xF0,0x04,0x44,0x10,
+0x00,0x64,0xFE,0x04,0xFE,0x0C,0xF0,0x83,0xB0,0x72,0xFA,0x08,0x42,0x14,0x80,0x73,
+0xF1,0x8D,0x44,0x90,0x00,0x38,0xF0,0x0D,0x4C,0x60,0x01,0x56,0x00,0x03,0x00,0x11,
+0xB0,0x56,0x38,0x50,0x80,0x00,0x00,0x03,0x00,0x10,0x38,0x70,0x80,0x00,0x4C,0x53,
+0x81,0x48,0xF0,0x05,0x5A,0x08,0x01,0x4F,0xE2,0xE5,0x80,0x07,0x40,0x02,0xBC,0x1B,
+0x80,0x3C,0x42,0x10,0x24,0x73,0x00,0x10,0x80,0x3B,0x5A,0x10,0xFF,0x0B,0x44,0x20,
+0x01,0x24,0x44,0x02,0x34,0xA8,0x42,0x00,0x88,0x73,0xA0,0x01,0x4E,0x04,0x00,0x6D,
+0xE2,0xA7,0x80,0x07,0x40,0x02,0xBC,0x1B,0x80,0x3C,0x42,0x10,0x24,0x73,0x00,0x10,
+0x80,0x3B,0x5A,0x10,0xFF,0x0B,0x44,0x20,0x01,0x24,0x44,0x02,0x34,0xA8,0x42,0x00,
+0x88,0x73,0xA0,0x01,0x4E,0x04,0x00,0x59,0x00,0x03,0x00,0x13,0x5C,0xF0,0x00,0x47,
+0x4E,0xF3,0x01,0x17,0x80,0x1C,0x42,0x03,0xA4,0x73,0x00,0x20,0x00,0x3B,0x5A,0x20,
+0xFF,0x5A,0x44,0x02,0x33,0x88,0x44,0x10,0x01,0x24,0x80,0x60,0x42,0x31,0x04,0x73,
+0x02,0x21,0x80,0x85,0xC2,0x4F,0x80,0x5C,0x42,0x22,0xA4,0x73,0x00,0x21,0x00,0x3B,
+0x5A,0x20,0xFF,0x49,0x42,0x01,0x04,0x73,0x02,0x00,0x00,0x85,0xC0,0x43,0x48,0x00,
+0x00,0xF8,0x3C,0x03,0xF7,0xC7,0x96,0x36,0xC0,0x07,0xA0,0x32,0xF1,0x03,0xE0,0x01,
+0x4E,0xF2,0x00,0xEF,0xD5,0x31,0xE2,0xE5,0x80,0x07,0x40,0x02,0xBC,0x1B,0x80,0x3C,
+0x42,0x10,0x24,0x73,0x00,0x10,0x80,0x3B,0x5A,0x10,0xFF,0x0B,0x44,0x20,0x01,0x24,
+0x44,0x02,0x34,0xA8,0x42,0x00,0x88,0x73,0xA0,0x01,0x4E,0x04,0x00,0x16,0xE2,0xA7,
+0x80,0x07,0x40,0x02,0xBC,0x1B,0x80,0x3C,0x42,0x10,0x24,0x73,0x00,0x10,0x80,0x3B,
+0x5A,0x10,0xFF,0x0F,0x44,0x20,0x01,0x24,0x44,0x02,0x34,0xA8,0x42,0x00,0x88,0x73,
+0xA0,0x01,0x4E,0x05,0x00,0x06,0xA0,0x32,0xF1,0x03,0xE0,0x01,0xD5,0x09,0xA0,0x32,
+0xF1,0x03,0xE0,0x01,0xE9,0x07,0x00,0x03,0x00,0x13,0xF1,0x02,0xE2,0x20,0x4E,0xF2,
+0x00,0xB8,0xE2,0xA7,0x81,0x47,0x40,0xA2,0xBC,0x1B,0xE2,0xE5,0x40,0x72,0xBC,0x1B,
+0x80,0x3C,0x42,0x13,0xA4,0x73,0x50,0x10,0x80,0x30,0x00,0x40,0x80,0x0B,0x5A,0x48,
+0xFF,0x04,0x48,0x00,0x01,0x47,0x80,0x5C,0x42,0x25,0x24,0x73,0x50,0x21,0x00,0x30,
+0x00,0xF1,0x00,0x0B,0x80,0xAA,0x5A,0xF0,0xFF,0x04,0x48,0x00,0x00,0xF7,0x50,0x05,
+0x00,0x01,0x80,0x3C,0x42,0x10,0x24,0x73,0x80,0x01,0x84,0x20,0xAE,0x44,0x42,0x05,
+0x24,0x24,0x40,0x3E,0x00,0x00,0x50,0x51,0x80,0x30,0xF0,0x87,0xA6,0x2F,0x04,0xF1,
+0x80,0x0A,0xF0,0x89,0x00,0x01,0x80,0x38,0xF0,0x8A,0x42,0x03,0xA4,0x24,0xF0,0x88,
+0x88,0x1C,0x50,0x80,0x00,0x30,0x00,0x14,0x00,0x07,0xA0,0x86,0xF1,0x8B,0x00,0x14,
+0x00,0x08,0xF1,0x8C,0x04,0x10,0x00,0x0A,0xF1,0x84,0xF4,0x04,0x88,0x2F,0xFE,0xA4,
+0xA1,0x1E,0xF1,0x86,0x42,0x27,0x90,0x73,0xF4,0x06,0x40,0x21,0x10,0x56,0xA8,0x86,
+0x50,0x20,0x00,0x18,0xF4,0x04,0xA0,0x51,0xF5,0x84,0xFE,0x64,0xA1,0x1F,0x42,0x17,
+0x90,0x73,0xF4,0x06,0x40,0x10,0x90,0x36,0xA8,0x51,0x00,0x11,0x80,0x3A,0x00,0x24,
+0x00,0x0A,0x14,0x40,0x00,0x0A,0x88,0x22,0x10,0x14,0x00,0x0A,0x00,0x24,0x00,0x09,
+0x00,0x11,0x80,0x39,0x88,0x22,0x10,0x14,0x00,0x09,0x02,0x10,0x00,0x19,0x02,0x21,
+0x80,0x19,0x96,0xCB,0x97,0x13,0xE0,0x83,0x40,0x11,0x3C,0x1A,0x12,0x10,0x00,0x19,
+0xF0,0x08,0x40,0x1E,0x00,0x00,0xF0,0x07,0x8C,0x2C,0x88,0x1C,0x8C,0x0C,0x80,0x41,
+0x49,0xFF,0xAA,0xFC,0xF5,0x04,0x00,0x02,0x80,0x0B,0x5A,0x08,0xFF,0x04,0x48,0x00,
+0x00,0xC3,0x10,0x04,0x00,0x0B,0xF2,0x0A,0x2E,0x07,0xDE,0x16,0xF1,0x09,0xF3,0x0C,
+0x42,0x11,0x00,0x73,0xF2,0x0B,0x42,0x21,0x80,0x73,0x80,0x02,0x04,0x2F,0x80,0xB4,
+0x38,0xF1,0x05,0x11,0x38,0x01,0x01,0x11,0xE0,0x0F,0xE8,0x11,0x80,0x3C,0x42,0x15,
+0x24,0x73,0x50,0x10,0x80,0x30,0x80,0x1C,0x42,0x03,0xA4,0x73,0xA6,0x8F,0x50,0x00,
+0x00,0x30,0x00,0x10,0x80,0x08,0xAE,0x87,0x10,0x10,0x00,0x08,0xB0,0x96,0x00,0x3E,
+0x00,0x00,0x80,0x02,0x9A,0x42,0x96,0x48,0xE2,0x23,0x4E,0xF3,0x00,0x9B,0x8C,0xD8,
+0x48,0xFF,0xFE,0xAB,0x84,0xC0,0x44,0x72,0x2F,0xF0,0x04,0x0F,0x80,0xB2,0xA6,0x00,
+0xE2,0xC0,0x4E,0xF2,0x00,0x9C,0x04,0x0F,0x80,0xB2,0x94,0x72,0x88,0x01,0xB1,0x59,
+0xA6,0x85,0xA6,0x04,0xF2,0x82,0xF0,0x83,0x84,0x40,0x2E,0x97,0xDE,0x16,0x80,0x62,
+0x2E,0x07,0xDE,0x17,0x45,0xEF,0xFF,0xDF,0xF0,0x84,0x50,0x8F,0x80,0x50,0x50,0xAF,
+0x80,0x58,0xF4,0x02,0x38,0x01,0x14,0x00,0x88,0x04,0x96,0x00,0x99,0x2A,0xE2,0x09,
+0x20,0x42,0x00,0x01,0xE8,0x1E,0x04,0xFF,0x80,0x03,0x88,0x8F,0x04,0xFF,0x80,0x04,
+0x97,0x20,0xE2,0x8F,0xE8,0x16,0x04,0xFF,0x80,0xB3,0x88,0x0F,0x42,0x02,0x24,0x73,
+0xA6,0x00,0x40,0x40,0x78,0x02,0x5A,0x40,0x1F,0x0D,0x96,0x27,0x38,0x03,0x80,0x00,
+0x5A,0x00,0xFF,0x08,0x38,0x05,0x00,0x00,0x38,0x04,0x0C,0x08,0x8C,0x61,0x96,0xD8,
+0x8C,0x42,0x5A,0x28,0x10,0xD8,0x50,0x5F,0x82,0xC8,0xB4,0x05,0xB0,0x94,0x88,0x20,
+0xA0,0x29,0x8C,0x22,0xB6,0x1F,0x50,0x4E,0x00,0x0C,0xA0,0x2A,0x84,0xAA,0x8C,0xC1,
+0x49,0xFF,0xAA,0x85,0x97,0xB0,0xD5,0xAA,0x44,0x32,0x33,0x88,0x44,0x00,0x01,0x24,
+0x81,0x03,0x42,0x82,0x00,0x73,0x50,0x44,0x01,0x08,0x01,0xE2,0x00,0x05,0x42,0x07,
+0x80,0x24,0x88,0x03,0x5B,0xE8,0x01,0x1A,0x50,0x30,0x01,0x08,0x00,0xF1,0x80,0x05,
+0x5A,0xF8,0x01,0x0B,0x02,0x00,0x00,0x84,0x02,0x84,0x00,0x84,0xE3,0x00,0x84,0x02,
+0xE9,0x04,0xAE,0x1E,0xD5,0x13,0x84,0x02,0xAE,0x26,0x84,0x1F,0x81,0x47,0x10,0x00,
+0x80,0x0B,0x80,0xE5,0x48,0xFF,0xFE,0xE5,0x50,0x00,0x01,0x08,0xA6,0x45,0x5A,0x10,
+0x01,0x04,0x48,0xFF,0xFF,0x76,0x84,0x22,0xAE,0x46,0x84,0x1F,0x10,0x01,0x00,0x0B,
+0x48,0xFF,0xFE,0xD7,0x00,0x04,0x00,0x0B,0x10,0x02,0x80,0x0B,0x48,0xFF,0xFF,0x3D,
+0x08,0x10,0x00,0x01,0x4C,0xA0,0xFF,0x60,0x10,0x70,0x7F,0xFF,0x48,0xFF,0xFF,0x5C,
+0x80,0x0A,0x81,0x47,0x80,0xE0,0x48,0xFF,0xFE,0xC4,0x51,0xFF,0x82,0xA8,0xFC,0xC0,
+0xFC,0x58,0xF2,0x87,0x44,0x22,0x00,0xBC,0xF1,0x84,0xB0,0x6C,0xF3,0x88,0xF4,0x93,
+0x3A,0x21,0x14,0x00,0x3A,0x20,0x94,0x20,0x84,0xE0,0x3C,0x13,0xEF,0x08,0x80,0xC0,
+0xF1,0x91,0xF2,0x11,0x3C,0x13,0xEF,0x09,0xF7,0xA3,0xF1,0x92,0xF1,0x07,0xF7,0xA4,
+0x22,0x10,0x80,0x00,0xF1,0x8D,0xF1,0x07,0xA4,0x49,0x9A,0x51,0x96,0x4B,0xF1,0x8E,
+0xF1,0x08,0xF2,0x12,0x22,0x10,0x80,0x00,0xF1,0x8F,0xF1,0x08,0xA4,0x49,0x9A,0x51,
+0x96,0x4B,0xF1,0x90,0x2E,0x17,0xF4,0x13,0x5A,0x10,0x01,0x04,0x48,0x00,0x00,0x84,
+0x80,0x47,0xB0,0x5E,0x49,0xFF,0x98,0xCE,0xB0,0x5F,0x80,0x47,0x50,0x03,0x01,0x24,
+0x49,0xFF,0x98,0xC8,0xF4,0x1E,0xF1,0x1F,0x22,0x32,0x00,0x08,0x22,0x50,0x80,0x08,
+0x9B,0xDD,0x4E,0x74,0x00,0x03,0xFF,0xFA,0x22,0x02,0x00,0x09,0x22,0x90,0x80,0x09,
+0x40,0x20,0x24,0x01,0x4E,0x24,0x00,0x03,0xFE,0x92,0xFE,0x94,0x42,0x23,0x9C,0x73,
+0x46,0x70,0x00,0xE0,0x50,0x73,0x8F,0xFF,0xE0,0xE2,0xE9,0x5D,0x2E,0x70,0x12,0xBA,
+0x44,0x22,0x13,0x4C,0xE0,0x65,0x81,0x42,0x44,0x50,0x00,0x38,0x42,0xA3,0x94,0x73,
+0x04,0x75,0x00,0x08,0xE8,0x10,0xE0,0xE3,0x40,0x33,0xBC,0x1B,0x12,0x32,0x00,0x08,
+0x2E,0x70,0x13,0xDE,0x22,0x30,0x80,0x08,0x42,0x23,0x94,0x73,0x04,0x21,0x00,0x08,
+0xE0,0x62,0xD5,0x0F,0xE0,0x67,0x40,0x33,0xBC,0x1B,0x12,0x32,0x00,0x08,0x2E,0x70,
+0x13,0xDE,0x22,0x30,0x80,0x08,0x42,0x23,0x94,0x73,0x04,0x21,0x00,0x08,0xE0,0x43,
+0x40,0x31,0x3C,0x1B,0x12,0x30,0x80,0x08,0x2E,0x30,0x12,0xBA,0x44,0x22,0x13,0x4C,
+0x44,0x50,0x00,0x38,0x80,0xE2,0x42,0x71,0x94,0x73,0xE0,0x09,0x04,0x33,0x80,0x09,
+0xE8,0x10,0xE0,0x60,0x40,0x01,0xBC,0x1B,0x12,0x02,0x00,0x09,0x2E,0x00,0x13,0xDE,
+0x22,0x30,0x80,0x09,0x42,0x20,0x14,0x73,0x04,0x01,0x00,0x09,0xE0,0x60,0xD5,0x0F,
+0xE0,0x03,0x40,0x01,0xBC,0x1B,0x12,0x02,0x00,0x09,0x2E,0x00,0x13,0xDE,0x22,0x30,
+0x80,0x09,0x42,0x20,0x14,0x73,0x04,0x01,0x00,0x09,0xE0,0x03,0x40,0x30,0x3C,0x1B,
+0x12,0x30,0x80,0x09,0xF0,0x11,0x84,0xE0,0x92,0x01,0xF0,0x97,0xF0,0x12,0xF7,0x94,
+0x92,0x01,0xF0,0x98,0x44,0x00,0x00,0x64,0xF0,0x83,0xF0,0x8B,0xF0,0x8A,0xF0,0x89,
+0x3C,0x03,0xEF,0x08,0xF0,0x85,0x3C,0x03,0xEF,0x09,0xF0,0x86,0xF0,0x05,0x92,0x03,
+0xF0,0x99,0xF0,0x06,0x92,0x03,0xF0,0x96,0x96,0x38,0xF0,0x95,0x00,0x03,0x01,0x05,
+0x4E,0x02,0x04,0xAB,0x04,0x23,0x00,0x48,0x54,0x21,0x08,0x00,0x4E,0x23,0x04,0xA5,
+0xB0,0x5E,0x80,0x06,0x49,0xFF,0x98,0x26,0xB0,0x5F,0x84,0x41,0x80,0x06,0x49,0xFF,
+0x98,0x21,0xB0,0x60,0x84,0x42,0x80,0x06,0x49,0xFF,0x98,0x1C,0xB0,0x61,0x84,0x43,
+0x80,0x06,0x49,0xFF,0x98,0x17,0xB0,0x62,0x84,0x44,0x80,0x06,0x49,0xFF,0x98,0x12,
+0xF0,0x04,0x84,0x23,0x00,0x20,0x00,0x0E,0x44,0x02,0x04,0xA8,0x42,0x01,0x04,0x73,
+0xF0,0x8C,0x02,0x03,0x00,0x81,0xE6,0x02,0x4E,0xF2,0x00,0xEB,0x02,0x03,0x00,0x80,
+0x5A,0x00,0x02,0x04,0x48,0x00,0x00,0xE5,0x44,0x22,0x00,0xCC,0xB0,0x27,0x3A,0x21,
+0x0C,0x00,0x3A,0x20,0x0C,0x20,0xF4,0x1E,0x3C,0x93,0xEF,0x08,0x22,0x52,0x00,0x06,
+0x3C,0xA3,0xEF,0x09,0xF0,0x07,0xF1,0x1F,0x22,0x00,0x00,0x00,0x4C,0x02,0x80,0xD1,
+0xF0,0x07,0x22,0x00,0x00,0x01,0x40,0x04,0x80,0x01,0x4C,0x50,0x00,0xCA,0xF0,0x08,
+0x22,0x52,0x00,0x07,0x22,0x00,0x00,0x00,0x4C,0x02,0x80,0xC3,0xF0,0x08,0x22,0x00,
+0x00,0x01,0x40,0x05,0x00,0x01,0x4C,0x50,0x00,0xBC,0x22,0x02,0x00,0x04,0x40,0x34,
+0x88,0x09,0x40,0x24,0x80,0x01,0x22,0x42,0x00,0x05,0x4E,0x24,0x00,0x03,0xFE,0x92,
+0x96,0x93,0xE0,0x62,0xE8,0x10,0x40,0x25,0x10,0x01,0x40,0x55,0x08,0x09,0x4E,0x24,
+0x00,0x03,0xFE,0x92,0x96,0x93,0xE0,0xA2,0xE8,0x06,0xE0,0x60,0xE8,0x04,0xE0,0xA4,
+0x4E,0xF3,0x00,0x9F,0x22,0x50,0x80,0x04,0x22,0x30,0x80,0x05,0x9A,0x85,0x8A,0x83,
+0x84,0x03,0xFF,0x04,0x84,0x02,0x40,0x82,0x01,0x16,0xF2,0xA5,0x14,0x8F,0x80,0x26,
+0xCA,0x03,0x4E,0x82,0x00,0x8E,0xB0,0x25,0xF3,0x9D,0xF2,0x9C,0xF5,0x9B,0xF1,0x9A,
+0x49,0xFF,0xAF,0x83,0x5E,0xF0,0x00,0xFA,0x4E,0xF3,0x00,0x83,0xF5,0x1B,0xF2,0x1C,
+0xF3,0x1D,0x9A,0x2A,0x40,0x81,0xA0,0x01,0xF1,0x1A,0x4E,0x07,0x00,0x08,0xE0,0x09,
+0xE8,0x05,0x4E,0x87,0x00,0x04,0xE1,0x0A,0xE9,0x73,0x22,0x50,0x80,0x06,0xF4,0x25,
+0x22,0x10,0x80,0x07,0xF2,0x26,0xFE,0x64,0xFE,0x92,0x42,0x11,0x14,0x73,0xF2,0xA9,
+0xF4,0xAA,0xF1,0xAB,0x4E,0x06,0x00,0x06,0xB0,0x29,0x44,0x12,0x04,0x9C,0xD5,0x07,
+0xE0,0x09,0x84,0x00,0xE9,0x07,0xB0,0x29,0x44,0x12,0x04,0x90,0xB0,0xA7,0x49,0xFF,
+0xB0,0x9F,0xF1,0x27,0x4E,0x15,0x00,0x09,0xE1,0x21,0xE9,0x06,0xF2,0x28,0x4E,0x25,
+0x00,0x04,0xE1,0x42,0xE8,0x4B,0x4E,0x86,0x00,0x06,0xB0,0x29,0x44,0x12,0x04,0x84,
+0xD5,0x06,0xE1,0x0A,0xE9,0x07,0xB0,0x29,0x44,0x12,0x04,0x78,0xB0,0xA7,0x49,0xFF,
+0xB0,0x87,0x5A,0x08,0x02,0x3E,0xF1,0x27,0x4E,0x15,0x00,0x06,0xE1,0x21,0x40,0x90,
+0xBC,0x1A,0xD5,0x02,0x85,0x20,0xF0,0x28,0x3C,0x9F,0xF8,0xA0,0x4E,0x05,0x00,0x06,
+0xE0,0x0A,0x40,0xA0,0x3C,0x1B,0xD5,0x02,0x85,0x40,0x50,0x93,0x01,0x1B,0x84,0x01,
+0x3C,0xAF,0xF8,0xA1,0x12,0x03,0x00,0x81,0x00,0x04,0x80,0x05,0x84,0x22,0x58,0x00,
+0x00,0x02,0x10,0x04,0x80,0x05,0xF0,0x15,0x49,0xFF,0xB4,0x74,0xF0,0x15,0x84,0x20,
+0x49,0xFF,0xB4,0x79,0xF0,0x1E,0x3C,0x27,0xF1,0x40,0x3C,0x17,0xF1,0x42,0x12,0x20,
+0x00,0x08,0x12,0x10,0x00,0x09,0xAC,0x86,0xAC,0x47,0x00,0x04,0x80,0x04,0x54,0x00,
+0x00,0xEF,0x10,0x04,0x80,0x04,0x48,0x00,0x03,0x7A,0x5A,0x00,0x02,0xC9,0x02,0xA3,
+0x00,0x81,0x5A,0xA8,0x01,0x3E,0x04,0x13,0x00,0x47,0x46,0x01,0x00,0x00,0xFE,0x0E,
+0x4E,0x02,0x03,0x4E,0xF0,0x13,0x5A,0x00,0x01,0x04,0x48,0x00,0x03,0x49,0x44,0x02,
+0x04,0x68,0xF1,0x11,0xF2,0x12,0x49,0xFF,0xB2,0x83,0x5A,0x00,0x01,0x04,0x48,0x00,
+0x03,0x3F,0xF1,0x1E,0x3C,0x2D,0xF8,0x9F,0x3C,0x3D,0xF8,0x9E,0x22,0x00,0x80,0x07,
+0x22,0x40,0x80,0x06,0x8A,0x02,0x8A,0x83,0xFE,0x04,0x42,0x02,0x10,0x73,0x5E,0xF0,
+0x27,0x10,0x4E,0xF2,0x03,0x2D,0x5E,0xF0,0x19,0x00,0xE8,0x04,0x12,0x30,0x80,0x08,
+0xD5,0x0B,0x22,0x00,0x80,0x08,0x88,0x03,0x90,0x01,0x12,0x00,0x80,0x08,0x22,0x00,
+0x80,0x09,0x88,0x40,0x90,0x41,0x12,0x20,0x80,0x09,0x48,0x00,0x03,0x3B,0xE7,0x42,
+0x4E,0xF3,0x03,0x35,0x04,0x03,0x00,0x47,0x8C,0x0F,0x40,0x00,0x70,0x08,0x90,0x1C,
+0x80,0x20,0x4E,0x04,0x00,0x03,0x84,0x20,0x50,0x03,0x01,0x1B,0xA6,0x81,0x96,0x5F,
+0x54,0x21,0x00,0xF0,0xFE,0x57,0xAE,0x41,0x3C,0x0D,0xFB,0xD6,0x96,0x1E,0xC8,0x04,
+0xF0,0x04,0xB4,0x00,0xD5,0x03,0x44,0x00,0x6D,0x60,0x04,0x9F,0x80,0x1E,0xB4,0x29,
+0xE0,0x01,0xE8,0x09,0x50,0x13,0x01,0x1B,0xA6,0x09,0x54,0x00,0x00,0xF0,0x58,0x00,
+0x00,0x08,0xAE,0x09,0x04,0x03,0x00,0x47,0x54,0x10,0x00,0x0F,0x50,0x03,0x01,0x1B,
+0xC9,0x05,0xA6,0x44,0x54,0x10,0x80,0xDF,0xD5,0x04,0xA6,0x44,0x58,0x10,0x80,0x20,
+0xAE,0x44,0x04,0x23,0x00,0x47,0x46,0x01,0x00,0x00,0xFE,0x16,0xC0,0x21,0x00,0x03,
+0x01,0x05,0x5A,0x08,0x02,0x1E,0x2E,0x37,0xF4,0x13,0x46,0x14,0x00,0x00,0x02,0x03,
+0x00,0x85,0xFE,0x56,0xC3,0x0C,0x5E,0xF0,0x00,0x65,0xE9,0x05,0x8E,0x0A,0x96,0x01,
+0x48,0x00,0x00,0x86,0x44,0x00,0x00,0x64,0x48,0x00,0x00,0x82,0xC1,0x05,0xF1,0x04,
+0x00,0x10,0x80,0x09,0xD5,0x7A,0xF1,0x04,0x00,0x10,0x80,0x08,0xD5,0x76,0x5C,0xF5,
+0x00,0x33,0xE9,0x33,0x46,0x12,0x00,0x00,0xFE,0x56,0xC1,0x2F,0xF0,0x13,0x5A,0x08,
+0x01,0x2D,0x3C,0x0D,0xFD,0x05,0x84,0x27,0xFE,0x0C,0xB4,0x29,0x90,0x03,0xE0,0x20,
+0xE9,0x05,0x00,0x03,0x01,0x05,0x5A,0x08,0x03,0x21,0xF2,0x20,0xF0,0x1F,0x22,0xF1,
+0x00,0x09,0x22,0x30,0x00,0x08,0x22,0x00,0x00,0x09,0x22,0x11,0x00,0x08,0x8A,0x0F,
+0x9A,0x59,0xFE,0x04,0x42,0x00,0x84,0x73,0x44,0x10,0x9C,0x3F,0xE0,0x20,0xE9,0x0D,
+0xF0,0x04,0xA4,0x42,0x84,0x0A,0xFE,0x0C,0x12,0x03,0x00,0x85,0x44,0x02,0x04,0xA8,
+0xF0,0x8C,0x84,0x01,0xF0,0x94,0xD5,0x45,0x00,0x03,0x01,0x05,0x5A,0x08,0x03,0x22,
+0xF1,0x04,0x02,0x03,0x00,0x85,0x00,0x10,0x80,0x0B,0x49,0xFF,0xB1,0xB0,0xE7,0x46,
+0x12,0x03,0x00,0x85,0xE8,0x36,0x22,0x13,0x00,0x88,0x22,0x04,0x80,0x04,0x8A,0x01,
+0xF0,0xA3,0x22,0x13,0x00,0x89,0x22,0x04,0x80,0x05,0x8A,0x01,0xF0,0xA4,0xB0,0x23,
+0x49,0xFF,0xAE,0x0B,0x5E,0xF0,0x03,0xE8,0xE8,0x24,0x44,0x00,0x03,0xE8,0xD5,0x1F,
+0xF0,0x1F,0xF1,0x0D,0x22,0x50,0x00,0x08,0xD1,0x09,0xF1,0x0E,0xD1,0x07,0x22,0x50,
+0x00,0x09,0xF0,0x0F,0xD0,0x03,0xF0,0x10,0xD8,0x0B,0xF0,0x04,0x00,0x10,0x00,0x0A,
+0x84,0x03,0xFE,0x44,0x90,0x21,0x02,0x03,0x00,0x85,0x96,0x48,0xD5,0x06,0xF1,0x04,
+0x02,0x03,0x00,0x85,0x00,0x10,0x80,0x0A,0x49,0xFF,0xB1,0x79,0x12,0x03,0x00,0x85,
+0xF0,0x14,0x02,0x93,0x00,0x85,0xC8,0x55,0x00,0x03,0x01,0x05,0x5A,0x00,0x03,0x52,
+0xF2,0x1F,0xF0,0x0E,0xF1,0x0D,0x22,0x31,0x00,0x08,0xF4,0x0F,0x8A,0x03,0x9A,0x59,
+0xE0,0x20,0x40,0x10,0x3C,0x1A,0x22,0x21,0x00,0x09,0xF0,0x10,0x9B,0x14,0x8A,0x02,
+0xE0,0x80,0x40,0x02,0x3C,0x1B,0x50,0x41,0xFD,0x30,0x97,0x21,0x5C,0xF2,0x0A,0x05,
+0x80,0x89,0x14,0x9F,0x80,0x0A,0x96,0x4B,0x96,0x03,0x95,0x22,0xE8,0x04,0xE0,0x82,
+0x40,0x01,0x3C,0x1A,0xE0,0x24,0xE8,0x0F,0xF5,0x17,0x90,0x22,0xE0,0x65,0x96,0x4B,
+0xE8,0x05,0xF1,0x89,0x14,0x9F,0x80,0x03,0xD5,0x04,0xF1,0x83,0x14,0x9F,0x80,0x09,
+0x85,0x02,0xD5,0x06,0x14,0x9F,0x80,0x03,0x14,0x9F,0x80,0x09,0x85,0x01,0xE0,0x04,
+0xE8,0x0D,0xF1,0x18,0x90,0x02,0xE0,0x41,0xE8,0x04,0x96,0x03,0xF0,0x8B,0xD5,0x04,
+0x14,0x9F,0x80,0x0B,0xF0,0x8A,0x85,0x02,0xD5,0x03,0x14,0x9F,0x80,0x0B,0xF0,0x0B,
+0xC0,0x0A,0xF0,0x0A,0xC0,0x08,0xF0,0x09,0xC0,0x06,0xF0,0x03,0xC8,0x05,0xD5,0x03,
+0x85,0x01,0xD5,0x02,0x85,0x03,0x04,0x03,0x00,0x48,0x54,0x10,0x00,0x01,0xF0,0x1F,
+0xC9,0x0E,0xF2,0x1E,0x22,0x30,0x00,0x08,0x22,0x00,0x00,0x09,0x22,0x11,0x00,0x06,
+0x8A,0x23,0xF1,0xA3,0x22,0x11,0x00,0x07,0x9A,0x08,0xD5,0x0C,0x22,0x20,0x00,0x08,
+0x04,0x13,0x00,0x3A,0x8A,0x22,0xF1,0xA3,0x22,0x10,0x00,0x09,0x04,0x03,0x00,0x3B,
+0x8A,0x01,0xF0,0xA4,0x00,0x03,0x01,0x05,0x5A,0x08,0x02,0x08,0x50,0x13,0x01,0x1B,
+0xA6,0x0D,0x54,0x00,0x00,0xFE,0xAE,0x0D,0x04,0x03,0x00,0x48,0x96,0x06,0x4E,0x03,
+0x01,0x26,0x44,0x12,0x00,0xCC,0xB0,0x27,0x3A,0x20,0x8C,0x00,0x3A,0x20,0x0C,0x20,
+0x00,0x03,0x01,0x06,0x04,0xAF,0x80,0x1F,0xF4,0x22,0x5A,0x08,0x01,0x0B,0x00,0x13,
+0x01,0x05,0x84,0x00,0x5A,0x10,0x03,0x04,0x48,0x00,0x01,0x03,0x48,0x00,0x00,0xDC,
+0x02,0x03,0x00,0x80,0xE6,0x05,0xE9,0xF4,0x02,0x03,0x00,0x84,0x5C,0xF0,0x07,0xD0,
+0xE9,0xEF,0xF0,0x07,0x23,0xE5,0x00,0x08,0x22,0x50,0x00,0x00,0x4C,0x5F,0x3F,0xE9,
+0x22,0x00,0x00,0x01,0xF1,0x05,0x9A,0x08,0x4D,0xE0,0x3F,0xE3,0xF0,0x08,0x22,0x55,
+0x00,0x09,0x22,0x00,0x00,0x00,0x4C,0x02,0xBF,0xDC,0xF0,0x08,0xF1,0x06,0x22,0x00,
+0x00,0x01,0x9A,0x08,0xD0,0xD5,0x22,0x25,0x00,0x04,0xF3,0x05,0x02,0x0F,0x80,0x32,
+0x8A,0x62,0x22,0x15,0x00,0x05,0xF0,0x95,0x4E,0x34,0x00,0x03,0xFE,0xDA,0xF0,0x15,
+0x96,0xDB,0xE0,0x03,0xE8,0x10,0xF3,0x06,0x8A,0x61,0x4E,0x34,0x00,0x03,0xFE,0xDA,
+0xF0,0x16,0x96,0xDB,0xE0,0x03,0xE8,0x07,0xF0,0x15,0xE0,0x02,0xE8,0x04,0xF0,0x16,
+0xE0,0x01,0xE9,0xB6,0xF0,0x23,0xC8,0x03,0xF0,0x24,0xC0,0xB2,0x22,0x02,0x00,0x04,
+0x5A,0x07,0xFF,0xAF,0x22,0x32,0x00,0x05,0x5A,0x37,0xFF,0xAB,0x22,0xF2,0x00,0x09,
+0x22,0x42,0x00,0x08,0x4D,0xE2,0x40,0x04,0x4C,0x57,0xBF,0xA3,0x9B,0x10,0x9A,0xCB,
+0x84,0x05,0x84,0xA4,0xFF,0x04,0xFE,0xC4,0x40,0x42,0x14,0x96,0x40,0x31,0x94,0x76,
+0xF4,0xA5,0xF3,0xA6,0xCC,0x02,0xC3,0x94,0xB0,0x25,0xF3,0x9C,0xF4,0x9B,0xF1,0x9A,
+0xF2,0x95,0x49,0xFF,0xAC,0xDA,0x5E,0xF0,0x00,0x32,0xE9,0x8A,0xF2,0x15,0xF4,0x1B,
+0xF1,0x1A,0xF3,0x1C,0x88,0x44,0x88,0x61,0x4E,0x27,0x00,0x0B,0xF0,0x05,0xE0,0x40,
+0xE8,0x07,0x4E,0x37,0x00,0x06,0xF0,0x06,0xE0,0x60,0x4E,0xF3,0xFF,0x7A,0xF1,0x23,
+0x22,0x05,0x00,0x09,0xF4,0x24,0x22,0x55,0x00,0x08,0xFF,0x22,0xF1,0xAA,0xFE,0x44,
+0x42,0x12,0x14,0x73,0xF4,0xA9,0xF1,0xAB,0x4E,0x26,0x00,0x07,0xF3,0x95,0xB0,0x29,
+0x44,0x12,0x04,0x9C,0xD5,0x09,0xF0,0x05,0xE0,0x40,0x84,0x00,0xE9,0x09,0xF3,0x95,
+0xB0,0x29,0x44,0x12,0x04,0x90,0xB0,0xA7,0x49,0xFF,0xAD,0xF2,0xF3,0x15,0xF1,0x27,
+0x4E,0x15,0x00,0x0C,0xF2,0x05,0xE0,0x41,0xE9,0x08,0xF2,0x28,0x4E,0x25,0x00,0x06,
+0xF4,0x06,0xE0,0x82,0x4E,0xF2,0x01,0x39,0x4E,0x36,0x00,0x06,0xB0,0x29,0x44,0x12,
+0x04,0x84,0xD5,0x07,0xF1,0x06,0xE0,0x61,0xE9,0x07,0xB0,0x29,0x44,0x12,0x04,0x78,
+0xB0,0xA7,0x49,0xFF,0xAD,0xD5,0x5A,0x00,0x02,0x04,0x48,0xFF,0xFF,0x3A,0xF1,0x27,
+0x4E,0x15,0x00,0x07,0xF0,0x05,0xE0,0x01,0x40,0x10,0x3C,0x1B,0xD5,0x02,0x84,0x20,
+0xF0,0x28,0x4E,0x05,0x00,0x07,0xF2,0x06,0xE0,0x02,0x40,0x01,0x3C,0x1A,0xD5,0x02,
+0x84,0x00,0x22,0x25,0x00,0x08,0x22,0xF5,0x00,0x09,0x8A,0x22,0x8A,0x0F,0xF1,0xA3,
+0xF0,0xA4,0xD5,0x34,0xF0,0x09,0xB0,0xAC,0xF0,0xAC,0xF0,0x03,0xB7,0x1F,0xF0,0xAD,
+0xF0,0x0B,0xF6,0x81,0xF0,0xAE,0xF0,0x0A,0x80,0x29,0xF0,0xAF,0x3A,0x21,0x14,0x00,
+0xB0,0x23,0x49,0xFF,0xAF,0x54,0x04,0x03,0x00,0x48,0x54,0x00,0x01,0xE0,0x5A,0x08,
+0x20,0x35,0xF1,0x1F,0xF0,0x23,0x22,0x20,0x80,0x08,0x22,0x10,0x80,0x09,0x88,0x02,
+0x14,0x03,0x00,0x3A,0xF0,0x24,0x88,0x01,0x14,0x03,0x00,0x3B,0xD5,0x26,0xF0,0xA3,
+0xF0,0xA4,0xF0,0x0C,0xB0,0x63,0x80,0x49,0xA7,0x00,0xA7,0x41,0xA6,0x02,0xFA,0x6E,
+0xB6,0x1F,0x80,0x06,0x49,0xFF,0xAD,0xA6,0xD5,0x3E,0x04,0x03,0x00,0x48,0x96,0x06,
+0xC8,0x14,0xF1,0x1F,0xF0,0x23,0x22,0x20,0x80,0x08,0x22,0x10,0x80,0x09,0x88,0x02,
+0x14,0x03,0x00,0x3A,0xF0,0x24,0x88,0x01,0x50,0x13,0x01,0x1B,0x14,0x03,0x00,0x3B,
+0xA6,0x0D,0x58,0x00,0x00,0x01,0xAE,0x0D,0x44,0x02,0x15,0xC0,0xF1,0x1F,0x38,0x30,
+0x1C,0x00,0x00,0x03,0x01,0x05,0xF2,0x20,0x5A,0x00,0x03,0x1A,0x44,0x02,0x15,0xC0,
+0x50,0x33,0x01,0x1B,0x38,0x00,0x1C,0x00,0x8C,0x01,0x96,0x00,0x54,0x10,0x00,0x07,
+0x94,0x8D,0xA6,0x5D,0x92,0x03,0x96,0x67,0xFE,0x57,0xAE,0x5D,0x54,0x10,0x00,0x01,
+0xA6,0x1E,0x54,0x00,0x00,0xFE,0xFE,0x0F,0xAE,0x1E,0xD5,0x05,0xB0,0x23,0x49,0xFF,
+0xAC,0x21,0xC0,0xE5,0xF3,0x23,0xF0,0x1E,0xF1,0x1F,0xCB,0x03,0xF2,0x24,0xC2,0x0B,
+0x02,0x20,0x80,0x08,0x02,0x10,0x80,0x09,0x88,0x43,0x12,0x20,0x00,0x08,0xF2,0x24,
+0x88,0x22,0xD5,0x07,0x22,0x20,0x80,0x08,0x22,0x10,0x80,0x09,0x12,0x20,0x00,0x08,
+0x12,0x10,0x00,0x09,0x04,0x13,0x00,0x47,0x46,0x01,0x00,0x00,0xFE,0x0E,0xC0,0x19,
+0xF0,0x23,0xC8,0x03,0xF0,0x24,0xC0,0x0C,0x50,0x13,0x01,0x1B,0xA6,0x0C,0x54,0x00,
+0x00,0xEF,0xAE,0x0C,0x44,0x0F,0xFF,0x9C,0x3C,0x0F,0xF8,0x9E,0xD5,0x08,0xF0,0x1E,
+0x22,0x10,0x00,0x08,0x3C,0x1F,0xF8,0x9E,0x22,0x00,0x00,0x09,0x3C,0x0F,0xF8,0x9F,
+0xF0,0x1E,0xF2,0x0D,0x22,0x10,0x00,0x08,0xE0,0x22,0xE9,0x07,0xF2,0x0E,0xE0,0x22,
+0x40,0x20,0xBC,0x1B,0x80,0x22,0xD5,0x02,0xF1,0x0D,0x12,0x10,0x00,0x08,0xF2,0x0F,
+0x22,0x10,0x00,0x09,0xE0,0x22,0xE9,0x07,0xF2,0x10,0xE0,0x22,0x40,0x20,0xBC,0x1B,
+0x80,0x22,0xD5,0x02,0xF1,0x0F,0x12,0x10,0x00,0x09,0xD5,0x20,0x00,0x03,0x01,0x05,
+0x5A,0x08,0x03,0x1D,0x00,0x03,0x01,0x06,0x5A,0x00,0x01,0x19,0x44,0x02,0x15,0xC0,
+0x50,0x33,0x01,0x1B,0x38,0x00,0x1C,0x00,0x8C,0x01,0x96,0x00,0x54,0x10,0x00,0x07,
+0x94,0x8D,0xA6,0x5D,0x92,0x03,0x96,0x67,0xFE,0x57,0xAE,0x5D,0x54,0x10,0x00,0x01,
+0xA6,0x1E,0x54,0x00,0x00,0xFE,0xFE,0x0F,0xAE,0x1E,0xF0,0x13,0x5A,0x08,0x01,0x0D,
+0x02,0x03,0x00,0x80,0xE6,0x02,0xE9,0x08,0xF0,0x1E,0xB4,0x20,0x3C,0x0D,0xFD,0x05,
+0x88,0x01,0x90,0x01,0xD5,0x02,0x84,0x00,0x3C,0x0F,0xFD,0x05,0x02,0x03,0x00,0x81,
+0xE6,0x02,0xE8,0x0A,0xF0,0x1E,0x22,0x10,0x00,0x08,0x12,0x13,0x00,0x7E,0x22,0x00,
+0x00,0x09,0x12,0x03,0x00,0x7F,0x8C,0xE1,0x50,0x63,0x01,0x24,0x5A,0x70,0x0B,0x04,
+0x48,0xFF,0xFB,0x4C,0xFC,0xD8,0x5A,0x00,0x02,0x04,0x48,0xFF,0xFE,0x12,0x48,0xFF,
+0xFE,0xDB,0xFC,0x00,0x49,0xFF,0xE4,0x99,0x49,0x00,0x00,0xF6,0x49,0xFF,0xE7,0x8F,
+0x49,0xFF,0xE7,0xE3,0x49,0xFF,0xE4,0xC6,0x49,0xFF,0xE4,0xDB,0x49,0xFF,0xE5,0x0E,
+0x49,0xFF,0xC8,0x25,0x49,0xFF,0xE5,0xAB,0x49,0xFF,0xE0,0x2F,0x84,0x00,0x3E,0x07,
+0xE2,0xCF,0xFC,0x80,0x44,0x04,0x00,0x54,0x84,0x20,0xB6,0x20,0xDD,0x9E,0xFC,0x44,
+0x81,0x00,0x84,0x00,0x12,0x0F,0x80,0x0F,0x4E,0x82,0x00,0x0D,0x44,0x02,0x17,0x4C,
+0xF0,0x84,0x44,0x02,0x17,0x24,0xF0,0x82,0x84,0x02,0x85,0x45,0xF0,0x83,0x84,0xC6,
+0xD5,0x0B,0x44,0x02,0x17,0x88,0x85,0x43,0xF0,0x84,0x44,0x02,0x17,0x60,0xF0,0x82,
+0x14,0xAF,0x80,0x03,0x84,0xC4,0x46,0x97,0xFF,0xFF,0x84,0x00,0x80,0xA6,0x50,0x94,
+0x8F,0xFF,0xF0,0x81,0x2E,0x07,0xF6,0x1D,0xF7,0x01,0x42,0x73,0x00,0x73,0x97,0xF8,
+0xE6,0xF4,0xE8,0x39,0x84,0x02,0x80,0x28,0xF2,0x01,0x44,0x32,0x17,0xB6,0x50,0x4F,
+0x80,0x1E,0xF5,0x85,0x49,0xFF,0xCB,0x6D,0xE7,0x02,0xF5,0x05,0xE8,0x0C,0xE3,0x47,
+0xE9,0x0A,0x02,0x0F,0x80,0x0F,0xE6,0x0A,0xE8,0x03,0x84,0x00,0xD5,0x02,0x8E,0x0A,
+0x12,0x0F,0x80,0x0F,0x44,0x02,0x17,0xB8,0x38,0x10,0x1E,0x02,0x3C,0x03,0xFA,0xE3,
+0xC1,0x08,0x94,0x02,0x84,0x46,0x42,0x00,0x88,0x73,0x84,0x2A,0x40,0x00,0x04,0x16,
+0x44,0x12,0x17,0xB8,0x38,0x00,0x9E,0x0A,0x44,0x02,0x17,0xB8,0x38,0x00,0x1E,0x02,
+0xE0,0x09,0xE8,0x09,0x02,0x1F,0x80,0x0F,0x5C,0xF0,0x82,0x58,0x40,0x90,0x3C,0x1B,
+0x40,0x53,0xBC,0x1B,0xF0,0x01,0x8C,0x01,0x96,0x00,0xF0,0x81,0x4C,0x03,0x7F,0xBC,
+0x44,0x00,0xFF,0xFF,0xE7,0x02,0x3C,0x0F,0xF8,0xEB,0xE8,0x1E,0xE3,0x47,0xE9,0x1C,
+0x84,0x00,0x80,0x20,0x44,0x42,0x17,0xB8,0x38,0x22,0x06,0x02,0x8C,0x21,0xE0,0x40,
+0x96,0x48,0x40,0x20,0x3C,0x1B,0xE3,0x41,0x44,0x32,0x17,0xB8,0x96,0x11,0xE8,0xF5,
+0x84,0x20,0x38,0x01,0x86,0x0A,0x8C,0x21,0x96,0x88,0xE3,0x42,0xE8,0xFB,0xE3,0x45,
+0xE9,0x03,0x81,0x20,0x84,0xA0,0x2E,0x47,0xF6,0x1D,0xC4,0x05,0x3C,0x03,0xFB,0x10,
+0xE1,0x20,0xE8,0x05,0x3E,0x57,0xF6,0x22,0x3C,0x9B,0xFB,0x10,0x3C,0x03,0xFB,0x10,
+0x5C,0xF0,0x00,0x50,0xE8,0x09,0x2E,0x07,0xF6,0x22,0x3E,0x07,0xF6,0x23,0x84,0x00,
+0x3E,0x07,0xF6,0x1C,0xD5,0x20,0x8C,0x81,0x2E,0x17,0xF6,0x1E,0x97,0x20,0xE2,0x81,
+0x3E,0x47,0xF6,0x1D,0xE9,0x1A,0x2E,0x17,0xF6,0x22,0x5C,0xF0,0x00,0x78,0x3E,0x17,
+0xF6,0x23,0x84,0x01,0xE9,0x02,0x84,0x02,0x3E,0x07,0xF6,0x1C,0x84,0x01,0x3E,0x07,
+0xF6,0x1A,0x84,0x21,0x84,0x07,0x49,0xFF,0xE7,0x53,0x84,0x07,0x44,0x10,0x00,0x64,
+0x49,0xFF,0xE7,0x40,0x84,0x01,0xD5,0x16,0xFF,0x34,0x97,0x20,0x88,0xC4,0xE4,0xD5,
+0xE9,0x02,0xFA,0xC4,0x9F,0x71,0x84,0x02,0xF1,0x03,0xF2,0x02,0xF3,0x04,0x97,0x68,
+0x49,0xFF,0xBF,0x7E,0xE7,0x02,0x84,0x00,0xE8,0x05,0x80,0x28,0x49,0xFF,0xC8,0xD7,
+0x84,0x00,0xFC,0xC4,0xFC,0x40,0x44,0x64,0x80,0x88,0x46,0xA0,0x10,0x00,0xB4,0x06,
+0x46,0x90,0x20,0x00,0x40,0x00,0x28,0x04,0xB6,0x06,0xB4,0x06,0x44,0x74,0x55,0x08,
+0x40,0x00,0x24,0x04,0xB6,0x06,0xB4,0x27,0x44,0x0F,0xFF,0xBF,0xFE,0x0E,0xB6,0x07,
+0x84,0x21,0x80,0x07,0x49,0xFF,0x87,0xDB,0x44,0x04,0x58,0x88,0x84,0x37,0xB4,0x40,
+0xFE,0x56,0xB6,0x20,0x84,0x21,0x49,0xFF,0x87,0xA7,0xB4,0x27,0x44,0x0F,0xFF,0x7F,
+0xFE,0x0E,0xB6,0x07,0xB4,0x27,0x44,0x0F,0xFF,0xEF,0xFE,0x0E,0xB6,0x07,0x84,0x21,
+0x80,0x07,0x49,0xFF,0x87,0xC4,0xB4,0x06,0x40,0xA0,0x28,0x04,0xB7,0x46,0xB4,0x06,
+0x40,0x90,0x24,0x04,0xB7,0x26,0x49,0xFF,0x8D,0x31,0xE6,0x03,0xE8,0x1F,0x44,0x14,
+0x2C,0x0C,0x46,0x00,0x01,0x00,0xB4,0x41,0xFE,0x17,0x84,0x41,0xB6,0x01,0x80,0x62,
+0x44,0x04,0x28,0x0C,0x44,0x14,0x24,0x0C,0x49,0xFF,0x87,0xD4,0x44,0x14,0x2C,0x18,
+0x46,0x00,0x04,0x00,0xB4,0x41,0xFE,0x17,0x84,0x41,0xB6,0x01,0x80,0x62,0x44,0x04,
+0x28,0x18,0x44,0x14,0x24,0x18,0x49,0xFF,0x87,0xC5,0x49,0xFF,0x8D,0x0F,0xE6,0x03,
+0xE8,0x2B,0x44,0x14,0x2C,0x14,0xB4,0x01,0x58,0x00,0x10,0x00,0xB6,0x01,0x84,0x05,
+0x49,0xFF,0xBB,0x25,0x84,0x41,0x80,0x62,0x44,0x04,0x28,0x14,0x44,0x14,0x24,0x14,
+0x49,0xFF,0x87,0xB0,0x44,0x04,0x2C,0x1C,0x44,0x1B,0xFF,0xFF,0xB4,0x40,0xFE,0x56,
+0xB6,0x20,0xB4,0x40,0x46,0x10,0x00,0x80,0xFE,0x57,0xB6,0x20,0xB4,0x40,0x46,0x10,
+0x04,0x00,0xFE,0x57,0x84,0x41,0xB6,0x20,0x80,0x62,0x44,0x04,0x28,0x1C,0x44,0x14,
+0x24,0x1C,0x49,0xFF,0x87,0x97,0x46,0x60,0x00,0x81,0x49,0xFF,0x87,0xA5,0x04,0x13,
+0x03,0xA0,0x84,0x10,0xFE,0x0E,0x14,0x03,0x03,0xA0,0x04,0x13,0x03,0x9F,0x46,0x0F,
+0x0F,0xFF,0x50,0x00,0x0F,0xFF,0xFE,0x46,0x46,0x20,0x40,0x00,0xFE,0x57,0x14,0x13,
+0x03,0x9F,0x04,0x13,0x03,0x9F,0x46,0x27,0x00,0x00,0x94,0x4C,0x92,0x24,0xFE,0x57,
+0x14,0x13,0x03,0x9F,0x04,0x13,0x03,0x9E,0xFE,0x0E,0x46,0x10,0x70,0x00,0xFE,0x0F,
+0x14,0x03,0x03,0x9E,0x49,0xFF,0x87,0x79,0x46,0x00,0x03,0x33,0x50,0x00,0x03,0x33,
+0x44,0x14,0x50,0x0C,0x14,0x03,0x00,0x34,0x14,0x03,0x00,0x36,0xB4,0x01,0x58,0x00,
+0x00,0x01,0xB6,0x01,0x44,0x04,0x00,0x90,0x84,0x2A,0xAC,0x40,0x84,0x00,0x49,0xFF,
+0xBC,0x7C,0x44,0x16,0x20,0x04,0x46,0x00,0x10,0x00,0xB4,0x41,0xFE,0x17,0xB6,0x01,
+0x44,0x14,0x2C,0x18,0x46,0x0B,0xFF,0xFF,0xB4,0x41,0x50,0x00,0x0F,0xFF,0xFE,0x16,
+0xB6,0x01,0x44,0x14,0x2C,0x1C,0x44,0x0F,0xFF,0xEF,0xB4,0x41,0xFE,0x16,0x84,0x41,
+0xB6,0x01,0x80,0x62,0x44,0x04,0x28,0x18,0x44,0x14,0x24,0x18,0x49,0xFF,0x87,0x3A,
+0x84,0x41,0x44,0x04,0x28,0x1C,0x44,0x14,0x24,0x1C,0x80,0x62,0x49,0xFF,0x87,0x32,
+0x49,0xFF,0x8C,0x7C,0xE6,0x03,0xE8,0x10,0x44,0x14,0x2C,0x04,0x46,0x00,0x00,0x80,
+0xB4,0x41,0xFE,0x17,0x84,0x41,0xB6,0x01,0x80,0x62,0x44,0x04,0x28,0x04,0x44,0x14,
+0x24,0x04,0x49,0xFF,0x87,0x1F,0x49,0xFF,0x8C,0x69,0xE6,0x03,0xE9,0x40,0x84,0x08,
+0x49,0xFF,0xBA,0x85,0x84,0x00,0x49,0xFF,0xBA,0x8B,0x84,0x41,0x80,0x62,0x44,0x04,
+0x28,0x14,0x44,0x14,0x24,0x14,0x49,0xFF,0x87,0x0D,0x44,0x14,0x2C,0x0C,0x46,0x0F,
+0xFE,0xFF,0xB4,0x41,0x50,0x00,0x0F,0xFF,0xFE,0x16,0x84,0x41,0xB6,0x01,0x80,0x62,
+0x44,0x04,0x28,0x0C,0x44,0x14,0x24,0x0C,0x49,0xFF,0x86,0xFC,0x44,0x04,0x2C,0x04,
+0x46,0x10,0x08,0x00,0xB4,0x40,0xFE,0x57,0xB6,0x20,0xB4,0x40,0x46,0x1F,0xFB,0xFF,
+0x50,0x10,0x8F,0xFF,0xFE,0x56,0xB6,0x20,0xB4,0x40,0x46,0x10,0x00,0x80,0xFE,0x57,
+0xB6,0x20,0xB4,0x40,0x44,0x14,0x00,0x00,0xFE,0x57,0x84,0x41,0xB6,0x20,0x80,0x62,
+0x44,0x04,0x28,0x04,0x44,0x14,0x24,0x04,0x49,0xFF,0x86,0xDC,0xFC,0xC0,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0x40,0xDD,0x00,0x00,0x40,0xDD,0x00,0x00,0xBE,0xFD,0x00,0x00,
+0x00,0xE0,0x01,0x00,0xEE,0xF3,0x01,0x00,0x24,0x01,0x00,0x00,0x50,0x1D,0x00,0x00,
+0x81,0x08,0x00,0x1A,0x02,0x00,0x06,0x0C,0x02,0x00,0x06,0x0C,0x01,0x00,0x04,0x04,
+0x01,0x00,0x03,0x06,0x01,0x00,0x06,0x00,0x05,0x04,0x00,0x00,0xA9,0xC8,0xB9,0x7E,
+0x32,0x19,0x64,0x32,0x33,0x11,0x12,0x20,0xFF,0x07,0xFF,0x07,0x05,0x0A,0x0B,0x00,
+0x00,0xFF,0xFF,0x00,0x01,0x00,0x00,0x01,0x01,0x01,0xFF,0x01,0x01,0xFF,0xFF,0xFF,
+0x00,0x00,0x00,0x00,0x5C,0x54,0x47,0x37,0x37,0x37,0x37,0x37,0x37,0x37,0x37,0x37,
+0x37,0x37,0x37,0x37,0x37,0x37,0x37,0x37,0x37,0x37,0x37,0x37,0x37,0x37,0x37,0x37,
+0x37,0x37,0x37,0x37,0x00,0x00,0x31,0x00,0x94,0x00,0xFA,0x00,0x66,0x01,0xD9,0x01,
+0x57,0x02,0xE6,0x02,0x8A,0x03,0x4F,0x04,0x44,0x05,0x84,0x06,0x42,0x08,0xEB,0x0A,
+0x98,0x0F,0x55,0x1A,0xF3,0x07,0xFF,0xFF,0x00,0xFF,0xFF,0x00,0x01,0x00,0x00,0x01,
+0x01,0x01,0xFF,0x01,0x01,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0x00,0x01,0x00,0x00,0x01,
+0xFF,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,0x00,0xFF,0xFF,0x00,0x01,0x00,0x00,0x01,
+0xFF,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,0xFF,0xFF,0x00,0xFF,0x01,0xFF,0xFF,0x00,
+0x00,0x00,0x01,0x00,0xFF,0x01,0x00,0x01,0x01,0x01,0x00,0x00,0x00,0xFF,0xFF,0x00,
+0x01,0x00,0x00,0x01,0xFF,0xFF,0x01,0xFF,0xFF,0x01,0x01,0x01,0x64,0x00,0x00,0x00,
+0x64,0x00,0x00,0x00,0x64,0x00,0x00,0x00,0x64,0x00,0x00,0x00,0x9C,0xFF,0xFF,0xFF,
+0x9C,0xFF,0xFF,0xFF,0x94,0x05,0x02,0x00,0x8C,0x05,0x02,0x00,0x80,0x05,0x02,0x00,
+0x74,0x05,0x02,0x00,0x64,0x05,0x02,0x00,0x54,0x05,0x02,0x00,0x40,0x05,0x02,0x00,
+0x2C,0x05,0x02,0x00,0x14,0x05,0x02,0x00,0xFC,0x04,0x02,0x00,0x0A,0x0B,0x0B,0x0B,
+0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x00,0x00,0x01,0x05,0x00,0x07,0x02,0x06,0x04,0x08,
+0x03,0x09,0x00,0x00,0x01,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x00,0x00,
+0x01,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x00,0x00,0x05,0x05,0x05,0x05,
+0x05,0x05,0x08,0x08,0x08,0x09,0x07,0x06,0x03,0x02,0x08,0x09,0x04,0x09,0x09,0x08,
+0x30,0x01,0x30,0x01,0x30,0x01,0x30,0x01,0x30,0x01,0x30,0x01,0x30,0x01,0x62,0x01,
+0x50,0x01,0x44,0x01,0x74,0x01,0x96,0x01,0x84,0x02,0xC4,0x02,0x5A,0x01,0x46,0x01,
+0xEE,0x01,0x30,0x01,0x44,0x01,0x50,0x01,0x05,0x05,0x05,0x05,0x05,0x05,0x09,0x08,
+0x08,0x09,0x07,0x06,0x03,0x02,0x08,0x09,0x04,0x09,0x09,0x08,0x00,0x01,0x02,0x03,
+0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0B,0x0A,0x09,0x08,0x07,0x06,0x05,0x04,
+0x03,0x02,0x01,0x00,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x00,0x01,0x02,
+0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x02,0x01,0x00,0x00,0x01,0x02,0x03,
+0x04,0x05,0x06,0x07,0x08,0x00,0x00,0x01,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,
+0x08,0x00,0x01,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,
+0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,
+0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,
+0x38,0x70,0x00,0x00,0x01,0x00,0x02,0x00,0x02,0x00,0x01,0x00,0x04,0x80,0x00,0x00,
+0x08,0x40,0x00,0x00,0x10,0x20,0x00,0x00,0x20,0x10,0x00,0x00,0x40,0x08,0x00,0x00,
+0x80,0x04,0x00,0x00,0x00,0x03,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,
+0x38,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x52,0x02,0x00,0x00,0x52,0x02,0x00,0x00,0x92,0x02,0x00,0x00,
+0xD2,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x90,0x00,0x00,0x00,0x90,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,
+0xF0,0x00,0x00,0x00,0x00,0x00,0x40,0x02,0x40,0x02,0x00,0x00,0xC0,0x00,0xC0,0x00,
+0x40,0x00,0x40,0x00,0x00,0x09,0x09,0x00,0x03,0x03,0x01,0x01,0x01,0x01,0x01,0x01,
+0x01,0x01,0x01,0x01,0x01,0x04,0x04,0x04,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,
+0x08,0x00,0x01,0x02,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x02,0x01,0x00,
+0x00,0x01,0x02,0x03,0x04,0x00,0x01,0x02,0x03,0x04,0x00,0x00,0x07,0x80,0x03,0x00,
+0x38,0x70,0x00,0x00,0xC0,0x0F,0x00,0x00,0x08,0x40,0x00,0x00,0x10,0x20,0x00,0x00,
+0x20,0x10,0x00,0x00,0x40,0x08,0x00,0x00,0x80,0x04,0x00,0x00,0x00,0x03,0x00,0x00,
+0x07,0x80,0x03,0x00,0x38,0x70,0x00,0x00,0xC0,0x0F,0x00,0x00,0x01,0x00,0x02,0x00,
+0x02,0x00,0x01,0x00,0x04,0x80,0x00,0x00,0x08,0x40,0x00,0x00,0x10,0x20,0x00,0x00,
+0x20,0x10,0x00,0x00,0x40,0x08,0x00,0x00,0x80,0x04,0x00,0x00,0x00,0x03,0x00,0x00,
+0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x07,0x80,0x03,0x00,
+0x38,0x70,0x00,0x00,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
+0x01,0x03,0x03,0x03,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x03,0x03,
+0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x03,0x03,0x03,0x03,
+0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
+0x01,0x00,0x02,0x00,0x02,0x00,0x01,0x00,0x04,0x80,0x00,0x00,0x08,0x40,0x00,0x00,
+0x10,0x20,0x00,0x00,0x20,0x10,0x00,0x00,0x40,0x08,0x00,0x00,0x80,0x04,0x00,0x00,
+0x00,0x03,0x00,0x00,0x07,0x80,0x03,0x00,0x38,0x70,0x00,0x00,0xC0,0x0F,0x00,0x00,
+0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x00,0x01,0x02,0x00,0x01,0x02,0x03,
+0x04,0x05,0x06,0x07,0x08,0x00,0x01,0x02,0x0B,0x02,0x0B,0x0B,0x0B,0x02,0x00,0x00,
+0x0B,0x02,0x0B,0x0B,0x0B,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x0A,0x00,0x00,0x00,0xDC,0x00,0x0A,0x05,0xF3,0x01,0xA0,0x05,0x04,0x00,0x96,0x00,
+0x01,0x14,0x96,0x05,0x04,0x64,0x00,0x00,0x2C,0x01,0x46,0x00,0x01,0x0A,0x08,0x00,
+0x27,0x00,0x27,0x00,0xA9,0x02,0x79,0x05,0x00,0x04,0x02,0x00,0x04,0x04,0x02,0x00,
+0x01,0x00,0x00,0x00,0x10,0x04,0x02,0x00,0x02,0x01,0x00,0x14,0x14,0x14,0x14,0x00,
+0x2F,0x2F,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x0B,0x00,0x00,0x00,0x00,0x00,0x1A,0x00,0x33,0x00,0x4D,0x00,
+0x66,0x00,0x80,0x00,0x9A,0x00,0xB3,0x00,0xCD,0x00,0xE6,0x00,0x00,0x01,0x00,0x00,
+0x39,0x00,0x71,0x00,0xA7,0x00,0xDA,0x00,0x0A,0x01,0x36,0x01,0x5E,0x01,0x83,0x01,
+0xA4,0x01,0xC2,0x01,0x01,0x00,0x00,0x00,0xF1,0xD8,0xFF,0xFF,0xF1,0xD8,0xFF,0xFF,
+0xF1,0xD8,0xFF,0xFF,0xF1,0xD8,0xFF,0xFF,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
+0x64,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0x19,0x00,0x00,0x01,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0x00,0x00,0x3C,0x0C,0x18,0x32,0x0D,
+0x1B,0x28,0x0E,0x17,0x1E,0x0F,0x17,0x14,0x11,0x1D,0x00,0x00,0x01,0x01,0x04,0x01,
+0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x0A,0x0B,0x0B,0x0B,0x0C,0x0C,0x0C,0x0C,
+0x0C,0x0C,0x00,0x00,0x94,0x05,0x02,0x00,0x8C,0x05,0x02,0x00,0x80,0x05,0x02,0x00,
+0x74,0x05,0x02,0x00,0x64,0x05,0x02,0x00,0x54,0x05,0x02,0x00,0x40,0x05,0x02,0x00,
+0x2C,0x05,0x02,0x00,0x14,0x05,0x02,0x00,0xFC,0x04,0x02,0x00,0x5D,0x00,0x44,0x00,
+0x5A,0x00,0x72,0x00,0x8A,0x00,0xA3,0x00,0xBB,0x00,0xD0,0x00,0xE3,0x00,0xF2,0x00,
+0xFD,0x00,0x02,0x01,0x61,0x00,0x4D,0x00,0x68,0x00,0x84,0x00,0xA2,0x00,0xBF,0x00,
+0xDA,0x00,0xF2,0x00,0x06,0x01,0x13,0x01,0x1A,0x01,0x00,0x00,0x65,0x00,0x58,0x00,
+0x79,0x00,0x9D,0x00,0xC1,0x00,0xE3,0x00,0x02,0x01,0x1C,0x01,0x2E,0x01,0x37,0x01,
+0x6A,0x00,0x67,0x00,0x91,0x00,0xBE,0x00,0xEA,0x00,0x13,0x01,0x35,0x01,0x4E,0x01,
+0x5B,0x01,0x00,0x00,0x72,0x00,0x7C,0x00,0xB2,0x00,0xEB,0x00,0x23,0x01,0x52,0x01,
+0x75,0x01,0x87,0x01,0x7C,0x00,0x99,0x00,0xE2,0x00,0x2E,0x01,0x72,0x01,0xA5,0x01,
+0xC1,0x01,0x00,0x00,0x45,0x00,0x63,0x00,0x96,0x00,0xC8,0x00,0xF0,0x00,0x07,0x01,
+0x51,0x00,0x88,0x00,0xD3,0x00,0x15,0x01,0x3C,0x01,0x00,0x00,0x67,0x00,0xCC,0x00,
+0x40,0x01,0x8A,0x01,0x99,0x00,0x66,0x01,0x38,0x70,0x00,0x00,0xFF,0xFF,0x00,0x00,
+0xFF,0x00,0xFF,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x30,0x75,0x00,0x00,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xA7,0x9A,0x7E,0xD7,
+0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x64,0x00,0xC8,0x00,0x58,0x02,0x60,0x09,0x5A,0x00,0xDC,0x00,0x4B,0x0F,0x28,0x5A,
+0xFA,0x00,0xC2,0x01,0xB0,0x04,0xB8,0x0B,0x64,0x00,0xDC,0x00,0x4B,0x0F,0x28,0x64,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x3C,0x50,0x10,0x32,0x32,0x37,0x3C,
+0x96,0x00,0x9C,0xFF,0x28,0x23,0x04,0x00,0x2C,0x01,0x38,0xFF,0x32,0x23,0x04,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x01,0x04,0x01,
+0x90,0x01,0x90,0x01,0x00,0x00,0x00,0x00,0x04,0x01,0x16,0x01,0xD4,0x01,0xF4,0x01,
+0x50,0x46,0x00,0x00,0xC8,0x00,0x01,0x01,0x14,0x14,0x0C,0x20,0x00,0x02,0x02,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x5B,0x00,0x26,0x02,0x20,0x03,0x64,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x28,0x00,0x26,0x02,0x20,0x03,0x58,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x0D,0x0D,0x3C,0x46,0x3C,0x00,0x08,0x04,0x1E,0x32,0x0F,0x3C,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x43,0xF6,0x7B,0xA7,
+0x48,0x00,0x3D,0x84,0x48,0x00,0x3B,0xC4,0x48,0x00,0x3B,0xE2,0x48,0x00,0x3C,0x00,
+0x48,0x00,0x3C,0x1E,0x48,0x00,0x3C,0x3C,0x48,0x00,0x3C,0x5A,0x48,0x00,0x3C,0x78,
+0x48,0x00,0x3C,0x96,0x48,0x00,0x3C,0xEC,0x48,0x00,0x3C,0xEE,0x48,0x00,0x3C,0xF0,
+0x48,0x00,0x3C,0xF2,0x48,0x00,0x3C,0xF4,0x48,0x00,0x3C,0xF6,0x48,0x00,0x3C,0xF8,
+0x48,0x00,0x3C,0xFA,0x48,0x00,0x3C,0xFC,0x48,0x00,0x3C,0xFE,0x48,0x00,0x3D,0x00,
+0x48,0x00,0x3D,0x02,0x48,0x00,0x3D,0x04,0x48,0x00,0x3D,0x06,0x48,0x00,0x3D,0x08,
+0x48,0x00,0x3D,0x0A,0x48,0x00,0x3D,0x0C,0x48,0x00,0x3D,0x0E,0x48,0x00,0x3D,0x10,
+0x48,0x00,0x3D,0x12,0x48,0x00,0x3D,0x14,0x48,0x00,0x3D,0x16,0x48,0x00,0x3D,0x18,
+0x48,0x00,0x3D,0x1A,0x48,0x00,0x3D,0x1C,0x48,0x00,0x3D,0x1E,0x48,0x00,0x3D,0x20,
+0x48,0x00,0x3D,0x22,0x48,0x00,0x3D,0x25,0x48,0x00,0x3D,0x28,0x48,0x00,0x3D,0x2B,
+0x48,0x00,0x3D,0x2E,0xC4,0x7B,0x00,0x00,0xC6,0x7B,0x00,0x00,0xDA,0x7B,0x00,0x00,
+0xEC,0x7B,0x00,0x00,0xFA,0x7B,0x00,0x00,0x12,0x7C,0x00,0x00,0x20,0x7C,0x00,0x00,
+0x58,0x7C,0x00,0x00,0x60,0x7C,0x00,0x00,0x76,0x7C,0x00,0x00,0x9A,0x7C,0x00,0x00,
+0xE4,0x7C,0x00,0x00,0xE6,0x7C,0x00,0x00,0xEE,0x7C,0x00,0x00,0xF6,0x7C,0x00,0x00,
+0xFE,0x7C,0x00,0x00,0x38,0x7D,0x00,0x00,0x3A,0x7E,0x00,0x00,0xCE,0x7E,0x00,0x00,
+0xE4,0x7E,0x00,0x00,0x0C,0x80,0x00,0x00,0x24,0x81,0x00,0x00,0x90,0x81,0x00,0x00,
+0x92,0x81,0x00,0x00,0x94,0x81,0x00,0x00,0x96,0x81,0x00,0x00,0x98,0x81,0x00,0x00,
+0x9A,0x81,0x00,0x00,0x9C,0x81,0x00,0x00,0x9E,0x81,0x00,0x00,0xA0,0x81,0x00,0x00,
+0xA2,0x81,0x00,0x00,0xE6,0x28,0xE8,0x4C,0x96,0x06,0x46,0x20,0x00,0x81,0x44,0xF0,
+0x01,0x3C,0x38,0x17,0x84,0x00,0x40,0xF0,0xBC,0x00,0xDD,0x0F,0x08,0x16,0x24,0x32,
+0x40,0x4E,0x5C,0x6A,0x40,0x00,0x40,0x08,0x04,0x31,0x00,0x29,0x44,0x1E,0xFF,0xFF,
+0xD5,0x33,0x40,0x00,0x44,0x08,0x04,0x31,0x00,0x29,0x44,0x1D,0xFF,0xFF,0xD5,0x2C,
+0x40,0x00,0x48,0x08,0x04,0x31,0x00,0x29,0x44,0x1B,0xFF,0xFF,0xD5,0x25,0x40,0x00,
+0x4C,0x08,0x04,0x31,0x00,0x29,0x46,0x1F,0xFF,0x7F,0xD5,0x1C,0x40,0x00,0x50,0x08,
+0x04,0x31,0x00,0x29,0x46,0x1F,0xFE,0xFF,0xD5,0x15,0x40,0x00,0x54,0x08,0x04,0x31,
+0x00,0x29,0x46,0x1F,0xFD,0xFF,0xD5,0x0E,0x40,0x00,0x58,0x08,0x04,0x31,0x00,0x29,
+0x46,0x1F,0xFB,0xFF,0xD5,0x07,0x40,0x00,0x5C,0x08,0x04,0x31,0x00,0x29,0x46,0x1F,
+0xF7,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x29,0xDD,0x9E,
+0x44,0x24,0x80,0x90,0x96,0x06,0xB4,0x62,0x40,0x10,0x20,0x08,0x44,0x0F,0xFE,0xFF,
+0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x46,0x10,0x00,0x82,0xA0,0x0A,0x58,0x00,
+0x00,0x01,0xA8,0x0A,0xDD,0x9E,0x46,0x20,0x00,0x82,0x96,0x06,0xA0,0xD5,0x40,0x10,
+0x40,0x08,0x44,0x0E,0xFF,0xFF,0xFE,0x1E,0xFE,0x0F,0xA8,0x15,0xDD,0x9E,0x46,0x00,
+0x00,0x82,0xA0,0x05,0x92,0x10,0x96,0x06,0xDD,0x9E,0xFC,0x40,0x46,0x60,0x00,0x81,
+0x96,0x2F,0x40,0x90,0x20,0x08,0x04,0x03,0x00,0x2A,0x44,0x7F,0xC0,0xFF,0xFE,0x3E,
+0x40,0x00,0x24,0x04,0x14,0x03,0x00,0x2A,0x96,0x6F,0x40,0x90,0xC0,0x08,0x46,0x0F,
+0xFC,0x0F,0x04,0x13,0x00,0x2A,0x50,0x00,0x0F,0xFF,0xFE,0x46,0x40,0x10,0xA4,0x04,
+0x14,0x13,0x00,0x2A,0x96,0xAF,0x04,0x93,0x00,0x2A,0x40,0x11,0x60,0x08,0x46,0x2C,
+0x0F,0xFF,0x50,0x21,0x0F,0xFF,0x40,0x24,0x88,0x02,0xFE,0x8F,0x14,0x23,0x00,0x2A,
+0x04,0x13,0x00,0x2B,0x96,0xEF,0x92,0x26,0x94,0x4E,0xFE,0x5F,0x14,0x13,0x00,0x2B,
+0x97,0x2F,0x40,0x12,0x20,0x08,0x04,0x43,0x00,0x2B,0x97,0x6F,0xFF,0x3E,0xFF,0x0F,
+0x14,0x43,0x00,0x2B,0x04,0x13,0x00,0x2B,0x40,0x52,0xC0,0x08,0xFE,0x0E,0xFE,0x2F,
+0x14,0x03,0x00,0x2B,0x49,0x00,0x04,0x80,0x00,0x0F,0x80,0x20,0x54,0x10,0x00,0x3F,
+0x04,0x03,0x03,0x98,0x92,0x06,0x94,0x06,0xFE,0x0F,0x14,0x03,0x03,0x98,0x00,0x0F,
+0x80,0x24,0x04,0x23,0x03,0x99,0x96,0x2F,0x94,0x46,0x44,0x0F,0xF0,0x3F,0xFE,0x16,
+0xFE,0x0F,0x14,0x03,0x03,0x99,0x49,0x00,0x04,0x60,0xFC,0xC0,0x46,0x30,0x00,0x82,
+0x44,0x41,0x00,0x00,0xB4,0xA3,0x54,0x10,0x87,0xFF,0xFF,0x2F,0xB6,0x83,0xB4,0x83,
+0x94,0x92,0x92,0x8B,0x40,0x42,0x2C,0x08,0xFF,0x0F,0xB6,0x83,0x88,0x40,0x4C,0x01,
+0x00,0x05,0xA0,0x59,0xAA,0x41,0xD5,0xFC,0xB4,0x23,0x44,0x0E,0xFF,0xFF,0xFE,0x0E,
+0xB6,0x03,0xDD,0x9E,0x46,0x30,0x00,0x82,0x44,0x41,0x00,0x00,0xB4,0xA3,0x54,0x10,
+0x87,0xFF,0xFF,0x2F,0xB6,0x83,0xB4,0x83,0x94,0x92,0x92,0x8B,0x40,0x42,0x2C,0x08,
+0xFF,0x0F,0xB6,0x83,0x88,0x40,0x80,0x23,0x4C,0x01,0x00,0x05,0xA3,0x01,0xA9,0x09,
+0xD5,0xFC,0xB4,0x23,0x44,0x0E,0xFF,0xFF,0xFE,0x0E,0xB6,0x03,0xDD,0x9E,0xFC,0x00,
+0x46,0x50,0x00,0x80,0x46,0x3F,0xFF,0x00,0x9D,0x99,0x9D,0x2E,0x94,0xA9,0x88,0x40,
+0x38,0x11,0x18,0x00,0x38,0x21,0x0C,0x00,0x94,0x4C,0xFE,0x57,0x96,0x48,0x18,0x12,
+0x80,0x01,0xDC,0xF5,0xFC,0x80,0xFC,0x00,0x46,0x10,0x00,0x80,0x46,0x2F,0xFE,0xFF,
+0x50,0x50,0x80,0x08,0x50,0x61,0x0F,0xF1,0x50,0x41,0x0F,0xF0,0x50,0x30,0x80,0x0E,
+0x94,0xA9,0x88,0x40,0x38,0x11,0x18,0x00,0x38,0x21,0x10,0x00,0x94,0x4C,0xFE,0x57,
+0x96,0x48,0x18,0x12,0x80,0x01,0xDB,0xF5,0xFC,0x80,0x46,0x20,0x00,0x80,0x84,0x7E,
+0x50,0x51,0x01,0xC4,0xB4,0x85,0x96,0x06,0xFE,0xE6,0xFE,0x1F,0xB6,0x05,0x96,0x57,
+0xB4,0x65,0x40,0x00,0xA0,0x08,0x44,0x1F,0xF8,0xFF,0xFE,0x5E,0xFE,0x47,0xB6,0x25,
+0xDD,0x9E,0x46,0x20,0x00,0x81,0x40,0x00,0x40,0x08,0x04,0x11,0x00,0x11,0x96,0x49,
+0xFE,0x0F,0x14,0x01,0x00,0x11,0xDD,0x9E,0x46,0x20,0x00,0x81,0x40,0x00,0x40,0x08,
+0x04,0x11,0x00,0x10,0x96,0x49,0xFE,0x0F,0x14,0x01,0x00,0x10,0xDD,0x9E,0x46,0x20,
+0x00,0x81,0x04,0x11,0x00,0x10,0x92,0x30,0x40,0x10,0xC0,0x08,0xFE,0x0F,0x14,0x01,
+0x00,0x10,0xDD,0x9E,0x46,0x20,0x00,0x81,0x04,0x11,0x00,0x11,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x0F,0x14,0x01,0x00,0x11,0xDD,0x9E,0x46,0x20,0x00,0x81,0x84,0x30,
+0x04,0x31,0x00,0x12,0x96,0x1F,0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x12,0xDD,0x9E,
+0x46,0x20,0x00,0x80,0x84,0x30,0x04,0x31,0x00,0x70,0x96,0x1F,0xFE,0x5E,0xFE,0x0F,
+0x14,0x01,0x00,0x70,0xDD,0x9E,0x46,0x20,0x00,0x81,0x84,0x3E,0x04,0x31,0x00,0x13,
+0x96,0x06,0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x13,0xDD,0x9E,0x46,0x20,0x00,0x81,
+0x96,0x06,0x04,0x31,0x00,0x12,0x40,0x10,0x20,0x08,0x44,0x0F,0xFE,0xFF,0xFE,0x1E,
+0xFE,0x0F,0x14,0x01,0x00,0x12,0xDD,0x9E,0x46,0x20,0x00,0x81,0x96,0x0F,0x40,0x10,
+0x48,0x08,0x04,0x31,0x00,0x12,0x46,0x0F,0xFF,0x3F,0x50,0x00,0x0F,0xFF,0xFE,0x1E,
+0xFE,0x0F,0x14,0x01,0x00,0x12,0xDD,0x9E,0x46,0x00,0x00,0x81,0x04,0x00,0x00,0x12,
+0x92,0x12,0x96,0x0F,0xDD,0x9E,0x44,0x14,0x80,0x10,0xB4,0x01,0x92,0x0D,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x11,0xFA,0x50,0xAE,0x80,0xB4,0x01,0x92,0x0E,0x96,0x06,
+0xC0,0x06,0x44,0x04,0x80,0x11,0x44,0x10,0x00,0x40,0xAE,0x40,0x44,0x14,0x80,0x10,
+0xB4,0x01,0x92,0x0F,0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x11,0x44,0x2F,0xFF,0x80,
+0xAE,0x80,0xB4,0x01,0x92,0x09,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x11,0x84,0x22,
+0xAE,0x40,0x44,0x14,0x80,0x10,0xB4,0x01,0x92,0x0C,0x96,0x06,0xC0,0x05,0x44,0x04,
+0x80,0x11,0xFA,0x40,0xAE,0x80,0xB4,0x01,0x92,0x17,0x96,0x06,0xC0,0x06,0x44,0x04,
+0x80,0x12,0x44,0x1F,0xFF,0x80,0xAE,0x40,0xDD,0x9E,0x00,0x00,0x46,0x10,0x00,0x81,
+0x04,0x30,0x80,0x39,0xC0,0x0B,0x5A,0x00,0x01,0x0D,0x5A,0x00,0x02,0x0E,0x84,0x40,
+0x5A,0x08,0x03,0x0D,0x46,0x23,0xF3,0xC0,0xD5,0x09,0x46,0x23,0x00,0x00,0xD5,0x06,
+0x46,0x23,0x51,0x40,0xD5,0x03,0x46,0x23,0xA2,0x80,0x46,0x1C,0x0C,0x3F,0x50,0x10,
+0x8F,0xFF,0x40,0x01,0x84,0x02,0x46,0x10,0x00,0x81,0xFE,0x17,0x14,0x00,0x80,0x39,
+0xDD,0x9E,0x46,0x20,0x00,0x81,0x96,0x0F,0x40,0x10,0x58,0x08,0x04,0x31,0x00,0x39,
+0x46,0x0F,0xF3,0xFF,0x50,0x00,0x0F,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x39,
+0xDD,0x9E,0x46,0x10,0x00,0x81,0x04,0x30,0x80,0x39,0xC0,0x11,0x5A,0x00,0x01,0x09,
+0x5A,0x00,0x02,0x0A,0x5A,0x08,0x03,0x0B,0x44,0x03,0xFF,0xC0,0xD5,0x08,0x44,0x01,
+0x55,0x40,0xD5,0x05,0x44,0x02,0xAA,0x80,0xD5,0x02,0x84,0x00,0x44,0x23,0xFF,0xC0,
+0x44,0x1C,0x00,0x3F,0xFE,0x5E,0xFE,0x16,0xFE,0x0F,0x46,0x10,0x00,0x81,0x14,0x00,
+0x80,0x39,0xDD,0x9E,0x46,0x20,0x00,0x81,0x96,0x0F,0x04,0x31,0x00,0x39,0x40,0x10,
+0x28,0x08,0x44,0x0F,0xF3,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x39,0xDD,0x9E,
+0x46,0x20,0x00,0x81,0x46,0x31,0x55,0x10,0x50,0x31,0x84,0x40,0x50,0x51,0x00,0xE4,
+0xB4,0x25,0xA8,0xE9,0xA1,0x2A,0x84,0x78,0xFE,0xE6,0xE6,0x05,0xA8,0xEA,0xE8,0x3A,
+0x44,0xF0,0x06,0x10,0x38,0x07,0x80,0x00,0x40,0xF0,0x3C,0x00,0x4A,0x00,0x3C,0x00,
+0x06,0x1C,0x28,0x3E,0x54,0x00,0x46,0x03,0xA3,0x2A,0x92,0x26,0x50,0x00,0x03,0x00,
+0x94,0x4E,0x14,0x01,0x00,0x38,0x58,0x10,0x80,0x3A,0xD5,0x22,0x84,0x00,0x92,0x26,
+0x14,0x01,0x00,0x38,0x94,0x4E,0xD5,0x1C,0x46,0x05,0x55,0x55,0x92,0x26,0x50,0x00,
+0x05,0x55,0x94,0x4E,0x14,0x01,0x00,0x38,0x58,0x10,0x80,0x15,0xD5,0x11,0x46,0x0A,
+0xAA,0xAA,0x92,0x26,0x50,0x00,0x0A,0xAA,0x94,0x4E,0x14,0x01,0x00,0x38,0x58,0x10,
+0x80,0x2A,0xD5,0x06,0x84,0x1F,0x14,0x01,0x00,0x38,0x58,0x10,0x80,0x3F,0x14,0x11,
+0x00,0x39,0xDD,0x9E,0xDD,0x9E,0x44,0x24,0x50,0x00,0x96,0x06,0xB4,0x62,0x94,0x42,
+0x84,0x1B,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x44,0x04,0x50,0x28,0xB4,0x00,
+0x92,0x04,0x96,0x06,0xDD,0x9E,0x92,0x00,0x46,0x20,0x00,0x83,0x84,0x3C,0x04,0x31,
+0x00,0x10,0x96,0x0F,0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x10,0xDD,0x9E,0x46,0x20,
+0x00,0x83,0x96,0x06,0x04,0x31,0x00,0x10,0x40,0x10,0x20,0x08,0x44,0x0F,0xFE,0xFF,
+0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x10,0xDD,0x9E,0xFC,0x40,0x46,0x20,0x00,0x83,
+0x44,0x5F,0xFE,0xFF,0x83,0x82,0xBB,0x18,0x46,0x40,0x0F,0x03,0xFE,0xEE,0xBB,0x98,
+0xBB,0x18,0x50,0x42,0x0C,0x0F,0x92,0x68,0x40,0x31,0xA0,0x08,0x58,0x31,0x80,0x46,
+0xBB,0x98,0xBF,0x39,0xBE,0x3A,0x04,0x91,0x00,0x3B,0xFF,0xE6,0xFF,0xA6,0x40,0x44,
+0x90,0x02,0x04,0x90,0x80,0x02,0xBB,0x3C,0xB5,0x41,0x89,0x24,0xA1,0x0B,0x96,0xDF,
+0x88,0xEA,0x04,0xA0,0x80,0x01,0x98,0x5C,0xBB,0x18,0x88,0xCA,0x58,0x31,0x81,0x00,
+0xBB,0x98,0xBB,0x18,0x92,0x68,0x40,0x31,0xA0,0x08,0x58,0x31,0x80,0x46,0xBB,0x98,
+0xBF,0xB9,0xBE,0xBA,0x14,0x91,0x00,0x3B,0x96,0xC9,0xB9,0x3C,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x5F,0xB9,0xBC,0xB4,0x20,0xB9,0xB9,0xA0,0x41,0xB9,0xBA,0xA0,0x42,
+0xB9,0xBB,0xA4,0x46,0xB8,0x3C,0x92,0x10,0x40,0x00,0x40,0x08,0xFE,0x0F,0xB8,0xBC,
+0xB8,0x18,0xFF,0x46,0xBD,0x98,0xFC,0xC0,0xFC,0x20,0x46,0x20,0x00,0x83,0x44,0x3F,
+0xFE,0xFF,0x83,0x82,0xBC,0x18,0x94,0x4A,0xFE,0xE6,0xBB,0x98,0xBB,0x18,0x50,0x51,
+0x00,0xE4,0x92,0x68,0x40,0x31,0xA0,0x08,0x58,0x31,0x80,0x48,0xBB,0x98,0xBB,0x18,
+0x50,0x61,0x00,0xE8,0x58,0x31,0x81,0x00,0xBB,0x98,0x50,0x71,0x00,0xEC,0x88,0x20,
+0x50,0x21,0x00,0xF0,0x46,0x30,0x00,0x83,0x4C,0x00,0x80,0x12,0xA2,0xC1,0xB6,0x65,
+0x83,0x80,0xBB,0x3F,0x02,0x40,0x01,0x7E,0xB6,0x66,0xBB,0x7F,0xB6,0x67,0xB4,0x62,
+0x92,0x70,0x40,0x31,0xC0,0x08,0xFE,0xE7,0xB6,0x62,0xD5,0xED,0x83,0x83,0xB9,0x18,
+0x44,0x0F,0xFE,0xFF,0xFE,0x0E,0xB8,0x98,0xFC,0xA0,0xFC,0x20,0x46,0x10,0x00,0x83,
+0x44,0x2F,0xFE,0xFF,0x83,0x81,0xBB,0x18,0x46,0x40,0xF0,0x3C,0xFE,0x9E,0xBA,0x98,
+0xBA,0x18,0x50,0x32,0x00,0xF0,0x92,0x48,0x40,0x21,0x20,0x08,0x58,0x21,0x00,0x46,
+0xBA,0x98,0xBE,0x39,0xB4,0x80,0xBD,0x3A,0xFF,0x9E,0x88,0xC4,0xA1,0x01,0xBF,0x3B,
+0xFF,0x5E,0x88,0xA4,0xA1,0x02,0xBA,0x3C,0xFE,0xFE,0x88,0x83,0xA0,0xC3,0x54,0x21,
+0x00,0xF0,0xBE,0xB9,0x98,0x13,0xBD,0xBA,0xBC,0xBB,0x96,0x81,0xB8,0x3C,0x92,0x10,
+0x40,0x00,0x40,0x08,0xFE,0x17,0xB8,0xBC,0xFC,0xA0,0x44,0x14,0x80,0x90,0x84,0x5E,
+0xB4,0x61,0x96,0x06,0xFE,0x9E,0xFE,0x87,0xB6,0x41,0xB4,0x81,0x44,0x2F,0xFF,0xEF,
+0x94,0xC4,0xFE,0xA6,0xFE,0x9F,0xB6,0x41,0xB4,0x61,0x44,0x2F,0xFB,0xFF,0xFE,0x9E,
+0x40,0x00,0x28,0x08,0xFE,0x17,0xB6,0x01,0x46,0x10,0x00,0x80,0x84,0x18,0x50,0x30,
+0x82,0x6C,0xB4,0x43,0xFE,0x16,0xB6,0x03,0xB4,0x43,0x44,0x0F,0xF0,0xFF,0xFE,0x16,
+0x58,0x00,0x0A,0x00,0xB6,0x03,0xDD,0x9E,0x52,0x00,0x00,0x01,0x46,0x20,0x00,0x80,
+0x96,0x06,0xC9,0x08,0x40,0x10,0x20,0x08,0x04,0x31,0x00,0x79,0x44,0x0F,0xFE,0xFF,
+0xD5,0x07,0x40,0x10,0x40,0x08,0x04,0x31,0x00,0x79,0x44,0x0E,0xFF,0xFF,0xFE,0x1E,
+0xFE,0x0F,0x14,0x01,0x00,0x79,0xDD,0x9E,0x46,0x10,0x00,0x82,0x5A,0x08,0x01,0x0B,
+0x50,0x30,0x80,0x20,0xB4,0x03,0x58,0x00,0x00,0x02,0xB6,0x03,0xB4,0x43,0x84,0x1E,
+0xD5,0x04,0x04,0x20,0x80,0x08,0x84,0x1D,0xFE,0x16,0x14,0x00,0x80,0x08,0xDD,0x9E,
+0x46,0x30,0x00,0x83,0x54,0x10,0x00,0x01,0x50,0x51,0x83,0xB8,0xB4,0x85,0x40,0x20,
+0xA0,0x08,0x44,0x1F,0xFE,0xFF,0xFE,0x66,0xFE,0x57,0xB6,0x25,0xB4,0x25,0xE6,0x01,
+0x44,0x0F,0xFD,0xFF,0x40,0xF7,0xA4,0x08,0xFE,0x0E,0x40,0x00,0x3C,0x04,0xB6,0x05,
+0xDD,0x9E,0x46,0x30,0x00,0x83,0x54,0x10,0x00,0x01,0x50,0x51,0x83,0xB8,0xB4,0x85,
+0x40,0x20,0xA8,0x08,0x44,0x1F,0xFB,0xFF,0xFE,0x66,0xFE,0x57,0xB6,0x25,0xB4,0x25,
+0xE6,0x01,0x44,0x0F,0xF7,0xFF,0x40,0xF7,0xAC,0x08,0xFE,0x0E,0x40,0x00,0x3C,0x04,
+0xB6,0x05,0xDD,0x9E,0x44,0x27,0x20,0x68,0x96,0x01,0xB4,0x22,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x47,0xB6,0x22,0x44,0x27,0x20,0x70,0xB4,0x22,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x47,0xB6,0x22,0x44,0x27,0x20,0x78,0xB4,0x22,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x47,0xB6,0x22,0x44,0x27,0x20,0x80,0xB4,0x22,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x47,0xB6,0x22,0x44,0x27,0x20,0x88,0xB4,0x22,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x47,0xB6,0x22,0x44,0x27,0x20,0x90,0xB4,0x22,0x92,0x30,0x40,0x10,
+0xC0,0x08,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0xC8,0x0A,0x44,0x17,0x20,0x00,0x46,0x0F,
+0xEF,0xFF,0xB4,0x41,0x50,0x00,0x0F,0xFF,0xFE,0x16,0xD5,0x09,0x5A,0x08,0x01,0x09,
+0x44,0x17,0x20,0x00,0x46,0x00,0x10,0x00,0xB4,0x41,0xFE,0x17,0xB6,0x01,0xDD,0x9E,
+0x44,0x27,0x20,0x00,0x84,0x3E,0xB4,0x62,0x96,0x06,0xFE,0x5E,0xFE,0x0F,0xB6,0x02,
+0xDD,0x9E,0x44,0x27,0x20,0x04,0x84,0x3E,0xB4,0x62,0x96,0x06,0xFE,0x5E,0xFE,0x0F,
+0xB6,0x02,0xDD,0x9E,0x44,0x27,0x20,0x00,0x96,0x06,0xB4,0x62,0x40,0x10,0x40,0x08,
+0x44,0x0E,0xFF,0xFF,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0xC9,0x06,0x44,0x27,
+0x10,0x00,0xB4,0x22,0xFE,0x0F,0xD5,0x08,0x5A,0x18,0x01,0x08,0x44,0x27,0x10,0x00,
+0xFE,0x03,0xB4,0x22,0xFE,0x0E,0xB6,0x02,0xDD,0x9E,0x5A,0x18,0x01,0x07,0x44,0x27,
+0x10,0x04,0xB4,0x22,0xFE,0x0F,0xD5,0x07,0xC9,0x07,0x44,0x27,0x10,0x04,0xFE,0x03,
+0xB4,0x22,0xFE,0x0E,0xB6,0x02,0xDD,0x9E,0x5A,0x18,0x01,0x07,0x44,0x27,0x10,0x08,
+0xB4,0x22,0xFE,0x0F,0xD5,0x07,0xC9,0x07,0x44,0x27,0x10,0x08,0xFE,0x03,0xB4,0x22,
+0xFE,0x0E,0xB6,0x02,0xDD,0x9E,0x44,0x16,0x00,0x00,0x5A,0x08,0x01,0x06,0xB4,0x01,
+0x58,0x00,0x00,0x01,0xD5,0x04,0xB4,0x41,0x84,0x1E,0xFE,0x16,0xB6,0x01,0xDD,0x9E,
+0x44,0x16,0x00,0x00,0xB4,0x41,0x5A,0x08,0x01,0x06,0x44,0x01,0x00,0x00,0xFE,0x17,
+0xD5,0x04,0x44,0x0E,0xFF,0xFF,0xFE,0x16,0xB6,0x01,0xDD,0x9E,0x44,0x06,0x00,0x00,
+0xB4,0x00,0x92,0x1C,0x96,0x06,0xDD,0x9E,0x44,0x16,0x00,0x30,0x5A,0x08,0x01,0x06,
+0xB4,0x01,0x58,0x00,0x01,0x00,0xD5,0x05,0xB4,0x41,0x44,0x0F,0xFE,0xFF,0xFE,0x16,
+0xB6,0x01,0xDD,0x9E,0x44,0x36,0x38,0x14,0x40,0x00,0x20,0x08,0x40,0x20,0x20,0x09,
+0xB4,0x03,0x96,0x6F,0x92,0x18,0x40,0x00,0x60,0x08,0xFE,0x17,0x44,0x26,0x38,0x08,
+0xB6,0x03,0xB4,0x62,0x40,0x00,0xE0,0x08,0x46,0x1C,0x0F,0xFF,0x50,0x10,0x8F,0xFF,
+0xFE,0x5E,0xFE,0x47,0xB6,0x22,0x44,0x16,0x38,0x04,0x44,0x01,0x00,0x00,0xB4,0x41,
+0xFE,0x17,0xB6,0x01,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x03,0x96,0x06,0xC0,0xFD,
+0x44,0x04,0x80,0x0C,0x84,0x28,0xAE,0x40,0xDD,0x9E,0x44,0x36,0x34,0x14,0x40,0x00,
+0x20,0x08,0x40,0x20,0x20,0x09,0xB4,0x03,0x96,0x6F,0x92,0x18,0x40,0x00,0x60,0x08,
+0xFE,0x17,0x44,0x26,0x34,0x08,0xB6,0x03,0xB4,0x62,0x40,0x00,0xE0,0x08,0x46,0x1C,
+0x0F,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x5E,0xFE,0x47,0xB6,0x22,0x44,0x16,0x34,0x04,
+0x44,0x01,0x00,0x00,0xB4,0x41,0xFE,0x17,0xB6,0x01,0x44,0x14,0x80,0x0C,0xB4,0x01,
+0x92,0x13,0x96,0x06,0xC0,0xFD,0x44,0x04,0x80,0x0E,0x84,0x28,0xAE,0x40,0xDD,0x9E,
+0xFC,0x01,0xB6,0x3F,0x80,0x22,0xF3,0x81,0x49,0xFF,0xFF,0xA6,0xB4,0x1F,0xF1,0x01,
+0x49,0xFF,0xFF,0xCD,0xFC,0x81,0x44,0x16,0x3C,0x04,0xB4,0x01,0x58,0x00,0x00,0x01,
+0xB6,0x01,0xDD,0x9E,0x44,0x26,0x38,0x04,0xB4,0x22,0x44,0x06,0x38,0x04,0x92,0x28,
+0x96,0x46,0xC9,0xFB,0xB4,0x40,0x84,0x3E,0xFE,0x56,0xB6,0x20,0x80,0x20,0xB4,0x01,
+0x92,0x08,0x96,0x06,0xC8,0xFD,0x44,0x26,0x34,0x04,0xB4,0x22,0x44,0x06,0x34,0x04,
+0x92,0x28,0x96,0x46,0xC9,0xFB,0xB4,0x40,0x84,0x3E,0xFE,0x56,0xB6,0x20,0x80,0x20,
+0xB4,0x01,0x92,0x08,0x96,0x06,0xC8,0xFD,0xDD,0x9E,0xFC,0x00,0x46,0x60,0x00,0x83,
+0x83,0x86,0xB8,0x27,0x58,0x00,0x00,0x01,0xB8,0xA7,0xB8,0x27,0x58,0x00,0x01,0x00,
+0xB8,0xA7,0x84,0x01,0x49,0x00,0x08,0x9B,0xB9,0x27,0x84,0x1E,0xFE,0x0E,0xB8,0xA7,
+0xB9,0x27,0x44,0x0F,0xFE,0xFF,0xFE,0x0E,0xB8,0xA7,0xFC,0x80,0xFC,0x40,0x46,0x60,
+0x00,0x83,0x84,0xFE,0x83,0x86,0x04,0x93,0x00,0x14,0x96,0x06,0x40,0x74,0x9C,0x02,
+0xFE,0x3F,0xB8,0x94,0x96,0x5F,0xBF,0x14,0x40,0x00,0xE0,0x08,0x46,0x1F,0x0F,0xFF,
+0x50,0x10,0x8F,0xFF,0xFE,0x7E,0xFE,0x47,0xB9,0x94,0x97,0x2F,0xB9,0x14,0x40,0x02,
+0x44,0x08,0x46,0x4F,0xF8,0x1F,0x50,0x42,0x0F,0xFF,0xFF,0x0E,0xFF,0x07,0xBC,0x94,
+0x97,0x6F,0x40,0x02,0xAC,0x08,0xBD,0x14,0x44,0x1E,0x07,0xFF,0xFF,0x4E,0xFF,0x47,
+0xBD,0x94,0xB8,0x15,0x54,0x21,0x03,0xFF,0x92,0x0A,0x40,0x00,0x28,0x08,0xFE,0x17,
+0xB8,0x95,0x96,0xF7,0x40,0x01,0xC0,0x08,0xB9,0x15,0x46,0x3F,0xF8,0x0F,0x50,0x31,
+0x8F,0xFF,0xFE,0xCE,0xFE,0xC7,0xBB,0x95,0xFC,0xC0,0x46,0x00,0x00,0x83,0x04,0x00,
+0x00,0x16,0x96,0x01,0xDD,0x9E,0xFC,0x00,0x46,0x40,0x00,0x83,0x84,0x61,0x83,0x84,
+0xBE,0x13,0x84,0xBE,0xFE,0x1E,0xFF,0x76,0xFE,0x2F,0xB8,0x93,0xFE,0x5E,0x40,0x30,
+0xA0,0x08,0xB9,0x60,0x44,0x0F,0xFE,0xFF,0xFE,0x46,0xFE,0x5F,0xB9,0xE0,0x96,0xA7,
+0x40,0x01,0x20,0x08,0xBA,0x13,0x44,0x1F,0xE0,0xFF,0xFE,0x8E,0xFE,0x87,0xBA,0x93,
+0xFC,0x80,0x46,0x30,0x00,0x83,0x96,0x8F,0x50,0x41,0x81,0x84,0xB6,0x04,0xA8,0x61,
+0xA0,0x62,0x84,0x1C,0xFE,0x0E,0xFE,0x87,0xA8,0xA2,0xDD,0x9E,0x46,0x20,0x00,0x83,
+0x96,0x27,0x04,0x11,0x00,0x60,0x92,0x25,0x94,0x4D,0xFE,0x47,0x14,0x11,0x00,0x60,
+0xDD,0x9E,0x46,0x20,0x00,0x83,0x84,0x3E,0x04,0x31,0x00,0x12,0x96,0x06,0xFE,0x5E,
+0xFE,0x0F,0x14,0x01,0x00,0x12,0xDD,0x9E,0xB4,0x40,0x46,0x10,0x00,0x80,0x14,0x20,
+0x80,0x48,0xA0,0x01,0x14,0x00,0x80,0x4A,0xDD,0x9E,0xFC,0x40,0x46,0x20,0x00,0x83,
+0x50,0x61,0x00,0xE4,0x83,0x82,0xBB,0x18,0x50,0x71,0x00,0xE8,0x58,0x31,0x81,0x00,
+0xBB,0x98,0xBB,0x18,0x50,0x91,0x00,0xEC,0x92,0x68,0x40,0x31,0xA0,0x08,0x58,0x31,
+0x80,0x88,0xBB,0x98,0x8C,0x02,0x84,0xA0,0x50,0x21,0x00,0xF0,0x46,0x30,0x00,0x83,
+0xD1,0x22,0x22,0x30,0x00,0x00,0x22,0x40,0x7F,0xFF,0x40,0x31,0xC0,0x08,0x88,0x64,
+0xB6,0x66,0x22,0x30,0x00,0x02,0x22,0x40,0x00,0x01,0x40,0x31,0xC0,0x08,0x88,0x64,
+0xB6,0x67,0x22,0x30,0x00,0x04,0x22,0x40,0x00,0x03,0x40,0x31,0xC0,0x08,0x88,0x64,
+0xB6,0x69,0xB4,0x62,0x8C,0xA1,0x92,0x70,0x40,0x31,0xC0,0x08,0xB6,0x62,0x97,0x68,
+0x8C,0x0C,0xD5,0xDD,0x83,0x83,0xB9,0x18,0x44,0x0F,0xFE,0xFF,0xFE,0x0E,0xB8,0x98,
+0xFC,0xC0,0x46,0x20,0x00,0x83,0x96,0x0F,0x04,0x31,0x00,0x12,0x40,0x10,0x40,0x08,
+0x44,0x0C,0xFF,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x12,0xDD,0x9E,0xFC,0x00,
+0x84,0x40,0x44,0x64,0x00,0xC0,0x38,0x30,0x88,0x00,0x38,0x40,0x09,0x01,0x99,0x56,
+0x40,0x31,0xB0,0x08,0x95,0x69,0xFE,0xE7,0x96,0xD9,0x8C,0x41,0xAC,0xE8,0x5A,0x28,
+0x14,0xF4,0xFC,0x80,0x46,0x20,0x00,0x83,0x96,0x06,0x04,0x31,0x00,0x26,0x94,0x41,
+0x84,0x1D,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x26,0xDD,0x9E,0x46,0x20,0x00,0x81,
+0x96,0x06,0xA0,0xD5,0x40,0x10,0x20,0x08,0x44,0x0F,0xFE,0xFF,0xFE,0x1E,0xFE,0x0F,
+0xA8,0x15,0xDD,0x9E,0xC9,0x08,0x46,0x20,0x00,0x91,0x84,0x3E,0xB4,0x62,0x96,0x06,
+0xFE,0x5E,0xD5,0x0A,0x5A,0x18,0x01,0x0B,0x46,0x20,0x00,0x91,0x96,0x06,0xB4,0x62,
+0x94,0x41,0x84,0x1D,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0xFC,0x00,0x44,0x00,
+0x00,0xC8,0x49,0x00,0x07,0x6C,0x44,0x14,0x50,0x0C,0x46,0x60,0x00,0x81,0xB4,0x01,
+0x58,0x00,0x00,0x04,0xB6,0x01,0xFA,0x18,0x49,0x00,0x07,0x6A,0x83,0x86,0xB8,0x1C,
+0x58,0x00,0x01,0x00,0xB8,0x9C,0x84,0x01,0x49,0x00,0x07,0x62,0xB9,0x1C,0x44,0x01,
+0x00,0x00,0xFE,0x0F,0xB8,0x9C,0x44,0x00,0x01,0xF4,0x49,0x00,0x07,0x50,0xB9,0x1C,
+0x46,0x00,0x10,0x00,0xFE,0x0F,0xB8,0x9C,0x44,0x00,0x01,0xF4,0x49,0x00,0x07,0x47,
+0xFC,0x80,0x00,0x00,0x46,0x10,0x00,0x80,0x50,0x50,0x80,0x80,0x50,0x10,0x80,0xB0,
+0xA2,0x81,0xAA,0xA9,0xD9,0xFE,0xDD,0x9E,0x46,0x10,0x00,0x80,0x50,0x50,0x80,0xB0,
+0x50,0x10,0x80,0xC4,0xA2,0x81,0xAA,0xA9,0xD9,0xFE,0xDD,0x9E,0xB4,0x40,0x46,0x10,
+0x00,0x80,0x14,0x20,0x80,0x47,0xA0,0x01,0x14,0x00,0x80,0x49,0xDD,0x9E,0x46,0x10,
+0x00,0x80,0x50,0x50,0x81,0x40,0x50,0x30,0x81,0x4C,0xA6,0x41,0xA6,0x80,0x94,0x4C,
+0xFE,0x57,0x96,0x48,0xAE,0x68,0x00,0x10,0x00,0x0D,0x00,0x20,0x00,0x0C,0x94,0x4C,
+0xFE,0x57,0x96,0x48,0x10,0x12,0x80,0x0C,0x8C,0xA1,0x8C,0x02,0xDB,0xEF,0xDD,0x9E,
+0x46,0x10,0x00,0x80,0x50,0x50,0x80,0x40,0x50,0x30,0x80,0x46,0xA6,0x41,0xA6,0x80,
+0x94,0x4C,0xFE,0x57,0x96,0x48,0xAE,0x68,0x00,0x10,0x00,0x0D,0x00,0x20,0x00,0x0C,
+0x94,0x4C,0xFE,0x57,0x96,0x48,0x10,0x12,0x80,0x0C,0x8C,0xA1,0x8C,0x02,0xDB,0xEF,
+0xDD,0x9E,0xA6,0x81,0x80,0xA0,0x94,0x94,0x08,0x12,0x80,0x05,0xFE,0x8F,0x46,0x10,
+0x00,0x80,0x96,0x90,0x10,0x20,0x80,0x48,0xA6,0xA9,0xA6,0xC5,0x94,0x94,0xFE,0x9F,
+0x96,0x90,0x10,0x20,0x80,0x54,0xA6,0x83,0xA6,0xC2,0x94,0x94,0xFE,0x9F,0x96,0x90,
+0x10,0x20,0x80,0x49,0xA6,0xAB,0xA6,0xEA,0x94,0x94,0xFE,0x9F,0x96,0x90,0x10,0x20,
+0x80,0x55,0xA6,0x84,0x84,0x0F,0xFE,0x86,0x40,0x31,0x40,0x08,0x46,0x4F,0xFF,0x0F,
+0x04,0x20,0x80,0x12,0x50,0x42,0x0F,0xFF,0xFE,0xA6,0xFE,0x9F,0x14,0x20,0x80,0x12,
+0xA6,0xAC,0xFE,0x16,0x40,0x20,0x40,0x08,0x04,0x00,0x80,0x15,0xFE,0x26,0xFE,0x17,
+0x14,0x00,0x80,0x15,0xDD,0x9E,0x46,0x10,0x00,0x80,0x50,0x50,0x80,0x58,0x50,0x30,
+0x80,0x5E,0xA6,0x41,0xA6,0x80,0x94,0x4C,0xFE,0x57,0x96,0x48,0xAE,0x68,0x00,0x10,
+0x00,0x0D,0x00,0x20,0x00,0x0C,0x94,0x4C,0xFE,0x57,0x96,0x48,0x10,0x12,0x80,0x0C,
+0x8C,0xA1,0x8C,0x02,0xDB,0xEF,0xDD,0x9E,0xA6,0x81,0x80,0xA0,0x94,0x94,0x08,0x12,
+0x80,0x05,0xFE,0x8F,0x46,0x10,0x00,0x80,0x96,0x90,0x10,0x20,0x80,0x60,0xA6,0xA9,
+0xA6,0xC5,0x94,0x94,0xFE,0x9F,0x96,0x90,0x10,0x20,0x80,0x6C,0xA6,0x83,0xA6,0xC2,
+0x94,0x94,0xFE,0x9F,0x96,0x90,0x10,0x20,0x80,0x61,0xA6,0xAB,0xA6,0xEA,0x94,0x94,
+0xFE,0x9F,0x96,0x90,0x10,0x20,0x80,0x6D,0xA6,0x84,0x84,0x0F,0xFE,0x86,0x40,0x31,
+0x40,0x08,0x46,0x4F,0xFF,0x0F,0x04,0x20,0x80,0x18,0x50,0x42,0x0F,0xFF,0xFE,0xA6,
+0xFE,0x9F,0x14,0x20,0x80,0x18,0xA6,0xAC,0xFE,0x16,0x40,0x20,0x40,0x08,0x04,0x00,
+0x80,0x1B,0xFE,0x26,0xFE,0x17,0x14,0x00,0x80,0x1B,0xDD,0x9E,0xE6,0x06,0xE8,0x57,
+0xFC,0x20,0x46,0x70,0x00,0x81,0x44,0xF0,0x10,0x74,0x38,0x07,0x80,0x00,0x40,0xF0,
+0x3C,0x00,0xDD,0x0F,0x06,0x16,0x34,0x62,0x76,0x44,0x04,0x03,0x80,0x20,0x54,0x10,
+0x87,0xFF,0x92,0x0B,0x40,0x00,0x2C,0x08,0xD5,0x0C,0x54,0x10,0x87,0xFF,0x40,0x00,
+0xC0,0x08,0x04,0x23,0x80,0x20,0x46,0x1F,0x80,0x0F,0x50,0x10,0x8F,0xFF,0xFE,0x56,
+0xFE,0x47,0x14,0x13,0x80,0x20,0xFC,0xA0,0x04,0x03,0x80,0x21,0x54,0x10,0x87,0xFF,
+0x92,0x0B,0x40,0x00,0x2C,0x08,0xD5,0x0C,0x54,0x10,0x87,0xFF,0x40,0x00,0xC0,0x08,
+0x04,0x23,0x80,0x21,0x46,0x1F,0x80,0x0F,0x50,0x10,0x8F,0xFF,0xFE,0x56,0xFE,0x47,
+0x14,0x13,0x80,0x21,0xFC,0xA0,0x83,0x87,0xB8,0x22,0x54,0x10,0x87,0xFF,0x92,0x0B,
+0x40,0x00,0x2C,0x08,0xFE,0x47,0xB9,0xA2,0xFC,0xA0,0x80,0xC1,0x49,0xFF,0xFD,0x54,
+0x54,0x13,0x03,0xFF,0x95,0x8E,0x04,0x13,0x83,0x98,0x44,0x0F,0x00,0x3F,0xFE,0x46,
+0xFE,0x77,0x14,0x13,0x83,0x98,0x49,0xFF,0xFD,0x40,0xFC,0xA0,0xDD,0x9E,0x46,0x20,
+0x00,0x83,0x96,0x06,0x40,0x10,0x60,0x08,0x04,0x31,0x00,0xC0,0x46,0x0F,0xEF,0xFF,
+0x50,0x00,0x0F,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0xC0,0xDD,0x9E,0x46,0x20,
+0x00,0x83,0x96,0x06,0x40,0x10,0x64,0x08,0x04,0x31,0x00,0xC0,0x46,0x0F,0xDF,0xFF,
+0x50,0x00,0x0F,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0xC0,0xDD,0x9E,0x46,0x20,
+0x00,0x83,0x96,0x0F,0x04,0x31,0x00,0x0F,0x40,0x10,0x20,0x08,0x44,0x0F,0xFC,0xFF,
+0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x0F,0xDD,0x9E,0x46,0x20,0x00,0x83,0x84,0x3E,
+0x04,0x31,0x00,0x0F,0x96,0x06,0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x0F,0xDD,0x9E,
+0x46,0x20,0x00,0x83,0x96,0x06,0x04,0x31,0x00,0x0F,0x40,0x10,0x28,0x08,0x44,0x0F,
+0xFB,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x0F,0xDD,0x9E,0x46,0x10,0x00,0x83,
+0x44,0x01,0x00,0x00,0x04,0x20,0x80,0x0E,0xFE,0x17,0x14,0x00,0x80,0x0E,0xDD,0x9E,
+0x46,0x20,0x00,0x83,0x46,0x3F,0x7F,0xFF,0x50,0x51,0x00,0x38,0xB4,0x85,0x50,0x31,
+0x8F,0xFF,0xFE,0xE6,0xB6,0x65,0xB4,0x85,0x46,0x3E,0xFF,0xFF,0x50,0x31,0x8F,0xFF,
+0xFE,0xE6,0xB6,0x65,0x5A,0x08,0x01,0x04,0x84,0x1F,0xD5,0x02,0x84,0x00,0x14,0x01,
+0x00,0x0B,0x14,0x01,0x00,0x0C,0x04,0x01,0x00,0x33,0x5A,0x18,0x01,0x0B,0x58,0x00,
+0x0F,0xFF,0x14,0x01,0x00,0x33,0x04,0x01,0x00,0x34,0x58,0x00,0x0F,0xFF,0xD5,0x0B,
+0x92,0x0C,0x40,0x00,0x30,0x08,0x14,0x01,0x00,0x33,0x04,0x01,0x00,0x34,0x92,0x0C,
+0x40,0x00,0x30,0x08,0x14,0x01,0x00,0x34,0xDD,0x9E,0x46,0x10,0x00,0x83,0x96,0x06,
+0x50,0x50,0x80,0x38,0xB4,0x85,0x44,0x2F,0xFE,0xFF,0x40,0x30,0x20,0x08,0xFE,0xA6,
+0xFE,0x9F,0xB6,0x45,0xB4,0x65,0x44,0x2F,0xFD,0xFF,0x40,0x00,0x24,0x08,0xFE,0x9E,
+0xFE,0x17,0xB6,0x05,0xDD,0x9E,0x46,0x20,0x00,0x81,0x50,0x51,0x00,0x90,0x50,0x31,
+0x00,0x9A,0x08,0x20,0x00,0x01,0x88,0x41,0x96,0x90,0x18,0x22,0x80,0x01,0xDB,0xFA,
+0xDD,0x9E,0xE6,0x25,0xE8,0x33,0x96,0x1F,0x46,0x20,0x00,0x81,0x44,0xF0,0x12,0x7C,
+0x38,0x17,0x84,0x00,0x40,0xF0,0xBC,0x00,0x4A,0x00,0x3C,0x00,0x06,0x0E,0x1A,0x28,
+0x36,0x00,0x04,0x31,0x00,0x23,0x84,0x30,0xD5,0x1D,0x94,0x04,0x04,0x31,0x00,0x23,
+0x44,0x1F,0xFF,0x0F,0xD5,0x17,0x40,0x00,0x20,0x08,0x04,0x31,0x00,0x23,0x44,0x1F,
+0xF0,0xFF,0xD5,0x10,0x40,0x00,0x30,0x08,0x04,0x31,0x00,0x23,0x44,0x1F,0x0F,0xFF,
+0xD5,0x09,0x46,0x1F,0xFF,0x0F,0x40,0x00,0x40,0x08,0x04,0x31,0x00,0x23,0x50,0x10,
+0x8F,0xFF,0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x23,0xDD,0x9E,0x84,0x00,0xDD,0x9E,
+0x46,0x20,0x00,0x81,0x54,0x00,0x03,0xFF,0x40,0x10,0x40,0x08,0x04,0x31,0x00,0x49,
+0x46,0x0F,0xC0,0x0F,0x50,0x00,0x0F,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x49,
+0xDD,0x9E,0xE6,0x06,0xE8,0x52,0xFC,0x20,0x46,0x70,0x00,0x81,0x54,0x60,0x83,0xFF,
+0x44,0xF0,0x13,0x10,0x38,0x07,0x80,0x00,0x40,0xF0,0x3C,0x00,0x4A,0x00,0x3C,0x00,
+0x06,0x2E,0x46,0x56,0x66,0x16,0x83,0x87,0xB9,0x30,0x92,0x2A,0x40,0x10,0xA8,0x08,
+0xFF,0x8F,0xBE,0xB0,0xFC,0xA0,0x83,0x87,0xB8,0x31,0x46,0x2F,0xC0,0x0F,0x50,0x21,
+0x0F,0xFF,0x40,0x63,0x40,0x08,0xFE,0x16,0xFE,0x37,0xB8,0xB1,0xFC,0xA0,0x83,0x87,
+0xB8,0x30,0x46,0x2F,0xC0,0x0F,0x50,0x21,0x0F,0xFF,0x40,0x63,0x40,0x08,0xFE,0x16,
+0xFE,0x37,0xB8,0xB0,0xFC,0xA0,0x83,0x87,0xB9,0x31,0x92,0x2A,0x40,0x10,0xA8,0x08,
+0xFF,0x8F,0xBE,0xB1,0xFC,0xA0,0x83,0x87,0xB9,0x32,0x92,0x2A,0x40,0x10,0xA8,0x08,
+0xFF,0x8F,0xBE,0xB2,0xFC,0xA0,0x49,0xFF,0xFC,0x0F,0x40,0x13,0x40,0x08,0x04,0x03,
+0x83,0x98,0x46,0x6F,0xC0,0x0F,0x50,0x63,0x0F,0xFF,0xFF,0x86,0xFF,0x8F,0x14,0x63,
+0x83,0x98,0x49,0xFF,0xFB,0xFA,0xFC,0xA0,0xDD,0x9E,0x54,0x20,0x80,0x03,0xE6,0x08,
+0x54,0x10,0x80,0x0C,0x90,0x22,0x4E,0xF2,0x00,0x93,0x96,0x4F,0x46,0x30,0x00,0x81,
+0x96,0x8F,0x44,0xF0,0x13,0xC0,0x38,0x07,0x80,0x00,0x40,0xF0,0x3C,0x00,0xDD,0x0F,
+0x08,0x24,0x40,0x5E,0x7C,0x9C,0xBC,0xE8,0x50,0x51,0x80,0x9C,0xB4,0x85,0x84,0x1C,
+0xFE,0x26,0xFE,0x47,0xB6,0x25,0xB4,0x25,0x44,0x0C,0xFF,0xFF,0x40,0x21,0x40,0x08,
+0xFE,0x0E,0xD5,0x72,0x50,0x51,0x80,0x9C,0xB4,0x85,0x84,0x13,0xFE,0x26,0x94,0x4A,
+0xFE,0x47,0xB6,0x25,0x40,0x21,0x48,0x08,0xB4,0x05,0x46,0x1F,0xFF,0x3F,0xD5,0x4E,
+0x50,0x51,0x80,0x9C,0xB4,0x85,0x44,0x0F,0xFF,0xCF,0xFE,0x26,0x94,0x4C,0xFE,0x47,
+0xB6,0x25,0x40,0x21,0x50,0x08,0xB4,0x05,0x46,0x1F,0xFC,0xFF,0xD5,0x3F,0x50,0x51,
+0x80,0x9C,0xB4,0x85,0x44,0x0F,0xFF,0x3F,0xFE,0x26,0x94,0x4E,0xFE,0x47,0xB6,0x25,
+0x40,0x21,0x58,0x08,0xB4,0x05,0x46,0x1F,0xF3,0xFF,0xD5,0x30,0x50,0x51,0x80,0x9C,
+0xB4,0x85,0x44,0x0F,0xFC,0xFF,0xFE,0x26,0x40,0x10,0xA0,0x08,0xFE,0x47,0xB6,0x25,
+0x40,0x21,0x60,0x08,0xB4,0x05,0x46,0x1F,0xCF,0xFF,0xD5,0x20,0x50,0x51,0x80,0x9C,
+0xB4,0x85,0x44,0x0F,0xF3,0xFF,0xFE,0x26,0x40,0x10,0xA8,0x08,0xFE,0x47,0xB6,0x25,
+0x40,0x21,0x68,0x08,0xB4,0x05,0x46,0x1F,0x3F,0xFF,0xD5,0x10,0x50,0x51,0x80,0x9C,
+0xB4,0x85,0x44,0x0F,0xCF,0xFF,0xFE,0x26,0x40,0x10,0xB0,0x08,0xFE,0x47,0xB6,0x25,
+0x40,0x21,0x70,0x08,0xB4,0x05,0x46,0x1C,0xFF,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x0E,
+0xFE,0x17,0x14,0x01,0x80,0x27,0xDD,0x9E,0x50,0x51,0x80,0x9C,0xB4,0x85,0x44,0x0F,
+0x3F,0xFF,0xFE,0x26,0x40,0x10,0xB8,0x08,0xFE,0x47,0xB6,0x25,0xB4,0x05,0x40,0x21,
+0x78,0x08,0x94,0x02,0x92,0x02,0xFE,0x87,0x14,0x21,0x80,0x27,0xDD,0x9E,0xDD,0x9E,
+0xFC,0x40,0x80,0xE0,0x44,0x04,0x34,0x38,0x5A,0x78,0x01,0x2B,0x80,0xC1,0xB4,0x20,
+0x44,0x9F,0xE0,0xFF,0x58,0x10,0x80,0x02,0xB6,0x20,0x80,0x27,0x49,0xFF,0xFB,0x17,
+0x44,0x04,0x34,0x50,0x97,0xA7,0xB4,0x20,0x40,0x63,0x20,0x08,0x40,0x10,0xA4,0x02,
+0xFE,0x77,0xB6,0x20,0x80,0x27,0x49,0xFF,0xFB,0x0A,0x44,0x04,0x38,0x3C,0xB4,0x20,
+0x58,0x10,0x80,0x02,0xB6,0x20,0x80,0x27,0x49,0xFF,0xFA,0xD6,0x44,0x04,0x38,0x58,
+0xB4,0x20,0x40,0x10,0xA4,0x02,0xFF,0x8F,0xB6,0xC0,0x80,0x27,0xD5,0x0E,0xB4,0x20,
+0x84,0xDD,0xFE,0x76,0xB6,0x20,0x84,0x21,0x49,0xFF,0xFA,0xF1,0x44,0x04,0x38,0x3C,
+0xB4,0x20,0xFF,0x8E,0xB6,0xC0,0x84,0x21,0x49,0xFF,0xFA,0xBE,0xFC,0xC0,0x92,0x00,
+0xC8,0x04,0x44,0x07,0x20,0x0C,0xD5,0x03,0x44,0x07,0x20,0x10,0xB4,0x00,0x40,0x00,
+0x30,0x08,0x92,0x0C,0xDD,0x9E,0xFC,0x00,0x80,0xC1,0x49,0xFF,0xFF,0xF3,0x84,0x40,
+0x80,0x22,0xE2,0x46,0xE8,0x05,0x38,0x10,0x0A,0x0A,0x8C,0x41,0xD5,0xFB,0xFC,0x80,
+0x44,0x27,0x20,0x1C,0x54,0x00,0x0F,0xFF,0xB4,0x22,0x92,0x2C,0x40,0x10,0xB0,0x08,
+0xFE,0x47,0xB6,0x22,0xDD,0x9E,0x44,0x27,0x20,0x34,0x54,0x00,0x0F,0xFF,0xB4,0x22,
+0x92,0x2C,0x40,0x10,0xB0,0x08,0xFE,0x47,0xB6,0x22,0xDD,0x9E,0x44,0x27,0x20,0x38,
+0x54,0x00,0x0F,0xFF,0xB4,0x22,0x92,0x2C,0x40,0x10,0xB0,0x08,0xFE,0x47,0xB6,0x22,
+0xDD,0x9E,0x44,0x27,0x20,0x54,0x84,0x30,0xB4,0x62,0x96,0x1F,0xFE,0x5E,0xFE,0x0F,
+0xB6,0x02,0xDD,0x9E,0x44,0x27,0x20,0x54,0x96,0x1F,0xB4,0x62,0x40,0x10,0x20,0x08,
+0x44,0x0F,0xF0,0xFF,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x44,0x27,0x20,0x58,
+0x96,0x1F,0x40,0x10,0x40,0x08,0xB4,0x62,0x46,0x0F,0xFF,0x0F,0x50,0x00,0x0F,0xFF,
+0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x44,0x04,0x00,0x9C,0xA6,0x00,0xDD,0x9E,
+0x46,0x10,0x00,0x81,0x04,0x00,0x80,0x6E,0x58,0x00,0x00,0x01,0x14,0x00,0x80,0x6E,
+0xDD,0x9E,0xFC,0x00,0x44,0x04,0x2C,0x1C,0x84,0x41,0xB4,0x20,0x80,0x62,0x58,0x10,
+0x81,0x00,0xB6,0x20,0xB4,0x20,0x58,0x10,0x80,0x80,0xB6,0x20,0x44,0x04,0x28,0x1C,
+0x44,0x14,0x24,0x1C,0x49,0xFF,0xFA,0x96,0xFC,0x80,0x46,0x20,0x00,0x80,0x84,0x30,
+0x50,0x41,0x01,0xD0,0xB4,0x64,0x96,0x1F,0xFE,0x5E,0xFE,0x47,0xB6,0x24,0xB4,0x64,
+0x44,0x1F,0xFF,0x0F,0x94,0x04,0xFE,0x5E,0xFE,0x0F,0xB6,0x04,0xDD,0x9E,0x00,0x00,
+0x44,0x24,0x80,0x88,0x84,0x3E,0xB4,0x62,0x96,0x06,0xFE,0x5E,0xFE,0x47,0xB6,0x22,
+0xB4,0x62,0x84,0x3D,0x94,0x01,0xFE,0x5E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0xFC,0x00,
+0x44,0x64,0x00,0x18,0x84,0x41,0xAE,0xB0,0xA6,0x72,0x84,0x1E,0xFE,0x46,0xAE,0x72,
+0xA6,0x72,0x44,0x30,0x98,0x81,0x58,0x10,0x80,0x02,0xAE,0x72,0xA6,0x72,0x58,0x10,
+0x80,0x04,0xAE,0x72,0xA6,0x73,0x58,0x10,0x80,0x02,0xAE,0x73,0xA6,0x73,0x58,0x10,
+0x80,0x04,0xAE,0x73,0xA6,0x73,0x58,0x10,0x80,0x08,0xAE,0x73,0xA6,0x73,0x58,0x10,
+0x80,0x10,0xAE,0x73,0x44,0x14,0x00,0x10,0xB6,0x61,0xAE,0xB1,0xA6,0x72,0x58,0x10,
+0x80,0x10,0xAE,0x72,0xA6,0x72,0x54,0x10,0x80,0xDF,0xAE,0x72,0xA6,0xB2,0x44,0x1F,
+0xFF,0x80,0xFE,0x57,0xAE,0x72,0xA6,0x73,0xFE,0x0E,0xAE,0x33,0xA6,0x33,0x58,0x00,
+0x00,0x20,0xAE,0x33,0xA6,0x33,0x58,0x00,0x00,0x40,0xAE,0x33,0x49,0x00,0x03,0x0B,
+0xE6,0x03,0x44,0x14,0x50,0x10,0xA6,0x32,0xE9,0x10,0x54,0x00,0x00,0xFB,0xAE,0x32,
+0xB4,0x01,0x92,0x08,0x40,0x00,0x20,0x08,0xB6,0x01,0x44,0x14,0x70,0x00,0x44,0x0E,
+0xFF,0xFF,0xB4,0x41,0xFE,0x16,0xD5,0x11,0x58,0x00,0x00,0x04,0xAE,0x32,0xB4,0x01,
+0x92,0x08,0x40,0x00,0x20,0x08,0x58,0x00,0x00,0x98,0xB6,0x01,0x44,0x14,0x70,0x00,
+0x44,0x01,0x00,0x00,0xB4,0x41,0xFE,0x17,0xB6,0x01,0xFC,0x80,0x44,0x37,0x20,0x44,
+0x46,0x0F,0xC0,0x0F,0xB4,0x23,0x50,0x00,0x0F,0xFF,0xFE,0x46,0x46,0x20,0x24,0x00,
+0xFE,0x57,0xB6,0x23,0x44,0x37,0x20,0x48,0x44,0x23,0x00,0x00,0xB4,0x23,0xFE,0x46,
+0xFE,0x57,0x44,0x27,0x20,0x4C,0xB6,0x23,0xB4,0x22,0x46,0x30,0x0C,0x00,0x92,0x2C,
+0x40,0x10,0xB0,0x08,0x58,0x10,0x82,0x52,0xB6,0x22,0xB4,0x22,0xFE,0x46,0xFE,0x5F,
+0xB6,0x22,0x44,0x27,0x20,0x50,0x46,0x30,0x00,0x90,0xB4,0x22,0x92,0x2C,0x40,0x10,
+0xB0,0x08,0x58,0x10,0x82,0x40,0xB6,0x22,0xB4,0x22,0xFE,0x0E,0xB6,0x02,0x44,0x27,
+0x20,0x04,0x46,0x0F,0xFF,0x0F,0xB4,0x22,0x50,0x00,0x0F,0xFF,0xFE,0x46,0xFE,0x5F,
+0xB6,0x22,0xB4,0x62,0x46,0x1F,0xF0,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x5E,0x46,0x30,
+0x03,0x00,0xFE,0x5F,0xB6,0x22,0x46,0x20,0x00,0x80,0x44,0x1F,0xF0,0xFF,0x50,0x41,
+0x01,0xC0,0xB4,0x64,0xFE,0x5E,0x58,0x10,0x88,0x00,0xB6,0x24,0xB4,0x24,0xFE,0x0E,
+0x44,0x12,0x00,0x00,0xFE,0x0F,0xB6,0x04,0xDD,0x9E,0x46,0x20,0x00,0x91,0x40,0x00,
+0x40,0x08,0xA0,0x56,0x96,0x49,0xFE,0x0F,0xA8,0x16,0xDD,0x9E,0xE6,0x05,0xE8,0x31,
+0x46,0x10,0x00,0x91,0x44,0xF0,0x18,0x34,0x38,0x07,0x80,0x00,0x40,0xF0,0x3C,0x00,
+0x4A,0x00,0x3C,0x00,0x06,0x14,0x22,0x30,0x3E,0x00,0xA0,0x0A,0x92,0x10,0x40,0x00,
+0x40,0x08,0x58,0x00,0x00,0x0A,0xD5,0x1C,0xA0,0x0A,0x92,0x10,0x40,0x00,0x40,0x08,
+0x58,0x00,0x00,0x23,0xD5,0x15,0xA0,0x0A,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,
+0x00,0x46,0xD5,0x0E,0xA0,0x0A,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,0x00,0x96,
+0xD5,0x07,0xA0,0x0A,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,0x01,0xF4,0xA8,0x0A,
+0xDD,0x9E,0x46,0x2F,0xFC,0x0F,0x46,0x10,0x00,0x91,0x50,0x21,0x0F,0xFF,0x5A,0x08,
+0x01,0x08,0x04,0x00,0x80,0x0E,0xFE,0x86,0x44,0x02,0x00,0x00,0xD5,0x06,0x04,0x00,
+0x80,0x0E,0xFE,0x86,0x44,0x01,0x00,0x00,0xFE,0x87,0x14,0x20,0x80,0x0E,0xA0,0x09,
+0x92,0x06,0x94,0x06,0x58,0x00,0x00,0x01,0xA8,0x09,0xDD,0x9E,0xFC,0x00,0x46,0x60,
+0x00,0x91,0x84,0x01,0xA8,0x31,0x44,0x00,0x01,0xF4,0xA8,0x32,0x83,0x86,0xB9,0x0A,
+0x46,0x0F,0xC0,0x0F,0x50,0x00,0x0C,0x00,0xFE,0x46,0x58,0x10,0x80,0x01,0xB9,0x8A,
+0xB9,0x0B,0xFE,0x0E,0x58,0x00,0x02,0x40,0xB8,0x8B,0xB9,0x0C,0x44,0x0F,0xC0,0xC0,
+0xFE,0x0E,0x58,0x00,0x20,0x01,0xB8,0x8C,0xB9,0x0D,0x46,0x0E,0x0E,0x0E,0x50,0x00,
+0x00,0xE0,0xFE,0x0E,0x46,0x10,0x60,0x11,0x50,0x10,0x82,0x01,0xFE,0x0F,0xB8,0x8D,
+0xB9,0x0E,0x46,0x0F,0xFC,0x0C,0x50,0x00,0x00,0xF3,0xFE,0x0E,0x44,0x11,0x01,0x0C,
+0xFE,0x0F,0xB8,0x8E,0x49,0xFF,0xFE,0x72,0xE6,0x03,0xA0,0x36,0x92,0x10,0x40,0x00,
+0x40,0x08,0xE9,0x1F,0x58,0x00,0x00,0x28,0xA8,0x36,0x83,0x86,0xB8,0x08,0x92,0x10,
+0x40,0x00,0x40,0x08,0x58,0x00,0x00,0x28,0xB8,0x88,0xA0,0x35,0x92,0x10,0x40,0x00,
+0x40,0x08,0x58,0x00,0x00,0x28,0xA8,0x35,0xA0,0x37,0x92,0x10,0x40,0x00,0x40,0x08,
+0x58,0x00,0x00,0x28,0xA8,0x37,0xA0,0x76,0x46,0x00,0x02,0x80,0x96,0x49,0xD5,0x1E,
+0x58,0x00,0x46,0x00,0xA8,0x36,0x83,0x86,0xB8,0x08,0x92,0x10,0x40,0x00,0x40,0x08,
+0x58,0x00,0x46,0x00,0xB8,0x88,0xA0,0x35,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,
+0x46,0x00,0xA8,0x35,0xA0,0x37,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,0x46,0x00,
+0xA8,0x37,0xA0,0x76,0x46,0x04,0x60,0x00,0x96,0x49,0xFE,0x47,0xA8,0x76,0x83,0x86,
+0xB9,0x08,0x96,0x49,0xFE,0x47,0xB9,0x88,0xA0,0x75,0x96,0x49,0xFE,0x47,0xA8,0x75,
+0xA0,0x77,0x96,0x49,0xFE,0x0F,0xA8,0x37,0x46,0x00,0x00,0x91,0x83,0x80,0xB9,0x12,
+0x58,0x10,0xBF,0x3F,0xB9,0x92,0xBA,0x13,0x44,0x1E,0xE0,0x80,0xFE,0x56,0x44,0x21,
+0x00,0x48,0xFE,0x57,0xB9,0x93,0xFC,0x80,0x46,0x00,0x00,0x91,0x50,0x30,0x00,0x44,
+0xB4,0x23,0x58,0x10,0x80,0x01,0xB6,0x23,0xB4,0x43,0x84,0x3E,0xFE,0x56,0xB6,0x23,
+0xDD,0x9E,0x92,0x00,0x44,0x17,0x30,0x10,0xB4,0x01,0x96,0x06,0xC0,0xFE,0x44,0x17,
+0x30,0x10,0xB4,0x01,0x92,0x03,0x96,0x06,0x5A,0x00,0x01,0xFD,0xDD,0x9E,0x84,0xA0,
+0xD0,0x05,0x40,0x00,0x00,0x09,0x8C,0xA1,0xD5,0xFC,0xDD,0x9E,0xC9,0x08,0x44,0x24,
+0x00,0x0C,0x96,0x06,0xA6,0x50,0x54,0x10,0x80,0xFE,0xD5,0x0A,0x5A,0x18,0x01,0x0B,
+0x44,0x24,0x00,0x0C,0x96,0x06,0xA6,0x50,0x94,0x01,0x54,0x10,0x80,0xFD,0xFE,0x0F,
+0xAE,0x10,0xDD,0x9E,0xC8,0x04,0x44,0x05,0x00,0x00,0xD5,0x03,0x44,0x05,0x00,0x10,
+0xA6,0x02,0xDD,0x9E,0xC9,0x04,0x44,0x15,0x00,0x00,0xD5,0x05,0x5A,0x18,0x01,0x05,
+0x44,0x15,0x00,0x10,0xAE,0x0A,0xDD,0x9E,0xC9,0x0A,0x44,0x24,0x80,0x80,0x96,0x06,
+0x40,0x10,0x60,0x08,0xB4,0x62,0x46,0x0F,0xEF,0xFF,0xD5,0x0B,0x5A,0x18,0x01,0x0F,
+0x44,0x24,0x80,0x80,0x96,0x06,0x40,0x10,0x64,0x08,0xB4,0x62,0x46,0x0F,0xDF,0xFF,
+0x50,0x00,0x0F,0xFF,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0xCA,0x0C,0x44,0x40,
+0xFA,0x00,0x42,0x20,0x10,0x24,0x40,0x11,0x04,0x0E,0x44,0x20,0x00,0x64,0x40,0x10,
+0x88,0x36,0xD5,0x0E,0x3C,0x2D,0xFB,0xC6,0xFE,0x84,0x44,0x00,0x03,0xE8,0x40,0x21,
+0x00,0x57,0x40,0x11,0x04,0x0D,0x44,0x20,0x00,0x64,0x40,0x10,0x88,0x37,0x96,0x49,
+0xCB,0x04,0x44,0x05,0x00,0x04,0xD5,0x05,0x5A,0x38,0x01,0x05,0x44,0x05,0x00,0x14,
+0xAC,0x40,0xDD,0x9E,0xC8,0x08,0x44,0x14,0x80,0x03,0x84,0x01,0xAE,0x08,0x44,0x15,
+0x00,0x08,0xD5,0x09,0x5A,0x08,0x01,0x09,0x44,0x14,0x80,0x03,0x84,0x42,0xAE,0x88,
+0x44,0x15,0x00,0x18,0xAE,0x09,0xDD,0x9E,0xC8,0x08,0x44,0x04,0x80,0x03,0x84,0x21,
+0xAE,0x40,0x44,0x15,0x00,0x08,0xD5,0x09,0x5A,0x08,0x01,0x0C,0x44,0x04,0x80,0x03,
+0x84,0x22,0xAE,0x40,0x44,0x15,0x00,0x18,0xA6,0x08,0x58,0x00,0x00,0x02,0xAE,0x08,
+0xDD,0x9E,0xC8,0x08,0x44,0x04,0x80,0x03,0x84,0x21,0xAE,0x40,0x44,0x15,0x00,0x08,
+0xD5,0x09,0x5A,0x08,0x01,0x0C,0x44,0x04,0x80,0x03,0x84,0x22,0xAE,0x40,0x44,0x15,
+0x00,0x18,0xA6,0x08,0x54,0x00,0x00,0xFD,0xAE,0x08,0xDD,0x9E,0xC9,0x04,0x44,0x15,
+0x00,0x00,0xD5,0x05,0x5A,0x18,0x01,0x05,0x44,0x15,0x00,0x10,0xAE,0x08,0xDD,0x9E,
+0x84,0x21,0xC0,0x04,0x5A,0x08,0x01,0x06,0x84,0x22,0x44,0x04,0x80,0x03,0xAE,0x40,
+0xDD,0x9E,0x44,0x04,0x80,0x00,0xA6,0x03,0x92,0x01,0x96,0x06,0xC0,0x1A,0xFC,0x00,
+0x44,0x04,0x80,0x03,0x84,0x22,0xAE,0x40,0x49,0x00,0x10,0x4E,0xC8,0x11,0x3C,0x0D,
+0xFB,0x8C,0xC0,0x0E,0x49,0x00,0x0E,0x89,0x80,0xC0,0xC8,0x0A,0x49,0x00,0x01,0x7C,
+0x49,0x00,0x11,0x84,0xC0,0x05,0x80,0x06,0x80,0x26,0x49,0x00,0x00,0xE1,0xFC,0x80,
+0xDD,0x9E,0x46,0x20,0x00,0x81,0x84,0x3E,0xA0,0xD5,0x96,0x06,0xFE,0x5E,0xFE,0x0F,
+0xA8,0x15,0xDD,0x9E,0x46,0x00,0x00,0x81,0xA0,0x05,0x96,0x06,0xDD,0x9E,0x44,0x24,
+0x50,0x14,0x84,0x3E,0xB4,0x62,0x96,0x06,0xFE,0x5E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,
+0x44,0x25,0x10,0x04,0xB4,0x22,0x92,0x30,0x40,0x10,0xC0,0x08,0xFE,0x0F,0xB6,0x02,
+0xDD,0x9E,0x44,0x15,0x10,0x0C,0xB4,0x01,0x58,0x00,0x01,0x00,0xB6,0x01,0xDD,0x9E,
+0x44,0x15,0x10,0x0C,0xB4,0x01,0x92,0x08,0x40,0x00,0x20,0x08,0x58,0x00,0x00,0x01,
+0xB6,0x01,0x44,0x15,0x10,0x18,0xB4,0x01,0x96,0x00,0x5A,0x00,0x5A,0xFE,0xDD,0x9E,
+0xFC,0x40,0x44,0x00,0x01,0x2C,0x49,0x00,0x00,0x72,0x44,0x75,0x10,0x0C,0x44,0x9F,
+0xFF,0x98,0x84,0x00,0xAE,0x38,0xFA,0x18,0x10,0x93,0x80,0x00,0x49,0x00,0x00,0x67,
+0x44,0x05,0x10,0x18,0x44,0x65,0x10,0x0C,0xB4,0x00,0x96,0x00,0x5A,0x00,0xA5,0xF3,
+0xB4,0x06,0x92,0x08,0x40,0x00,0x20,0x08,0xB6,0x06,0xFC,0xC0,0xC0,0x04,0x5A,0x00,
+0x01,0x1F,0xDD,0x9E,0x44,0x14,0x80,0x82,0x44,0x22,0x00,0x00,0xAE,0x08,0x44,0x14,
+0x80,0x00,0x44,0x04,0x80,0x80,0xB6,0x41,0xB4,0x60,0xFE,0x9F,0xB6,0x40,0x44,0x24,
+0x00,0x00,0xB6,0x41,0xB4,0x60,0xFE,0x9F,0xB6,0x40,0x46,0x20,0x01,0x00,0xB6,0x41,
+0xB4,0x60,0xFE,0x9F,0xB6,0x40,0x46,0x20,0x00,0x80,0xD5,0x23,0x44,0x04,0x80,0x82,
+0x84,0x20,0xAE,0x40,0x44,0x14,0x80,0x00,0x44,0x04,0x80,0x80,0x44,0x21,0x00,0x00,
+0xB6,0x41,0xB4,0x60,0xFE,0x9F,0xB6,0x40,0x44,0x22,0x00,0x00,0xB6,0x41,0xB4,0x60,
+0xFE,0x9F,0xB6,0x40,0x44,0x24,0x00,0x00,0xB6,0x41,0xB4,0x60,0xFE,0x9F,0xB6,0x40,
+0x46,0x20,0x00,0x80,0xB6,0x41,0xB4,0x60,0xFE,0x9F,0xB6,0x40,0x46,0x20,0x01,0x00,
+0xB6,0x41,0xB4,0x60,0xFE,0x9F,0xB6,0x40,0x46,0x20,0x02,0x00,0xB6,0x41,0xB4,0x60,
+0xFE,0x9F,0xB6,0x40,0x46,0x20,0x04,0x00,0xB6,0x41,0xB4,0x20,0xFE,0x8F,0xB6,0x40,
+0xDD,0x9E,0xFC,0x00,0x49,0xFF,0xFC,0x72,0xFC,0x80,0x84,0x2E,0xFE,0x0C,0x8E,0x01,
+0x5A,0x07,0xFF,0x05,0x40,0x00,0x00,0x09,0xD5,0xFB,0xDD,0x9E,0x44,0x10,0x36,0xB0,
+0xFE,0x0C,0x8E,0x01,0x5A,0x07,0xFF,0x05,0x40,0x00,0x00,0x09,0xD5,0xFB,0xDD,0x9E,
+0xFC,0x00,0x49,0x00,0x19,0x51,0xC8,0x05,0x84,0x01,0x3E,0x07,0xEE,0x2C,0xFC,0x80,
+0x84,0x02,0x3E,0x07,0xEE,0x2C,0x49,0x00,0x0C,0x82,0xFC,0x80,0xFC,0x01,0x84,0x00,
+0x49,0x00,0x0F,0x70,0x44,0x12,0x04,0xE4,0x84,0x00,0x49,0x00,0x0F,0xBF,0xF0,0x81,
+0x84,0x27,0x84,0x00,0x49,0x00,0x10,0x9E,0xF0,0x01,0xFC,0x81,0xFC,0x20,0x3C,0x2D,
+0xFD,0xC2,0x5A,0x20,0x01,0x3E,0x80,0xE1,0x80,0xC0,0x49,0x00,0x0F,0x55,0xC8,0x2E,
+0x5A,0x68,0x01,0x05,0x49,0x00,0x0F,0x56,0xD5,0x14,0x49,0xFF,0xFF,0xE1,0x80,0xC0,
+0xC8,0x10,0x84,0x01,0x49,0xFF,0xFE,0xC7,0x80,0x06,0x84,0x21,0x49,0xFF,0xFE,0x5E,
+0x3E,0x67,0xEF,0xB7,0x3E,0x67,0xEF,0xB4,0x3C,0x6F,0xFB,0xCE,0x5A,0x70,0x01,0x21,
+0x84,0x01,0x84,0x2F,0x49,0x00,0x2C,0x92,0x84,0x01,0x80,0x20,0x49,0x00,0x2C,0x9C,
+0x84,0x01,0x49,0xFF,0xFE,0x89,0x84,0x00,0x49,0x00,0x0F,0x0D,0x49,0x00,0x0F,0x14,
+0x84,0x00,0x49,0x00,0x10,0x6F,0x84,0x01,0xD5,0x0C,0x84,0x01,0x49,0xFF,0xFE,0xA3,
+0x84,0x00,0x84,0x21,0x49,0xFF,0xFE,0x3A,0x84,0x00,0x3E,0x07,0xEF,0xB7,0x84,0x00,
+0xFC,0xA0,0xFC,0x00,0xC0,0x0B,0x5A,0x08,0x01,0x05,0x49,0x00,0x17,0xCA,0xD5,0x06,
+0x84,0xC0,0x5A,0x08,0x02,0x05,0x49,0x00,0x17,0xC7,0x80,0xC0,0x84,0x02,0x49,0x00,
+0x0F,0x11,0x84,0x02,0x44,0x12,0x04,0xE4,0x49,0x00,0x0F,0x60,0xC6,0x04,0x80,0x06,
+0x49,0x00,0x10,0x1B,0x49,0x00,0x17,0xBB,0x49,0x00,0x10,0x29,0x84,0x02,0x84,0x27,
+0x49,0x00,0x10,0x38,0xFC,0x80,0x3C,0x0D,0xFD,0xC2,0x5A,0x00,0x01,0x16,0xFC,0x00,
+0x49,0x00,0x0E,0xF2,0x80,0xC0,0xC8,0x04,0x49,0xFF,0xFF,0x82,0xD5,0x07,0x5A,0x00,
+0x01,0x0B,0x49,0x00,0x0E,0xEC,0x49,0xFF,0xFF,0xCE,0x80,0x06,0x49,0x00,0x0E,0xC3,
+0x49,0x00,0x0E,0xCA,0xFC,0x80,0xDD,0x9E,0xFC,0x00,0x49,0x00,0x0D,0x1E,0x5A,0x08,
+0x01,0x06,0x84,0x00,0x44,0x10,0x07,0xD0,0xD5,0x04,0x84,0x00,0x44,0x10,0x75,0x30,
+0x49,0x00,0x2C,0x2C,0x84,0x00,0x84,0x21,0x49,0x00,0x2C,0x36,0x84,0x00,0x49,0x00,
+0x0D,0x15,0xFC,0x80,0x3E,0x07,0xEF,0xB6,0xDD,0x9E,0xFC,0x00,0x64,0x12,0x00,0x43,
+0x64,0x00,0x00,0x08,0x64,0x00,0x00,0x08,0x49,0x00,0x29,0x76,0x49,0x00,0x29,0xA9,
+0x49,0x00,0x2B,0x9F,0x84,0x00,0x44,0x10,0x00,0xEB,0x49,0x00,0x2B,0xF4,0x49,0x00,
+0x2A,0xE5,0x49,0x00,0x2A,0xFA,0x49,0x00,0x2B,0x2D,0x49,0x00,0x0A,0xD0,0x49,0x00,
+0x17,0xE4,0x84,0x00,0x3E,0x07,0xEE,0x2D,0xFC,0x80,0x2E,0x07,0xEF,0xB8,0xDD,0x9E,
+0xFC,0x00,0x49,0x00,0x0B,0x07,0x49,0x00,0x08,0x97,0x49,0x00,0x19,0x0D,0x49,0x00,
+0x18,0x73,0x49,0x00,0x0B,0x9E,0x49,0x00,0x17,0x68,0x49,0x00,0x18,0x6D,0x49,0x00,
+0x0B,0xDD,0x49,0x00,0x0C,0xD2,0xC8,0x04,0x49,0x00,0x19,0xBD,0xD5,0x05,0x2E,0x07,
+0xF0,0x00,0x96,0x06,0xC8,0xFA,0x49,0xFF,0xFF,0x0D,0x49,0x00,0x1A,0x28,0x49,0xFF,
+0xFF,0xA5,0x49,0x00,0x01,0x19,0x49,0x00,0x0C,0xC0,0x80,0x40,0x5A,0x08,0x01,0x08,
+0x44,0x00,0x07,0xD0,0x84,0x20,0x80,0x62,0x49,0x00,0x2B,0x45,0x84,0x04,0x3E,0x07,
+0xEF,0xBB,0x84,0x00,0x49,0x00,0x19,0x30,0x84,0x00,0x49,0x00,0x01,0x06,0x49,0x00,
+0x17,0x32,0x49,0x00,0x0C,0xAA,0xC8,0x04,0x84,0x01,0x49,0x00,0x2A,0xD9,0xFC,0x80,
+0xFC,0x20,0x49,0x00,0x0E,0x61,0x80,0xE0,0x49,0x00,0x0F,0xA0,0x5A,0x08,0x01,0x05,
+0x84,0x20,0x49,0x00,0x2B,0xC1,0x84,0x01,0x49,0x00,0x2B,0xD9,0x5A,0x08,0x01,0x07,
+0x84,0x20,0x49,0x00,0x2B,0xB9,0x49,0x00,0x0E,0x37,0x5A,0x78,0x02,0x5C,0x2E,0x07,
+0xEF,0xB6,0x5A,0x00,0x01,0x04,0x48,0x00,0x00,0x8F,0x49,0x00,0x0F,0x87,0x5A,0x00,
+0x01,0x04,0x48,0x00,0x00,0x89,0x2E,0x07,0xEF,0xB4,0x5A,0x08,0x01,0x05,0x84,0x00,
+0x3E,0x07,0xEF,0xB4,0x44,0x64,0x80,0x80,0x44,0x0B,0xFF,0xFF,0xB4,0x26,0xFE,0x0E,
+0xB6,0x06,0xB4,0x26,0x46,0x0F,0xFE,0xFF,0x50,0x00,0x0F,0xFF,0xFE,0x0E,0xB6,0x06,
+0xB4,0x26,0x46,0x0F,0xFD,0xFF,0x50,0x00,0x0F,0xFF,0xFE,0x0E,0xB6,0x06,0x84,0x00,
+0x49,0xFF,0xFF,0x2B,0x84,0x00,0x3E,0x07,0xEF,0xB6,0x84,0x00,0x49,0x00,0x0F,0x62,
+0xB4,0x26,0x44,0x04,0x00,0x00,0xFE,0x0F,0xB6,0x06,0xB4,0x26,0x46,0x00,0x01,0x00,
+0xFE,0x0F,0xB6,0x06,0xB4,0x26,0x46,0x00,0x02,0x00,0xFE,0x0F,0xB6,0x06,0x44,0x10,
+0x01,0x90,0x84,0x01,0x49,0x00,0x2B,0x62,0x84,0x01,0x80,0x20,0x49,0x00,0x2B,0x6C,
+0x49,0x00,0x0F,0x44,0x80,0xC0,0xC8,0x47,0x84,0x01,0x49,0x00,0x2B,0x80,0x80,0xE0,
+0x5A,0x08,0x01,0xF8,0x80,0x26,0x49,0x00,0x2B,0x5F,0x80,0x07,0x49,0x00,0x0F,0x3A,
+0xD5,0x3A,0xCF,0x39,0x2E,0x07,0xEF,0xB7,0x44,0x15,0x10,0x20,0xB6,0x01,0xC8,0x26,
+0x2E,0x67,0xEF,0xB6,0x5A,0x68,0x01,0x23,0x80,0x26,0x80,0x07,0x49,0xFF,0xFD,0x78,
+0x80,0x06,0x49,0xFF,0xFD,0x39,0x80,0x06,0x49,0xFF,0xFD,0x48,0x80,0x06,0x80,0x26,
+0x49,0xFF,0xFC,0xF4,0x80,0x07,0x80,0x26,0x49,0xFF,0xFE,0x7A,0x5A,0x08,0x01,0x08,
+0x3E,0x07,0xEF,0xB7,0x80,0x07,0x49,0x00,0x0F,0x15,0xD5,0x08,0x80,0x06,0x49,0xFF,
+0xFD,0x4A,0x80,0x07,0x80,0x26,0x49,0xFF,0xFC,0xE1,0x2E,0x67,0xEF,0xB7,0xCE,0x0B,
+0x2E,0x07,0xEF,0xB4,0x5A,0x08,0x01,0x08,0x49,0x00,0x0F,0x00,0x5A,0x08,0x01,0x04,
+0x3E,0x67,0xEF,0xB4,0x2E,0x07,0xEF,0xBB,0xC0,0x04,0x5A,0x00,0x04,0x06,0xFC,0xA0,
+0x49,0xFF,0xFF,0x10,0xFC,0xA0,0x49,0x00,0x13,0xBA,0xFC,0xA0,0xFC,0x20,0x84,0xC0,
+0x84,0xE2,0x49,0x00,0x2A,0xE4,0x2E,0x07,0xEF,0xB8,0x5A,0x00,0x01,0x0A,0xC0,0x04,
+0x5A,0x00,0x02,0x2B,0xD5,0xF7,0x49,0x00,0x0B,0xEC,0x84,0x01,0xD5,0x1A,0x3E,0x07,
+0xEF,0xBA,0x3E,0x67,0xEF,0xBB,0x3E,0x67,0xEF,0xB9,0x3E,0x67,0xEF,0xB5,0x49,0x00,
+0x0B,0xD4,0x5A,0x08,0x01,0x17,0x49,0x00,0x0B,0xD6,0x5A,0x08,0x02,0x04,0x84,0x03,
+0xD5,0x02,0x84,0x04,0x3E,0x07,0xEF,0xB8,0x2E,0x07,0xF0,0xCC,0xC0,0x05,0x84,0x04,
+0x3E,0x07,0xEF,0xB8,0xD5,0xD7,0x2E,0x07,0xF0,0xCB,0xC0,0xD4,0x84,0x03,0xD5,0xF9,
+0x3E,0x77,0xEF,0xB8,0xD5,0xCF,0x49,0x00,0x0B,0x9F,0x49,0x00,0x0B,0xA6,0x2E,0x07,
+0xEF,0xB5,0x3E,0x67,0xEF,0xBC,0xC8,0xC6,0x49,0xFF,0xFF,0x0C,0xD5,0xC3,0x3E,0x07,
+0xEF,0xBA,0xDD,0x9E,0xDD,0x9E,0x46,0x10,0x00,0x81,0xC8,0x06,0x04,0x00,0x80,0x33,
+0x58,0x00,0x02,0x00,0xD5,0x06,0x04,0x20,0x80,0x33,0x44,0x0F,0xFD,0xFF,0xFE,0x16,
+0x14,0x00,0x80,0x33,0xDD,0x9E,0x44,0x24,0x2C,0x14,0x84,0x30,0xB4,0x62,0x96,0x1F,
+0xFE,0x5E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x44,0x24,0x2C,0x14,0x96,0x1F,0xB4,0x62,
+0x40,0x10,0x20,0x08,0x44,0x0F,0xF0,0xFF,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,
+0xFC,0x20,0x80,0xC0,0x49,0x00,0x03,0x69,0x49,0x00,0x03,0x4D,0x44,0x14,0x24,0x04,
+0x44,0x5F,0xFF,0xEF,0xB4,0x01,0x84,0x41,0xFE,0x2E,0xB6,0x01,0xB4,0x01,0x40,0x33,
+0x08,0x02,0x44,0x4F,0xFF,0xDF,0x94,0xDD,0xFE,0x26,0xFE,0x1F,0xB6,0x01,0x44,0x04,
+0x28,0x04,0xB4,0xC0,0xFF,0xAE,0xB6,0xC0,0xB4,0xC0,0xFF,0xA6,0xFF,0x9F,0xB6,0xC0,
+0x44,0x64,0x2C,0x04,0xB4,0xE6,0xFF,0x7E,0xB6,0xA6,0xB4,0xA6,0xFF,0x2E,0xFE,0xE7,
+0xB6,0x66,0x80,0x62,0x49,0xFF,0xF4,0xAE,0x49,0x00,0x03,0x32,0x49,0x00,0x03,0x4A,
+0xFC,0xA0,0xFC,0x00,0x44,0x24,0x80,0x10,0x84,0x01,0xB4,0x22,0x96,0x46,0xC1,0x0B,
+0xAE,0x10,0x3E,0x07,0xEF,0xCC,0x3E,0x07,0xEF,0xC9,0x3C,0x0D,0xFB,0xF0,0x8C,0x01,
+0x3C,0x0F,0xFB,0xF0,0x44,0x04,0x80,0x10,0xB4,0x00,0x92,0x0A,0x96,0x06,0xC0,0x0E,
+0x44,0x04,0x80,0x11,0x84,0x24,0xAE,0x40,0x49,0x00,0x01,0x05,0x44,0x07,0x20,0x00,
+0xB4,0x00,0x92,0x08,0x96,0x06,0x49,0x00,0x00,0xE9,0x44,0x04,0x80,0x10,0x84,0x21,
+0xB4,0x00,0x92,0x08,0x96,0x06,0xC0,0x08,0x44,0x04,0x80,0x11,0xAE,0x40,0x3E,0x17,
+0xEF,0xCA,0x3E,0x17,0xEF,0xC9,0x44,0x04,0x80,0x10,0xB4,0x20,0x92,0x27,0x96,0x46,
+0xC1,0x04,0x44,0x1F,0xFF,0x80,0xAE,0x40,0xB4,0x00,0x92,0x05,0x96,0x06,0xC0,0x05,
+0x44,0x04,0x80,0x10,0xFA,0x30,0xAE,0x40,0x44,0x04,0x80,0x10,0xB4,0x20,0x92,0x26,
+0x96,0x46,0xC1,0x04,0x44,0x10,0x00,0x40,0xAE,0x40,0xB4,0x00,0x92,0x18,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x13,0x84,0x21,0xAE,0x40,0x44,0x04,0x80,0x10,0xB4,0x00,
+0x92,0x15,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x12,0xFA,0x30,0xAE,0x40,0xFC,0x80,
+0xFC,0x00,0x44,0x24,0x80,0x10,0x84,0x21,0xB4,0x02,0x92,0x04,0x96,0x06,0xC0,0x14,
+0xFA,0x00,0xAE,0x10,0x3E,0x17,0xEF,0xCB,0x3E,0x17,0xEF,0xC9,0x3C,0x0D,0xFB,0xF1,
+0x8C,0x01,0x3C,0x0F,0xFB,0xF1,0x46,0x00,0x00,0x81,0x04,0x00,0x00,0xF0,0x92,0x03,
+0x96,0x06,0x49,0x00,0x00,0x93,0x44,0x14,0x80,0x10,0xB4,0x01,0x92,0x0B,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x11,0x84,0x48,0xAE,0x80,0xB4,0x01,0x92,0x03,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x10,0x84,0x28,0xAE,0x40,0x44,0x04,0x80,0x10,0xB4,0x20,
+0x92,0x22,0x96,0x46,0xC1,0x03,0x84,0x24,0xAE,0x40,0xB4,0x00,0x92,0x01,0x96,0x06,
+0xC0,0x0E,0x44,0x04,0x80,0x90,0xB4,0x00,0x92,0x01,0x96,0x06,0x5A,0x08,0x01,0x08,
+0x44,0x14,0x80,0x10,0x84,0x42,0xAE,0x88,0x3E,0x07,0xEF,0xBC,0x44,0x14,0x80,0x10,
+0xB4,0x01,0x92,0x19,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x13,0x84,0x42,0xAE,0x80,
+0xB4,0x01,0x92,0x16,0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x12,0x44,0x10,0x00,0x40,
+0xAE,0x40,0xFC,0x80,0xFC,0x00,0x80,0xC0,0x49,0xFF,0xF3,0xFE,0x46,0x20,0x00,0x81,
+0x97,0x86,0x94,0x32,0x04,0x61,0x03,0x93,0x84,0x3B,0xFF,0x8E,0xFF,0x87,0x14,0x61,
+0x03,0x93,0x49,0xFF,0xF3,0xEA,0xFC,0x80,0x44,0x04,0x50,0x28,0xB4,0x00,0x92,0x01,
+0x96,0x06,0xDD,0x9E,0x44,0x24,0x50,0x1C,0x40,0x00,0x40,0x08,0xB4,0x22,0x96,0x49,
+0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x44,0x24,0x50,0x1C,0x44,0x1F,0x00,0xFF,0xB4,0x62,
+0x40,0x00,0x20,0x08,0xFE,0x5E,0xFE,0x0F,0xB6,0x02,0xDD,0x9E,0x44,0x07,0x21,0x00,
+0x46,0x10,0x20,0x00,0xB4,0x40,0xFE,0x57,0xB6,0x20,0x80,0x20,0xB4,0x01,0x92,0x19,
+0x96,0x06,0xC8,0xFD,0xDD,0x9E,0x44,0x04,0x80,0x04,0xA6,0x02,0x92,0x01,0x96,0x06,
+0xC0,0x08,0x44,0x04,0x80,0x06,0x84,0x22,0xAE,0x40,0x84,0x01,0x3E,0x07,0xEF,0xCE,
+0x44,0x04,0x80,0x04,0x84,0x21,0xA6,0x02,0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x06,
+0xAE,0x40,0x3E,0x17,0xEF,0xCD,0xDD,0x9E,0x3E,0x07,0xEE,0x34,0xDD,0x9E,0x2E,0x07,
+0xEE,0x34,0xDD,0x9E,0x44,0x37,0x20,0x00,0x54,0x10,0x00,0x01,0xB4,0x83,0x40,0x20,
+0xA0,0x08,0x44,0x1F,0xFE,0xFF,0xFE,0x66,0xFE,0x57,0xB6,0x23,0x3E,0x07,0xEE,0x34,
+0xDD,0x9E,0x84,0x01,0x3E,0x07,0xEE,0x35,0xDD,0x9E,0x84,0x00,0x3E,0x07,0xEE,0x35,
+0xDD,0x9E,0xC8,0x07,0x44,0x17,0x10,0x18,0xA6,0x08,0x54,0x00,0x00,0xFE,0xD5,0x08,
+0x5A,0x08,0x01,0x0F,0x44,0x17,0x10,0x18,0xA6,0x08,0x58,0x00,0x00,0x01,0xAE,0x08,
+0x44,0x17,0x10,0x0C,0xB4,0x01,0x58,0x00,0x01,0x00,0xB6,0x01,0xDD,0x9E,0x5A,0x08,
+0x02,0x0D,0x44,0x17,0x10,0x18,0xA6,0x08,0x58,0x00,0x00,0x01,0xAE,0x08,0x44,0x07,
+0x10,0x0C,0xB4,0x20,0x84,0x20,0xB6,0x20,0xDD,0x9E,0x3C,0x0D,0xFB,0xF8,0xC0,0x0B,
+0xA4,0x80,0x3C,0x13,0xF7,0xEC,0x8E,0x21,0xE0,0x41,0xE8,0x05,0xA4,0x40,0x8C,0x21,
+0x96,0x49,0xAC,0x40,0xA4,0x80,0x3C,0x13,0xF7,0xEE,0xE2,0x41,0xE9,0x0C,0x84,0x20,
+0xAC,0x40,0x44,0x06,0x00,0x34,0x44,0x10,0x00,0x5A,0xB6,0x20,0x84,0x01,0x3E,0x07,
+0xEE,0x36,0xD5,0x0B,0x3C,0x1D,0xFB,0xFA,0xC1,0x08,0xA4,0x00,0x88,0x01,0x44,0x16,
+0x00,0x34,0xA6,0x00,0x96,0x00,0xB6,0x01,0x44,0x06,0x00,0x00,0xB4,0x00,0x92,0x08,
+0x96,0x06,0x5A,0x08,0x01,0x0B,0x44,0x06,0x00,0x30,0xB4,0x20,0x58,0x10,0x80,0x01,
+0xB6,0x20,0xB4,0x20,0x96,0x46,0xC9,0xFE,0xDD,0x9E,0xFC,0x40,0x3C,0x0D,0xFB,0xF8,
+0x84,0x20,0xAC,0x40,0x3C,0x1D,0xFB,0xFA,0xC1,0x08,0xA4,0x00,0x88,0x01,0x44,0x16,
+0x00,0x34,0xA6,0x00,0x96,0x00,0xB6,0x01,0x84,0xE0,0x44,0x94,0x80,0x00,0x44,0xA4,
+0x80,0x80,0x00,0x64,0x80,0x02,0xB4,0x0A,0x92,0xC3,0x92,0x13,0x96,0x06,0xFF,0x86,
+0xC6,0x16,0x44,0x04,0x80,0x02,0x84,0x28,0xAE,0x40,0x44,0x06,0x00,0x00,0xB4,0x00,
+0x92,0x08,0x96,0x06,0x5A,0x08,0x01,0x32,0x44,0x06,0x00,0x30,0xB4,0x20,0x58,0x10,
+0x80,0x01,0xB6,0x20,0xB4,0x20,0x96,0x46,0xC9,0xFE,0xFC,0xC0,0x00,0x04,0x80,0x02,
+0x40,0x10,0x10,0x09,0xB4,0x0A,0x92,0x14,0x96,0x06,0xFE,0x0E,0xC0,0x08,0x44,0x04,
+0x80,0x02,0xFA,0x20,0xAE,0x40,0x49,0xFF,0xFF,0x8A,0x80,0xE6,0x00,0x04,0x80,0x02,
+0x40,0x10,0x18,0x09,0xB4,0x0A,0x92,0x16,0x96,0x06,0xFE,0x0E,0xC0,0x07,0x44,0x04,
+0x80,0x02,0x44,0x10,0x00,0x40,0xAE,0x40,0xFC,0xC0,0x84,0x01,0x8C,0xE1,0x49,0xFF,
+0xFB,0xAE,0x5C,0xF3,0xA7,0x11,0xE9,0xBE,0xFC,0xC0,0x44,0x16,0x00,0x34,0xB6,0x01,
+0xDD,0x9E,0x3C,0x0F,0xFB,0xFB,0x02,0x0F,0x80,0x00,0x3C,0x4B,0xF7,0xEE,0x3C,0x1F,
+0xFB,0xFA,0x3C,0x5B,0xF7,0xED,0x3C,0x2F,0xFB,0xF9,0x3C,0x3F,0xFB,0xF8,0x3C,0x0B,
+0xF7,0xEC,0xDD,0x9E,0x3C,0x0B,0xF7,0xEE,0xDD,0x9E,0x3E,0x07,0xEE,0x36,0xDD,0x9E,
+0x2E,0x07,0xEE,0x36,0xDD,0x9E,0x3C,0x0F,0xFB,0xF5,0xDD,0x9E,0x3C,0x0F,0xFB,0xF4,
+0xDD,0x9E,0xFC,0x20,0x44,0x14,0x80,0x00,0x44,0x04,0x80,0x80,0xA6,0x8A,0xB4,0x00,
+0x92,0x10,0x96,0x06,0xFE,0x16,0xC0,0x05,0x44,0x04,0x80,0x02,0x84,0x41,0xAE,0x80,
+0xA6,0x0A,0x40,0x10,0x04,0x09,0x44,0x04,0x80,0x80,0xB4,0x00,0x92,0x11,0x96,0x06,
+0xFE,0x0E,0xC0,0x05,0x44,0x04,0x80,0x02,0x84,0x22,0xAE,0x40,0x44,0x04,0x80,0x00,
+0xA6,0x02,0x40,0x10,0x08,0x09,0x44,0x04,0x80,0x80,0xB4,0x00,0x92,0x12,0x96,0x06,
+0xFE,0x0E,0x4E,0x02,0x00,0xA4,0x44,0x04,0x80,0x02,0x84,0x24,0xAE,0x40,0x3C,0x0D,
+0xFB,0xF9,0x3C,0x2D,0xFB,0xFB,0x84,0x20,0xAC,0x40,0xC2,0x06,0x44,0x16,0x00,0x28,
+0xB4,0x21,0x96,0x48,0xAE,0x50,0xC0,0x0B,0xA4,0x80,0x3C,0x13,0xF7,0xED,0x8E,0x21,
+0xE0,0x41,0xE8,0x05,0xA4,0x40,0x8C,0x21,0x96,0x49,0xAC,0x40,0x44,0x06,0x00,0x00,
+0xB4,0x00,0x92,0x08,0x96,0x06,0x5A,0x00,0x01,0x06,0x84,0xC0,0x44,0x76,0x00,0x30,
+0xD5,0x12,0x44,0x06,0x00,0x30,0xB4,0x20,0x58,0x10,0x80,0x01,0xB6,0x20,0xB4,0x20,
+0x96,0x46,0xC9,0xFE,0xD5,0xF3,0x84,0x01,0x8C,0xC1,0x49,0xFF,0xFB,0x28,0x5C,0xF3,
+0x08,0x01,0xE8,0x66,0x44,0x34,0x80,0x00,0x44,0x24,0x80,0x80,0xA6,0x1A,0x40,0x10,
+0x0C,0x09,0xB4,0x02,0x92,0x13,0x96,0x06,0xFE,0x0E,0xC0,0x16,0x44,0x04,0x80,0x02,
+0x84,0x28,0xAE,0x40,0x44,0x06,0x00,0x00,0xB4,0x00,0x92,0x08,0x96,0x06,0x5A,0x08,
+0x01,0x50,0x44,0x06,0x00,0x30,0xB4,0x20,0x58,0x10,0x80,0x01,0xB6,0x20,0xB4,0x20,
+0x96,0x46,0xC9,0xFE,0xD5,0x45,0xA6,0x1A,0x40,0x10,0x10,0x09,0xB4,0x02,0x92,0x14,
+0x96,0x06,0xFE,0x0E,0xC0,0x2D,0x44,0x04,0x80,0x02,0xFA,0x20,0xAE,0x40,0x3C,0x2D,
+0xFB,0xFB,0x3C,0x0D,0xFB,0xF9,0xC2,0x08,0xA4,0x40,0x88,0x22,0x44,0x26,0x00,0x38,
+0xB4,0x42,0x96,0x90,0xAE,0x88,0xC0,0x0B,0xA4,0x80,0x3C,0x13,0xF7,0xED,0x8E,0x21,
+0xE0,0x41,0xE8,0x05,0xA4,0x40,0x8C,0x21,0x96,0x49,0xAC,0x40,0x44,0x06,0x00,0x00,
+0xB4,0x00,0x92,0x08,0x96,0x06,0x5A,0x00,0x01,0x04,0x84,0xC0,0xD5,0x09,0xB4,0x07,
+0x58,0x00,0x00,0x01,0xB6,0x07,0xB4,0x07,0x96,0x06,0xC8,0xFE,0xD5,0xF7,0x44,0x04,
+0x80,0x00,0xA6,0x02,0x40,0x10,0x14,0x09,0x44,0x04,0x80,0x80,0xB4,0x00,0x92,0x15,
+0x96,0x06,0xFE,0x0E,0xC0,0x99,0x44,0x04,0x80,0x02,0xFA,0x30,0xAE,0x40,0x3C,0x0D,
+0xFB,0xF5,0xC0,0x04,0x3C,0x0D,0xFB,0xF5,0xDD,0x20,0x44,0x04,0x80,0x00,0xA6,0x02,
+0x40,0x10,0x0C,0x09,0x44,0x04,0x80,0x80,0xB4,0x00,0x92,0x13,0x96,0x06,0xFE,0x0E,
+0xC8,0x14,0x44,0x04,0x80,0x00,0xA6,0x02,0x40,0x10,0x10,0x09,0x44,0x04,0x80,0x80,
+0xB4,0x00,0x92,0x14,0x96,0x06,0xFE,0x0E,0xC0,0x1D,0x44,0x04,0x80,0x02,0xFA,0x20,
+0xAE,0x40,0x49,0xFF,0xFE,0x64,0xD5,0x16,0x44,0x04,0x80,0x02,0x84,0x28,0xAE,0x40,
+0x44,0x06,0x00,0x00,0xB4,0x00,0x92,0x08,0x96,0x06,0x5A,0x08,0x01,0xE4,0x44,0x06,
+0x00,0x30,0xB4,0x20,0x58,0x10,0x80,0x01,0xB6,0x20,0xB4,0x20,0x96,0x46,0xC9,0xFE,
+0xD5,0xD9,0x44,0x14,0x80,0x00,0xA6,0x0A,0x40,0x20,0x14,0x09,0x44,0x04,0x80,0x80,
+0xB4,0x00,0x92,0x15,0x96,0x06,0xFE,0x16,0xC0,0x05,0x44,0x04,0x80,0x02,0xFA,0x50,
+0xAE,0x80,0xA6,0x0A,0x40,0x10,0x18,0x09,0x44,0x04,0x80,0x80,0xB4,0x00,0x92,0x16,
+0x96,0x06,0xFE,0x0E,0xC0,0x06,0x44,0x04,0x80,0x02,0x44,0x10,0x00,0x40,0xAE,0x40,
+0xFC,0xA0,0x44,0x16,0x38,0x20,0xB4,0x01,0x58,0x00,0x01,0x00,0xB6,0x01,0x44,0x16,
+0x34,0x20,0xB4,0x01,0x58,0x00,0x01,0x00,0xB6,0x01,0xDD,0x9E,0x44,0x26,0x38,0x20,
+0x44,0x0F,0xFE,0xFF,0xB4,0x22,0xFE,0x46,0xB6,0x22,0x44,0x16,0x34,0x20,0xB4,0x41,
+0xFE,0x16,0xB6,0x01,0xDD,0x9E,0x44,0x16,0x38,0x20,0xB4,0x01,0x58,0x00,0x00,0x01,
+0xB6,0x01,0x44,0x16,0x34,0x20,0xB4,0x01,0x58,0x00,0x00,0x01,0xB6,0x01,0xDD,0x9E,
+0x44,0x26,0x38,0x20,0x84,0x1E,0xB4,0x22,0xFE,0x46,0xB6,0x22,0x44,0x16,0x34,0x20,
+0xB4,0x41,0xFE,0x16,0xB6,0x01,0xDD,0x9E,0x46,0x20,0x00,0x83,0x96,0x06,0x04,0x31,
+0x00,0x14,0x94,0x41,0x84,0x1D,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x14,0xDD,0x9E,
+0x46,0x20,0x00,0x83,0x96,0x06,0x04,0x31,0x00,0x14,0x94,0x43,0x84,0x17,0xFE,0x1E,
+0xFE,0x0F,0x14,0x01,0x00,0x14,0xDD,0x9E,0x40,0x21,0x40,0x08,0x40,0x10,0xA0,0x08,
+0x88,0x22,0x88,0x20,0x46,0x00,0x00,0x80,0x14,0x10,0x00,0x78,0xDD,0x9E,0xFC,0x41,
+0xF5,0x81,0x81,0x00,0x81,0x22,0x80,0xE3,0x80,0xC4,0x46,0x50,0x00,0x80,0xC0,0x03,
+0x5A,0x08,0x01,0x18,0x83,0x85,0xBA,0x77,0x46,0x1F,0xEF,0xFF,0x50,0x10,0x8F,0xFF,
+0xFE,0x56,0xB9,0xF7,0x84,0x23,0x49,0xFF,0xED,0x32,0x38,0x14,0x99,0x01,0x84,0x02,
+0x49,0xFF,0xF3,0x8E,0x38,0x03,0x98,0x00,0x84,0x22,0x49,0xFF,0xF4,0x8C,0xFC,0xC1,
+0x81,0x41,0x83,0x85,0xB9,0x77,0x46,0x00,0x10,0x00,0xFE,0x0F,0xB8,0xF7,0x84,0x23,
+0x84,0x01,0x49,0xFF,0xED,0x1C,0x50,0x25,0x7F,0xFF,0x80,0x06,0xF1,0x01,0x96,0x90,
+0x49,0xFF,0xFF,0xC4,0xFC,0xC1,0x46,0x20,0x00,0x80,0x96,0x06,0x04,0x31,0x00,0x75,
+0x40,0x10,0x28,0x08,0x44,0x0F,0xFB,0xFF,0xFE,0x1E,0xFE,0x0F,0x14,0x01,0x00,0x75,
+0xDD,0x9E,0x44,0x14,0x00,0x48,0x84,0x1F,0xB6,0x01,0x44,0x14,0x00,0x4C,0xB6,0x01,
+0xDD,0x9E,0x00,0x00,0xE6,0x04,0xE8,0x2E,0x96,0x5F,0x46,0x20,0x00,0x81,0x44,0xF0,
+0x29,0xBC,0x38,0x07,0x80,0x00,0x40,0xF0,0x3C,0x00,0xDD,0x0F,0x04,0x12,0x20,0x34,
+0x40,0x10,0xC0,0x08,0x04,0x31,0x00,0x32,0x46,0x0F,0xFF,0x0F,0xD5,0x0E,0x40,0x10,
+0xD0,0x08,0x04,0x31,0x00,0x32,0x46,0x0F,0xF0,0xFF,0xD5,0x07,0x40,0x10,0xE0,0x08,
+0x04,0x31,0x00,0x32,0x46,0x0F,0x0F,0xFF,0x50,0x00,0x0F,0xFF,0xFE,0x1E,0xD5,0x07,
+0x04,0x01,0x00,0x32,0x40,0x10,0xF0,0x08,0x94,0x04,0x92,0x04,0xFE,0x47,0x14,0x11,
+0x00,0x32,0xDD,0x9E,0xE6,0x08,0xE8,0x43,0x96,0x4F,0x46,0x20,0x00,0x81,0x44,0xF0,
+0x2A,0x1C,0x38,0x07,0x80,0x00,0x40,0xF0,0x3C,0x00,0xDD,0x0F,0x08,0x10,0x1A,0x26,
+0x32,0x40,0x4E,0x5C,0x04,0x31,0x00,0x28,0x84,0x1C,0xD5,0x2D,0x94,0x4A,0x04,0x31,
+0x00,0x28,0x84,0x13,0xD5,0x28,0x94,0x4C,0x04,0x31,0x00,0x28,0x44,0x0F,0xFF,0xCF,
+0xD5,0x22,0x94,0x4E,0x04,0x31,0x00,0x28,0x44,0x0F,0xFF,0x3F,0xD5,0x1C,0x40,0x10,
+0xA0,0x08,0x04,0x31,0x00,0x28,0x44,0x0F,0xFC,0xFF,0xD5,0x15,0x40,0x10,0xA8,0x08,
+0x04,0x31,0x00,0x28,0x44,0x0F,0xF3,0xFF,0xD5,0x0E,0x40,0x10,0xB0,0x08,0x04,0x31,
+0x00,0x28,0x44,0x0F,0xCF,0xFF,0xD5,0x07,0x40,0x10,0xB8,0x08,0x04,0x31,0x00,0x28,
+0x44,0x0F,0x3F,0xFF,0xFE,0x1E,0xFE,0x47,0x14,0x11,0x00,0x28,0xDD,0x9E,0x92,0x00,
+0xC8,0x04,0x44,0x07,0x20,0x14,0xD5,0x03,0x44,0x07,0x20,0x18,0xB4,0x00,0x40,0x00,
+0x30,0x08,0x92,0x0C,0xDD,0x9E,0xFC,0x00,0x44,0x04,0x00,0x9C,0xA6,0x00,0xE6,0x03,
+0xE9,0x24,0x44,0x64,0x0C,0x40,0x84,0x41,0xA6,0x32,0x80,0x62,0x58,0x00,0x00,0x08,
+0xAE,0x32,0x44,0x14,0x04,0x40,0x44,0x04,0x08,0x40,0x49,0xFF,0xF0,0x53,0xA6,0x32,
+0x84,0x41,0x54,0x00,0x00,0xF7,0xAE,0x32,0x44,0x14,0x04,0x40,0x44,0x04,0x08,0x40,
+0x80,0x62,0x49,0xFF,0xF0,0x47,0x44,0x07,0x20,0xC0,0x46,0x10,0x20,0x00,0xB4,0x40,
+0xFE,0x57,0xB6,0x20,0x80,0x20,0xD5,0x44,0x49,0x00,0x06,0xE7,0xC8,0xDB,0x44,0x64,
+0x50,0x28,0xB4,0x06,0x92,0x10,0x96,0x06,0x5A,0x08,0x01,0x1B,0x2E,0x07,0xEF,0xBC,
+0xC8,0x13,0xB4,0x06,0x92,0x03,0x96,0x06,0xC8,0x0F,0xB4,0x06,0x92,0x01,0x96,0x06,
+0xC0,0x0B,0x3C,0x0D,0xFD,0xC3,0x5A,0x00,0x01,0x0C,0x49,0x00,0x25,0xB6,0x2E,0x07,
+0xEF,0xC8,0xC0,0xE8,0xD5,0x05,0x49,0xFF,0xF9,0xE2,0x5A,0x08,0x02,0xF4,0x44,0x64,
+0x50,0x28,0xB4,0x06,0x92,0x10,0x96,0x06,0xC8,0xB5,0x2E,0x07,0xEF,0xBC,0xC8,0x13,
+0xB4,0x06,0x92,0x03,0x96,0x06,0xC8,0x0F,0xB4,0x06,0x92,0x01,0x96,0x06,0xC0,0x0B,
+0x3C,0x0D,0xFD,0xC3,0x5A,0x00,0x01,0xA7,0x49,0x00,0x25,0x97,0x2E,0x07,0xEF,0xC8,
+0xC0,0xE9,0xD5,0xA0,0x49,0xFF,0xF9,0xC3,0x5A,0x08,0x02,0xF4,0xD5,0x9B,0xB4,0x01,
+0x92,0x19,0x96,0x06,0xC8,0xFD,0x84,0x01,0x49,0xFF,0xFC,0x58,0xFC,0x80,0x44,0x34,
+0x00,0x54,0x84,0x21,0xB4,0x43,0x40,0x00,0x80,0x0C,0xFE,0x03,0xFE,0x16,0xB6,0x03,
+0xDD,0x9E,0xFC,0x00,0x80,0xC0,0x44,0x04,0x80,0x90,0x54,0x13,0x00,0x01,0xB4,0x80,
+0x84,0x5D,0x94,0xC9,0xFE,0xA6,0xFE,0x9F,0xB6,0x40,0x46,0x00,0x00,0x81,0x84,0x5E,
+0x83,0x80,0xBB,0x15,0xFE,0x9E,0xFE,0x57,0xB9,0x95,0x84,0x00,0x3E,0x07,0xEF,0xBC,
+0x44,0x04,0x80,0x10,0x84,0x22,0xAE,0x40,0x49,0xFF,0xF8,0xA5,0xE6,0x03,0xE9,0x2A,
+0x44,0x14,0x00,0x18,0xA6,0x0A,0x5A,0x68,0x01,0x13,0x54,0x00,0x00,0xFB,0xAE,0x0A,
+0x44,0x14,0x50,0x10,0xB4,0x01,0x92,0x08,0x40,0x00,0x20,0x08,0xB6,0x01,0x44,0x14,
+0x70,0x00,0x44,0x0E,0xFF,0xFF,0xB4,0x41,0xFE,0x16,0xD5,0x13,0x58,0x00,0x00,0x04,
+0xAE,0x0A,0x44,0x14,0x50,0x10,0xB4,0x01,0x92,0x08,0x40,0x00,0x20,0x08,0x58,0x00,
+0x00,0x98,0xB6,0x01,0x44,0x14,0x70,0x00,0x44,0x01,0x00,0x00,0xB4,0x41,0xFE,0x17,
+0xB6,0x01,0xFC,0x80,0x46,0x10,0x00,0x81,0x44,0x02,0x00,0x00,0x04,0x20,0x80,0x6E,
+0xFE,0x17,0x14,0x00,0x80,0x6E,0xDD,0x9E,0x44,0x27,0x30,0x10,0xB4,0x22,0x92,0x21,
+0x96,0x46,0x5A,0x10,0x01,0xFD,0xFC,0x00,0x44,0x17,0x30,0x00,0xB6,0x01,0x84,0x02,
+0x49,0xFF,0xF6,0xDF,0xFC,0x80,0xFC,0x00,0x46,0x61,0xFF,0xF9,0x50,0x03,0x05,0x27,
+0x49,0xFF,0xFF,0xEC,0x50,0x03,0x04,0x87,0x49,0xFF,0xFF,0xE8,0xFC,0x80,0xFC,0x00,
+0x46,0x61,0xFF,0xF9,0x50,0x03,0x05,0x00,0x49,0xFF,0xFF,0xE0,0x50,0x03,0x04,0x00,
+0x49,0xFF,0xFF,0xDC,0xFC,0x80,0xFC,0x00,0x46,0x11,0xFF,0xFF,0x50,0x10,0x8F,0x00,
+0xFE,0x0F,0x49,0xFF,0xFF,0xD3,0xFC,0x80,0xFC,0x00,0x46,0x11,0xFF,0xFF,0xFE,0x0F,
+0x49,0xFF,0xFF,0xCC,0xFC,0x80,0xFC,0x00,0x46,0x01,0xFF,0xFF,0x50,0x00,0x02,0xBB,
+0x49,0xFF,0xFF,0xC4,0xFC,0x80,0xFC,0x00,0x46,0x01,0xFF,0xFF,0x50,0x00,0x03,0xCC,
+0x49,0xFF,0xFF,0xBC,0xFC,0x80,0xFC,0x00,0x44,0x67,0x30,0x04,0x49,0xFF,0xFF,0xC5,
+0x49,0xFF,0xF6,0x92,0xB4,0x26,0x84,0x1E,0xFE,0x0E,0xB6,0x06,0x44,0x00,0x03,0xE8,
+0x49,0xFF,0xF6,0x97,0xB4,0x06,0x58,0x00,0x00,0x01,0xB6,0x06,0x44,0x00,0x03,0xE8,
+0x49,0xFF,0xF6,0x8F,0x49,0xFF,0xFF,0xD9,0x49,0xFF,0xF6,0x7E,0x46,0x01,0xFF,0xFF,
+0x49,0xFF,0xFF,0x9C,0x49,0xFF,0xF6,0x78,0x49,0xFF,0xF8,0x05,0xE6,0x03,0xE8,0x0B,
+0x49,0xFF,0xFF,0xD3,0x49,0xFF,0xF6,0x70,0x46,0x01,0xFF,0xFF,0x49,0xFF,0xFF,0x8E,
+0x49,0xFF,0xF6,0x6A,0x44,0x67,0x30,0x04,0x44,0x00,0x03,0xE8,0x49,0xFF,0xF6,0x71,
+0xB4,0x26,0x84,0x1E,0xFE,0x0E,0xB6,0x06,0x44,0x00,0x03,0xE8,0x49,0xFF,0xF6,0x69,
+0xB4,0x06,0x58,0x00,0x00,0x01,0xB6,0x06,0x44,0x00,0x03,0xE8,0x49,0xFF,0xF6,0x61,
+0x44,0x04,0x80,0x0A,0x84,0x24,0xAE,0x40,0x84,0x22,0xAE,0x40,0x84,0x21,0xAE,0x40,
+0xFC,0x80,0xFC,0x41,0xF0,0x81,0x80,0xE1,0x80,0xC2,0x81,0x43,0x81,0x24,0x49,0xFF,
+0xFF,0x74,0xF0,0x01,0x5A,0x00,0xFF,0x06,0x49,0xFF,0xFF,0x87,0x49,0xFF,0xF6,0x3C,
+0x40,0xA5,0x20,0x08,0x40,0x95,0x24,0x04,0x40,0x63,0x40,0x08,0x40,0x64,0x98,0x04,
+0x40,0x03,0xE0,0x08,0xFE,0x37,0x49,0xFF,0xFF,0x51,0x49,0xFF,0xFF,0x6A,0xFC,0xC1,
+0x44,0x27,0x30,0x10,0xB4,0x22,0x92,0x21,0x96,0x46,0x5A,0x10,0x01,0xFD,0xFC,0x20,
+0x44,0x14,0x80,0x0A,0x84,0x42,0xAE,0x88,0x44,0x17,0x30,0x00,0x44,0x60,0x10,0x00,
+0xB6,0x01,0x44,0x74,0x80,0x08,0xB4,0x07,0x92,0x11,0x96,0x06,0xC0,0x0D,0x44,0x04,
+0x80,0x08,0xB4,0x00,0x92,0x12,0x96,0x06,0xC8,0x10,0x44,0x07,0x30,0x14,0xB4,0x00,
+0x92,0x10,0x96,0x00,0xFC,0xA0,0x2E,0x07,0xEF,0xF8,0xC8,0xF2,0x84,0x01,0x8E,0xC1,
+0x49,0xFF,0xF6,0x0F,0xCE,0xE9,0xD5,0xEC,0x44,0x00,0xFF,0xFF,0xFC,0xA0,0xFC,0x41,
+0xF0,0x81,0x40,0x21,0x20,0x08,0x46,0x02,0xF0,0x00,0x40,0x91,0x00,0x04,0x40,0x10,
+0xC0,0x08,0x40,0x94,0x84,0x04,0x84,0xC0,0x49,0xFF,0xFF,0x1F,0xF0,0x01,0x49,0xFF,
+0xFF,0x34,0x49,0xFF,0xF5,0xE9,0x80,0x09,0x49,0xFF,0xFF,0xBC,0x5C,0xF0,0x01,0x00,
+0x80,0xE0,0xE9,0x08,0x8C,0xC1,0x84,0x01,0x97,0xB0,0x49,0xFF,0xF7,0x79,0x5A,0x68,
+0x04,0xED,0x49,0xFF,0xFF,0x16,0x5A,0x60,0x04,0x04,0x80,0x07,0xFC,0xC1,0x84,0x00,
+0xFC,0xC1,0xFC,0x00,0x44,0x17,0x30,0x08,0xB4,0x01,0x92,0x05,0x94,0x05,0x58,0x00,
+0x00,0x01,0xB6,0x01,0x49,0xFF,0xFE,0xF9,0x49,0xFF,0xF7,0x55,0xE6,0x03,0xE8,0x07,
+0x49,0xFF,0xFF,0x23,0x46,0x01,0xFF,0xFF,0x49,0xFF,0xFE,0xE0,0x84,0x06,0xFA,0x2F,
+0x44,0x20,0x00,0xAC,0x84,0x61,0x84,0x80,0x49,0xFF,0xFF,0x6D,0x84,0x06,0xFA,0x2F,
+0x44,0x20,0x00,0xAD,0x84,0x61,0x84,0x80,0x49,0xFF,0xFF,0x65,0x44,0x04,0x80,0x0A,
+0x84,0x24,0xAE,0x40,0x84,0x22,0xAE,0x40,0x44,0x04,0x80,0x88,0x44,0x14,0x00,0x00,
+0xB4,0x40,0xFE,0x57,0xB6,0x20,0xB4,0x40,0x44,0x12,0x00,0x00,0xFE,0x57,0xB6,0x20,
+0x49,0xFF,0xFE,0xD7,0xFC,0x80,0xFC,0x20,0x84,0x2C,0x84,0x41,0x84,0x05,0x49,0xFF,
+0xFF,0x98,0x97,0xC0,0x84,0x2D,0x84,0x41,0x84,0x05,0x49,0xFF,0xFF,0x92,0x97,0x80,
+0x80,0x87,0x84,0x05,0xFA,0x2F,0x44,0x20,0x00,0xC0,0x84,0x61,0x49,0xFF,0xFF,0x3B,
+0x80,0x86,0x84,0x05,0xFA,0x2F,0x44,0x20,0x00,0xC1,0x84,0x61,0x49,0xFF,0xFF,0x33,
+0x80,0x87,0x84,0x05,0xFA,0x2F,0x44,0x20,0x00,0xC2,0x84,0x61,0x49,0xFF,0xFF,0x2B,
+0x80,0x86,0x84,0x05,0xFA,0x2F,0x44,0x20,0x00,0xC3,0x84,0x61,0x49,0xFF,0xFF,0x23,
+0x80,0x87,0x84,0x05,0xFA,0x2F,0x44,0x20,0x00,0xC4,0x84,0x61,0x49,0xFF,0xFF,0x1B,
+0x80,0x86,0x84,0x05,0xFA,0x2F,0x44,0x20,0x00,0xC5,0x84,0x61,0x49,0xFF,0xFF,0x13,
+0x80,0x87,0x84,0x05,0xFA,0x2F,0x44,0x20,0x00,0xC6,0x84,0x61,0x49,0xFF,0xFF,0x0B,
+0x84,0x05,0xFA,0x2F,0x44,0x20,0x00,0xC7,0x84,0x61,0x80,0x86,0x49,0xFF,0xFF,0x03,
+0xFC,0xA0,0xFC,0x00,0x44,0x10,0x00,0x60,0x84,0x41,0x84,0x06,0x49,0xFF,0xFF,0x49,
+0x80,0xC0,0x44,0x10,0x00,0x61,0x84,0x41,0x84,0x06,0x49,0xFF,0xFF,0x42,0x96,0x00,
+0x97,0xB0,0x40,0x00,0x20,0x08,0xFE,0x37,0xFC,0x80,0x3C,0x0F,0xFB,0xFF,0xDD,0x9E,
+0x44,0x04,0x80,0x00,0xA6,0x03,0x96,0x06,0xC0,0x0D,0x44,0x04,0x80,0x03,0x84,0x21,
+0xAE,0x40,0x3C,0x0D,0xFB,0xFF,0xC0,0x06,0xFC,0x00,0x3C,0x0D,0xFB,0xFF,0xDD,0x20,
+0xFC,0x80,0xDD,0x9E,0x46,0x20,0x00,0x81,0x84,0x3E,0x04,0x31,0x00,0x14,0x96,0x06,
+0xFE,0x5E,0xFE,0x0F,0x14,0x01,0x00,0x14,0xDD,0x9E,0x44,0x14,0x70,0x08,0x5A,0x08,
+0x01,0x09,0xB4,0x01,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,0x78,0x23,0xD5,0x05,
+0xB4,0x01,0x92,0x10,0x40,0x00,0x40,0x08,0xB6,0x01,0xDD,0x9E,0xDD,0x9E,0x4E,0x05,
+0x00,0x19,0x8E,0x01,0x40,0x10,0x04,0x0A,0xFE,0x0F,0x40,0x10,0x08,0x0A,0xFE,0x0F,
+0x40,0x10,0x10,0x0A,0xFE,0x0F,0x40,0x10,0x20,0x0A,0xFE,0x0F,0x40,0x10,0x40,0x0A,
+0xFE,0x47,0x8C,0x21,0x84,0x00,0x90,0x21,0xC1,0x03,0x8C,0x01,0xD5,0xFD,0xDD,0x9E,
+0x84,0x00,0xDD,0x9E,0xFC,0x4D,0x44,0x02,0x00,0x10,0x50,0xFF,0x80,0x18,0x80,0xC0,
+0x80,0x2F,0x3A,0x23,0x14,0x04,0x3A,0x20,0x94,0x24,0x81,0x46,0x83,0x81,0x3A,0x25,
+0x14,0x04,0x44,0x92,0x00,0x38,0x3A,0x2E,0x14,0x24,0x80,0x89,0x3A,0x25,0x0C,0x00,
+0x80,0xBF,0x3A,0x2E,0x0C,0x20,0x3A,0x22,0x0C,0x04,0x3A,0x22,0x8C,0x24,0x45,0xE2,
+0x05,0xB8,0xA5,0xE0,0x3A,0x27,0x94,0x04,0x81,0xFE,0x81,0x1F,0x3A,0x27,0x94,0x24,
+0x3A,0x20,0x94,0x04,0x80,0x2F,0x3A,0x20,0x94,0x24,0x3A,0x2E,0x0C,0x00,0x3A,0x20,
+0x8C,0x20,0x44,0x12,0x05,0xAC,0x3A,0x24,0x0C,0x04,0x3A,0x20,0x8C,0x24,0xAD,0xC8,
+0xB0,0x50,0x3A,0x20,0x14,0x04,0x80,0x01,0x3A,0x20,0x14,0x24,0x81,0x00,0x3A,0x23,
+0x14,0x04,0x3A,0x24,0x14,0x24,0xB1,0x83,0x3A,0x25,0x0C,0x00,0x80,0x86,0x3A,0x24,
+0x0C,0x20,0x3A,0x24,0x8C,0x04,0x44,0x92,0x03,0xEC,0x3A,0x22,0x0C,0x24,0x3A,0x20,
+0x94,0x04,0x80,0x29,0x3A,0x20,0x94,0x24,0x3A,0x20,0x14,0x04,0x80,0x01,0x3A,0x20,
+0x14,0x24,0x3A,0x24,0x0C,0x00,0x3A,0x20,0x0C,0x20,0x44,0x02,0x03,0xE0,0x3A,0x23,
+0x0C,0x04,0x3A,0x20,0x0C,0x24,0xAD,0xC0,0xFC,0xCD,0xFC,0x48,0x83,0x81,0x50,0xAF,
+0x80,0x14,0x44,0x12,0x00,0x44,0x80,0xC0,0x80,0x0A,0x81,0x22,0x3A,0x20,0x8C,0x04,
+0x3A,0x20,0x0C,0x24,0xA4,0x48,0xFA,0x40,0xAC,0x40,0x50,0x8F,0x80,0x30,0x84,0x20,
+0xB0,0x08,0x49,0x00,0x28,0x97,0x80,0x08,0x84,0x20,0xFA,0x40,0x49,0x00,0x28,0x92,
+0x5A,0x98,0x01,0x03,0x87,0x80,0xC6,0x04,0x44,0x12,0x06,0x58,0xD5,0x03,0x44,0x12,
+0x06,0x64,0x58,0x04,0x80,0x01,0x8C,0x01,0x84,0xE0,0xB6,0x1F,0x8D,0x21,0x84,0x83,
+0x84,0x61,0x38,0x05,0x1C,0x00,0xF3,0x83,0xF4,0x82,0x38,0x60,0x80,0x00,0xB4,0x1F,
+0x8C,0xC1,0xFF,0x84,0x97,0xB1,0x40,0x63,0x24,0xD6,0x80,0x06,0xF1,0x81,0x49,0xFF,
+0xFF,0x48,0xF4,0x02,0x97,0x78,0x40,0x52,0x90,0xB7,0xF3,0x03,0x38,0x24,0x16,0x02,
+0x8C,0x08,0x41,0xE1,0x28,0x08,0x40,0x20,0x70,0x01,0x40,0x01,0x80,0x0C,0x40,0x60,
+0x18,0xD7,0xB0,0x08,0x94,0x94,0x38,0x00,0x16,0x02,0x88,0x5E,0x40,0x00,0x28,0x08,
+0x88,0xC0,0xB0,0x08,0x8C,0xE1,0x38,0x24,0x16,0x0A,0x38,0x60,0x16,0x0A,0xF1,0x01,
+0x5A,0x78,0x0A,0xD1,0x80,0x28,0x49,0xFF,0xEA,0x8A,0xFC,0xC8,0x80,0x80,0x84,0x40,
+0x9A,0xE0,0x96,0xD8,0xE2,0x61,0xE8,0x08,0x08,0x32,0x00,0x01,0xE2,0x62,0x40,0x31,
+0x3C,0x1B,0x80,0x43,0xD5,0xF6,0x9C,0x11,0x96,0x00,0xDD,0x9E,0xFC,0x40,0x51,0xFF,
+0xFB,0xE0,0x44,0x20,0x04,0x00,0x81,0x40,0x81,0x21,0xB0,0x08,0x84,0x20,0x49,0x00,
+0x28,0x31,0xB1,0x81,0x44,0x12,0x00,0x44,0x80,0x06,0x3A,0x20,0x8C,0x04,0x3A,0x20,
+0x0C,0x24,0xA4,0x48,0xB1,0xC4,0xAC,0x40,0xFA,0x40,0x84,0x20,0x80,0x07,0x49,0x00,
+0x28,0x21,0x84,0x2A,0x4E,0xA3,0x00,0x3D,0x44,0x02,0x06,0x64,0x49,0xFF,0xFF,0xD0,
+0x80,0x20,0x80,0x4A,0x84,0xA3,0x44,0xA2,0x05,0xB8,0x45,0xE2,0x05,0xAC,0x96,0x10,
+0x40,0x00,0x14,0x17,0x40,0x30,0x20,0x08,0xB1,0x08,0x41,0xC2,0x0C,0x00,0x84,0x60,
+0x54,0x81,0x80,0xFF,0xE3,0x01,0xE8,0x12,0x38,0x83,0x08,0x00,0x38,0x85,0x22,0x02,
+0x38,0x84,0x0D,0x01,0x54,0xF4,0x03,0xFF,0x38,0x8E,0x0E,0x02,0x40,0x84,0x28,0x08,
+0x89,0x0F,0x38,0x8E,0x0E,0x0A,0x8C,0x61,0xD5,0xEC,0x38,0x33,0x08,0x00,0x8C,0x41,
+0x38,0x3F,0x0C,0x00,0x8A,0x69,0x54,0x81,0x83,0xFF,0x38,0x33,0x82,0x02,0x40,0x31,
+0xA8,0x08,0x88,0x68,0x38,0x33,0x82,0x0A,0x5A,0x28,0x0A,0xD3,0xD5,0x3B,0x44,0x02,
+0x06,0x58,0x49,0xFF,0xFF,0x95,0x80,0x20,0x84,0x40,0x84,0xA3,0x44,0xA2,0x03,0xEC,
+0x45,0xE2,0x03,0xE0,0x97,0x10,0x40,0x42,0x14,0x97,0x40,0x32,0x20,0x08,0xB0,0x08,
+0x41,0xC0,0x0C,0x00,0x84,0x60,0x54,0x81,0x80,0xFF,0xE3,0x01,0xE8,0x12,0x38,0x83,
+0x08,0x00,0x38,0x85,0x22,0x02,0x38,0x84,0x0D,0x01,0x54,0xF4,0x03,0xFF,0x38,0x8E,
+0x0E,0x02,0x40,0x84,0x28,0x08,0x89,0x0F,0x38,0x8E,0x0E,0x0A,0x8C,0x61,0xD5,0xEC,
+0x38,0x33,0x08,0x00,0x8C,0x41,0x38,0x3F,0x0C,0x00,0x8A,0x69,0x54,0x81,0x83,0xFF,
+0x38,0x33,0x92,0x02,0x40,0x31,0xA8,0x08,0x88,0x68,0x38,0x33,0x92,0x0A,0x5A,0x28,
+0x0A,0xD3,0xB0,0x08,0x49,0xFF,0xEA,0x32,0x80,0x07,0x49,0xFF,0xEA,0x68,0x51,0xFF,
+0x84,0x20,0xFC,0xC0,0xFC,0x20,0x49,0x00,0x0D,0x4C,0x80,0xC0,0x49,0x00,0x0D,0x4C,
+0x80,0xA6,0x50,0x43,0x04,0x80,0x50,0x32,0x80,0x22,0x50,0x20,0x00,0x22,0x84,0x20,
+0x38,0x62,0x85,0x11,0x22,0x71,0x80,0x00,0x38,0x72,0x85,0x09,0x1A,0x61,0xFF,0xFF,
+0x38,0x60,0x05,0x11,0x22,0x71,0x00,0x00,0x38,0x70,0x05,0x09,0x8C,0x21,0x1A,0x61,
+0x7F,0xFF,0x5A,0x18,0x09,0xEF,0x50,0x52,0x80,0x24,0x50,0x00,0x00,0x24,0xDC,0xE4,
+0xFC,0xA0,0xFC,0x40,0x49,0x00,0x0D,0x25,0x80,0xC0,0x49,0x00,0x0D,0x25,0x80,0xA6,
+0x84,0x40,0x52,0x11,0x04,0x5C,0x99,0x31,0x98,0xC2,0x88,0x20,0x50,0x72,0x80,0x24,
+0x22,0x92,0x80,0x00,0x22,0xA2,0x00,0x00,0x1A,0xA2,0x80,0x01,0x1A,0x92,0x00,0x01,
+0x22,0x91,0x80,0x00,0x22,0xA0,0x80,0x00,0x1A,0xA1,0x80,0x01,0x1A,0x90,0x80,0x01,
+0xDF,0xF0,0x50,0x21,0x00,0x24,0x5A,0x2A,0x40,0xE6,0xFC,0xC0,0xFC,0x41,0x80,0xE0,
+0x80,0x02,0xF3,0x81,0x81,0x44,0x80,0xC5,0x81,0x21,0x49,0xFF,0xFB,0x6B,0x81,0x00,
+0xF0,0x01,0x49,0xFF,0xF0,0xC7,0x40,0x44,0x28,0x00,0x95,0x72,0x84,0x60,0x84,0x20,
+0x98,0x99,0x96,0x91,0xC7,0x0B,0x95,0x92,0x88,0xC5,0x38,0xA2,0x09,0x01,0x38,0x60,
+0x18,0x02,0x90,0xC8,0x8A,0xCA,0x38,0x63,0x89,0x09,0x4E,0x92,0x00,0x06,0x38,0x62,
+0x09,0x11,0x38,0x64,0x89,0x09,0x8C,0x21,0x5A,0x18,0x12,0xEC,0x8C,0x72,0x96,0xD9,
+0x5A,0x3A,0x40,0xE7,0x49,0xFF,0xFF,0x88,0x49,0xFF,0xFF,0xAD,0xFC,0xC1,0xFC,0x00,
+0x80,0x43,0x80,0x64,0x84,0x80,0x80,0xA4,0x49,0xFF,0xFF,0xCA,0xFC,0x80,0xFC,0x20,
+0x80,0xE0,0x80,0x02,0x80,0xC1,0x49,0xFF,0xFB,0x35,0x84,0x40,0x96,0x51,0xE2,0x26,
+0xE8,0x07,0x38,0x10,0x09,0x11,0x38,0x13,0x89,0x09,0x8C,0x41,0xD5,0xF8,0xFC,0xA0,
+0xFC,0x20,0xFD,0x30,0x84,0x00,0x49,0xFF,0xFB,0x25,0x95,0xF9,0x80,0xA6,0x88,0xE6,
+0x50,0x00,0x04,0xA4,0xD7,0x06,0x2A,0x10,0x00,0x01,0x1A,0x12,0x80,0x01,0xD5,0xFB,
+0xFC,0xA0,0xFC,0x20,0x80,0xE0,0x80,0x02,0x80,0xC1,0x49,0xFF,0xF0,0x73,0x84,0x40,
+0x96,0x51,0xE2,0x26,0xE8,0x07,0x38,0x10,0x0A,0x02,0x38,0x13,0x8A,0x0A,0x8C,0x41,
+0xD5,0xF8,0xFC,0xA0,0x2E,0x07,0xF0,0xCA,0xDD,0x9E,0xFC,0x01,0x84,0x1F,0xB6,0x1F,
+0xF0,0x81,0x80,0x1F,0x49,0xFF,0xEC,0x42,0x84,0x01,0x49,0xFF,0xEC,0x34,0x84,0x01,
+0x49,0xFF,0xEC,0xAA,0x84,0x22,0x84,0x01,0x80,0x61,0x80,0xA0,0x44,0x40,0x00,0x3F,
+0x84,0x44,0x49,0xFF,0xEB,0xAD,0x84,0x01,0x49,0xFF,0xFA,0x08,0x84,0x01,0x80,0x20,
+0x80,0x40,0x49,0xFF,0xEB,0xEA,0x84,0x0A,0x49,0xFF,0xEC,0x12,0x46,0x00,0x42,0x10,
+0x50,0x00,0x08,0x20,0x80,0x20,0x84,0x40,0x49,0xFF,0xEB,0xFD,0x49,0xFF,0xEE,0x60,
+0x84,0x01,0x49,0xFF,0xEE,0x4F,0x84,0x00,0x49,0xFF,0xFA,0x47,0x44,0x04,0x55,0x08,
+0x44,0x1F,0xFF,0x7F,0xB4,0x40,0xFE,0x56,0xB6,0x20,0xB4,0x20,0x58,0x10,0x80,0x10,
+0xB6,0x20,0x84,0x21,0x49,0xFF,0xEB,0x0B,0x84,0x06,0x3E,0x07,0xF0,0xCA,0xFC,0x81,
+0xFC,0x52,0x44,0x02,0x00,0x5C,0x80,0x20,0x80,0x9F,0x3A,0x20,0x8C,0x04,0x3A,0x22,
+0x0C,0x24,0x50,0xAF,0x80,0x0C,0xA4,0x48,0x3A,0x20,0x0C,0x04,0x80,0x0A,0xAC,0x60,
+0x3A,0x20,0x0C,0x24,0x50,0x9F,0x80,0x18,0xAC,0x40,0x44,0x02,0x00,0x68,0x80,0x29,
+0x3A,0x20,0x14,0x04,0x3A,0x20,0x94,0x24,0xB4,0x00,0xB1,0x90,0xB6,0x01,0x44,0x12,
+0x00,0x7C,0x80,0x01,0x80,0xE6,0x3A,0x20,0x14,0x04,0x81,0xE0,0x3A,0x23,0x94,0x24,
+0x3A,0x27,0x94,0x04,0x3A,0x23,0x94,0x24,0x3A,0x27,0x8C,0x00,0x3A,0x23,0x8C,0x20,
+0x44,0x22,0x00,0xA4,0x51,0xCF,0x80,0x2C,0x80,0xE2,0x83,0xDC,0x3A,0x23,0x94,0x04,
+0x3A,0x2F,0x14,0x24,0xB4,0x67,0xB1,0xDA,0xB6,0x7E,0x3A,0x20,0x94,0x04,0x80,0x27,
+0x81,0x1F,0x3A,0x20,0x94,0x24,0x3A,0x20,0x14,0x04,0x80,0x01,0x3A,0x20,0x14,0x24,
+0x3A,0x27,0x8C,0x00,0x3A,0x20,0x0C,0x20,0x49,0xFF,0xF3,0xBD,0xE6,0x03,0xE9,0x07,
+0x2E,0x07,0xF0,0xCA,0x44,0x10,0x01,0x32,0x38,0x13,0x01,0x09,0x44,0x02,0x06,0x08,
+0x3A,0x2E,0x14,0x04,0x3A,0x20,0x14,0x24,0x80,0x20,0xB4,0x1C,0xB6,0x01,0x44,0x12,
+0x05,0xE0,0x80,0x01,0x3A,0x23,0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x23,0x94,0x04,
+0x3A,0x20,0x14,0x24,0x3A,0x23,0x8C,0x00,0x3A,0x20,0x0C,0x20,0x44,0x02,0x06,0x64,
+0x3A,0x24,0x0C,0x04,0x3A,0x20,0x0C,0x24,0x80,0x20,0x02,0x04,0x00,0x00,0xAC,0x08,
+0x44,0x02,0x06,0x58,0x3A,0x25,0x0C,0x04,0x3A,0x20,0x0C,0x24,0x80,0x20,0x02,0x05,
+0x00,0x00,0xAC,0x08,0x44,0x02,0x06,0x44,0x3A,0x24,0x94,0x04,0x3A,0x20,0x14,0x24,
+0x80,0x20,0xB4,0x09,0xB6,0x01,0x44,0x12,0x06,0x1C,0x80,0x01,0x3A,0x23,0x14,0x04,
+0x3A,0x20,0x14,0x24,0x3A,0x23,0x14,0x04,0x3A,0x20,0x14,0x24,0x3A,0x23,0x0C,0x00,
+0x3A,0x20,0x0C,0x20,0xFC,0xD2,0xFC,0x00,0x49,0xFF,0xEA,0xC9,0xFC,0x80,0xFC,0x00,
+0xC8,0x06,0x44,0x02,0x06,0x1C,0x44,0x12,0x06,0x44,0xD5,0x05,0x44,0x02,0x05,0xE0,
+0x44,0x12,0x06,0x08,0x49,0xFF,0xEB,0xB5,0xFC,0x80,0x84,0x00,0x3E,0x07,0xF0,0xC9,
+0x3E,0x07,0xF0,0xC8,0xDD,0x9E,0xFC,0x00,0x80,0x41,0x84,0x20,0x5A,0x08,0x01,0x03,
+0x84,0x24,0xCA,0x04,0x44,0x02,0x06,0x64,0xD5,0x03,0x44,0x02,0x06,0x58,0x49,0xFF,
+0xED,0xDC,0xFC,0x80,0xFC,0x00,0x80,0xC0,0x5A,0x08,0x01,0x0B,0x84,0x02,0x49,0xFF,
+0xED,0x58,0x80,0x06,0x84,0x20,0x49,0xFF,0xED,0x85,0x80,0x06,0xD5,0x09,0x84,0x00,
+0x49,0xFF,0xED,0x4F,0x84,0x00,0x80,0x20,0x49,0xFF,0xED,0x7C,0x84,0x00,0x49,0xFF,
+0xED,0xAE,0xFC,0x80,0xFC,0x01,0xB6,0x1F,0xF1,0x81,0x49,0xFF,0xFF,0xE5,0xB4,0x1F,
+0xF1,0x01,0x49,0xFF,0xFF,0xD2,0xFC,0x81,0xFC,0x49,0x80,0xE0,0x44,0x02,0x00,0x01,
+0xF0,0x86,0x44,0x01,0x00,0x02,0xF0,0x87,0x44,0x00,0x80,0x04,0xF0,0x88,0x44,0x00,
+0x40,0x08,0xF0,0x89,0x44,0x00,0x20,0x10,0xF0,0x8A,0x44,0x00,0x10,0x20,0xF0,0x8B,
+0x44,0x00,0x08,0x40,0xF0,0x8C,0x44,0x00,0x04,0x80,0xF0,0x8D,0x44,0x00,0x03,0x00,
+0xF0,0x8E,0x3C,0x0D,0xFB,0xC2,0xF0,0x8F,0xF0,0x90,0xF0,0x91,0xC7,0x08,0x44,0x92,
+0x06,0x08,0x44,0xA2,0x05,0xE0,0x85,0x02,0x87,0x85,0xD5,0x07,0x85,0x03,0x44,0x92,
+0x06,0x44,0x44,0xA2,0x06,0x1C,0x83,0x88,0xB0,0x06,0x49,0xFF,0xEB,0xB5,0x80,0xDF,
+0xCF,0x11,0x44,0x02,0x00,0xD0,0x80,0x3F,0x3A,0x20,0x14,0x04,0x3A,0x20,0x94,0x24,
+0x3A,0x20,0x0C,0x00,0x3A,0x20,0x8C,0x20,0x80,0x1F,0x49,0xFF,0xEB,0xDB,0x80,0x07,
+0xD5,0x10,0x44,0x02,0x00,0xE8,0x80,0x3F,0x3A,0x20,0x14,0x04,0x3A,0x20,0x94,0x24,
+0x3A,0x20,0x0C,0x00,0x3A,0x20,0x8C,0x20,0x80,0x1F,0x49,0xFF,0xEB,0xCB,0x84,0x01,
+0x49,0x00,0x0B,0x3D,0x2E,0x47,0xF0,0xCA,0x84,0x00,0x80,0x4A,0x80,0x69,0x80,0xA4,
+0x80,0x20,0x49,0xFF,0xF8,0xBE,0x2E,0x17,0xF0,0xCA,0x84,0x00,0x38,0x15,0x05,0x01,
+0x49,0xFF,0xEC,0x5E,0x2E,0x17,0xF0,0xCA,0x84,0x05,0x38,0x15,0x05,0x01,0x49,0xFF,
+0xEC,0x57,0x2E,0x07,0xF0,0xCA,0x84,0x20,0x38,0x04,0x80,0x00,0x49,0xFF,0xED,0x53,
+0x2E,0x07,0xF0,0xCA,0x84,0x23,0x38,0x04,0x80,0x00,0x49,0xFF,0xED,0x4C,0x44,0x00,
+0x02,0x40,0x49,0xFF,0xEE,0xE2,0x80,0x08,0x49,0xFF,0xEF,0x0A,0xE6,0xE2,0xE8,0x07,
+0x2E,0x07,0xF0,0xCA,0x40,0xFE,0x00,0x06,0x84,0x01,0xE8,0x02,0x84,0x00,0x80,0x27,
+0x49,0xFF,0xFF,0x6A,0xFC,0xC9,0xFC,0x49,0x44,0x12,0x01,0x30,0xB1,0x86,0x80,0xE0,
+0x80,0x06,0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,0x94,0x04,0x3A,0x20,
+0x14,0x24,0x3A,0x20,0x94,0x00,0x3A,0x20,0x14,0x20,0xC7,0x07,0x44,0x82,0x05,0xE0,
+0x85,0x22,0x44,0xA2,0x06,0x08,0xD5,0x06,0x44,0x82,0x06,0x1C,0x85,0x23,0x44,0xA2,
+0x06,0x44,0x84,0x00,0x49,0x00,0x0A,0xE3,0x2E,0x47,0xF0,0xCA,0x84,0x00,0x80,0x20,
+0x80,0x48,0x80,0x6A,0x80,0xA4,0x49,0xFF,0xF8,0x64,0x80,0x06,0x49,0xFF,0xEB,0x2C,
+0x44,0x00,0x02,0x40,0x49,0xFF,0xEE,0xA1,0x80,0x09,0x49,0xFF,0xEE,0xC9,0x46,0x00,
+0x42,0x10,0x50,0x00,0x08,0x20,0x80,0x20,0x84,0x40,0x49,0xFF,0xEA,0x34,0x80,0x1F,
+0xCF,0x04,0x44,0x12,0x00,0xD0,0xD5,0x03,0x44,0x12,0x00,0xE8,0x80,0xC0,0x3A,0x20,
+0x94,0x04,0x3A,0x23,0x14,0x24,0x3A,0x20,0x8C,0x00,0x3A,0x23,0x0C,0x20,0x49,0xFF,
+0xEB,0x41,0xFC,0xC9,0x2E,0x07,0xF0,0xD1,0x96,0x00,0xC0,0x05,0x84,0x00,0x3E,0x07,
+0xF0,0xD1,0x84,0x01,0xDD,0x9E,0x2E,0x17,0xF0,0xD0,0x96,0x48,0xC1,0x05,0x84,0x00,
+0x3E,0x07,0xF0,0xD0,0xD5,0x07,0x2E,0x07,0xF0,0xCF,0x96,0x00,0xC0,0x04,0x3E,0x17,
+0xF0,0xCF,0x84,0x01,0xDD,0x9E,0x2E,0x07,0xF0,0xD4,0xDD,0x9E,0x3E,0x07,0xF0,0xD4,
+0xDD,0x9E,0x2E,0x07,0xF0,0xD3,0xDD,0x9E,0x3E,0x07,0xF0,0xD2,0xDD,0x9E,0xFC,0x00,
+0x84,0x03,0x49,0xFF,0xF9,0x56,0x49,0xFF,0xF8,0x56,0xFC,0x80,0xDD,0x9E,0xFC,0x20,
+0x49,0xFF,0xF5,0x64,0x2E,0x17,0xF0,0xE4,0x5A,0x10,0x01,0x04,0x48,0x00,0x00,0x80,
+0x5A,0x08,0x01,0x06,0x3C,0x0D,0xFC,0x38,0x4E,0x02,0x01,0x08,0x49,0xFF,0xFA,0xAB,
+0x84,0x00,0x80,0x80,0xFA,0x2F,0xFA,0x41,0x84,0x61,0x49,0xFF,0xFA,0x2C,0x44,0x00,
+0x00,0x96,0x49,0xFF,0xF2,0x0D,0x84,0x00,0x80,0x80,0xFA,0x2F,0xFA,0x59,0x84,0x61,
+0x49,0xFF,0xFA,0x21,0xFA,0x04,0x49,0xFF,0xF2,0x03,0x49,0xFF,0xEA,0x89,0x84,0x00,
+0x49,0xFF,0xFB,0x42,0x84,0x00,0x49,0xFF,0xF1,0x46,0x84,0x00,0x49,0xFF,0xFB,0x47,
+0x84,0x40,0x84,0x61,0x44,0x00,0x03,0x41,0x84,0x27,0x49,0x00,0x1E,0x44,0x84,0x00,
+0x84,0x21,0x49,0xFF,0xF0,0x8B,0x84,0x01,0x80,0x20,0x49,0xFF,0xF1,0x01,0x84,0x00,
+0x49,0x00,0x09,0xAB,0x84,0x00,0x49,0x00,0x09,0x8E,0x84,0x00,0x49,0xFF,0xFF,0xA8,
+0x46,0x00,0x00,0x81,0x44,0x60,0x08,0x01,0x83,0x80,0xB9,0x1A,0x44,0x74,0x50,0x28,
+0x92,0x25,0x94,0x4D,0x58,0x10,0x80,0x09,0xB9,0x9A,0xBA,0x1A,0x44,0x1F,0xE0,0xFF,
+0xFE,0x56,0x58,0x10,0x85,0x00,0xB9,0x9A,0xBA,0x1A,0x46,0x1F,0xFE,0x0F,0x50,0x10,
+0x8F,0xFF,0xFE,0x56,0x44,0x25,0x00,0x00,0xFE,0x57,0xB9,0x9A,0xBA,0x1A,0x46,0x1E,
+0x0F,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x56,0x46,0x20,0x30,0x00,0xFE,0x57,0xB9,0x9A,
+0xB9,0x19,0x44,0x21,0x39,0x0A,0x92,0x31,0x40,0x10,0xC4,0x08,0xFE,0x57,0xB9,0x99,
+0xB4,0x07,0x92,0x01,0x96,0x06,0x5A,0x08,0x01,0x04,0x48,0x00,0x00,0x97,0x8E,0xC1,
+0x84,0x01,0x97,0xB1,0x49,0xFF,0xF1,0x9B,0xCE,0xF4,0xFC,0xA0,0x5A,0x10,0x02,0x04,
+0x48,0x00,0x00,0x8C,0xC8,0x05,0x3C,0x0D,0xFC,0x38,0x4E,0x02,0x00,0x87,0x49,0xFF,
+0xFA,0x2A,0x84,0x00,0x80,0x80,0xFA,0x2F,0xFA,0x58,0x84,0x61,0x49,0xFF,0xF9,0xAB,
+0xFA,0x04,0x49,0xFF,0xF1,0x8D,0x84,0x00,0x80,0x80,0xFA,0x2F,0xFA,0x40,0x84,0x61,
+0x49,0xFF,0xF9,0xA1,0x44,0x00,0x00,0x32,0x49,0xFF,0xF1,0x82,0x84,0x01,0x49,0x00,
+0x09,0x44,0x84,0x00,0x49,0x00,0x09,0x27,0x46,0x00,0x00,0x81,0x83,0x80,0xB9,0x1A,
+0x92,0x25,0x94,0x4D,0x58,0x10,0x80,0x03,0xB9,0x9A,0xBA,0x1A,0x44,0x1F,0xE0,0xFF,
+0xFE,0x56,0x58,0x10,0x82,0x00,0xB9,0x9A,0xBA,0x1A,0x46,0x1F,0xFE,0x0F,0x50,0x10,
+0x8F,0xFF,0xFE,0x56,0x44,0x21,0x00,0x00,0xFE,0x57,0xB9,0x9A,0xBA,0x1A,0x46,0x1E,
+0x0F,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x56,0xB9,0x9A,0xB9,0x19,0x84,0x41,0x92,0x31,
+0x40,0x10,0xC4,0x08,0x58,0x10,0xED,0x60,0x80,0x62,0xB9,0x99,0x44,0x00,0x03,0x41,
+0x84,0x20,0x49,0x00,0x1D,0xA0,0x84,0x21,0x84,0x00,0x49,0xFF,0xF0,0x61,0x84,0x01,
+0x49,0xFF,0xF0,0x68,0x84,0x01,0x80,0x20,0x49,0xFF,0xEF,0xE0,0x84,0x01,0x49,0xFF,
+0xF0,0x2D,0x84,0x01,0x49,0xFF,0xF0,0x87,0x49,0xFF,0xF1,0x2D,0xE6,0x03,0xE8,0x03,
+0x49,0xFF,0xF9,0x03,0x49,0xFF,0xEF,0x98,0x84,0x00,0x80,0x40,0x80,0x80,0xFA,0x2F,
+0x84,0x61,0x49,0xFF,0xF9,0x48,0x49,0xFF,0xEF,0x8F,0x84,0x00,0x49,0xFF,0xF4,0x6C,
+0x84,0x00,0x49,0xFF,0xF4,0x72,0x84,0x01,0x49,0xFF,0xFE,0xEA,0x44,0x60,0x08,0x01,
+0x44,0x74,0x50,0x28,0xB4,0x07,0x92,0x01,0x96,0x06,0xC0,0x07,0x8E,0xC1,0x84,0x01,
+0x97,0xB1,0x49,0xFF,0xF1,0x0C,0xCE,0xF7,0xFC,0xA0,0xFC,0x00,0x84,0x00,0x49,0xFF,
+0xF0,0xAF,0x44,0x16,0x00,0x00,0xB4,0x01,0x58,0x00,0x01,0x00,0xB6,0x01,0x44,0x02,
+0x06,0xA4,0x44,0x10,0x00,0x79,0xAE,0x41,0x44,0x1F,0xFF,0x84,0xAE,0x42,0x84,0x39,
+0xAE,0x43,0xFC,0x80,0x84,0x20,0x84,0x40,0x3C,0x1B,0xF8,0x7C,0x44,0x42,0x06,0xA4,
+0x80,0x22,0x96,0xD1,0xE2,0x60,0xE8,0x06,0x38,0x32,0x08,0x00,0x8C,0x41,0x88,0x23,
+0xD5,0xF9,0xFC,0x00,0x44,0x22,0x06,0xA4,0xFE,0x4A,0x96,0x48,0x38,0x11,0x00,0x08,
+0x8C,0x01,0x96,0x01,0x49,0xFF,0xF5,0x48,0x2E,0x07,0xF0,0xFC,0x49,0xFF,0xF5,0x2F,
+0x49,0xFF,0xF0,0xD1,0xE6,0x03,0xE9,0x03,0x49,0xFF,0xF4,0x32,0xFC,0x80,0xFC,0x01,
+0x84,0x00,0x3E,0x07,0xF7,0x06,0x84,0x01,0x3E,0x07,0xEF,0x15,0x84,0x20,0x44,0x00,
+0x01,0x00,0x49,0xFF,0xE7,0x35,0x44,0x00,0x01,0x00,0x84,0x20,0x49,0xFF,0xE7,0x3F,
+0x44,0x00,0x01,0x00,0x84,0x20,0x49,0xFF,0xE7,0x49,0x44,0x40,0x05,0x78,0xB6,0x9F,
+0x44,0x12,0x06,0xA4,0x44,0x22,0x06,0xA2,0x44,0x32,0x06,0xA0,0x44,0x50,0x00,0x90,
+0x44,0x02,0x0C,0x1C,0x49,0xFF,0xF5,0x07,0x44,0x00,0x3F,0x66,0x49,0xFF,0xF5,0x1D,
+0x44,0x00,0x38,0xEC,0x49,0xFF,0xF5,0x1C,0x84,0x00,0x49,0xFF,0xE7,0x4B,0x84,0x00,
+0x3C,0x0B,0xF8,0x7D,0x44,0x00,0x05,0x77,0x49,0xFF,0xFF,0xA6,0x49,0xFF,0xFF,0x8F,
+0xFC,0x81,0xFC,0x00,0xC8,0x03,0xFA,0x1A,0xD5,0x03,0x44,0x00,0x05,0x1B,0x49,0xFF,
+0xFF,0x9B,0xFC,0x80,0xFC,0x00,0x44,0x00,0x01,0x00,0x84,0x20,0x49,0xFF,0xE7,0x16,
+0x84,0x00,0x3C,0x0F,0xFC,0x36,0x3C,0x0D,0xFC,0x36,0x5C,0xF0,0x00,0x64,0xE8,0x05,
+0x3C,0x0D,0xFC,0x36,0x8C,0x01,0xD5,0xF6,0x44,0x00,0x01,0x00,0x84,0x21,0x49,0xFF,
+0xE7,0x05,0xFC,0x80,0x2E,0x07,0xF7,0x06,0xDD,0x9E,0x2E,0x07,0xEF,0x15,0xDD,0x9E,
+0xFC,0x00,0x44,0x10,0x00,0xFF,0x80,0xC0,0x44,0x20,0x05,0x78,0x44,0x02,0x06,0xA4,
+0x49,0x00,0x22,0xF8,0xCE,0x06,0x44,0x00,0x00,0x5A,0x3E,0x07,0xF0,0xFC,0xFC,0x80,
+0x44,0x0F,0xFF,0xA7,0x3E,0x07,0xF0,0xFC,0x84,0x05,0x3E,0x07,0xF0,0xFD,0xFA,0x0C,
+0x3E,0x07,0xF0,0xFE,0xFA,0x10,0x3E,0x07,0xF0,0xFF,0x84,0x1F,0x3E,0x07,0xF1,0x00,
+0xFC,0x80,0xFC,0x00,0x04,0x30,0x00,0x47,0x46,0x40,0x10,0x00,0x40,0x51,0xC0,0x09,
+0xFF,0x1E,0x80,0xC0,0x97,0x5F,0xC4,0x26,0x92,0x74,0x96,0xDF,0x4C,0x32,0xC0,0x09,
+0x9D,0x5D,0x84,0x66,0x40,0x32,0x8C,0xB6,0x97,0x68,0x84,0x01,0xD5,0x0F,0x50,0x00,
+0x01,0x1B,0x9D,0x29,0x84,0x66,0x40,0x42,0x0C,0x76,0x54,0x41,0x80,0x0F,0xA6,0xC3,
+0x54,0x31,0x80,0xF0,0xFE,0xE7,0xAE,0xC3,0x84,0x02,0xAE,0x10,0x84,0x4C,0x80,0x01,
+0x80,0x26,0x42,0x12,0x88,0x73,0x50,0x10,0x80,0x94,0x49,0x00,0x22,0x8D,0x84,0x01,
+0xFC,0x80,0xAF,0x10,0x80,0x04,0xFC,0x80,0xFC,0x42,0x84,0x20,0x80,0xE0,0x84,0x4C,
+0xB0,0x01,0x49,0x00,0x22,0xA7,0x2E,0x07,0xF0,0xD5,0x44,0x82,0x1B,0x14,0x8C,0x01,
+0x3E,0x07,0xF0,0xD5,0x85,0x45,0x84,0xC1,0x87,0x80,0x44,0x92,0x06,0xA4,0x80,0x08,
+0xB0,0x41,0x50,0x2F,0x80,0x03,0x49,0xFF,0xFF,0xB6,0x4E,0x02,0x00,0x9C,0x00,0x14,
+0x01,0x05,0x5A,0x18,0x03,0x08,0x00,0x0F,0x80,0x03,0x5A,0x08,0x01,0x04,0x48,0x00,
+0x00,0x92,0x8E,0x22,0xE6,0x22,0x4E,0xF2,0x00,0x8E,0x3C,0x0D,0xFB,0xCA,0x96,0x1E,
+0xC8,0x06,0x44,0x20,0x00,0x5F,0x44,0x10,0x00,0x3C,0xD5,0x05,0x44,0x20,0x00,0xC8,
+0x44,0x10,0x00,0x58,0xF0,0x01,0x5E,0xF0,0x1B,0x59,0xE9,0x21,0x40,0x10,0x08,0x36,
+0x5E,0xF0,0x81,0x00,0xE9,0x03,0x44,0x10,0x00,0xFF,0x50,0x00,0xFF,0x92,0xE6,0x14,
+0xE8,0x02,0x8C,0x34,0x50,0x00,0xFF,0xA6,0xE6,0x14,0xE8,0x04,0x50,0x10,0x80,0x28,
+0xD5,0x2C,0x50,0x00,0xFF,0x69,0xE6,0x14,0xE8,0x03,0x8E,0x34,0xD5,0x26,0x50,0x00,
+0xFF,0x55,0xE6,0x14,0xE8,0x22,0x50,0x10,0xFF,0xD8,0xD5,0x1F,0x40,0x10,0x04,0x36,
+0x5E,0xF0,0x81,0x00,0xE9,0x03,0x44,0x10,0x00,0xFF,0x50,0x00,0xFF,0xE2,0xE6,0x0A,
+0xE8,0x03,0x8C,0x2A,0xD5,0x12,0x50,0x00,0xFF,0xEC,0xE6,0x0A,0xE8,0x03,0x8C,0x34,
+0xD5,0x0C,0x50,0x20,0xFF,0xCD,0xE6,0x4A,0xE8,0x03,0x8E,0x2A,0xD5,0x06,0x50,0x20,
+0xFF,0xC3,0xE6,0x4A,0x40,0x10,0x3C,0x1B,0x00,0x4F,0x80,0x0C,0x5A,0x48,0x01,0x3B,
+0x22,0x0F,0x80,0x04,0x22,0x2F,0x80,0x05,0xCF,0x1F,0x40,0x31,0x20,0x0A,0x54,0x41,
+0x80,0x0F,0x40,0x30,0x10,0x0A,0x54,0x31,0x80,0xF0,0xFE,0xE7,0x38,0x34,0x98,0x08,
+0x9C,0xF1,0x96,0x00,0x38,0x04,0x8C,0x08,0x9C,0x32,0x96,0x90,0x5E,0xF0,0x80,0xFF,
+0x38,0x24,0x80,0x08,0x9C,0x33,0xE9,0x03,0x44,0x10,0x00,0xFE,0x96,0x48,0x38,0x14,
+0x80,0x08,0x87,0x81,0xD5,0x17,0x40,0x11,0x20,0x0A,0x54,0x30,0x80,0x0F,0x40,0x10,
+0x10,0x0A,0x54,0x10,0x80,0xF0,0xFE,0x5F,0x38,0x14,0xA8,0x08,0x50,0x15,0x00,0x01,
+0x96,0x00,0x38,0x04,0x84,0x08,0x50,0x05,0x00,0x02,0x96,0x90,0x38,0x24,0x80,0x08,
+0x83,0x84,0x8C,0xC4,0x50,0x84,0x01,0x24,0x8D,0x43,0x5A,0x60,0x29,0x04,0x48,0xFF,
+0xFF,0x58,0x80,0x1C,0xFC,0xC2,0xFA,0xB3,0x44,0x22,0x06,0xA4,0x44,0x30,0x04,0xA3,
+0x80,0x80,0x0A,0x10,0x00,0x01,0x92,0x28,0x38,0x11,0x14,0x08,0x9C,0x69,0xA7,0x20,
+0x8C,0xA2,0x38,0x41,0x04,0x08,0xDB,0xF5,0xDD,0x9E,0x44,0x50,0x04,0xA3,0x44,0x22,
+0x06,0xA4,0x44,0x30,0x05,0x07,0x80,0x80,0x0A,0x10,0x00,0x01,0x92,0x28,0x38,0x11,
+0x14,0x08,0x9C,0x69,0xA7,0x20,0x8C,0xA2,0x38,0x41,0x04,0x08,0xDB,0xF5,0xDD,0x9E,
+0xC8,0x03,0x3E,0x17,0xF1,0x25,0xDD,0x9E,0xFC,0x00,0x49,0xFF,0xF3,0xA3,0xFC,0x80,
+0xFC,0x00,0x49,0xFF,0xF3,0x9C,0xFC,0x80,0xFC,0x20,0x49,0x00,0x07,0x6D,0x2E,0x17,
+0xF7,0x04,0xC9,0x23,0x84,0x52,0x3E,0x27,0xF0,0xFC,0x44,0x32,0x06,0xA4,0x80,0x40,
+0x44,0x60,0x00,0x4D,0x84,0x01,0x44,0x50,0x04,0x81,0x2E,0x77,0xEF,0xC8,0x9D,0x01,
+0xC7,0x06,0x38,0x11,0x80,0x08,0x38,0x61,0x90,0x08,0xD5,0x07,0xA7,0xD1,0x38,0x71,
+0x80,0x08,0xA7,0xD0,0x38,0x71,0x90,0x08,0x8C,0x02,0x8C,0x42,0x4C,0x02,0xFF,0xEF,
+0x84,0x20,0x3E,0x17,0xEF,0xC8,0xD5,0x12,0x5A,0x18,0x01,0x13,0x84,0x12,0x3E,0x07,
+0xF0,0xFC,0x84,0x40,0x80,0x01,0x44,0x12,0x06,0xA4,0x9C,0xC1,0x38,0x20,0x80,0x08,
+0x8C,0x02,0x38,0x20,0x8C,0x08,0x5A,0x08,0x65,0xFA,0x49,0xFF,0xFD,0xFD,0xFC,0xA0,
+0xFC,0x00,0x2E,0x07,0xEF,0x14,0x3E,0x07,0xF0,0xFC,0x84,0x01,0x49,0xFF,0xFD,0xF4,
+0x49,0xFF,0xF2,0xE5,0xFC,0x80,0xFC,0x00,0x3C,0x13,0xF8,0x7D,0x2E,0x07,0xF6,0x74,
+0x96,0x49,0x96,0x00,0x44,0x32,0x0C,0x1C,0x5A,0x18,0x03,0x12,0x5A,0x00,0x53,0x04,
+0x48,0x00,0x04,0x50,0x2E,0x07,0xF6,0x75,0x2E,0x17,0xF6,0x76,0x40,0x00,0x20,0x08,
+0xFE,0x0F,0x50,0x00,0x7F,0xB8,0xE6,0x01,0x48,0x00,0x02,0x3A,0x5A,0x18,0x01,0x36,
+0x5A,0x08,0x01,0x04,0x48,0x00,0x02,0x04,0x5A,0x08,0x03,0x04,0x48,0x00,0x02,0x02,
+0x5A,0x08,0x20,0x04,0x48,0x00,0x02,0x00,0x5A,0x08,0x28,0x04,0x48,0x00,0x01,0xFF,
+0x5A,0x08,0x21,0x04,0x48,0x00,0x01,0xFE,0x5A,0x08,0x22,0x04,0x48,0x00,0x01,0xFD,
+0x5A,0x08,0x23,0x04,0x48,0x00,0x01,0xFC,0x5A,0x08,0x15,0x04,0x48,0x00,0x01,0xFB,
+0x5A,0x08,0x17,0x04,0x48,0x00,0x01,0xFA,0x5A,0x08,0x04,0x04,0x48,0x00,0x01,0xF9,
+0x5A,0x08,0xF3,0x04,0x48,0x00,0x01,0xF8,0x5A,0x00,0xD0,0x04,0x48,0x00,0x04,0x12,
+0x44,0xF0,0x00,0x41,0x48,0x00,0x02,0x04,0x5A,0x18,0x02,0x39,0x5A,0x08,0xF6,0x0C,
+0x2E,0x07,0xF6,0x75,0x5A,0x00,0xF2,0x04,0x48,0x00,0x04,0x04,0x44,0xF0,0x00,0x36,
+0x48,0x00,0x01,0xF6,0x5A,0x08,0x61,0x13,0x2E,0x17,0xF6,0x75,0x96,0x48,0xC1,0x08,
+0x2E,0x17,0xF6,0x75,0x96,0x48,0x5A,0x10,0x01,0x04,0x48,0x00,0x01,0xD8,0x44,0x00,
+0x01,0x00,0x49,0xFF,0xE5,0x03,0x48,0x00,0x01,0xD2,0x5A,0x00,0x62,0x04,0x48,0x00,
+0x03,0xE9,0x2E,0x07,0xF6,0x75,0x96,0x00,0xC0,0x0D,0x2E,0x07,0xF6,0x75,0x96,0x00,
+0x5A,0x00,0x01,0x09,0x2E,0x07,0xF6,0x75,0x96,0x00,0x5A,0x00,0x02,0x04,0x48,0x00,
+0x01,0xC1,0x49,0xFF,0xF2,0x00,0x48,0x00,0x01,0xBD,0x5A,0x18,0x10,0x68,0x5A,0x00,
+0xF1,0x04,0x48,0x00,0x03,0xD6,0x84,0x00,0x44,0x12,0x06,0x90,0x38,0x21,0x80,0x00,
+0x38,0x20,0x80,0x08,0x8C,0x01,0x5A,0x08,0x10,0xFB,0x2E,0x07,0xF6,0x75,0x2E,0x57,
+0xF6,0x76,0x96,0x00,0x96,0x68,0x40,0x50,0x20,0x08,0x5A,0x00,0x10,0x06,0x5A,0x00,
+0x1D,0x04,0xFF,0x4F,0xD5,0x02,0x97,0x69,0x44,0x00,0x1D,0x00,0xD0,0x3B,0x5C,0xF2,
+0x9D,0x01,0xE8,0x1B,0x44,0x00,0x04,0x00,0x4C,0x50,0x03,0xAF,0x5C,0xF2,0x84,0x01,
+0xE8,0x09,0x5A,0x51,0x00,0x04,0x48,0x00,0x03,0xA5,0x44,0xF0,0x00,0x1C,0x48,0x00,
+0x01,0x97,0x44,0x00,0x05,0x00,0xD0,0x22,0x44,0x00,0x08,0x00,0x4C,0x50,0x43,0x9A,
+0x44,0xF0,0x00,0x24,0x48,0x00,0x01,0x8C,0x44,0x00,0x32,0x00,0xD0,0x1F,0x5C,0xF2,
+0xB2,0x01,0xE8,0x09,0x44,0x00,0x30,0x00,0x4C,0x50,0x43,0x8C,0x44,0xF0,0x00,0x3C,
+0x48,0x00,0x01,0x7E,0x44,0x00,0x33,0x00,0xD0,0x15,0x44,0x00,0x34,0x00,0x4C,0x50,
+0x43,0x81,0x44,0xF0,0x00,0x3B,0x48,0x00,0x01,0x73,0x44,0xF0,0x00,0x20,0x48,0x00,
+0x01,0x6F,0x44,0xF0,0x00,0x37,0x48,0x00,0x01,0x6B,0x44,0xF0,0x00,0x38,0x48,0x00,
+0x01,0x67,0x44,0xF0,0x00,0x3A,0x48,0x00,0x01,0x63,0x5A,0x00,0x01,0x04,0x48,0x00,
+0x03,0x69,0x2E,0x07,0xF6,0x75,0x5A,0x00,0x0A,0x04,0x48,0x00,0x03,0x63,0x2E,0x07,
+0xF6,0x76,0x5A,0x08,0x08,0x15,0x5A,0x18,0x06,0x13,0x2E,0x37,0xF6,0x77,0x2E,0x07,
+0xF6,0x78,0x2E,0x27,0xF6,0x79,0x40,0x00,0x20,0x08,0x88,0x03,0x40,0x21,0x40,0x08,
+0x88,0x02,0x3C,0x0F,0xFB,0xC4,0x44,0xF0,0x00,0x14,0xD5,0x02,0x85,0xE0,0x2E,0x27,
+0xF6,0x76,0x5A,0x28,0x09,0x1A,0x5A,0x18,0x04,0x18,0x2E,0x17,0xF6,0x77,0x5A,0x18,
+0x01,0x04,0x48,0x00,0x01,0x2A,0x2E,0x17,0xF6,0x77,0x5A,0x18,0x02,0x04,0x48,0x00,
+0x01,0x27,0x2E,0x17,0xF6,0x77,0x5A,0x10,0x03,0x04,0x48,0x00,0x01,0x29,0x44,0xF0,
+0x00,0x17,0x48,0x00,0x01,0x25,0x2E,0x27,0xF6,0x76,0x5A,0x28,0x10,0x28,0x5A,0x18,
+0x06,0x26,0x2E,0x17,0xF6,0x77,0x5A,0x10,0x01,0x06,0x2E,0x17,0xF6,0x77,0x5A,0x18,
+0x02,0x0D,0x2E,0x27,0xF6,0x78,0x2E,0x17,0xF6,0x79,0x40,0x10,0xA0,0x08,0x88,0x22,
+0x3C,0x1B,0xF7,0x87,0x48,0x00,0x01,0x0C,0x2E,0x17,0xF6,0x77,0x5A,0x10,0x03,0x04,
+0x48,0x00,0x01,0x06,0x2E,0x27,0xF6,0x78,0x2E,0x17,0xF6,0x79,0x40,0x10,0xA0,0x08,
+0x88,0x22,0x3C,0x1B,0xF7,0x86,0x48,0x00,0x00,0xFB,0x2E,0x27,0xF6,0x76,0x5A,0x28,
+0x11,0x1A,0x5A,0x18,0x04,0x18,0x2E,0x17,0xF6,0x77,0x5A,0x18,0x01,0x04,0x48,0x00,
+0x00,0xEA,0x2E,0x17,0xF6,0x77,0x5A,0x18,0x02,0x04,0x48,0x00,0x00,0xE7,0x2E,0x17,
+0xF6,0x77,0x5A,0x10,0x03,0x04,0x48,0x00,0x00,0xE3,0x44,0xF0,0x00,0x1A,0x48,0x00,
+0x00,0xDF,0x2E,0x27,0xF6,0x76,0x5A,0x20,0x12,0x04,0x48,0x00,0x00,0xD9,0x5A,0x10,
+0x19,0x04,0x48,0x00,0x00,0xD5,0x2E,0x17,0xF6,0x77,0x5A,0x18,0x01,0x46,0x2E,0x17,
+0xF6,0x78,0x3E,0x17,0xEE,0x20,0x2E,0x17,0xF6,0x79,0x3E,0x17,0xEE,0x22,0x2E,0x17,
+0xF6,0x7A,0x3E,0x17,0xEE,0x21,0x2E,0x17,0xF6,0x7B,0x2E,0x27,0xF6,0x7C,0x40,0x10,
+0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF7,0x0F,0x2E,0x17,0xF6,0x7D,0x2E,0x27,0xF6,0x7E,
+0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF7,0x0E,0x2E,0x17,0xF6,0x7F,0x2E,0x27,
+0xF6,0x80,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF7,0x12,0x2E,0x17,0xF6,0x81,
+0x2E,0x27,0xF6,0x82,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF7,0x13,0x2E,0x17,
+0xF6,0x83,0x2E,0x27,0xF6,0x84,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF7,0x14,
+0x2E,0x17,0xF6,0x85,0x2E,0x27,0xF6,0x86,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,
+0xF7,0x15,0x48,0x00,0x00,0x8D,0x2E,0x17,0xF6,0x77,0x5A,0x18,0x02,0x04,0x48,0x00,
+0x00,0x87,0x2E,0x17,0xF6,0x77,0x5A,0x10,0x03,0x04,0x48,0x00,0x00,0x81,0x2E,0x17,
+0xF6,0x78,0x3E,0x17,0xEE,0x14,0x2E,0x17,0xF6,0x79,0x3E,0x17,0xEE,0x15,0x2E,0x17,
+0xF6,0x7A,0x3E,0x17,0xEE,0x16,0x2E,0x17,0xF6,0x7B,0x2E,0x27,0xF6,0x7C,0x40,0x10,
+0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF7,0x08,0x2E,0x17,0xF6,0x7D,0x2E,0x27,0xF6,0x7E,
+0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF7,0x09,0x2E,0x17,0xF6,0x7F,0x2E,0x27,
+0xF6,0x80,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF7,0x04,0x2E,0x17,0xF6,0x81,
+0x2E,0x27,0xF6,0x82,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF7,0x05,0x2E,0x17,
+0xF6,0x83,0x2E,0x27,0xF6,0x84,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,0xF7,0x06,
+0x2E,0x17,0xF6,0x85,0x2E,0x27,0xF6,0x86,0x40,0x10,0xA0,0x08,0x88,0x22,0x3C,0x1B,
+0xF7,0x07,0x2E,0x17,0xF6,0x87,0x3E,0x17,0xEE,0x17,0x2E,0x17,0xF6,0x88,0x3E,0x17,
+0xEE,0x18,0x2E,0x17,0xF6,0x89,0x3E,0x17,0xEE,0x19,0xD5,0x31,0x85,0xE2,0xD5,0x2F,
+0x85,0xE5,0xD5,0x2D,0x44,0xF0,0x00,0x29,0xD5,0x2A,0x44,0xF0,0x00,0x2D,0xD5,0x27,
+0x44,0xF0,0x00,0x2A,0xD5,0x24,0x44,0xF0,0x00,0x2B,0xD5,0x21,0x44,0xF0,0x00,0x2C,
+0xD5,0x1E,0x44,0xF0,0x00,0x2E,0xD5,0x1B,0x44,0xF0,0x00,0x2F,0xD5,0x18,0x44,0xF0,
+0x00,0x42,0xD5,0x15,0x44,0xF0,0x00,0x30,0xD5,0x12,0x44,0xF0,0x00,0x3F,0xD5,0x0F,
+0x44,0xF0,0x00,0x40,0xD5,0x0C,0x44,0xF0,0x00,0x15,0xD5,0x09,0x44,0xF0,0x00,0x16,
+0xD5,0x06,0x44,0xF0,0x00,0x18,0xD5,0x03,0x44,0xF0,0x00,0x19,0x84,0x20,0x3C,0x1F,
+0xFB,0x8C,0x5A,0xF8,0x01,0x1B,0x44,0x0F,0xFF,0xA7,0x3E,0x07,0xF0,0xFC,0x84,0x05,
+0x3E,0x07,0xF0,0xFD,0xFA,0x0C,0x3E,0x07,0xF0,0xFE,0xFA,0x22,0xFA,0x10,0x3E,0x07,
+0xF0,0xFF,0x3E,0x07,0xF1,0x00,0x3E,0x17,0xF1,0x01,0x3E,0x07,0xF1,0x02,0x3E,0x17,
+0xF1,0x03,0x84,0x08,0x48,0x00,0x01,0xE1,0x5A,0xF8,0x02,0x30,0x2E,0x07,0xF7,0x06,
+0x44,0x1F,0xFF,0x81,0x3E,0x17,0xF0,0xFC,0x3E,0x07,0xF0,0xFD,0xC8,0x0D,0x44,0x10,
+0x00,0x5A,0x3E,0x17,0xF0,0xFE,0x3E,0x07,0xF0,0xFF,0xFA,0x1B,0x3E,0x07,0xF1,0x00,
+0x84,0x05,0x48,0x00,0x01,0xCA,0x44,0x0F,0xFF,0xA7,0x3E,0x07,0xF0,0xFE,0x84,0x05,
+0x3E,0x07,0xF0,0xFF,0xFA,0x0C,0x3E,0x07,0xF1,0x00,0xFA,0x22,0xFA,0x10,0x3E,0x07,
+0xF1,0x01,0x3E,0x17,0xF1,0x02,0x3E,0x07,0xF1,0x03,0x3E,0x17,0xF1,0x04,0x3E,0x07,
+0xF1,0x05,0x84,0x0A,0x48,0x00,0x01,0xB1,0x5A,0xF8,0x05,0x0A,0x84,0x01,0x3E,0x07,
+0xF0,0xFC,0x3E,0x17,0xF0,0xFD,0x3E,0x17,0xF0,0xFE,0xD5,0x64,0x5A,0xF8,0x29,0x26,
+0xFA,0x10,0x84,0x7F,0x84,0x47,0x3E,0x07,0xF0,0xFC,0x3E,0x17,0xF0,0xFD,0x3E,0x17,
+0xF0,0xFE,0x3E,0x37,0xF0,0xFF,0x3E,0x27,0xF1,0x00,0x3E,0x37,0xF1,0x01,0x3E,0x27,
+0xF1,0x02,0x84,0x6A,0xFA,0x42,0x3E,0x27,0xF1,0x03,0x3E,0x07,0xF1,0x04,0x3E,0x37,
+0xF1,0x05,0x3E,0x17,0xF1,0x06,0x3E,0x27,0xF1,0x07,0x3E,0x07,0xF1,0x08,0x3E,0x17,
+0xF1,0x09,0x84,0x0E,0x48,0x00,0x01,0x81,0x5A,0xF8,0x2A,0x1D,0xFA,0x11,0x3E,0x07,
+0xF0,0xFC,0x44,0x2F,0xFF,0x81,0x84,0x08,0xFA,0x6A,0x3E,0x27,0xF0,0xFD,0x3E,0x07,
+0xF0,0xFE,0x3E,0x17,0xF0,0xFF,0x3E,0x37,0xF1,0x00,0x3E,0x27,0xF1,0x01,0x3E,0x07,
+0xF1,0x02,0x84,0x01,0x3E,0x17,0xF1,0x03,0x3E,0x07,0xF1,0x04,0x84,0x09,0x48,0x00,
+0x01,0x64,0x5A,0xF8,0x2B,0x10,0xFA,0x12,0x3E,0x07,0xF0,0xFC,0x84,0x05,0x3E,0x07,
+0xF0,0xFD,0x84,0x04,0x3E,0x07,0xF0,0xFE,0x3E,0x17,0xF0,0xFF,0x84,0x04,0x48,0x00,
+0x01,0x54,0x5A,0xF8,0x42,0x05,0x2E,0x00,0x01,0x84,0xD5,0x17,0x5A,0xF8,0x2C,0x0E,
+0xFA,0x13,0x3E,0x07,0xF0,0xFC,0x84,0x01,0x3E,0x07,0xF0,0xFD,0x3E,0x17,0xF0,0xFE,
+0x84,0x06,0x3E,0x07,0xF0,0xFF,0xD5,0xEB,0x5A,0xF8,0x2E,0x05,0x3E,0x17,0xF0,0xFC,
+0xD5,0x06,0x5A,0xF8,0x2F,0x08,0x84,0x00,0x3E,0x07,0xF0,0xFC,0x84,0x01,0x48,0x00,
+0x01,0x34,0x5A,0xF8,0x2D,0x2F,0xFA,0x18,0x3E,0x07,0xF0,0xFC,0x84,0x62,0x84,0x00,
+0x84,0x26,0x84,0x4C,0x3E,0x37,0xF0,0xFD,0x3E,0x07,0xF0,0xFE,0x3E,0x17,0xF0,0xFF,
+0x3E,0x27,0xF1,0x00,0x3E,0x37,0xF1,0x01,0x3E,0x07,0xF1,0x02,0x84,0x64,0x3E,0x17,
+0xF1,0x03,0x3E,0x27,0xF1,0x04,0x84,0x41,0x3E,0x27,0xF1,0x05,0x3E,0x07,0xF1,0x06,
+0x3E,0x37,0xF1,0x07,0x3E,0x37,0xF1,0x08,0x3E,0x27,0xF1,0x09,0x3E,0x07,0xF1,0x0A,
+0x84,0x03,0x3E,0x07,0xF1,0x0B,0x3E,0x17,0xF1,0x0C,0xFA,0x01,0x48,0x00,0x01,0x05,
+0x5A,0xF8,0x1B,0x0A,0x84,0x01,0x3E,0x07,0xF7,0x06,0x84,0x01,0x49,0xFF,0xED,0xB1,
+0x48,0x00,0x01,0x04,0x5A,0xF8,0x30,0x06,0x49,0xFF,0xFC,0x9C,0x48,0x00,0x00,0xFE,
+0x5A,0xF8,0x36,0x06,0x49,0xFF,0xFC,0x5A,0x48,0x00,0x00,0xF8,0x5A,0xF8,0x41,0x0E,
+0x44,0x0F,0xFF,0xD0,0x3E,0x07,0xF0,0xFC,0x3C,0x03,0xF8,0x6F,0x96,0x40,0x3E,0x17,
+0xF0,0xFD,0x92,0x08,0x48,0x00,0x00,0xDE,0x5A,0xF8,0x1C,0x08,0x44,0x00,0x00,0x50,
+0x3E,0x07,0xEF,0x14,0x84,0x01,0xD5,0x38,0x5A,0xF8,0x1F,0x08,0x44,0x00,0x00,0x50,
+0x3E,0x07,0xEF,0x14,0x84,0x04,0xD5,0x30,0x5A,0xF8,0x20,0x08,0x44,0x00,0x00,0x50,
+0x3E,0x07,0xEF,0x14,0x84,0x05,0xD5,0x28,0x5A,0xF8,0x24,0x08,0x44,0x00,0x00,0x50,
+0x3E,0x07,0xEF,0x14,0x84,0x09,0xD5,0x20,0x5A,0xF8,0x37,0x08,0x44,0x00,0x00,0x50,
+0x3E,0x07,0xEF,0x14,0x84,0x0F,0xD5,0x18,0x5A,0xF8,0x38,0x08,0x44,0x00,0x00,0x50,
+0x3E,0x07,0xEF,0x14,0xFA,0x00,0xD5,0x10,0x5A,0xF8,0x3A,0x08,0x44,0x00,0x00,0x50,
+0x3E,0x07,0xEF,0x14,0xFA,0x02,0xD5,0x08,0x5A,0xF8,0x3B,0x0B,0x44,0x00,0x00,0x50,
+0x3E,0x07,0xEF,0x14,0xFA,0x03,0x3E,0x07,0xF7,0x05,0x48,0x00,0x00,0xA7,0x5A,0xF0,
+0x3C,0x04,0x48,0x00,0x00,0x8A,0x84,0x11,0x3E,0x07,0xF0,0xFC,0x44,0x00,0x00,0x30,
+0x3E,0x07,0xF0,0xFD,0x84,0x01,0x3E,0x07,0xF0,0xFE,0x44,0x00,0x00,0x64,0x3E,0x07,
+0xF0,0xFF,0x84,0x00,0x3E,0x07,0xF1,0x00,0x84,0x1F,0x3E,0x07,0xF1,0x01,0x3E,0x07,
+0xF1,0x02,0x46,0x00,0x00,0x81,0x44,0x10,0x00,0x9C,0x04,0x00,0x00,0x19,0x85,0xEA,
+0x40,0x00,0x3C,0x08,0x92,0x0F,0xFE,0x0C,0x50,0x00,0x03,0xA8,0x40,0x00,0x3C,0x17,
+0x8C,0x19,0x44,0xF0,0x03,0xE8,0x40,0x00,0x3C,0x17,0x96,0x01,0x84,0x27,0x5C,0xF0,
+0x07,0xD0,0x3E,0x17,0xF1,0x03,0x80,0x20,0xE8,0x03,0x44,0x10,0x07,0xD0,0x96,0x48,
+0x3E,0x17,0xF1,0x04,0x84,0x10,0x84,0x20,0x3E,0x17,0xF1,0x05,0x84,0x41,0x3E,0x07,
+0xF1,0x06,0x44,0x4F,0xFF,0x90,0x84,0x1F,0x84,0x6A,0x3E,0x37,0xF1,0x07,0x3E,0x07,
+0xF1,0x08,0x3E,0x07,0xF1,0x09,0x3E,0x27,0xF1,0x0A,0x3E,0x47,0xF1,0x0B,0x3E,0x07,
+0xF1,0x0C,0x3E,0x07,0xF1,0x0D,0x3E,0x27,0xF1,0x0E,0x3E,0x47,0xF1,0x0F,0x44,0x4F,
+0xFF,0xC0,0x3E,0x27,0xF1,0x10,0x3E,0x47,0xF1,0x11,0x84,0x82,0x3E,0x47,0xF1,0x12,
+0x44,0x4F,0xFF,0x80,0x3E,0x47,0xF1,0x13,0x84,0x8F,0x3E,0x17,0xF1,0x14,0x3E,0x17,
+0xF1,0x15,0x3E,0x17,0xF1,0x16,0x3E,0x27,0xF1,0x17,0x3E,0x47,0xF1,0x18,0x84,0x84,
+0x3E,0x47,0xF1,0x19,0xFA,0x9D,0x3E,0x47,0xF1,0x1A,0x3E,0x37,0xF1,0x1B,0x3E,0x27,
+0xF1,0x1C,0x84,0x4C,0x3E,0x27,0xF1,0x1D,0x84,0x46,0x3E,0x27,0xF1,0x1E,0x3E,0x17,
+0xF1,0x1F,0x3E,0x07,0xF1,0x20,0x3E,0x07,0xF1,0x21,0x3E,0x07,0xF1,0x22,0x3E,0x07,
+0xF1,0x23,0xFA,0x18,0xD5,0x11,0x5A,0xF8,0x3D,0x15,0x84,0x0F,0x3E,0x07,0xF0,0xFC,
+0x84,0x01,0x3E,0x07,0xF0,0xFD,0x44,0x04,0x50,0x28,0xB4,0x00,0x92,0x01,0x96,0x06,
+0x3E,0x07,0xF0,0xFE,0x84,0x03,0x49,0xFF,0xF9,0x9F,0x49,0xFF,0xEE,0x90,0xD5,0x05,
+0x5A,0xF8,0x3E,0x04,0x49,0xFF,0xF8,0x6D,0x84,0x01,0x3C,0x0F,0xFB,0x8C,0xFC,0x80,
+0x85,0xE0,0x48,0xFF,0xFD,0xF5,0x44,0xF0,0x00,0x1F,0x48,0xFF,0xFD,0xF1,0x5A,0x08,
+0x0F,0xF5,0x2E,0x07,0xF6,0x75,0x5A,0x00,0x01,0x0E,0x2E,0x07,0xF6,0x75,0x5A,0x08,
+0x02,0xF1,0x2E,0x07,0xF6,0x77,0x3E,0x07,0xF0,0xE4,0x44,0xF0,0x00,0x3E,0x48,0xFF,
+0xFD,0xDF,0x44,0xF0,0x00,0x3D,0x48,0xFF,0xFD,0xDB,0xFC,0x00,0x2E,0x07,0xEF,0x14,
+0x5A,0x08,0x52,0x06,0x44,0x00,0x00,0x51,0x3E,0x07,0xEF,0x14,0x2E,0x07,0xF7,0x05,
+0x5A,0x08,0x01,0x08,0x84,0xC0,0x3E,0x67,0xF7,0x04,0x49,0x00,0x07,0xC6,0xD5,0x32,
+0x5A,0x08,0x04,0x08,0x84,0xC0,0x3E,0x67,0xF7,0x04,0x49,0x00,0x09,0xD3,0xD5,0x2A,
+0x5A,0x08,0x05,0x08,0x84,0xC0,0x3E,0x67,0xF7,0x04,0x49,0x00,0x0D,0x94,0xD5,0x22,
+0x5A,0x00,0x09,0xFA,0x5A,0x08,0x0F,0x0E,0x2E,0x07,0xF6,0x76,0x84,0xC0,0x2E,0x17,
+0xF6,0x77,0x2E,0x27,0xF6,0x78,0x3E,0x67,0xF7,0x04,0x49,0x00,0x0F,0x1E,0xD5,0x12,
+0x54,0x10,0x00,0xFD,0x5A,0x18,0x10,0x08,0x84,0xC0,0x3E,0x67,0xF7,0x04,0x49,0x00,
+0x10,0x9B,0xD5,0x08,0x5A,0x08,0x13,0x09,0x84,0xC0,0x3E,0x67,0xF7,0x04,0x49,0x00,
+0x12,0xEB,0x3E,0x67,0xF7,0x05,0xFC,0x80,0xFC,0x00,0x44,0x00,0x00,0x64,0x49,0xFF,
+0xDD,0x6A,0x44,0x00,0x23,0x56,0x49,0xFF,0xDD,0x71,0x44,0x00,0x1F,0x57,0x49,0xFF,
+0xDD,0x78,0x44,0x00,0x01,0x90,0x49,0xFF,0xDD,0x7F,0xFC,0x80,0xFC,0x40,0x51,0xFF,
+0xFA,0xE0,0x84,0x20,0xFA,0x50,0xB0,0x10,0x49,0x00,0x1C,0x9C,0xB1,0x98,0x44,0x02,
+0x01,0x60,0x80,0x26,0x3A,0x20,0x14,0x04,0x3A,0x20,0x94,0x24,0x3A,0x20,0x14,0x00,
+0xB1,0xE0,0x44,0x02,0x01,0x80,0x3A,0x20,0x94,0x20,0x80,0x27,0x3A,0x20,0x14,0x04,
+0x3A,0x20,0x94,0x24,0x3A,0x20,0x14,0x00,0x3A,0x20,0x94,0x20,0x44,0x12,0x01,0xA0,
+0xB0,0x0C,0x3A,0x20,0x94,0x00,0x44,0x12,0x01,0xB0,0x3A,0x20,0x14,0x20,0xB0,0x07,
+0x3A,0x20,0x8C,0x00,0x3A,0x20,0x0C,0x20,0x44,0x02,0x01,0xB8,0x50,0x8F,0x80,0x24,
+0x3A,0x20,0x10,0x00,0x3A,0x24,0x10,0x20,0x85,0x40,0x39,0xC4,0x28,0x00,0x40,0x0E,
+0x00,0x13,0xC0,0x13,0x5A,0x00,0x03,0x12,0xB0,0x10,0x38,0x00,0x72,0x02,0xC8,0x0D,
+0x38,0x03,0x72,0x02,0x40,0x90,0x04,0x08,0x49,0xFF,0xED,0x53,0x49,0xFF,0xF0,0x7A,
+0xB0,0x50,0x88,0x09,0x38,0x00,0xF2,0x0A,0x8D,0x41,0x5A,0xA8,0x0C,0xE8,0x84,0xC0,
+0xB0,0x10,0x38,0x00,0x1A,0x02,0xF0,0x81,0xC8,0x07,0x8C,0xC1,0x5A,0x68,0x08,0xFA,
+0x51,0xFF,0x85,0x20,0xFC,0xC0,0xB0,0x07,0x87,0x80,0x38,0xA3,0x00,0x00,0x40,0x95,
+0x04,0x08,0x40,0x04,0x80,0x13,0xF0,0x82,0x94,0x01,0xF0,0x83,0x40,0xFE,0x24,0x07,
+0xE8,0xED,0x4F,0xC3,0x00,0x13,0x38,0x83,0x9A,0x01,0x49,0xFF,0xDC,0x0A,0x44,0x20,
+0x01,0x20,0x80,0x28,0x42,0x10,0x08,0x73,0xB0,0x0C,0x96,0x49,0x38,0x20,0x19,0x01,
+0xB0,0x28,0x92,0x42,0x49,0xFF,0xDC,0x64,0x4D,0xC5,0x40,0x14,0x38,0x83,0x9A,0x01,
+0x49,0xFF,0xDB,0xF7,0x44,0x20,0x01,0x20,0x50,0x14,0x02,0x40,0x42,0x10,0x08,0x73,
+0xB0,0x0C,0x96,0x49,0x38,0x20,0x19,0x01,0xB0,0x28,0x92,0x42,0x49,0xFF,0xDC,0x50,
+0x40,0x14,0xF0,0x01,0x8E,0x21,0x94,0x4C,0x40,0x0E,0x00,0x13,0x97,0x49,0x40,0x1E,
+0x28,0x06,0x94,0xC4,0x84,0x40,0xF1,0x84,0x50,0x8F,0x80,0xA0,0xF4,0x04,0x40,0x11,
+0x04,0x09,0xC4,0x03,0x88,0x23,0xD5,0x03,0x88,0x25,0x96,0x49,0x38,0x44,0x06,0x02,
+0x54,0xF2,0x00,0x1F,0x5A,0xF0,0x1F,0x1A,0x40,0xF2,0x18,0x09,0x54,0xF7,0x80,0x1F,
+0x5A,0xF0,0x1F,0x14,0x04,0xFF,0x80,0x01,0x39,0xE7,0x81,0x01,0x50,0xFF,0x5D,0xEB,
+0x5C,0xF7,0x82,0x13,0xE9,0x06,0x50,0xFF,0x64,0x27,0x5C,0xF7,0x82,0x13,0xE8,0x05,
+0x50,0x42,0x00,0x41,0x38,0x44,0x06,0x0A,0x38,0x44,0x06,0x02,0x40,0xF2,0x48,0x09,
+0x54,0xF7,0x80,0x1F,0x5A,0xF0,0x1F,0x21,0x40,0xF2,0x30,0x09,0x54,0xF7,0x80,0x1F,
+0x5A,0xF0,0x1F,0x1B,0x04,0xFF,0x80,0x02,0x05,0xEF,0x80,0x01,0x40,0xF0,0x3C,0x00,
+0x40,0xF7,0x80,0x13,0x39,0xEF,0x3D,0x01,0x50,0xFF,0x5D,0xEB,0x5C,0xF7,0x82,0x13,
+0xE9,0x06,0x50,0xFF,0x64,0x27,0x5C,0xF7,0x82,0x13,0xE8,0x06,0x44,0xF4,0x10,0x00,
+0x88,0x8F,0x38,0x44,0x06,0x0A,0xF1,0x03,0x8C,0x42,0x88,0x01,0x96,0x90,0x96,0x01,
+0x5A,0x28,0x20,0xAE,0x50,0x5E,0x00,0x01,0x4C,0x55,0x40,0x16,0x38,0x13,0x9A,0x01,
+0xF5,0x85,0xF1,0x84,0x49,0xFF,0xDB,0x7D,0x44,0x20,0x01,0x20,0xF1,0x04,0x42,0x10,
+0x08,0x73,0xB0,0x0C,0x96,0x49,0x38,0x20,0x19,0x01,0x80,0x08,0x92,0x42,0x49,0xFF,
+0xDB,0xF3,0xF5,0x05,0x4C,0x54,0xC0,0x16,0x38,0x13,0x9A,0x01,0xF1,0x84,0x49,0xFF,
+0xDB,0x68,0xF1,0x04,0x44,0x20,0x01,0x20,0x50,0x10,0x82,0x40,0x42,0x10,0x08,0x73,
+0xB0,0x0C,0x96,0x49,0x38,0x20,0x19,0x01,0x80,0x08,0x92,0x42,0x49,0xFF,0xDB,0xDC,
+0x50,0x5E,0x00,0x01,0x55,0xC2,0x80,0xFF,0x48,0xFF,0xFF,0x42,0xFC,0x49,0x44,0x12,
+0x01,0xC4,0xB1,0x86,0x80,0x06,0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,
+0x8C,0x00,0x3A,0x20,0x0C,0x20,0x84,0x20,0xB0,0x0C,0xFA,0x48,0x49,0x00,0x1B,0x6A,
+0x84,0x21,0x10,0x1F,0x80,0x31,0x10,0x1F,0x80,0x3D,0x84,0x02,0x44,0x12,0x01,0xDC,
+0x10,0x0F,0x80,0x32,0x10,0x0F,0x80,0x3E,0x80,0x01,0x80,0x9F,0x3A,0x20,0x0C,0x04,
+0x3A,0x22,0x0C,0x24,0xB1,0xC3,0x3A,0x20,0x8C,0x04,0xA4,0x00,0x80,0x27,0xAC,0x20,
+0x3A,0x20,0x8C,0x24,0xAC,0x08,0x80,0x06,0x49,0xFF,0xE1,0xAC,0xB0,0x0C,0x49,0xFF,
+0xE1,0xFC,0x80,0x1F,0x49,0xFF,0xE1,0xBF,0x80,0x07,0x81,0x3F,0x49,0xFF,0xE2,0x0E,
+0xFC,0xC9,0xFC,0x26,0x44,0x12,0x01,0xE8,0x80,0xDF,0x3A,0x20,0x94,0x04,0x3A,0x23,
+0x14,0x24,0x3A,0x20,0x94,0x04,0x3A,0x23,0x14,0x24,0x3A,0x20,0x94,0x00,0x80,0x1F,
+0x80,0xE6,0x3A,0x23,0x14,0x20,0x49,0xFF,0xE1,0x57,0xFC,0xA6,0xFC,0x2C,0x44,0x12,
+0x02,0x18,0xB1,0x8C,0x80,0x06,0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,
+0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,0x94,0x00,0x3A,0x20,0x14,0x20,0x84,0x20,
+0xB0,0x06,0xFA,0x48,0x49,0x00,0x1B,0x16,0xB1,0xC1,0x44,0x12,0x02,0x48,0x80,0x07,
+0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0xB4,0x21,0xB6,0x20,0x80,0x06,0x49,0xFF,
+0xE1,0x33,0xB0,0x06,0x49,0xFF,0xE1,0x4D,0x80,0x07,0x49,0xFF,0xE1,0x37,0xFC,0xAC,
+0xFC,0x01,0x44,0x12,0x02,0x5C,0x80,0x1F,0x3A,0x20,0x8C,0x00,0x3A,0x2F,0x8C,0x20,
+0x49,0xFF,0xE1,0x36,0xFC,0x81,0xFC,0x00,0xC8,0x04,0x49,0xFF,0xFE,0x3F,0xFC,0x80,
+0x44,0x00,0x00,0x64,0x49,0xFF,0xDB,0xA7,0x44,0x00,0x13,0xA6,0x49,0xFF,0xDB,0xAE,
+0x44,0x00,0x0F,0xA6,0x49,0xFF,0xDB,0xB5,0x44,0x00,0x01,0x90,0x49,0xFF,0xDB,0xBC,
+0xFC,0x80,0xFC,0x00,0xE6,0x06,0xE8,0x06,0x44,0x12,0x02,0xFC,0x38,0x00,0x80,0x00,
+0xD5,0x02,0x84,0x00,0x49,0xFF,0xDB,0xC6,0xFC,0x80,0xFC,0x00,0xE6,0x06,0xE8,0x06,
+0x44,0x12,0x02,0xF4,0x38,0x00,0x80,0x00,0xD5,0x02,0x84,0x00,0x8C,0x01,0x96,0x00,
+0x49,0xFF,0xDB,0xAD,0xFC,0x80,0xFC,0x00,0x5A,0x00,0x01,0x0E,0xC0,0x04,0x5A,0x00,
+0x02,0x1C,0xFC,0x80,0x84,0x00,0x49,0xFF,0xE7,0x8C,0x2E,0x07,0xF7,0x12,0x49,0xFF,
+0xFF,0xC4,0xD5,0x2A,0x49,0xFF,0xE7,0x85,0x44,0x00,0x00,0x64,0x49,0xFF,0xDB,0x6B,
+0x44,0x00,0x23,0x96,0x49,0xFF,0xDB,0x72,0x44,0x00,0x23,0x96,0x49,0xFF,0xDB,0x79,
+0x44,0x00,0x01,0x90,0xD5,0x17,0x84,0x01,0x49,0xFF,0xE7,0x73,0x44,0x00,0x03,0xE8,
+0x49,0xFF,0xDB,0x59,0x44,0x00,0x27,0x10,0x49,0xFF,0xDB,0x6B,0x46,0x20,0x00,0x81,
+0x46,0x12,0x71,0x00,0x83,0x82,0xB8,0x10,0x96,0x01,0xFE,0x0F,0xB8,0x90,0x44,0x00,
+0x27,0x10,0x49,0xFF,0xDB,0x69,0x84,0x00,0x49,0xFF,0xFF,0xB9,0xFC,0x80,0x00,0x00,
+0xE6,0x04,0xE8,0x24,0xFC,0x00,0x44,0xF0,0x4D,0x54,0x38,0x07,0x80,0x00,0x40,0xF0,
+0x3C,0x00,0xDD,0x0F,0x04,0x14,0x1E,0x22,0x84,0x00,0x49,0xFF,0xDE,0x4D,0x84,0x01,
+0x49,0xFF,0xDE,0x38,0x84,0x01,0xD5,0x0F,0x84,0x00,0x49,0xFF,0xDE,0x45,0x84,0x01,
+0xD5,0x07,0x84,0x01,0xD5,0x02,0x84,0x00,0x49,0xFF,0xDE,0x3E,0x84,0x00,0x49,0xFF,
+0xDE,0x29,0x84,0x00,0x49,0xFF,0xDE,0x2F,0xFC,0x80,0xDD,0x9E,0xFC,0x00,0x49,0xFF,
+0xEB,0x58,0x80,0x60,0x3E,0x00,0x01,0x80,0x44,0x12,0x0E,0x28,0x44,0x02,0x12,0xA8,
+0x44,0x20,0x02,0x40,0x2E,0x47,0xF7,0x11,0x49,0xFF,0xF3,0x33,0xFC,0x80,0x44,0x02,
+0x12,0xA8,0xDD,0x9E,0x44,0x02,0x0E,0x28,0xDD,0x9E,0x44,0x02,0x0C,0xBC,0xDD,0x9E,
+0xFC,0x00,0xC0,0x02,0x84,0x01,0x49,0xFF,0xDB,0x59,0x84,0x00,0x49,0xFF,0xDB,0x48,
+0xFC,0x80,0xFC,0x00,0x84,0x00,0x80,0x20,0x49,0xFF,0xDD,0x58,0x84,0x00,0x84,0x21,
+0x49,0xFF,0xDD,0x54,0xFC,0x80,0xFC,0x00,0x84,0x01,0x84,0x20,0x49,0xFF,0xDD,0x4E,
+0x84,0x01,0x80,0x20,0x49,0xFF,0xDD,0x4A,0xFC,0x80,0xFC,0x49,0x80,0x20,0x44,0x02,
+0x02,0x64,0x50,0xAF,0x80,0x0C,0x3A,0x20,0x10,0x00,0x44,0x02,0x02,0x70,0x3A,0x2F,
+0x90,0x20,0x3A,0x20,0x10,0x00,0x3A,0x25,0x10,0x20,0x44,0x22,0x02,0x7C,0xB0,0x06,
+0x3A,0x21,0x10,0x00,0x3A,0x20,0x10,0x20,0x44,0x22,0x02,0x88,0x50,0x9F,0x80,0x24,
+0x3A,0x21,0x10,0x00,0x3A,0x24,0x90,0x20,0x44,0x22,0x01,0xB8,0xB1,0xCC,0x3A,0x21,
+0x10,0x00,0x3A,0x23,0x90,0x20,0x44,0x22,0x02,0x94,0xB1,0x8F,0x3A,0x21,0x10,0x00,
+0x80,0xBF,0x3A,0x23,0x10,0x20,0xC9,0x03,0x80,0x05,0xD5,0x12,0x5A,0x18,0x01,0x04,
+0x80,0x0A,0xD5,0x0E,0x5A,0x10,0x02,0x0D,0x5A,0x18,0x03,0x04,0x80,0x09,0xD5,0x08,
+0x5A,0x18,0x04,0x04,0x80,0x07,0xD5,0x04,0x5A,0x18,0x05,0x06,0x80,0x06,0x49,0xFF,
+0xDA,0x60,0xFC,0xC9,0x5A,0x10,0x06,0xEA,0xFC,0xC9,0xFC,0x03,0x84,0x20,0x84,0x4C,
+0x80,0xC0,0x80,0x1F,0x49,0x00,0x19,0xDE,0x44,0x12,0x02,0xA0,0xB0,0x03,0x3A,0x20,
+0x90,0x00,0x3A,0x20,0x10,0x20,0xCE,0x03,0x80,0x1F,0xD5,0x03,0x5A,0x68,0x01,0x04,
+0x49,0xFF,0xDA,0x5B,0xFC,0x83,0xFC,0x00,0x84,0x00,0x49,0xFF,0xFF,0xA0,0x84,0x00,
+0x49,0xFF,0xFF,0xE5,0x84,0x00,0x49,0xFF,0xDD,0x3F,0x84,0x00,0x49,0xFF,0xDD,0x6E,
+0x49,0xFF,0xFE,0x46,0x49,0xFF,0xFE,0x94,0x49,0xFF,0xFE,0xBC,0x84,0x00,0x49,0xFF,
+0xE3,0x51,0x44,0x00,0x02,0x40,0x49,0xFF,0xE3,0x63,0x44,0x00,0x02,0x40,0x49,0xFF,
+0xE3,0x54,0x84,0x09,0x49,0xFF,0xE3,0x67,0x84,0x03,0x49,0xFF,0xE3,0x6D,0x44,0x62,
+0x06,0x1C,0x44,0x10,0x00,0xF0,0x84,0x00,0x49,0xFF,0xE1,0xF5,0x49,0xFF,0xF2,0xBC,
+0x38,0x13,0x01,0x01,0x84,0x00,0x49,0xFF,0xE0,0xA3,0x44,0x10,0x00,0xF0,0x84,0x02,
+0x49,0xFF,0xE1,0xE9,0x49,0xFF,0xF2,0xB0,0x38,0x13,0x01,0x01,0x84,0x02,0x49,0xFF,
+0xE0,0x97,0x44,0x10,0x00,0xF0,0x84,0x05,0x49,0xFF,0xE1,0xDD,0x49,0xFF,0xF2,0xA4,
+0x38,0x13,0x01,0x01,0x46,0x60,0x00,0x81,0x84,0x05,0x49,0xFF,0xE0,0x89,0x49,0xFF,
+0xDE,0x23,0x04,0x03,0x03,0x91,0x92,0x0A,0x40,0x00,0x28,0x08,0x58,0x00,0x01,0xC0,
+0x14,0x03,0x03,0x91,0x49,0xFF,0xDE,0x11,0x04,0x03,0x00,0x2C,0x46,0x1F,0xFC,0x0F,
+0x92,0x06,0x94,0x06,0x58,0x00,0x00,0x2D,0x14,0x03,0x00,0x2C,0x04,0x03,0x00,0x2C,
+0x50,0x10,0x8F,0xFF,0x46,0x20,0x02,0xD0,0xFE,0x0E,0xFE,0x17,0x14,0x03,0x00,0x2C,
+0x04,0x03,0x00,0x2D,0x92,0x06,0x94,0x06,0x58,0x00,0x00,0x0A,0x14,0x03,0x00,0x2D,
+0x04,0x03,0x00,0x2D,0xFE,0x46,0x46,0x00,0x00,0xA0,0xFE,0x47,0x14,0x13,0x00,0x2D,
+0x04,0x13,0x00,0x2D,0x46,0x0C,0x0F,0xFF,0x50,0x00,0x0F,0xFF,0xFE,0x0E,0x46,0x10,
+0xA0,0x00,0xFE,0x0F,0x14,0x03,0x00,0x2D,0x04,0x03,0x00,0x2F,0x92,0x06,0x94,0x06,
+0x58,0x00,0x00,0x04,0x14,0x03,0x00,0x2F,0x44,0x00,0x02,0x80,0x49,0xFF,0xE1,0x7A,
+0x84,0x00,0x49,0xFF,0xFE,0xEF,0x49,0xFF,0xFC,0x81,0x49,0xFF,0xE1,0x71,0x3E,0x07,
+0xF7,0x12,0xFC,0x80,0x2E,0x07,0xF7,0x12,0xDD,0x9E,0x2E,0x07,0xF7,0x11,0xDD,0x9E,
+0x2E,0x07,0xF7,0x10,0xDD,0x9E,0xFC,0x00,0x80,0xC0,0x49,0xFF,0xE2,0x62,0x80,0x06,
+0x49,0xFF,0xD8,0xEB,0x84,0x00,0x84,0x2C,0x5A,0x68,0x01,0x1F,0x49,0xFF,0xE1,0xBF,
+0x84,0x02,0x84,0x2A,0x49,0xFF,0xE1,0xBB,0x84,0x03,0x84,0x2A,0x49,0xFF,0xE1,0xB7,
+0x84,0x05,0x84,0x2C,0x49,0xFF,0xE1,0xB3,0x84,0x07,0x84,0x2C,0x49,0xFF,0xE1,0xAF,
+0x84,0x00,0x80,0x20,0x49,0xFF,0xD8,0x70,0x84,0x00,0x84,0x22,0x49,0xFF,0xD8,0x6C,
+0x44,0x02,0x0D,0x20,0xD5,0x41,0x49,0xFF,0xE1,0xA2,0x84,0x01,0x84,0x2C,0x49,0xFF,
+0xE1,0x9E,0x84,0x02,0x84,0x2A,0x49,0xFF,0xE1,0x9A,0x84,0x03,0x84,0x2A,0x49,0xFF,
+0xE1,0x96,0x84,0x04,0x84,0x2C,0x49,0xFF,0xE1,0x92,0x84,0x05,0x84,0x2C,0x49,0xFF,
+0xE1,0x8E,0x84,0x06,0x84,0x2C,0x49,0xFF,0xE1,0x8A,0x84,0x07,0x84,0x2C,0x49,0xFF,
+0xE1,0x86,0x84,0x01,0x84,0x20,0x49,0xFF,0xD8,0x47,0x84,0x01,0x80,0x20,0x49,0xFF,
+0xD8,0x43,0x84,0x00,0x84,0x22,0x49,0xFF,0xD8,0x3F,0x84,0x00,0x84,0x23,0x49,0xFF,
+0xD8,0x3B,0x84,0x01,0x84,0x24,0x49,0xFF,0xD8,0x37,0x84,0x01,0x84,0x25,0x49,0xFF,
+0xD8,0x33,0x84,0x01,0x84,0x26,0x49,0xFF,0xD8,0x2F,0x84,0x01,0x84,0x27,0x49,0xFF,
+0xD8,0x2B,0x44,0x02,0x0D,0xA4,0x44,0x10,0x00,0x42,0x49,0xFF,0xDE,0x28,0xFC,0x80,
+0xFC,0x21,0x84,0xC2,0xF0,0x81,0x80,0xE2,0x80,0x01,0x5A,0x10,0x01,0x03,0x84,0xC1,
+0x49,0xFF,0xFF,0x8B,0xCF,0x0C,0x84,0x03,0x49,0xFF,0xDA,0xD0,0x84,0x03,0x49,0xFF,
+0xDE,0x5A,0xF0,0x01,0x80,0x26,0x49,0xFF,0xF0,0x6B,0xFC,0xA1,0x84,0x02,0x49,0xFF,
+0xDA,0xC5,0x84,0x02,0x49,0xFF,0xDE,0x4F,0xF0,0x01,0x80,0x26,0x84,0x40,0x49,0xFF,
+0xEF,0xEE,0xFC,0xA1,0xFC,0x00,0x84,0x00,0x49,0xFF,0xFD,0xB5,0x84,0x00,0x84,0x20,
+0x3E,0x07,0xF7,0x11,0x3E,0x07,0xF7,0x10,0x80,0x41,0x2E,0x07,0xF7,0x12,0x49,0xFF,
+0xFF,0xD1,0xFC,0x80,0xFC,0x20,0x44,0x14,0x80,0x90,0x44,0x0F,0xFF,0xEF,0xB4,0x41,
+0x46,0x70,0x00,0x81,0xFE,0x16,0xB6,0x01,0x44,0x04,0x80,0x10,0xFA,0x20,0xAE,0x40,
+0xFA,0xC2,0x50,0x73,0x83,0xD4,0xB4,0x07,0x92,0x0B,0x96,0x27,0xC0,0x07,0x8E,0xC1,
+0xC6,0x05,0x84,0x01,0x49,0xFF,0xE5,0xE4,0xD5,0xF7,0x44,0x04,0x80,0x10,0xFA,0x20,
+0xAE,0x40,0x44,0x14,0x80,0x90,0xB4,0x01,0x58,0x00,0x00,0x10,0xB6,0x01,0xFC,0xA0,
+0xFC,0x00,0x49,0xFF,0xF3,0x9A,0x5A,0x08,0x01,0x09,0x44,0x14,0x50,0x28,0xB4,0x01,
+0x92,0x01,0x96,0x06,0x5A,0x00,0x01,0xFD,0xFC,0x80,0xFC,0x00,0x80,0xC0,0x5A,0x08,
+0x01,0x04,0x49,0xFF,0xFF,0xEF,0x80,0x06,0x49,0x00,0x12,0x5B,0x80,0x06,0x49,0xFF,
+0xD9,0x44,0xFC,0x80,0xFC,0x20,0x84,0xE0,0x80,0xC0,0x84,0x00,0x49,0xFF,0xFF,0xEF,
+0x49,0xFF,0xFF,0xBA,0x49,0xFF,0xEC,0x69,0x3E,0x77,0xEF,0xCC,0x49,0xFF,0xE9,0x47,
+0x3E,0x77,0xEF,0xCB,0x5A,0x68,0x01,0x05,0x80,0x06,0x49,0xFF,0xFF,0xE0,0xFC,0xA0,
+0xFC,0x00,0x84,0x01,0x49,0xFF,0xFF,0xE8,0x2E,0x07,0xEF,0xCB,0xC0,0x12,0x84,0xC0,
+0x3E,0x67,0xEF,0xCC,0x49,0xFF,0xE9,0x33,0x3E,0x67,0xEF,0xCB,0x49,0xFF,0xFD,0xE3,
+0x49,0xFF,0xFB,0x7E,0x49,0xFF,0xFD,0xE9,0x84,0x00,0x49,0xFF,0xFF,0xD5,0xFC,0x80,
+0x3C,0x0D,0xFD,0xC3,0x5A,0x00,0x01,0xED,0x49,0x00,0x12,0x37,0x2E,0x07,0xEF,0xC8,
+0xC0,0xE4,0xD5,0xE6,0xFC,0x00,0x84,0x01,0x49,0xFF,0xFF,0xC6,0x2E,0x07,0xEF,0xCB,
+0xC8,0x05,0x3C,0x0D,0xFD,0xC3,0x5A,0x08,0x01,0xFB,0x84,0xC0,0x3E,0x67,0xEF,0xCC,
+0x49,0xFF,0xE9,0x0D,0x84,0x00,0x3E,0x67,0xEF,0xCB,0x49,0xFF,0xFF,0xB5,0xFC,0x80,
+0xFC,0x01,0xB6,0x1F,0x2E,0x07,0xF7,0x11,0x49,0xFF,0xE1,0x74,0xF0,0x81,0xB4,0x1F,
+0x49,0xFF,0xDB,0x9C,0x44,0x10,0x02,0x40,0xB4,0x1F,0x49,0xFF,0xE1,0x76,0x84,0x02,
+0x49,0xFF,0xFD,0x60,0x49,0xFF,0xFF,0xD8,0xF0,0x01,0x44,0x10,0x02,0x40,0xB4,0x5F,
+0x49,0xFF,0xF0,0xE9,0x84,0x01,0x49,0xFF,0xFD,0x55,0x84,0x01,0x49,0xFF,0xFF,0x94,
+0xFC,0x81,0xFC,0x49,0x2E,0x67,0xF7,0x12,0x84,0x00,0x49,0xFF,0xFE,0xAE,0x84,0x02,
+0x49,0xFF,0xD9,0xF4,0x80,0x06,0x84,0x20,0x84,0x41,0x49,0xFF,0xEF,0x20,0x84,0x04,
+0x49,0xFF,0xFD,0x9D,0xB1,0x86,0x44,0x12,0x02,0xAC,0x80,0x06,0x3A,0x20,0x94,0x04,
+0x3A,0x20,0x14,0x24,0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,0x94,0x00,
+0x3A,0x20,0x14,0x20,0x44,0x02,0x02,0xDC,0x80,0x3F,0x3A,0x20,0x14,0x04,0x3A,0x20,
+0x94,0x24,0x3A,0x20,0x0C,0x00,0x3A,0x20,0x8C,0x20,0x80,0x1F,0x49,0xFF,0xDE,0x0A,
+0x80,0x06,0x49,0xFF,0xDD,0xD1,0x84,0x00,0x3E,0x07,0xEF,0xCA,0x84,0x01,0x80,0xFF,
+0x49,0xFF,0xFF,0x5A,0x49,0xFF,0xD7,0x62,0x2E,0x07,0xEF,0xCA,0xC0,0x2D,0x84,0x00,
+0x3E,0x07,0xEF,0xCA,0x84,0x00,0x49,0xFF,0xFF,0x4F,0x49,0xFF,0xFF,0x63,0x84,0x00,
+0x49,0xFF,0xFD,0x65,0x44,0x12,0x02,0x18,0x80,0x06,0x3A,0x20,0x94,0x04,0x3A,0x20,
+0x14,0x24,0x3A,0x20,0x94,0x04,0x3A,0x20,0x14,0x24,0x3A,0x20,0x94,0x00,0x3A,0x20,
+0x14,0x20,0x44,0x02,0x01,0xC4,0x80,0x27,0x3A,0x20,0x14,0x04,0x3A,0x20,0x94,0x24,
+0x3A,0x20,0x0C,0x00,0x3A,0x20,0x8C,0x20,0x80,0x07,0x49,0xFF,0xDD,0xD3,0x80,0x06,
+0x49,0xFF,0xDD,0x9A,0xFC,0xC9,0x3C,0x0D,0xFD,0xC3,0x5A,0x00,0x01,0xD2,0x49,0x00,
+0x11,0x8C,0x2E,0x07,0xEF,0xC8,0xC0,0xC9,0xD5,0xCB,0xFC,0x00,0x2E,0x07,0xF7,0x12,
+0x49,0xFF,0xF1,0xA4,0x84,0x00,0x49,0xFF,0xFC,0x7E,0x84,0x20,0x2E,0x27,0xF7,0x10,
+0x2E,0x07,0xF7,0x12,0x49,0xFF,0xFE,0x9E,0x84,0x00,0x49,0xFF,0xFF,0x5B,0x2E,0x17,
+0xF7,0x11,0x2E,0x27,0xF7,0x10,0x2E,0x07,0xF7,0x12,0x49,0xFF,0xFE,0x93,0x2E,0x07,
+0xF7,0x12,0x49,0xFF,0xF1,0x8B,0x2E,0x07,0xF7,0x12,0x49,0xFF,0xF2,0x16,0x49,0xFF,
+0xF2,0x7C,0xC8,0x09,0x2E,0x07,0xF7,0x12,0x49,0xFF,0xFC,0x47,0x2E,0x07,0xF7,0x12,
+0x49,0xFF,0xFC,0xF0,0x84,0x01,0x49,0xFF,0xFC,0xAD,0x49,0xFF,0xF1,0x2E,0x49,0xFF,
+0xFC,0xFC,0x84,0x01,0x49,0xFF,0xFE,0xE8,0xFC,0x80,0xFC,0x00,0x49,0xFF,0xDE,0x30,
+0xFC,0x80,0x46,0x20,0x00,0x82,0x96,0x67,0xA1,0x54,0x44,0x3F,0xFF,0xC1,0x95,0x09,
+0xFE,0xEE,0xFE,0xE7,0xA8,0xD4,0xA1,0x54,0x44,0x3F,0xE0,0xFF,0x40,0x40,0xA0,0x08,
+0xFE,0xEE,0xFE,0xE7,0xA8,0xD4,0xA0,0xD4,0x46,0x4F,0xFC,0x1F,0x50,0x42,0x0F,0xFF,
+0x40,0x50,0xC4,0x08,0xFE,0xE6,0xFE,0xEF,0xA8,0xD4,0xA1,0x14,0x46,0x3E,0x0F,0xFF,
+0x50,0x31,0x8F,0xFF,0xFE,0xE6,0x40,0x10,0xE0,0x08,0xFE,0x5F,0xA8,0x54,0xA1,0x14,
+0x96,0x06,0x44,0x1F,0xFF,0xBF,0x94,0xC6,0xFE,0x66,0xFE,0x5F,0xA8,0x54,0xA1,0x14,
+0x44,0x1F,0xDF,0xFF,0x40,0x30,0x34,0x08,0xFE,0x66,0xFE,0x5F,0xA8,0x54,0xA0,0x54,
+0x46,0x3F,0xFB,0xFF,0x50,0x31,0x8F,0xFF,0x40,0x40,0x58,0x08,0xFE,0x5E,0xFE,0x67,
+0xA8,0x54,0xA0,0xD4,0x46,0x1D,0xFF,0xFF,0x50,0x10,0x8F,0xFF,0x40,0x00,0x74,0x08,
+0xFE,0x5E,0xFE,0x0F,0xA8,0x14,0xDD,0x9E,0xFC,0x00,0x84,0xC0,0x3E,0x67,0xEF,0xCC,
+0x49,0xFF,0xE7,0xE5,0x3E,0x67,0xEF,0xCB,0x2E,0x07,0xEF,0xCB,0xC0,0x05,0x84,0x00,
+0x3E,0x07,0xEF,0xCB,0xFC,0x80,0x3C,0x0D,0xFD,0xC3,0x5A,0x00,0x01,0xFA,0x49,0x00,
+0x10,0xEC,0x2E,0x07,0xEF,0xC8,0xC0,0xF1,0xD5,0xF3,0xFC,0x00,0x49,0xFF,0xFC,0x8D,
+0x84,0x01,0x49,0xFF,0xFE,0x79,0x49,0xFF,0xFF,0xE1,0x49,0xFF,0xFC,0x7C,0x49,0xFF,
+0xFC,0x57,0x84,0x00,0x49,0xFF,0xFE,0x70,0xFC,0x80,0xFC,0x40,0x84,0xC0,0x44,0x90,
+0x20,0x00,0x84,0xA0,0x98,0xEE,0x96,0xD9,0x94,0xD9,0x40,0xA0,0x0C,0x00,0x99,0xCB,
+0x22,0x45,0x00,0x00,0x22,0x83,0x80,0x00,0x8A,0x88,0x4E,0x44,0x00,0x03,0xFF,0x22,
+0x88,0x62,0x22,0x81,0x80,0x00,0xE1,0x04,0xE8,0x02,0xAD,0x18,0x22,0xF5,0x00,0x00,
+0x5E,0xF7,0xBF,0xC1,0xE8,0x06,0x22,0xF3,0x80,0x00,0x5E,0xF7,0xBF,0xC1,0xE9,0x03,
+0x12,0x91,0x80,0x00,0x8C,0xA1,0x97,0x69,0x5A,0x58,0x12,0xDE,0x8C,0xD2,0x97,0xB1,
+0x5A,0x6A,0x40,0xD9,0xFC,0xC0,0xFC,0x00,0x44,0x00,0x01,0x00,0x84,0x20,0x49,0xFF,
+0xDA,0x7D,0x84,0x21,0x44,0x00,0x01,0x00,0x49,0xFF,0xDA,0x78,0x84,0x08,0x49,0xFF,
+0xE3,0xEF,0x44,0x00,0x01,0x00,0x84,0x20,0x49,0xFF,0xDA,0x70,0x44,0x00,0x00,0x51,
+0x3E,0x07,0xEF,0x14,0xFC,0x80,0xFC,0x40,0x44,0x74,0x2C,0x14,0x84,0xCF,0xB5,0x27,
+0x40,0x94,0x98,0x02,0x10,0x90,0x00,0x00,0xB4,0x07,0x92,0x08,0xFE,0x36,0xAE,0x08,
+0xB4,0x27,0x84,0x01,0x92,0x2C,0xFE,0x46,0xAE,0x50,0x44,0x14,0x24,0x14,0x44,0x24,
+0x2C,0x1C,0xB4,0x21,0xFF,0x8E,0xAF,0x98,0xB4,0x22,0x92,0x32,0xFE,0x46,0xAE,0x60,
+0xB4,0x22,0x92,0x33,0xFE,0x46,0xAE,0x68,0xB4,0x22,0x92,0x36,0xFE,0x0E,0xF1,0x08,
+0xAE,0x08,0xFC,0xC0,0xFC,0x41,0x81,0x21,0xF3,0x81,0x5A,0x08,0xFF,0x05,0x5A,0x18,
+0xFF,0x50,0xFC,0xC1,0x5A,0x08,0xFE,0x49,0x5A,0x18,0xFE,0x47,0x44,0x34,0x2C,0x14,
+0x96,0x86,0x40,0x01,0x30,0x08,0xB4,0x43,0x44,0x1F,0xEF,0xFF,0xFE,0x8E,0xFE,0x87,
+0xB6,0x43,0x84,0x41,0x80,0x62,0x44,0x14,0x24,0x14,0x44,0x04,0x28,0x14,0x80,0xE4,
+0x80,0xC5,0x49,0xFF,0xDA,0xB7,0xF0,0x01,0x49,0xFF,0xE5,0xC7,0x44,0x04,0x24,0x14,
+0x84,0x21,0x49,0xFF,0xDA,0x84,0x44,0x24,0x2C,0x1C,0x97,0xC6,0x40,0x43,0xC8,0x08,
+0xB4,0xE2,0x44,0x0B,0xFF,0xFF,0xFF,0xC6,0xFF,0xE7,0xB6,0xE2,0x97,0x86,0xB4,0x02,
+0x40,0x53,0x4C,0x08,0x46,0x6F,0xFF,0x7F,0x50,0x63,0x0F,0xFF,0xFF,0x86,0xFF,0xAF,
+0xB6,0xC2,0x00,0x0F,0x80,0x28,0xB4,0x62,0x96,0x06,0x40,0x10,0x58,0x08,0x46,0x0F,
+0xFB,0xFF,0x50,0x00,0x0F,0xFF,0xFE,0x1E,0xFE,0x0F,0xB6,0x02,0x44,0x14,0x24,0x1C,
+0x44,0x04,0x28,0x1C,0xD5,0x0C,0x49,0xFF,0xE5,0x98,0x5A,0x90,0xFF,0x05,0x80,0x09,
+0x49,0xFF,0xE5,0x9C,0x44,0x04,0x28,0x14,0x44,0x14,0x24,0x14,0x84,0x41,0x80,0x62,
+0x49,0xFF,0xDA,0x78,0xFC,0xC1,0xFC,0x41,0xB6,0x1F,0x80,0xC1,0xF2,0x81,0x81,0x24,
+0x80,0xE5,0x5A,0x30,0xFF,0x06,0x80,0x02,0x84,0x20,0x49,0xFF,0xE9,0xB5,0x5A,0x98,
+0x0F,0x04,0x5A,0x70,0x01,0x0C,0x46,0x10,0x00,0x81,0x83,0x81,0xB8,0x33,0x58,0x00,
+0x02,0x00,0xB8,0xB3,0x84,0x00,0x49,0xFF,0xFC,0xA8,0x00,0x0F,0x80,0x28,0x5A,0x08,
+0x0F,0x06,0x00,0x0F,0x80,0x2C,0x5A,0x00,0x0F,0x04,0x49,0x00,0x0E,0xEF,0x44,0x00,
+0xFF,0xFF,0x4C,0x60,0x00,0x0C,0xB4,0x1F,0x80,0x26,0x49,0xFF,0xDE,0x0C,0x50,0x13,
+0x00,0x42,0xB4,0x1F,0x96,0x49,0x49,0xFF,0xFE,0x8A,0xFC,0xC1,0xFC,0x42,0x80,0xC1,
+0xF0,0x81,0x80,0xE2,0xF3,0x82,0x80,0x24,0x01,0xCF,0x80,0x34,0x00,0x8F,0x80,0x38,
+0x00,0xAF,0x80,0x3C,0x04,0x9F,0x80,0x10,0x5A,0x40,0xFF,0x07,0x80,0x03,0xF5,0x83,
+0x49,0xFF,0xE9,0x7A,0xF5,0x03,0x5A,0x50,0x0F,0x06,0xF0,0x02,0x80,0x25,0x49,0xFF,
+0xDE,0x3E,0x5B,0xC0,0x01,0x07,0x80,0x1C,0x00,0x1F,0x80,0x30,0x49,0xFF,0xD4,0xFC,
+0x5A,0x80,0x0F,0x05,0x80,0x08,0x49,0xFF,0xD6,0xF3,0x5A,0xA0,0x0F,0x05,0x80,0x0A,
+0x49,0xFF,0xD7,0x21,0x44,0x00,0xFF,0xFF,0x5A,0x90,0x01,0x05,0x4C,0x60,0x40,0x05,
+0xFC,0xC2,0x4C,0x60,0x00,0x2F,0xF0,0x01,0x80,0x26,0x49,0xFF,0xDD,0xCC,0x50,0x13,
+0x00,0x42,0xF0,0x01,0x96,0x49,0x49,0xFF,0xFE,0x4A,0x5A,0x70,0xFF,0x0C,0xE6,0xF5,
+0xE9,0x02,0xFA,0xE3,0x44,0x12,0x06,0x1C,0xF0,0x01,0x38,0x10,0x9D,0x01,0x49,0xFF,
+0xFE,0x3E,0x5A,0x98,0x01,0x1A,0x49,0xFF,0xFB,0x30,0x49,0xFF,0xFD,0x8C,0x49,0xFF,
+0xFC,0x33,0xF0,0x81,0x49,0xFF,0xFC,0x33,0xF0,0x82,0x49,0xFF,0xFC,0x33,0xF0,0x83,
+0xF1,0x02,0xF0,0x01,0xF2,0x03,0x49,0xFF,0xFC,0x9D,0x49,0xFF,0xFB,0x14,0xFC,0xC2,
+0x5A,0x78,0xFF,0xDF,0xD5,0xE9,0xFC,0xC2,0xFC,0x03,0xF1,0x81,0xB1,0x03,0x44,0x12,
+0x03,0x04,0x80,0xA4,0x3A,0x20,0x8C,0x04,0x3A,0x22,0x8C,0x24,0xA4,0x48,0x9E,0xC1,
+0xAC,0x68,0x92,0x28,0xE0,0x23,0x00,0x2F,0x80,0x0C,0xE8,0x03,0x8C,0x21,0xD5,0x04,
+0xE0,0x40,0xE9,0x03,0x9C,0x51,0x96,0x08,0x84,0x40,0x38,0x52,0x08,0x00,0x96,0x50,
+0x8C,0xA1,0xD8,0x06,0x80,0x01,0xF1,0x01,0x49,0xFF,0xDD,0x35,0xFC,0x83,0x8C,0x41,
+0x5A,0x28,0x0A,0xF5,0xFC,0x83,0xFC,0x49,0x49,0xFF,0xFA,0xD6,0x2E,0x77,0xF0,0xEB,
+0xF0,0x87,0x2E,0x07,0xF0,0xEC,0x40,0x73,0xA0,0x08,0xFF,0xC7,0x2E,0x07,0xF0,0xED,
+0x2E,0x67,0xF0,0xF0,0xF0,0x88,0x2E,0x07,0xF0,0xEE,0x2E,0x87,0xF0,0xF2,0x54,0x90,
+0x00,0x01,0x2E,0x07,0xF0,0xEF,0x2E,0xA7,0xF0,0xF3,0xF0,0x89,0x54,0x03,0x00,0x0F,
+0x92,0xC4,0xF0,0x8A,0x54,0x03,0x00,0x01,0xF0,0x8B,0x2E,0x07,0xF0,0xF1,0x54,0x10,
+0x00,0x0F,0x40,0x60,0x10,0x09,0x84,0x1F,0x10,0x0F,0x80,0x41,0x10,0x0F,0x80,0x42,
+0x10,0x0F,0x80,0x43,0x10,0x0F,0x80,0x44,0x10,0x0F,0x80,0x45,0x10,0x0F,0x80,0x46,
+0x10,0x0F,0x80,0x47,0x84,0x00,0x3C,0x0B,0xF8,0x6F,0x3E,0x07,0xF0,0xDC,0xF0,0x08,
+0xF1,0x8C,0x5A,0x00,0xFF,0x16,0x46,0x00,0x00,0x81,0x04,0x10,0x00,0x23,0x04,0x00,
+0x00,0x23,0x96,0x5F,0x92,0x0C,0x96,0x1F,0xF1,0x8E,0xF0,0x8D,0x84,0x20,0xF0,0x08,
+0x49,0xFF,0xFF,0x8C,0xF0,0x08,0x84,0x23,0x49,0xFF,0xFF,0x88,0xD5,0x04,0x84,0x00,
+0xF0,0x8D,0xF0,0x8E,0x5A,0x88,0xFF,0x04,0x5A,0xA0,0xFF,0x12,0x50,0x0F,0x80,0x47,
+0xB6,0x1F,0x50,0x1F,0x80,0x42,0x50,0x0F,0x80,0x41,0x50,0x2F,0x80,0x43,0xB0,0xD1,
+0x50,0x4F,0x80,0x45,0x50,0x5F,0x80,0x46,0x49,0xFF,0xFE,0x4F,0x84,0x41,0x80,0x08,
+0x80,0x2A,0x80,0xA2,0xB6,0x5F,0x84,0x65,0x84,0x80,0x49,0xFF,0xFE,0x6D,0xF0,0x0B,
+0x85,0x40,0xF0,0x81,0xF0,0x0C,0x80,0x27,0xF0,0x82,0x44,0x20,0x00,0xFF,0x80,0x0A,
+0x80,0x6A,0xF4,0x09,0xF5,0x0A,0xB7,0x5F,0xF6,0x83,0x14,0xAF,0x80,0x04,0x49,0xFF,
+0xFE,0xEF,0xF0,0x0B,0x84,0x63,0xF0,0x81,0xF0,0x0C,0xF5,0x0A,0xB6,0x7F,0x80,0x27,
+0x44,0x20,0x00,0xFF,0xF4,0x09,0xF0,0x82,0xF6,0x83,0x84,0x05,0x14,0x9F,0x80,0x04,
+0x49,0xFF,0xFE,0xDE,0x49,0xFF,0xFA,0x4F,0x80,0x0A,0x49,0xFF,0xFC,0x45,0x46,0x80,
+0x0F,0xC0,0x46,0x50,0x00,0x82,0x44,0xF3,0xF0,0x00,0x41,0xE5,0x10,0x08,0x40,0x45,
+0x00,0x13,0x84,0xE0,0xB4,0x05,0x40,0x13,0xF8,0x00,0x92,0x0B,0x40,0x00,0x2C,0x08,
+0xFE,0x0F,0xB6,0x05,0xA0,0xE9,0xA0,0x69,0x96,0xD8,0x54,0x91,0x80,0x20,0x54,0x10,
+0x8F,0xC0,0x92,0x26,0x40,0x94,0x88,0x08,0x96,0xE7,0xA0,0xA9,0x40,0x34,0x8C,0x04,
+0x54,0x90,0x80,0x1F,0x96,0x6E,0x94,0x4A,0xA0,0x29,0x40,0x94,0x84,0x04,0x40,0x21,
+0x3C,0x02,0x92,0x4C,0x40,0x94,0xA0,0x08,0x40,0x91,0xA4,0x04,0x40,0x00,0x20,0x02,
+0x54,0x31,0x00,0x20,0x92,0x12,0xF1,0x07,0x94,0xDA,0x96,0xA7,0xFE,0x9F,0x54,0x30,
+0x00,0x1F,0x96,0x2E,0x94,0x02,0x38,0x90,0x91,0x09,0xFE,0xC7,0x50,0x12,0x00,0x12,
+0xF0,0x07,0x96,0x49,0x40,0x31,0xA0,0x08,0xFE,0x9F,0x50,0x42,0x00,0x24,0x8C,0xE1,
+0x38,0x20,0x05,0x09,0x97,0x21,0x5A,0x78,0x10,0xBF,0x8D,0x41,0x5A,0xA8,0x09,0xB7,
+0xFB,0x41,0x44,0x90,0x02,0x40,0x46,0x30,0x00,0x82,0x80,0xEA,0x81,0x09,0x84,0xA0,
+0x55,0xE4,0x87,0xFF,0xB4,0x23,0x40,0x02,0xF8,0x00,0x92,0x2B,0x40,0x10,0xAC,0x08,
+0x54,0x00,0x07,0xFF,0xFE,0x0F,0xB6,0x03,0xB4,0x03,0x8C,0xA1,0x92,0x0B,0x40,0x00,
+0x2C,0x08,0x40,0x04,0x00,0x04,0xB6,0x03,0xA1,0x19,0xA0,0x59,0xA0,0x99,0x54,0x10,
+0x8F,0xC0,0x40,0x00,0x98,0x09,0xF0,0x8F,0x44,0x03,0xF0,0x00,0xFE,0x86,0xA0,0x19,
+0x97,0x20,0x46,0x10,0x0F,0xC0,0xFE,0x0E,0x54,0xF2,0x00,0x20,0xF1,0x0F,0x40,0xF7,
+0x88,0x08,0x97,0x27,0x40,0x47,0x90,0x04,0x54,0xF0,0x80,0x1F,0x96,0x6E,0x94,0x4A,
+0x40,0xF7,0x84,0x04,0xF1,0x07,0x40,0xF7,0xA0,0x08,0x92,0x4C,0x40,0x42,0x3C,0x04,
+0x38,0x40,0x9D,0x09,0x54,0x41,0x00,0x20,0x92,0x12,0x95,0x22,0x96,0xA7,0xFE,0xA7,
+0x54,0x40,0x00,0x1F,0x96,0x2E,0x94,0x02,0x50,0x13,0x80,0x12,0xFF,0x07,0xF0,0x07,
+0x96,0x49,0x40,0x42,0x20,0x08,0xFE,0xA7,0x50,0x73,0x80,0x24,0x54,0x52,0x87,0xFF,
+0x38,0x20,0x05,0x09,0x8D,0x01,0x97,0xF9,0x5A,0x58,0x10,0xAE,0x50,0x05,0x7F,0xFF,
+0x8D,0x30,0x40,0xA0,0x00,0x13,0x5A,0x9A,0xD0,0xA2,0x49,0xFF,0xEC,0x35,0x49,0xFF,
+0xEC,0x5A,0x2E,0x07,0xEF,0xBD,0xC0,0x04,0x49,0xFF,0xEA,0x5D,0xD5,0x03,0x44,0x0F,
+0xED,0xED,0x44,0x44,0x80,0x10,0x3C,0x0B,0xF8,0x6F,0xB4,0xA4,0xB4,0x04,0xB4,0x24,
+0x40,0x30,0x58,0x09,0xB4,0x04,0x92,0xB6,0x92,0x14,0x40,0x20,0x88,0x09,0x54,0x42,
+0x80,0x08,0x54,0x10,0x00,0x01,0x54,0x01,0x80,0x04,0xFE,0x27,0xFE,0x0F,0x54,0x11,
+0x00,0x02,0xFE,0x0F,0x3E,0x07,0xF0,0xDC,0xF0,0x08,0x5A,0x00,0xFF,0x0A,0xF0,0x0E,
+0x84,0x20,0x49,0xFF,0xDB,0xB0,0xF0,0x0D,0x84,0x23,0x49,0xFF,0xDB,0xAC,0x00,0x7F,
+0x80,0x47,0x00,0x0F,0x80,0x41,0x00,0x1F,0x80,0x42,0x00,0x2F,0x80,0x43,0x00,0x3F,
+0x80,0x44,0x00,0x4F,0x80,0x45,0x00,0x5F,0x80,0x46,0xB6,0xFF,0x49,0xFF,0xFD,0x4C,
+0xF0,0x0C,0xF3,0x09,0xB6,0x1F,0x84,0x00,0x80,0x40,0xF4,0x0A,0xF5,0x0B,0xF6,0x81,
+0x44,0x10,0x00,0xF0,0x49,0xFF,0xFD,0xA1,0xF0,0x0C,0x44,0x10,0x00,0xF0,0xB6,0x1F,
+0x84,0x43,0x84,0x05,0xF3,0x09,0xF4,0x0A,0xF5,0x0B,0xF6,0x81,0x49,0xFF,0xFD,0x95,
+0x49,0xFF,0xFC,0xF3,0xFC,0xC9,0xFC,0x41,0x81,0x00,0x81,0x23,0xF5,0x81,0x80,0xC2,
+0x81,0x44,0xB6,0x3F,0x2E,0x77,0xEA,0x5E,0x49,0xFF,0xF9,0x1B,0x83,0x80,0x46,0x00,
+0x00,0x80,0xB4,0x3F,0x14,0x80,0x00,0x47,0x14,0x80,0x00,0x49,0x84,0x01,0x49,0xFF,
+0xDB,0xB2,0x84,0x04,0xB4,0x3F,0x49,0xFF,0xDB,0xAE,0x49,0xFF,0xF9,0x26,0x49,0xFF,
+0xFC,0x7D,0x49,0xFF,0xF9,0x18,0x80,0x1C,0x80,0x29,0x84,0x40,0x49,0xFF,0xEC,0x39,
+0xF5,0x01,0xCD,0x14,0x93,0x21,0x96,0x69,0xE2,0x29,0xE8,0x0F,0x40,0x22,0x9C,0x16,
+0xC8,0x04,0xC1,0x03,0x8C,0xC2,0x97,0xB1,0x42,0x03,0x1C,0x73,0x38,0x1E,0x15,0x11,
+0x38,0x15,0x01,0x09,0x8C,0xA1,0xD5,0xF0,0xFC,0xC1,0x5A,0x58,0x01,0x0F,0x95,0xB1,
+0x89,0x46,0x84,0x00,0x96,0x41,0xE2,0x29,0xE8,0x07,0x38,0x1E,0x01,0x11,0x38,0x15,
+0x01,0x09,0x8C,0x01,0xD5,0xF8,0xFC,0xC1,0x5A,0x58,0x02,0x1B,0x94,0xF9,0x84,0x40,
+0x96,0x51,0xE2,0x29,0xE8,0x15,0x40,0x41,0x1C,0x16,0xC8,0x04,0xC1,0x03,0x8C,0xC1,
+0x97,0xB1,0x40,0x51,0x0C,0x96,0xCC,0x04,0xC1,0x03,0x8C,0xC6,0x97,0xB1,0x42,0x03,
+0x1C,0x73,0x38,0x1E,0x09,0x11,0x38,0x15,0x01,0x09,0x8C,0x41,0xD5,0xEA,0xFC,0xC1,
+0xFC,0x40,0x51,0xFF,0xF5,0xF0,0x49,0xFF,0xF8,0xBF,0xF0,0x87,0x84,0x20,0x44,0x20,
+0x04,0x80,0x50,0x0F,0x81,0x10,0x49,0x00,0x13,0x05,0x44,0x02,0x03,0x04,0xB0,0x57,
+0x3A,0x20,0x0C,0x04,0x3A,0x20,0x8C,0x24,0xA4,0x00,0xAC,0x08,0x00,0x0F,0x80,0x5C,
+0x44,0x12,0x03,0x10,0x8C,0x01,0x96,0x00,0xF0,0x8B,0xB0,0x1A,0x3A,0x20,0x90,0x00,
+0x3A,0x20,0x10,0x20,0x84,0x20,0x84,0x4C,0xB0,0x1D,0x49,0x00,0x12,0xEB,0x2E,0x07,
+0xF0,0xEB,0x2E,0x17,0xF0,0xEC,0x40,0x00,0x20,0x08,0x2E,0x77,0xF0,0xEF,0x40,0x80,
+0x04,0x04,0x2E,0x07,0xF0,0xEE,0x2E,0x67,0xF0,0xED,0xF0,0x86,0x54,0x03,0x80,0x0F,
+0xF0,0x88,0x2E,0x07,0xF0,0xF1,0x2E,0xA7,0xF0,0xF0,0xF0,0x8C,0x2E,0x07,0xF0,0xF2,
+0x50,0xFF,0x80,0xB0,0xF0,0x8D,0x2E,0x07,0xF0,0xF3,0x92,0xE4,0x54,0x10,0x00,0x0F,
+0x92,0x04,0x96,0x06,0xF0,0x8F,0x2E,0x07,0xF0,0xF4,0xF1,0x8E,0x54,0x10,0x00,0x0F,
+0x92,0x04,0xF0,0x91,0x84,0x1F,0xF1,0x90,0x10,0x0F,0x80,0x55,0x10,0x0F,0x80,0x56,
+0x10,0x0F,0x80,0x57,0x10,0x0F,0x80,0x58,0x10,0x0F,0x80,0x59,0x10,0x0F,0x80,0x5A,
+0x10,0x0F,0x80,0x5B,0x2E,0x17,0xEA,0x5F,0x2E,0x07,0xEA,0x5E,0xFE,0x0C,0xF0,0x89,
+0x44,0x02,0x03,0x1C,0xB0,0x60,0x3A,0x20,0x14,0x04,0x3A,0x20,0x94,0x24,0x3A,0x20,
+0x0C,0x00,0x44,0x02,0x03,0x34,0x3A,0x20,0x8C,0x20,0x80,0x2F,0x3A,0x20,0x14,0x04,
+0x3A,0x20,0x94,0x24,0x3A,0x20,0x14,0x04,0x3A,0x20,0x94,0x24,0x3A,0x20,0x14,0x00,
+0x44,0x02,0x03,0x64,0x3A,0x20,0x94,0x20,0xB0,0x66,0x3A,0x20,0x14,0x04,0x3A,0x20,
+0x94,0x24,0x3A,0x20,0x0C,0x00,0x50,0xFF,0x80,0xE0,0x44,0x02,0x03,0x7C,0x3A,0x20,
+0x8C,0x20,0x80,0x2F,0x3A,0x20,0x14,0x04,0x3A,0x20,0x94,0x24,0x3A,0x20,0x14,0x04,
+0x3A,0x20,0x94,0x24,0x3A,0x20,0x14,0x00,0x3A,0x20,0x94,0x20,0xF5,0x07,0x84,0x21,
+0x50,0x02,0x84,0x80,0x1A,0x12,0x80,0x01,0xD8,0xFE,0x84,0x00,0x3C,0x0B,0xF8,0x6F,
+0x3E,0x07,0xF0,0xDC,0xB0,0x1A,0x49,0xFF,0xD2,0xDC,0xB0,0x1D,0x49,0xFF,0xD2,0xED,
+0x46,0x30,0x00,0x80,0x84,0x10,0x04,0x11,0x80,0x70,0x46,0x90,0x00,0x81,0xFE,0x0E,
+0x58,0x00,0x00,0x0B,0x14,0x01,0x80,0x70,0xB0,0x2C,0xF3,0x8A,0x49,0xFF,0xD8,0x7C,
+0xB0,0x20,0x49,0xFF,0xD8,0xAF,0x84,0x03,0x49,0xFF,0xF7,0xC4,0x84,0x00,0x49,0xFF,
+0xE3,0x43,0x44,0x17,0x20,0x1C,0xB4,0x01,0x92,0x0C,0x40,0x00,0x30,0x08,0xB6,0x01,
+0x44,0x17,0x20,0x24,0xB4,0x01,0x92,0x0C,0x40,0x00,0x30,0x08,0xB6,0x01,0x04,0x24,
+0x80,0x3A,0x46,0x0F,0xF8,0xFF,0x50,0x00,0x0F,0x8F,0xFE,0x16,0x46,0x20,0x05,0x00,
+0x50,0x21,0x00,0x40,0xFE,0x17,0x14,0x04,0x80,0x3A,0x04,0x24,0x80,0x3B,0x84,0x18,
+0xFE,0x16,0x58,0x00,0x00,0x04,0x14,0x04,0x80,0x3B,0x84,0x00,0x49,0xFF,0xD3,0x88,
+0x84,0x03,0x49,0xFF,0xD3,0xB8,0x04,0x24,0x80,0x38,0x46,0x00,0xCC,0x0C,0x50,0x00,
+0x0F,0xF3,0xFE,0x16,0x46,0x2A,0x22,0xA2,0xF3,0x0A,0x8C,0x48,0xFE,0x17,0x14,0x04,
+0x80,0x38,0x84,0x1F,0x14,0x01,0x80,0x47,0x14,0x01,0x80,0x49,0x04,0x04,0x83,0x97,
+0x84,0x41,0x58,0x00,0x02,0x00,0x80,0x62,0x50,0x14,0x86,0x5C,0x14,0x04,0x83,0x97,
+0x50,0x04,0x8A,0x5C,0x49,0xFF,0xD6,0x8E,0x84,0x01,0x49,0xFF,0xD9,0x5A,0x46,0x10,
+0x00,0x83,0x46,0x0F,0x3F,0xFF,0x04,0x20,0x80,0xEE,0x50,0x00,0x0F,0xFF,0xFE,0x16,
+0x44,0x24,0x2C,0x14,0x14,0x00,0x80,0xEE,0xB4,0x02,0x44,0x14,0x2C,0x1C,0xF0,0x92,
+0xB4,0x01,0xB4,0x62,0xF0,0x93,0x44,0x0F,0xE0,0xF0,0xFE,0x1E,0x58,0x00,0x00,0x01,
+0xB6,0x02,0xB4,0x41,0x46,0x0F,0xFB,0x3F,0x50,0x00,0x0F,0xFF,0xFE,0x16,0x46,0x20,
+0x00,0xC0,0xFE,0x17,0x84,0x41,0xB6,0x01,0x80,0x62,0x44,0x04,0x28,0x14,0x44,0x14,
+0x24,0x14,0x49,0xFF,0xD6,0x5F,0x84,0x41,0x80,0x62,0x44,0x04,0x28,0x1C,0x44,0x14,
+0x24,0x1C,0x49,0xFF,0xD6,0x57,0x84,0x01,0x84,0x20,0x49,0xFF,0xE5,0x9D,0x46,0x20,
+0x00,0x82,0x46,0x0C,0x08,0x0C,0xA0,0x54,0x50,0x00,0x00,0x80,0xFE,0x0E,0x44,0x11,
+0x00,0x01,0xFE,0x0F,0xA8,0x14,0x44,0x00,0xFF,0xFF,0x4C,0x80,0x00,0x11,0xF5,0x06,
+0x40,0x63,0x20,0x08,0xFF,0x77,0xF5,0x86,0xD0,0x0A,0xE2,0xA8,0xE9,0x04,0x14,0x8F,
+0x80,0x06,0x81,0x05,0x50,0x64,0x00,0x42,0x97,0xB1,0xD5,0x08,0x44,0x00,0x00,0x40,
+0x44,0x60,0x01,0x00,0xF0,0x86,0x44,0x80,0x00,0xC0,0x84,0x01,0x80,0x28,0x49,0xFF,
+0xD9,0xEA,0x80,0x26,0x84,0x01,0x49,0xFF,0xFA,0x6A,0x84,0x00,0x84,0x21,0x49,0xFF,
+0xD9,0x9A,0x80,0x26,0x84,0x04,0x46,0x60,0x00,0x81,0x49,0xFF,0xFA,0x60,0x84,0x01,
+0x84,0x26,0x49,0xFF,0xE5,0x31,0x04,0x13,0x03,0x97,0x46,0x0F,0x81,0xC0,0x50,0x00,
+0x0F,0xFF,0xFE,0x0E,0x46,0x10,0x08,0x2D,0xFE,0x0F,0x14,0x03,0x03,0x97,0x04,0x13,
+0x03,0x95,0x44,0x0F,0xF0,0x3F,0xFE,0x0E,0x58,0x00,0x00,0x40,0x14,0x03,0x03,0x95,
+0x04,0x13,0x03,0x99,0x46,0x0F,0xFC,0x0F,0x50,0x00,0x0F,0xFF,0xFE,0x0E,0x44,0x17,
+0x00,0x00,0xFE,0x0F,0x84,0x41,0x80,0x62,0x14,0x03,0x03,0x99,0x50,0x13,0x06,0x5C,
+0x50,0x03,0x0A,0x5C,0x49,0xFF,0xD5,0xEE,0x84,0x41,0x80,0x62,0x50,0x03,0x0A,0x54,
+0x50,0x13,0x06,0x54,0x49,0xFF,0xD5,0xE6,0x84,0x41,0x80,0x62,0x50,0x03,0x0A,0x64,
+0x50,0x13,0x06,0x64,0x49,0xFF,0xD5,0xDE,0x84,0x04,0x80,0x28,0x49,0xFF,0xD9,0x9B,
+0x04,0x13,0x00,0x2F,0x44,0x0F,0xC0,0xFF,0xFE,0x46,0x58,0x10,0x84,0x00,0x14,0x13,
+0x00,0x2F,0x04,0x13,0x00,0x2D,0xFE,0x46,0x58,0x10,0x81,0x00,0x14,0x13,0x00,0x2D,
+0x04,0x13,0x00,0x2C,0xFE,0x0E,0x58,0x00,0x2D,0x00,0x14,0x03,0x00,0x2C,0x84,0x00,
+0x49,0xFF,0xE4,0x6C,0x84,0x01,0x49,0xFF,0xE4,0x75,0x84,0x01,0x84,0x20,0x84,0x44,
+0x84,0x62,0x44,0x40,0x00,0x30,0xFA,0xA0,0x49,0xFF,0xD6,0x02,0x04,0x13,0x00,0x17,
+0x44,0x0F,0xFE,0xFF,0xFE,0x0E,0x14,0x03,0x00,0x17,0xA0,0x36,0x58,0x00,0x00,0x01,
+0xA8,0x36,0xF0,0x08,0x5A,0x00,0x0F,0x0A,0x04,0x03,0x00,0x23,0x04,0x9F,0x80,0x08,
+0x92,0x04,0x96,0x1F,0xF0,0x8A,0xD5,0x04,0x84,0x00,0xF0,0x8A,0x85,0x2D,0x5A,0xA8,
+0xFF,0x05,0xF0,0x0C,0x5A,0x00,0xFF,0x12,0x50,0x0F,0x80,0x5B,0xB6,0x1F,0x50,0x1F,
+0x80,0x56,0x50,0x0F,0x80,0x55,0x50,0x2F,0x80,0x57,0xB0,0xD6,0x50,0x4F,0x80,0x59,
+0x50,0x5F,0x80,0x5A,0x49,0xFF,0xFA,0x89,0x84,0xC1,0x80,0x0A,0xF1,0x0C,0x80,0x46,
+0x84,0x65,0x84,0x80,0x80,0xA6,0xB6,0xDF,0x49,0xFF,0xFA,0xA6,0xF0,0x0F,0x85,0x40,
+0xF0,0x81,0xF0,0x10,0x44,0x20,0x00,0xFF,0xF0,0x82,0xF0,0x11,0x80,0x66,0xF4,0x0D,
+0xF5,0x0E,0x44,0x10,0xFF,0xFF,0xF0,0x83,0xB6,0xDF,0x80,0x06,0x14,0xAF,0x80,0x04,
+0x49,0xFF,0xFB,0x26,0x80,0x0A,0x49,0xFF,0xF8,0x8F,0x46,0x10,0x00,0x80,0x46,0x05,
+0x55,0x55,0x50,0x00,0x05,0x55,0x14,0x00,0x80,0x47,0x14,0x00,0x80,0x49,0x49,0xFF,
+0xD5,0x8E,0x49,0xFF,0xF6,0x92,0x80,0x06,0x49,0xFF,0xF8,0x7E,0x5A,0x78,0x0F,0x1C,
+0xF0,0x0B,0x84,0xE6,0x40,0x64,0x80,0x01,0xE0,0xC7,0xE9,0x1E,0x49,0xFF,0xF9,0xDE,
+0x49,0xFF,0xF6,0x79,0x49,0xFF,0xD5,0xD3,0x81,0x40,0x49,0xFF,0xD5,0x78,0x4E,0xA2,
+0x00,0x14,0x8C,0xE1,0x97,0xF8,0x84,0x01,0x80,0x27,0x49,0xFF,0xE4,0x55,0x49,0xFF,
+0xF6,0x74,0xD5,0xEB,0xF0,0x08,0xE2,0x07,0xE8,0x03,0x9F,0xC1,0x97,0xF8,0x84,0x01,
+0x80,0x27,0x49,0xFF,0xE4,0x49,0x49,0xFF,0xF6,0x5E,0x84,0x00,0x49,0xFF,0xF8,0x54,
+0xF0,0x0B,0x40,0x64,0x80,0x01,0xE0,0xE6,0xE9,0x06,0x97,0xF0,0x84,0x01,0x80,0x27,
+0x49,0xFF,0xE4,0x3A,0xE0,0xE6,0xE8,0x13,0x84,0x20,0x40,0x74,0x9C,0x01,0xB0,0xD7,
+0x9C,0x89,0x88,0x23,0x96,0x11,0xA7,0x49,0x8C,0xA1,0xDF,0x06,0x96,0x00,0x84,0x21,
+0x49,0xFF,0xD8,0x89,0xD5,0x04,0x80,0x22,0x5A,0x28,0x09,0xF3,0x49,0xFF,0xF6,0x3B,
+0x46,0x65,0x55,0x55,0x84,0x01,0x49,0xFF,0xF8,0x2F,0x50,0x63,0x05,0x55,0x84,0x40,
+0x80,0x06,0x80,0xA2,0x80,0x28,0xF3,0x09,0x50,0x4F,0x81,0x10,0x49,0xFF,0xFC,0xF5,
+0x80,0x06,0x84,0x40,0x46,0x6A,0xAA,0xAA,0x80,0xA2,0x50,0x63,0x0A,0xAA,0xF1,0x06,
+0xF3,0x09,0x50,0x4F,0x85,0x90,0x49,0xFF,0xFC,0xE8,0x80,0x06,0x80,0x28,0x84,0x41,
+0xF3,0x09,0x50,0x4F,0x81,0x10,0x84,0xA0,0x49,0xFF,0xFC,0xDF,0x80,0x06,0xF1,0x06,
+0x84,0x41,0xF3,0x09,0x50,0x4F,0x85,0x90,0x84,0xA0,0x49,0xFF,0xFC,0xD6,0x50,0x0F,
+0x81,0x10,0x50,0x1F,0x85,0x90,0xF2,0x07,0x49,0xFF,0xF9,0x91,0xF6,0x09,0x85,0x20,
+0x92,0xC2,0x97,0xB1,0x44,0x00,0x00,0xFF,0x40,0xA0,0x24,0x0C,0xFA,0x02,0x42,0x04,
+0x80,0x24,0x96,0x01,0xF0,0x89,0x50,0x7F,0x81,0x10,0x80,0x0A,0x80,0x28,0xF2,0x09,
+0x80,0x66,0x80,0x87,0x84,0xA1,0x49,0xFF,0xFC,0xB8,0x8D,0x28,0x80,0x0A,0xF1,0x06,
+0xF2,0x09,0x80,0x66,0x50,0x4F,0x85,0x90,0x84,0xA1,0x49,0xFF,0xFC,0xAE,0x5A,0x98,
+0x20,0xE3,0x80,0x07,0x50,0x1F,0x85,0x90,0xF2,0x07,0x46,0xA0,0x30,0x30,0x49,0xFF,
+0xF9,0x66,0x50,0x05,0x03,0x03,0x85,0x20,0xF0,0x8B,0xF7,0x89,0xF0,0x0B,0x40,0x74,
+0x80,0x13,0x40,0xA0,0x24,0x0C,0x80,0x0A,0x80,0x28,0x80,0x47,0x80,0x66,0xF4,0x09,
+0x84,0xA2,0x49,0xFF,0xFC,0x92,0x8D,0x22,0x80,0x0A,0xF1,0x06,0x80,0x47,0x80,0x66,
+0x50,0x4F,0x85,0x90,0x84,0xA2,0x49,0xFF,0xFC,0x88,0x5A,0x98,0x08,0xE9,0xF0,0x09,
+0x50,0x1F,0x85,0x90,0xF2,0x07,0x49,0xFF,0xF9,0x42,0x2E,0x07,0xEF,0xBD,0xC0,0x04,
+0x49,0xFF,0xE6,0x81,0xD5,0x03,0x44,0x0F,0xED,0xED,0x44,0x44,0x80,0x10,0x3C,0x0B,
+0xF8,0x6F,0xB4,0xA4,0xB4,0x04,0xB4,0x24,0x40,0x30,0x58,0x09,0xB4,0x04,0x92,0xB6,
+0x92,0x14,0x54,0x42,0x80,0x08,0x40,0x20,0x88,0x09,0x54,0x10,0x00,0x01,0x54,0x01,
+0x80,0x04,0xFE,0x27,0xFE,0x0F,0x54,0x11,0x00,0x02,0xFE,0x0F,0x3E,0x07,0xF0,0xDC,
+0x46,0x00,0x00,0x80,0x84,0x3F,0x14,0x10,0x00,0x47,0x14,0x10,0x00,0x49,0x04,0x10,
+0x04,0x17,0x84,0xDE,0x58,0x10,0x81,0x00,0x14,0x10,0x04,0x17,0x04,0x10,0x04,0x06,
+0xFE,0x76,0x14,0x10,0x04,0x06,0x84,0x01,0x49,0xFF,0xD7,0x1B,0xF1,0x12,0x44,0x04,
+0x2C,0x14,0x84,0x41,0xB6,0x20,0xF1,0x13,0x44,0x04,0x2C,0x1C,0x80,0x62,0xB6,0x20,
+0x44,0x04,0x28,0x14,0x44,0x14,0x24,0x14,0x49,0xFF,0xD4,0x3C,0x84,0x41,0x80,0x62,
+0x44,0x04,0x28,0x1C,0x44,0x14,0x24,0x1C,0x49,0xFF,0xD4,0x34,0x46,0x00,0x00,0x82,
+0xA0,0x44,0xFF,0x8E,0xA9,0x84,0xA0,0x84,0x44,0x1E,0xFF,0xFF,0xFE,0x56,0xA8,0x44,
+0x84,0x01,0x49,0xFF,0xF5,0x0F,0xB0,0x38,0x49,0xFF,0xD5,0xBE,0xB0,0x26,0x49,0xFF,
+0xD5,0xF1,0x84,0x01,0x49,0xFF,0xE2,0xCA,0x84,0x00,0x49,0xFF,0xE2,0xD3,0x84,0x01,
+0x84,0x22,0x80,0x61,0x80,0xA0,0x84,0x44,0x44,0x40,0x00,0x3F,0x49,0xFF,0xD4,0x60,
+0x84,0x20,0x84,0x01,0x49,0xFF,0xE3,0x58,0x49,0x00,0x08,0xA8,0x84,0x00,0x49,0xFF,
+0xF5,0x4E,0x84,0x00,0x49,0xFF,0xF5,0x93,0x84,0x00,0x49,0xFF,0xF4,0x94,0xF0,0x08,
+0x5A,0x00,0x0F,0x06,0xF0,0x0A,0x84,0x21,0x49,0xFF,0xD7,0x75,0x00,0x6F,0x80,0x5B,
+0x00,0x0F,0x80,0x55,0x00,0x1F,0x80,0x56,0x00,0x2F,0x80,0x57,0x00,0x3F,0x80,0x58,
+0x00,0x4F,0x80,0x59,0x00,0x5F,0x80,0x5A,0xB6,0xDF,0x49,0xFF,0xF9,0x15,0xF0,0x10,
+0x44,0x10,0x00,0xF0,0xB6,0x1F,0xF0,0x11,0xF3,0x0D,0xF0,0x81,0x84,0x01,0x80,0x40,
+0xF4,0x0E,0xF5,0x0F,0x49,0xFF,0xF9,0x69,0x49,0xFF,0xF8,0xC7,0x51,0xFF,0x8A,0x10,
+0xFC,0xC0,0xFC,0x48,0x2E,0x07,0xF0,0xEB,0x2E,0x17,0xF0,0xEC,0x40,0x00,0x20,0x08,
+0xFE,0x0F,0xF0,0x8C,0x2E,0x07,0xF0,0xED,0x2E,0x67,0xF0,0xF0,0xF0,0x87,0x2E,0x07,
+0xF0,0xEE,0x2E,0x77,0xF0,0xF2,0x96,0x06,0xF0,0x8D,0x2E,0x07,0xF0,0xEF,0xF0,0x88,
+0x54,0x03,0x00,0x0F,0xF0,0x89,0x2E,0x07,0xF0,0xF1,0x92,0xC4,0x54,0xA0,0x00,0x0F,
+0x40,0x80,0x10,0x09,0x84,0x1F,0x10,0x0F,0x80,0x39,0x10,0x0F,0x80,0x3A,0x10,0x0F,
+0x80,0x3B,0x10,0x0F,0x80,0x3C,0x10,0x0F,0x80,0x3D,0x10,0x0F,0x80,0x3E,0x10,0x0F,
+0x80,0x3F,0x2E,0x07,0xF0,0xE9,0x97,0x86,0x5A,0x08,0x08,0x08,0x2E,0x17,0xF0,0xF3,
+0x2E,0x97,0xF0,0xF4,0xF1,0x86,0xD5,0x0B,0x5A,0x08,0x05,0x06,0x2E,0x97,0xF0,0xF3,
+0xF7,0x86,0xD5,0x05,0x44,0x90,0x00,0xFF,0x14,0x9F,0x80,0x06,0x84,0x20,0x3C,0x1B,
+0xF8,0x6F,0x3E,0x17,0xF0,0xDC,0x5A,0x08,0x05,0x26,0x46,0x00,0x00,0x82,0xA0,0x44,
+0x58,0x10,0x80,0x01,0xA8,0x44,0xA0,0x84,0x44,0x11,0x00,0x00,0xFE,0x57,0xA8,0x44,
+0x84,0x00,0x80,0x20,0x49,0xFF,0xF7,0xC7,0x84,0x00,0x80,0x20,0x49,0xFF,0xE2,0xC4,
+0x46,0x10,0x00,0x81,0x44,0x0F,0xFD,0xFF,0x04,0x20,0x80,0x33,0xFE,0x16,0x14,0x00,
+0x80,0x33,0x84,0x00,0x84,0x21,0x49,0xFF,0xD7,0x82,0x84,0x00,0x80,0x20,0x49,0xFF,
+0xCE,0x43,0x84,0x00,0x49,0xFF,0xD2,0x0A,0x84,0x00,0x49,0xFF,0xD2,0x1B,0xF0,0x07,
+0x5A,0x00,0xFF,0x16,0x46,0x00,0x00,0x81,0x04,0x10,0x00,0x23,0x04,0x00,0x00,0x23,
+0x96,0x5F,0x92,0x0C,0x96,0x1F,0xF1,0x8B,0xF0,0x8A,0x84,0x20,0xF0,0x07,0x49,0xFF,
+0xF9,0x75,0xF0,0x07,0x84,0x23,0x49,0xFF,0xF9,0x71,0xD5,0x04,0x84,0x00,0xF0,0x8A,
+0xF0,0x8B,0xF0,0x06,0x5A,0x08,0xFF,0x04,0x5A,0x90,0xFF,0x12,0x50,0x0F,0x80,0x3F,
+0xB6,0x1F,0x50,0x1F,0x80,0x3A,0x50,0x0F,0x80,0x39,0x50,0x2F,0x80,0x3B,0xB0,0xCF,
+0x50,0x4F,0x80,0x3D,0x50,0x5F,0x80,0x3E,0x49,0xFF,0xF8,0x37,0x84,0x41,0x84,0x01,
+0x80,0x29,0x80,0xA2,0x85,0x20,0xB6,0x1F,0x84,0x65,0xF0,0x06,0x84,0x80,0x49,0xFF,
+0xF8,0x53,0x80,0x09,0xF1,0x0C,0x44,0x20,0x00,0xFF,0x80,0x69,0xF4,0x08,0xF5,0x09,
+0xB7,0x3F,0xF6,0x81,0x14,0xAF,0x80,0x02,0x14,0x8F,0x80,0x03,0x14,0x9F,0x80,0x04,
+0x49,0xFF,0xF8,0xD6,0xF0,0x0D,0x84,0x63,0xF0,0x84,0xB6,0x7F,0x84,0x05,0xF6,0x81,
+0x14,0xAF,0x80,0x02,0x14,0x8F,0x80,0x03,0xF1,0x0C,0x44,0x20,0x00,0xFF,0xF4,0x08,
+0xF5,0x09,0x49,0xFF,0xF8,0xC5,0x2E,0x07,0xF0,0xE9,0x5A,0x08,0x08,0x2A,0x96,0x3A,
+0x4E,0x05,0x00,0x04,0x84,0x01,0xD5,0x02,0x80,0x09,0x49,0xFF,0xDE,0x23,0x54,0x13,
+0x80,0x01,0x46,0x00,0x00,0x82,0xC9,0x13,0xA0,0x44,0x58,0x10,0x80,0x01,0xA8,0x44,
+0xA0,0x84,0x44,0x11,0x00,0x00,0xFE,0x57,0xA8,0x44,0x40,0x03,0x98,0x09,0x54,0x13,
+0x80,0x3E,0x96,0x06,0x92,0x21,0x49,0xFF,0xF7,0x2E,0xD5,0x0A,0xA0,0x84,0x84,0x3E,
+0xFE,0x56,0xA8,0x44,0xA0,0x84,0x44,0x1E,0xFF,0xFF,0xFE,0x56,0xA8,0x44,0x49,0xFF,
+0xF7,0x86,0x2E,0x07,0xEF,0xBD,0xC0,0x04,0x49,0xFF,0xE4,0xD5,0xD5,0x03,0x44,0x0F,
+0xED,0xED,0x44,0x44,0x80,0x10,0x3C,0x0B,0xF8,0x6F,0xB4,0xA4,0xB4,0x04,0xB4,0x24,
+0x40,0x30,0x58,0x09,0xB4,0x04,0x92,0xB6,0x92,0x14,0x40,0x20,0x88,0x09,0x54,0x42,
+0x80,0x08,0x54,0x10,0x00,0x01,0x54,0x01,0x80,0x04,0xFE,0x27,0xFE,0x0F,0x54,0x11,
+0x00,0x02,0xFE,0x0F,0x3E,0x07,0xF0,0xDC,0x84,0x01,0x49,0xFF,0xD1,0x57,0x84,0x01,
+0x49,0xFF,0xD1,0x68,0x2E,0x07,0xF0,0xE9,0x5A,0x08,0x08,0x08,0x84,0x00,0x49,0xFF,
+0xF5,0xD3,0x49,0xFF,0xF3,0xD8,0xD5,0x19,0x5A,0x08,0x05,0x18,0x46,0x00,0x00,0x82,
+0x84,0x3E,0xA0,0x84,0xFE,0x56,0xA8,0x44,0xA0,0x84,0x44,0x1E,0xFF,0xFF,0xFE,0x56,
+0xA8,0x44,0x46,0x10,0x00,0x81,0x04,0x00,0x80,0x33,0x58,0x00,0x02,0x00,0x14,0x00,
+0x80,0x33,0x84,0x00,0x49,0xFF,0xF4,0xD9,0x2E,0x07,0xF0,0xE9,0x5A,0x08,0x08,0x16,
+0x54,0x03,0x80,0x01,0xC8,0x0C,0x46,0x00,0x00,0x82,0x84,0x3E,0xA0,0x84,0xFE,0x56,
+0xA8,0x44,0xA0,0x84,0x44,0x1E,0xFF,0xFF,0xFE,0x56,0xA8,0x44,0x97,0xFA,0x4E,0x75,
+0x00,0x05,0x84,0x00,0x49,0xFF,0xDD,0x9E,0xF0,0x07,0x5A,0x00,0xFF,0x0A,0xF0,0x0B,
+0x84,0x20,0x49,0xFF,0xD5,0xE8,0xF0,0x0A,0x84,0x23,0x49,0xFF,0xD5,0xE4,0x00,0x7F,
+0x80,0x3F,0x00,0x0F,0x80,0x39,0x00,0x1F,0x80,0x3A,0x00,0x2F,0x80,0x3B,0x00,0x3F,
+0x80,0x3C,0x00,0x4F,0x80,0x3D,0x00,0x5F,0x80,0x3E,0xB6,0xFF,0x49,0xFF,0xF7,0x84,
+0x84,0x00,0x80,0x40,0xF3,0x08,0xF4,0x09,0x80,0xA6,0xB7,0x5F,0x14,0x8F,0x80,0x01,
+0x44,0x10,0x00,0xF0,0x49,0xFF,0xF7,0xD9,0x84,0x05,0x44,0x10,0x00,0xF0,0x84,0x43,
+0xF3,0x08,0xF4,0x09,0x80,0xA6,0xB7,0x5F,0x14,0x8F,0x80,0x01,0x49,0xFF,0xF7,0xCD,
+0x49,0xFF,0xF7,0x2B,0xFC,0xC8,0xFC,0x40,0x51,0xFF,0xF6,0xB0,0xB0,0x14,0x84,0x20,
+0x44,0x20,0x04,0x80,0x49,0x00,0x0D,0xA6,0x84,0x20,0x44,0x20,0x04,0x80,0x50,0x0F,
+0x84,0xD0,0x49,0x00,0x0D,0x9F,0x2E,0x67,0xF0,0xEC,0x2E,0x07,0xF0,0xED,0x40,0x63,
+0x20,0x08,0xFE,0x37,0xF0,0x8D,0x2E,0x07,0xF0,0xEE,0x2E,0x17,0xF0,0xEB,0xF0,0x86,
+0x2E,0x07,0xF0,0xEF,0x2E,0x67,0xF0,0xF3,0xF0,0x87,0x2E,0x07,0xF0,0xF0,0x85,0x4A,
+0x54,0x20,0x00,0x0F,0x92,0x04,0x96,0x06,0xF0,0x89,0x2E,0x07,0xF0,0xF1,0xF2,0x88,
+0x54,0x90,0x00,0x0F,0x40,0x80,0x10,0x09,0x2E,0x07,0xF0,0xF2,0xF0,0x8E,0x2E,0x07,
+0xF0,0xF4,0xF0,0x8F,0x84,0x1F,0x10,0x0F,0x80,0x49,0x10,0x0F,0x80,0x4A,0x10,0x0F,
+0x80,0x4B,0x10,0x0F,0x80,0x4C,0x10,0x0F,0x80,0x4D,0x10,0x0F,0x80,0x4E,0x10,0x0F,
+0x80,0x4F,0x84,0x00,0x3C,0x0B,0xF8,0x6F,0x3E,0x07,0xF0,0xDC,0x5A,0x10,0xFF,0x03,
+0x81,0x41,0x2E,0x07,0xF0,0xEA,0x96,0x06,0xF0,0x8B,0x5A,0x08,0x01,0x14,0x46,0x00,
+0x00,0x82,0xA0,0x44,0x58,0x10,0x80,0x01,0xA8,0x44,0xA0,0x84,0x44,0x11,0x00,0x00,
+0xFE,0x57,0xA8,0x44,0x84,0x00,0x80,0x20,0x49,0xFF,0xF6,0x25,0xF0,0x0B,0x49,0xFF,
+0xDD,0x01,0x49,0xFF,0xF2,0xF6,0xF0,0x91,0x49,0xFF,0xF2,0xF6,0xF0,0x90,0x84,0x00,
+0x49,0xFF,0xD0,0x74,0x84,0x00,0x49,0xFF,0xD0,0x85,0xF0,0x06,0x5A,0x00,0xFF,0x16,
+0x46,0x00,0x00,0x81,0x04,0x10,0x00,0x23,0x04,0x00,0x00,0x23,0x96,0x5F,0x92,0x0C,
+0x96,0x1F,0xF1,0x8C,0xF0,0x8A,0x84,0x20,0xF0,0x06,0x49,0xFF,0xF7,0xDF,0xF0,0x06,
+0x84,0x23,0x49,0xFF,0xF7,0xDB,0xD5,0x04,0x84,0x00,0xF0,0x8A,0xF0,0x8C,0xF0,0x0E,
+0x5A,0x08,0xFF,0x04,0x5A,0x60,0xFF,0x12,0x50,0x0F,0x80,0x4F,0xB6,0x1F,0x50,0x1F,
+0x80,0x4A,0x50,0x0F,0x80,0x49,0x50,0x2F,0x80,0x4B,0xB0,0xD3,0x50,0x4F,0x80,0x4D,
+0x50,0x5F,0x80,0x4E,0x49,0xFF,0xF6,0xA1,0x84,0xE1,0x80,0x26,0xF0,0x0E,0x80,0x47,
+0x84,0x65,0x84,0x80,0x80,0xA7,0xB6,0xFF,0x49,0xFF,0xF6,0xBE,0xF1,0x09,0x84,0x00,
+0x80,0x60,0xB6,0x1F,0xF1,0x81,0xF0,0x84,0xF1,0x0D,0xF2,0x0F,0xF4,0x07,0xF5,0x08,
+0x14,0x9F,0x80,0x02,0x14,0x8F,0x80,0x03,0x49,0xFF,0xF7,0x42,0xF0,0x09,0x84,0x63,
+0xB6,0x7F,0xF0,0x81,0xF1,0x0D,0x84,0x05,0xF2,0x0F,0xF4,0x07,0xF5,0x08,0x14,0x9F,
+0x80,0x02,0x14,0x8F,0x80,0x03,0xF7,0x84,0x49,0xFF,0xF7,0x32,0x49,0xFF,0xF6,0x1F,
+0x2E,0x67,0xEF,0xC8,0x97,0xB0,0xC6,0x07,0x2E,0x07,0xEF,0xBD,0xC0,0x3C,0x49,0xFF,
+0xE3,0x6A,0xD5,0x3B,0x50,0x7F,0x84,0xD0,0x4C,0x65,0x3F,0xF8,0x49,0xFF,0xF6,0x0F,
+0xF2,0x10,0x84,0x00,0xB0,0xD4,0x50,0x45,0x7F,0xFF,0xF1,0x11,0x38,0x10,0x81,0x11,
+0xCE,0x10,0x38,0x13,0x81,0x09,0x38,0x11,0x81,0x09,0x5A,0xA8,0x01,0x1F,0xA5,0x50,
+0x9A,0x69,0x96,0x49,0x97,0x4B,0xAD,0x50,0x4E,0x54,0x00,0x18,0xFE,0x4A,0xD5,0x14,
+0x38,0x53,0x81,0x11,0xE0,0xA1,0xE8,0x03,0x38,0x13,0x81,0x09,0x38,0xF1,0x81,0x11,
+0xE0,0x2F,0xE8,0x03,0x38,0x11,0x81,0x09,0x4C,0x62,0x40,0x08,0x38,0x13,0x81,0x01,
+0x38,0x51,0x81,0x01,0x8A,0x25,0xAC,0x50,0x8C,0x01,0x8C,0x42,0x5A,0x0A,0x40,0xD7,
+0x8C,0xC1,0xD5,0xCB,0x44,0x0F,0xED,0xED,0x44,0x44,0x80,0x10,0x3C,0x0B,0xF8,0x6F,
+0xB4,0xA4,0xB4,0x04,0xB4,0x24,0x40,0x30,0x58,0x09,0xB4,0x04,0x92,0xB6,0x92,0x14,
+0x40,0x20,0x88,0x09,0x54,0x42,0x80,0x08,0x54,0x10,0x00,0x01,0x54,0x01,0x80,0x04,
+0xFE,0x27,0xFE,0x0F,0x54,0x11,0x00,0x02,0xFE,0x0F,0x3E,0x07,0xF0,0xDC,0x46,0x00,
+0x00,0x82,0x84,0x3E,0xA0,0x84,0xFE,0x56,0xA8,0x44,0xA0,0x84,0x44,0x1E,0xFF,0xFF,
+0xFE,0x56,0xA8,0x44,0x84,0x01,0x49,0xFF,0xCF,0xA9,0x84,0x01,0x49,0xFF,0xCF,0xBA,
+0x4E,0xA2,0x00,0x09,0xF0,0x0B,0x5A,0x08,0x01,0x0E,0x84,0x00,0x49,0xFF,0xDC,0x22,
+0xD5,0x09,0xF5,0x10,0x80,0x0A,0x50,0x12,0x84,0x80,0x1A,0x02,0x80,0x01,0xD9,0xFE,
+0xD5,0xF2,0xF0,0x06,0x5A,0x00,0xFF,0x0A,0xF0,0x0C,0x84,0x20,0x49,0xFF,0xD4,0x63,
+0xF0,0x0A,0x84,0x23,0x49,0xFF,0xD4,0x5F,0x00,0x6F,0x80,0x4F,0x00,0x0F,0x80,0x49,
+0x00,0x1F,0x80,0x4A,0x00,0x2F,0x80,0x4B,0x00,0x3F,0x80,0x4C,0x00,0x4F,0x80,0x4D,
+0x00,0x5F,0x80,0x4E,0xB6,0xDF,0x49,0xFF,0xF5,0xFF,0x84,0x00,0x80,0x40,0xF3,0x07,
+0xF4,0x08,0xF5,0x09,0xB7,0x3F,0x14,0x8F,0x80,0x01,0x44,0x10,0x00,0xF0,0x49,0xFF,
+0xF6,0x54,0x84,0x05,0x44,0x10,0x00,0xF0,0x84,0x43,0xF3,0x07,0xF4,0x08,0xF5,0x09,
+0xB7,0x3F,0x14,0x8F,0x80,0x01,0x49,0xFF,0xF6,0x48,0x49,0xFF,0xF5,0xA6,0x51,0xFF,
+0x89,0x50,0xFC,0xC0,0xFC,0x40,0x51,0xFF,0xF5,0x30,0x49,0xFF,0xCD,0x47,0xF0,0x91,
+0x84,0x20,0x44,0x20,0x04,0x80,0x50,0x0F,0x81,0xD0,0x49,0x00,0x0C,0x1B,0x44,0x20,
+0x04,0x80,0x84,0x20,0x50,0x0F,0x86,0x50,0x49,0x00,0x0C,0x14,0x2E,0x07,0xF0,0xEF,
+0x2E,0x87,0xF0,0xEE,0xF0,0x88,0x2E,0x07,0xF0,0xF0,0x2E,0xA7,0xF0,0xF2,0x54,0x10,
+0x00,0x0F,0x92,0x04,0x96,0x06,0xF0,0x8A,0x2E,0x07,0xF0,0xF1,0xF1,0x89,0x54,0x10,
+0x00,0x0F,0x92,0x04,0xF0,0x8C,0x84,0x1F,0xF1,0x8B,0x10,0x0F,0x80,0x49,0x2E,0x17,
+0xF0,0xED,0x10,0x0F,0x80,0x4A,0x10,0x0F,0x80,0x4B,0x10,0x0F,0x80,0x4C,0x10,0x0F,
+0x80,0x4D,0x10,0x0F,0x80,0x4E,0x10,0x0F,0x80,0x4F,0x54,0x04,0x00,0x01,0xF0,0x8F,
+0x84,0x00,0xF1,0x87,0x2E,0x67,0xF0,0xF3,0x2E,0x77,0xF0,0xEC,0x2E,0x97,0xF0,0xEB,
+0x3C,0x0B,0xF8,0x6F,0x3E,0x07,0xF0,0xDC,0x49,0xFF,0xF1,0x8E,0xF0,0x8D,0x84,0x01,
+0x49,0xFF,0xDB,0x6B,0x2E,0x07,0xF0,0xE9,0xF1,0x07,0x5A,0x08,0x32,0x12,0x2E,0x77,
+0xF0,0xEC,0x2E,0x07,0xF0,0xED,0x40,0x73,0xA0,0x08,0xFF,0xC7,0x2E,0x87,0xF0,0xEE,
+0x84,0x01,0x5A,0x90,0xFF,0x17,0x14,0x9F,0x80,0x07,0xF0,0x8F,0xD5,0x15,0x5A,0x00,
+0x33,0x06,0x40,0x73,0xA0,0x08,0xFF,0xCF,0xD5,0x0A,0x2E,0x77,0xF0,0xEB,0x2E,0x07,
+0xF0,0xEC,0x40,0x73,0xA0,0x08,0xFF,0xC7,0x2E,0x87,0xF0,0xED,0x84,0x00,0xD5,0x03,
+0xF0,0x8F,0x84,0x0A,0xF0,0x87,0x5A,0x80,0xFF,0x16,0x46,0x00,0x00,0x81,0x04,0x10,
+0x00,0x23,0x04,0x00,0x00,0x23,0x96,0x5F,0x92,0x0C,0x96,0x1F,0xF1,0x90,0xF0,0x8E,
+0x84,0x20,0x80,0x08,0x49,0xFF,0xF6,0x52,0x80,0x08,0x84,0x23,0x49,0xFF,0xF6,0x4E,
+0xD5,0x04,0x84,0x00,0xF0,0x8E,0xF0,0x90,0x5A,0xA8,0xFF,0x04,0x5A,0x60,0xFF,0x12,
+0x50,0x0F,0x80,0x4F,0xB6,0x1F,0x50,0x1F,0x80,0x4A,0x50,0x0F,0x80,0x49,0x50,0x2F,
+0x80,0x4B,0xB0,0xD3,0x50,0x4F,0x80,0x4D,0x50,0x5F,0x80,0x4E,0x49,0xFF,0xF5,0x15,
+0x85,0x21,0x80,0x0A,0x80,0x26,0x80,0x49,0x84,0x65,0x84,0x80,0x80,0xA9,0xB7,0x3F,
+0x49,0xFF,0xF5,0x32,0xF0,0x0A,0x84,0xC0,0xF0,0x81,0xF0,0x0B,0x80,0x27,0xF0,0x82,
+0xF0,0x0C,0x44,0x20,0x00,0xFF,0xF0,0x83,0x80,0x66,0x80,0x06,0xF4,0x08,0xF5,0x09,
+0xB6,0xDF,0xF6,0x84,0x49,0xFF,0xF5,0xB4,0xF0,0x0A,0x85,0x43,0xF0,0x81,0xF0,0x0B,
+0x80,0x27,0xF0,0x82,0xF0,0x0C,0x44,0x20,0x00,0xFF,0xF0,0x83,0xF0,0x0F,0x80,0x6A,
+0xF4,0x08,0xF5,0x09,0xF0,0x84,0xB7,0x5F,0x84,0x05,0x49,0xFF,0xF5,0xA1,0x49,0xFF,
+0xCD,0x6E,0x80,0x06,0x49,0xFF,0xCC,0x62,0x80,0x06,0x49,0xFF,0xCC,0x51,0x80,0x06,
+0x49,0xFF,0xF1,0x1D,0x80,0x06,0x49,0xFF,0xF0,0x66,0x80,0x09,0x49,0xFF,0xF0,0x6F,
+0x49,0xFF,0xF0,0x16,0x49,0xFF,0xEF,0xFF,0x80,0x0A,0x49,0xFF,0xF0,0xB3,0x80,0x06,
+0x49,0xFF,0xDC,0x32,0x49,0x00,0x04,0xEE,0x84,0x04,0x49,0xFF,0xD6,0x19,0x44,0x00,
+0x7F,0xFF,0x49,0x00,0x04,0xF4,0x80,0x06,0x49,0xFF,0xD6,0x45,0x80,0x06,0x49,0xFF,
+0xD5,0x39,0x80,0x06,0x49,0xFF,0xCE,0xE6,0x49,0xFF,0xD7,0xEE,0xF0,0x8F,0x80,0x06,
+0x49,0xFF,0xD7,0xE1,0x80,0x09,0x49,0xFF,0xD0,0xFB,0x49,0xFF,0xD6,0xE7,0x49,0xFF,
+0xCF,0x3F,0x5A,0x00,0x01,0xFE,0x84,0x01,0x49,0xFF,0xF2,0xCE,0x49,0xFF,0xF0,0xDD,
+0x46,0x10,0x00,0x91,0x04,0x00,0x80,0x11,0x58,0x00,0x00,0x02,0x14,0x00,0x80,0x11,
+0x2E,0x07,0xF0,0xE9,0x5A,0x08,0x32,0x74,0xF0,0x0D,0x84,0x20,0x44,0x20,0x04,0x80,
+0x49,0x00,0x0B,0x00,0x2E,0x67,0xEF,0xC8,0x97,0xB0,0xC6,0x09,0x2E,0x07,0xEF,0xBD,
+0x4E,0x02,0x00,0xA0,0x49,0xFF,0xE1,0x87,0x48,0x00,0x00,0x9E,0x44,0x74,0x80,0x08,
+0xF0,0x07,0x8C,0x02,0xE2,0xC0,0xE8,0xF3,0x84,0x01,0x49,0xFF,0xF2,0x98,0x49,0xFF,
+0xF4,0x0D,0xB4,0x07,0x92,0x02,0x96,0x06,0xC8,0x06,0x49,0x00,0x05,0x06,0x2E,0x07,
+0xEF,0xC8,0xC0,0xF8,0x84,0x04,0xAE,0x38,0x84,0x00,0x49,0xFF,0xF2,0x88,0xE6,0xC2,
+0xE9,0x43,0x50,0x9F,0x80,0x50,0x80,0x09,0x44,0x10,0x00,0xC0,0x49,0xFF,0xE3,0xCA,
+0xF2,0x07,0x80,0x09,0xF3,0x0D,0x84,0x20,0x50,0x4F,0x86,0x50,0x50,0x5F,0x81,0xD0,
+0x50,0x91,0x00,0x01,0x5A,0x68,0x02,0x17,0xF2,0x07,0x38,0xA0,0x05,0x11,0x38,0xA2,
+0x05,0x09,0x38,0xA2,0x85,0x09,0x5A,0x28,0x01,0x24,0xA4,0x98,0x8A,0x4A,0x96,0x91,
+0x40,0xA1,0x00,0x11,0x4E,0xA5,0x00,0x05,0x12,0xA1,0x80,0x00,0xD5,0x19,0xFE,0x92,
+0xD5,0x16,0x38,0x20,0x05,0x11,0x38,0xA2,0x05,0x11,0xE1,0x42,0xE8,0x03,0x38,0x22,
+0x05,0x09,0x38,0xF2,0x85,0x11,0xE0,0x4F,0xE8,0x03,0x38,0x22,0x85,0x09,0x4C,0x64,
+0xC0,0x08,0x38,0x22,0x05,0x01,0x38,0xA2,0x85,0x01,0x8A,0x4A,0xAC,0x98,0x8C,0x21,
+0x8C,0x66,0x5A,0x18,0xC0,0xD1,0x8C,0xC1,0x97,0xB1,0xD5,0xA3,0x5A,0x08,0x33,0x98,
+0x84,0x01,0x49,0xFF,0xF2,0x3C,0x2E,0x07,0xEF,0xC8,0xC0,0x13,0x84,0x00,0xB1,0x94,
+0x49,0xFF,0xF2,0x35,0x80,0x06,0x44,0x10,0x00,0xC0,0x49,0xFF,0xE3,0x7B,0x84,0x20,
+0xF0,0x0D,0x44,0x20,0x04,0x80,0x49,0x00,0x0A,0x7D,0x84,0x20,0x84,0x66,0xD5,0x15,
+0x84,0xE3,0x44,0x64,0x80,0x08,0x49,0xFF,0xF3,0x99,0xB4,0x06,0x92,0x02,0x96,0x06,
+0xC8,0x06,0x49,0x00,0x04,0x92,0x2E,0x07,0xEF,0xC8,0xC0,0xF8,0x8E,0xE1,0x84,0x04,
+0x97,0xF9,0xAE,0x30,0xCF,0xF1,0xD5,0xDB,0xF4,0x0D,0x42,0x00,0x8C,0x24,0x38,0x23,
+0x05,0x11,0x8C,0x21,0x38,0x22,0x00,0x09,0x5A,0x18,0xC0,0xF8,0x48,0xFF,0xFF,0x60,
+0x44,0x0F,0xED,0xED,0x44,0x44,0x80,0x10,0x3C,0x0B,0xF8,0x6F,0xB4,0xA4,0xB4,0x04,
+0xB4,0x24,0x40,0x30,0x58,0x09,0xB4,0x04,0x92,0xB6,0x92,0x14,0x54,0x42,0x80,0x08,
+0x40,0x20,0x88,0x09,0x54,0x10,0x00,0x01,0x54,0x01,0x80,0x04,0xFE,0x27,0xFE,0x0F,
+0x54,0x11,0x00,0x02,0xFE,0x0F,0x46,0x10,0x00,0x91,0x3E,0x07,0xF0,0xDC,0x04,0x20,
+0x80,0x11,0x84,0x1D,0xFE,0x16,0x14,0x00,0x80,0x11,0x49,0xFF,0xD5,0xFF,0x84,0x00,
+0x49,0xFF,0xF1,0xEA,0x84,0x00,0x49,0xFF,0xD9,0xC0,0x84,0x00,0x49,0xFF,0xD0,0x08,
+0xF0,0x0F,0x49,0xFF,0xD6,0xE8,0x84,0x01,0x49,0xFF,0xCD,0xE4,0x49,0xFF,0xE4,0x1D,
+0x2E,0x07,0xF0,0xCE,0x84,0x00,0x3E,0x07,0xF0,0xCE,0x3E,0x07,0xF0,0xCD,0xF0,0x11,
+0x49,0xFF,0xCB,0x2C,0x84,0x00,0x49,0xFF,0xEF,0xEA,0x84,0x00,0x49,0xFF,0xEF,0x33,
+0x84,0x00,0x49,0xFF,0xEF,0x3C,0x49,0xFF,0xEE,0xE3,0x84,0x01,0x49,0xFF,0xD4,0x1A,
+0x5A,0x80,0xFF,0x0A,0xF0,0x10,0x84,0x20,0x49,0xFF,0xD2,0x0D,0xF0,0x0E,0x84,0x23,
+0x49,0xFF,0xD2,0x09,0x00,0x6F,0x80,0x4F,0x00,0x0F,0x80,0x49,0x00,0x1F,0x80,0x4A,
+0x00,0x2F,0x80,0x4B,0x00,0x3F,0x80,0x4C,0x00,0x4F,0x80,0x4D,0x00,0x5F,0x80,0x4E,
+0xB6,0xDF,0x49,0xFF,0xF3,0xA9,0xF0,0x0B,0xF3,0x08,0xB6,0x1F,0xF0,0x0C,0xF4,0x09,
+0xF0,0x81,0x84,0x00,0x80,0x40,0xF5,0x0A,0x44,0x10,0x00,0xF0,0x49,0xFF,0xF3,0xFD,
+0xF0,0x0B,0x44,0x10,0x00,0xF0,0xB6,0x1F,0xF0,0x0C,0x84,0x43,0xF0,0x81,0xF3,0x08,
+0x84,0x05,0xF4,0x09,0xF5,0x0A,0x49,0xFF,0xF3,0xF0,0x49,0xFF,0xF3,0x4E,0x51,0xFF,
+0x8A,0xD0,0xFC,0xC0,0xFC,0x40,0x51,0xFF,0xF6,0x98,0x2E,0x07,0xF0,0xED,0x2E,0x77,
+0xF0,0xF0,0xF0,0x8A,0x2E,0x07,0xF0,0xEF,0xFA,0x58,0xF0,0x83,0x54,0x03,0x80,0x0F,
+0x92,0xE4,0xF0,0x84,0x54,0x03,0x80,0x01,0xF0,0x85,0x2E,0x07,0xF0,0xF1,0x2E,0x67,
+0xF0,0xF4,0x54,0x10,0x00,0x0F,0x92,0x04,0xF1,0x86,0xF0,0x87,0x84,0x20,0xB0,0x10,
+0x49,0x00,0x09,0xB0,0x84,0x20,0x44,0x20,0x04,0x80,0xB0,0x1A,0x49,0x00,0x09,0xAA,
+0x50,0x0F,0x84,0xE8,0x84,0x20,0x44,0x20,0x04,0x80,0x49,0x00,0x09,0xA3,0x84,0x00,
+0x3C,0x0B,0xF8,0x6F,0x3E,0x07,0xF0,0xDC,0x5A,0x60,0xFF,0x04,0x97,0xF1,0xD5,0x02,
+0xFA,0xF8,0x49,0xFF,0xEF,0x46,0xF0,0x8C,0x49,0xFF,0xEF,0x46,0x81,0x20,0x84,0x00,
+0x80,0x20,0x80,0x80,0x80,0xA0,0x44,0x22,0x06,0x1C,0x44,0x32,0x06,0x44,0x49,0xFF,
+0xDC,0xE8,0x49,0xFF,0xEF,0x48,0x84,0x01,0x49,0xFF,0xF1,0x3E,0xF0,0x0A,0x5A,0x00,
+0xFF,0x12,0x46,0x00,0x00,0x81,0x50,0x20,0x00,0x8C,0xB4,0x22,0x96,0x5F,0xF1,0x88,
+0xB4,0x22,0xB4,0x02,0x92,0x2C,0x96,0x5F,0x92,0x08,0xF1,0x89,0x54,0xA0,0x00,0x0F,
+0xD5,0x06,0x85,0x40,0x14,0xAF,0x80,0x09,0x14,0xAF,0x80,0x08,0x46,0x00,0x00,0x82,
+0x84,0xC0,0x50,0x80,0x00,0x10,0x44,0x22,0x06,0x1C,0x84,0x00,0x38,0x11,0x19,0x01,
+0xF2,0x8B,0x49,0xFF,0xD0,0x65,0xF2,0x0B,0x84,0x05,0x38,0x11,0x19,0x01,0x49,0xFF,
+0xD0,0x5F,0xF2,0x0B,0x84,0x02,0x38,0x11,0x19,0x01,0x49,0xFF,0xD0,0x59,0x44,0x22,
+0x06,0x44,0x84,0x20,0x38,0x01,0x18,0x00,0xF2,0x8B,0x49,0xFF,0xD1,0x54,0xF2,0x0B,
+0x84,0x23,0x38,0x01,0x18,0x00,0x49,0xFF,0xD1,0x4E,0xF2,0x0B,0x84,0x22,0x38,0x01,
+0x18,0x00,0x49,0xFF,0xD1,0x48,0x49,0xFF,0xEF,0x08,0x49,0xFF,0xF2,0x5F,0x49,0xFF,
+0xEE,0xFA,0x84,0xA0,0x50,0x3F,0x84,0xE8,0x96,0x29,0xE2,0x07,0xF0,0x8B,0xE8,0x44,
+0xF3,0x8F,0xF5,0x8E,0x49,0xFF,0xEE,0xF9,0x49,0xFF,0xF2,0x50,0x49,0xFF,0xEE,0xEB,
+0x9E,0x79,0x80,0x49,0x84,0x00,0x51,0xEF,0x80,0x68,0xF1,0x8D,0xF3,0x0F,0xF5,0x0E,
+0xF1,0x0C,0xF4,0x0B,0x38,0x10,0x81,0x11,0xCC,0x14,0x38,0x11,0x81,0x09,0x38,0x1F,
+0x01,0x09,0x5A,0x78,0x01,0x24,0x02,0xF1,0x00,0x00,0x40,0x17,0x84,0x01,0x96,0x49,
+0x40,0xF0,0x80,0x11,0x12,0xF1,0x00,0x00,0x4E,0xF4,0x00,0x19,0xFE,0x4A,0xD5,0x15,
+0x38,0xF1,0x81,0x11,0x40,0xF7,0x84,0x07,0xE8,0x03,0x38,0x11,0x81,0x09,0x38,0xFF,
+0x01,0x11,0xE0,0x2F,0xE8,0x03,0x38,0x1F,0x01,0x09,0xF1,0x0D,0xD9,0x07,0x38,0x11,
+0x81,0x01,0x38,0xFF,0x01,0x01,0x8A,0x2F,0xAC,0x50,0x8C,0x01,0x8C,0x42,0x5A,0x0A,
+0x40,0xD1,0x8C,0xA1,0xD5,0xBA,0xB4,0x28,0x84,0x1E,0xFE,0x0E,0xB6,0x08,0xB4,0x28,
+0x44,0x0E,0xFF,0xFF,0xFE,0x0E,0xB6,0x08,0x84,0x01,0x49,0xFF,0xCC,0x17,0x84,0x01,
+0x49,0xFF,0xCC,0x28,0xB0,0x10,0x80,0xA9,0x38,0x00,0x19,0x01,0x50,0x24,0x84,0x80,
+0x2A,0x12,0x80,0x01,0xE0,0x20,0x40,0x00,0xBC,0x1A,0x96,0x01,0xDA,0xFA,0xB0,0xD0,
+0x38,0x01,0x99,0x09,0x8C,0xC1,0x5A,0x60,0x14,0x04,0x48,0xFF,0xFF,0x66,0x84,0x00,
+0x44,0x10,0xFF,0xFF,0x80,0x40,0x38,0x41,0x81,0x01,0x97,0x40,0xE2,0x81,0x8C,0x01,
+0x40,0x12,0x3C,0x1B,0x40,0x22,0xBC,0x1B,0x5A,0x08,0x14,0xF7,0x44,0x02,0x06,0x1C,
+0x12,0x24,0x80,0x00,0x38,0x00,0x09,0x01,0x12,0x14,0x80,0x03,0x12,0x04,0x80,0x01,
+0x44,0x00,0x00,0xF0,0x12,0x04,0x80,0x02,0x2E,0x07,0xEF,0xBD,0xC0,0x04,0x49,0xFF,
+0xDF,0x3A,0xD5,0x03,0x44,0x0F,0xED,0xED,0x44,0x44,0x80,0x10,0x3C,0x0B,0xF8,0x6F,
+0xB4,0xA4,0xB4,0x04,0xB4,0x24,0x40,0x30,0x58,0x09,0xB4,0x04,0x92,0xB6,0x92,0x14,
+0x40,0x20,0x88,0x09,0x54,0x42,0x80,0x08,0x54,0x10,0x00,0x01,0x54,0x01,0x80,0x04,
+0xFE,0x27,0xFE,0x0F,0x54,0x11,0x00,0x02,0xFE,0x0F,0x3E,0x07,0xF0,0xDC,0xF0,0x0A,
+0x5A,0x00,0xFF,0x0E,0xF0,0x08,0x84,0x20,0x49,0xFF,0xD0,0x8D,0xF0,0x09,0x84,0x23,
+0x49,0xFF,0xD0,0x89,0x80,0x0A,0x84,0x22,0x49,0xFF,0xD0,0x85,0xF0,0x06,0xF3,0x03,
+0xB6,0x1F,0xF0,0x07,0xF4,0x04,0xF0,0x81,0x84,0x00,0x80,0x40,0xF5,0x05,0x44,0x10,
+0x00,0xF0,0x49,0xFF,0xF2,0x8A,0xF0,0x06,0xF3,0x03,0xB6,0x1F,0xF0,0x07,0xF4,0x04,
+0xF0,0x81,0xF5,0x05,0x84,0x05,0x44,0x10,0x00,0xF0,0x84,0x43,0x49,0xFF,0xF2,0x7D,
+0xF0,0x06,0x44,0x10,0x00,0xF0,0xB6,0x1F,0xF0,0x07,0xF3,0x03,0xF0,0x81,0x84,0x02,
+0x80,0x40,0xF4,0x04,0xF5,0x05,0x49,0xFF,0xF2,0x70,0x49,0xFF,0xF1,0xCE,0x51,0xFF,
+0x89,0x68,0xFC,0xC0,0xFC,0x00,0x44,0x04,0x30,0x10,0xB4,0x00,0x92,0x08,0x96,0x00,
+0xC0,0x15,0x44,0x14,0x30,0x08,0x84,0x1E,0xB4,0x41,0x44,0x64,0x30,0x0C,0xFE,0x16,
+0xB6,0x01,0xB4,0x06,0x58,0x00,0x00,0x01,0xB6,0x06,0x84,0x01,0x49,0xFF,0xD5,0xB0,
+0xB4,0x06,0x58,0x00,0x00,0x02,0xB6,0x06,0xFC,0x80,0x44,0x14,0x00,0x40,0x46,0x20,
+0x81,0x00,0xB6,0x41,0x44,0x64,0x30,0x0C,0xB6,0x01,0xB4,0x06,0x92,0x04,0x96,0x06,
+0xC8,0xE1,0x44,0x00,0x00,0x64,0x49,0xFF,0xD5,0x92,0x3C,0x00,0x00,0xC1,0x8C,0x01,
+0x96,0x01,0x5C,0xF0,0x00,0x64,0x3C,0x08,0x00,0xC1,0xE9,0xF0,0xD5,0xD3,0xFC,0x40,
+0x44,0x64,0x80,0x88,0x46,0xA0,0x10,0x00,0xB4,0x06,0x46,0x90,0x20,0x00,0x40,0x00,
+0x28,0x04,0xB6,0x06,0xB4,0x06,0x44,0x74,0x55,0x08,0x40,0x00,0x24,0x04,0xB6,0x06,
+0xB4,0x27,0x44,0x0F,0xFF,0xBF,0xFE,0x0E,0xB6,0x07,0x84,0x21,0x80,0x07,0x49,0xFF,
+0xCC,0x66,0x44,0x04,0x58,0x88,0x84,0x37,0xB4,0x40,0xFE,0x56,0xB6,0x20,0x84,0x21,
+0x49,0xFF,0xCC,0x32,0xB4,0x27,0x44,0x0F,0xFF,0x7F,0xFE,0x0E,0xB6,0x07,0xB4,0x27,
+0x44,0x0F,0xFF,0xEF,0xFE,0x0E,0xB6,0x07,0x84,0x21,0x80,0x07,0x49,0xFF,0xCC,0x4F,
+0xB4,0x06,0x40,0xA0,0x28,0x04,0xB7,0x46,0xB4,0x06,0x40,0x90,0x24,0x04,0xB7,0x26,
+0x49,0xFF,0xD1,0xBC,0xE6,0x03,0xE8,0x1F,0x44,0x14,0x2C,0x0C,0x46,0x00,0x01,0x00,
+0xB4,0x41,0xFE,0x17,0x84,0x41,0xB6,0x01,0x80,0x62,0x44,0x04,0x28,0x0C,0x44,0x14,
+0x24,0x0C,0x49,0xFF,0xCC,0x5F,0x44,0x14,0x2C,0x18,0x46,0x00,0x04,0x00,0xB4,0x41,
+0xFE,0x17,0x84,0x41,0xB6,0x01,0x80,0x62,0x44,0x04,0x28,0x18,0x44,0x14,0x24,0x18,
+0x49,0xFF,0xCC,0x50,0x49,0xFF,0xD1,0x9A,0xE6,0x03,0xE8,0x2B,0x44,0x14,0x2C,0x14,
+0xB4,0x01,0x58,0x00,0x10,0x00,0xB6,0x01,0x84,0x05,0x49,0xFF,0xD7,0x56,0x84,0x41,
+0x80,0x62,0x44,0x04,0x28,0x14,0x44,0x14,0x24,0x14,0x49,0xFF,0xCC,0x3B,0x44,0x04,
+0x2C,0x1C,0x44,0x1B,0xFF,0xFF,0xB4,0x40,0xFE,0x56,0xB6,0x20,0xB4,0x40,0x46,0x10,
+0x00,0x80,0xFE,0x57,0xB6,0x20,0xB4,0x40,0x46,0x10,0x04,0x00,0xFE,0x57,0x84,0x41,
+0xB6,0x20,0x80,0x62,0x44,0x04,0x28,0x1C,0x44,0x14,0x24,0x1C,0x49,0xFF,0xCC,0x22,
+0x46,0x60,0x00,0x81,0x49,0xFF,0xCC,0x30,0x04,0x13,0x03,0xA0,0x84,0x10,0xFE,0x0E,
+0x14,0x03,0x03,0xA0,0x04,0x13,0x03,0x9F,0x46,0x0F,0x0F,0xFF,0x50,0x00,0x0F,0xFF,
+0xFE,0x46,0x46,0x20,0x40,0x00,0xFE,0x57,0x14,0x13,0x03,0x9F,0x04,0x13,0x03,0x9F,
+0x46,0x27,0x00,0x00,0x94,0x4C,0x92,0x24,0xFE,0x57,0x14,0x13,0x03,0x9F,0x04,0x13,
+0x03,0x9E,0xFE,0x0E,0x46,0x10,0x70,0x00,0xFE,0x0F,0x14,0x03,0x03,0x9E,0x49,0xFF,
+0xCC,0x04,0x46,0x00,0x03,0x33,0x50,0x00,0x03,0x33,0x44,0x14,0x50,0x0C,0x14,0x03,
+0x00,0x34,0x14,0x03,0x00,0x36,0xB4,0x01,0x58,0x00,0x00,0x01,0xB6,0x01,0x44,0x04,
+0x00,0x90,0x84,0x2A,0xAC,0x40,0x84,0x00,0x49,0xFF,0xD8,0x65,0x44,0x16,0x20,0x04,
+0x46,0x00,0x10,0x00,0xB4,0x41,0xFE,0x17,0xB6,0x01,0x44,0x14,0x2C,0x18,0x46,0x0B,
+0xFF,0xFF,0xB4,0x41,0x50,0x00,0x0F,0xFF,0xFE,0x16,0xB6,0x01,0x44,0x14,0x2C,0x1C,
+0x44,0x0F,0xFF,0xEF,0xB4,0x41,0xFE,0x16,0x84,0x41,0xB6,0x01,0x80,0x62,0x44,0x04,
+0x28,0x18,0x44,0x14,0x24,0x18,0x49,0xFF,0xCB,0xC5,0x84,0x41,0x44,0x04,0x28,0x1C,
+0x44,0x14,0x24,0x1C,0x80,0x62,0x49,0xFF,0xCB,0xBD,0x49,0xFF,0xD1,0x07,0xE6,0x03,
+0xE8,0x10,0x44,0x14,0x2C,0x04,0x46,0x00,0x00,0x80,0xB4,0x41,0xFE,0x17,0x84,0x41,
+0xB6,0x01,0x80,0x62,0x44,0x04,0x28,0x04,0x44,0x14,0x24,0x04,0x49,0xFF,0xCB,0xAA,
+0x49,0xFF,0xD0,0xF4,0xE6,0x03,0xE9,0x40,0x84,0x08,0x49,0xFF,0xD6,0xB6,0x84,0x00,
+0x49,0xFF,0xD6,0xBC,0x84,0x41,0x80,0x62,0x44,0x04,0x28,0x14,0x44,0x14,0x24,0x14,
+0x49,0xFF,0xCB,0x98,0x44,0x14,0x2C,0x0C,0x46,0x0F,0xFE,0xFF,0xB4,0x41,0x50,0x00,
+0x0F,0xFF,0xFE,0x16,0x84,0x41,0xB6,0x01,0x80,0x62,0x44,0x04,0x28,0x0C,0x44,0x14,
+0x24,0x0C,0x49,0xFF,0xCB,0x87,0x44,0x04,0x2C,0x04,0x46,0x10,0x08,0x00,0xB4,0x40,
+0xFE,0x57,0xB6,0x20,0xB4,0x40,0x46,0x1F,0xFB,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x56,
+0xB6,0x20,0xB4,0x40,0x46,0x10,0x00,0x80,0xFE,0x57,0xB6,0x20,0xB4,0x40,0x44,0x14,
+0x00,0x00,0xFE,0x57,0x84,0x41,0xB6,0x20,0x80,0x62,0x44,0x04,0x28,0x04,0x44,0x14,
+0x24,0x04,0x49,0xFF,0xCB,0x67,0xFC,0xC0,0xFC,0x00,0x84,0x01,0x49,0xFF,0xC8,0x38,
+0x84,0x03,0x49,0xFF,0xC8,0x58,0x84,0x00,0x49,0xFF,0xC8,0xDE,0x84,0x00,0x49,0xFF,
+0xC8,0x62,0x84,0x03,0x49,0xFF,0xC8,0x80,0x84,0x00,0x49,0xFF,0xC8,0x8B,0x84,0x01,
+0x49,0xFF,0xD7,0x62,0xFC,0x80,0xFC,0x00,0x84,0x00,0x44,0x10,0x00,0xF0,0x49,0xFF,
+0xCF,0x0A,0x84,0x02,0x44,0x10,0x00,0xF0,0x49,0xFF,0xCF,0x05,0x84,0x01,0x44,0x10,
+0x00,0xF0,0x49,0xFF,0xCF,0x00,0x84,0x03,0x44,0x10,0x00,0xF0,0x49,0xFF,0xCE,0xFB,
+0x84,0x04,0x44,0x10,0x00,0xF0,0x49,0xFF,0xCE,0xF6,0x44,0x10,0x00,0xF0,0x84,0x05,
+0x49,0xFF,0xCE,0xF1,0x84,0x01,0x49,0xFF,0xD6,0x30,0x84,0x03,0x84,0x2A,0x49,0xFF,
+0xCF,0x3E,0x84,0x00,0x84,0x23,0x49,0xFF,0xC5,0xFF,0xFC,0x80,0xFC,0x01,0xF0,0x81,
+0x49,0xFF,0xD0,0x6C,0xE6,0x03,0xE9,0x04,0xF0,0x01,0x49,0xFF,0xDB,0x34,0xFC,0x81,
+0xFC,0x00,0x84,0x01,0x49,0xFF,0xCA,0x91,0x84,0x01,0x49,0xFF,0xC6,0x3B,0x84,0x01,
+0x49,0xFF,0xC9,0x75,0x84,0x00,0x49,0xFF,0xEB,0xB8,0x84,0x00,0x49,0xFF,0xEB,0x9B,
+0x84,0x01,0x49,0xFF,0xC8,0xA6,0x84,0x01,0x49,0xFF,0xCD,0xD3,0x84,0x01,0x49,0xFF,
+0xCD,0xE0,0x84,0x01,0x49,0xFF,0xC8,0x9D,0x84,0x01,0x49,0xFF,0xCD,0xF8,0x84,0x01,
+0x49,0xFF,0xC9,0x9C,0x84,0x01,0x49,0xFF,0xC9,0xAD,0x84,0x01,0x49,0xFF,0xC9,0xC3,
+0x49,0xFF,0xD0,0x3C,0xE6,0x03,0xE8,0x05,0x84,0x01,0x84,0x2F,0x49,0xFF,0xCF,0x9A,
+0x49,0xFF,0xD0,0x34,0xE6,0x03,0xE9,0x03,0x49,0xFF,0xD0,0x34,0x49,0xFF,0xD0,0x2E,
+0xE6,0x03,0xE8,0x03,0x49,0xFF,0xD0,0x37,0x84,0x04,0x49,0xFF,0xD0,0x48,0xFC,0x80,
+0xFC,0x00,0x49,0xFF,0xD0,0x66,0x49,0xFF,0xD0,0xCB,0x49,0xFF,0xD1,0x79,0x84,0x01,
+0x49,0xFF,0xD0,0x50,0x49,0xFF,0xDB,0x30,0xFC,0x80,0xFC,0x00,0x49,0xFF,0xD1,0x17,
+0xFC,0x80,0xFC,0x02,0xF0,0x83,0xF1,0x81,0xFD,0x01,0xF2,0x82,0xB6,0x7F,0x49,0xFF,
+0xD2,0x1F,0xF0,0x01,0xB4,0x3F,0x49,0xFF,0xD2,0x37,0xF0,0x03,0xF1,0x01,0xF2,0x02,
+0xB4,0x7F,0x49,0xFF,0xD2,0x55,0xB4,0x1F,0x49,0xFF,0xD2,0x76,0xFC,0x82,0xFC,0x00,
+0x44,0x00,0x77,0x7E,0x49,0xFF,0xDC,0xC3,0x84,0x20,0x80,0x61,0x84,0x41,0x44,0x00,
+0x00,0x64,0x49,0xFF,0xFF,0xE0,0x84,0x00,0x80,0x20,0x49,0xFF,0xD2,0xA1,0x84,0x00,
+0x80,0x20,0x49,0xFF,0xCB,0xF9,0x84,0x00,0x49,0xFF,0xD2,0xA4,0x84,0x20,0x84,0x01,
+0x49,0xFF,0xD2,0x1C,0x84,0x00,0x49,0xFF,0xD2,0x69,0x84,0x40,0x84,0x61,0x44,0x00,
+0x03,0x41,0x84,0x27,0x49,0xFF,0xFF,0xC7,0x84,0x00,0x84,0x21,0x49,0xFF,0xD2,0x88,
+0x84,0x01,0x80,0x20,0x49,0xFF,0xCB,0xE0,0x49,0x00,0x00,0x44,0xFC,0x80,0xFC,0x00,
+0x80,0xC0,0x5A,0x08,0x01,0x0D,0x84,0x00,0x3E,0x07,0xEF,0xC9,0x44,0x10,0x01,0xF4,
+0x84,0x02,0x49,0x00,0x00,0x3B,0x84,0x02,0x80,0x26,0xD5,0x03,0x84,0x02,0x84,0x20,
+0x49,0x00,0x00,0x42,0xFC,0x80,0xFC,0x00,0x2E,0x07,0xEF,0xC9,0xC0,0x07,0x84,0x02,
+0x49,0x00,0x00,0x31,0x84,0x00,0x3E,0x07,0xEF,0xC9,0x84,0x02,0x49,0x00,0x00,0x4F,
+0x5A,0x08,0x01,0x04,0x3E,0x07,0xEF,0xC8,0xFC,0x80,0xFC,0x00,0x49,0xFF,0xD2,0xAB,
+0xFC,0x80,0xFC,0x00,0x5A,0x08,0x01,0x0B,0xFE,0x0B,0x96,0x01,0x49,0xFF,0xD2,0x9A,
+0x49,0xFF,0xD2,0xA8,0x49,0xFF,0xD2,0x9F,0xFC,0x80,0x49,0xFF,0xD2,0xB3,0xFC,0x80,
+0x3C,0x00,0x00,0xE4,0x3C,0x10,0x00,0xE4,0x96,0x01,0x4C,0x00,0xFF,0xFB,0xDD,0x9E,
+0x84,0x00,0x3C,0x08,0x00,0xC3,0xDD,0x9E,0x44,0x22,0x17,0x30,0x38,0x11,0x01,0x09,
+0xDD,0x9E,0xFC,0x00,0x80,0xC0,0x49,0xFF,0xFF,0xED,0x44,0x12,0x17,0x50,0x38,0x00,
+0x99,0x09,0xFC,0x80,0x80,0x60,0x5A,0x18,0x01,0x10,0xFC,0x20,0x80,0xC1,0x80,0xE0,
+0x49,0xFF,0xFF,0xF1,0x3C,0x20,0x00,0xC3,0x40,0x13,0x1C,0x0C,0xFE,0x57,0x96,0x49,
+0x3C,0x18,0x00,0xC3,0xFC,0xA0,0x84,0x41,0x3C,0x00,0x00,0xC3,0x40,0x11,0x0C,0x0C,
+0xFE,0x4B,0xFE,0x46,0x3C,0x18,0x00,0xC3,0xDD,0x9E,0x3C,0x10,0x00,0xC3,0x40,0x10,
+0x80,0x0E,0x96,0x46,0xC9,0x03,0x80,0x01,0xDD,0x9E,0xFC,0x00,0x80,0xC0,0x49,0xFF,
+0xFF,0xC1,0x44,0x12,0x17,0x50,0x44,0x22,0x17,0x30,0x38,0x10,0x99,0x01,0x38,0x21,
+0x19,0x01,0x8A,0x01,0x96,0x01,0xE2,0x02,0x56,0x07,0x80,0x01,0xFC,0x80,0x3C,0x00,
+0x00,0xE4,0x8C,0x01,0x96,0x01,0x3C,0x08,0x00,0xE4,0xDD,0x9E,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x02,0x02,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0xE3,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0xC4,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0xA5,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0x86,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0x67,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0x48,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0xA4,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x62,0xA4,0x02,0x9D,0xB4,0x64,0x72,0x04,0x02,0x3A,0x6F,
+0x9C,0x3C,0x64,0x62,0x00,0x02,0x9F,0xB2,0x64,0x62,0x00,0x03,0x64,0x00,0x00,0x08,
+0x49,0x00,0x01,0x29,0x3A,0x6F,0x9C,0x04,0x64,0x62,0xA4,0x03,0x64,0x72,0x04,0x03,
+0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0xA4,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0x94,0x3C,
+0x3A,0xFF,0xBF,0xBC,0x64,0x12,0xA4,0x02,0x64,0x22,0x04,0x02,0x3A,0x1F,0x88,0x3C,
+0x64,0x12,0x00,0x02,0x9E,0x4A,0x64,0x12,0x00,0x03,0x44,0x10,0x00,0xA4,0x38,0x10,
+0x82,0x02,0xDD,0x21,0x3A,0x0F,0x84,0x04,0x64,0x02,0x00,0x43,0x64,0x00,0x00,0x08,
+0x64,0x02,0xA4,0x03,0x64,0x12,0x04,0x03,0x3A,0xFF,0xBF,0x84,0x3A,0x1F,0x94,0x04,
+0x3A,0x0F,0x80,0x04,0x64,0x00,0x00,0x04,0x3A,0x1F,0x94,0x3C,0x3A,0xFF,0xBF,0xBC,
+0x44,0x10,0x00,0xA4,0x38,0x10,0x82,0x02,0xDD,0x21,0x3A,0xFF,0xBF,0x84,0x3A,0x1F,
+0x94,0x04,0x3A,0x0F,0x80,0x04,0x64,0x00,0x00,0x04,0xD5,0x00,0x3A,0x0F,0x80,0x3C,
+0x84,0x00,0xD5,0xEB,0x3A,0x0F,0x80,0x3C,0x84,0x01,0xD5,0xE7,0x3A,0x0F,0x80,0x3C,
+0x84,0x02,0xD5,0xE3,0x3A,0x0F,0x80,0x3C,0x84,0x03,0xD5,0xDF,0x3A,0x0F,0x80,0x3C,
+0x84,0x04,0xD5,0xDB,0x3A,0x0F,0x80,0x3C,0x84,0x05,0xD5,0xD7,0x3A,0x0F,0x80,0x3C,
+0x84,0x06,0xD5,0xD3,0x3A,0x0F,0x80,0x3C,0x84,0x07,0xD5,0xCF,0x3A,0x0F,0x80,0x3C,
+0x84,0x08,0xD5,0xCB,0x3A,0x0F,0x80,0x3C,0x84,0x09,0xD5,0xC7,0x3A,0x0F,0x80,0x3C,
+0x84,0x0A,0xD5,0xC3,0x3A,0x0F,0x80,0x3C,0x84,0x0B,0xD5,0xBF,0x3A,0x0F,0x80,0x3C,
+0x84,0x0C,0xD5,0xBB,0x3A,0x0F,0x80,0x3C,0x84,0x0D,0xD5,0xB7,0x3A,0x0F,0x80,0x3C,
+0x84,0x0E,0xD5,0xB3,0x3A,0x0F,0x80,0x3C,0x84,0x0F,0xD5,0xAF,0x3A,0x0F,0x80,0x3C,
+0xFA,0x00,0xD5,0xAB,0x3A,0x0F,0x80,0x3C,0xFA,0x01,0xD5,0xA7,0x3A,0x0F,0x80,0x3C,
+0xFA,0x02,0xD5,0xA3,0x3A,0x0F,0x80,0x3C,0xFA,0x03,0xD5,0x9F,0x3A,0x0F,0x80,0x3C,
+0xFA,0x04,0xD5,0x9B,0x3A,0x0F,0x80,0x3C,0xFA,0x05,0xD5,0x97,0x3A,0x0F,0x80,0x3C,
+0xFA,0x06,0xD5,0x93,0x3A,0x0F,0x80,0x3C,0xFA,0x07,0xD5,0x8F,0x3A,0x0F,0x80,0x3C,
+0xFA,0x08,0xD5,0x8B,0x3A,0x0F,0x80,0x3C,0xFA,0x09,0xD5,0x87,0x3A,0x0F,0x80,0x3C,
+0xFA,0x0A,0xD5,0x83,0x3A,0x0F,0x80,0x3C,0xFA,0x0B,0x48,0xFF,0xFF,0x7F,0x3A,0x0F,
+0x80,0x3C,0xFA,0x0C,0x48,0xFF,0xFF,0x7A,0x3A,0x0F,0x80,0x3C,0xFA,0x0D,0x48,0xFF,
+0xFF,0x75,0x3A,0x0F,0x80,0x3C,0xFA,0x0E,0x48,0xFF,0xFF,0x70,0x3A,0x0F,0x80,0x3C,
+0x44,0x00,0x00,0x1F,0x48,0xFF,0xFF,0x6A,0x84,0x01,0x64,0x04,0xC0,0x02,0x44,0x02,
+0x00,0x01,0x64,0x04,0xE0,0x03,0x45,0xD2,0x15,0xA8,0x3F,0xC8,0x00,0x00,0x45,0xF2,
+0x5F,0xF8,0x84,0x00,0x42,0x0E,0x00,0x21,0x49,0x00,0x00,0x31,0x49,0x00,0x03,0x3C,
+0xD5,0x00,0x92,0x00,0xFC,0x00,0x44,0x02,0x00,0x00,0x44,0x22,0x04,0xC4,0x44,0x10,
+0x82,0xA0,0x8A,0x40,0x49,0x00,0x03,0x60,0x44,0x02,0x04,0xC4,0x44,0x22,0x27,0xA0,
+0x84,0x20,0x8A,0x40,0x49,0x00,0x03,0x7E,0xFC,0x80,0x84,0x00,0x64,0x05,0xE4,0x03,
+0x84,0x1F,0x64,0x03,0x04,0x03,0x64,0x03,0x24,0x03,0x64,0x12,0x24,0x02,0x44,0x0F,
+0x0F,0xFF,0xFE,0x0E,0x64,0x02,0x24,0x03,0x64,0x12,0x00,0x02,0x84,0x18,0xFE,0x0E,
+0x64,0x02,0x00,0x03,0x64,0x00,0x00,0x08,0xDD,0x9E,0xFC,0x00,0x49,0xFF,0xFF,0xE7,
+0x64,0x00,0x80,0x02,0x92,0x1E,0xC0,0x06,0x64,0x00,0x84,0x02,0x96,0x2E,0xC0,0x02,
+0xD5,0x00,0x49,0xFF,0xFF,0xC9,0x64,0x12,0x00,0x43,0x64,0x00,0x00,0x08,0x64,0x00,
+0x00,0x08,0xFC,0x80,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,
+0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0x44,0x04,0x80,0x04,0xA6,0x01,0x96,0x06,0xC0,0x05,
+0x44,0x04,0x80,0x05,0x84,0x21,0xAE,0x40,0xDD,0x9E,0x44,0x04,0x80,0x01,0xA6,0x00,
+0xC8,0x05,0xFC,0x00,0x49,0xFF,0xD5,0x1F,0xFC,0x80,0xDD,0x9E,0xFC,0x00,0x44,0x04,
+0x80,0x00,0xA6,0x03,0x49,0xFF,0xD9,0xD6,0xFC,0x80,0x44,0x14,0x80,0x04,0x44,0x04,
+0x80,0x84,0xA6,0x88,0xB4,0x00,0x96,0x06,0xFE,0x16,0xC0,0x03,0x84,0x01,0xAE,0x08,
+0xDD,0x9E,0xFC,0x00,0x44,0x04,0x80,0x00,0xA6,0x03,0x49,0xFF,0xCF,0xBC,0xFC,0x80,
+0x44,0x14,0x80,0x14,0xA6,0x08,0x96,0x06,0xC0,0x09,0x84,0x01,0xAE,0x08,0x44,0x14,
+0x80,0x94,0xB4,0x01,0x58,0x00,0x00,0x01,0xB6,0x01,0x44,0x14,0x80,0x14,0xA6,0x08,
+0x92,0x01,0x96,0x06,0xC0,0x09,0x84,0x02,0xAE,0x08,0x44,0x14,0x80,0x94,0xB4,0x01,
+0x58,0x00,0x00,0x02,0xB6,0x01,0xDD,0x9E,0xFC,0x00,0x49,0xFF,0xD3,0xD6,0xFC,0x80,
+0x44,0x04,0x80,0x04,0xA6,0x02,0x92,0x02,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x06,
+0x84,0x24,0xAE,0x40,0xDD,0x9E,0x44,0x14,0x80,0x04,0xA6,0x0B,0x92,0x01,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x07,0x84,0x42,0xAE,0x80,0xA6,0x0B,0x96,0x06,0xC0,0x05,
+0x44,0x04,0x80,0x07,0x84,0x21,0xAE,0x40,0xDD,0x9E,0x44,0x04,0x80,0x08,0xB4,0x20,
+0x92,0x24,0x96,0x46,0xC1,0x03,0xFA,0x20,0xAE,0x40,0xB4,0x00,0x84,0x21,0x96,0x06,
+0xC0,0x06,0x44,0x04,0x80,0x08,0xAE,0x40,0x3E,0x17,0xEF,0xF1,0x44,0x04,0x80,0x08,
+0xB4,0x20,0x92,0x21,0x96,0x46,0xC1,0x06,0x84,0x22,0xAE,0x40,0x84,0x21,0x3E,0x17,
+0xEF,0xF0,0xB4,0x00,0x92,0x02,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x08,0x84,0x24,
+0xAE,0x40,0xDD,0x9E,0xDD,0x9E,0xFC,0x00,0x49,0xFF,0xD2,0x9D,0xFC,0x80,0xFC,0x00,
+0x49,0xFF,0xD2,0xF8,0xFC,0x80,0xFC,0x00,0x49,0xFF,0xC3,0xD7,0xFC,0x80,0x44,0x14,
+0x80,0x08,0xB4,0x01,0x92,0x08,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x09,0x84,0x41,
+0xAE,0x80,0xB4,0x01,0x92,0x09,0x96,0x06,0xC0,0x0F,0x44,0x04,0x80,0x09,0x84,0x22,
+0xAE,0x40,0x84,0x01,0x3E,0x07,0xEF,0xFA,0x44,0x04,0x50,0x28,0xB4,0x00,0x92,0x06,
+0x96,0x1F,0x3E,0x07,0xEF,0xF9,0xDD,0x9E,0xFC,0x00,0x44,0x04,0x80,0x08,0xB4,0x00,
+0x92,0x12,0x96,0x06,0xC0,0x58,0x44,0x14,0x80,0x88,0xB4,0x01,0x92,0x12,0x96,0x06,
+0xC0,0x52,0x44,0x04,0x80,0x0A,0x84,0x44,0xAE,0x80,0xB4,0x41,0x44,0x0D,0xFF,0xFF,
+0xFE,0x16,0x44,0x67,0x30,0x04,0xB6,0x01,0xB4,0x26,0x84,0x1E,0xFE,0x0E,0xB6,0x06,
+0x84,0x0A,0x49,0xFF,0xCF,0xDC,0xB4,0x06,0x58,0x00,0x00,0x01,0xB6,0x06,0x84,0x0A,
+0x49,0xFF,0xCF,0xD5,0x49,0xFF,0xD7,0x99,0x44,0x00,0x00,0x87,0x49,0xFF,0xD7,0x8E,
+0x44,0x17,0x30,0x10,0xB4,0x01,0x96,0x06,0xC0,0xFE,0x44,0x17,0x30,0x10,0xB4,0x01,
+0x92,0x03,0x96,0x06,0x5A,0x00,0x01,0xFD,0x44,0x67,0x30,0x04,0x84,0x0A,0x49,0xFF,
+0xCF,0xBE,0xB4,0x26,0x84,0x1E,0xFE,0x0E,0xB6,0x06,0x84,0x0A,0x49,0xFF,0xCF,0xB7,
+0xB4,0x06,0x58,0x00,0x00,0x01,0xB6,0x06,0x84,0x0A,0x49,0xFF,0xCF,0xB0,0x44,0x14,
+0x80,0x88,0x84,0x01,0x3E,0x07,0xEF,0xF8,0xB4,0x41,0x44,0x02,0x00,0x00,0xFE,0x17,
+0xB6,0x01,0x44,0x04,0x80,0x0A,0x84,0x22,0xAE,0x40,0x3C,0x0D,0xFB,0xFD,0x8C,0x01,
+0x3C,0x0F,0xFB,0xFD,0x44,0x04,0x80,0x08,0x84,0x21,0xB4,0x00,0x92,0x10,0x96,0x06,
+0xC0,0x0C,0x44,0x04,0x80,0x88,0xB4,0x00,0x92,0x10,0x96,0x06,0xC0,0x06,0x44,0x04,
+0x80,0x0A,0x3E,0x17,0xEF,0xFB,0xAE,0x40,0x44,0x04,0x80,0x08,0xB4,0x00,0x92,0x11,
+0x96,0x06,0xC0,0x0B,0x44,0x04,0x80,0x88,0xB4,0x00,0x92,0x11,0x96,0x06,0xC0,0x05,
+0x44,0x04,0x80,0x0A,0x84,0x22,0xAE,0x40,0xFC,0x80,0x44,0x14,0x80,0x08,0x84,0x41,
+0xB4,0x01,0x92,0x18,0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x0B,0xAE,0x80,0x3E,0x27,
+0xEF,0xBD,0xB4,0x01,0x92,0x19,0x96,0x06,0xC0,0x1D,0x44,0x04,0x80,0x0B,0x84,0x22,
+0xAE,0x40,0x84,0x00,0x3E,0x07,0xEF,0xBD,0x46,0x00,0x00,0x81,0x44,0x1F,0xFE,0xFF,
+0x50,0x30,0x00,0x70,0xB4,0x43,0xFE,0x56,0xB6,0x23,0xB4,0x43,0x44,0x1E,0xFF,0xFF,
+0xFE,0x56,0xB6,0x23,0xB4,0x43,0x46,0x1F,0xEF,0xFF,0x50,0x10,0x8F,0xFF,0xFE,0x56,
+0xB6,0x23,0x44,0x04,0x80,0x08,0xB4,0x00,0x92,0x1A,0x96,0x06,0xC0,0x0E,0x44,0x14,
+0x70,0x08,0xB4,0x01,0x92,0x10,0x40,0x00,0x40,0x08,0x58,0x00,0x78,0x23,0xB6,0x01,
+0x44,0x04,0x80,0x0B,0x84,0x24,0xAE,0x40,0x44,0x04,0x80,0x08,0xB4,0x00,0x92,0x1B,
+0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0B,0x84,0x28,0xAE,0x40,0xDD,0x9E,0x44,0x04,
+0x80,0x04,0xA6,0x02,0x92,0x03,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x06,0x84,0x28,
+0xAE,0x40,0xDD,0x9E,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x10,0x96,0x06,0xC0,0x05,
+0x44,0x04,0x80,0x0E,0x84,0x41,0xAE,0x80,0xB4,0x01,0x92,0x11,0x96,0x06,0xC0,0x05,
+0x44,0x04,0x80,0x0E,0x84,0x22,0xAE,0x40,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x12,
+0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0E,0x84,0x44,0xAE,0x80,0xB4,0x01,0x92,0x13,
+0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0E,0x84,0x28,0xAE,0x40,0x44,0x14,0x80,0x0C,
+0xB4,0x01,0x92,0x14,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0E,0xFA,0x40,0xAE,0x80,
+0xB4,0x01,0x92,0x15,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0E,0xFA,0x30,0xAE,0x40,
+0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x16,0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x0E,
+0x44,0x20,0x00,0x40,0xAE,0x80,0xB4,0x01,0x92,0x17,0x96,0x06,0xC0,0x06,0x44,0x04,
+0x80,0x0E,0x44,0x1F,0xFF,0x80,0xAE,0x40,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x18,
+0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0F,0x84,0x41,0xAE,0x80,0xB4,0x01,0x92,0x19,
+0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0F,0x84,0x22,0xAE,0x40,0x44,0x14,0x80,0x0C,
+0xB4,0x01,0x92,0x1A,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0F,0x84,0x44,0xAE,0x80,
+0xB4,0x01,0x92,0x1B,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0F,0x84,0x28,0xAE,0x40,
+0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x1C,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0F,
+0xFA,0x40,0xAE,0x80,0xB4,0x01,0x92,0x1D,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0F,
+0xFA,0x30,0xAE,0x40,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x1E,0x96,0x06,0xC0,0x06,
+0x44,0x04,0x80,0x0F,0x44,0x20,0x00,0x40,0xAE,0x80,0xB4,0x01,0x4E,0x04,0x00,0x07,
+0x44,0x04,0x80,0x0F,0x44,0x1F,0xFF,0x80,0xAE,0x40,0xDD,0x9E,0x44,0x04,0x80,0x0C,
+0xB4,0x20,0x96,0x46,0xC1,0x03,0x84,0x21,0xAE,0x40,0xB4,0x00,0x92,0x01,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x0C,0x84,0x22,0xAE,0x40,0x44,0x04,0x80,0x0C,0xB4,0x20,
+0x92,0x22,0x96,0x46,0xC1,0x03,0x84,0x24,0xAE,0x40,0xB4,0x00,0x92,0x03,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x0C,0x84,0x28,0xAE,0x40,0x44,0x04,0x80,0x0C,0xB4,0x20,
+0x92,0x24,0x96,0x46,0xC1,0x03,0xFA,0x20,0xAE,0x40,0xB4,0x00,0x92,0x05,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x0C,0xFA,0x30,0xAE,0x40,0x44,0x04,0x80,0x0C,0xB4,0x20,
+0x92,0x26,0x96,0x46,0xC1,0x04,0x44,0x10,0x00,0x40,0xAE,0x40,0xB4,0x00,0x92,0x07,
+0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x0C,0x44,0x1F,0xFF,0x80,0xAE,0x40,0x44,0x14,
+0x80,0x0C,0xB4,0x01,0x92,0x08,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0D,0x84,0x41,
+0xAE,0x80,0xB4,0x01,0x92,0x09,0x96,0x06,0xC0,0x05,0x44,0x04,0x80,0x0D,0x84,0x22,
+0xAE,0x40,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x0A,0x96,0x06,0xC0,0x05,0x44,0x04,
+0x80,0x0D,0x84,0x44,0xAE,0x80,0xB4,0x01,0x92,0x0B,0x96,0x06,0xC0,0x05,0x44,0x04,
+0x80,0x0F,0x84,0x28,0xAE,0x40,0x44,0x14,0x80,0x0C,0xB4,0x01,0x92,0x0C,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x0D,0xFA,0x40,0xAE,0x80,0xB4,0x01,0x92,0x0D,0x96,0x06,
+0xC0,0x05,0x44,0x04,0x80,0x0D,0xFA,0x30,0xAE,0x40,0x44,0x14,0x80,0x0C,0xB4,0x01,
+0x92,0x0E,0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x0D,0x44,0x20,0x00,0x40,0xAE,0x80,
+0xB4,0x01,0x92,0x0F,0x96,0x06,0xC0,0x06,0x44,0x04,0x80,0x0D,0x44,0x1F,0xFF,0x80,
+0xAE,0x40,0xDD,0x9E,0x44,0x04,0x80,0x00,0x44,0x14,0x80,0x80,0xA6,0x80,0xB4,0x21,
+0x96,0x46,0xFE,0x56,0xC1,0x03,0x84,0x21,0xAE,0x40,0xA6,0x00,0x40,0x10,0x04,0x09,
+0x44,0x04,0x80,0x80,0xB4,0x00,0x92,0x01,0x96,0x06,0xFE,0x0E,0xC0,0x05,0x44,0x04,
+0x80,0x00,0x84,0x22,0xAE,0x40,0x44,0x14,0x80,0x00,0xA6,0x08,0x40,0x20,0x08,0x09,
+0x44,0x04,0x80,0x80,0xB4,0x00,0x92,0x02,0x96,0x06,0xFE,0x16,0xC0,0x03,0x84,0x04,
+0xAE,0x08,0xA6,0x08,0x40,0x10,0x0C,0x09,0x44,0x04,0x80,0x80,0xB4,0x00,0x92,0x03,
+0x96,0x06,0xFE,0x0E,0xC0,0x05,0x44,0x04,0x80,0x00,0x84,0x28,0xAE,0x40,0xDD,0x9E,
+0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,0xDD,0x9E,
+0xDD,0x9E,0xDD,0x9E,0xFC,0x00,0x44,0x07,0x10,0x18,0x84,0x20,0xAE,0x41,0x44,0x16,
+0x20,0x04,0x46,0x00,0x10,0x00,0xB4,0x41,0xFE,0x17,0xB6,0x01,0x44,0x00,0x01,0x00,
+0x84,0x20,0x49,0xFF,0xC4,0x25,0x44,0x00,0x01,0x00,0x84,0x20,0x49,0xFF,0xC4,0x2F,
+0x44,0x00,0x01,0x00,0x84,0x21,0x49,0xFF,0xC4,0x39,0x49,0xFF,0xDC,0xDA,0x44,0x14,
+0x30,0x34,0x46,0x00,0x04,0x00,0xB4,0x41,0xFE,0x17,0xB6,0x01,0x49,0xFF,0xD6,0x3B,
+0x49,0xFF,0xD6,0x73,0x49,0xFF,0xCE,0x63,0x49,0xFF,0xD7,0x02,0x49,0xFF,0xCF,0x78,
+0x84,0x00,0xFC,0x80,0x80,0x60,0x54,0xF1,0x00,0x03,0xE9,0x1B,0xE6,0x44,0xE9,0x19,
+0x54,0x41,0x80,0x03,0x54,0x50,0x80,0x03,0xDC,0x14,0xC5,0x0A,0x52,0x52,0x80,0x04,
+0x9A,0x95,0x99,0x69,0x08,0x40,0x80,0x01,0x18,0x41,0x80,0x01,0xD9,0xFC,0x40,0x51,
+0x08,0x09,0xC5,0x07,0x95,0x6A,0x99,0x69,0x96,0x8F,0xA3,0x09,0xAB,0x19,0xD9,0xFE,
+0xC2,0x07,0x99,0x4A,0x08,0x40,0x80,0x01,0x18,0x41,0x80,0x01,0xD9,0xFC,0xDD,0x9E,
+0x80,0x60,0xE6,0x44,0xE9,0x1A,0x54,0x51,0x80,0x03,0xC5,0x08,0x52,0x52,0x80,0x04,
+0x9A,0x95,0x99,0x6B,0x18,0x11,0x80,0x01,0xDB,0xFE,0x40,0x51,0x08,0x09,0x96,0x8F,
+0xC5,0x0C,0x95,0x6A,0x99,0x5D,0x96,0x48,0x40,0x40,0xA0,0x08,0xFE,0x67,0x40,0x40,
+0xC0,0x08,0xFE,0x67,0xAA,0x59,0xDB,0xFF,0x99,0x5A,0xD3,0x04,0x18,0x11,0x80,0x01,
+0xD5,0xFD,0xDD,0x9E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x32,0x19,0x64,0x32,0x33,0x11,0x12,0x20,0xFF,0x07,0xFF,0x07,0x05,0x0A,0x0B,0x00,
+0xAC,0x04,0x02,0x00,0xA4,0x04,0x02,0x00,0x98,0x04,0x02,0x00,0x8C,0x04,0x02,0x00,
+0x7C,0x04,0x02,0x00,0x6C,0x04,0x02,0x00,0x58,0x04,0x02,0x00,0x44,0x04,0x02,0x00,
+0x2C,0x04,0x02,0x00,0x14,0x04,0x02,0x00,0x0A,0x0B,0x0B,0x0B,0x0C,0x0C,0x0C,0x0C,
+0x0C,0x0C,0x00,0x00,0x01,0x05,0x00,0x07,0x02,0x06,0x04,0x08,0x03,0x09,0x00,0x00,
+0x01,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x00,0x00,0x01,0x03,0x04,0x05,
+0x06,0x07,0x08,0x09,0x0A,0x0B,0x00,0x00,0x05,0x05,0x05,0x05,0x05,0x05,0x08,0x08,
+0x08,0x09,0x07,0x06,0x03,0x02,0x08,0x09,0x04,0x09,0x09,0x08,0x30,0x01,0x30,0x01,
+0x30,0x01,0x30,0x01,0x30,0x01,0x30,0x01,0x30,0x01,0x62,0x01,0x50,0x01,0x44,0x01,
+0x74,0x01,0x96,0x01,0x84,0x02,0xC4,0x02,0x5A,0x01,0x46,0x01,0xEE,0x01,0x30,0x01,
+0x44,0x01,0x50,0x01,0x05,0x05,0x05,0x05,0x05,0x05,0x09,0x08,0x08,0x09,0x07,0x06,
+0x03,0x02,0x08,0x09,0x04,0x09,0x09,0x08,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,
+0x08,0x09,0x0A,0x0B,0x0B,0x0A,0x09,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x00,
+0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x00,0x01,0x02,0x00,0x01,0x02,0x03,
+0x04,0x05,0x06,0x07,0x08,0x02,0x01,0x00,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,
+0x08,0x00,0x00,0x01,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x00,0x01,0x00,
+0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,
+0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,
+0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,
+0x01,0x00,0x02,0x00,0x02,0x00,0x01,0x00,0x04,0x80,0x00,0x00,0x08,0x40,0x00,0x00,
+0x10,0x20,0x00,0x00,0x20,0x10,0x00,0x00,0x40,0x08,0x00,0x00,0x80,0x04,0x00,0x00,
+0x00,0x03,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x52,0x02,0x00,0x00,0x52,0x02,0x00,0x00,0x92,0x02,0x00,0x00,0xD2,0x02,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0x00,0x00,0x00,0x90,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,
+0x00,0x00,0x40,0x02,0x40,0x02,0x00,0x00,0xC0,0x00,0xC0,0x00,0x40,0x00,0x40,0x00,
+0x00,0x09,0x09,0x00,0x03,0x03,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
+0x01,0x04,0x04,0x04,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x00,0x01,0x02,
+0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x02,0x01,0x00,0x00,0x01,0x02,0x03,
+0x04,0x00,0x01,0x02,0x03,0x04,0x00,0x00,0x07,0x80,0x03,0x00,0x38,0x70,0x00,0x00,
+0xC0,0x0F,0x00,0x00,0x08,0x40,0x00,0x00,0x10,0x20,0x00,0x00,0x20,0x10,0x00,0x00,
+0x40,0x08,0x00,0x00,0x80,0x04,0x00,0x00,0x00,0x03,0x00,0x00,0x07,0x80,0x03,0x00,
+0x38,0x70,0x00,0x00,0xC0,0x0F,0x00,0x00,0x01,0x00,0x02,0x00,0x02,0x00,0x01,0x00,
+0x04,0x80,0x00,0x00,0x08,0x40,0x00,0x00,0x10,0x20,0x00,0x00,0x20,0x10,0x00,0x00,
+0x40,0x08,0x00,0x00,0x80,0x04,0x00,0x00,0x00,0x03,0x00,0x00,0x38,0x70,0x00,0x00,
+0x38,0x70,0x00,0x00,0x38,0x70,0x00,0x00,0x07,0x80,0x03,0x00,0x38,0x70,0x00,0x00,
+0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x03,0x03,0x03,
+0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x03,0x03,0x01,0x01,0x01,0x01,
+0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
+0x03,0x03,0x03,0x03,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x00,
+0x02,0x00,0x01,0x00,0x04,0x80,0x00,0x00,0x08,0x40,0x00,0x00,0x10,0x20,0x00,0x00,
+0x20,0x10,0x00,0x00,0x40,0x08,0x00,0x00,0x80,0x04,0x00,0x00,0x00,0x03,0x00,0x00,
+0x07,0x80,0x03,0x00,0x38,0x70,0x00,0x00,0xC0,0x0F,0x00,0x00,0x00,0x01,0x02,0x03,
+0x04,0x05,0x06,0x07,0x08,0x00,0x01,0x02,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,
+0x08,0x00,0x01,0x02,0x0B,0x02,0x0B,0x0B,0x0B,0x02,0x00,0x00,0x0B,0x02,0x0B,0x0B,
+0x0B,0x02,0x00,0x00,0x01,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x00,0x00,
+0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x00,0x00,0x00,0x08,0x07,0x06,0x05,
+0x04,0x03,0x02,0x01,0x00,0x00,0x01,0x02,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,
+0x08,0x02,0x01,0x00,0x00,0x01,0x02,0x00,0x80,0x00,0x01,0x00,0x40,0x80,0x00,0x00,
+0x20,0x40,0x00,0x00,0x10,0x20,0x00,0x00,0x08,0x10,0x00,0x00,0x04,0x08,0x00,0x00,
+0x02,0x04,0x00,0x00,0x01,0x02,0x00,0x00,0x07,0x80,0x03,0x00,0x38,0x70,0x00,0x00,
+0xC0,0x0F,0x00,0x00,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x00,0x01,0x02,
+0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x02,0x01,0x00,0x01,0x00,0x02,0x00,
+0x02,0x00,0x01,0x00,0x04,0x80,0x00,0x00,0x08,0x40,0x00,0x00,0x10,0x20,0x00,0x00,
+0x20,0x10,0x00,0x00,0x40,0x08,0x00,0x00,0x80,0x04,0x00,0x00,0x00,0x03,0x00,0x00,
+0x07,0x80,0x03,0x00,0x38,0x70,0x00,0x00,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
+0xDC,0x00,0x0A,0x05,0xF3,0x01,0xA0,0x05,0x04,0x00,0x96,0x00,0x01,0x14,0x96,0x05,
+0x04,0x64,0x00,0x00,0x2C,0x01,0x46,0x00,0x01,0x0A,0x08,0x00,0x27,0x00,0x27,0x00,
+0xA9,0x02,0x79,0x05,0x01,0x01,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x00,
+0x0A,0x0B,0x0B,0x0B,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x00,0x00,0xAC,0x04,0x02,0x00,
+0xA4,0x04,0x02,0x00,0x98,0x04,0x02,0x00,0x8C,0x04,0x02,0x00,0x7C,0x04,0x02,0x00,
+0x6C,0x04,0x02,0x00,0x58,0x04,0x02,0x00,0x44,0x04,0x02,0x00,0x2C,0x04,0x02,0x00,
+0x14,0x04,0x02,0x00,0x5D,0x00,0x44,0x00,0x5A,0x00,0x72,0x00,0x8A,0x00,0xA3,0x00,
+0xBB,0x00,0xD0,0x00,0xE3,0x00,0xF2,0x00,0xFD,0x00,0x02,0x01,0x61,0x00,0x4D,0x00,
+0x68,0x00,0x84,0x00,0xA2,0x00,0xBF,0x00,0xDA,0x00,0xF2,0x00,0x06,0x01,0x13,0x01,
+0x1A,0x01,0x00,0x00,0x65,0x00,0x58,0x00,0x79,0x00,0x9D,0x00,0xC1,0x00,0xE3,0x00,
+0x02,0x01,0x1C,0x01,0x2E,0x01,0x37,0x01,0x6A,0x00,0x67,0x00,0x91,0x00,0xBE,0x00,
+0xEA,0x00,0x13,0x01,0x35,0x01,0x4E,0x01,0x5B,0x01,0x00,0x00,0x72,0x00,0x7C,0x00,
+0xB2,0x00,0xEB,0x00,0x23,0x01,0x52,0x01,0x75,0x01,0x87,0x01,0x7C,0x00,0x99,0x00,
+0xE2,0x00,0x2E,0x01,0x72,0x01,0xA5,0x01,0xC1,0x01,0x00,0x00,0x45,0x00,0x63,0x00,
+0x96,0x00,0xC8,0x00,0xF0,0x00,0x07,0x01,0x51,0x00,0x88,0x00,0xD3,0x00,0x15,0x01,
+0x3C,0x01,0x00,0x00,0x67,0x00,0xCC,0x00,0x40,0x01,0x8A,0x01,0x99,0x00,0x66,0x01,
+0x38,0x70,0x00,0x00,0xFF,0x00,0xFF,0x00,0x03,0x00,0x00,0x00,0x52,0x01,0x00,0x00,
+0x30,0x75,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x24,0x01,0x00,0x00,0x50,0x1D,0x00,0x00,
+0x81,0x08,0x00,0x01,0x02,0x00,0x06,0x0C,0x02,0x00,0x06,0x0C,0x01,0x00,0x04,0x04,
+0x01,0x00,0x03,0x06,0x01,0x00,0x06,0x00,0x05,0x04,0x00,0x00,0x62,0xA4,0xF7,0xD5,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFC,0x4B,0x80,0xC0,0x3C,0x00,0x05,0x9A,0xB0,0x51,0xF0,0x8B,0x3C,0x00,0x05,0x9B,
+0x84,0xE0,0xF0,0x8D,0x3C,0x00,0x05,0x9C,0xF0,0x8C,0x3C,0x00,0x05,0x9D,0xF0,0x8E,
+0x44,0x02,0x00,0x10,0x3A,0x20,0x14,0x04,0x3A,0x20,0x94,0x24,0xA4,0x00,0xAC,0x08,
+0x49,0xFF,0xED,0x97,0x81,0x00,0x3C,0x7B,0xF7,0xD9,0x49,0xFF,0xA2,0x44,0x84,0x20,
+0x44,0x02,0x30,0xC8,0x44,0x20,0x02,0x40,0x49,0xFF,0xFB,0xC6,0x44,0x00,0x7F,0xFF,
+0x3C,0x17,0xF9,0xF5,0x3C,0x0B,0xF7,0x8E,0xFA,0x0E,0xFE,0x0C,0x44,0x10,0x4E,0x1F,
+0xE0,0x20,0x3C,0x7B,0xF7,0x92,0xE8,0x06,0x44,0x10,0x00,0x64,0x40,0x00,0x04,0x16,
+0xD5,0x03,0x44,0x00,0x00,0xC8,0x84,0x40,0x44,0x92,0x30,0xC8,0x95,0x51,0x88,0xA8,
+0x84,0x20,0x40,0x71,0x24,0x00,0x3C,0x43,0xF7,0x92,0x38,0x32,0x85,0x11,0x40,0xF2,
+0x00,0x11,0xE0,0x6F,0x40,0x41,0xBC,0x1A,0x3C,0x4B,0xF7,0x92,0x3C,0x43,0xF7,0x8E,
+0x40,0xA2,0x00,0x11,0xE1,0x43,0x40,0x41,0xBC,0x1A,0xE0,0x03,0x3C,0x4B,0xF7,0x8E,
+0xE8,0x07,0x38,0x33,0x84,0x00,0x58,0x31,0x80,0x40,0x38,0x33,0x84,0x08,0x8C,0x21,
+0x5A,0x18,0x12,0xE3,0x8C,0x52,0x5A,0x2A,0x40,0xDB,0x85,0x20,0x44,0xA2,0x30,0xC8,
+0xFA,0x02,0x42,0xA4,0x80,0x73,0x84,0xE0,0x38,0x05,0x1C,0x00,0x96,0x36,0xC0,0x3B,
+0x84,0x08,0xF0,0x82,0x50,0x0F,0x80,0x42,0xF0,0x84,0x84,0x01,0xF0,0x85,0x44,0x02,
+0x11,0x83,0x84,0x60,0xF0,0x86,0x44,0x02,0x11,0x82,0xF0,0x87,0x40,0x14,0x80,0x11,
+0x44,0x20,0x00,0x40,0xB6,0x7F,0xF3,0x81,0xF3,0x83,0xF3,0x88,0xF3,0x89,0x96,0x3B,
+0x44,0x42,0x30,0xC8,0x80,0xA8,0x49,0xFF,0xBC,0xA6,0x2E,0x27,0xEF,0x92,0x2E,0x07,
+0xEF,0x93,0xFA,0x22,0x42,0x01,0x04,0x73,0x38,0xF4,0x01,0x11,0x5E,0xF7,0x81,0x2C,
+0xE9,0x04,0xA6,0x30,0x8C,0x01,0xAE,0x30,0x02,0x0F,0x80,0x21,0xE6,0x1F,0xE9,0x0B,
+0x84,0x01,0x3E,0x07,0xEF,0x9E,0x3C,0x03,0xF1,0xD9,0x96,0x36,0xC0,0x04,0x84,0x06,
+0x3E,0x07,0xF6,0x3B,0x8C,0xE1,0x5A,0x78,0x12,0xC1,0x8D,0x21,0x5A,0x98,0x20,0xB8,
+0x3C,0xF7,0xF7,0x92,0x5E,0xF7,0x80,0xC8,0xE8,0x04,0x84,0x00,0x3E,0x07,0xEF,0x9E,
+0x2E,0x17,0xEF,0x9E,0xC9,0x04,0xA6,0x30,0xE6,0x02,0xE9,0x03,0x84,0x0A,0xD5,0x05,
+0x2E,0x07,0xEF,0x9D,0xC0,0x04,0x8E,0x01,0x3E,0x07,0xEF,0x9D,0x84,0x00,0x3E,0x07,
+0xEF,0xA8,0x2E,0x07,0xEF,0x9D,0xC0,0x07,0x84,0x01,0x3E,0x07,0xEF,0x9C,0x3E,0x07,
+0xEF,0xA8,0xD5,0x03,0x3E,0x07,0xEF,0x9C,0x84,0x00,0x3E,0x07,0xEF,0xA9,0x2E,0x07,
+0xEF,0x9C,0x5A,0x00,0x01,0x05,0xA6,0x30,0xE6,0x02,0xE9,0x1B,0x84,0x01,0x3E,0x07,
+0xEF,0xA9,0x3C,0x03,0xF1,0xD9,0x96,0x26,0xC0,0x08,0xA6,0x30,0xE6,0x02,0xE9,0x05,
+0xC9,0x04,0x84,0x04,0x3E,0x07,0xF6,0x3B,0x3C,0x03,0xF1,0xD8,0x96,0x16,0xC0,0x6B,
+0xA6,0x30,0xE6,0x02,0xE9,0x68,0xC9,0x67,0x84,0x02,0x3E,0x07,0xF6,0x39,0xD5,0x63,
+0xC0,0x63,0x2E,0x0F,0xEF,0x92,0x22,0x1F,0x80,0x16,0xF0,0x8F,0x22,0x0F,0x80,0x1A,
+0x84,0x40,0x8A,0x01,0xF0,0x8D,0x22,0x1F,0x80,0x18,0x22,0x0F,0x80,0x1C,0x2F,0xEF,
+0xEF,0x93,0x8A,0x01,0x80,0x82,0x80,0xA2,0xF2,0x8A,0xB1,0x91,0xF0,0x8E,0x38,0x11,
+0x18,0x10,0x98,0x32,0x88,0x3E,0x97,0xC9,0xE6,0xF2,0x20,0x00,0x00,0x01,0xE8,0x31,
+0xF3,0x0F,0x88,0x03,0x97,0xC1,0x5C,0xF3,0x80,0x20,0xE8,0x2B,0x80,0xE1,0xFA,0x62,
+0x42,0x70,0x0C,0x73,0x38,0x94,0x1D,0x11,0x3C,0xA3,0xF7,0xD9,0x40,0x74,0x80,0x13,
+0x89,0x47,0x3C,0xAB,0xF7,0xD9,0x4E,0x97,0x00,0x03,0x88,0x89,0x8E,0xE5,0x97,0xFB,
+0x4E,0x77,0x00,0x18,0xF3,0x0D,0xFE,0x5C,0xFA,0x61,0x40,0x10,0x8C,0x36,0xF3,0x0B,
+0x88,0x23,0x96,0x4B,0xF3,0x0A,0x42,0x33,0x84,0x73,0xF1,0x0E,0xF3,0x8A,0xFE,0x0C,
+0xFA,0x2F,0x40,0x00,0x04,0x16,0xF1,0x0C,0x88,0x01,0x96,0x03,0x42,0x53,0x80,0x73,
+0x8C,0x42,0x5A,0x28,0x12,0xC6,0xF3,0x0A,0x40,0x02,0x04,0x0A,0x88,0x60,0x88,0xA0,
+0x40,0x31,0x90,0x76,0x40,0x42,0x90,0x96,0x3C,0x3F,0xFB,0xD7,0x3C,0x4F,0xFB,0xD8,
+0x84,0x01,0xD5,0x02,0x84,0x02,0xFC,0xCB,0x84,0x00,0x3E,0x07,0xEF,0xAC,0xDD,0x9E,
+0xFC,0x00,0x2E,0x07,0xEF,0xAC,0x2E,0x67,0xE1,0xFD,0xC0,0x04,0x5A,0x00,0x01,0x15,
+0xD5,0x3F,0x3C,0x27,0xF1,0x13,0x3C,0x17,0xF1,0x12,0x88,0x22,0x90,0x21,0x3C,0x1F,
+0xFB,0xE5,0x3C,0x27,0xF1,0x15,0x3C,0x17,0xF1,0x14,0x88,0x22,0x90,0x21,0x3C,0x1F,
+0xFB,0xE6,0x84,0x21,0xD5,0x1D,0x3C,0x17,0xF1,0x12,0x3C,0x37,0xF1,0x13,0x3C,0x27,
+0xF1,0x15,0x88,0x61,0x3C,0x17,0xF1,0x14,0x3C,0x5D,0xFB,0xE5,0x88,0x41,0x3C,0x1D,
+0xFB,0xE6,0x90,0x41,0x90,0x61,0x8A,0x22,0x44,0x40,0x00,0x64,0x8A,0xA3,0xFF,0x34,
+0xFE,0x4C,0x42,0x12,0x94,0x73,0xFF,0x24,0xE0,0x24,0xE8,0x05,0x84,0x20,0x3E,0x17,
+0xEF,0xAC,0xD5,0x0F,0x3C,0x13,0xF1,0xD9,0x96,0x4E,0xC1,0x03,0x3E,0x07,0xF6,0x3B,
+0x84,0x01,0x3C,0x3F,0xFB,0xE5,0x3C,0x2F,0xFB,0xE6,0x3E,0x07,0xEF,0xAC,0x84,0x00,
+0xFC,0x80,0xFC,0x00,0x49,0xFF,0xEC,0x05,0x50,0x30,0x04,0x80,0x84,0x20,0x84,0x40,
+0x38,0x40,0x09,0x11,0x8C,0x41,0x88,0x24,0x5A,0x28,0x12,0xFC,0x50,0x00,0x00,0x24,
+0x4C,0x01,0xFF,0xF7,0x44,0xF0,0x02,0x40,0x40,0x10,0xBC,0x36,0x3C,0xF7,0xF7,0x92,
+0x8A,0x2F,0x50,0xF0,0x80,0xC7,0x5C,0xF7,0x81,0x8F,0xE9,0x06,0x3C,0xF7,0xF7,0x8E,
+0x5E,0xF7,0x80,0x97,0xE9,0x09,0x3C,0x0D,0xFB,0xD6,0x58,0x00,0x00,0x40,0x3C,0x0F,
+0xFB,0xD6,0x84,0x01,0xFC,0x80,0x84,0x00,0xFC,0x80,0xFC,0x40,0x44,0x50,0x02,0xD0,
+0x3C,0x73,0xEF,0x08,0x3C,0x93,0xF1,0x00,0x9A,0x38,0x42,0x40,0x14,0x24,0x40,0x42,
+0x1C,0x96,0x97,0x21,0xE2,0x89,0x3C,0x63,0xEF,0x09,0xE9,0x29,0x3C,0x03,0xF1,0x02,
+0xE2,0x04,0xE9,0x25,0x9A,0x71,0x44,0xA0,0x05,0xA0,0x42,0x10,0xA8,0x24,0x40,0x10,
+0x98,0x36,0x3C,0x83,0xF1,0x01,0x96,0x49,0xE2,0x28,0xE9,0x19,0x3C,0x43,0xF1,0x03,
+0xE2,0x81,0xE9,0x15,0x9A,0xBA,0xFF,0x54,0x40,0x72,0x9C,0xF6,0x97,0xF9,0xE2,0xE9,
+0xE9,0x0E,0xE2,0x07,0xE9,0x0C,0x9A,0x33,0x42,0x00,0x28,0x24,0x40,0x00,0x18,0x16,
+0x96,0x01,0xE2,0x08,0xE9,0x04,0x40,0x02,0x00,0x06,0xFC,0xC0,0x84,0x01,0xFC,0xC0,
+0x44,0x30,0x00,0x64,0x3C,0x23,0xEF,0x09,0x9A,0x51,0x9A,0x10,0x2E,0x27,0xE1,0xF3,
+0x96,0x4B,0x96,0x03,0x9A,0x08,0xFE,0xD4,0xE0,0x60,0x56,0x07,0x80,0x01,0xDD,0x9E,
+0x9A,0x59,0xC1,0x0C,0x8A,0x40,0x44,0x40,0x00,0x64,0x42,0x31,0x10,0x24,0x40,0x11,
+0x84,0x36,0x4E,0x14,0x00,0x03,0xFE,0x4A,0x96,0x48,0x2E,0x07,0xE1,0xF2,0xE2,0x01,
+0x56,0x07,0x80,0x01,0xDD,0x9E,0x44,0x30,0x02,0xD0,0x3C,0x23,0xEF,0x08,0x9A,0x10,
+0xFE,0x1C,0x40,0x20,0x08,0x56,0x3C,0x33,0xF0,0xF2,0x96,0x91,0xE2,0x43,0x3C,0x03,
+0xEF,0x09,0xE9,0x15,0x3C,0x33,0xF0,0xF4,0xE2,0x62,0xE9,0x11,0x9A,0x41,0x44,0x20,
+0x05,0xA0,0xFE,0x54,0x40,0x10,0x80,0x36,0x3C,0x03,0xF0,0xF3,0x96,0x49,0xE2,0x20,
+0xE9,0x06,0x3C,0x03,0xF0,0xF5,0x40,0x00,0x04,0x06,0xDD,0x9E,0x84,0x01,0xDD,0x9E,
+0xFC,0x43,0x80,0xE0,0x84,0x00,0x10,0x0F,0x80,0x17,0x3C,0x03,0xF0,0xFD,0x3C,0x83,
+0xF0,0xFC,0xF0,0x82,0x3C,0x03,0xF0,0xF7,0x3C,0xA3,0xF0,0xF6,0xF0,0x83,0x2E,0x07,
+0xE1,0xE0,0xC0,0x09,0x8E,0x01,0x3E,0x07,0xE1,0xE0,0x49,0xFF,0x9D,0xBB,0x85,0x20,
+0x48,0x00,0x02,0x82,0x2E,0x67,0xEF,0xAD,0xCE,0x1D,0x84,0x04,0x49,0xFF,0xF3,0xD3,
+0x81,0x20,0x5A,0x08,0x01,0x18,0x80,0x26,0x84,0x04,0x49,0xFF,0xF3,0xB1,0x3C,0x13,
+0xF1,0xD9,0x3E,0x67,0xEF,0xAC,0x96,0x5E,0xC1,0x0D,0x84,0x03,0x3E,0x07,0xF6,0x3B,
+0x3C,0x0D,0xFB,0xE8,0xC8,0x07,0x3C,0x1D,0xF8,0xED,0x96,0x46,0xC1,0x03,0x3C,0x9F,
+0xFB,0xE8,0x50,0x0F,0x80,0x17,0x49,0xFF,0xFD,0x6D,0x3C,0x4D,0xFB,0xD6,0x80,0xC0,
+0x54,0x42,0x10,0x00,0xC4,0x04,0x49,0xFF,0xA0,0x1A,0xD5,0xD2,0x2E,0x07,0xEF,0xAD,
+0xE6,0x05,0x4E,0xF2,0x02,0x50,0x44,0xF0,0xE2,0x94,0x38,0x07,0x81,0x01,0x40,0xF0,
+0x3C,0x00,0xDD,0x0F,0x0A,0x00,0xDA,0x00,0xDE,0x01,0x0A,0x01,0x86,0x01,0x84,0xE0,
+0x49,0x00,0x03,0xA2,0x3C,0x7F,0xFB,0xE9,0x3E,0x77,0xF6,0x3B,0x3E,0x77,0xF6,0x3A,
+0x3E,0x77,0xF6,0x39,0x3E,0x77,0xEF,0x9F,0x5A,0x68,0x01,0x4D,0x49,0x00,0x04,0x13,
+0x44,0x30,0x07,0xFF,0x44,0x20,0x32,0x64,0x80,0x83,0x80,0xA6,0x44,0x02,0x03,0xF8,
+0x44,0x10,0x19,0x32,0xB6,0xDF,0x49,0x00,0x04,0x0C,0x85,0x2A,0x84,0x09,0x44,0x10,
+0x0B,0xB8,0x49,0xFF,0xF3,0x4F,0x42,0x15,0x24,0x24,0x96,0x49,0x84,0x0E,0x49,0xFF,
+0xF3,0x49,0xF0,0x03,0x42,0x10,0x24,0x24,0x96,0x49,0x84,0x0F,0x49,0xFF,0xF3,0x42,
+0x42,0x14,0x24,0x24,0x96,0x49,0x84,0x0A,0x49,0xFF,0xF3,0x3C,0x84,0x0B,0x44,0x10,
+0x13,0x88,0x49,0xFF,0xF3,0x37,0x84,0x09,0x80,0x26,0x49,0xFF,0xF3,0x41,0x84,0x0E,
+0x80,0x26,0x49,0xFF,0xF3,0x3D,0x84,0x0F,0x80,0x26,0x49,0xFF,0xF3,0x39,0x84,0x0A,
+0x80,0x26,0x49,0xFF,0xF3,0x35,0x84,0x0B,0x80,0x26,0x49,0xFF,0xF3,0x31,0x3C,0x07,
+0xF7,0xAE,0x3C,0x17,0xF7,0xB0,0x49,0x00,0x04,0x0B,0x3E,0x67,0xEF,0xAD,0x48,0xFF,
+0xFF,0x68,0x5A,0x60,0x02,0x04,0x48,0xFF,0xFF,0x64,0x84,0x0B,0x44,0x10,0x13,0x88,
+0x49,0xFF,0xF3,0x10,0x84,0x0B,0x84,0x21,0x49,0xFF,0xF3,0x1A,0xD5,0x0C,0x84,0x0B,
+0x49,0xFF,0xF3,0x31,0x5A,0x08,0x01,0x04,0x84,0x04,0xD5,0x06,0x84,0x02,0xC6,0x04,
+0x5A,0x68,0x02,0x07,0x84,0x03,0x3E,0x07,0xEF,0xAD,0x48,0xFF,0xFF,0x4A,0x3C,0x07,
+0xF7,0xAE,0x3C,0x17,0xF7,0xB0,0x49,0x00,0x03,0xE3,0x48,0xFF,0xFF,0x42,0x84,0x0B,
+0x49,0xFF,0xF3,0x19,0x5A,0x00,0x01,0xEA,0x4E,0x63,0xFF,0x3B,0x49,0x00,0x03,0xAD,
+0xC0,0x03,0x84,0x01,0xD5,0x02,0x84,0x03,0x3E,0x07,0xEF,0x9F,0x2E,0x07,0xF6,0x3B,
+0x5A,0x08,0x04,0x13,0x2E,0x07,0xF6,0x39,0x5A,0x08,0x02,0x0F,0x2E,0x07,0xEF,0x9F,
+0x5A,0x08,0x03,0x06,0x84,0x00,0x3E,0x07,0xF6,0x3B,0xD5,0x06,0x5A,0x08,0x01,0x05,
+0x84,0x00,0x3E,0x07,0xF6,0x39,0x3C,0x0D,0xF8,0xED,0x54,0x10,0x00,0x01,0xC9,0x03,
+0x3E,0x17,0xF6,0x3B,0x96,0x0E,0xC8,0x03,0x3E,0x07,0xF6,0x39,0x2E,0x07,0xF6,0x3B,
+0xC8,0x07,0x2E,0x07,0xF6,0x3A,0xC8,0x04,0x2E,0x07,0xF6,0x39,0xC0,0x05,0x85,0x21,
+0x3C,0x9F,0xFB,0xE9,0xD5,0x27,0x81,0x20,0xD5,0x25,0x49,0xFF,0xFE,0x3C,0x81,0x20,
+0x4E,0x03,0xFF,0x2B,0x3C,0x17,0xF7,0x8E,0x3C,0xF4,0x05,0xAF,0xE0,0x2F,0xE8,0x1E,
+0x2E,0x07,0xEF,0x93,0x3E,0x07,0xEF,0xAF,0x2E,0x07,0xEF,0x92,0x3E,0x07,0xEF,0xAE,
+0x3C,0x03,0xF7,0x92,0x3C,0x0B,0xF7,0xDA,0x3C,0x03,0xF7,0xD9,0x3C,0x0B,0xF7,0xD8,
+0x84,0x01,0x3E,0x07,0xEF,0xB6,0x3C,0x0D,0xFB,0xD6,0x58,0x00,0x10,0x00,0x3C,0x0F,
+0xFB,0xD6,0x49,0xFF,0x9F,0x24,0x48,0x00,0x01,0x5F,0x4E,0x63,0xFE,0xDA,0x48,0xFF,
+0xFF,0x04,0x49,0x00,0x03,0x4A,0xC0,0x55,0x2E,0xF7,0xEF,0xA9,0xE9,0x52,0x84,0x01,
+0x3E,0x07,0xEF,0x9F,0x84,0x0A,0x49,0xFF,0xF2,0xA6,0x80,0xC0,0x81,0x20,0xC8,0x41,
+0x49,0xFF,0xFD,0xB8,0x5A,0x08,0x01,0x06,0xAF,0xB8,0x3E,0x67,0xF6,0x3B,0xD5,0x74,
+0x2E,0x47,0xF6,0x3B,0x54,0x12,0x00,0xFD,0x5A,0x18,0x01,0x10,0x3C,0x0D,0xFB,0xE9,
+0xC8,0x0C,0x3C,0x4D,0xF8,0xED,0x97,0x06,0xCC,0x04,0x3E,0x47,0xF6,0x3B,0xD5,0x72,
+0x3C,0x1F,0xFB,0xE9,0x81,0x01,0xD5,0x75,0xF0,0x02,0x84,0x2A,0xFE,0x0C,0x96,0x41,
+0x84,0x04,0x49,0xFF,0xF2,0x57,0x84,0x04,0x84,0x21,0x49,0xFF,0xF2,0x61,0x84,0x0A,
+0x84,0x20,0x49,0xFF,0xF2,0x5D,0x84,0x09,0x84,0x20,0x49,0xFF,0xF2,0x59,0x84,0x0E,
+0x84,0x20,0x49,0xFF,0xF2,0x55,0x84,0x0F,0x84,0x20,0x49,0xFF,0xF2,0x51,0x84,0x0B,
+0x84,0x20,0x49,0xFF,0xF2,0x4D,0x84,0x00,0x3E,0x07,0xEF,0xAD,0x48,0x00,0x01,0x0C,
+0x3C,0x13,0xF1,0xD9,0x96,0x6E,0xC1,0x46,0x84,0x05,0x3E,0x07,0xF6,0x3B,0xD5,0x42,
+0x84,0x03,0x3E,0x07,0xEF,0x9F,0x84,0x09,0x49,0xFF,0xF2,0x55,0x80,0xC0,0xC8,0x3C,
+0x80,0x07,0x49,0x00,0x04,0x23,0x8E,0x01,0x5C,0x80,0x00,0x01,0xA6,0x38,0x5A,0x08,
+0x01,0x09,0x84,0x0F,0x3C,0x6B,0xF7,0x96,0x49,0xFF,0xF2,0x5F,0x3C,0x0B,0xF7,0x96,
+0x84,0x0E,0x49,0xFF,0xF2,0x40,0xC8,0x04,0x5A,0x88,0x01,0x25,0xD5,0x07,0x84,0x0F,
+0x49,0xFF,0xF2,0x39,0x5A,0x08,0x01,0x26,0xD5,0xF8,0xA6,0x38,0x5A,0x08,0x01,0x22,
+0x3C,0x03,0xF1,0xD8,0x96,0x1E,0xC0,0x0A,0x84,0x0E,0x49,0xFF,0xF2,0x2C,0xC8,0x06,
+0x84,0x23,0x3E,0x17,0xF6,0x39,0x81,0x00,0xD5,0x14,0x3C,0x03,0xF1,0xD8,0x96,0x26,
+0xC0,0x09,0x84,0x0F,0x49,0xFF,0xF2,0x1F,0x5A,0x08,0x01,0x05,0x84,0x04,0x3E,0x07,
+0xF6,0x39,0x85,0x00,0xD5,0x06,0x3C,0x03,0xF1,0xD8,0x96,0x26,0xC8,0xF8,0xD5,0xFA,
+0x3C,0x07,0xF7,0x94,0x3C,0x97,0xF7,0x9F,0x3C,0x67,0xF7,0x99,0x3C,0xA7,0xF7,0xA5,
+0xF0,0x82,0x80,0x26,0x80,0x09,0xF2,0x02,0x80,0x6A,0x49,0xFF,0xFD,0x90,0x5A,0x08,
+0x01,0x13,0x5A,0x88,0x01,0x0E,0xA6,0x38,0xC8,0x0E,0x3C,0x43,0xF1,0xD9,0x97,0x3E,
+0x97,0x21,0xC4,0x08,0x84,0x27,0x3E,0x17,0xF6,0x3B,0x81,0x00,0xD5,0x04,0x85,0x00,
+0xD5,0x02,0x81,0x04,0x80,0x06,0x80,0x2A,0x49,0xFF,0xFD,0xB4,0xC8,0x0E,0xA6,0x78,
+0xC1,0x0C,0x3C,0x43,0xF1,0xD8,0x97,0x2E,0x97,0x21,0xC4,0x06,0x84,0x25,0x3E,0x17,
+0xF6,0x39,0x81,0x00,0xD5,0x02,0x81,0x04,0x80,0x09,0x80,0x26,0xF2,0x02,0x80,0x6A,
+0x49,0xFF,0xFD,0xB0,0xC8,0x0E,0xA6,0x78,0xC1,0x0C,0x3C,0x43,0xF1,0xD8,0x97,0x36,
+0x97,0x21,0xC4,0x06,0x84,0x26,0x3E,0x17,0xF6,0x39,0x81,0x00,0xD5,0x02,0x81,0x04,
+0x80,0x09,0x80,0x26,0x49,0xFF,0xFD,0xB1,0x5A,0x08,0x01,0x12,0xA6,0x38,0x5A,0x08,
+0x01,0x0F,0x5A,0x88,0x01,0x0A,0x3C,0x43,0xF1,0xD8,0x97,0x3E,0x97,0x21,0xC4,0x06,
+0x84,0x07,0x3E,0x07,0xF6,0x39,0x85,0x00,0xD5,0x02,0x81,0x04,0x80,0x07,0x49,0x00,
+0x04,0xDE,0x44,0x12,0x2D,0xAC,0xFA,0x58,0x44,0x02,0x2D,0x50,0x49,0x00,0x01,0xF5,
+0x3E,0x07,0xEF,0x13,0x49,0x00,0x02,0x1E,0x3E,0x07,0xEF,0x11,0x3C,0x0D,0xF8,0xED,
+0x54,0x10,0x00,0x03,0x5A,0x18,0x03,0x06,0xA6,0x78,0xE6,0x22,0xE8,0x0C,0xD5,0x0C,
+0x5A,0x18,0x01,0x05,0xA6,0x78,0xC1,0x13,0xD5,0x11,0x5A,0x18,0x02,0x10,0xA6,0x78,
+0x5A,0x10,0x01,0x03,0x85,0x00,0x2E,0x27,0xF6,0x3B,0x5A,0x28,0x02,0x09,0x5A,0x18,
+0x01,0x07,0x84,0x20,0x3E,0x17,0xF6,0x3B,0xD5,0x02,0x85,0x00,0x2E,0x17,0xE1,0xFC,
+0xC9,0x06,0xA6,0x78,0xC9,0x04,0x3E,0x17,0xF6,0x3B,0x81,0x01,0x2E,0x17,0xE1,0xF0,
+0xC9,0x07,0xA6,0xB8,0x5A,0x28,0x01,0x05,0x3E,0x17,0xF6,0x39,0x81,0x01,0x54,0x10,
+0x00,0x01,0xC9,0x03,0x3E,0x17,0xF6,0x3B,0x96,0x0E,0xC8,0x03,0x3E,0x07,0xF6,0x39,
+0x2E,0x07,0xF6,0x3B,0xC8,0x07,0x2E,0x07,0xF6,0x3A,0xC8,0x04,0x2E,0x07,0xF6,0x39,
+0xC0,0x05,0x84,0x81,0x3C,0x4F,0xFB,0xE9,0x81,0x04,0x49,0xFF,0x9D,0xC8,0x81,0x28,
+0xD5,0x02,0x81,0x24,0x80,0x09,0xFC,0xC3,0xFC,0x00,0x84,0x40,0x44,0x52,0x11,0xA8,
+0x44,0x40,0x00,0x40,0x2E,0x37,0xEF,0xD8,0xE2,0x43,0xE8,0x0D,0x38,0x32,0x88,0x00,
+0x88,0x61,0x50,0x31,0x80,0x40,0x40,0x31,0x90,0xD6,0x38,0x60,0x08,0x08,0x8C,0x41,
+0x96,0x90,0xD5,0xF1,0xFC,0x80,0x2E,0x17,0xEF,0xD8,0x44,0x22,0x11,0xA8,0x38,0x01,
+0x04,0x08,0x9C,0x09,0x96,0x00,0x5C,0xF0,0x00,0x27,0x3E,0x07,0xEF,0xD8,0xE8,0x0E,
+0x44,0x12,0x12,0xC8,0x3C,0x23,0xF7,0x97,0x38,0x20,0x81,0x09,0x44,0x12,0x12,0x78,
+0x3C,0x23,0xF7,0xA4,0x38,0x20,0x81,0x09,0xDD,0x9E,0x44,0x00,0x7F,0xFF,0x3C,0x0B,
+0xF8,0x93,0x3C,0x0B,0xF8,0x6B,0xDD,0x9E,0xFC,0x00,0x44,0x52,0x00,0x44,0x84,0x60,
+0x96,0x98,0x0A,0x62,0x80,0x01,0x5A,0x20,0x10,0x07,0xE2,0x26,0xA5,0x28,0xE9,0x19,
+0x81,0xE4,0xD5,0x04,0xE2,0x26,0xE9,0x1B,0x85,0xFF,0xE2,0x2F,0xE8,0x12,0x5A,0x08,
+0x01,0x06,0x52,0x01,0x80,0x40,0x96,0x2F,0xFC,0x80,0x5A,0x08,0x02,0x05,0x50,0x01,
+0x00,0x20,0xD5,0x05,0x5A,0x08,0x03,0x0A,0x52,0x01,0x00,0x20,0x96,0x00,0xFC,0x80,
+0x8C,0x61,0x5A,0x38,0x11,0xDF,0xD5,0x03,0x80,0x02,0xFC,0x80,0x44,0x00,0x00,0xFF,
+0xFC,0x80,0x94,0x4E,0x5C,0xF1,0x80,0x41,0x88,0x41,0x84,0x20,0xE8,0x0C,0xCB,0x04,
+0x44,0x10,0x00,0x64,0xD5,0x08,0x8C,0x61,0x44,0x12,0x00,0x24,0x90,0x61,0x88,0x61,
+0x00,0x11,0xFF,0xFF,0x38,0x10,0x09,0x09,0xDD,0x9E,0xFC,0x40,0xEE,0xB0,0xF1,0x83,
+0x94,0x41,0xE0,0x22,0xF0,0x82,0xE9,0x07,0x40,0x10,0x88,0x36,0xC1,0x05,0x8C,0x21,
+0x96,0x48,0xD5,0x02,0x84,0x21,0x42,0xF1,0x04,0x24,0x5E,0xF7,0x80,0x41,0xE9,0x03,
+0x8E,0x21,0x96,0x48,0x42,0x00,0x88,0x24,0x96,0x00,0xF0,0x81,0xF0,0x02,0x52,0x90,
+0x00,0x02,0xF0,0x01,0x88,0x09,0x54,0x90,0x00,0xFF,0x84,0x00,0x80,0xA0,0xD2,0x11,
+0xB1,0x84,0x84,0x80,0x99,0xF0,0x97,0xA0,0xE2,0xC1,0xE8,0x07,0x38,0x61,0x94,0x00,
+0x38,0x63,0x90,0x08,0x8C,0x81,0xD5,0xF8,0x8C,0xA1,0x97,0x68,0x88,0x01,0xD5,0xF0,
+0x84,0xC0,0xF0,0x02,0x4C,0x60,0x00,0x79,0xB0,0x14,0x83,0x80,0x80,0xE0,0x85,0x00,
+0x54,0xA4,0x00,0xFF,0xE3,0x49,0xE8,0x62,0xF0,0x03,0xCE,0x11,0xA6,0xC0,0xB0,0x04,
+0x50,0x31,0x80,0x40,0x38,0x00,0x20,0x00,0x8A,0x60,0x44,0x00,0x00,0x40,0x40,0x01,
+0x80,0x76,0x96,0xD8,0x5C,0xF1,0x80,0x21,0xE8,0x15,0xD5,0x18,0x38,0x30,0x18,0x00,
+0xB0,0x44,0x40,0x04,0x18,0x00,0x88,0x01,0x50,0x31,0x80,0x40,0x00,0x00,0x7F,0xFF,
+0x8A,0x60,0x44,0x00,0x00,0x40,0x40,0x01,0x80,0x76,0x96,0xD8,0x5C,0xF1,0x80,0x21,
+0xE9,0x12,0x52,0x31,0x80,0x40,0x96,0xD8,0xCE,0x0E,0xB0,0x14,0x84,0x20,0x80,0x4A,
+0x49,0xFF,0xFF,0x81,0x4E,0xA2,0x00,0x30,0xA4,0x78,0x02,0x03,0xFF,0xFF,0x88,0x01,
+0xAC,0x38,0xD5,0x29,0xB0,0x14,0x5A,0x68,0x01,0x0D,0x80,0x26,0x80,0x4A,0x49,0xFF,
+0xFF,0x72,0x4E,0xA2,0x00,0x21,0x02,0x03,0x80,0x3F,0x02,0x13,0xFF,0xFF,0xD5,0x12,
+0x84,0x21,0x80,0x4A,0x49,0xFF,0xFF,0x67,0x4E,0xA3,0x00,0x0A,0x02,0x1F,0x80,0x68,
+0x02,0x0F,0x80,0x28,0x88,0x01,0x12,0x0F,0x80,0x68,0xD5,0x0D,0x02,0x03,0x80,0x3F,
+0xA4,0x78,0xE2,0x20,0x40,0x10,0x3C,0x1B,0x02,0x03,0x80,0x40,0x81,0xE1,0x88,0x0F,
+0x12,0x03,0x80,0x40,0x8D,0x01,0x8C,0xE2,0xD5,0x9C,0x84,0xA0,0xC6,0x0A,0x4C,0x54,
+0x80,0x09,0x02,0x0E,0x00,0x40,0x8C,0xA1,0x1A,0x0E,0x00,0x01,0x97,0x68,0xD5,0xF8,
+0x8C,0xC1,0x97,0xB0,0xD5,0x87,0x5A,0x68,0x01,0x04,0x8F,0x21,0xD5,0x03,0x50,0x94,
+0x80,0x3F,0xB0,0x14,0xF1,0x01,0x38,0x00,0x25,0x01,0x40,0x00,0x04,0x16,0x96,0x00,
+0xED,0x50,0xFC,0xC0,0xFC,0x00,0x4E,0x17,0x00,0x0E,0x4E,0x05,0x00,0x07,0x44,0x20,
+0x03,0xE8,0xFE,0x84,0x84,0x01,0xD5,0x0D,0x44,0x2F,0xFC,0x18,0xFE,0x84,0x84,0x04,
+0xD5,0x08,0xC1,0x11,0x4E,0x05,0x00,0x0B,0x44,0x2F,0xFC,0x18,0xFE,0x84,0x84,0x02,
+0x40,0x11,0x04,0x36,0x49,0xFF,0xFE,0xEA,0xFC,0x80,0x44,0x20,0x03,0xE8,0xFE,0x84,
+0x84,0x03,0xD5,0xF7,0xC0,0x07,0x4E,0x06,0x00,0x04,0xFA,0x00,0xFC,0x80,0x44,0x00,
+0x00,0x30,0xFC,0x80,0xFC,0x00,0x84,0x00,0x3E,0x07,0xEF,0x13,0x3E,0x07,0xEF,0x11,
+0x84,0x00,0xFA,0xD8,0x3C,0x0B,0xF7,0x98,0x3C,0x0B,0xF7,0x9E,0x3C,0x0B,0xF7,0x9F,
+0x3C,0x0B,0xF7,0x99,0x3C,0x0B,0xF7,0x94,0x3C,0x0B,0xF7,0xA5,0x3C,0x0B,0xF7,0x9B,
+0x3C,0x0B,0xF7,0x9D,0x3C,0x0B,0xF7,0x9A,0x3C,0x0B,0xF7,0xA2,0x3C,0x0B,0xF7,0x9C,
+0x3C,0x0B,0xF7,0xA3,0x3C,0x0B,0xF7,0xA0,0x3C,0x0B,0xF7,0x95,0x84,0x1F,0x80,0x46,
+0x3E,0x07,0xEF,0x12,0x84,0x20,0x44,0x02,0x2D,0x50,0x49,0xFF,0xF5,0x6D,0x80,0x46,
+0x84,0x20,0x84,0xC4,0x44,0x02,0x2D,0xAC,0x49,0xFF,0xF5,0x66,0x80,0x46,0x84,0x20,
+0x44,0x02,0x11,0x54,0x49,0xFF,0xF5,0x60,0x84,0x20,0x80,0x46,0x44,0x02,0x11,0x5C,
+0x49,0xFF,0xF5,0x5A,0xFC,0x80,0xFC,0x40,0x5C,0xF1,0x00,0x29,0xE8,0x03,0x80,0xA2,
+0xD5,0x02,0xFA,0xB8,0x84,0x60,0x44,0x92,0x12,0x28,0x44,0xA2,0x11,0xD8,0x80,0xC3,
+0xE0,0x65,0xE8,0x12,0x95,0x19,0x40,0x72,0x24,0x00,0x88,0x8A,0x22,0x83,0x80,0x00,
+0x38,0x80,0x0D,0x09,0x22,0x82,0x00,0x00,0x38,0x80,0x8D,0x09,0x8C,0x61,0xAD,0xB8,
+0xAD,0xA0,0x96,0xD8,0xD5,0xEE,0x2E,0x17,0xEF,0xDC,0x5C,0xF0,0x80,0x29,0x80,0x01,
+0xE9,0x02,0xFA,0x18,0x96,0x40,0xE2,0x41,0x40,0x01,0x3C,0x1B,0x96,0x00,0xFC,0xC0,
+0x84,0x20,0x2E,0x07,0xEF,0xDD,0x3E,0x17,0xEF,0xDD,0xDD,0x9E,0x44,0x22,0x04,0x14,
+0xA4,0xD1,0xA5,0x10,0x8A,0x64,0xAC,0xC0,0xA4,0x13,0xA4,0x92,0x8A,0x02,0xAC,0x08,
+0xDD,0x9E,0x84,0x00,0x3C,0x0B,0xF7,0xF3,0x3E,0x07,0xEF,0x10,0xDD,0x9E,0x3C,0x0F,
+0xFB,0xDD,0x44,0x02,0x2D,0xA0,0xAC,0x40,0x84,0x21,0xAC,0x81,0xAC,0xC3,0xAD,0x04,
+0xAF,0x44,0xAC,0x45,0xDD,0x9E,0x3C,0x17,0xF1,0x12,0x3C,0x07,0xF1,0x13,0x2E,0x27,
+0xE1,0xFE,0x8A,0x01,0x44,0x10,0x00,0x64,0xFE,0x54,0xE0,0x01,0xE8,0x08,0x3C,0xF7,
+0xF1,0x14,0x3C,0x27,0xF1,0x15,0x8A,0x4F,0xE0,0x41,0xE9,0x15,0x5E,0xF0,0x03,0xE8,
+0xE8,0x14,0x3C,0xF7,0xF1,0x14,0x3C,0x07,0xF1,0x15,0x8A,0x0F,0x5E,0xF0,0x03,0xE8,
+0xE8,0x0C,0x3C,0x03,0xF1,0xD9,0x96,0x16,0x96,0x01,0xC0,0x08,0x84,0x02,0x3E,0x07,
+0xF6,0x3B,0xD5,0x03,0x84,0x01,0xDD,0x9E,0x84,0x00,0xDD,0x9E,0xFC,0x41,0x52,0x00,
+0x19,0x32,0x96,0xC3,0x3C,0x03,0xF7,0xF3,0x52,0x10,0xB2,0x64,0x8C,0x01,0x84,0x81,
+0x96,0x8B,0x96,0x01,0x3E,0x47,0xEF,0xDE,0x3C,0x3B,0xF7,0x97,0x3C,0x2B,0xF7,0xA4,
+0x3C,0x0B,0xF7,0xF3,0x5A,0x08,0x01,0x46,0x84,0x00,0x3C,0x3B,0xF1,0x12,0x3C,0x3B,
+0xF1,0x13,0x3C,0x2B,0xF1,0x14,0x3C,0x2B,0xF1,0x15,0x3C,0x3B,0xF1,0x16,0x3C,0x2B,
+0xF1,0x17,0x3C,0x0F,0xF8,0x8D,0x3C,0x0F,0xF8,0x8E,0x3E,0x07,0xEF,0xD8,0x3E,0x07,
+0xEF,0xDF,0x3E,0x07,0xEF,0x10,0x3C,0x3B,0xF7,0xA1,0x3C,0x2B,0xF7,0x93,0x3C,0x3B,
+0xF7,0xF2,0x3C,0x2B,0xF7,0xF1,0x44,0x72,0x12,0x28,0x80,0x20,0x44,0x62,0x11,0xD8,
+0x44,0x52,0x12,0xC8,0x44,0x42,0x12,0x78,0x38,0x13,0x81,0x09,0x38,0x13,0x01,0x09,
+0x38,0x12,0x81,0x09,0x38,0x12,0x01,0x09,0x8C,0x01,0x5A,0x08,0x28,0xF7,0x84,0x01,
+0x3C,0x3B,0xF8,0x1C,0x3C,0x2B,0xF7,0xF4,0x3C,0x3B,0xF7,0x9F,0x3C,0x2B,0xF7,0x99,
+0x3C,0x3B,0xF8,0x6C,0x3C,0x2B,0xF8,0x44,0x3E,0x07,0xEF,0xDC,0x48,0x00,0x00,0xB5,
+0x2E,0x77,0xEF,0xD8,0x3C,0x3B,0xF7,0x94,0xE6,0xFE,0x3C,0x2B,0xF7,0xA5,0x4E,0xF2,
+0x00,0xA1,0x3C,0xA7,0xF7,0x93,0x3C,0x97,0xF7,0xA1,0x40,0x01,0x28,0x01,0x40,0x11,
+0xA4,0x01,0x42,0xF0,0x00,0x24,0x42,0xF0,0x84,0x73,0x5E,0xF7,0x84,0xCA,0x4E,0xF3,
+0x00,0x9C,0x2E,0x47,0xEF,0xDC,0x5C,0xF2,0x00,0x27,0xE8,0x0A,0x44,0x52,0x12,0x28,
+0x38,0x32,0x91,0x09,0x44,0x52,0x11,0xD8,0x38,0x22,0x91,0x09,0xD5,0x07,0x44,0x50,
+0x7F,0xFF,0x3C,0x5B,0xF8,0x43,0x3C,0x5B,0xF8,0x1B,0x3C,0xF7,0xF1,0x12,0x8C,0x81,
+0x97,0xA0,0xE0,0x6F,0x3E,0x67,0xEF,0xDC,0xE8,0x03,0x3C,0x3B,0xF1,0x12,0x3C,0x47,
+0xF1,0x13,0xE0,0x83,0xE8,0x03,0x3C,0x3B,0xF1,0x13,0x3C,0xF7,0xF1,0x14,0xE0,0x4F,
+0xE8,0x03,0x3C,0x2B,0xF1,0x14,0x3C,0x37,0xF1,0x15,0xE0,0x62,0xE8,0x03,0x3C,0x2B,
+0xF1,0x15,0x80,0x41,0x4E,0x14,0x00,0x03,0xFE,0x8A,0x3C,0x3D,0xF8,0x8D,0x88,0x43,
+0x3C,0x2F,0xF8,0x8D,0x80,0x40,0x4E,0x04,0x00,0x03,0xFE,0x82,0x3C,0x3D,0xF8,0x8E,
+0x88,0x43,0x3C,0x2F,0xF8,0x8E,0x49,0xFF,0xFE,0x67,0x81,0x00,0x3E,0x07,0xEF,0xE1,
+0x5A,0x60,0x02,0x3D,0xE6,0xC3,0xE9,0x3C,0x2E,0x67,0xEF,0xE0,0x44,0xF0,0x00,0x40,
+0x50,0x63,0x00,0x40,0x8A,0xC0,0x40,0xF3,0x3C,0xD6,0x96,0xF0,0xE6,0x64,0xE9,0x11,
+0x96,0x30,0x5E,0xF0,0x00,0x3D,0xE8,0x0D,0x3C,0x27,0xF7,0xF1,0x3C,0x07,0xF7,0xF2,
+0x8A,0x4A,0x8A,0x09,0xFE,0x94,0x42,0x20,0x00,0x73,0x5E,0xF1,0x04,0xCA,0xE8,0x02,
+0xCF,0x1F,0x3C,0x07,0xF7,0xF1,0x3C,0x17,0xF7,0xF2,0x40,0x05,0x00,0x01,0x40,0x14,
+0x84,0x01,0xF3,0x81,0x49,0xFF,0xFE,0x38,0x49,0xFF,0xFD,0x17,0xF3,0x01,0xE6,0x68,
+0xE9,0x05,0x97,0xB0,0x5E,0xF3,0x00,0x39,0xE9,0x19,0x3C,0x03,0xF7,0xA1,0x3C,0x0B,
+0xF7,0xF2,0x3C,0x03,0xF7,0x93,0x3C,0x0B,0xF7,0xF1,0x3E,0x87,0xEF,0xE0,0x3C,0x03,
+0xF7,0x97,0x3C,0x0B,0xF7,0xA1,0x3C,0x03,0xF7,0xA4,0x3C,0x0B,0xF7,0x93,0xD5,0x0C,
+0x5A,0x78,0x1E,0x0B,0x3E,0x47,0xEF,0x10,0xD5,0x07,0x2E,0x07,0xEF,0xDF,0x8C,0x01,
+0x3E,0x07,0xEF,0xDF,0xD5,0xE3,0xFC,0xC1,0xFC,0x48,0x51,0xCF,0x80,0x60,0x2E,0x27,
+0xEF,0xD8,0x14,0x0E,0x7F,0xE9,0x3C,0x17,0xF7,0xA1,0x3C,0x07,0xF7,0x93,0xE6,0x5F,
+0x3C,0x1B,0xF1,0x18,0x3C,0x0B,0xF1,0x19,0xE8,0x0B,0x3C,0x37,0xF7,0xF1,0x3C,0x27,
+0xF7,0xF2,0x8A,0x03,0x8A,0x22,0x49,0xFF,0xFD,0xF7,0x49,0xFF,0xFC,0xD6,0x3C,0x57,
+0xF1,0x13,0x3C,0x17,0xF1,0x12,0x3C,0x0D,0xF8,0x8D,0x3C,0x3D,0xF8,0x8E,0x3C,0x0F,
+0xF8,0x8F,0x3C,0x3F,0xF8,0x90,0x9A,0xA9,0xD1,0x07,0x44,0x10,0x07,0xD0,0xFE,0x44,
+0x40,0x10,0x88,0x36,0xD5,0x02,0x84,0x20,0x3C,0x1F,0xF8,0x8D,0x3C,0x57,0xF1,0x15,
+0x3C,0x17,0xF1,0x14,0x84,0x00,0xD1,0x07,0x44,0x00,0x07,0xD0,0xFE,0x1C,0x9A,0xE9,
+0x40,0x00,0x0C,0x16,0x3C,0x0F,0xF8,0x8E,0x3C,0x04,0x05,0xDD,0xE0,0x40,0xE8,0x04,
+0x8A,0xA1,0xE0,0xA0,0xE9,0x09,0x2E,0x07,0xEF,0x10,0x5A,0x00,0x01,0x06,0x2E,0x07,
+0xEF,0xD8,0xE6,0x02,0xE8,0x09,0x84,0x00,0x84,0xE0,0x3E,0x07,0xEF,0x10,0x14,0x7E,
+0x7F,0xEE,0x48,0x00,0x00,0xDA,0x3C,0x0D,0xFB,0xDD,0x15,0xFE,0x7F,0xEA,0x84,0xE0,
+0xB4,0x00,0x14,0x7E,0x7F,0xEE,0x14,0x7E,0x7F,0xEC,0xA4,0x00,0x80,0xC7,0x8C,0x07,
+0x92,0x03,0x94,0x03,0x41,0xFF,0x80,0x01,0x15,0xFE,0x7F,0xEB,0x41,0xFF,0x80,0x01,
+0x15,0xFE,0x7F,0xED,0x3C,0x0D,0xFB,0xDD,0xB4,0x20,0xA4,0x48,0xE2,0xC1,0x4E,0xF2,
+0x00,0xB8,0x84,0x2C,0xA0,0x01,0x42,0x93,0x04,0x24,0x88,0x09,0x00,0xA0,0x00,0x05,
+0x5A,0xA8,0x01,0x4F,0x84,0x00,0x14,0x0E,0x7F,0xEF,0x85,0x00,0x44,0x4F,0xFF,0xC0,
+0x80,0x24,0x50,0x0E,0x7F,0xC0,0x14,0x4E,0x7F,0xE8,0x49,0xFF,0xFC,0x4F,0x3C,0x1D,
+0xFB,0xDD,0x2E,0x07,0xEF,0xD8,0x04,0x4E,0x7F,0xE8,0xA0,0x49,0x88,0x29,0xA6,0x8C,
+0xB4,0x61,0xC2,0x0D,0x44,0x12,0x11,0xA8,0x49,0xFF,0xFC,0xB9,0xE3,0x00,0x04,0x4E,
+0x7F,0xE8,0xE8,0x05,0x96,0x60,0x14,0x1E,0x7F,0xEF,0x81,0x00,0x8C,0x83,0x97,0x22,
+0x5A,0x48,0x41,0xE0,0x04,0x0E,0x7F,0xEB,0x5C,0xF4,0x00,0x3D,0x38,0x80,0x18,0x08,
+0xE9,0x1A,0x50,0x0E,0x7F,0xC0,0x20,0x1E,0x7F,0xBC,0x49,0xFF,0xFC,0x27,0x3C,0x0D,
+0xFB,0xDD,0x2E,0x27,0xEF,0xD8,0xA0,0x41,0x88,0x29,0xA6,0x0C,0xB4,0x21,0xC2,0x06,
+0x44,0x32,0x11,0xA8,0x49,0xFF,0xFC,0x93,0x80,0x40,0x04,0x0E,0x7F,0xED,0x38,0x20,
+0x18,0x08,0xD5,0x06,0x04,0x1E,0x7F,0xED,0x84,0x00,0x38,0x00,0x98,0x08,0x04,0x0E,
+0x7F,0xEB,0x38,0x80,0x18,0x00,0x5C,0xF4,0x00,0x3C,0xE9,0x56,0x04,0x0E,0x7F,0xED,
+0x38,0x00,0x18,0x00,0x5C,0xF0,0x00,0x37,0xE9,0x4F,0x5A,0xA8,0x01,0x12,0x2E,0x27,
+0xE1,0xF1,0x44,0x10,0x00,0x64,0xFE,0x54,0x3C,0x2D,0xF8,0x90,0xE0,0x41,0xE8,0x08,
+0x3C,0x03,0xF1,0xD8,0x96,0x0E,0xC0,0x40,0x3E,0xA7,0xF6,0x39,0xD5,0x3D,0x3C,0x1D,
+0xFB,0xDD,0xA0,0xC9,0x88,0x69,0xA6,0x5E,0x5A,0x18,0x01,0x29,0x3C,0x2D,0xF8,0x8D,
+0xC2,0x25,0x3C,0x5D,0xF8,0x8E,0xC5,0x22,0x00,0x91,0x80,0x09,0x00,0xA1,0x80,0x08,
+0x01,0xE1,0x80,0x0A,0xA6,0xDF,0x44,0x10,0x07,0xD0,0x44,0x43,0x34,0x50,0x42,0xF1,
+0x04,0x24,0xFE,0xE4,0xE2,0x6F,0xE9,0x20,0xFA,0x64,0xFE,0x9C,0x42,0xF5,0x04,0x24,
+0xE2,0x4F,0xE9,0x1A,0x42,0xF2,0x84,0x24,0x42,0x44,0x90,0x24,0xE2,0x8F,0xE9,0x14,
+0xFE,0xEC,0x42,0x1F,0x04,0x24,0xE2,0x61,0xE9,0x0F,0x88,0x08,0x04,0x1E,0x7F,0xEC,
+0x90,0x01,0xE0,0x20,0xE8,0x09,0x96,0x00,0x50,0x1E,0x7F,0xB0,0x14,0x0E,0x7F,0xEC,
+0xB4,0xE1,0x14,0x6E,0x7F,0xEE,0x8C,0xC1,0x97,0xB0,0x48,0xFF,0xFF,0x45,0x3E,0x77,
+0xEF,0xDD,0x05,0xFE,0x7F,0xEA,0x49,0xFF,0xFD,0x86,0xCF,0x03,0x84,0x02,0xD5,0x14,
+0x3C,0x0D,0xFB,0xDD,0x81,0x1C,0xB2,0x4E,0x84,0x2C,0xA0,0x01,0x42,0x01,0x04,0x73,
+0xB2,0x29,0xA6,0x05,0xE6,0x02,0xAE,0x08,0xE8,0xF2,0x5A,0x00,0x01,0x06,0x84,0x00,
+0x3E,0x07,0xF6,0x39,0x84,0x01,0x51,0xFE,0x7F,0xE0,0xFC,0xC0,0x38,0x20,0x80,0x00,
+0x88,0x01,0xA6,0x01,0x9A,0x10,0x4E,0x04,0x00,0x03,0xFE,0x02,0x96,0x00,0xDD,0x9E,
+0xA6,0x80,0xA6,0xC8,0xAE,0xC0,0xAE,0x88,0xDD,0x9E,0xFC,0x40,0x3C,0x13,0xF1,0x12,
+0x3C,0x03,0xF1,0x13,0x44,0x72,0x12,0x28,0x8A,0x01,0x3C,0x0B,0xF7,0x98,0x3C,0x13,
+0xF1,0x14,0x3C,0x03,0xF1,0x15,0x44,0x62,0x11,0xD8,0x8A,0x01,0x3C,0x0B,0xF7,0x9E,
+0x44,0x12,0x11,0x2C,0x44,0x02,0x11,0x20,0xFD,0x10,0x49,0xFF,0x99,0x4B,0x80,0x07,
+0x80,0x26,0x44,0x22,0x11,0x2E,0x44,0x32,0x11,0x22,0x49,0xFF,0x99,0x43,0x2E,0x27,
+0xEF,0xDC,0x44,0x32,0x11,0x3A,0x8E,0x41,0x94,0x51,0x98,0x39,0x44,0x22,0x11,0x18,
+0x88,0x26,0x49,0xFF,0x99,0x37,0x84,0xC0,0x44,0x92,0x2D,0x50,0x44,0x72,0x2D,0xAC,
+0x40,0x03,0x24,0x00,0x98,0x77,0xFD,0x10,0x8C,0xC2,0x49,0xFF,0x99,0x2B,0x5A,0x68,
+0x50,0xF9,0xFC,0xC0,0xFC,0x21,0xFA,0x04,0x10,0x0F,0x80,0x07,0x50,0x0F,0x80,0x07,
+0x49,0xFF,0xF8,0xA0,0x3C,0x1D,0xFB,0xE8,0x5A,0x00,0x01,0x05,0x5A,0x18,0x01,0x30,
+0xD5,0x03,0x5A,0x18,0x01,0x08,0x84,0x03,0x3E,0x07,0xF6,0x3B,0x84,0x00,0x3C,0x0F,
+0xFB,0xE8,0x84,0x00,0x49,0xFF,0xD6,0x77,0x00,0x0F,0x80,0x07,0x49,0xFF,0xB9,0x09,
+0x84,0x03,0x44,0x10,0x01,0xF4,0x49,0xFF,0xEC,0x4D,0x84,0x03,0x84,0x21,0x49,0xFF,
+0xEC,0x57,0x49,0xFF,0xD6,0x64,0x80,0xC0,0xC8,0x0E,0x84,0x03,0x49,0xFF,0xEC,0x6B,
+0x80,0xE0,0x5A,0x08,0x01,0xF8,0x84,0x03,0x80,0x26,0x49,0xFF,0xEC,0x49,0x80,0x07,
+0x49,0xFF,0xD6,0x59,0x84,0x03,0x84,0x20,0x49,0xFF,0xEC,0x42,0xFC,0xA1,0x46,0x08,
+0x88,0x88,0x44,0x14,0x00,0x54,0x50,0x00,0x08,0x88,0xB6,0x01,0xDD,0x9E,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
+0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAA,0x7A,0x3E,0x60,
diff --git a/drivers/input/touchscreen/ili/Makefile b/drivers/input/touchscreen/ili/Makefile
new file mode 100644
index 000000000000..51c610b2ed74
--- /dev/null
+++ b/drivers/input/touchscreen/ili/Makefile
@@ -0,0 +1,8 @@
+obj-$(CONFIG_TOUCHSCREEN_ILI9881_I2C) += ilitek_main.o \
+									ilitek_i2c.o \
+									ilitek_plat_nxp.o \
+									ilitek_ic.o \
+									ilitek_touch.o \
+									ilitek_mp.o \
+									ilitek_fw.o \
+									ilitek_node.o
\ No newline at end of file
diff --git a/drivers/input/touchscreen/ili/TM050JYHS11_TM_500_20190614.hex b/drivers/input/touchscreen/ili/TM050JYHS11_TM_500_20190614.hex
new file mode 100644
index 000000000000..ecac61a99326
--- /dev/null
+++ b/drivers/input/touchscreen/ili/TM050JYHS11_TM_500_20190614.hex
@@ -0,0 +1,5679 @@
+:070000AF00000000FFFF014B
+:070000AF010000010FFF0238
+:070000AF011000011FFF0317
+:070000AF01200001BFFF0565
+:10000000480060F648005F3648005F5448005F7261
+:1000100048005F9048005FAE48005FCC48005FEA50
+:10002000480060084800605E480060604800606208
+:100030004800606448006066480060684800606A84
+:100040004800606C4800606E480060704800607254
+:100050004800607448006076480060784800607A24
+:100060004800607C4800607E4800608048006082F4
+:100070004800608448006086480060884800608AC4
+:100080004800608C4800608E480060904800609294
+:1000900048006094480060974800609A4800609D5E
+:1000A000480060A0CAC20000CCC20000E0C200004C
+:1000B000F2C2000000C3000018C3000026C3000005
+:1000C0005EC3000066C300007CC30000A0C3000044
+:1000D000EAC30000ECC30000F4C30000FCC300004E
+:1000E00004C400003EC4000046C50000DAC500009C
+:1000F000F0C5000018C7000030C800009CC8000010
+:100100009EC80000A0C80000A2C80000A4C800004B
+:10011000A6C80000A8C80000AAC80000ACC800001B
+:10012000AEC80000E628E84C96064620008144F060
+:10013000013C3817840040F0BC00DD0F0816243263
+:10014000404E5C6A4000400804310029441EFFFF15
+:10015000D5334000440804310029441DFFFFD52C4D
+:100160004000480804310029441BFFFFD52540000A
+:100170004C0804310029461FFF7FD51C4000500861
+:1001800004310029461FFEFFD515400054080431F4
+:100190000029461FFDFFD50E4000580804310029F4
+:1001A000461FFBFFD50740005C0804310029461FAD
+:1001B000F7FF50108FFFFE5EFE0F14010029DD9E39
+:1001C000442480909606B46240102008440FFEFF3D
+:1001D000FE1EFE0FB602DD9E46100082A00A5800E9
+:1001E0000001A80ADD9E462000829606A0D5401098
+:1001F0004008440EFFFFFE1EFE0FA815DD9E4600C0
+:100200000082A00592109606DD9EFC4046600081AB
+:10021000962F409020080403002A447FC0FFFE3E32
+:10022000400024041403002A966F4090C008460F33
+:10023000FC0F0413002A50000FFFFE464010A404D8
+:100240001413002A96AF0493002A40116008462C2C
+:100250000FFF50210FFF40248802FE8F1423002A35
+:100260000413002B96EF9226944EFE5F1413002B7E
+:10027000972F401220080443002B976FFF3EFF0F7B
+:100280001443002B0413002B4052C008FE0EFE2F17
+:100290001403002B49000482000F80205410003FFB
+:1002A0000403039892069406FE0F14030398000FAC
+:1002B000802404230399962F9446440FF03FFE16A2
+:1002C000FE0F1403039949000462FCC0463000820B
+:1002D00044410000B4A3541087FFFF2FB683B483BA
+:1002E0009492928B40422C08FF0FB68388404C01B9
+:1002F0000005A059AA41D5FCB423440EFFFFFE0E11
+:10030000B603DD9E4630008244410000B4A3541081
+:1003100087FFFF2FB683B4839492928B40422C08C0
+:10032000FF0FB683884080234C010005A301A90973
+:10033000D5FCB423440EFFFFFE0EB603DD9EFC0089
+:1003400046500080463FFF009D999D2E94A988400D
+:100350003811180038210C00944CFE57964818129A
+:100360008001DCF5FC80FC0046100080462FFEFF7B
+:100370005050800850610FF150410FF05030800E06
+:1003800094A988403811180038211000944CFE5769
+:10039000964818128001DBF5FC8046200080847EA0
+:1003A000505101C4B4859606FEE6FE1FB605965769
+:1003B000B4654000A008441FF8FFFE5EFE47B62566
+:1003C000DD9E46200081400040080411001196493E
+:1003D000FE0F14010011DD9E462000814000400800
+:1003E000041100109649FE0F14010010DD9E4620F6
+:1003F00000810411001092304010C008FE0F14015B
+:100400000010DD9E46200081041100119230401042
+:10041000C008FE0F14010011DD9E462000818430CB
+:1004200004310012961FFE5EFE0F14010012DD9EC5
+:1004300046200080843004310070961FFE5EFE0F5F
+:1004400014010070DD9E46200081843E04310013BB
+:100450009606FE5EFE0F14010013DD9E462000810D
+:1004600096060431001240102008440FFEFFFE1EC5
+:10047000FE0F14010012DD9E46200081960F4010F1
+:10048000480804310012460FFF3F50000FFFFE1EC8
+:10049000FE0F14010012DD9E4600008104000012D0
+:1004A0009212960FDD9E44148010B401920D9606B0
+:1004B000C00544048011FA50AE80B401920E960635
+:1004C000C0064404801144100040AE404414801023
+:1004D000B401920F9606C00644048011442FFF8099
+:1004E000AE80B40192099606C005440480118422AE
+:1004F000AE4044148010B401920C9606C00544042A
+:100500008011FA40AE80B40192179606C0064404EA
+:100510008012441FFF80AE40DD9E00004610008127
+:1005200004308039C00B5A00010D5A00020E84407D
+:100530005A08030D4623F3C0D50946230000D5060B
+:1005400046235140D5034623A280461C0C3F501041
+:100550008FFF4001840246100081FE17140080398D
+:10056000DD9E46200081960F401058080431003966
+:10057000460FF3FF50000FFFFE1EFE0F140100395F
+:10058000DD9E4610008104308039C0115A000109F7
+:100590005A00020A5A08030B4403FFC0D50844015D
+:1005A0005540D5054402AA80D50284004423FFC0EB
+:1005B000441C003FFE5EFE16FE0F46100081140034
+:1005C0008039DD9E46200081960F043100394010AD
+:1005D0002808440FF3FFFE1EFE0F14010039DD9EB4
+:1005E000462000814631551050318440505100E47E
+:1005F000B425A8E9A12A8478FEE6E605A8EAE83A47
+:1006000044F006103807800040F03C004A003C00EF
+:10061000061C283E54004603A32A922650000300DD
+:10062000944E140100385810803AD5228400922646
+:1006300014010038944ED51C46055555922650009D
+:100640000555944E1401003858108015D511460AEE
+:10065000AAAA922650000AAA944E140100385810F3
+:10066000802AD506841F140100385810803F1411C9
+:100670000039DD9EDD9E442450009606B46294420B
+:10068000841BFE1EFE0FB602DD9E44045028B400FB
+:1006900092049606DD9E920046200083843C04313D
+:1006A0000010960FFE5EFE0F14010010DD9E462026
+:1006B000008396060431001040102008440FFEFF0E
+:1006C000FE1EFE0F14010010DD9EFC40462000833C
+:1006D000445FFEFF8382BB1846400F03FEEEBB98CB
+:1006E000BB1850420C0F92684031A0085831804628
+:1006F000BB98BF39BE3A0491003BFFE6FFA64044D9
+:10070000900204908002BB3CB5418924A10B96DF86
+:1007100088EA04A08001985CBB1888CA583181001F
+:10072000BB98BB1892684031A00858318046BB98EE
+:10073000BFB9BEBA1491003B96C9B93C9230401083
+:10074000C008FE5FB9BCB420B9B9A041B9BAA04293
+:10075000B9BBA446B83C921040004008FE0FB8BC9C
+:10076000B818FF46BD98FCC0FC2046200083443FDB
+:10077000FEFF8382BC18944AFEE6BB98BB1850511A
+:1007800000E492684031A00858318048BB98BB18FB
+:10079000506100E858318100BB98507100EC88200E
+:1007A000502100F0463000834C008012A2C1B66593
+:1007B0008380BB3F0240017EB666BB7FB667B462F2
+:1007C00092704031C008FEE7B662D5ED8383B91858
+:1007D000440FFEFFFE0EB898FCA0FC2046100083DC
+:1007E000442FFEFF8381BB184640F03CFE9EBA9822
+:1007F000BA18503200F09248402120085821004693
+:10080000BA98BE39B480BD3AFF9E88C4A101BF3BEF
+:10081000FF5E88A4A102BA3CFEFE8883A0C35421D7
+:1008200000F0BEB99813BDBABCBB9681B83C92101B
+:1008300040004008FE17B8BCFCA044148090845EC1
+:10084000B4619606FE9EFE87B641B481442FFFEF49
+:1008500094C4FEA6FE9FB641B461442FFBFFFE9EEA
+:1008600040002808FE17B60146100080841850305A
+:10087000826CB443FE1658000006B603B443440F1E
+:10088000F0FFFE1658000800B603DD9E520000017E
+:10089000462000809606C9084010200804310079DF
+:1008A000440FFEFFD5074010400804310079440E84
+:1008B000FFFFFE1EFE0F14010079DD9E4610008230
+:1008C0005A08010B50308020B40358000002B603D0
+:1008D000B443841ED50404208008841DFE16140031
+:1008E0008008DD9E4630008354100001505183B8CB
+:1008F000B4854020A008441FFEFFFE66FE57B625C3
+:10090000B425E601440FFDFF40F7A408FE0E4000A9
+:100910003C04B605DD9E4630008354100001505162
+:1009200083B8B4854020A808441FFBFFFE66FE572D
+:10093000B625B425E601440FF7FF40F7AC08FE0EDC
+:1009400040003C04B605DD9E442720689601B42291
+:1009500092304010C008FE47B62244272070B422CF
+:1009600092304010C008FE47B62244272078B422B7
+:1009700092304010C008FE47B62244272080B4229F
+:1009800092304010C008FE47B62244272088B42287
+:1009900092304010C008FE47B62244272090B4226F
+:1009A00092304010C008FE0FB602DD9EC80A441700
+:1009B0002000460FEFFFB44150000FFFFE16D5098F
+:1009C0005A0801094417200046001000B441FE17E0
+:1009D000B601DD9E44272000843EB4629606FE5E8A
+:1009E000FE0FB602DD9E44272004843EB4629606C4
+:1009F000FE5EFE0FB602DD9E442720009606B4621E
+:100A000040104008440EFFFFFE1EFE0FB602DD9EA2
+:100A1000C90644271000B422FE0FD5085A18010851
+:100A200044271000FE03B422FE0EB602DD9E5A18C3
+:100A3000010744271004B422FE0FD507C907442735
+:100A40001004FE03B422FE0EB602DD9E5A18010702
+:100A500044271008B422FE0FD507C9074427100801
+:100A6000FE03B422FE0EB602DD9E441600005A08B4
+:100A70000106B40158000001D504B441841EFE16DD
+:100A8000B601DD9E44160000B4415A080106440137
+:100A90000000FE17D504440EFFFFFE16B601DD9ED2
+:100AA00044060000B400921C9606DD9E44160030F9
+:100AB0005A080106B40158000100D505B441440F9D
+:100AC000FEFFFE16B601DD9E4436381440002008B5
+:100AD00040202009B403966F921840006008FE176A
+:100AE00044263808B603B4624000E008461C0FFFF5
+:100AF00050108FFFFE5EFE47B622441638044401B4
+:100B00000000B441FE17B6014414800CB4019203F6
+:100B10009606C0FD4404800C8428AE40DD9E443619
+:100B200034144000200840202009B403966F921826
+:100B300040006008FE1744263408B603B462400043
+:100B4000E008461C0FFF50108FFFFE5EFE47B622E6
+:100B50004416340444010000B441FE17B6014414A5
+:100B6000800CB40192139606C0FD4404800E8428C4
+:100B7000AE40DD9EFC01B63F8022F38149FFFFA617
+:100B8000B41FF10149FFFFCDFC8144163C04B401C0
+:100B900058000001B601DD9E44263804B422440604
+:100BA000380492289646C9FBB440843EFE56B620CF
+:100BB0008020B40192089606C8FD44263404B4226D
+:100BC0004406340492289646C9FBB440843EFE563F
+:100BD000B6208020B40192089606C8FDDD9EFC0078
+:100BE000466000838386B82758000001B8A7B8275D
+:100BF00058000100B8A7840149000844B927841EA1
+:100C0000FE0EB8A7B927440FFEFFFE0EB8A7FC8062
+:100C1000FC404660008384FE83860493001496069D
+:100C200040749C02FE3FB894965FBF144000E008F9
+:100C3000461F0FFF50108FFFFE7EFE47B994972F7F
+:100C4000B91440024408464FF81F50420FFFFF0EF0
+:100C5000FF07BC94976F4002AC08BD14441E07FF09
+:100C6000FF4EFF47BD94B815542103FF920A400080
+:100C70002808FE17B89596F74001C008B915463FF9
+:100C8000F80F50318FFFFECEFEC7BB95FCC046006B
+:100C90000083040000169601DD9EFC0046400083A0
+:100CA00084618384BE1384BEFE1EFF76FE2FB8933C
+:100CB000FE5E4030A008B960440FFEFFFE46FE5FB6
+:100CC000B9E096A740012008BA13441FE0FFFE8E4A
+:100CD000FE87BA93FC8046300083968F5041818412
+:100CE000B604A861A062841CFE0EFE87A8A2DD9E49
+:100CF000462000839627041100609225944DFE47FC
+:100D000014110060DD9E46200083843E04310012F1
+:100D10009606FE5EFE0F14010012DD9EB4404610E2
+:100D2000008014208048A0011400804ADD9EFC4011
+:100D300046200083506100E48382BB18507100E8B4
+:100D400058318100BB98BB18509100EC926840313B
+:100D5000A00858318088BB988C0284A0502100F0F4
+:100D600046300083D1222230000022407FFF4031F4
+:100D7000C0088864B666223000022240000140317B
+:100D8000C0088864B6672230000422400003403166
+:100D9000C0088864B669B4628CA192704031C00802
+:100DA000B66297688C0CD5DD8383B918440FFEFFBB
+:100DB000FE0EB898FCC046200083960F0431001246
+:100DC00040104008440CFFFFFE1EFE0F14010012ED
+:100DD000DD9EFC008440446400C038308800384008
+:100DE000090199564031B0089569FEE796D98C41C2
+:100DF000ACE85A2814F4FC8046200083960604319F
+:100E000000269441841DFE1EFE0F14010026DD9E67
+:100E1000462000819606A0D540102008440FFEFF12
+:100E2000FE1EFE0FA815DD9EC90846200091843ED7
+:100E3000B4629606FE5ED50A5A18010B4620009150
+:100E40009606B4629441841DFE1EFE0FB602DD9E1E
+:100E5000FC00440000C8490007154414500C4660CB
+:100E60000081B40158000004B601FA1849000713C4
+:100E70008386B81C58000100B89C84014900070B08
+:100E8000B91C44010000FE0FB89C440001F4490065
+:100E900006F9B91C46001000FE0FB89C440001F48E
+:100EA000490006F0FC800000461000805050808011
+:100EB000501080B0A281AAA9D9FEDD9E4610008004
+:100EC000505080B0501080C4A281AAA9D9FEDD9EE6
+:100ED000B4404610008014208047A00114008049CF
+:100EE000DD9E46100080505081405030814CA6411C
+:100EF000A680944CFE579648AE680010000D002066
+:100F0000000C944CFE5796481012800C8CA18C0259
+:100F1000DBEFDD9E46100080505080405030804610
+:100F2000A641A680944CFE579648AE680010000D6E
+:100F30000020000C944CFE5796481012800C8CA197
+:100F40008C02DBEFDD9EA68180A0949408128005C0
+:100F5000FE8F46100080969010208048A6A9A6C556
+:100F60009494FE9F969010208054A683A6C29494D9
+:100F7000FE9F969010208049A6ABA6EA9494FE9F0F
+:100F8000969010208055A684840FFE86403140083C
+:100F9000464FFF0F0420801250420FFFFEA6FE9F17
+:100FA00014208012A6ACFE164020400804008015D4
+:100FB000FE26FE1714008015DD9E4610008050505E
+:100FC00080585030805EA641A680944CFE579648CB
+:100FD000AE680010000D0020000C944CFE5796489F
+:100FE0001012800C8CA18C02DBEFDD9EA68180A00C
+:100FF000949408128005FE8F461000809690102071
+:101000008060A6A9A6C59494FE9F96901020806C3F
+:10101000A683A6C29494FE9F969010208061A6ABF2
+:10102000A6EA9494FE9F96901020806DA684840F6B
+:10103000FE8640314008464FFF0F04208018504282
+:101040000FFFFEA6FE9F14208018A6ACFE164020BF
+:1010500040080400801BFE26FE171400801BDD9E46
+:10106000E606E857FC204670008144F01078380707
+:10107000800040F03C00DD0F061634446276040325
+:101080008020541087FF920B40002C08D50C541080
+:1010900087FF4000C00804238020461F800F5010A7
+:1010A0008FFFFE56FE4714138020FCA0040380210E
+:1010B000541087FF920B40002C08D50C541087FF6A
+:1010C0004000C00804238021461F800F50108FFF6E
+:1010D000FE56FE4714138021FCA08387B8225410CB
+:1010E00087FF920B40002C08FE47B9A2FCA080C1EC
+:1010F00049FFFD54541303FF958E04138398440F46
+:10110000003FFE46FE771413839849FFFD40FCA084
+:10111000DD9E46200083960640106008043100C022
+:10112000460FEFFF50000FFFFE1EFE0F140100C020
+:10113000DD9E46200083960640106408043100C0FE
+:10114000460FDFFF50000FFFFE1EFE0F140100C010
+:10115000DD9E46200083960F0431000F40102008CA
+:10116000440FFCFFFE1EFE0F1401000FDD9E462003
+:101170000083843E0431000F9606FE5EFE0F1401CC
+:10118000000FDD9E4620008396060431000F4010BC
+:101190002808440FFBFFFE1EFE0F1401000FDD9E0A
+:1011A00046100083440100000420800EFE17140046
+:1011B000800EDD9E46200083463F7FFF5051003861
+:1011C000B48550318FFFFEE6B665B485463EFFFF1D
+:1011D00050318FFFFEE6B6655A080104841FD50220
+:1011E00084001401000B1401000C040100335A1890
+:1011F000010B58000FFF14010033040100345800A4
+:101200000FFFD50B920C400030081401003304018D
+:101210000034920C4000300814010034DD9E46106A
+:101220000083960650508038B485442FFEFF40302E
+:101230002008FEA6FE9FB645B465442FFDFF400082
+:101240002408FE9EFE17B605DD9E46200081505103
+:1012500000905031009A0820000188419690182291
+:101260008001DBFADD9EE625E833961F46200081EB
+:1012700044F012803817840040F0BC004A003C0063
+:10128000060E1A283600043100238430D51D94043C
+:1012900004310023441FFF0FD517400020080431FC
+:1012A0000023441FF0FFD510400030080431002314
+:1012B000441F0FFFD509461FFF0F400040080431AF
+:1012C000002350108FFFFE5EFE0F14010023DD9EF1
+:1012D0008400DD9E46200081540003FF401040083A
+:1012E00004310049460FC00F50000FFFFE1EFE0FD5
+:1012F00014010049DD9EE606E852FC20467000819C
+:10130000546083FF44F013143807800040F03C0021
+:101310004A003C00062E465666168387B930922A4C
+:101320004010A808FF8FBEB0FCA08387B831462FBD
+:10133000C00F50210FFF40634008FE16FE37B8B1C2
+:10134000FCA08387B830462FC00F50210FFF4063A9
+:101350004008FE16FE37B8B0FCA08387B931922A48
+:101360004010A808FF8FBEB1FCA08387B932922A33
+:101370004010A808FF8FBEB2FCA049FFFC0F40132D
+:10138000400804038398466FC00F50630FFFFF8629
+:10139000FF8F1463839849FFFBFAFCA0DD9E542065
+:1013A0008003E6085410800C90224EF20093964F72
+:1013B00046300081968F44F013C43807800040F017
+:1013C0003C00DD0F0824405E7C9CBCE85051809CB2
+:1013D000B485841CFE26FE47B625B425440CFFFFC9
+:1013E00040214008FE0ED5725051809CB485841374
+:1013F000FE26944AFE47B62540214808B405461FFC
+:10140000FF3FD54E5051809CB485440FFFCFFE2640
+:10141000944CFE47B62540215008B405461FFCFFFA
+:10142000D53F5051809CB485440FFF3FFE26944E1B
+:10143000FE47B62540215808B405461FF3FFD530B6
+:101440005051809CB485440FFCFFFE264010A0083C
+:10145000FE47B62540216008B405461FCFFFD520C2
+:101460005051809CB485440FF3FFFE264010A8081D
+:10147000FE47B62540216808B405461F3FFFD5103A
+:101480005051809CB485440FCFFFFE264010B00819
+:10149000FE47B62540217008B405461CFFFF5010DA
+:1014A0008FFFFE0EFE1714018027DD9E5051809C99
+:1014B000B485440F3FFFFE264010B808FE47B6250E
+:1014C000B4054021780894029202FE8714218027F7
+:1014D000DD9EDD9EFC4080E0440434385A78012BC8
+:1014E00080C1B420449FE0FF58108002B6208027BE
+:1014F00049FFFB174404345097A7B42040632008E9
+:101500004010A402FE77B620802749FFFB0A44045E
+:10151000383CB42058108002B620802749FFFAD604
+:1015200044043858B4204010A402FF8FB6C080276E
+:10153000D50EB42084DDFE76B620842149FFFAF171
+:101540004404383CB420FF8EB6C0842149FFFABE63
+:10155000FCC09200C8044407200CD50344072010A7
+:10156000B40040003008920CDD9EFC0080C149FFB1
+:10157000FFF384408022E246E80538100A0A8C41D5
+:10158000D5FBFC804427201C54000FFFB422922C72
+:101590004010B008FE47B622DD9E44272034540098
+:1015A0000FFFB422922C4010B008FE47B622DD9EF9
+:1015B0004427203854000FFFB422922C4010B0086A
+:1015C000FE47B622DD9E442720548430B462961F25
+:1015D000FE5EFE0FB602DD9E44272054961FB462C5
+:1015E00040102008440FF0FFFE1EFE0FB602DD9EE5
+:1015F00044272058961F40104008B462460FFF0F42
+:1016000050000FFFFE1EFE0FB602DD9E4404009C3C
+:10161000A600DD9E461000810400806E5800000187
+:101620001400806EDD9EFC0044042C1C8441B42018
+:10163000806258108100B620B42058108080B620F7
+:101640004404281C4414241C49FFFA96FC804620BC
+:1016500000808430504101D0B464961FFE5EFE4786
+:10166000B624B464441FFF0F9404FE5EFE0FB6045C
+:10167000DD9E000044248088843EB4629606FE5EAF
+:10168000FE47B622B462843D9401FE5EFE0FB602B0
+:10169000DD9EFC00446400188421AE70A632442014
+:1016A000988158000001AE32A63258000002AE32D6
+:1016B000A63258000004AE32A63358000002AE3302
+:1016C000A63358000004AE33A63358000008AE33EA
+:1016D000A63358000010AE3344040010B640AE717B
+:1016E000A63258000010AE32A63258000020AE32AA
+:1016F000A672440FFF80FE0FAE32A633540000FEE8
+:10170000AE33A63358000020AE33A6335800004055
+:10171000AE33490002B3E60344145010A632E91078
+:10172000540000FBAE32B401920840002008B6011C
+:1017300044147000440EFFFFB441FE16D51158004A
+:101740000004AE32B401920840002008580000980E
+:10175000B6014414700044010000B441FE17B60104
+:10176000FC8044372044460FC00FB42350000FFFC5
+:10177000FE4646202400FE57B62344372048442323
+:101780000000B423FE46FE574427204CB623B42263
+:1017900046300C00922C4010B00858108252B622ED
+:1017A000B422FE46FE5FB622442720504630009009
+:1017B000B422922C4010B00858108240B622B422B5
+:1017C000FE0EB60244272004460FFF0FB42250003D
+:1017D0000FFFFE46FE5FB622B462461FF0FF5010B8
+:1017E0008FFFFE5E46300300FE5FB622462000807B
+:1017F000441FF0FF504101C0B464FE5E58108800E1
+:10180000B624B424FE0E44120000FE0FB604DD9E82
+:101810004620009140004008A0569649FE0FA816A9
+:10182000DD9EE604E8284610009144F01838380799
+:10183000800040F03C00DD0F0412202EA00A921020
+:10184000400040085800000AD515A00A9210400038
+:10185000400858000046D50EA00A921040004008EB
+:1018600058000096D507A00A921040004008580082
+:1018700001F4A80ADD9E462FFC0F4610009150216E
+:101880000FFF5A0801080400800EFE864402000083
+:10189000D5060400800EFE8644010000FE87142059
+:1018A000800EA0099206940658000001A809DD9E4A
+:1018B000FC00466000918401A831440001F4A83284
+:1018C0008386B90A460FC00F50000C00FE46581020
+:1018D0008001B98AB90BFE0E58000240B88BB90CD2
+:1018E000440FC0C0FE0E58002001B88CB90D460E42
+:1018F0000E0E500000E0FE0E4610601150108201E6
+:10190000FE0FB88DB90E460FFC0C500000F3FE0E12
+:101910004411010CFE0FB88E49FFFE7AE603A03693
+:10192000921040004008E91F58000140A836838605
+:10193000B80892104000400858000140B888A0350F
+:1019400092104000400858000140A835A03792107E
+:101950004000400858000140A837A0764600140017
+:101960009649D51E58004900A8368386B8089210BB
+:101970004000400858004900B888A0359210400047
+:10198000400858004900A835A03792104000400890
+:1019900058004900A837A076460490009649FE47B3
+:1019A000A8768386B9089649FE47B988A0759649F6
+:1019B000FE47A875A0779649FE0FA837460000910C
+:1019C0008380B9125810BF3FB992BA13441EE08009
+:1019D000FE5644210048FE57B993FC804600009112
+:1019E00050300044B42358108001B623B443843EE1
+:1019F000FE56B623DD9E920044173010B4019606C1
+:101A0000C0FE44173010B401920396065A0001FD3F
+:101A1000DD9E84A0D005400000098CA1D5FCDD9E90
+:101A2000C9084424000C9606A650541080FED50A1E
+:101A30005A18010B4424000C9606A6509401541029
+:101A400080FDFE0FAE10DD9EC90444150000D505D3
+:101A50005A18010544150010AE0ADD9EC90A442437
+:101A60008080960640106008B462460FEFFFD50BE9
+:101A70005A18010F44248080960640106408B4620E
+:101A8000460FDFFF50000FFFFE1EFE0FB602DD9E69
+:101A9000C90444150004D5055A180105441500145D
+:101AA000AC08DD9EC808441480038401AE084415C8
+:101AB0000008D5095A080109441480038442AE88FD
+:101AC00044150018AE09DD9EC80844048003842133
+:101AD000AE4044150008D5095A08010C440480039F
+:101AE0008422AE4044150018A60858000002AE0833
+:101AF000DD9EC90444150000D5055A18010544159A
+:101B00000010AE08DD9E8421C0045A08010684221C
+:101B100044048003AE40DD9E44048000A60392018D
+:101B20009606C005440480038422AE40DD9E462014
+:101B30000081843EA0D59606FE5EFE0FA815DD9EB0
+:101B400046000081A0059606DD9E44245014843E84
+:101B5000B4629606FE5EFE0FB602DD9E44251004BA
+:101B6000B42292304010C008FE0FB602DD9E44152C
+:101B7000100CB40158000100B601DD9E4415100C94
+:101B8000B40192084000200858000001B601441535
+:101B90001018B40196005A005AFEDD9EFC00440065
+:101BA000012C4900006F4405100C441FFF81AE401A
+:101BB000441FFF98AE4044151018B40196005A0017
+:101BC000A5FE4415100CB401920840002008B6018F
+:101BD000FC80C0045A00011FDD9E44148082442210
+:101BE0000000AE084414800044048080B641B46014
+:101BF000FE9FB64044240000B641B460FE9FB6404C
+:101C000046200100B641B460FE9FB64046200080E9
+:101C1000D523440480828420AE40441480004404D0
+:101C2000808044210000B641B460FE9FB64044224B
+:101C30000000B641B460FE9FB64044240000B641A7
+:101C4000B460FE9FB64046200080B641B460FE9F5F
+:101C5000B64046200100B641B460FE9FB640462023
+:101C60000200B641B460FE9FB64046200400B64173
+:101C7000B420FE8FB640DD9EFC0049FFFCC9FC800D
+:101C8000842EFE0C8E015A07FF0540000009D5FB8B
+:101C9000DD9E441036B0FE0C8E015A07FF05400051
+:101CA0000009D5FBDD9EFFFFFC2044622D504472ED
+:101CB0001080800649001CDCFD0349001CF5FD0373
+:101CC0005023FFE85033FFF400437FF849001E45DE
+:101CD000FCA0FC0084204420086C44022D504900E4
+:101CE000564B490024D5FC80FC204900491D3CF797
+:101CF000FB365EF7F830E90F84203C74059D506098
+:101D0000048080A180612A400001E0E4E8068400AC
+:101D10003E07F4608400D5425EF27F38E80E8C61A5
+:101D20009C895EF27E7096D9965188A4E806E66793
+:101D30008043E802844796D14C037FE7C1034012F9
+:101D400084363C0DFD179A084E040003FE025EF037
+:101D500000338400E9052E27F46040000806E6679A
+:101D6000E90884413E27F4612E27F4608C41D504B4
+:101D700084403E27F4613E27F460C00484003E079F
+:101D8000F4602E07F4603C1FFD17E602E9C4490029
+:101D90003C3AC8C13E07F4608401FCA05A18011CFB
+:101DA000FC0080C0490048AC49003077802084A006
+:101DB000546300FD44300900A2899693AAA95A6889
+:101DC00001092220FFFE9B084021200814227FFFEA
+:101DD000DBF4FC80DD9EFC41490048A680C0490040
+:101DE000488F4900305A2E17F4615A1801044800F0
+:101DF00000A684A08085806580E5946A8820F181B2
+:101E0000842083C1810181418121988D04FF80015B
+:101E1000949238F78602B4428A4F969140F10011AD
+:101E20005EF78047E90884003E07F4593E07F458FE
+:101E30004800008350F1003B40F780135CF7802797
+:101E4000E9058E555CF10027E8038CE197F9E62956
+:101E500038230501E81450F17FF15CF78010E806A3
+:101E600050240001548100FFD51C8C5E9691E650F1
+:101E7000E818502F000155E100FFD51350F17FF60F
+:101E80005CF78015E80650248001549100FFD509C5
+:101E90008C5E9691E655E8055025000154A100FF9F
+:101EA0008C215A1812B45A8809048C6196D85BE8C0
+:101EB00009048C6296D85A9809048C8197205AA8F4
+:101EC00009048C8297208CB2506300245A5A4097A0
+:101ED0005CF380338400E9042E07F4598C013E073B
+:101EE000F4598400E204E90440378C06C3072E0746
+:101EF000F4588C013E07F458D5033E37F4582E07AA
+:101F0000F459E60BE90984003E07F45984023E07C0
+:101F1000F4618402D50C2E07F458E6038400E90C22
+:101F20003E07F45884033E07F46184038421804112
+:101F300049FFFF36D5033E07F461FCC1FC004900B0
+:101F40003B62C00549FFFF498400FC8049FFFECE8B
+:101F5000C0FAFC80FC40B480A54C22308002E085B1
+:101F60002270800522608003E82B96D9E0838143AC
+:101F700040928C0140A23C1A80C94E9400045264E5
+:101F800080004021A8014E240003FE9222708000B0
+:101F900040150C019AEFFE5C4010A4368827E0271C
+:101FA000E905E0A14050BC1A80E59A72FF14422373
+:101FB000842440421896402118568882D53841C35F
+:101FC000801340917001E124E83540A300134031B3
+:101FD0002801E06480A3407E280140523C1A4E74E0
+:101FE0000003FFFA8A654E34000540350801886514
+:101FF000228080019B558AAA406E2001FF74401503
+:102000007001401284368A288822E029E9068A482D
+:10201000E0414020BC1A81229A7B42520C24423477
+:10202000842440529CB640319C76992BB680840122
+:10203000FCC08400FCC03C03FA329606C05EFC4241
+:1020400045C22D5084E0509E00C0000E00AF9E415E
+:10205000E622E9035A08044CB0438440801C49003E
+:10206000007DF0034412106822000004F0813C63FC
+:10207000F1A0B001804649FFFF6F81403C27F9D4B1
+:10208000F001F103E002E9083C27F9D59AB2E00239
+:1020900040203C1B969322008005AC8CF0824412B9
+:1020A00010743C63F1A1B002804649FFFF558100E6
+:1020B0003C27F9DAF002F103E002E9083C27F9DBFA
+:1020C0009AB2E00240203C1B9693AC8D801C4900E4
+:1020D00000314EA300044E82000B440000C480294E
+:1020E00042138073B40158000020B6018CE151CE38
+:1020F00000C45A780BACFCC2DD9E0430003096D789
+:10210000E465E815FC00FA4C80C042018873490080
+:10211000540D0423003084189C519657E625FE1672
+:10212000E802FE0F140300308401FC808400DD9E71
+:10213000042000309697E445E80EFC009ED196D826
+:102140005A38FF039CD4FA4C42018873490053EE7D
+:102150008401FC808400DD9EE645E81304300030F5
+:1021600096D79A9A96909ED196D8971A4E44000484
+:102170008C4496D0FA4C42018873B6018401DD9EEE
+:102180008400DD9EFC40FF92814080E1800181223D
+:10219000842044200040490053EF97B38480844951
+:1021A000FA22838A4282082443C204738400383EA0
+:1021B00001119740E069E906962A4E050020FA6170
+:1021C000D512E0C3E8FA8C015A0812F3D51740F192
+:1021D000A00039C53D1140FE2407E808E0DCE80610
+:1021E0008E6196D8E060E8F4D50396DAD502847F54
+:1021F000983C8C6138539008AEC18C825A4840D3C9
+:10220000FCC0FC4284A080E58125A78955C280FFDF
+:10221000F682FAC2FFACF6832E67F46EA7082FE7AA
+:10222000F46FF6812E87F46D2EA7F46CF602E28629
+:10223000E813F60388C438601911E126E80515CFC4
+:10224000800183C48126E0C7E804815C810480E6C4
+:102250008C819720D5EC004F80048CA13FE7F46F70
+:102260003E47F46E3E87F46D3EA7F46C8C225A58BC
+:1022700020CE12910000ADD8FCC2FC4180C1850087
+:10228000FA2F80E08122800244200240F3818144C1
+:102290003C8FFD1A49005370802680688048800872
+:1022A0008480A788E286E81999633C6DFD1A38534B
+:1022B00095118C8188A63C5FFD1A9720D5F341E3E8
+:1022C0000C003843F91188A43C5FFD1AF50189041C
+:1022D000E0A4E9098CC197B0A7093C5DFD1AE2C4EE
+:1022E000E9EFD50F8C41E1449693E804444000DFC8
+:1022F000D5034440005F8C013844F8089601D5EBC3
+:10230000E692E80899A38C8138639911972088A6F2
+:10231000D5F88C723C5FFD1A8C225A3A40C33C8F30
+:10232000FD253C2BFA4CFCC1FC48FA94505000248B
+:102330008420806144607FFF42209024382008116F
+:10234000382F8509E04640613C1B8C21E06240311A
+:102350003C1B5A1820F33C1405BFE023E9058C020E
+:102360004C02FFE8FCC88460804380E3389F8D11F5
+:1023700040A49801E141E8048C4188E996908C6181
+:102380005A3820F6CA0284414011040988274010B7
+:1023900088365EF080C9E904441000C8D5044E14A4
+:1023A000000384204060840A97B184603C7405BFB8
+:1023B000382F8D1188E1E0E242719024E8038A46CB
+:1023C000D5028A418C6138201C095A3820F1D5C8C1
+:1023D0004627FFFF84204452294850210FFF4432F2
+:1023E000291C3822860A3821860A8C214442294831
+:1023F0005A180BF9FC402E37E71084A0409188084A
+:102400008144D3144070240080404C23800B3862F8
+:102410001602A251E0C140133C1B3815160AD5F62E
+:102420008CA197685000002CD5EDFCC02E27E7103A
+:10243000461800008400444228F0445228C4E002B8
+:10244000E80B38320202CB0638328202E023401118
+:10245000BC1B8C01D5F5840044522898444229487D
+:10246000E002E80B38328202C306383202028A6187
+:102470003832020A8C01D5F58400445228F04442D7
+:10248000291CE002E80B38328202C306383202020D
+:1024900088613832020A8C01D5F58400445228F054
+:1024A000444228C4E002E80B38328202CB063832BC
+:1024B00002028A613832020A8C01D5F5DD9EFC40A9
+:1024C0004432289884813841820A443229742E5734
+:1024D000E7103811820AFA3C42200473446229480A
+:1024E00084204472291C444228C44492284096C83F
+:1024F000E265E81338A3020238338602886A38A1FD
+:1025000006028A6A38A20602E143E8053832060A62
+:102510003804860A8C21D5ECFCC0FC4844A229A0D2
+:10252000B61F2E97E7102E57F4404C5480E08420BD
+:10253000FA5C440228984900521F8420FA5C440245
+:1025400028F04900521944022974843FFA5C49007A
+:10255000521384E0E0E9E81538051E025A0FFF1017
+:1025600044022974843E38101E0A440228988421AB
+:10257000F78538101E0A80C98047D5068CE1D5EB57
+:10258000842080C98041FA1CB47F4231007384A04A
+:1025900045E228C4444229484482291C44F2284088
+:1025A0004C54801039C20A0238041602881C39C102
+:1025B00096023827960A8A1C380F160A8CA1D5F184
+:1025C0008520448228F0E121E839B00505CF80005C
+:1025D00038702602FA1C43C3807384C044422948E1
+:1025E0004452291C2E07E710E0C04EF2007D38222D
+:1025F0001E0238029A0294F28802382E1A024C20E7
+:10260000401C38041A02C8184402286CF5833800AC
+:102610000C02F4825A07FF13844138240C0A8841C3
+:10262000F281B0853801060A8027B45F49FFFF496F
+:10263000F101F503F4028CC1D5D62E07E710E0C0F6
+:10264000E93749FFFEF5842080C145C228C42E0722
+:10265000E710E0C0E82A38041A0294B2C824380E01
+:102660001A02C8214402286C380008025A0FFF07DA
+:102670004402284038701A02D51B84613834080A95
+:102680004432289838318202CB0EB0C55090800178
+:102690003801860A4412284038108802B45F49FF86
+:1026A000FF1080298CC1D5D4852048FFFF8E2E07CE
+:1026B000E710E0C0E81B2E07F440441229748C0197
+:1026C0003E07F4404402286C5A7FFE0448FFFF2B6B
+:1026D00038251E0238701A0A38651E0A38709E02A4
+:1026E00080C2D5F38D2148FFFF70FCC8FC01F0814A
+:1026F000840080C13E07F440843FFA5C440229A074
+:102700004900513A843FFA5C4402286C4900513434
+:10271000F0013E67E71049FFFE5DF00149FFFEFF53
+:10272000FC8100003A6FAABCEFEC9E11F08183811E
+:10273000848085404E070036F00184C0408010013F
+:102740004E860008D5278CC197B0E0C84EF2002312
+:102750004093080850348004380E1A11381E0C11AA
+:10276000893CE001407E0C00E8EF84448029B003FE
+:10277000490050DC8CC1802784448009490050D630
+:1027800097B08007B0438444490050D040032007ED
+:10279000C8E08D41F00154A500FFE140808AE9CDF9
+:1027A000EC143A6FAA84DD9EC3663A6FAABC8E61B0
+:1027B000A7830090000296D894D92E77E3468C63C5
+:1027C0009D51EFFC2E07E3478843FB4F8780850030
+:1027D0000032FFFF20F28000886696DA4E35002432
+:1027E00041E19C074FE2002040F4BC0040F780101C
+:1027F0004EF5001A41E780074FE2001683C143E31C
+:10280000BC73383F0C0054F18020E80D54F1803F38
+:102810005AF03F2454F1801F5AF01F064E830018CF
+:10282000814385018CA2DAD5E702E91EA660440047
+:10283000003FE639E808948A88448C21AF951091CE
+:102840000004AE60EC043A6FAA84DD9E4C353FEC88
+:102850008D01548400FFD5E951CE00018CA255CEE4
+:1028600000FFDAB7D5E2800A4E83FFEEFA0F4FC2BF
+:10287000FFEBD5DDFA0FDD9E3A6FAABCEFD4440220
+:10288000001080C2F2818143F484F5823A20140062
+:10289000220F8024F085000F804CF083B0063A2090
+:1028A00014204EA2002381212E87E346A672A63370
+:1028B00080694230A073380180008026962E8C27D4
+:1028C00084C0C80E4800002000207FFF8069A60059
+:1028D00042312073380180008C24962EC0148CC1A4
+:1028E00097B080014C657FF2F004EC2C3A6FAA841B
+:1028F000DD9EA6BAA67B8069423120733801840828
+:102900008CC197B0E2CAE8F1F00141C308084070F9
+:10291000700080078029B086F303F40249FFFF4668
+:102920005A081FE9F004E60BE8ECF001F305F204A5
+:102930003800701158110020E0608C41E8E2A6FADE
+:10294000A63B80894241A0739690F2843812000819
+:10295000D5D892003A6FAABC51FFFB64F08D840079
+:10296000F18BF29C100F809D8420442001B8500F01
+:1029700082E0F39D49005000842044200066440218
+:1029800029CC49004FF98420844B4402113049007E
+:102990004FF38400843F3C0FFD153E07F4423E1781
+:1029A000F4413C0BFA233C0BFB4144122D08F00D83
+:1029B00044222A88F30BF41D49FFFC61F0923C0786
+:1029C000FB375EF0012CE9059001F094480000050A
+:1029D00044000096F094F0124E02019B8400F08CAB
+:1029E000F0998408F08E8400F08FF08BF00CF20CDC
+:1029F000944144022D08F30C382009008801F2911B
+:102A0000F0A4FA42F00BFE9CF2A2F090F024F11137
+:102A1000A601E2204EF20171F11144022A888801D8
+:102A2000F1223800040096364E02015F500F809D5F
+:102A3000F081F00E84C0F0828401F083500F809EFC
+:102A4000F084507F81F0B028F089221F8018B6FFF3
+:102A5000F685F686F687F688F01144200040F30FDD
+:102A600044422A88045F800D49001C612E17F442FD
+:102A70008C213E17F442F11CE0014EF30136F00DBB
+:102A800050138000002F809D49FFFE4E020F804FA3
+:102A90005CF000294EF2000A000F809D9E42E62D58
+:102AA0004EF3002F48000373001F809D800696B0F0
+:102AB000E241E80B38F39A11F214E04FE8038C017D
+:102AC00096018CC148FFFFF53C13FB41E220E8E58D
+:102AD0005CF0003D3C0BFB418020E9034410003CCE
+:102AE00096498400502F8178503F81F0E201E8D56B
+:102AF00038418201384101098C019600D5F8E6067B
+:102B00008020E9034410000555E080FF500F7FFF4F
+:102B1000842080618041F093F013E0404EF203374F
+:102B20009C119600F08E9492500F81F08840F60E22
+:102B3000E2DEE84D500F81F095328880A7D3A623BE
+:102B4000009100029A389602A76281004E040004A8
+:102B5000528000005A88013940549401976A8105D7
+:102B60004E540004528280005A88012FA520028111
+:102B7000000040F2001140A40011E14F40443C1A13
+:102B80009723C41B9A38FA2242048473F10D4054EF
+:102B900094013830811144000064FEC4FA0242728C
+:102BA000807338109D1144000064FE4440319076DB
+:102BB0004010903696DB964BE06180034000BC1BD2
+:102BC0005EF0003CE9068CC197B0D5B3F20ED5A5F6
+:102BD000000F81F2E6024EF302DA8404F08EF60B67
+:102BE00044700000509F81F0000F809DE2E0E807F4
+:102BF00038F49E11F01DE00F4EF3010BF01C80869F
+:102C0000B61FF00E003F809DF08144122A88502F9D
+:102C100081F0445229CCF00D49FFFE30F08B000FBB
+:102C2000809DB1EFF0A14402002084C03A2014003E
+:102C30003A2394208421844BB02CF6A9F6AAF6AB53
+:102C400049004E9A8026FA5CB03D49004E95802698
+:102C50004420002C500F812049004E8E509F80CC84
+:102C60008026FA5C500F814C49004E8680098026F0
+:102C70004420002849004E8050AF81F02E07E346E3
+:102C8000F695F093149F80252E07E347F7A0F0A355
+:102C9000F515F1214C50C0F204AF8036009F80EA58
+:102CA000007F80E9003F80CF004F80CE006F80CD55
+:102CB000005F80CCF010508F814CF10BE2014EF39D
+:102CC00001F5F010106F80CDE201105F80CC104F45
+:102CD00080CE103F80CF14AF8036109F80EA107FE7
+:102CE00080E94EF30227F0118C019600F091F00B71
+:102CF000F09048FFFE8DF0195A00010DF00C8C0188
+:102D0000140F800C5A00200448FFFE72D503F01205
+:102D1000F08B84003C0BFB41F00BE603E920F11241
+:102D2000500F8178490009563C0FFD15040F8012A1
+:102D3000490009023C1DFD15844BFE0F3C0FFD159B
+:102D4000441000FF44022A3484E049004E1580C735
+:102D5000500F82E0FB3845E21150D51D8400501F12
+:102D600082E080A0F20BD20D0020801EE202E80378
+:102D70000000801D8CA197685010802848FFFFF448
+:102D80003C0BFB4148FFFFCD0010001EC90A8CE13F
+:102D900050000028F20B9678E222E9F74800003252
+:102DA0004412113038F09C00E9F342A32424401F60
+:102DB00028008C2C81018020895E3A2094043A24DA
+:102DC00014243A2094043A2414243A208C003A24FF
+:102DD0000C209C7150250020807E4230A473AFD51A
+:102DE000848144222A34AF1C10F50020847FE4CB78
+:102DF00038611C081035002B84CBE8CA9788D5C8E9
+:102E00003E67F49051FF849C3A6FAA84DD9E947AC9
+:102E10008829FA42A60BA64A806042308873804314
+:102E200044322A88382188104E240020502F809D5B
+:102E3000F281F20E58330020F282504F809E84407F
+:102E40008CC1F283F484F285F286F287F288F289EB
+:102E5000B73F4420008096D844422A88F50D97B0A9
+:102E600049001A65E6CBE8058CE197F848FFFEBEFD
+:102E70008401F09948FFFEC400750003F11300259A
+:102E80000002800742010473F09AF11A44022A8872
+:102E900038100400540080204E0201015A183F04EB
+:102EA000480000BC9667E62B4EF200F9940A509F4A
+:102EB00080F440348000505F8120504F814CF39665
+:102EC00098E88804F397F098503F82E0FA1842306F
+:102ED00080738003503F80B0383184005A30010441
+:102EE000480000878460149F801E80C38125F49F62
+:102EF000F420048F802038520D00951988A7976818
+:102F0000888841E28010204200014FE5004C048F88
+:102F1000801340FF2007E84688829720F49B208F8B
+:102F2000806C4E850040F423E104E83CF4138CC12E
+:102F300043E41073F40D0480000497B038F2791163
+:102F400044422A88890F14800004388278005A8805
+:102F50001F2A4EF7000704800003890F1480000326
+:102F600050F7FFFB4EF7001FF41E38820602890F50
+:102F70003882060A44422A6438821501385486028F
+:102F80004257A0733854860AF51B44422CC8385265
+:102F90001501F41F3842060242479473F51F384268
+:102FA000860A8C61F50E9718E285E9A322350000A8
+:102FB000A104FF9C9B74443003E8FEEC406198D66A
+:102FC000AE82AE831020001CF31AF20D12600012C4
+:102FD000AFC0AFC11070001B38210D11B0EC88825A
+:102FE000A90484801220000B38418408D525A6430B
+:102FF000E222E803AE83D505A642E241E802AE82B2
+:1030000000150003A681E241E803AE41D50DA6807C
+:10301000E222E80AAE40D508B06BF198B06AF197A9
+:10302000B069F025F196F213001500024270887322
+:10303000F20D38211D11A0438822A843F114E0228B
+:10304000E8060010001D8C211010001D8E454E2733
+:103050000026F116F316B4218822B62300150003CA
+:1030600044322A6438318501F117B42142110C73BE
+:10307000F317B6230015000244322CC838318501FD
+:10308000F118B42142110C73F218B6220010001E80
+:103090005A10FF058C211010001EF6158D448CC1AE
+:1030A0009630F09548FFFDF6B07D38F082024EF77D
+:1030B0000019502F8120FA3851EF82E038210202A6
+:1030C00043E004734017840A884140213C56142F82
+:1030D00000013824020288224010BC36141F00026E
+:1030E000FA58501F82E042100873A08B01E0800361
+:1030F00089420020801EE27E8849549100FF002012
+:10310000801D88E297F8E906A68A83C3E24440411D
+:103110003C1BA689E2C2E906A6488046E22540504B
+:10312000BC1B8C019600807E5061000048FFFDC7EB
+:10313000000F809D3C13FA23E220E8073C0BFA23A2
+:10314000000F803C3E07F441FA38F210500F82E045
+:1031500042010473002F803C10200022F010F20B7B
+:103160008C019740F590DAF2F00FE60B4EF2FDD3AA
+:103170008C019600140F800F5A080B0448FFFDCBFA
+:10318000E64B4EF3FDB248FFFDC68408F08E48FFC3
+:10319000FD2892003BFFFCBCEFFCFA405A08040AF1
+:1031A00044121030440227F849004BC04800000880
+:1031B000440227F84412102049004BB8EC043BFFAE
+:1031C000FC84DD9E3A6FA8BC3C7DFD14EFF854737F
+:1031D0008400F081C7063C7DFD1497DEC70284E2BF
+:1031E000440400543C94059CB4203CA4059D96489E
+:1031F0003C64059E5A10FF46B42096485A10D11CD4
+:10320000B42096485A10D220B42096485A10D3249D
+:10321000B42096485A10D428B42096485A10D52C79
+:10322000B40096005A08D62E4460003CFB53FB279E
+:1032300048000028446001C244A000FA449000966F
+:10324000480000204460012C44A000B24490006477
+:1032500048000018446000C844A000754490004E27
+:10326000480000104460009644A0005A4490003783
+:10327000480000084460006444A0004644900028D0
+:1032800049003FD73C37FB375A0801178444402197
+:1032900088565EF101C2E803442001C2FA1DFEC453
+:1032A00044600064403198765EF182589693E82F2E
+:1032B00044300258D52C84045A78021A4021805692
+:1032C0005EF100FAE803442000FAFA18FEC44460F4
+:1032D0000064403198765EF1812C9693E803443087
+:1032E000012C96DB449000644800001340018016D6
+:1032F000E140804A40203C1B4400004644F000640A
+:10330000FEC44031BC76E0C340333C1A96DBF0018A
+:10331000EC0880293A6FA88448FFFB1EFC40EE9819
+:1033200044622D50878080E6813C448213148402DD
+:10333000100380B00203805454AE00FFC038000375
+:1033400080AF5A08022AB0418440800749FFF7063F
+:10335000F00140149408B082882222200004223315
+:103360008046A88922200005A88A50208008A8D17C
+:1033700080412233804718A10010A8CC0433802953
+:10338000B400A8D104238028A80F50048001A88E7F
+:10339000549000FFD50C5A0004D85A080309800A3B
+:1033A0004900196C38147000E220E8CE51CE0001BB
+:1033B000507380C45BC80BBD2E07F490C041804998
+:1033C00044021150B04284E049000D3481270203C9
+:1033D0000054C028000300AF5A080125B0418440C2
+:1033E000800649FFF6BBF101943DB082880222209D
+:1033F000800422330046A881222080058CE1A88227
+:1034000050200008A8D180402233004718910010B6
+:10341000A8C48386BB29B421A8D1BA28A847A88606
+:1034200097F850048001549000FF506300C45A98EC
+:103430000BD044021150B042804749000CFBED68AC
+:10344000FCC0FC46E62C81014EF200A2812080E205
+:103450005A28016AFAB84220142444421150982292
+:1034600051C00020A0C61010002BF3850030002AA8
+:1034700050100010103F802850A000182230000883
+:10348000446000C40200001122108002426418242B
+:10349000123F800E123F800C120F801544322D48CF
+:1034A00050030008121F800F121F800D8803B045C3
+:1034B000F583F282F481B67F49FFF621B47F000ED6
+:1034C0000007501180C0882654F0000F41E7B00873
+:1034D00002F08002920454F78FFF40F7F80412F0D4
+:1034E000800200FE0008960F40F7880840003C0468
+:1034F000AE0E981E500000B802150005F401AC4253
+:10350000001E0004F503AE468044501480014220A2
+:103510009473A656F202AE47884488C3A0131403DE
+:103520000027D5125A280234440000C444622D50AA
+:10353000426080738006B044844049FFF60F8006E5
+:10354000F10449FFF5DC44322D48440000C48023D7
+:103550004214007302008058C80CFA5844021150FB
+:1035600042048873A084A00512208060120080614C
+:10357000440000C442340073025180584410FFFFDD
+:10358000107180B8D1048CA112518058FCC6FC0186
+:1035900049003CCA44122D083C2405BFF08149FF74
+:1035A000F5F3F00144122D084422132E4432132C5B
+:1035B00049FFF6293C13FA333CF7FB373C2405BF9F
+:1035C000841EFE0EE04F3C0BFA33E8055800000164
+:1035D0003C0BFA33FC81FC008420844C44021144EF
+:1035E000490049CA84003C0BFA338401490018059C
+:1035F00084034900181584204420087444022D488F
+:10360000490049BA490018444900306C5A00010584
+:103610004400003CD5034400005F3C0805BF840023
+:103620003E07F480840149FFFDB7440000B33C0825
+:1036300005A4440000B44460178F3C0805A644006C
+:103640002A563C6805A53C0805A749000459840191
+:103650004900046184043E000B5884053E000B5A67
+:10366000440000403E000B59840A3E000B5B84017D
+:103670003E000B5C440000EF3C0806D24400020B05
+:103680003C0806D3440003633C0806D4440004BB52
+:103690003C0806D5440006133C0806D64400076CD7
+:1036A0003C0806D7440008C43C0806D844000A1C5D
+:1036B0003C0806D944000B743C0806DA44000CCDE3
+:1036C0003C0806DB44000E253C0806DC44000F7D68
+:1036D0003C0806DD440010D53C0806DE4400122EEE
+:1036E0003C0806DF440013863C0806E0440014DE74
+:1036F0003C0806E1440016363C0806E2440000ACF3
+:103700003C080804440002033C0808054400035038
+:103710003C080806440004A73C080807440005FECE
+:103720003C080808440007553C080809440008AC58
+:103730003C08080A44000A033C08080B44000B5AE2
+:103740003C08080C44000CB13C08080D44000E086D
+:103750003C6806E33C08080E44000F603C08080F74
+:10376000440010B73C080810440012183C08081127
+:103770004400136F3C080812440014C63C080813A8
+:10378000440016223C080814440017793C08081528
+:10379000440018D03C08081644001A273C080817B3
+:1037A00044001B7E3C08081844001CD63C0808193D
+:1037B00044001E2D3C08081A44001F843C08081BC6
+:1037C000440020DB3C08081C440022323C08081D51
+:1037D000440023893C08081E440024E03C08081FDC
+:1037E000440026373C0808204400278E3C08082166
+:1037F000440028E63C08082244002A383C1DFD14F9
+:103800003C08082384013C0BFA32440FFF7FFE0E74
+:103810003C0FFD143C0DFD14580000043C0FFD143A
+:1038200084003C0BFA31FC8084003E07F480DD9E6E
+:10383000FC002E07E7119616C0038404D50284010C
+:1038400049FFFCAAFC80FC00840149000364FC8061
+:1038500084003E07E7113C0DFD14961EC00484044D
+:103860003E07E7112E07E711C80484013E07E71160
+:10387000DD9EFC0049002EC7C8052E07E7115A0837
+:1038800004048404D502840149FFFC8649FFFFE259
+:103890002E07E7112E57F480D0073E07F48049FF2A
+:1038A000FFC949FFFFD2FC80FC443C13FA3384007B
+:1038B0003E07F490440FFFBFFE0E3C13FA313C0B61
+:1038C000FA33841DFE0E3C0BFA3149002EAE5A002D
+:1038D00001063C0C02BB5A08010A3C03FA315800AD
+:1038E00000033C0BFA3149002EA33C23FA3154016A
+:1038F0000001C0063C13FA3F8C213C1BFA3F3C03FD
+:10390000FA3FE603E908841EFE163C0BFA318400F8
+:103910003C0BFA3F3CF7FB375EF7803CE80B3C037F
+:10392000FB365000003B96015CF00077E80349004D
+:103930002E6D49003AF980C049FFF4F849FFFF9B1A
+:10394000800649FFFC413C0DFD155A08010C490059
+:103950002E5AC80849002E5EC80549FFF1BC480030
+:10396000022449FFFCDD4402115C2E17F49049004B
+:103970000D84440229CCB61F44022A88F0813C10F1
+:10398000059F3C00059D3C2005A13C3005A33C90D3
+:10399000059C3C70059E3C5005A03C4005A24000A3
+:1039A00040084010C008402140084031C008400095
+:1039B0002404FE7FFEAFFEE7F68244422D504452BF
+:1039C0001150490004A344722D4880064412115C32
+:1039D0002E27F4903C34059C49000DC1812784C0FA
+:1039E00002048058C008000480C78026002480B8E4
+:1039F00049FFFD298CC197B0509480C45A680BF2DE
+:103A000084C04492115044822E102E07F490E2C0DC
+:103A1000E818FA188029421300730010802B50A375
+:103A200000015A18FF23802942150073A68C5A28DA
+:103A3000011DF28449001630E60B8020F204E909EA
+:103A4000490008F43C0DFD14961EC0128404D511E3
+:103A5000440000C4806842308073B40358000008FA
+:103A6000B603800649FFFCEF546500FFD5CF840301
+:103A7000490015D63C0C02BBC808852044722D5065
+:103A800080C944A21314D52A84C0000380B85A0800
+:103A9000010E000380B7C80A22F3805E5EF78191B1
+:103AA000E90580068422490015C98CC197B050737E
+:103AB00080C45A680BECD5E2002380B05A2001285C
+:103AC000000380AF5A080204480000AE8D215073F5
+:103AD00080C45A980B04480000C6540480FFF08448
+:103AE000000380AFE605E8ED44F03AF838078202BB
+:103AF00040F03C004A003C00C0FFFFFF40000000D7
+:103B00006A000000AC000000E80000008022F00421
+:103B1000F2854900159CF004490015B08100F004BD
+:103B2000490015798CC1E20897B0F205F004E94626
+:103B3000802249001583D5C5001380B05A10026158
+:103B40005A1801C0F00449001582F0044900159686
+:103B50008100F0044900155F8CC1E20897B0E8B11C
+:103B6000D52CF004842049001572000380B05A0857
+:103B700002148421F0044900156AF0044900157EFE
+:103B80008100F00449001555E208F004E93A842365
+:103B900049001554D5448CC1F004842097B04900E5
+:103BA0001556D58F000380B05A08010B8CC1F00464
+:103BB000842097B04900154BF0048422D5BB5A00ED
+:103BC000020448FFFF7F8421F00449001540F004FF
+:103BD000490015548100F0044900152BE208D50F67
+:103BE000000380B05A0802188421F0044900152F00
+:103BF000F0044900154338152400E220E810F004D1
+:103C00004900155F80078420442000C4490046B461
+:103C100048FFFF58F0048420490015198CC197B063
+:103C200048FFFF50025380554400FFFF4C503F5067
+:103C300022138012220380048CA18A01F0862213B1
+:103C4000801322038005125380558A01F087B00645
+:103C500049000C930213805688011203805648FFD6
+:103C6000FF373C13FA33841DFE0EC60358000002D2
+:103C70003C0BFA332E00108B3E00108C2E00108A65
+:103C80003E00108B2E0010893E00108A2E001088F6
+:103C90003E00108984003E6010883C0E02BB490043
+:103CA0003ABB3C13FA335A080109540080013E071D
+:103CB000F48A3E07F48BD505540080013E07F48A50
+:103CC000964E8402C9302E07F484E604E83C44F0A2
+:103CD0003CDC3807800040F03C00DD0F04164E3617
+:103CE0002E07F48A5A0801303E07F4842E07F48820
+:103CF000D50D2E07F48A5A0001062E07F48B5A08B8
+:103D000001122E07F4885A00FF1F8C013E07F48829
+:103D1000D51A2E07F48A5A0001102E07F48B5A0088
+:103D2000010C84003E07F484D50E84033E07F4841E
+:103D30002E07F489D5052E07F4895A00FF058C015A
+:103D40003E07F4892E07F4845A08010684003E07D2
+:103D5000F489D50684203E17F4885A0803F949FFF0
+:103D6000F16C49FFEFA32E07F4845A000119C00734
+:103D70005A08031B2E07F489E604D51549002CB216
+:103D80005A00010649002C3F5A080105840084218D
+:103D9000D5038400802049002393D5062E07F4889C
+:103DA0005CF000C9E8F4FCC484A0802544222D48BE
+:103DB0004400086C98EA003180B7E662E9038C2180
+:103DC0009648505280C4D8F7C10984013E07F47D5B
+:103DD00084003E07F47C8401DD9E2E07F47D5A08A2
+:103DE00001102E27F47C8C419690E643E8043E2790
+:103DF000F47CDD9E3E17F47C3E17F47DDD9E2E079D
+:103E0000F7C43E17F47D5A080103DD9E8001DD9E54
+:103E10004E050022E402E9204050080A8422CD0524
+:103E20008E22964A8440D507D0FC8C22964A405078
+:103E3000040ED5F64E15000E94919CD14050040E00
+:103E400042F18C24E0AF8E224021BC1A964AD5F371
+:103E50008002DD9E8400DD9EFC0049FFFFDBFC80CC
+:103E60009ACB8A02FEDC42300073440000644001B9
+:103E70008016DD9EFE5C421008738001DD9EB4203A
+:103E800084614E140003847F4E140003FE4A844074
+:103E90004040880EC4048C419690D5FB5221001FEF
+:103EA00096904010880CFE5CB6208002DD9E8460F7
+:103EB0008043E261E80738400D118C61884496D850
+:103EC000D5F94E2600038441402104568480969300
+:103ED0008064E281E809385011118C818AA2423253
+:103EE00094739720D5F7FC0080034E3600038401BD
+:103EF0004000041649FFFFB29603FC808400842032
+:103F00003E07F6803C1FFD9F3E17F4853E07F67B7B
+:103F1000DD9EFC005A080407440228104412105881
+:103F2000D50544022810441210508448490044FE2C
+:103F3000FC800000FC002E17F679E624E84344F0EC
+:103F40003F4C3817840040F0BC00DD0F043A50703D
+:103F50003CF7FB375EF78046E8355CF00097E903F5
+:103F60008401D52EC02F3C0DFD1AFA224000041604
+:103F700044100064FE0CFA304000041696035EF014
+:103F800001F5E8EFD51F3C17FB373CF405BFE02FE8
+:103F9000E81984023E07F6798400D50C3C17FB37FC
+:103FA0003CF405BFE02FE8DD2E07F678E605E805CE
+:103FB0008C013E07F678D5068403D50284003E07BF
+:103FC000F6792E07F679842040008006FC80920066
+:103FD000FC0180C184203E17F67A441000FF3C1B90
+:103FE000FA242E100B5485E34010BC37E226F081F2
+:103FF000E8313C13FB41E62BE8038400D5275CF055
+:104000008029E906FA2E49FFFF543C0BFA243C03B1
+:10401000FB412E100B54E201E9F192015CF00033F8
+:104020008020E90344100032F0015410FFFF49FFE3
+:10403000FF405EF0005FE9073CF7FB3A84215EF742
+:10404000805FE80284223E17F67A3C0BFB3A84013B
+:10405000D50284003C1DFD9FC9102E100B545A0838
+:1040600001083C03FB41E220E8038401D50E8403F0
+:10407000FE0CE006E9FBD50B5A00010A3CF7FB37C2
+:104080005EF78096E80484003C0FFD9F2E17F485B0
+:104090003C0DFD9FE624E84044F040A8381784001A
+:1040A00040F0BC004A003C00042842685A08010E57
+:1040B0002E27F67684203E17F6765A20FF2E3E07EE
+:1040C000F4853E07F67BD52884003E07F676D52496
+:1040D0002E17F67B2E200B58E222E8058C213E1786
+:1040E000F67BD51A8422C00ED517C8112E27F6806C
+:1040F0002E100B5A8C419690E2223E27F680E80C57
+:1041000084233E17F4853E07F680D5068401D50248
+:1041100084003E07F4852E17F67A2E07F6775A1894
+:1041200001048C04D50D5A1802093C13FB415CF0C4
+:104130008038E9038E01D504E6C4E9FD8C013E0711
+:10414000F6772E07F677802096025EF0003DE904B0
+:104150004410003CD505960A4E0400038420968A3C
+:104160005EF100293E17F677E90549FFFEC9840094
+:10417000D5092E07F485C006C2048E213E17F677B6
+:104180008401FC81A708A6C0E26440323C1AAED08C
+:10419000A701A6C9E28340323C1AAED1A70AA6C243
+:1041A000A64BA603E26440323C1AE20140103C1ADE
+:1041B000AED2AE53DD9EFC4850AF801480E181004A
+:1041C00084208122800AFA5C8385F38380C44900BD
+:1041D00043D3A67B2FE7E346A63A8041422078737B
+:1041E000385409018ABC976B4E52008F44222A64CE
+:1041F000808938110501443000FFF18244122CC837
+:1042000045C0FFFF388081018400F081800A402290
+:104210002401F1039690E241E82D08320001814625
+:10422000FA3842A1847300F500205AF801F23820D0
+:104230000E02CAEE0425000104A50002F10240A40A
+:1042400028019A8A42A5282442A1087340250C0916
+:10425000C20840FE08068142E80544A0FFFFD502DF
+:10426000814FF10140AE2957882A38A00E0AF1810A
+:10427000D5CF84409C348082B045549100FF38F003
+:104280008A02E828F1014237942404A0000240F198
+:1042900085F7B460F10242350C2441C53C00423739
+:1042A00084734031F077B660A0C1B04542350C242C
+:1042B0004237A0734031F077A8C138308A02F1014B
+:1042C000FEEC4031847789438C81972014A0000252
+:1042D00080698C41500000285A280BD05A4801159B
+:1042E000FA18426180730003001EF2188C0110035B
+:1042F000001EA63BA67A88024200F873001300193C
+:1043000058108020AE40FCC8FC4051FFFD48B1D29F
+:10431000F4893A038C20020F802844120030F08484
+:10432000B01D83853A2094003A201420441000FFE9
+:10433000844BB01A026F80294900431EB036842096
+:10434000442001E0490043180003800CF083F0048E
+:10435000E2C040603C1B3C03FA33F6879636C00B44
+:10436000F103000F800C5CF08055E8034400005519
+:104370009600F083042F80B62E37E34651EF80601D
+:104380002E07E347F088A61094028802F08B840081
+:10439000F082F00B4C2000AE8480A7550091000401
+:1043A0008004B1DD44AFFFDF38121C0099BC8825C2
+:1043B0009648E22320630001E82588C9048F80081D
+:1043C00097B0E2C8E81F048F80B7882842130C73A7
+:1043D000A788401328025A101F1697A784205480DC
+:1043E00080FF4C804007386F00088C019600D50A8A
+:1043F000388F04004C8300078C2154F080FFE20FBB
+:10440000E8EF8C825A4810D242548C73041F80B853
+:1044100095698825F18A84C04C6000699DF1967881
+:10442000F18580A1D061381F180044422A344472BB
+:104430002A3438F20400384F1400388390005AF0C0
+:10444000FF515A80FF4FF70A813C22A3800044703D
+:10445000006442A51C24FAF842979C735094802073
+:1044600000F4800700948008047F80B842F48C73C5
+:104470003893BD11407524F7F786FB3880FC4274F1
+:1044800024735083802000F4000700840008047F18
+:1044900080B842F40C733883BD11F70640A521574C
+:1044A000E347E804009F8018D503549500FFF70206
+:1044B000E6F4E81704AF80028503B1E74275207384
+:1044C000E22481044080BC1BE28140123C1AAE7998
+:1044D000F102108380008C21964810938002F182B3
+:1044E0008CA19768D5A0F605D5988C4448FFFF535A
+:1044F0003C03FA23E61A8400E916803C8400082075
+:10450000802E2E37F44180A0D20BA7084C41C00466
+:104510008C0196008CA1976850108028D5F68421D4
+:1045200040008006F0854600089584C05000043F96
+:104530008126F08B000E0000E3204EF2010FB01A2E
+:10454000FB5838902408500480019600F08880E0E1
+:104550004204A824F08A881CF086000E0000E2E0E5
+:104560004EF200F8F0060010002B5A10FF27801CB6
+:104570004203A8730030002B44022D485A30FF1428
+:10458000442000C4808042408873004200B75A48EB
+:10459000020B808042418873002200B75A2802042F
+:1045A000480000D4442000C442008873000000B6D4
+:1045B0005A080104480000CA801C4203A873000086
+:1045C000002B5A00FF0E443000C444222D484220E4
+:1045D0000C73002100B65A280104480000B7E6D445
+:1045E0004EF200B4F206807C4233A873A094A0DCA3
+:1045F000FA989AD34E340003FEDA805C80BC4224E1
+:10460000907342539073A095A12D8A444E240003C9
+:10461000FE92FE9442218C73F30BE062E817F305DF
+:104620005A3001044800009250348001809C42417D
+:10463000A8732E57F441A6E64C51C0889CF9809C83
+:104640004241A873A6E64C32C081F50AFA68B13639
+:1046500042430C7388BC8CACB6A480BC4253A87394
+:104660008CAC50320010A961A8A210920010F40680
+:10467000AFD9B0A784A051E20020F402D419208F52
+:104680000005A7104C824011809C4243A8732082F1
+:104690000025A7114C824009A71B00810002E304FA
+:1046A00040443C1AAF1B8CA197688C43D5E7FA486D
+:1046B0005A10FF1F5A00FF1944322D48445000C4BD
+:1046C00080834240947342301473008200B70051DB
+:1046D00080B7E2A8E909E305E90D0242005802317A
+:1046E0008058E283E907B03642030873D50D5A00BB
+:1046F000FF08B0764213087310008012D507B03659
+:1047000042030873843F10100012FA08B076421377
+:10471000007350308010A61A8101F38C5A00FF14E8
+:10472000441000C4F209422004738002B057844050
+:1047300049FFED14F017F30CB4201414000300002B
+:104740000014AE1C8CC197B08CE197F848FFFF07AE
+:10475000049F800848FFFEF0B036F08285204C931D
+:10476000003750148001549080FF81494CA3002EE3
+:10477000FA48B07642150873A0C2A08AE043E82048
+:10478000B1E183C081E73A2F14043A2794243A2FE9
+:104790000C0081013A278C2080E03A2414043A234B
+:1047A00094243A240C003A2F0C20B0A180E23A2342
+:1047B00094043A2094243A278C003A240C20501573
+:1047C000000154A080FFD5D38C18D5CAF0044482D0
+:1047D0002D48FE04F084F007F104FE04F086440046
+:1047E0000064FE0CF08DB076FA0842148073F18CF0
+:1047F000F502F10CD145F002B05A0000001138501A
+:104800008000F0020000001038208000D235F00255
+:10481000000000125A00FF25441000C4F309423082
+:104820000473F0025011809400318094B400A70109
+:10483000E283E916A709A780E286E912A78AA7C33F
+:10484000E2E6E90EA7CBA642E2E1E90AF102A049BD
+:1048500000908001E323E904A6C8E283E86BF00539
+:104860005A000104480001DBF002000000135CF074
+:1048700000474EF200B6F0028C18F082D5BA84C020
+:1048800044722A34040F80B6A600E2C04EF201CB77
+:10489000040F80B694728801B15DA685A604F282E9
+:1048A000F08384402E97E34680622E07E34745EF6E
+:1048B000FFDFF084508F806050AF8068F4023801D1
+:1048C000140088049600992AE20920420001E81E9B
+:1048D00004FF8003888F04FF80049720E28FE8168E
+:1048E00004FF80B7880F42022473A600404078027C
+:1048F0005A401F0D9627380380005A00FF083805DC
+:10490000000038040C088C6196D88C425A2810D8C4
+:10491000505F82D8B405B0988820A0298C22B61F99
+:10492000504E000CA02A84AA8CC149FFFC4697B0C7
+:10493000D5AAA6CBE266E994A6CAE2E3E9910040D3
+:104940000022003080224C41FF8CA103A0CB447098
+:10495000007D8864F402A1A344400064FFF440F3A6
+:1049600091F6E06FE8084470004BFFBC404310969E
+:10497000E083E9130030001E0000801E44F0006454
+:104980009858F0020030001444000096FE1C4000CD
+:104990003C16E0014EF3FF65F30684213C03FA3335
+:1049A000F4029636A122C006F00DE0804EF2FF65BB
+:1049B000D50F44000064FE1CE0805A180109E80885
+:1049C000F002001F805500000013E220E913F002FE
+:1049D000F10300000013E220E90D48FFFF4EFA3812
+:1049E000801C420104730030002B5A30FF04480041
+:1049F00000FBE2A280C24062BC1BE2454022BC1B1D
+:104A0000FA18803C42110073501080200030800B57
+:104A100081425A38FF04480000E3805C422300735F
+:104A2000502100200051000B80865A50FF34440072
+:104A300000C480E8427180738067007380B7FE2CE9
+:104A400088085A78011C005000B75A58010F0250CC
+:104A5000005802718058E2E584A2E904105000B8C1
+:104A6000D516105180B8D5048402100180B8841F77
+:104A700080CA1000800B8144D50D001000B75A1079
+:104A8000010448FFFEFA8422101000B8841F1001B0
+:104A9000000BFA389C31805C422004738002844011
+:104AA000AE8442030424404E000050920020F08760
+:104AB00000048007F08E00048008F08F4205042473
+:104AC000F088881C50700020A67F50200008F190CC
+:104AD0000013800804F00006F19150120010A0D2DB
+:104AE00005E08002F28BA0A442378C24423F087379
+:104AF000F20BF18A401F3C0040318476A8D2F20AC2
+:104B000050500010A0D1A0A942278824422F0C7336
+:104B100040210456A8A90033800A0024800AA84630
+:104B200088431023800A00338009002480098843C9
+:104B3000102380090232001102200011975B9713A5
+:104B4000E0A44021BC1A12200011F008401E000011
+:104B5000F0078C2C881C8C0C804149FFFB1500044D
+:104B6000800B5A00FF051003800BD5050003800B56
+:104B70001004800BF20F2E07E346F10EF3114211E1
+:104B80000073F210422180738002042F80B838F144
+:104B9000051138010111E00FE812FA18803C4213A8
+:104BA000007350108020807C42350073A68F500126
+:104BB000802000108008AE8710100008002E000032
+:104BC000B01AB05A9A419648E2224EF2FE560810A8
+:104BD00000014C60FFF810A07FFFD5F4814680C231
+:104BE00048FFFF59440000C480884241807302326C
+:104BF00000594E32FF00807C423284730011802BBA
+:104C00005A18FF0448FFFEF78068423080730201A3
+:104C100080594E02FEF048FFFE30F304842048FF26
+:104C2000FEBF51FF82B8FCC0FC453C03FA318782CD
+:104C30009606C00345C0001446A002255075051015
+:104C4000427E1C244400006446900895407380F620
+:104C500044622D50850050948440020300544E025B
+:104C600000E1B0458440800649FFEA78B0468441BF
+:104C7000800649FFEA73B0478442800649FFEA6E26
+:104C8000B0488443800649FFEA69B04980068444FD
+:104C900049FFEA64F10523E080042200800513E067
+:104CA000800812008009024300548424E685E8034A
+:104CB0009E619649F181441000C442F404244412D8
+:104CC0002E104050BC0044322E10B42540209809CC
+:104CD0009686CA185021FF3840F13C002227806098
+:104CE00022F78061402F08018A0FFE0442010873F9
+:104CF0004620009C50210400E040E8045810804009
+:104D0000B62544100031840042140424804045E25A
+:104D10002D48F183F101E241E831B045B145381049
+:104D20008A02F1829C5138528602F10222F08004FC
+:104D300022128004225280054017840104FF800261
+:104D400022F7800540579401E642E80F04FF8003F4
+:104D500040F7880050F7802440F7880840FF3C0067
+:104D60001217800212578003FF6C42508473E005D3
+:104D70008C414002BC1B9690D5CEE682E91B4610C2
+:104D8000022594815010850FE022E806E122802957
+:104D900040113C1AD50350150510421E042414136B
+:104DA0000029441000C442340473B423922696466A
+:104DB000C90F3C03FA319606C00614730029147318
+:104DC0000028D52F440057E414030029D528501596
+:104DD00005104630022588415031850FE062E80514
+:104DE000E12280224014BC1B44F00064421E0424D3
+:104DF0004010BC36141300294610022594025010AE
+:104E0000850FE020E805E1204004BC1BD5035005D8
+:104E10000510940144F0006440003C16140300287F
+:104E20008D01506300C45A800B0448FFFF18FCC575
+:104E3000FC4051FFFDF08100A600F1834E020169A4
+:104E40004E220167E60C8020E902842B9608E64C8E
+:104E5000F0828002E902840B9600B61F46305000B3
+:104E60008400B08B842088403831060A8C215A187F
+:104E70000BFD5000002C5A09E4F63C03FA3196066B
+:104E800056000001F086490023C5C0043C03FA31F6
+:104E90009606F084B00BF081F003F1035060001827
+:104EA000B41F84E08E0196009405500000388801FC
+:104EB000F08550A4001087808400F08A0005001B54
+:104EC0005A00FF04480000C250037FECB4A0A08247
+:104ED000A101A0C30415000188458864B40A49FFF4
+:104EE000F7C104150002A0B1E02280624030BC1A74
+:104EF000E0414020BC1AF10494DD409189365A18F3
+:104F00000133001400005A18012F00237FE84410D9
+:104F100000C4FE5444222D488841002100B75A287D
+:104F200002232E2010885A28011F44222E0888228E
+:104F300000357FFCA08940113808903A96484021FE
+:104F40002008E223905AE90F00357FFDE261E90B6A
+:104F500000157FFE9690E241E90600157FFFE222F0
+:104F60004EF200CF808046005000E004E8028080CE
+:104F7000F006C00A5EF48020E9075EF48041E9058E
+:104F800044900040D502FB3004037FFFE004E85862
+:104F9000B426E001E85AB46A50737FECB447045574
+:104FA00000019A9AA07BA0F9A03A9AEB425084247F
+:104FB0004250007342718C24F488F5874271087363
+:104FC00049FFF75AF507F4084E040003FE024410A7
+:104FD0007FFFE020E808E0A79001E80390E2D5FA1F
+:104FE00090A2D5F8C722C520FE04F08AB00AF58940
+:104FF000F48849FFF746F087F00A40701CF6B00AC3
+:10500000F78A49FFF73EF107F509880197C0F00AD2
+:10501000F408405014B6E6FFE9058EE190A197F838
+:10502000D5FBF58AD50280E5840140701C0C90E721
+:10503000F00A95FEE0E0E809B406E004E906424221
+:1050400024244072140AD50346705000F001F10286
+:1050500050A500283870720A51CE0001540E00FF8E
+:10506000E2014EF3FF2BF001506300205000002CB2
+:10507000F081F0054C607F1FB41FF102F202E201E3
+:10508000B43FB18B40113C1B800649FFEB314470AB
+:1050900000C4442229A08420840B46305000FA9892
+:1050A00044522D488541879F0C91000181E942F0CF
+:1050B000807338F33E024CF1C00515C17FFFD5184F
+:1050C0004E95001705EF800340F0940838FF3C0030
+:1050D00083C843E49073812542979C7310FF002B93
+:1050E00081E910A480B804917FFF109780C78C21BC
+:1050F00004FF8000549080FFE32FE9D7D5094010CA
+:105100002436B446944DE0224EF2FF2ED5A051FF36
+:105110008210FCC0FC4084814042040CE402402028
+:10512000040C95A19DE550927FFBE92384609001DA
+:105130008C615A0801FE40210C0E4001840C850050
+:10514000E049E903E0E2E8168068E046E806FE94FC
+:105150004021040E8C61D5FA8103814484A0D304DC
+:1051600091418CA1D5FDE4AA880A9041E9EAD502D3
+:105170008400FCC0FC4BF08444020040F181B04C40
+:1051800081423A2014043A209424A400AC084EA38F
+:10519000000A3C0405A53C1405A49A412E07E346E9
+:1051A000D5083C0405A73C1405A69A412E07E34701
+:1051B0008E01960240008016960344621150F2015F
+:1051C000B61F8026FA1842110073F1822E07E347BA
+:1051D0008E01F086F0024C60014F0003002C4E025D
+:1051E000014705C300064FC701434EA3000A005301
+:1051F00000274E52013D2E07E3468E01D50600538F
+:1052000000284E520135F0064C5001320093002721
+:1052100000730028850284208446B00849003BAC16
+:10522000B0D1FA4280038420F38549003BA5844035
+:105230002E57E34680822E07E347F083B00C3830C8
+:10524000080088024011A400964A200000014E1573
+:105250000025960041E01C0041EF00104FE5001EC4
+:10526000E025E81B04FF800340FF3C07E81604FF2D
+:105270008004421F1473381785114E15000488816D
+:10528000D50284208C018C6196D8960085E342017A
+:10529000BC73F305381181098C425A2812D1B091A0
+:1052A0008420840038510101B0C84EA30009383170
+:1052B00085018865B14838328509D50738318101C3
+:1052C0008865B148383281098C015A0803ED8C2178
+:1052D0008C465A1803E8F0015A080121220F801168
+:1052E00022FF8010E00FE8084EA300055004FFFFE6
+:1052F000D50B8EE1D50D22FF8012E00FE80A4EA3F8
+:10530000000750048001549000FFD5038CE197F80A
+:105310005A800105850148FFFF8044000064441065
+:105320000055FE24421E0424E0014EF300A1E09C3F
+:10533000E80841C07396502E7FAB53CE0064D5036E
+:1053400087808441221F8010220F8011E001E80332
+:10535000121F8011220F8012223F8011E060E803AB
+:10536000120F80118801223F801144100064FE0C4E
+:1053700044100082FE5CE020E91B4410005AFE5CF1
+:10538000E001E918849E9459FEE440100436400080
+:105390000C165010FFD3500000414240702442F1DF
+:1053A0000424E08F41C0BC1B40203C1BD5038781F7
+:1053B00084408460B10AB00838000D114E06000622
+:1053C000B048840138008D09B008842838000D11D8
+:1053D000F487F285F38349FFFE9FF303F407F20598
+:1053E00038020D098C615A3803E8A4212212000208
+:1053F0002232000094018A018A039603C0088A239E
+:10540000B47F9401FE5C400080169603403170002A
+:105410004EA3001944122A643810A5118801A07403
+:10542000421E04244210087341C08F964FC50008E5
+:105430003C33F1A0E07C403E3C1AD502806AA8F4DF
+:10544000D51644122CC838109D118801A075421E33
+:1054500004244210087341C08F9684004FC5000792
+:105460003C03F1A1E01C400E3C1AA8355063002813
+:1054700048FFFEB2FCCBFC4180E0844880C1801F25
+:10548000842049003A7984603C9DFCF02E4FF68ED2
+:105490005003800C80A38043D618001000145A18C3
+:1054A0000110E642B4E0E803387F8A0A00100012D7
+:1054B0008C418861E127969096D9E80284808CA17E
+:1054C000976850000028D5E95A280214E679E811B7
+:1054D000F101B41F80A1E00140503C1AE0204000DF
+:1054E000BC1B9401E0A0E8058C813E47F68ED511E7
+:1054F0008E81E6793E47F68EE90C3C03FB46E619C1
+:10550000E90884013C0FFDA284003E07F68ED50712
+:105510002E07F684C804CA033C2FFDA22E17F68E70
+:105520003E27F6848001964AE42D3C3BFB46E90386
+:10553000840CD50596424E14000384009642E42361
+:105540003E07F68EE90A3C0DFDA2C8073C03FA337C
+:10555000580000403C0BFA33FCC1FC01446211507E
+:105560008440A670F08149FFFE07F001A6708441D7
+:1055700049FFFE02FC81FC00B44080A24E240003DF
+:10558000FF5284C05043000F4012900EC1038CC1E3
+:10559000D5FAA04180614E140003FECA4031900E3E
+:1055A000CBF74021180E4010980EB640A84142009B
+:1055B00084244201087349FFF4514000180CFC8018
+:1055C000FC4180C0812322008008223100088A0328
+:1055D000B61F22008009221100098A01F081801F74
+:1055E00049FFFFCB80E0800649FFFFC79479E020A8
+:1055F000E83C84A080258045FA714C548009401312
+:10560000941AFE5C90258841E002E804FA30844058
+:10561000D5048CA19768D5F25030FFE096D8E269A6
+:10562000E80488418C21D5F9E2A9E90CB426A0311F
+:10563000944D94054010883640000816B626A831CF
+:10564000D5125A500113B426FA51FE7C4010803610
+:10565000FE549025B626A071FFCC40038016FE8430
+:105660009045A8B18401FCC18400FCC1FC2180C02C
+:105670005070086C000300AFC011B0418440800638
+:1056800049FFE56CF0012220000422100005AC86E1
+:10569000AC471220000812100009506300C44C638C
+:1056A000FFEBFCA1FC46FA4480C000A0800C008007
+:1056B000800DB0028420B1C74900395E8007842084
+:1056C000FA444900395951C3086C000300AF5A0825
+:1056D000026A85248006B041804949FFE53F4EA219
+:1056E000000D5AA80115F001B082221000063811F1
+:1056F000260A22000007D509F001B082221000041A
+:105700003811260A220000053803A60A4E92000727
+:105710005004FFFF549000FFD5DEF1015A800105CF
+:105720005A800208D53902030055E602E813D53441
+:10573000020300555A08021902030054E602E92C3C
+:105740000403003054000100C005F003AC0EA03982
+:10575000D522F202F00388029001AC0EB447A039C2
+:1057600088029001D518E603E91702030054E60306
+:10577000E913F202F00488024020080AF0039001C5
+:105780008802AC0EB447A03A88024020080AA0392B
+:1057900090018802AC0FA40E12008008A40F120022
+:1057A0008009506300C44C6E7F92FCC6FC40B4E09C
+:1057B000A142A109B4C104900001A00A423390247F
+:1057C000421290244210247542332475FE3C420359
+:1057D0001475CB05C90C5C000001FCC040000C1620
+:1057E00040108C36A811B6228402FCC08003FCC095
+:1057F0008841A1014031040A80A342509073404285
+:105800008896B4A0A9014230947340318876B6607E
+:10581000DD9EFC43B182B5203A231420004F80382E
+:1058200004A000014E42008F4E95000380434EA518
+:10583000000505C30003D50305C300025A4803272A
+:1058400080294E94000452148000E041E904842031
+:10585000B620D50884214E940003843F42910475FC
+:10586000B720802A4EA400045215000040FE040711
+:10587000E9048420A841FCC384214EA40003843F92
+:1058800080CA426E0475A981FCC381005A4002049B
+:1058900080C1D538423E24244211282484C0FF5AB6
+:1058A000FFCA50F3000F80834E34000380854042CE
+:1058B0003C0EC4048CC197B0D5F580014E14000392
+:1058C000800740003C0EC8F74010980E4031980EFB
+:1058D0004200842442018C73F28149FFF2BF407080
+:1058E000180CF201C72F420528244204A473426118
+:1058F000702449FFF2B3FE3440601CD64E640003AE
+:10590000FFB2800849FFFE39E0C0E91C5013006473
+:10591000E020E9068400B60814040001FCC3422418
+:1059200098244265182440910136406300D6B4485B
+:105930008028A009409124019B86912190C1B7281D
+:10594000A989FCC3844AFE54E020E8048E0A96012B
+:10595000DD9E9609DD9EFC57F2874422005481218A
+:10596000B06AF388F4903A2114003A209420F407A6
+:1059700080C0224200003C23F1A0F48CF4074400D4
+:105980000064A5213C13F1A19B149723F48DF40826
+:105990008460F08422420000F08BF48EF408F08AD8
+:1059A000F089A5214400008C9B0C9723F48F404183
+:1059B0000409F49540408409F3A1F3A2F496F0920F
+:1059C00080029203F097800192038103F391F285A4
+:1059D000F186F094540400FFF08304030030962E07
+:1059E000C004440000C8F092000300AF4E02046AF5
+:1059F000B05C8440800649FFE3B1B05D844180061D
+:105A000049FFE3ACB05E8442800649FFE3A7B05F84
+:105A10008443800649FFE3A28006B060844449FFC6
+:105A2000E39D02030055E6024EF200E70203005434
+:105A30005A000204480000E144220064B0253A21E3
+:105A40000C003A200C20F41C3C73F1A022520006FA
+:105A50003CA3F1A1F007F11D220000004C0280CD13
+:105A6000F007220000019A384C5000C7F00822527B
+:105A70000007220000004C0280C0F0082200000154
+:105A8000400500014C5000B922020004403388094F
+:105A90009AB8224200054E240003FE929693E062DB
+:105AA000E81040251001405508094E240003FE92DD
+:105AB0009693E0A2E806E060E804E0A44EF3009DBF
+:105AC00022508004223080059A858A838403FF0453
+:105AD000840240420096F2A3F4A4CA034E42008D11
+:105AE000B023F49BF39AF299F598F19349FFFD45A1
+:105AF0005EF000324EF30081F518F219F31AF41B30
+:105B00009A2A8A64F1134E070008E007E8054E3729
+:105B10000004E06AE97122508006F4232210800715
+:105B2000F224FE64FE9242111473F2A7F4A8F1A9C4
+:105B30004E060007F393B0274412040CD508E00783
+:105B40008400E909F393B02744120400B0A549FF8B
+:105B5000FE2FF313F1254E150009E0E1E906F226C8
+:105B60004E250004E142E8464E360006B0274412B6
+:105B700003F4D506E06AE907B027441203E8B0A5AC
+:105B800049FFFE165A080239F1254E150006E0E1DC
+:105B90004070BC1AD50284E0F0263C7FF9C84E055F
+:105BA0000006E00A40A03C1BD50285403CAFF9C985
+:105BB000840112030055507300C0B40784225800BA
+:105BC0000100B607F00349000539F00384204900BD
+:105BD000053EF01C3C17F3923C27F390121000098D
+:105BE00012200008AC86AC47B4278417FE0E48008C
+:105BF00003565A0002CE027300555A780135040349
+:105C00000030961E4E020335F0105A000104480081
+:105C10000330F11C3C2DF9C73C3DF9C6220080073A
+:105C2000224080068A028A83FE04420210734440A6
+:105C30009C3FE0804EF3031DF41242F21024E00F6B
+:105C4000E80412308008D50B2200800888039001F8
+:105C500012008008220080098840904112208009AB
+:105C600048000322E6E24EF3031C0403002F400029
+:105C70005008921C8C0F40007008901C80204E042D
+:105C800000038420965F4000A0080213005E442FAA
+:105C9000F0FFFE56FE471213005E04AF801CB429CD
+:105CA000B40AE020E8080203005EFE8658210800DE
+:105CB0001223005E0413002F0403003054108F00E1
+:105CC000C905441FFFEFFE0ED50358000010140352
+:105CD00000300403003054100008C110001300AF5E
+:105CE0005A18020D5410002002030059C104001478
+:105CF0008009D57100148008D56E5CF38033E92EDD
+:105D00009626C02CF0105A08012A3C0DFDA48427C9
+:105D1000FE0CB42A9003E020E905000300AF5A0806
+:105D2000031EF21EF01D22F100092230000822009D
+:105D30000009221100088A0F9A59FE044200847358
+:105D400044109C3FE020E90A02148002840AFE0C01
+:105D5000120300598401F091D542000300AF5A08A4
+:105D60000321020300590014800B49FFFDEDE6E614
+:105D700012030059E8342213005C220500048A0152
+:105D8000F0A12213005D220500058A01F0A2B021D6
+:105D900049FFFBF35EF003E8E822440003E8D51D69
+:105DA000F01DF10C22500008D109F10DD10722504D
+:105DB0000009F00ED003F00FD80A0014800A840303
+:105DC000FE449021020300599648D505020300596C
+:105DD0000014800A49FFFDB812030059020300595C
+:105DE000F083F011C854000300AF5A000351F31DB3
+:105DF000F003F10C22218008F08AF00D9A518A02FA
+:105E0000E02040103C1A22318009F00FF40E8A0382
+:105E10009B1CE08040023C1B50417D3097215CF28E
+:105E20000A05F40A964B96039522E804E0834001A4
+:105E3000BC1AE024E80FF5159022E045964BE805E2
+:105E4000F189F103F184D504F184F103F18984E24D
+:105E5000D505F10384E1F184F189E004E80DF11640
+:105E60009002E061E8049603F08BD504F103F08A18
+:105E7000F18B84E2D503F003F08BF00BC00AF00A3B
+:105E8000C008F009C006F004C805D50384E1D502B6
+:105E900084E30403003054100080F01DC90EF21C8E
+:105EA0002230000822000009221100068A23F1A1F5
+:105EB000221100079A08D50C22200008041300269E
+:105EC0008A22F1A122100009040300278A01F0A20E
+:105ED000000300AF5A08020904130030440FFF7F8B
+:105EE000FE0E1403003004030030963E4E03013AC8
+:105EF00044220064B0253A210C003A200C20000313
+:105F000000B004AF801DF1205A080104480000E1F0
+:105F100002030054E6054EF300DC020300565CF079
+:105F200007D04EF300D6F00723E50008225000000A
+:105F30004C5F00CF22000001F2059A104DE000C92D
+:105F4000F00822250009225000004C5100C2220016
+:105F50000001F3069A184C2000BC020F802E224547
+:105F60000004F093F005223500058A044E04000376
+:105F7000FE02F5139603E0A0E810F0068A034E0433
+:105F80000003FE02F5149603E0A0E807F013E00416
+:105F9000E804E0A34EF3009DF021C804F0224E0275
+:105FA0000098220080045A0FFF04480000922250FB
+:105FB00080055A5FFF044800008C22F080092210FF
+:105FC00080084DE0C0044C2780849A609A9D840527
+:105FD000FE4485E4FE144010BC3640203C56F1A33C
+:105FE000F2A4C902C275B023F29AF199F398F4931E
+:105FF00049FFFAC35EF00032E96BF413F119F318AC
+:10600000F21A882488624E17000AF005E020E8069C
+:106010004E370005F006E060E95BF4212205000937
+:10602000F22222550008FE92FE2442011473F2A7C8
+:10603000F4A8F0A94E160007F393B0274412040CFD
+:10604000D509F005E0208400E909F393B027441254
+:106050000400B0A549FFFBACF313F1254E15000B6E
+:10606000F205E041E907F2264E250005F406E0823C
+:10607000E82D4E360006B027441203F4D507F1068A
+:10608000E061E907B027441203E8B0A549FFFB909F
+:106090005A08021FF1254E150007F005E0014010D7
+:1060A0003C1BD5028420F0264E050007F206E002D4
+:1060B00040013C1AD50284002225000822F500097F
+:1060C0008A228A0FF1A1F0A2D54C5A0002E80403FB
+:1060D0000030962EC012F009B0AAF0AAF004B6FF64
+:1060E000F0ABF00BF681F0ACF00AF103F0AD3A2121
+:1060F0001400B02149FFFB8F000300B05A08010CC7
+:106100005A70030AB021001480060024800749FF5A
+:10611000FB71D55C000300AF5A080359040300303B
+:106120004450F000FF4644001000D80EF11DF0214D
+:106130002220800822108009880214030026F02201
+:1061400088011403002744721314B021F11DF21EBC
+:106150003833A00049FFFA36C8393803A000D525E6
+:106160000403003054100080C912F21DF1215800C0
+:106170000080223100082221000988231413002600
+:10618000F122140300308822141300274402131450
+:10619000F11D38302000000300AFF21E5A00031337
+:1061A00044021314380020008C01961F0423003091
+:1061B00040103008440F0FFFFE16FE0F140300308E
+:1061C000D505B02149FFF9FEC0ECF321F11CF01D0B
+:1061D000CB03F222C20B0220000802000009884310
+:1061E00012208008F2228802D5072220000822000F
+:1061F0000009122080081200800904030030961E56
+:10620000C019F021C803F022C00C04130030841719
+:10621000FE0E14030030440FFF9C3C0FF9C6D50856
+:10622000F01C221000083C1FF9C6220000093C0F98
+:10623000F9C7F01CF20C22100008E022E907F20D69
+:10624000E0224020BC1B8022D502F10C1210000875
+:10625000F20E22100009E022E907F20FE0224020AE
+:10626000BC1B8022D502F10E12100009D5190003C3
+:1062700000AF5A080316000300B05A00011244028E
+:10628000131404230030380020008C01961F4010A6
+:106290003008440F0FFFFE16FE0F14030030F010FD
+:1062A0005A08010D02030054E602E908F01CB4206C
+:1062B0003C0DFDA488019001D50284003C0FFDA493
+:1062C0008D01506300C45A800B0448FFFB85FCD746
+:1062D000A7605CF2803CE80F956A88A3AE2BA620ED
+:1062E00094028803AE42A62038218209A6208C01A0
+:1062F000AE20DD9EFC4084C044707FFF80863891D4
+:106300009A1154A300FFE0E98CC14074BC1A549365
+:1063100000FF40453C1AE325E9F3E0E2E806952258
+:106320008864AE1BAE5AAC98FCC0FC5A8122002F88
+:1063300080F8121F8019F289002F80FCF140F2854D
+:10634000002F8104120F8018F28784002E27E34665
+:10635000AC08F281F1052E27E347F386B69FF5835B
+:10636000F2885A180104F13DAE08850187804E82FB
+:10637000014250047FFFB04CB08C386082119442CF
+:106380008822548000FF22708001F001FE3CF082E0
+:10639000F102B41F880138001800405024024C5408
+:1063A000FFE84014A4058146F18A405024024C5471
+:1063B000801150257FFF9610F0848EC1B41FF1022A
+:1063C00097B38806380004004014A405F18AD573F9
+:1063D000F101E141E8EFF10AFE0EF102540000E0A4
+:1063E00040550400F106FE0FB43F38009408F04019
+:1063F000F140A4008C01AC08F0055A080114F00328
+:106400008027F33C38001511F43DF084F204800A33
+:10641000F58B49FFFF5FF004F50BE01C400E3C1BC1
+:106420008380F0075A08010EF0033800151140FE72
+:106430000007E807F142838010A08000F143AFC855
+:106440005005000140A00011B41FF102880A380075
+:106450000400D5AC4E650034F10AFE0EF102540082
+:1064600000E040A30400F106FE0FB43F3800A80886
+:10647000F040F140A4008C01AC08F0055A0801126C
+:10648000F0038027F33C38502911F43D8045800605
+:10649000F58B49FFFF1FF50BE0BC405E3C1B83857D
+:1064A000F0075A0001158EC1B41F97B3F102880698
+:1064B00038000400405024024C54BFCEF0098CC177
+:1064C00097B05A00081184408002D515F0033800B7
+:1064D000291140FE0007E8E8F1428380AF88F143CC
+:1064E000AFC8D5E2F0019E81F00440200807840087
+:1064F00040001806F1088E21E0E1E84097F98AC0D3
+:106500009CF9F00196DB42518024F004802640A0E3
+:106510000800B41F41E01400E141E92C80018480AF
+:10652000B43F882038109400401484024C14801129
+:106530008020C419B10C8E013802220940040808D9
+:106540008804ACC150040001548000FFD50CF10157
+:10655000E001E8EF8C0196038481D5E3E141E9DDB8
+:106560008C21964B380F0400400480024C04FFF845
+:10657000D5D4E462E80748FFFEFCE4E24EF3FEF9FE
+:106580008AC0F0018EE197FB42338024F004880238
+:106590008040B41F9903E0464EF3FEEB8006842052
+:1065A000B4BF88A038528C00405494024C548011DF
+:1065B00080C0C119B04C8E013800A20940040808FF
+:1065C0008801ADC150040001548000FFD50CF501D5
+:1065D000E005E8EF8C0196038421D5E3E046E9DC91
+:1065E0008CC197B338521800405494024C54FFF8B1
+:1065F000D5D3801CFCDA8420442213209D02E6229D
+:10660000806040323C1A383104088C215A180BF94A
+:10661000DD9E4412132038008000DD9E8420442239
+:106620001314380104088C215A180BFDDD9E441206
+:10663000131438008000DD9E443000C444222D48ED
+:1066400042200C73101100B7DD9E44222E104430FE
+:1066500000C442200C73440F0FFFC10BB462401101
+:10666000B0098C21965F4010B008FE1EFE0FD503C6
+:10667000B422FE0EB602DD9E442000C444122E1049
+:1066800042100873B401920C961FDD9E84003C0BEF
+:10669000FB4ADD9E3C23FB4A84204031040E96C613
+:1066A0009608C3078C215A180BFA440000FFDD9EA0
+:1066B00084614011840CFE8F3C2BFB4ADD9E8421BB
+:1066C0004000800C3C13FB4AFE03FE0E3C0BFB4AD1
+:1066D000DD9EFC00490025A4C80584013E07E7585B
+:1066E000FC8084023E07E7584900135EFC80FC00F2
+:1066F000490012D2840149000B6949000B56FC8005
+:10670000FC0684003E07F69C3C03FA33960E960185
+:10671000C00284013E07F696840649002B895A0878
+:1067200001088406842049002B68490017762E074B
+:10673000E7585A0001055A000336D554490016F8A7
+:106740005A0801134402006C490030B48400490027
+:10675000138E84014900257084033E07E7588400A6
+:106760003C0BFB4CD53C490013185A0001ED490085
+:1067700025605A0801382E07F6965A0801063C0390
+:10678000FB4C8C01D50284003C0BFB4C3C03FB4CC6
+:10679000E60AE92884004900254F84003C0BFB4CA5
+:1067A000D5218400490015DD80C05A08011949002F
+:1067B0001738490017248400490023268400490023
+:1067C00013694900126984003C0BFB4D3C0BFB4CE8
+:1067D0003E67E7584900089A8402D50284013E07C3
+:1067E000F69C2E07E7588E03E6023C0DFAA2E80B52
+:1067F000B61FF081F082F083F084F085F086F08798
+:10680000F088D51C44120001B63F44110002F1810A
+:1068100044108004F18244104008F1834410201099
+:10682000F18444101020F18544100840F186441092
+:106830000480F18744100300F188F089F08AF08B1E
+:10684000801F49FFD3332E07F69CFC86DD9EFC009B
+:106850004E040003FE025EF00BB9E8074E1400037D
+:10686000FE4A5EF08BB9E908840549FFFEC6FA0EC0
+:106870003E07F69DFC802E07F69DC0048E013E0764
+:10688000F69D2E07F69DC804840149FFFEB6FC80E4
+:10689000FC003C07FB373C17FB3649FFFFDAFC8066
+:1068A000FC003C63FA339786CE0A4900171B802010
+:1068B00080065A100103802649000E02FC80442401
+:1068C0001014A610441410149606C0FCA608540018
+:1068D00000FEAE08DD9EFC2080C14414101480E050
+:1068E000A608540000FEAE088400490007E44900F1
+:1068F00007AE4000000988E64C63800708030001EA
+:10690000490007B3D5FA8401490007D5FCA0FC0172
+:106910008406100F8004B041840149FFFFDEFC8132
+:10692000FC0044141014A608540000FEAE088400B5
+:10693000490007C14900078B400000098405490050
+:106940000794440000FF4900079044041010A780FA
+:10695000840197B0490007AF8006FC80FC404414D6
+:10696000101480C0A608540000FEAE0844041000B5
+:106970008420AE404404100444100055AE40441F2F
+:10698000FFAAAE4144100066AE42400000094474C4
+:1069900010084400009FB60749FFFF93509300037F
+:1069A000448000FF44A41010B70749FFFF8A000588
+:1069B0000000180300014C64FFF944041000842116
+:1069C000AE40FCC0FC0080C049FFFFA3840049002A
+:1069D00007724900073CFA10490007475CF3004082
+:1069E0008026E9034410003F960840003008490023
+:1069F000074A84014900075F400000094000000980
+:106A00004000000949FFFF8E9606C005840A49FF31
+:106A1000D939D5F9FC80FC4383808400F085B0052A
+:106A20008101814249FFFF9CF005445EFFFFFF4664
+:106A300046000302500005C2D00444900100D50274
+:106A4000FB3084C04474100849FFFF634404100005
+:106A50008420AE404404100444100055AE40441F4E
+:106A6000FFAAAE4144100066AE4240032000402021
+:106A70004009401020098462960096489697F0815C
+:106A8000F182F283B66749FFFF1CF203B64749FF64
+:106A9000FF18F102B62749FFFF14F001B60749FFBE
+:106AA000FF1040000009380E18008CC1B60797B1DE
+:106AB00049FFFF074003200040002437C1034C6515
+:106AC0007FF4440410008421AE40400000094000DF
+:106AD000000949FFFF279606C005840249FFD8D266
+:106AE000D5F94C657FB3FCC34000600846204C11CB
+:106AF000FE0D50210DB7842894C14E0400054001BD
+:106B00008803D50280038E219648C9F7DD9EFC419B
+:106B1000841FF08184C04492100044700FFC5CF329
+:106B20000100E80438049800D503440000FFF10197
+:106B300049FFFFDC8CC1F0814C63FFF3F001FCC125
+:106B40002E07E7595A000114FC002E07E7595A088E
+:106B5000020584033E07E7592E07E7595A08040542
+:106B600084013E07E75949FFE661FC80DD9EFC0099
+:106B70004900199E80C0C80649FFE9184003000675
+:106B8000FC808401FC80FC42441000C444222D4857
+:106B9000FE4499D1507380B0A6FFE6624EF300C167
+:106BA0008C284090880080C0B0418440800949FF13
+:106BB000DAD58009B042844149FFDAD0A439447261
+:106BC0001394E602E80CF201F102840C42730073A4
+:106BD00022310008220080088803D51B45C21378A3
+:106BE000448213605A08021FF201F1022241000898
+:106BF00022008008025080099AE0383E19090231CB
+:106C0000000988048A6538341909846C42730C734E
+:106C10009001AC3A222100092200800988029001EB
+:106C2000D55A8009B043844249FFDA98F102F00353
+:106C300085E3225080082220000838AE1911224036
+:106C400080099AAA2210000942213C243894191183
+:106C50008A4A9A61F00190414210BC2496938A2995
+:106C6000382E1909902123C00008840C964B40321D
+:106C7000BC0C4273007340050808381419094081A0
+:106C80008000841E4235002441EE1401423F3C73D3
+:106C90008ABC8A62956994D989458903884A88485B
+:106CA00040213C0EACBAF20140523C0C420480241C
+:106CB000223100094024880888459B5C4202BC734D
+:106CC0008A838A0195219401892488028829880170
+:106CD00040003C0EAC3B44021394842C8060423351
+:106CE0000473A49A802296935EF11843E90344103A
+:106CF0001842968B4E2400038420AC5A842C420305
+:106D00000473A483802296935EF12B21E90344103F
+:106D10002B20968B4E2400038420AC43FCC24422DB
+:106D200013788420381101094422136038110109B5
+:106D3000FCC2FC423A0F842080E02E07F35180C150
+:106D4000C0029BD72E07F352C0029B9E2E07F3531F
+:106D5000C00B409300139611966180C780858043D5
+:106D600080E980A1806042039024421314244000F3
+:106D7000081740108C37FCC2FC4484003E07F6D054
+:106D80004472140C4462139444922D508780508FA7
+:106D9000801884001003800810030008000480AFEE
+:106DA0008E02E602E861B0448440800949FFD9D6EA
+:106DB000F00422200008ACBA22100009B400F286C8
+:106DC000B607840110038008F1873C03F1A0AC7B77
+:106DD000B61FB45F3C03F1A1F081F3013C03F1A4C1
+:106DE000F082F4023C03F1A5F083F5033A040400B9
+:106DF00049FFFFA13A040420F006AC3AF007AC3B8F
+:106E000002048055E602E805000480AF5A08032D0D
+:106E1000B0458441800949FFD9A1540E00FF49FFC4
+:106E2000FEB4F0048541B45FB420F005F301F40230
+:106E3000B400F5038801842240000416B60622132C
+:106E4000000222030003F186F0873A04040010A335
+:106E5000000849FFFF703A040420F0063EA7F6D070
+:106E6000AC32F007AC33500E000141C000138CEC83
+:106E70008CCC509480C45BC80A8EFCC4FC0080C0DB
+:106E800084004900181BCE0580064412140CD5045A
+:106E90008400441213944900183284008427490066
+:106EA0001890FC80FC2080E1C00B5A0801054900C5
+:106EB000203BD50684C05A0802054900203880C00E
+:106EC0008402490017FB8402CF044412140CD5033A
+:106ED0004412139449001813C60480064900184C44
+:106EE0004900202B4900185A840284274900186958
+:106EF000FCA0FC01F081490017DB80C0C805F0014F
+:106F000049FFFFBED5085A00010C490017D4F10112
+:106F100049FFFFCA8006490017AA490017B1FC8142
+:106F20002E07F6D0DD9EFC00490013DC5A0801064E
+:106F3000840044101388D50484004410753049003F
+:106F4000274E84008421490027588400490013D02B
+:106F5000FC80FC00490024174900244A490026A36C
+:106F6000490027084900258A4900259F490025D264
+:106F700049000DAC4900267B4900206749000B47BA
+:106F800084003E07E75AFC802E07F7C9DD9EFC000F
+:106F90004900101949FFFBB63E07F7C849FFFC58E6
+:106FA00049FFFBA7FC80FC0084003E07F7C64900B0
+:106FB0001399C80A49FFE47A2E07F490C00C8401A3
+:106FC0003E07F7C6FC8049FFFC6D3CF7FB375EF7D8
+:106FD000815EE8F6FC80FC0049000E7049001382D7
+:106FE000C80A49FFFDC680C05A08010649FFFEC60F
+:106FF0003E67F7C7FC802E07F7C85A0801068422AF
+:107000003E17F7CDDD9E5A08020784013E07F7CDF3
+:107010008401DD9E8400DD9EFC0049001363C803EB
+:107020004900136949000DA449000B114900219C36
+:10703000490020F649000E3449001F954900234DB0
+:10704000490020EE49000F264900134CC8034900AF
+:10705000224A49FFFB404900230B49FFE2BE49FF9A
+:10706000FF64490002A54900133D80C05A08010A87
+:1070700044000258802649FFD50D800649FFD514EB
+:1070800084013E07F7CD4900132DC804840149004F
+:107090002537FC80FC004900207749002076C00895
+:1070A00049001F5749001F2F84023E07F7CDFC807F
+:1070B000FC0144040054B4C049002088C0692E0774
+:1070C000F7CEC80C44145028B401920396065A0017
+:1070D0000106B40192019606C8052E07F7C95A00A9
+:1070E00002583C0DFFDA5A00015449FFFD2B2E07D0
+:1070F000E7595A08030549001F40D54792C849007F
+:107100001F2897B049001F10F0818EC149FFE2414E
+:10711000F00149FFFBBFE6D4E90349FFFF3A49000C
+:107120001F2C49FFFF6A5A0801068400490012E03B
+:10713000D52F49FFD7052E17E75A5A00010D5A10CF
+:10714000010D3C0DFD149636C80649FFFF2E49FF80
+:10715000FF44D51B840AC10284053E07F44484061B
+:10716000C10284053C1DFD143E07F443440FFFBFDC
+:10717000FE0E3C0FFD14842384003E07E75A3E17A1
+:10718000F7CD3E07F7CAD50484013E07F7CDFC8151
+:10719000FC012E07F7CA5A00012EC0045A0002371C
+:1071A000D56949001EE084004900212B4900129A4C
+:1071B00080C0C81C49002034C015800649000E6AF2
+:1071C000800649001EBD800649001E084900202B8C
+:1071D000B61F4900202BF081B43F8006F201490020
+:1071E00020A18402842049000F4284014900210922
+:1071F000D53E49001FC949001FC8C03C49001EA90F
+:1072000084004900099D8402D53349001FDFC03244
+:107210002E07F7CEC80C44145028B40192039606EA
+:107220005A000106B40192019606C8052E07F7C957
+:107230005A0002213C0DFFDA5A00011D49001E8947
+:1072400084014900097D5A0801114900124BC80503
+:1072500049001FE649000F8149000FCE8400490014
+:107260001DD384013E07F7CD49001E8784013E07E8
+:10727000F7CAFC81FC404900161B80C0490016A5D6
+:107280005A0801058420490025B88401490025D009
+:1072900080E05A0801088420490025AF8007490092
+:1072A00016982E07F7C75A0801474900168E5A0844
+:1072B000014384E084003E77F7C74900168A3E7791
+:1072C000F7C4CE0749FFFE2E5A08010449FFFE13FA
+:1072D0008405842849002583840584214900258D5F
+:1072E0008405490025A5C0FD842084054900258525
+:1072F000840049FFFE00840184285A680204441077
+:1073000001904900256C84018020490025765A6847
+:10731000021C4900165A80E0C817840149002588DC
+:1073200081205A0801F88027490025678009490013
+:107330001650D50A2E77F7C75A7801074900164527
+:10734000C8033E77F7C42E07F7CDC0195A68010E5F
+:1073500084043E07F7CD840049002053840049008F
+:10736000012849001DF6D50B5A08040A84013E077E
+:10737000F7CD84014900204549001DF52E07F7CDC2
+:10738000E605E81A44F073943807800040F03C00AA
+:107390004A003C000612181E0C0049FFFE3FD50CA7
+:1073A00049001B63D50949FFFE77D50649FFFE82D8
+:1073B000D50349FFFEEFFCC0FC4084C08521490095
+:1073C00024EF490024C52E07F7C9E605E8F944F083
+:1073D00073DC3807810140F03C00DD0F2A010A0010
+:1073E0004000C0003C0184013E97F7CC4900249C3A
+:1073F0003E67F7CD3E67F7CB3E67F7C54900117290
+:107400005A08010C490011715A0802048403D5027C
+:1074100084043E07F7C9D5D48402D5FC4900110C79
+:107420004900111C3E67F7CE4900110F80E05A0851
+:1074300001233E07F7C5840049001FE3490006FB0E
+:1074400084008080FA2FFA5880674900068DFA047C
+:1074500049FFD42184008080FA2FFA4080674900D8
+:1074600006834400003249FFD41684003E67F7CCFF
+:1074700049002346490011022E77F7C55A08010C2E
+:1074800084003C0FFFDA5A7801074900119D3E77CE
+:10749000F7C9D596CF9549FFFEEFD592490010D593
+:1074A000490010EC490010DA80E05A0801223E073A
+:1074B000F7C5840049001FA5490006BD84008080EF
+:1074C000FA2FFA4180674900064F4400009649FFB1
+:1074D000D3E284008080FA2FFA598067490006447D
+:1074E000FA0449FFD3D84900111C3E67F7CC490084
+:1074F00010A35A08010E3E67F940490023012E07E8
+:10750000F7C55A0801063E97F7C948FFFF5A2E07EC
+:10751000F7C54E03FF56D5C0490010A080E05A08B9
+:1075200001223E07F7C5840049001F6B490006830E
+:1075300084008080FA2FFA418067490006154400D4
+:10754000009649FFD3A884008080FA2FFA598067FB
+:107550004900060AFA0449FFD39E490010E23E673B
+:10756000F7CC490010695A080108490022C92E07C2
+:10757000F7C55A0001CA2E07F7C54E03FF22441073
+:1075800000EB4900241149001094840A49FFD38379
+:107590008401441000EB4900240748FFFF129200C9
+:1075A0002E07F7CCDD9E3E07F7CCDD9EDD9E461014
+:1075B0000081C8060400803358000200D50604206C
+:1075C0008033440FFDFFFE1614008033DD9E4424FB
+:1075D0002C148430B462961FFE5EFE0FB602DD9E50
+:1075E00044242C14961FB46240102008440FF0FF6E
+:1075F000FE1EFE0FB602DD9EDD9EFC0044248010C0
+:107600008401B4229646C10BAE103E07F7DB3E075D
+:10761000F7D83C0DFDF48C013C0FFDF444048010C0
+:10762000B400920A9606C00E440480118424AE4031
+:107630004900016544072000B400920896064900FD
+:107640000158440480108421B40092089606C008B2
+:1076500044048011AE403E17F7D93E17F7D84404D2
+:107660008010B42092279646C104441FFF80AE408C
+:10767000B40092059606C00544048010FA30AE406E
+:1076800044048010B42092269646C1044410004061
+:10769000AE40B40092189606C005440480138421BD
+:1076A000AE4044048010B40092159606C005440410
+:1076B0008012FA30AE40FC80FC004424801084210B
+:1076C000B40292049606C014FA00AE103E17F7DA20
+:1076D0003E17F7D83C0DFDF58C013C0FFDF546003B
+:1076E0000081040000F09203960649000102441450
+:1076F0008010B401920B9606C005440480118448A2
+:10770000AE80B40192039606C0054404801084281C
+:10771000AE4044048010B42092229646C1038424D3
+:10772000AE40B40092019606C00E44048090B400AE
+:10773000920196065A080108441480108442AE88CB
+:107740003E07F7CE44148010B40192199606C00586
+:10775000440480138442AE80B40192169606C0069B
+:107760004404801244100040AE40FC80FC0080C005
+:1077700049FFCA144620008197869432046103931E
+:10778000843BFF8EFF871461039349FFCA00FC808E
+:107790004424501C40004008B4229649FE0FB60213
+:1077A000DD9E4424501C441F00FFB46240002008AA
+:1077B000FE5EFE0FB602DD9E3E07F7DCDD9E44074F
+:1077C000210046102000B440FE57B6208020B401AE
+:1077D00092199606C8FDDD9E4427211C961F401075
+:1077E0006008B462460F0FFF50000FFFFE1EFE0F31
+:1077F000B602DD9E442480849606B46240104008A0
+:10780000440EFFFFFE1EFE0FB602DD9E4404800400
+:10781000A60292019606C008440480068422AE4067
+:1078200084013E07F7DD440480048421A602960605
+:10783000C00644048006AE403E17F7DCDD9E4404DB
+:107840008004A60392019606DD9E440410044410B1
+:107850000055AE40441FFFAAAE4144100066AE4240
+:1078600040000009DD9E44141008B6014414800451
+:10787000A60B92019606C0FD440480078422AE4008
+:10788000DD9EFC0080C09210960049FFFFEE400391
+:107890002009960049FFFFE9963049FFFFE6FC808A
+:1078A000442410009606A653541080FEFE0FAE131B
+:1078B000DD9E44141000AE08DD9E440410128420A6
+:1078C000AE40DD9E4414100CB601DD9E442410141D
+:1078D0009606A653541080FEFE0FAE13DD9E441490
+:1078E0001010AE0BDD9E44141010AE08DD9E3E0756
+:1078F000E75BDD9E2E07E75BDD9E84013E07E75CCC
+:10790000DD9E2E07E75CDD9E84003E07E75CDD9E82
+:10791000C80744171018A608540000FED5085A08D6
+:10792000010F44171018A60858000001AE084417AC
+:10793000100CB40158000100B601DD9E5A08020D7A
+:1079400044171018A60858000001AE084407100C90
+:10795000B4208420B620DD9E3C0DFDFCC00BA4802D
+:107960003C13FBF48E21E041E805A4408C219649AC
+:10797000AC40A4803C13FBF6E241E90584013E07DC
+:10798000E75DD50B3C1DFDFEC108A400880144162F
+:107990000034A6009600B60144060000B400920828
+:1079A00096065A08010B44060030B4205810800196
+:1079B000B620B4209646C9FEDD9EFC4049FFCE2885
+:1079C000E603E80F3C0DFDFC8420AC403C1DFDFEB1
+:1079D000C108A400880144160034A6009600B60130
+:1079E00085404474800044948080A7BAB40992C34F
+:1079F00092139606FF86C61A440480028428AE407D
+:107A000049FFCE06E603E84D44060000B4009208A4
+:107A100096065A08014744060030B42058108001E9
+:107A2000B620B4209646C9FED53CA63A40101009AF
+:107A3000B40992149606FE0EC01F49FFCDE9E60375
+:107A400044048002FA20AE40E80449FFFF87D513C2
+:107A50003C0DFDFCC00BA4803C13FBF48E21E041E7
+:107A6000E805A4408C219649AC40A4403C03FBF6B9
+:107A7000E220E8178540A63A40101809B40992168A
+:107A80009606FE0EC0074404800244100040AE403B
+:107A9000D50884018D4149FFD0F55CF52711E9A691
+:107AA000FCC044160034B601DD9E3C0FFDFF020F02
+:107AB00080003C4BFBF63C1FFDFE3C5BFBF53C2F86
+:107AC000FDFD3C3FFDFC3C0BFBF4DD9E3C0BFBF65F
+:107AD000DD9E3E07E75DDD9E2E07E75DDD9E3C0FE8
+:107AE000FDF9DD9E3C0FFDF8DD9EFC204414800076
+:107AF00044048080A68AB40092109606FE16C00543
+:107B0000440480028441AE80A60A40100409440463
+:107B10008080B40092119606FE0EC00544048002D7
+:107B20008422AE4044048000A602401008094404A8
+:107B30008080B40092129606FE0E4E0200B04404FD
+:107B400080028424AE403C0DFDFD3C2DFDFF8420D1
+:107B5000AC40C20644160028B4219648AE50C00B73
+:107B6000A4803C13FBF58E21E041E805A4408C2164
+:107B70009649AC4049FFCD4CE603E90584C0447604
+:107B80000030D51944060000B400920896065A0841
+:107B900001F744060030B42058108001B620B4200C
+:107BA0009646C9FED5EC84018CC149FFD06B5CF3CD
+:107BB0000801E86E4434800044248080A61A4010F6
+:107BC0000C09B40292139606FE0EC01A44048002F9
+:107BD0008428AE4049FFCD1CE603E85A4406000065
+:107BE000B400920896065A08015444060030B420A6
+:107BF00058108001B620B4209646C9FED549A61A71
+:107C000040101009B40292149606FE0EC0314404CE
+:107C10008002FA20AE403C2DFDFF3C0DFDFDC20868
+:107C2000A440882244260038B4429690AE88C00B07
+:107C3000A4803C13FBF58E21E041E805A4408C2193
+:107C40009649AC4049FFCCE4E603E90384C0D51073
+:107C500044060000B400920896065A0801F9B407D9
+:107C600058000001B607B4079606C8FED5F04404D4
+:107C70008000A6024010140944048080B4009215CC
+:107C80009606FE0EC09144048002FA30AE403C0DD0
+:107C9000FDF9C0043C0DFDF9DD2044048000A6027E
+:107CA00040100C0944048080B40092139606FE0E26
+:107CB000C80E44048000A6024010100944048080CD
+:107CC000B40092149606FE0EC03BD51A44048002FE
+:107CD0008428AE4049FFCC9CE603E8EC4406000053
+:107CE000B400920896065A0801E644060030B42013
+:107CF00058108001B620B4209646C9FED5DB440456
+:107D00008002FA20AE4049FFCC83E603E80449FF35
+:107D1000FE25D5163C0DFDFCC00BA4803C13FBF4E6
+:107D20008E21E041E805A4408C219649AC40A44056
+:107D30003C03FBF6E220E90484013E07E75D4414BE
+:107D40008000A60A4020140944048080B4009215E3
+:107D50009606FE16C00544048002FA50AE80A60ABC
+:107D60004010180944048080B40092169606FE0E56
+:107D7000C0064404800244100040AE40FCA04620EF
+:107D800000839606043100149441841DFE1EFE0FEC
+:107D900014010014DD9E46000083040000169210BA
+:107DA000540003FFDD9EFC00466000834401000098
+:107DB000A071FE0FA831840149FFCF64A071440E69
+:107DC000FFFFFE0EA831FC8046200080843E043177
+:107DD00000779606FE5EFE0F14010077DD9E4021BF
+:107DE00040084010A0088822882046000080141017
+:107DF0000078DD9EFC41F5818100812280E380C412
+:107E000046500080C0035A0801188385BA77461F80
+:107E1000EFFF50108FFFFE56B9F7842349FFC2BF12
+:107E200038149901840249FFC91D3803980084223F
+:107E300049FFCA1BFCC181418385B9774600100008
+:107E4000FE0FB8F78423840149FFC2A950257FFFA4
+:107E50008006F101969049FFFFC4FCC146200080D6
+:107E600096060431007540102808440FFBFFFE1EE3
+:107E7000FE0F14010075DD9E462000919606043128
+:107E800000149441841DFE1EFE0F14010014DD9E9B
+:107E9000DD9EDD9EDD9EC80444072014D503440703
+:107EA0002018B40040003008920CDD9EFC00440411
+:107EB000009CA600E603E92444640C408441A632F9
+:107EC000806258000008AE32441404404404084064
+:107ED00049FFC652A6328441540000F7AE32441422
+:107EE000044044040840806249FFC646440720C05D
+:107EF00046102000B440FE57B6208020D53C4900F3
+:107F00000BF1C8DB44645028B406921096065A0060
+:107F1000010544645028D5252E07F7CEC80EB406B7
+:107F200092039606C80AB40692019606C0063C0D56
+:107F3000FFDA5A0801EBD5EE49FFF8285A0802F992
+:107F4000D5E92E07F7CEC812B40692039606C80EDE
+:107F5000B40692019606C00A3C0DFFDA5A0001AE43
+:107F6000B40692109606C0EED5A849FFF80F5A083D
+:107F700002F5D5A3B40192199606C8FD840149FF04
+:107F8000FCB8FC8044040050441F9881AC4084211C
+:107F9000AC41DD9EFC0080C044048090541300017D
+:107FA000B480845D94C9FEA6FE9FB6404600008161
+:107FB000845E8380BB15FE9EFE57B99584003E0704
+:107FC000F7CE440480108422AE4049FFCE57E6032A
+:107FD000E92A44140018A60A5A680113540000FB49
+:107FE000AE0A44145010B401920840002008B601B3
+:107FF00044147000440EFFFFB441FE16D513580020
+:108000000004AE0A44145010B40192084000200845
+:1080100058000098B6014414700044010000B441B7
+:10802000FE17B601FC8046100081440200000420C7
+:10803000806EFE171400806EDD9E44273010B4223F
+:10804000922196465A1001FDFC0044173000B601FB
+:10805000840249FFCCE0FC80FC004661FFF950033C
+:10806000052749FFFFEC5003048749FFFFE8FC8028
+:10807000FC004661FFF95003050049FFFFE0500393
+:10808000040049FFFFDCFC80FC004611FFFF50109C
+:108090008F00FE0F49FFFFD3FC80FC004611FFFF5D
+:1080A000FE0F49FFFFCCFC80FC004601FFFF5000A3
+:1080B00002BB49FFFFC4FC80FC004601FFFF5000EB
+:1080C00003CC49FFFFBCFC80FC004467300449FF3F
+:1080D000FFC549FFCC93B426841EFE0EB6064400AD
+:1080E00003E849FFCC98B40658000001B6064400E6
+:1080F00003E849FFCC9049FFFFD949FFCC7F4601F7
+:10810000FFFF49FFFF9C49FFCC7949FFCDB7E6034C
+:10811000E80B49FFFFD349FFCC714601FFFF49FF40
+:10812000FF8E49FFCC6B44673004440003E849FFED
+:10813000CC72B426841EFE0EB606440003E849FF46
+:10814000CC6AB40658000001B606440003E849FFB3
+:10815000CC624404800A8424AE408422AE40842150
+:10816000AE40FC80FC41F08180E180C281438124EB
+:1081700049FFFF74F0015A00FF0649FFFF8749FFDE
+:10818000CC3D40A52008409524044063400840644D
+:1081900098044003E008FE3749FFFF5149FFFF6A9A
+:1081A000FCC144273010B422922196465A1001FD9A
+:1081B000FC0084203E17F80B441730004460010097
+:1081C000B6012E07F80BC00B2E07F8089600C0105A
+:1081D00084003E07F8084400FFFFFC802E07F808E3
+:1081E000C8F484018EC149FFCC16CEECD5EE3E0713
+:1081F000F80B44073014B40092109600FC80FC2168
+:1082000080E280C1F08149FFFF29F00149FFFF3E74
+:1082100049FFCBF44612F0004003A008FE0F406374
+:108220004008FE3749FFFFBF80C049FFFF2396305B
+:10823000FCA1FC0044173008B401920594055800D5
+:108240000001B60149FFFF0A49FFCD18E603E80720
+:1082500049FFFF344601FFFF49FFFEF18406FA2F74
+:10826000442000AC8461848049FFFF7E8406FA2F9D
+:10827000442000AD8461848049FFFF764404800A75
+:108280008424AE408422AE4044048088441400001C
+:10829000B440FE57B620B44044120000FE57B6204A
+:1082A00049FFFEE8FC80FC20842C8441840549FFC2
+:1082B000FFA897C0842D8441840549FFFFA29780C1
+:1082C00080878405FA2F442000C0846149FFFF4C59
+:1082D00080868405FA2F442000C1846149FFFF4451
+:1082E00080878405FA2F442000C2846149FFFF3C47
+:1082F00080868405FA2F442000C3846149FFFF343F
+:1083000080878405FA2F442000C4846149FFFF2C34
+:1083100080868405FA2F442000C5846149FFFF242C
+:1083200080878405FA2F442000C6846149FFFF1C22
+:108330008405FA2F442000C78461808649FFFF141A
+:10834000FCA04404800A8424AE404417210446382B
+:108350000000B401921440005008B60144072108FF
+:10836000B42092284010A008B620B440461FCFFF8A
+:1083700050108FFFFE8EB640B440FE9FB64044279B
+:108380002110B40294019201B60244272114B402D0
+:10839000921440005008B60244072118B440924895
+:1083A00040212008B640B440FE56B620B420FE5FFF
+:1083B000B6204417211CB401921140004408B601B4
+:1083C000B441460F0FFF50000FFFFE16B6014417D1
+:1083D0002100460FFF0FB44150000FFFFE16B601FB
+:1083E000440480078422AE4044041000442410104A
+:1083F000AE428421AE408420AE53A643541080FE8A
+:10840000AE434404100C8420B620841FAE10DD9EC1
+:108410003C0FFE04DD9E44048000A6039606C00DBA
+:10842000440480038421AE403C0DFE04C006FC00E1
+:108430003C0DFE04DD20FC80DD9E46200081843E54
+:10844000043100149606FE5EFE0F14010014DD9E3A
+:10845000441470085A080109B40192104000400801
+:1084600058007823D505B401921040004008B601A9
+:10847000DD9E4414000CAE09DD9E442510009617C5
+:10848000B46240102008440FF8FFFE1EFE0FB60233
+:10849000DD9E442480849606B46240102008440F78
+:1084A000FEFFFE1EFE0FB602DD9E44251000843E38
+:1084B000B4629606FE5EFE0FB602DD9EFC4281406F
+:1084C000C10584E85A180107D5034470006484C1CB
+:1084D000D50384E184C0490016A681204EA3001173
+:1084E00049FFC83AF08149001522F082F1014400A9
+:1084F0000240F20280668087490002BBFCC25AA893
+:10850000011E49001517F0824E9300054900170718
+:10851000D50349001701F081800949FFFCBEF083B3
+:1085200044100042F002F201F303FD23490002B4BB
+:10853000F0014410004249FFC3FCFCC2FC2080C093
+:108540002E0FF815C8192E1FF814C916CE3949FF79
+:10855000F9D349FFFCA280E04900166549FFC7FC3A
+:10856000802638238511402120083820060A8C21D6
+:108570005A1A40F9D5252E17F444E020E9212EFFA0
+:10858000F8142E17F443E02FE91BCE1A490014CC3F
+:108590003C2405BF8423FE8C50300480D5348C21CC
+:1085A0005A10122E38F00511E04FE8FA84003E0709
+:1085B000F814490014A88400842149FFFF812E1F6C
+:1085C000F8152E07F444E001E9072E0FF8142E27C2
+:1085D000F443E040E80A5A68011184003E07F815A8
+:1085E0003E07F8148006D5115A6801088C218C01C9
+:1085F0003E17F8153E07F8148400D50750000024F4
+:108600004C01BFD98420D5CFFCA04404004884206D
+:10861000AE42DD9E4E0500198E014010040AFE0F89
+:108620004010080AFE0F4010100AFE0F4010200AEA
+:10863000FE0F4010400AFE478C2184009021C103A8
+:108640008C01D5FDDD9E8400DD9EFC4D4402007C46
+:1086500050FF801880C0802F3A2314043A209424BD
+:10866000814683813A251404449200A43A2E1424AE
+:1086700080893A250C0080BF3A2E0C203A220C0447
+:108680003A228C2445E214E4A5E03A27940481FEC2
+:10869000811F3A2794243A209404802F3A2094246E
+:1086A0003A2E0C003A208C20441214D83A240C04A0
+:1086B0003A208C24ADC8B0503A20140480013A20EE
+:1086C000142481003A2314043A241424B1833A2553
+:1086D0000C0080863A240C203A248C044492042C0A
+:1086E0003A220C243A20940480293A2094243A20F7
+:1086F000140480013A2014243A240C003A200C205F
+:10870000440204203A230C043A200C24ADC0FCCDD2
+:10871000FC48838150AF8014441200B080C0800AAE
+:1087200081223A208C043A200C24A448FA40AC4020
+:10873000508F80308420B0084900211E800884209A
+:10874000FA40490021195A9801038780C60444124F
+:108750001588D50344121594580480018C0184E0D7
+:10876000B61F8D218483846138051C00F383F48255
+:1087700038608000B41F8CC1FF8497B1406324D659
+:108780008006F18149FFFF48F4029778405290B784
+:10879000F303382416028C0841E1280840207001B8
+:1087A0004001800C406018D7B0089494380016023D
+:1087B000885E4000280888C0B0088CE13824160A7A
+:1087C0003860160AF1015A780AD1802849FFBF7F24
+:1087D000FCC8808084409AE096D8E261E8080832BC
+:1087E0000001E26240313C1B8043D5F69C119600AB
+:1087F000DD9EFC4051FFFBE04420040081408121CC
+:10880000B0088420490020B8B181441200B080062D
+:108810003A208C043A200C24A448B1C4AC40FA405D
+:1088200084208007490020A8842A4EA3003D4402EA
+:10883000159449FFFFD08020804A84A344A214E409
+:1088400045E214D896104000141740302008B108B3
+:1088500041C20C008460548180FFE301E812388338
+:1088600008003885220238840D0154F403FF388E45
+:108870000E0240842808890F388E0E0A8C61D5ECD0
+:10888000383308008C41383F0C008A69548183FFDB
+:10889000383382024031A80888683833820A5A285F
+:1088A0000AD3D53B4402158849FFFF9580208440B8
+:1088B00084A344A2042C45E204209710404214975C
+:1088C00040322008B00841C00C008460548180FF11
+:1088D000E301E812388308003885220238840D014C
+:1088E00054F403FF388E0E0240842808890F388E16
+:1088F0000E0A8C61D5EC383308008C41383F0C00EF
+:108900008A69548183FF383392024031A80888680D
+:108910003833920A5A280AD3B00849FFBF27800784
+:1089200049FFBF5D51FF8420FCC0FC00490012FCE0
+:1089300050300480505000225020001080202240EF
+:108940008000226280001A6080011A42FFFFDAF87C
+:10895000500000244C01FFF0FC80FC41812080028B
+:1089600080E480C58141F38149FFFA978100F001DD
+:1089700049FFC5F240441C009572844044820508BA
+:1089800044F0001284C098D696D94E920012381442
+:108990000C00838643C0BC73401E080888253870CD
+:1089A00004023812710190E88AE138748D094EA2F0
+:1089B000000638120D1138150D098CC15A6812E5E0
+:1089C0008C5296915A2A40E049FFFFB1FCC1FC004D
+:1089D00080438064848080A449FFFFC1FC80FC2028
+:1089E00080E0800280C149FFC5B784409651E226ED
+:1089F000E80738100A0238138A0A8C41D5F8FCA01F
+:108A0000FC4080C08002812380E149FFFA4681401A
+:108A1000846C5A980207490014038463C002806979
+:108A2000800A40918408842040A180139689E247FF
+:108A3000E81E84A0808540828013E30AE80638801F
+:108A400015118CA18888D5F85CF1004040420C9645
+:108A5000E80954510001956D924188453843090950
+:108A6000D503384305098C218809D5E1FCC0FC00F9
+:108A7000940288014C10000FB4C12A5100014052E9
+:108A8000A0088AA6FFA442619473406310D6AB8904
+:108A9000D5F2FC80FC4084E097B9E2C1E81238913D
+:108AA0009E02B4C04094A0088B26FFAC426224739F
+:108AB000406314D6AB8190C838611D098CE1D5EDB7
+:108AC000FCC02E07F93FDD9EFC01841FB61FF0811C
+:108AD000801F49FFC125840149FFC117840149FF57
+:108AE000C18D84228401806180A04440003F844481
+:108AF00049FFC090840149FFF944840180208040EF
+:108B000049FFC0CD840A49FFC0F54600421050001D
+:108B100008208020844049FFC0E049FFC34384010E
+:108B200049FFC332840049FFF99B44045508441FA0
+:108B3000FF7FB440FE56B620B42058108010B620F7
+:108B4000842149FFBFEE44140054B40192089600FA
+:108B5000E615E809B40192089600C005B401920830
+:108B60008E01D50284043E07F93FFC81FC54440287
+:108B700000C850FF80108020808F3A208C04508FD6
+:108B8000801C3A220C243A200C048008A448B18AA4
+:108B90003A200C24440200D4B63F80263A20140424
+:108BA0003A209424B400B054F083440200E880E1F9
+:108BB0003A2014043A239424F78183C73A201404FA
+:108BC0003A2F14243A200C0050AF803C440201108C
+:108BD00080EA3A2F0C203A2014043A239424B4005B
+:108BE000509F8078F0824402012480E93A201404E6
+:108BF0003A23942483873A2014043A2E14243A20EA
+:108C00000C003A2E0C20440215383A2514043A2060
+:108C100014248040F002B602440215103A24940451
+:108C20003A2014243A23940481203A2014243A2E22
+:108C30000C003A200C20440215943A278C043A2068
+:108C40000C248040020F8000AC10440215883A24A6
+:108C50000C043A200C248040020F8000AC10440227
+:108C600015743A2314043A2014248040F003B60209
+:108C70004402154C3A2094043A2014248020F00138
+:108C80003A20140480013A2014243A2F0C003A2090
+:108C90000C20FCD4FC0049FFBFA4FC80FC00C806EB
+:108CA0004402154C44121574D505440215104412A3
+:108CB000153849FFC090FC80FC004900113E80C07F
+:108CC000490008F6C0682E07F93FAC30490012A8E9
+:108CD0002E17F93FC8044402154CD5034402151061
+:108CE0003800051146100081AC313C03FC274432AA
+:108CF00015A4AC323C03FC71AC332E07F93750009D
+:108D00000064AC342E07F936500000C8AC352E078D
+:108D1000F9355000012CAC363C0DFAA3AC378381F9
+:108D2000B820540007FF12030008B82350130016A0
+:108D3000961F12030009440FFF9C1203000A8400CF
+:108D4000382182028C011A2080015A0814FB3C034E
+:108D5000FB37120300213C03FB36120300224400C0
+:108D60000378120300232E07F939120300242E077B
+:108D7000E758120300252E07F8E1120300264900E8
+:108D8000124F120300278400120300281203002947
+:108D90001203002AFC80FC0049FFBF7B49FFF7FD5E
+:108DA0008400FC8084003E07F8E13E07F8E0DD9E89
+:108DB000FC00804184205A0801038424CA04440230
+:108DC0001594D5034402158849FFC241FC80FC007C
+:108DD00080C05A08010B840249FFC1BD800684206F
+:108DE00049FFC1EA8006D509840049FFC1B4840067
+:108DF000802049FFC1E1840049FFC213FC80FC01CF
+:108E0000B61FF18149FFFFE5B41FF10149FFFFD211
+:108E1000FC81FC2380E0C80484A48423D50384A6B9
+:108E2000842284408EA1806280828402976849FFF8
+:108E3000F7E34422014C80C2803F3A2314043A20D5
+:108E400094243A230C003A208C20801F49FFC064F0
+:108E5000840049FFC3A4840C49FFC3CCE6E2E805C3
+:108E60008401802749FFFFCDFCA3FC008446C80293
+:108E7000844484203E17F93950110013401088367D
+:108E80003E17F93A49FFFFC7840249000FBDFC8035
+:108E9000FC4980E044020001F08644010002F087B2
+:108EA00044008004F08844004008F0894400201009
+:108EB000F08A44001020F08B44000840F08C4400FD
+:108EC0000480F08D44000300F08E3C0DFAA2F08F78
+:108ED000F090F091C7084492153844A2151085020D
+:108EE0008785D50785034492157444A2154C838861
+:108EF000B00649FFBFDB80DFCF1144020164803F31
+:108F00003A2014043A2094243A200C003A208C2071
+:108F1000801F49FFC0018007D5104402017C803FBB
+:108F20003A2014043A2094243A200C003A208C2051
+:108F3000801F49FFBFF18401490010292E37F93FF6
+:108F4000440201F438150D0138248C0049001CB28C
+:108F50002E47F93F8400804A806980A4802049FF21
+:108F6000F74B2E17F93F84003815050149FFC07AE9
+:108F70002E17F93F84033815050149FFC0732E07EA
+:108F8000F93F84203804800049FFC16F2E07F93F64
+:108F900084233804800049FFC1684400024049FF2F
+:108FA000C2FE800849FFC326E6E2E8072E07F93F24
+:108FB00040FE00068401E8028400802749FFFF216B
+:108FC000FCC9FC002E17F46E2E07F46FE623E803AD
+:108FD0008420D506E63DE903FA2BD5028E223E1702
+:108FE000F934E609842940100417E9035200000807
+:108FF0009600C00E5A0008115A0001079E4296487A
+:109000005A00070FD50284209CC296D8D50B8462E3
+:1090100084018420D507806084268407D503846872
+:10902000842584414051000C4041040CFF2F521014
+:10903000801140510C0CFF2F4011040C5200001104
+:10904000FE674001000CFE0F521180114011040C0C
+:10905000FE0F2E17F9343C0FFAA2FA0F4000040C51
+:109060008020844049FFBE39FC80FC49C1074492FE
+:109070001510854244721538D5064492154C854327
+:10908000447215745A080332B18644120194800662
+:109090003A2094043A2014243A2094043A201424C8
+:1090A0003A2094004412014C3A201420801F3A20A8
+:1090B00094043A2014243A208C003A200C202E47A5
+:1090C000F93F84208049806780A4840149FFF69499
+:1090D000800649FFBEEB801F49FFBF1E840049FF89
+:1090E000C25E815F840CD5355A080236B1864412BF
+:1090F00001C481063A2094043A2414243A209404AA
+:109100003A2414243A2094004412016481FF3A2442
+:1091100014203A2094043A2794243A208C003A27C9
+:109120008C2049000F342E47F93F8400802080496D
+:10913000806780A449FFF660800649FFBEB7801FA4
+:1091400049FFBEEA4400024049FFC229811F800A4C
+:1091500049FFC250FCC9FC49441201C4B18680E0F9
+:1091600080063A2094043A2014243A2094043A20A9
+:1091700014243A2094003A201420C7074482151082
+:10918000852244A21538D5064482154C852344A275
+:109190001574840049000EFB2E47F93F840080209F
+:1091A0008048806A80A449FFF627800649FFBE7E7A
+:1091B0004400024049FFC1F3800949FFC21B460039
+:1091C0004210500008208020844049FFBD86801F47
+:1091D000CF0444120164D5034412017C80C03A20BC
+:1091E00094043A2314243A208C003A230C2049FF9B
+:1091F000BE93FCC9DD9EFC4580E0F18180C2F3870F
+:10920000F48849FFF379B61FCF08F001448002408B
+:1092100085418522C811D5075A780208F001C8098E
+:10922000810085448523D508850081488128D5049F
+:1092300085008546812749000FF6C8044900106F54
+:10924000D5034900106980E0B41F49FFF626401499
+:109250000408882042052424948194028069B61F62
+:1092600042032424F0859619F28284A09241F0836F
+:10927000500380C0F284808551C38040F089F003A0
+:10928000E280E82CF00580FC98A09491884185400C
+:10929000400508005093FFC0F0868500F00639E0D5
+:1092A00020112A04800140FF00014EF400058A1EAF
+:1092B0009601D50340078013E2A040503C1BB41F29
+:1092C00089004C93FFEDF002507480408940F00912
+:1092D0004C707FE08C819721D5D39431814142A09D
+:1092E0000C7381018001FA9084E0FEF483CA8780C8
+:1092F000F104F201421E04248823CA058C2138247B
+:109300000501D50338200501802284C08CC104FFEB
+:10931000800340930013E32FE80B389F1901E229E3
+:109320004014BC1BE32296494024BC1BD5F08A2282
+:10933000E0274013BC1B97C9F10241EF04005BC05A
+:1093400001048781D5D6B43F8E8197218901880198
+:109350008941CCCDF008AD40F007ADC0FCC5FC4460
+:1093600081008400120F800F4E82000D44021538D8
+:10937000F08244021510F08384028545F08484C68F
+:10938000D50B440215748543F0824402154CF083DA
+:1093900014AF800484C44697FFFF840080A65094D5
+:1093A0008FFFF0812E07F939F7014273007397F8A8
+:1093B000E6F4E83984028028F201443215A2504FC5
+:1093C000801EF58549FFFF19E702F505E80CE34724
+:1093D000E90A020F800FE60AE8038400D5028E0A2C
+:1093E000120F800F440215A438101E023C03FC71BA
+:1093F000C1089402844642008873842A40000416FF
+:10940000441215A438009E0A440215A438001E0216
+:10941000E009E809021F800F5CF0819040903C1B3E
+:109420004053BC1BF0018C019600F0814C037FBCC3
+:109430004400FFFFE7023C0FFAA3E81EE347E91CE4
+:1094400084008020444215A4382206028C21E0408A
+:10945000964840203C1BE341443215A49611E8F5A0
+:1094600084203801860A8C219688E342E8FBE34594
+:10947000E903812084A02E17F939C1053C03FC9E25
+:10948000E120E8053E57F93E3C9BFC9E3C03FC9ED8
+:109490002E27F93E5CF00050E80784003E27F93F94
+:1094A0003E07F938D5248C212E37F93A9648E22325
+:1094B0003E17F939E91E5CF000783E27F93F840138
+:1094C000E90284023E07F9382E37F93844020204D3
+:1094D000490019F084013E07F936842184064900C9
+:1094E000148C840644100064490014798401D51E4C
+:1094F000440202142E37F938490019DC2E47F93995
+:10950000FF34972088C4E4D5E902FAC49F7184022D
+:10951000F104F203F302976849FFF46EE702840056
+:10952000E805802849FFFC6D8400FCC4FC0149006B
+:109530000E7784C5C80284C349000E72F08184008E
+:10954000F1018040443215A24442150E49FFFE55F8
+:109550003C5DFAA34410FFFF3C03FC71D9043C0FAF
+:10956000FAA3D50588A092A13C5FFAA349000E5842
+:10957000C00549000E555A08010D2E07F93FE2C0FB
+:10958000E9083C03FC27E60AE83684003C0BFC278C
+:109590003C03FC715CF001C38400E9042E07F84D24
+:1095A0008C013E07F84D2E07F84DE602E9068400CF
+:1095B0003E07F84D3E07F9362E07F936C80F3C0D29
+:1095C000FAA35CF00097E8063C03FC275CF00191ED
+:1095D000E9052E07F84C8C01D50284003E07F84CB3
+:1095E0002E07F84CE6028400E90884003E07F84C98
+:1095F0008401D5038E0AD5CBFC8184013E07F9375F
+:10960000DD9E2E07F937DD9E84003E07F937DD9E8B
+:109610002E07F936DD9E84003E07F936DD9E840173
+:109620003E07F935DD9E2E07F935DD9E84003E07A5
+:10963000F935DD9E2E07F9479600C00584003E07E8
+:10964000F9478401DD9E2E07F9469600C005840087
+:109650003E07F9468401DD9E2E17F9459648C1055F
+:1096600084003E07F945D5072E07F9419600C0044E
+:109670003E17F9418401DD9E2E07F9449600C0058E
+:1096800084003E07F944D5102E17F9439648C105CA
+:109690003E07F9438401D5082E07F9429600C0071A
+:1096A0003E17F94284023E07F9498401DD9EFC0021
+:1096B00049FFB9F85A0001FE44162010B401920186
+:1096C00096065A0001FD490012DF80C0C8098401D6
+:1096D00049FFF3D464000020800649FFF3CFFC80EB
+:1096E0002E07F94ADD9E2E07F949DD9E3E07F9480F
+:1096F000DD9E2E07F7CFC0FEFC0049FFBBABFC8010
+:10970000FC01F081840149FFEF79F00149FFF3C2C8
+:10971000F00149FFF3C0F00149FFF3BEFC81FC00FA
+:10972000840049FFF68C840049FFC203840049FF8E
+:10973000F6912E07F949E602E8088401842049FFE2
+:10974000C18F840149FFFFDE8400842149FFC18865
+:109750008401802049FFC1CF840049000B6F840041
+:1097600049000B52460000818380B91A9225944D1E
+:1097700058108010B99ABA1A441FE0FFFE565810CC
+:109780008800B99ABA1A461FFE0F50108FFFFE5676
+:1097900044250000FE57B99ABA1A461E0FFF501012
+:1097A0008FFFFE5646201000FE57B99AB919442182
+:1097B000F4CE92314010C408FE57B99984003E0798
+:1097C000F94AFC80FC20840149000B3884004900E0
+:1097D0000B1B2E67F949CE14800649FFF63B800625
+:1097E00049FFFF908006802649FFC13A49FFC246E3
+:1097F000E6034EF200E449FFF469480000E05A60D5
+:10980000010448000093840049FFFF7C840080200D
+:1098100049FFC1264414700044010000B44144745F
+:109820002C1CFE17B601B427440FFFEFFE0E804636
+:109830008066B6078027800749FFB99E44242C180C
+:10984000460B67FFB42250000FFFFE0E46101000BB
+:10985000FE0FB6028066804644042818441424187B
+:1098600049FFB98A44142C20440FFFB3B4418066E9
+:10987000FE1658000048B6018046440428204414CF
+:10988000242049FFB979B427460FFB3F50000FFF52
+:10989000FE0E46100480FE0F80668046B607441414
+:1098A000241C4404281C49FFB9674414500C841E2E
+:1098B000B44144647008FE16B601840F49FFC1EB41
+:1098C00044047018B42058108002B620B4205810F8
+:1098D0008004B62044007823B6064400006449FFA3
+:1098E000C1DA441470048400B606B6014404501072
+:1098F00044109898B6204404001044109881B62073
+:1099000044162010B401920196065A0001FD490048
+:1099100011BB5A0001FE840149FFF2B0640000202F
+:10992000840049FFF2ABD500460000818380B91A5C
+:109930009225944D58108003B99ABA1A441FE0FF3B
+:10994000FE5658108200B99ABA1A461FFE0F5010E0
+:109950008FFFFE5644210000FE57B99ABA1A461EE0
+:109960000FFF50108FFFFE56B99AB919923140106F
+:10997000C4085810ED60B9998421840049FFC0BB28
+:10998000840149FFC0C28401802049FFC06984016D
+:1099900049FFC09C840149FFC0CC8421440000D20F
+:1099A00049FFC078840149FFC07F49FFC167E603D2
+:1099B000E80349FFF38B49FFC02184008040808089
+:1099C000FA2F846149FFF3D049FFC018840049FF92
+:1099D000EEE1840049FFEEE784013E07F94AFCA06E
+:1099E000FC0049FFF2D1FC80DD9EFC4022FF801488
+:1099F000228F801622AF8018009F8034007F80382D
+:109A0000006F803C4E03009945C720C0460FFF0FF2
+:109A100005EE0000965F50000FFF4010C008400F99
+:109A20000002FE0FB61CC40C440720C440213008BD
+:109A3000B420924C92344010D008FE8FB640C50C32
+:109A4000440720CC4031B008B420926C92344010CE
+:109A5000D008FECFB660442720D4F008B4224000DE
+:109A6000300892344010D008920C443720C8FE0FC2
+:109A7000B602B403541780FF920840002008442720
+:109A800020D0FE0FB603B402541400FF9208400029
+:109A90002008FE0F441720D8B602B40154A500FFD9
+:109AA00092084000200840002804B60154048003B6
+:109AB00040A06008B523460FCFFF50000FFF409431
+:109AC00080024094A804B72397CF4093E008B4E203
+:109AD000978FFFC64073A404B6E2B4E14063600808
+:109AE000FE3EFE37B601F010447720DC40003C0813
+:109AF00040603C09B40740427C0892114000440891
+:109B0000FE37B607B4034052FC0894019201FE27C9
+:109B1000B603B40294019201FE2FB602F009402070
+:109B20007C08B40194019201FE17B6018420440719
+:109B300020E04800009D5A0001044800009A45C7F3
+:109B40002100460FFF0F05EE0000965F50000FFF4B
+:109B50004010C008400F0002FE0FB61CC40C4407A2
+:109B6000210440213008B420924C92344010D00897
+:109B7000FE8FB640C50C4407210C4031B008B4201C
+:109B8000926C92344010D008FECFB6604427211466
+:109B9000F008B4224000300892344010D008920CF3
+:109BA000FE0FB60244272108541780FFB402543533
+:109BB00000FF920840002008FE0F44172110B60253
+:109BC000540400FFB50197CF9308408420084084D7
+:109BD000000444072118B701B540978F934840A56A
+:109BE000200840A50C04B7405434800346AFCFFF93
+:109BF000B52250A50FFF4031E0084094A8024094E0
+:109C00008C04B7224033E008B4E140427C08407342
+:109C1000A802FFDFB6E140336008B4C04477211CDE
+:109C200040632802FF9FF310B6C04031BC0840617A
+:109C3000BC09B4674052FC0892714031C408FEF779
+:109C4000B667B46294D99261FF1FB682B441949111
+:109C50009241FF57B6A1F1094020FC08B420944975
+:109C60009221FE57B620842044072120B620FCC054
+:109C7000FC00840049FFBFAF49FFC000E603E809CC
+:109C800044160000B40158000100B60148000084E9
+:109C90004414800444010000B60144148084B4419B
+:109CA000FE17B60144160030B40158000100B60199
+:109CB0004407210046102000B440FE57B620B440AF
+:109CC0004437210092599686CAFBB423460FFF0FF2
+:109CD00050000FFFFE0E44160000FE0FB60344377F
+:109CE0002104440216194000300840103009B40322
+:109CF00044472110921440005008FE0FB603443729
+:109D0000211444160034B403466800009214400045
+:109D10005008FE0FB6034437210844172118B40336
+:109D200092084000200858000001B603B4049208CD
+:109D300040002008B604B401920840002008B60193
+:109D4000B4A3460FCFFF50000FFFFF46B6A3B4A445
+:109D5000FF46B6A4B4A1FE2E4457211CB601B4059B
+:109D600092114000440858000577B605B403FE3749
+:109D7000B603B40494019201B604B401FF8744070A
+:109D80002120B6C1B640B425460F0FFF50000FFF8B
+:109D9000FE0EB605440000793E07F959440FFF84D2
+:109DA0003E07F95A84193E07F95BFC808420844001
+:109DB0003C1BFCA944421618802296D1E260E806BA
+:109DC000383208008C418823D5F9FC00442216184B
+:109DD000FE4A9648381100088C01960149FFEE783A
+:109DE0002E07F95849FFEE5F49FFBF48E603E90334
+:109DF00049FFECE7FC80FC0184003E07FF61840121
+:109E00003E07EA9084204400010049FFB603440065
+:109E10000100842049FFB60D44000100842049FF61
+:109E2000B61744400578B69F4412161844221614FB
+:109E3000443216124450009044021B9049FFEE3702
+:109E40004400A03849FFEE4D440099E849FFEE4C2C
+:109E5000840049FFB61984003C0BFCAA4400057736
+:109E600049FFFFA649FFFF06FC81FC00C803FA1A60
+:109E7000D5034400051B49FFFF9BFC80FC00440008
+:109E80000100842149FFB5E484003C0FFE533C0DE2
+:109E9000FE535CF01770E8053C0DFE538C01D5F6BF
+:109EA00044000100842049FFB5D3FC802E07FF61E8
+:109EB000DD9E2E07EA90DD9EFC00441000FF80C06E
+:109EC000442005784402161849001556CE06440071
+:109ED000005A3E07F958FC80440FFFA73E07F95887
+:109EE00084053E07F959FA0C3E07F95AFA103E0765
+:109EF000F95B841F3E07F95CFC80FC4084858C2460
+:109F000084A14432161884D0A68C0490FFFF5A28EE
+:109F1000012D227080012220800090E8904497DF7C
+:109F2000FEB6FEBF9690C817382194089CA9A7C812
+:109F3000387188089CAAA7CA387188084024940AF6
+:109F40005EF101009DEBE903442000FF969038216B
+:109F50009C08D50B382190089CA1A7C838718808A7
+:109F60009CA2A7CA387188088C838C2C8CA45A4870
+:109F700023CDFCC0FAB344221618443004A38080D9
+:109F80000A1000019228381114089C69A7208CA29D
+:109F900038410408DBF5DD9E445004A34422161822
+:109FA0004430050780800A100001922838111408F7
+:109FB0009C69A7208CA238410408DBF5DD9EC8030C
+:109FC0003E17F981DD9EFC0049FFED88FC80FC0016
+:109FD00049FFED81FC80FC00490007A92E57FF6076
+:109FE000CD1884323E17F9584422161844300480A4
+:109FF00080802A1000019DA99028964838111808E1
+:10A000008CA2A66038111408DBF444000481D51238
+:10A010005A58011384123E07F95844121618800545
+:10A0200084409CC1382080088C0238208C085A0853
+:10A0300065FA49FFFEBDFC80FC413C23FCAA2E17BB
+:10A04000FED0969196485A1035105A1030115A1079
+:10A05000330F5A1031105A10340E84C05A18320D72
+:10A0600044600035D50944600036D50644600033AD
+:10A07000D503446000349E13E6024EF2012B5A18B9
+:10A08000530F2E07FED12E17FED240002008FE0FE0
+:10A090005A084804480002114800020D5A100104F1
+:10A0A000480002092E07FED15A08010E2E07FED2E3
+:10A0B0005A08010684003C0FFFDA84C62E07FED240
+:10A0C000480001B12E07FED15A0802102E07FED219
+:10A0D0005A080304480003292E07FED24E02031E2D
+:10A0E0002E07FED2480001812E07FED15A08FF56E6
+:10A0F0002E07FED2443400545A00FF105A28030E93
+:10A10000B4032E47FED296804401FF00FE27400094
+:10A110002008FE17B603D51BB4032E17FED35CF040
+:10A1200080D7E8142E17FED35CF080D1E90F4610DB
+:10A130001FFF2E27FED350108F00FE0EFE17461075
+:10A140001FF0FE0F44140054B60184204404005450
+:10A150008440B46096185A00FF0396984001A00905
+:10A1600097005A40FF049600D502840088024620DA
+:10A17000100F50210FFF58000100FE9E40004008C4
+:10A18000FE1744240054B6025A10010448000193FB
+:10A1900049FFFC284800018F2E07FED15A08030C06
+:10A1A0002E07FED24E0201872E07FED25A08016901
+:10A1B000480001812E07FED15A0804122E07FED254
+:10A1C0004E0201792E07FED25A080104480001739D
+:10A1D0002E07FED25A0810554800016D2E07FED1F9
+:10A1E0005A080504480001672E07FED15A08060DDB
+:10A1F0002E07FED296005A0801043C0FFD9C2E0744
+:10A20000FED2480001352E07FED15A08070D2E0751
+:10A21000FED296005A0801043C0FF9C52E07FED263
+:10A22000480001362E07FED15A0808072E07FED235
+:10A230004E020141D5252E07FED15A0809044800D7
+:10A24000013A2E07FED15A080A102E07FED24E02FE
+:10A2500002732E07FED25A080104480002732E072B
+:10A26000FED2480000F62E07FED15A080B04480023
+:10A2700001222E07FED15A080C082E07FED22E0707
+:10A28000FED2480001182E07FED15A000FF82E0703
+:10A29000FED15A0010F42E07FED15A0011044800D6
+:10A2A000010A2E07FED2C8073C0DFD145800000815
+:10A2B0003C0FFD142E07FED25A000104480000FB9B
+:10A2C0003C1DFD148417FE0E3C0FFD14480000F3E6
+:10A2D0005A28012C5A1801044800010A5A1803048C
+:10A2E000480001365A1820044800013D5A18280435
+:10A2F000480001A25A1821044800015C5A1822049F
+:10A30000480001775A182304480001895A180404A8
+:10A31000480001805A18F304480001C75A10FE048F
+:10A32000480000C9480002D45A200204480000C373
+:10A330005A18F60A2E07FED15A00F204480000BB54
+:10A34000480001C65A1861132E17FED19648C1085D
+:10A350002E17FED196485A100104480002D344003B
+:10A36000010049FFB375480002CD5A1862162E0746
+:10A37000FED19600C00D2E07FED196005A000109AD
+:10A380002E07FED15A000204480002BC800249FF99
+:10A39000EAC1480002B75A18F01A2E07FED14E0241
+:10A3A000019D2E07FED15A080104480001742E07B2
+:10A3B000FED15A080204480001952E07FED15A0822
+:10A3C000FA7A84013E07F950D5755A1802122E0701
+:10A3D000FED15A080304480001A82E07FED14E0200
+:10A3E000019D2E07FED15A080166480001905A18B7
+:10A3F000FA0E2E07FED15A080304480001B32E07B7
+:10A40000FED15A080858480001B15A1801142E0705
+:10A41000FED15A08010684003C0FFFDA84C62E07DD
+:10A42000FED1C84884013C0FFFDA49FFBB904800C9
+:10A4300001675A180A122E07FED14E02017D2E071F
+:10A44000FED15A0801044800017D2E07FED15A08AA
+:10A450000232480001805A1806102E07FED19600DD
+:10A460005A0801043C0FFD9C2E07FED19600C8221D
+:10A470003C0FFD9CD51F5A1807102E07FED19600E1
+:10A480005A0801043C0FF9C52E07FED19600C812E8
+:10A490003C0FF9C5D50F5A18600E2E07FED15A0889
+:10A4A00002044800022F2E07FED15A08010448007A
+:10A4B00002295A68011B440FFFA73E07F95884057B
+:10A4C0003E07F959FA0C3E07F95AFA22FA103E07EC
+:10A4D000F95B3E07F95C3E17F95D3E07F95E3E17F2
+:10A4E000F95F84084800020A5A6802302E07FF61AB
+:10A4F000441FFF813E17F9583E07F959C80D441013
+:10A50000005A3E17F95A3E07F95BFA1B3E07F95C01
+:10A510008405480001F3440FFFA73E07F95A84055C
+:10A520003E07F95BFA0C3E07F95CFA22FA103E0787
+:10A53000F95D3E17F95E3E07F95F3E17F9603E0789
+:10A54000F961840A480001DA5A68050B8420840105
+:10A550003E07F9583E17F9593E17F95AD5535A682C
+:10A5600022278400FA30847F84473E17F9583E073B
+:10A57000F9593E07F95A3E37F95B3E27F95C3E37F9
+:10A58000F95D3E27F95E846AFA423E27F95F3E177D
+:10A59000F9603E37F9613E07F9623E27F9633E17DD
+:10A5A000F9643E07F965840E480001A85A68231F24
+:10A5B000FA113E07F95844100069442FFF848406BD
+:10A5C0003E27F9593E17F95A3E07F95B84003E07CA
+:10A5D000F95C3E27F95D3E17F95E84213E17F95F6D
+:10A5E0003E07F9608409480001895A682411FA126B
+:10A5F0003E07F95884053E07F95984043E07F95A85
+:10A6000084003E07F95B8404480001785A683A05E3
+:10A610002E000AE8D5555A68250DFA133E07F95859
+:10A6200084013E07F95984003E07F95A8406D5EAA9
+:10A630005A68262FFA183E07F95884628400842647
+:10A64000844C3E37F9593E07F95A3E17F95B3E27CD
+:10A65000F95C3E37F95D3E07F95E84643E17F95FA9
+:10A660003E27F96084413E27F9613E07F9623E3793
+:10A67000F9633E37F9643E27F9653E07F9668403BE
+:10A680003E07F9673E17F968FA01480001375A6832
+:10A69000140A84013E07FF61840149FFE7864800F0
+:10A6A00001315A68271349FFE77D5A080105440024
+:10A6B0000040D50649FFE776C805440000413E0743
+:10A6C000F95884014800011A5A682D0649FFFC8593
+:10A6D000480001185A6803048400D5045A68040726
+:10A6E00084023E07FF614800010D5A680607840195
+:10A6F0003E07F947480001065A68070784013E07EC
+:10A70000F946480000FF5A68080784013E07F945EA
+:10A71000480000F85A68090784013E07F9444800D8
+:10A7200000F15A680A0784013E07F943480000EA2D
+:10A730005A680B0684013E07F941D50F5A680C0987
+:10A7400084013E07F9423E07F940480000DB5A68A1
+:10A750000D0784013E07F9428400D5F65A682904A2
+:10A760008401D5045A682A0784023E07EA9048000B
+:10A7700000C95A6833392E57FED12E47FED32E0713
+:10A78000FED2404220082E37FED52E27FED4FF07EA
+:10A790008426976896D89690840099A144721B905D
+:10A7A000E0C1E9088C213893840096498809960015
+:10A7B000D5F84E0300A75A500204480000A34031C8
+:10A7C000A008FE9F4412100044321B90884196411D
+:10A7D000E2244EF200979C4738118400381100089B
+:10A7E0008C01D5F65A6834282E07FED22E17FED1DA
+:10A7F000400020082E27FED4FE0F2E17FED3402146
+:10A800002008FE8F2E17FED04432100096483E17C7
+:10A81000F958884384204442161896C9E260E80833
+:10A820009CC93811040038120C088023D5F78C011C
+:10A830009601D5635A68352C2E07FED15A085A6204
+:10A840002E07FED25A08A55EFA0049FFE0BD44116A
+:10A850000000442001004402100049FFE0DE49FFEF
+:10A86000E15840106009101F800440104009101F7B
+:10A87000800540102009101F8006100F800744112A
+:10A880000FFCB001844449FFE0C8D53B5A68361E2E
+:10A890002E07FED15A08010F2E07FED296005A004D
+:10A8A00001065A08022F8404D50284023E07E759A4
+:10A8B000D528440000353E07F9582E07E759960081
+:10A8C0003E07F9598402D5195A68281C841E3E0790
+:10A8D000F95884013E07F95984023E07F95A840366
+:10A8E0003E07F95B84043E07F95C84053E07F95D89
+:10A8F00084063E07F95E840749FFFA5A49FFE85F7C
+:10A90000FCC1FC004404100444100055AE40441F38
+:10A91000FFAAAE4144100066AE42840149FFB87BF5
+:10A92000FC8044141008B60144148004A60B920164
+:10A930009606C0FD440480078422AE40DD9EFC40A4
+:10A94000443720C046102000B443444720C4FE577B
+:10A95000B623B4244424101092344010D008FE577B
+:10A96000B624441720C840003008B44184C192483E
+:10A9700040212008B641B481462FCFFF50210FFF60
+:10A98000FF16B681B4A146480000FF67B6A1445740
+:10A9900020D04470A000B425449410009449922122
+:10A9A000B625445720D440103009B4059214400015
+:10A9B0005008FE0FB605440720D8B4209228401056
+:10A9C000A008FE77B620B420FE8EB640B4204427FF
+:10A9D00020DCFF0FB680B422460F0FFF92314010EB
+:10A9E000C408FE7FB622B42250000FFFFE0E4414AE
+:10A9F0008084B602B441440DFFFFFE16B601B423B5
+:10AA0000460FFF0F50000FFFFE0E44110000FE0F17
+:10AA1000B6038400106480021004800049FFFF73B5
+:10AA2000840B49FFFF80800649FFFF7DFA1049FF34
+:10AA3000FF7A840049FFFF7700048003540000FE82
+:10AA400010048003840049FFFF6E4404100C44147A
+:10AA50008007B6E08402AE0844148006AE084404C1
+:10AA60001013AF80FCC0FC0049FFE59C5A08010BA5
+:10AA7000840049FFFF6649FFB893840049FFE595CC
+:10AA8000D500FC80FC004400006449FFAC9C4400FD
+:10AA90001F2C49FFACA344001B2C49FFACAA440067
+:10AAA000019049FFACB1FC80FC4051FFFAE08420EA
+:10AAB000FA50B01049000F60B19844020228802675
+:10AAC0003A2014043A2094243A201400B1E04402BD
+:10AAD00002483A20942080273A2014043A209424F3
+:10AAE0003A2014003A20942044120268B00C3A2014
+:10AAF0009400441202783A201420B0073A208C00C7
+:10AB00003A200C2044020280508F80243A2010000A
+:10AB10003A241020854039C42800400E0013C01389
+:10AB20005A000312B01038007202C80D38037202C6
+:10AB30004090040849FFE6E049FFE9AFB0508809BA
+:10AB40003800F20A8D415AA80CE884C0B0103800D1
+:10AB50001A02F081C8078CC15A6808FA51FF852093
+:10AB6000FCC0B007878038A300004095040840046B
+:10AB70008013F0829401F08340FE2407E8ED4FC378
+:10AB8000001338839A0149FFAB3C44200120802800
+:10AB900042100873B00C964938201901B02892422F
+:10ABA00049FFAB964DC5401438839A0149FFAB2944
+:10ABB000442001205014024042100873B00C964902
+:10ABC00038201901B028924249FFAB824014F001AD
+:10ABD0008E21944C400E00139749401E280694C4C1
+:10ABE0008440F184508F80A0F40440110409C40310
+:10ABF0008823D503882596493844060254F2001F5D
+:10AC00005AF01F1A40F2180954F7801F5AF01F1407
+:10AC100004FF800139E7810150FF5DEB5CF782138F
+:10AC2000E90650FF64275CF78213E80550420041B3
+:10AC30003844060A3844060240F2480954F7801F97
+:10AC40005AF01F2140F2300954F7801F5AF01F1BA1
+:10AC500004FF800205EF800140F03C0040F78013C4
+:10AC600039EF3D0150FF5DEB5CF78213E90650FFC1
+:10AC700064275CF78213E80644F41000888F384498
+:10AC8000060AF1038C428801969096015A2820AE5C
+:10AC9000505E00014C55401638139A01F585F18439
+:10ACA00049FFAAAF44200120F10442100873B00C00
+:10ACB0009649382019018008924249FFAB25F505D5
+:10ACC0004C54C01638139A01F18449FFAA9AF10432
+:10ACD000442001205010824042100873B00C964965
+:10ACE000382019018008924249FFAB0E505E0001E6
+:10ACF00055C280FF48FFFF42FC494412028CB186D6
+:10AD000080063A2094043A2014243A208C003A20F9
+:10AD10000C208420B00CFA4849000E2E8421101F0C
+:10AD20008031101F803D8402441202A4100F803233
+:10AD3000100F803E8001809F3A200C043A220C24A0
+:10AD4000B1C33A208C04A4008027AC203A208C2484
+:10AD5000AC08800649FFB0E0B00C49FFB130801F5D
+:10AD600049FFB0F38007813F49FFB142FCC9FC2C89
+:10AD7000441202E0B18C80063A2094043A20142454
+:10AD80003A2094043A2014243A2094003A201420C3
+:10AD90008420B006FA4849000DEFB1C144120310F7
+:10ADA00080073A2094043A201424B421B620800667
+:10ADB00049FFB07CB00649FFB096800749FFB080DC
+:10ADC000FCACFC0144120324801F3A208C003A2F73
+:10ADD0008C2049FFB07FFC81FC00C80449FFFE5471
+:10ADE000FC804400006449FFAAEE44001F2C49FF88
+:10ADF000AAF544001B2C49FFAAFC4400019049FF1E
+:10AE0000AB03FC80FC00E606E806441203C43800ED
+:10AE10008000D502840049FFAB0DFC80FC00E606F3
+:10AE2000E806441203BC38008000D50284008C017F
+:10AE3000960049FFAAF4FC80FC005A00010EC004F1
+:10AE40005A00021CFC80840049FFB6812E07FF6F68
+:10AE500049FFFFC4D52A49FFB67A4400006449FF80
+:10AE6000AAB244001F6C49FFAAB944001F6C49FFF5
+:10AE7000AAC044000190D517840149FFB668440078
+:10AE800003E849FFAAA04400271049FFAAB24620C0
+:10AE90000081461271008382B8109601FE0FB890AF
+:10AEA0004400271049FFAAB0840049FFFFB9FC8085
+:10AEB000E604E824FC0044F0AEC43807800040F00B
+:10AEC0003C00DD0F04141E22840049FFAD9784016D
+:10AED00049FFAD828401D50F840049FFAD8F840105
+:10AEE000D5078401D502840049FFAD88840049FF5D
+:10AEF000AD73840049FFAD79FC80DD9E2E000AE42D
+:10AF0000DD9EFC0049FFE4F880603E000AE4441244
+:10AF10001EA444022324442002402E47FF6E49FF12
+:10AF2000ED58FC8044022324DD9E44021EA4DD9ED5
+:10AF300044021C94DD9E44021C30DD9EFC00C002D5
+:10AF4000840149FFAA9B840049FFAA8AFC80FC0077
+:10AF50008400802049FFAC9C8400842149FFAC9888
+:10AF6000FC80FC008401842049FFAC928401802095
+:10AF700049FFAC8EFC80FC0049FFE4BE521000018A
+:10AF80009648840149FFAC84FC80FC49802044023F
+:10AF9000032C50AF800C3A201000440203383A2FA3
+:10AFA00090203A2010003A25102044220344B00695
+:10AFB0003A2110003A20102044220350509F802450
+:10AFC0003A2110003A24902044220280B1CC3A2148
+:10AFD00010003A2390204422035CB18F3A211000E4
+:10AFE00080BF3A231020C9038005D5125A180104E6
+:10AFF000800AD50E5A10020D5A1803048009D5088C
+:10B000005A1804048007D5045A180506800649FF1B
+:10B01000A998FCC95A1006EAFCC9FC038420844C98
+:10B0200080C0801F49000CA844120368B0033A2076
+:10B0300090003A201020CE03801FD5035A680104E7
+:10B0400049FFA993FC83FC00840049FFFFA0840012
+:10B0500049FFFFE5840049FFAC79840049FFACA8B3
+:10B0600049FFFE4C49FFFE8549FFFEAD840049FFC4
+:10B07000B28B4400024049FFB29D4400024049FFA8
+:10B08000B28E840949FFB2A1840349FFB2A744628A
+:10B09000154C441000FA840049FFB12F49FFED130D
+:10B0A00038130101840049FFAFDD441000FA840227
+:10B0B00049FFB12349FFED0738130101840249FF1D
+:10B0C000AFD1441000FA840549FFB11749FFECFBEA
+:10B0D0003813010146600081840349FFAFC349FF73
+:10B0E000AD5D04030391920A40002808580001C096
+:10B0F0001403039149FFAD4B0403002C461FFC0FC2
+:10B10000920694065800002D1403002C0403002C12
+:10B1100050108FFF462002D0FE0EFE171403002CA5
+:10B120000403002D920694065800000A1403002D13
+:10B130000403002DFE46460000A0FE471413002D18
+:10B140000413002D460C0FFF50000FFFFE0E46109B
+:10B15000A000FE0F1403002D0403002F9206940696
+:10B16000580000041403002F4400028049FFB0B4CB
+:10B17000840049FFFEE549FFFC8749FFB0AB3E076D
+:10B18000FF6FFC80DD9EFC0049FFE3BD80C0C81856
+:10B190002E07F7CEC81144045028B42092239646B7
+:10B1A0005A10010BB42092219646C1063C0DFFDADD
+:10B1B0005A08010AD50549FFDEE95A0802F949FF94
+:10B1C000E3A584C18006FC802E07F7DAC81FFC00C7
+:10B1D0002E07F7CEC81244145028B40192039606E5
+:10B1E0005A00010CB40192019606C0073C0DFFDA2B
+:10B1F0005A0001088400FC8049FFDEC85A0802F8A2
+:10B2000084003E07F7DA8401FC8084003E07F7DA09
+:10B210008401DD9EFC0049FFB05DFC802E07FF6FBE
+:10B22000DD9E2E07FF6EDD9E2E07FF6DDD9E2E0735
+:10B23000FF6CDD9E3E07FF6CDD9EFC0080C049FF79
+:10B24000B14A800649FFA7D18400842C5A68011FA7
+:10B2500049FFB0A78402842A49FFB0A38403842A4B
+:10B2600049FFB09F8405842C49FFB09B8407842C40
+:10B2700049FFB0978400802049FFA75684008422AC
+:10B2800049FFA75244021D9CD54149FFB08A840161
+:10B29000842C49FFB0868402842A49FFB08284034B
+:10B2A000842A49FFB07E8404842C49FFB07A840547
+:10B2B000842C49FFB0768406842C49FFB072840741
+:10B2C000842C49FFB06E8401842049FFA72D84019E
+:10B2D000802049FFA7298400842249FFA7258400F4
+:10B2E000842349FFA7218401842449FFA71D8401E9
+:10B2F000842549FFA7198401842649FFA7158401E5
+:10B30000842749FFA71144021E204410004249FF30
+:10B31000AD10FC8044021D9CDD9E44021E20DD9E7B
+:10B32000FC2184C2F08180E280015A10010384C1B3
+:10B3300049FFFF85CF0C840349FFA9B0840349FF6F
+:10B34000AD3CF001802649FFEA56FCA1840249FF8A
+:10B35000A9A5840249FFAD31F0018026844049FF50
+:10B36000E9D9FCA1FC00840049FFFD4E8400842043
+:10B370003E07FF6E3E07FF6D80412E07FF6F49FFBE
+:10B38000FFD1FC80FC2044148090440FFFEFB441B7
+:10B3900046700081FE16B60144048010FA20AE40CB
+:10B3A000FAC2507383D4B407920B9627C0078EC19C
+:10B3B000C605840149FFB46FD5F744048010FA2014
+:10B3C000AE4044148090B40158000010B601FCA0B7
+:10B3D000FC0049FFF1875A08010944145028B401C0
+:10B3E000920196065A0001FDFC80FC015A080106F4
+:10B3F000F08149FFFFEFF00149FFA827FC81FC2005
+:10B4000084E080C049000490840049FFA81E49FFE1
+:10B41000FFBB49FFE54D3E77F7DB49FFE2773E771B
+:10B42000F7DA5A680105800649FFFFE1FCA0FC003D
+:10B430003C6DFFD9C60A840149FFFFE349FFFD9334
+:10B4400084003C0FFFD9FC8049FFF14C5A0001F504
+:10B450003E67F7DB49FFE25A3E67F7DA49FFFD83B3
+:10B46000FC80FC0049FFFD7546000081040000F5EA
+:10B47000920B9627C80449FFF135C005840049FFA7
+:10B48000FFC084013C0FFFD9FC80FC0049FFFFD1C5
+:10B49000446450282E07F7DAC00F84C03E67F7DBFC
+:10B4A00049FFE2343E67F7DA49FFFD5349FFFAFEF0
+:10B4B00049FFFFD9FC802E07F7CEC80FB4069203D0
+:10B4C00096065A00010BB40692019606C0063C0D82
+:10B4D000FFDA5A0801E1D5E249FFDD585A0802F9BE
+:10B4E000D5DDFC492E67FF6F840049FFFEA884026A
+:10B4F00049FFA8D480068420844149FFE90B8404D5
+:10B5000049FFFD45B1864412037480063A20940435
+:10B510003A2014243A2094043A2014243A20940027
+:10B520003A201420440203A4803F3A2014043A2015
+:10B5300094243A200C003A208C20801F49FFACEC68
+:10B54000800649FFACB384003E07F7D980FF49FF6E
+:10B55000FF704494502849FFA6412E07F7D9C02C0C
+:10B5600084003E07F7D949FFFF7E49FFFF90840022
+:10B5700049FFFD0D441202E080063A2094043A206F
+:10B5800014243A2094043A2014243A2094003A20B7
+:10B5900014204402028C80273A2014043A20942478
+:10B5A0003A200C003A208C20800749FFACB5800679
+:10B5B00049FFAC7CFCC92E07F7CEC80FB409920333
+:10B5C00096065A00010BB40992019606C0063C0D7E
+:10B5D000FFDA5A0801C4D5C549FFDCD85A0802F978
+:10B5E000D5C0FC01B61F2E07FF6E49FFAFB5F08135
+:10B5F000B41F49FFA9DD44100240B41F49FFAFB793
+:10B60000840249FFFC574464502849FFFF122E076B
+:10B61000F7DAC01784C03E67F7DB49FFE1773E6782
+:10B62000F7DA49FFFF2044100240B45FF00149FF00
+:10B63000E9D8840149FFFC3E840149FFFEE2FC8118
+:10B640002E07F7CEC80FB406920396065A00010BD8
+:10B65000B40692019606C0063C0DFFDA5A0801D9DD
+:10B66000D5DA49FFDC935A0802F9D5D5FC002E073C
+:10B67000FF6F49FFEC0F840049FFFBC684202E2793
+:10B68000FF6D2E07FF6F49FFFE4D840049FFFFABA2
+:10B690002E17FF6E2E27FF6D2E07FF6F49FFFE420C
+:10B6A0002E07FF6F49FFEBF62E07FF6F49FFED55A1
+:10B6B00049FFF018C8092E07FF6F49FFFB8F2E07BF
+:10B6C000FF6F49FFFC3D840149FFFBF449FFEAE4B9
+:10B6D00049FFFEAFFC80FC002E07FF6F49FFEBDA4D
+:10B6E0002E17FF6F840349FFECC2840349FFFB8CD4
+:10B6F0002E07FF6F84202E27FF6D49FFFE1349FFA1
+:10B70000EFF1C804840149FFFE7C840149FFFBD2AC
+:10B710004464502849FFFE8D2E07F7DAC01D84C00F
+:10B720003E67F7DB49FFE0F23E67F7DA49FFFE9B31
+:10B73000441000428440846344021E2049FFE962B1
+:10B74000840049FFFB612E07FF6F49FFED0684016E
+:10B7500049FFFBB0FC802E07F7CEC80FB40692035A
+:10B7600096065A00010BB40692019606C0063C0DDF
+:10B77000FFDA5A0801D3D5D449FFDC085A0802F988
+:10B78000D5CFFC0044043010B40092089600C015D8
+:10B7900044143008841EB4414464300CFE16B601D3
+:10B7A000B40658000001B606840149FFB274B4061D
+:10B7B00058000002B606FC80441400404620810078
+:10B7C000B6414464300CB601B40692049606C8E152
+:10B7D0004400006449FFB2563C0005738C01960199
+:10B7E0005CF000643C080573E9F0D5D3FC40446488
+:10B7F000808846A01000B40646902000400028042F
+:10B80000B606B4064474550840002404B606B427AE
+:10B81000440FFFBFFE0EB6078421800749FFA981B0
+:10B82000440458888437B440FE56B620842149FF2A
+:10B83000A94DB427440FFF7FFE0EB607B427440F6F
+:10B84000FFEFFE0EB6078421800749FFA96AB40600
+:10B8500040A02804B746B40640902404B72649FF08
+:10B86000AED7E603E81F44142C0C46000100B44197
+:10B87000FE178441B60180624404280C4414240C51
+:10B8800049FFA97A44142C1846000400B441FE175D
+:10B890008441B6018062440428184414241849FFE6
+:10B8A000A96B49FFAEB5E603E82B44142C14B40190
+:10B8B00058001000B601840549FFDE8B8441806288
+:10B8C000440428144414241449FFA95644042C1C8D
+:10B8D000441BFFFFB440FE56B620B4404610008023
+:10B8E000FE57B620B44046100400FE578441B620EF
+:10B8F00080624404281C4414241C49FFA93D46606E
+:10B90000008149FFA94B041303A08410FE0E140309
+:10B9100003A00413039F460F0FFF50000FFFFE46C6
+:10B9200046204000FE571413039F0413039F46272D
+:10B930000000944C9224FE571413039F0413039E9B
+:10B94000FE0E46107000FE0F1403039E49FFA91F50
+:10B9500046000333500003334414500C14030034E6
+:10B9600014030036B40158000001B60144040090ED
+:10B9700044100064AC40840049FFDFCC441620042E
+:10B9800046001000B441FE17B60144142C18460BB3
+:10B99000FFFFB44150000FFFFE16B60144142C1CEB
+:10B9A000440FFFEFB441FE168441B60180624404A7
+:10B9B00028184414241849FFA8DF84414404281C93
+:10B9C0004414241C806249FFA8D749FFAE21E60336
+:10B9D000E81044142C0446000080B441FE17844152
+:10B9E000B6018062440428044414240449FFA8C416
+:10B9F00049FFAE0EE603E940840849FFDDEA840012
+:10BA000049FFDDF084418062440428144414241466
+:10BA100049FFA8B244142C0C460FFEFFB44150005D
+:10BA20000FFFFE168441B60180624404280C4414C2
+:10BA3000240C49FFA8A144042C0446100800B4407B
+:10BA4000FE57B620B440461FFBFF50108FFFFE5636
+:10BA5000B620B44046100080FE57B620B4404414CF
+:10BA60000000FE578441B620806244042804441438
+:10BA7000240449FFA881FCC0FC00840149FFA550B3
+:10BA8000840349FFA570840049FFA5F6840049FF9F
+:10BA9000A57A840349FFA598840049FFA5A38401E2
+:10BAA00049FFDE66FC80FC008400441000FA49FF78
+:10BAB000AC248402441000FA49FFAC1F84014410F6
+:10BAC00000FA49FFAC1A8403441000FA49FFAC1590
+:10BAD0008404441000FA49FFAC10441000FA8405B5
+:10BAE00049FFAC0B840149FFDD648403842A49FFCC
+:10BAF000AC588400842349FFA317FC80FC01F0812B
+:10BB000049FFAD86E603E904F00149FFE245FC8107
+:10BB1000FC00840149FFA7AB840149FFA3538401C2
+:10BB200049FFA68D840049FFF989840049FFF96C1B
+:10BB3000840149FFA5BE840149FFAAED840149FFA4
+:10BB4000AAFA840149FFA5B5840149FFAB1284011B
+:10BB500049FFA6B6840149FFA6C7840149FFA6DDB7
+:10BB600049FFAD56E603E8058401842F49FFACB4D4
+:10BB700049FFAD4EE603E90349FFAD4E49FFAD482D
+:10BB8000E603E80349FFAD51840449FFAD62FC8040
+:10BB9000C26CFC4580C084E18122814149FFDE11F5
+:10BBA000B6DF84C08027442410108066808780A67A
+:10BBB0008007F781F682F683F784F685F686F687A6
+:10BBC000149F800849FFEF13800649FFDE078007B6
+:10BBD00049FFDE12800649FFDDF1800649FFDE6B7A
+:10BBE00049FFDE354400003B49FFDE3F800A49FF44
+:10BBF000DE4A800749FFDE56800649FFDE3649FFF0
+:10BC0000DE5E800949FFDE60800649FFDE61800755
+:10BC100049FFDE5E40000009440480078422AE40F4
+:10BC2000800749FFDE5E440000FF49FFDE5E49FFFA
+:10BC3000ACEFE603E804840A49FFB02D44648004B5
+:10BC4000A6329606C0FE49FFDDFCC0FB4404800717
+:10BC50008422AE40840049FFDDB1840149FFDE2B20
+:10BC6000840049FFDE1FFCC5DD9EFC0049FFAD13CB
+:10BC700049FFAD7949FFAE1E840149FFACFD49FF84
+:10BC8000E1D4FC804404400CB400920196065A00B2
+:10BC9000010944071014B400920E560000019606E4
+:10BCA000DD9EFC004400BE6049FFE3B484018420B3
+:10BCB00049FFAEB88401802049FFAEB484008020E3
+:10BCC00049FFAEC48420FA0E49FFAEE4840049FF68
+:10BCD000AEEB8400802049FFAF0E8400802049FF36
+:10BCE000A8A5840049FFAF118420840149FFAEB8A4
+:10BCF000840049FFAEEB8400842149FFAEA7842174
+:10BD0000440000D249FFAEC6840149FFAECD840095
+:10BD1000842149FFAEF08401802049FFA8874900B3
+:10BD2000005AFC80FC0080C05A08010D84003E07C8
+:10BD3000F7D8441001F4840249000051840280269F
+:10BD4000D5038402842049000058FC80FC002E07A3
+:10BD5000F7D8C00784024900004784003E07F7D89F
+:10BD60008402490000655A08010449FFEE3BFC804B
+:10BD7000FC00840149FFE37F840749FFE3808400DE
+:10BD800049FFE389840049FFE3924400FF1449FF1F
+:10BD9000AEE749FFAEF549FFAEECFC80FC0049FF81
+:10BDA000AEE8FC80FC005A08010BFE0B960149FF2F
+:10BDB000AED749FFAEE549FFAEDCFC8049FFAEF0EF
+:10BDC000FC803C00059A3C10059A96014C00FFFB54
+:10BDD000DD9E84003C080578DD9E442227B438119E
+:10BDE0000109DD9EFC0080C049FFFFED441227D40D
+:10BDF00038009909FC8080605A180110FC2080C12D
+:10BE000080E049FFFFF13C20057840131C0CFE57F1
+:10BE100096493C180578FCA084413C000578401107
+:10BE20000C0CFE4BFE463C180578DD9E3C10057858
+:10BE30004010800E9646C9038001DD9EFC0080C044
+:10BE400049FFFFC1441227D4442227B43810990176
+:10BE5000382119018A019601E20256078001FC800F
+:10BE60003C00059A8C0196013C08059ADD9E000075
+:10BE70003A1FA43C3AFFBFBC6462A4029DB4647242
+:10BE800004023A6F9C3C646200029FB26462000349
+:10BE900064000008490002133A6F9C046462A40322
+:10BEA000647204033AFFBF843A1FA40464000004D0
+:10BEB0003A1FA43C3AFFBFBC6462A4029DB4647202
+:10BEC00004023A6F9C3C646200029FB26462000309
+:10BED00064000008490001F43A6F9C046462A40302
+:10BEE000647204033AFFBF843A1FA4046400000490
+:10BEF0003A1FA43C3AFFBFBC6462A4029DB46472C2
+:10BF000004023A6F9C3C646200029FB264620003C8
+:10BF100064000008490001D53A6F9C046462A403E0
+:10BF2000647204033AFFBF843A1FA404640000044F
+:10BF30003A1FA43C3AFFBFBC6462A4029DB4647281
+:10BF400004023A6F9C3C646200029FB26462000388
+:10BF500064000008490001B63A6F9C046462A403BF
+:10BF6000647204033AFFBF843A1FA404640000040F
+:10BF70003A1FA43C3AFFBFBC6462A4029DB4647241
+:10BF800004023A6F9C3C646200029FB26462000348
+:10BF900064000008490001973A6F9C046462A4039E
+:10BFA000647204033AFFBF843A1FA40464000004CF
+:10BFB0003A1FA43C3AFFBFBC6462A4029DB4647201
+:10BFC00004023A6F9C3C646200029FB26462000308
+:10BFD00064000008490001783A6F9C046462A4037D
+:10BFE000647204033AFFBF843A1FA404640000048F
+:10BFF0003A1FA43C3AFFBFBC6462A4029DB46472C1
+:10C0000004023A6F9C3C646200029FB264620003C7
+:10C0100064000008490001593A6F9C046462A4035B
+:10C02000647204033AFFBF843A1FA404640000044E
+:10C030003A1FA43C3AFFBFBC6462A4029DB4647280
+:10C0400004023A6F9C3C646200029FB26462000387
+:10C05000640000084900013A3A6F9C046462A4033A
+:10C06000647204033AFFBF843A1FA404640000040E
+:10C070003A1F943C3AFFBFBC6412A402642204023B
+:10C080003A1F883C641200029E4A64120003441066
+:10C0900000A438108202DD213A0F840464020043B8
+:10C0A000640000086402A403641204033AFFBF841E
+:10C0B0003A1F94043A0F8004640000043A1F943C31
+:10C0C0003AFFBFBC441000A438108202DD213AFFC1
+:10C0D000BF843A1F94043A0F800464000004D50022
+:10C0E0003A0F803C8400D5EB3A0F803C8401D5E7C1
+:10C0F0003A0F803C8402D5E33A0F803C8403D5DFBD
+:10C100003A0F803C8404D5DB3A0F803C8405D5D7B8
+:10C110003A0F803C8406D5D33A0F803C8407D5CFB4
+:10C120003A0F803C8408D5CB3A0F803C8409D5C7B0
+:10C130003A0F803C840AD5C33A0F803C840BD5BFAC
+:10C140003A0F803C840CD5BB3A0F803C840DD5B7A8
+:10C150003A0F803C840ED5B33A0F803C840FD5AFA4
+:10C160003A0F803CFA00D5AB3A0F803CFA01D5A7D4
+:10C170003A0F803CFA02D5A33A0F803CFA03D59FD0
+:10C180003A0F803CFA04D59B3A0F803CFA05D597CC
+:10C190003A0F803CFA06D5933A0F803CFA07D58FC8
+:10C1A0003A0F803CFA08D58B3A0F803CFA09D587C4
+:10C1B0003A0F803CFA0AD5833A0F803CFA0B48FFCD
+:10C1C000FF7F3A0F803CFA0C48FFFF7A3A0F803C21
+:10C1D000FA0D48FFFF753A0F803CFA0E48FFFF70DA
+:10C1E0003A0F803C4400001F48FFFF6A840164044A
+:10C1F000C002440200016404E00345D21CC03FC8F1
+:10C20000000045F25FF48400420E00214900004224
+:10C2100049000355D5009200FC004432110044222D
+:10C2200010009A9A440210004411100049FFFCB219
+:10C2300049FFE08944320754442200009A9A44029C
+:10C2400000004411000049FFFCA549FFE07C4402C6
+:10C250001100442235BC84208A404900038DFC80B3
+:10C2600084006405E403841F64030403640324035B
+:10C2700064122402440F0FFFFE0E640224036412B2
+:10C2800000028418FE0E6402000364000008DD9EB4
+:10C29000FC0049FFFFE764008002921EC0066400B4
+:10C2A0008402962EC002D50049FFFFB864120043F5
+:10C2B0006400000864000008FC80DD9EDD9EDD9EB9
+:10C2C000DD9EDD9EDD9EDD9EDD9EDD9E44048004C0
+:10C2D000A6019606C005440480058421AE40DD9E7B
+:10C2E00044048001A600C805FC0049FFDC00FC8076
+:10C2F000DD9EFC0044048000A60349FFE08EFC8024
+:10C300004414800444048084A688B4009606FE1673
+:10C31000C0038401AE08DD9EFC0044048000A60337
+:10C3200049FFABFCFC8044148014A6089606C009A3
+:10C330008401AE0844148094B40158000001B60191
+:10C3400044148014A60892019606C0098402AE081F
+:10C3500044148094B40158000002B601DD9EFC0034
+:10C3600049FFDA56FC8044048004A6029202960635
+:10C37000C005440480068424AE40DD9E441480043D
+:10C38000A60B92019606C005440480078442AE8045
+:10C39000A60B9606C005440480078421AE40DD9EAE
+:10C3A00044048008B42092249646C103FA20AE408B
+:10C3B000B40084219606C00644048008AE403E17AF
+:10C3C000F80144048008B42092219646C1068422D4
+:10C3D000AE4084213E17F800B40092029606C005D4
+:10C3E000440480088424AE40DD9EDD9EFC0049FFAD
+:10C3F000D906FC80FC0049FFD961FC80FC0049FFA4
+:10C40000A054FC8044148008B40192089606C0052C
+:10C41000440480098441AE80B40192099606C00F9D
+:10C42000440480098422AE4084013E07F80A440493
+:10C430005028B4009206961F3E07F809DD9EFC00C6
+:10C4400044048008B40092129606C05844148088B0
+:10C45000B40192129606C0524404800A8444AE800D
+:10C46000B441440DFFFFFE1644673004B601B42604
+:10C47000841EFE0EB606840A49FFAC04B4065800BA
+:10C480000001B606840A49FFABFD49FFDE0F4400F8
+:10C49000008749FFDE0444173010B4019606C0FE41
+:10C4A00044173010B401920396065A0001FD446708
+:10C4B0003004840A49FFABE6B426841EFE0EB6069D
+:10C4C000840A49FFABDFB40658000001B606840AAF
+:10C4D00049FFABD84414808884013E07F808B44172
+:10C4E00044020000FE17B6014404800A8422AE40D4
+:10C4F0003C0DFE018C013C0FFE01440480088421A8
+:10C50000B40092109606C00C44048088B4009210C7
+:10C510009606C0064404800A3E17F80CAE40440458
+:10C520008008B40092119606C00E44048088B400BE
+:10C5300092119606C00884013E07F80B4404800A55
+:10C540008422AE40FC80441480088441B4019218D7
+:10C550009606C0064404800BAE803E27F7CFB40198
+:10C5600092199606C01D4404800B8422AE408400BC
+:10C570003E07F7CF46000081441FFEFF5030007099
+:10C58000B443FE56B623B443441EFFFFFE56B62303
+:10C59000B443461FEFFF50108FFFFE56B6234404EE
+:10C5A0008008B400921A9606C00E44147008B401B4
+:10C5B00092104000400858007823B6014404800BD4
+:10C5C0008424AE4044048008B400921B9606C00543
+:10C5D0004404800B8428AE40DD9E44048004A602FF
+:10C5E00092039606C005440480068428AE40DD9E72
+:10C5F0004414800CB40192109606C0054404800EC9
+:10C600008441AE80B40192119606C0054404800EA8
+:10C610008422AE404414800CB40192129606C005E8
+:10C620004404800E8444AE80B40192139606C00583
+:10C630004404800E8428AE404414800CB40192144B
+:10C640009606C0054404800EFA40AE80B4019215EF
+:10C650009606C0054404800EFA30AE404414800CA7
+:10C66000B40192169606C0064404800E4420004091
+:10C67000AE80B40192179606C0064404800E441F93
+:10C68000FF80AE404414800CB40192189606C00599
+:10C690004404800F8441AE80B40192199606C0050F
+:10C6A0004404800F8422AE404414800CB401921ADA
+:10C6B0009606C0054404800F8444AE80B401921BEA
+:10C6C0009606C0054404800F8428AE404414800CB4
+:10C6D000B401921C9606C0054404800FFA40AE8057
+:10C6E000B401921D9606C0054404800FFA30AE4096
+:10C6F0004414800CB401921E9606C0064404800FB8
+:10C7000044200040AE80B4014E0400074404800F72
+:10C71000441FFF80AE40DD9E4404800CB42096464A
+:10C72000C1038421AE40B40092019606C0054404C2
+:10C73000800C8422AE404404800CB42092229646A1
+:10C74000C1038424AE40B40092039606C00544049D
+:10C75000800C8428AE404404800CB4209224964679
+:10C76000C103FA20AE40B40092059606C005440409
+:10C77000800CFA30AE404404800CB42092269646D9
+:10C78000C10444100040AE40B40092079606C006B3
+:10C790004404800C441FFF80AE404414800CB4015C
+:10C7A00092089606C0054404800D8441AE80B40111
+:10C7B00092099606C0054404800D8422AE404414BC
+:10C7C000800CB401920A9606C0054404800D84448E
+:10C7D000AE80B401920B9606C0054404800F8428F5
+:10C7E000AE404414800CB401920C9606C00544047B
+:10C7F000800DFA40AE80B401920D9606C005440447
+:10C80000800DFA30AE404414800CB401920E9606AE
+:10C81000C0064404800D44200040AE80B401920F55
+:10C820009606C0064404800D441FFF80AE40DD9E86
+:10C830004404800044148080A680B4219646FE56AD
+:10C84000C1038421AE40A600401004094404808046
+:10C85000B40092019606FE0EC005440480008422B6
+:10C86000AE4044148000A60840200809440480809B
+:10C87000B40092029606FE16C0038404AE08A60811
+:10C8800040100C0944048080B40092039606FE0E0A
+:10C89000C005440480008428AE40DD9EDD9EDD9E00
+:10C8A000DD9EDD9EDD9EDD9EDD9EDD9EDD9EDD9EB0
+:10C8B0003A1F943CEFFCEC18DD9EFC00441620046B
+:10C8C00046001000B441FE17B601440000663E0069
+:10C8D0000AE849FFEA924414303446000400B441A7
+:10C8E000FE17B601440710188420AE4149FFDCA3AF
+:10C8F00049FFDCDB44040054B4004050400996403A
+:10C9000097685A10FF049640D50284209208FE0FC3
+:10C910009600D00544040054843FB62049FFD31B41
+:10C9200049FFD54C8400FC80806054F10003E91B72
+:10C93000E644E9195441800354508003DC14C50ACD
+:10C94000525280049A9599690840800118418001EB
+:10C95000D9FC40510809C507956A9969968FA309C2
+:10C96000AB19D9FEC207994A0840800118418001DD
+:10C97000D9FCDD9E8060E644E91A54518003C50865
+:10C98000525280049A95996B18118001DBFE405138
+:10C990000809968FC50C956A995D96484040A00895
+:10C9A000FE674040C008FE67AA59DBFF995AD304CE
+:10C9B00018118001D5FDDD9E000000000000000080
+:10FFD000FFFFFFFFFFFFFFFF24010000A61C000042
+:10FFE000846906000200060C0200060C01000404ED
+:10FFF0000100030601000600050400005C89E9F722
+:020000021000EC
+:100000004218202B41011220FF07FF07050A0B00B1
+:1000100000FFFF00010000010101FF0101FFFFFFE0
+:1000200000FFFF0001000001FFFF01FFFF010101D0
+:1000300000FFFF0001000001FFFF01FFFF010101C0
+:10004000FFFF00FF01FFFF0000000100FF010001B2
+:100050000101000064000000640000006400000072
+:10006000640000009CFFFFFF9CFFFFFF486F707063
+:10007000696E672053746172740A00000005020003
+:10008000F4040200E8040200D8040200C8040200DC
+:10009000B4040200A00402008804020070040200FC
+:1000A000540402000B0B0B0C0C0C0C0C0C0D000080
+:1000B0000105000702060408030900000304050601
+:1000C0000708090A0B0C0000030405060708090AC3
+:1000D0000B0C0000020201010505040403020004E8
+:1000E00000030503020303033A013C0162017801A6
+:1000F0003A013C01A0017C01BA011202D0028C013C
+:100100004003AE016201C001FC01CA01D801E20155
+:1001100002020101060604050302000400030503B0
+:100120000203030308010801080108010C010C0186
+:100130000C014001B4016801CA0100023C026E02D8
+:100140000801180152021E0126012E0100010203BE
+:100150000405060708090A0B0B0A09080706050427
+:100160000302010000010203040506070800010262
+:100170000001020304050607080201000001020352
+:100180000405060708000001000102030405060734
+:10019000080001003870000038700000387000005E
+:1001A00038700000387000003870000038700000AF
+:1001B000387000003870000038700000387000009F
+:1001C00038700000010002000200010004800000FD
+:1001D000084000001020000020100000400800002F
+:1001E0008004000000030000387000003870000038
+:1001F000387000004E4C3D25642C202564202C25B1
+:10020000640A00006672616D653D25642C25642CCE
+:1002100025640A006672616D65313D25642C256494
+:100220002C25640A0000000000000000000000000F
+:100230000000000000000000520200005202000016
+:1002400092020000D2020000000000000000000046
+:10025000000000000000000090000000900000007E
+:10026000E0000000F000000000004002400200003A
+:10027000C000C00040004000000909000303010164
+:100280000101010101010101010404040001020353
+:100290000405060708000102000102030405060721
+:1002A000080201000001020304000102030400002F
+:1002B0000780030038700000C00F000008400000F5
+:1002C0001020000020100000400800008004000002
+:1002D000000300000780030038700000C00F00001A
+:1002E000010002000200010004800000084000003C
+:1002F00010200000201000004008000080040000D2
+:1003000000030000387000003870000038700000F2
+:100310000780030038700000C00F000000000000DC
+:1003200000000000FFFFFFFFFFFFFFFF01010101D1
+:1003300001010101010303030101010101010101A7
+:10034000010003030101010101010101010000009D
+:10035000030303030303030303030303040404006D
+:100360000000000000000000010101010101000087
+:1003700000000000010002000200010004800000F3
+:10038000084000001020000020100000400800007D
+:1003900080040000000300000780030038700000A4
+:1003A000C00F000000010203040506070800010257
+:1003B0000001020304050607080001020B020B0BF3
+:1003C0000B0200000B020B0B0B02000000000000F0
+:1003D0000B01000001000000F1D8FFFFF1D8FFFF82
+:1003E000F1D8FFFFF1D8FFFF00000000010000007E
+:1003F000202B0000000000000100000000000000B1
+:100400000100000000000000421800000100000090
+:1004100000000000000000000101010101010000D6
+:100420000B0B0B0C0C0C0C0C0C0D0000000502004F
+:10043000F4040200E8040200D8040200C804020028
+:10044000B4040200A0040200880402007004020048
+:1004500054040200B6007B009F00C700F0001A01A0
+:1004600043016A018D01AB01C301D301DB0100002F
+:100470005D0044005A0072008A00A300BB00D00057
+:10048000E300F200FD00020161004D0068008400FD
+:10049000A200BF00DA00F200060113011A010000F9
+:1004A0006500580079009D00C100E30002011C01B5
+:1004B0002E0137016A0067009100BE00EA001301B7
+:1004C00035014E015B01000072007C00B200EB00C0
+:1004D00023015201750187017C009900E2002E0181
+:1004E0007201A501C1010000450063009600C8002B
+:1004F000F000070151008800D30015013C01000005
+:100500006700CC0040018A011F1F1F1F1F1F1F1FF4
+:100510001F1F1F1F1F1F1F1F1F1F1E1E1E1E1E1EF1
+:100520001E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1DEF
+:100530001D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1CED
+:100540001C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1CEB
+:100550001B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1BEB
+:100560001B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1AE9
+:100570001A1A1A1A191919191919191919191919E7
+:1005800019191919191918181818181818181818E5
+:1005900018181818181818181717171717171717E3
+:1005A00017171717171717171717161616161616E1
+:1005B00016161616161616161616161615151515DF
+:1005C00015151515151515151515151515151414DD
+:1005D00014141414141414141414141414141414DB
+:1005E00013131313131313131313131313131313DB
+:1005F00013131212121212121212121212121212D9
+:1006000012121212111111111111111111111111D6
+:1006100011111111111110101010101010101010D4
+:1006200010101010101010100F0F0F0F0F0F0F0FD2
+:100630000F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0ED0
+:100640000E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0DCE
+:100650000D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0CCC
+:100660000C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0CCA
+:100670000B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0BCA
+:100680000B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0AC8
+:100690000A0A0A0A090909090909090909090909C6
+:1006A00009090909090908080808080808080808C4
+:1006B00008080808080808080707070707070707C2
+:1006C00007070707070707070707060606060606C0
+:1006D00006060606060606060606060605050505BE
+:1006E00005050505050505050505050505050404BC
+:1006F00004040404040404040404040404040404BA
+:1007000003030303030303030303030303030303B9
+:1007100003030202020202020202020202020202B7
+:1007200002020202010101010101010101010101B5
+:1007300001010101010100000000000000000000B3
+:10074000000000000000000038700000FFFF000003
+:1007500001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA7
+:100FF000FFFFFFFFFFFFFFFFFFFFFFFF53EBFAA81D
+:1010000011000000000000000000000000000000CF
+:1010100005000000000000000000000000000000CB
+:10102000C8009001F401C8006E009600370F213C03
+:101030002C012602520396006E00DC005A0F215A42
+:101040000000000000000000093C50103232373C24
+:101050002D00CEFF26350A00FA0010FF3C140A00CE
+:101060000000000000000000000000001101FA0074
+:10107000EC01C101000000000A011601DF01F701C7
+:10108000803E0000C800010212140819010103008B
+:101090000000000000000000000000000000000050
+:1010A0003D00260220036400040000000000000050
+:1010B000280026022003580204000000000000005F
+:1010C0000F0F3C462D0004021E320F1E00000000D0
+:1010D0000000000000000000000000000000000010
+:1010E0000000000000000000000000000000000000
+:1010F00000000000000000000000000000000000F0
+:101FF000FFFFFFFFFFFFFFFFFFFFFFFF7D6E6BACEB
+:10200000480039F8480038384800385648003874D5
+:1020100048003892480038B0480038CE480038ECC4
+:102020004800390A4800396048003962480039647C
+:1020300048003966480039684800396A4800396CF8
+:102040004800396E480039704800397248003974C8
+:1020500048003976480039784800397A4800397C98
+:102060004800397E48003980480039824800398468
+:1020700048003986480039884800398A4800398C38
+:102080004800398E48003990480039924800399408
+:1020900048003996480039994800399C4800399FD2
+:1020A000480039A2AC740000AE740000C274000095
+:1020B000D4740000E2740000FA7400000875000097
+:1020C00040750000487500005E75000082750000D4
+:1020D000CC750000CE750000D6750000DE750000DE
+:1020E000E67500002076000028770000BC7700002D
+:1020F000D2770000FA780000127A00007E7A0000A1
+:10210000807A0000827A0000847A0000867A0000DB
+:10211000887A00008A7A00008C7A00008E7A0000AB
+:10212000907A0000E628E84C96064620008144F0AC
+:10213000013C3817840040F0BC00DD0F0816243243
+:10214000404E5C6A4000400804310029441EFFFFF5
+:10215000D5334000440804310029441DFFFFD52C2D
+:102160004000480804310029441BFFFFD5254000EA
+:102170004C0804310029461FFF7FD51C4000500841
+:1021800004310029461FFEFFD515400054080431D4
+:102190000029461FFDFFD50E4000580804310029D4
+:1021A000461FFBFFD50740005C0804310029461F8D
+:1021B000F7FF50108FFFFE5EFE0F14010029DD9E19
+:1021C000442480909606B46240102008440FFEFF1D
+:1021D000FE1EFE0FB602DD9E46100082A00A5800C9
+:1021E0000001A80ADD9E462000829606A0D5401078
+:1021F0004008440EFFFFFE1EFE0FA815DD9E4600A0
+:102200000082A00592109606DD9EFC40466000818B
+:10221000962F409020080403002A447FC0FFFE3E12
+:10222000400024041403002A966F4090C008460F13
+:10223000FC0F0413002A50000FFFFE464010A404B8
+:102240001413002A96AF0493002A40116008462C0C
+:102250000FFF50210FFF40248802FE8F1423002A15
+:102260000413002B96EF9226944EFE5F1413002B5E
+:10227000972F401220080443002B976FFF3EFF0F5B
+:102280001443002B0413002B4052C008FE0EFE2FF7
+:102290001403002B49000482000F80205410003FDB
+:1022A0000403039892069406FE0F14030398000F8C
+:1022B000802404230399962F9446440FF03FFE1682
+:1022C000FE0F1403039949000462FCC046300082EB
+:1022D00044410000B4A3541087FFFF2FB683B4839A
+:1022E0009492928B40422C08FF0FB68388404C0199
+:1022F0000005A059AA41D5FCB423440EFFFFFE0EF1
+:10230000B603DD9E4630008244410000B4A3541061
+:1023100087FFFF2FB683B4839492928B40422C08A0
+:10232000FF0FB683884080234C010005A301A90953
+:10233000D5FCB423440EFFFFFE0EB603DD9EFC0069
+:1023400046500080463FFF009D999D2E94A98840ED
+:102350003811180038210C00944CFE57964818127A
+:102360008001DCF5FC80FC0046100080462FFEFF5B
+:102370005050800850610FF150410FF05030800EE6
+:1023800094A988403811180038211000944CFE5749
+:10239000964818128001DBF5FC8046200080847E80
+:1023A000505101C4B4859606FEE6FE1FB605965749
+:1023B000B4654000A008441FF8FFFE5EFE47B62546
+:1023C000DD9E46200081400040080411001196491E
+:1023D000FE0F14010011DD9E4620008140004008E0
+:1023E000041100109649FE0F14010010DD9E4620D6
+:1023F00000810411001092304010C008FE0F14013B
+:102400000010DD9E46200081041100119230401022
+:10241000C008FE0F14010011DD9E462000818430AB
+:1024200004310012961FFE5EFE0F14010012DD9EA5
+:1024300046200080843004310070961FFE5EFE0F3F
+:1024400014010070DD9E46200081843E043100139B
+:102450009606FE5EFE0F14010013DD9E46200081ED
+:1024600096060431001240102008440FFEFFFE1EA5
+:10247000FE0F14010012DD9E46200081960F4010D1
+:10248000480804310012460FFF3F50000FFFFE1EA8
+:10249000FE0F14010012DD9E4600008104000012B0
+:1024A0009212960FDD9E44148010B401920D960690
+:1024B000C00544048011FA50AE80B401920E960615
+:1024C000C0064404801144100040AE404414801003
+:1024D000B401920F9606C00644048011442FFF8079
+:1024E000AE80B40192099606C0054404801184228E
+:1024F000AE4044148010B401920C9606C00544040A
+:102500008011FA40AE80B40192179606C0064404CA
+:102510008012441FFF80AE40DD9E00004610008107
+:1025200004308039C00B5A00010D5A00020E84405D
+:102530005A08030D4623F3C0D50946230000D506EB
+:1025400046235140D5034623A280461C0C3F501021
+:102550008FFF4001840246100081FE17140080396D
+:10256000DD9E46200081960F401058080431003946
+:10257000460FF3FF50000FFFFE1EFE0F140100393F
+:10258000DD9E4610008104308039C0115A000109D7
+:102590005A00020A5A08030B4403FFC0D50844013D
+:1025A0005540D5054402AA80D50284004423FFC0CB
+:1025B000441C003FFE5EFE16FE0F46100081140014
+:1025C0008039DD9E46200081960F0431003940108D
+:1025D0002808440FF3FFFE1EFE0F14010039DD9E94
+:1025E000462000814631551050318440505100E45E
+:1025F000B425A8E9A12A8478FEE6E605A8EAE83A27
+:1026000044F006103807800040F03C004A003C00CF
+:10261000061C283E54004603A32A922650000300BD
+:10262000944E140100385810803AD5228400922626
+:1026300014010038944ED51C46055555922650007D
+:102640000555944E1401003858108015D511460ACE
+:10265000AAAA922650000AAA944E140100385810D3
+:10266000802AD506841F140100385810803F1411A9
+:102670000039DD9EDD9E442450009606B4629442EB
+:10268000841BFE1EFE0FB602DD9E44045028B400DB
+:1026900092049606DD9E920046200083843C04311D
+:1026A0000010960FFE5EFE0F14010010DD9E462006
+:1026B000008396060431001040102008440FFEFFEE
+:1026C000FE1EFE0F14010010DD9EFC40462000831C
+:1026D000445FFEFF8382BB1846400F03FEEEBB98AB
+:1026E000BB1850420C0F92684031A0085831804608
+:1026F000BB98BF39BE3A0491003BFFE6FFA64044B9
+:10270000900204908002BB3CB5418924A10B96DF66
+:1027100088EA04A08001985CBB1888CA58318100FF
+:10272000BB98BB1892684031A00858318046BB98CE
+:10273000BFB9BEBA1491003B96C9B93C9230401063
+:10274000C008FE5FB9BCB420B9B9A041B9BAA04273
+:10275000B9BBA446B83C921040004008FE0FB8BC7C
+:10276000B818FF46BD98FCC0FC2046200083443FBB
+:10277000FEFF8382BC18944AFEE6BB98BB185051FA
+:1027800000E492684031A00858318048BB98BB18DB
+:10279000506100E858318100BB98507100EC8820EE
+:1027A000502100F0463000834C008012A2C1B66573
+:1027B0008380BB3F0240017EB666BB7FB667B462D2
+:1027C00092704031C008FEE7B662D5ED8383B91838
+:1027D000440FFEFFFE0EB898FCA0FC2046100083BC
+:1027E000442FFEFF8381BB184640F03CFE9EBA9802
+:1027F000BA18503200F09248402120085821004673
+:10280000BA98BE39B480BD3AFF9E88C4A101BF3BCF
+:10281000FF5E88A4A102BA3CFEFE8883A0C35421B7
+:1028200000F0BEB99813BDBABCBB9681B83C9210FB
+:1028300040004008FE17B8BCFCA044148090845EA1
+:10284000B4619606FE9EFE87B641B481442FFFEF29
+:1028500094C4FEA6FE9FB641B461442FFBFFFE9ECA
+:1028600040002808FE17B60146100080841850303A
+:10287000826CB443FE1658000006B603B443440FFE
+:10288000F0FFFE1658000800B603DD9E520000015E
+:10289000462000809606C9084010200804310079BF
+:1028A000440FFEFFD5074010400804310079440E64
+:1028B000FFFFFE1EFE0F14010079DD9E4610008210
+:1028C0005A08010B50308020B40358000002B603B0
+:1028D000B443841ED50404208008841DFE16140011
+:1028E0008008DD9E4630008354100001505183B8AB
+:1028F000B4854020A008441FFEFFFE66FE57B625A3
+:10290000B425E601440FFDFF40F7A408FE0E400089
+:102910003C04B605DD9E4630008354100001505142
+:1029200083B8B4854020A808441FFBFFFE66FE570D
+:10293000B625B425E601440FF7FF40F7AC08FE0EBC
+:1029400040003C04B605DD9E442720689601B42271
+:1029500092304010C008FE47B62244272070B422AF
+:1029600092304010C008FE47B62244272078B42297
+:1029700092304010C008FE47B62244272080B4227F
+:1029800092304010C008FE47B62244272088B42267
+:1029900092304010C008FE47B62244272090B4224F
+:1029A00092304010C008FE0FB602DD9EC80A4417E0
+:1029B0002000460FEFFFB44150000FFFFE16D5096F
+:1029C0005A0801094417200046001000B441FE17C0
+:1029D000B601DD9E44272000843EB4629606FE5E6A
+:1029E000FE0FB602DD9E44272004843EB4629606A4
+:1029F000FE5EFE0FB602DD9E442720009606B462FE
+:102A000040104008440EFFFFFE1EFE0FB602DD9E82
+:102A1000C90644271000B422FE0FD5085A18010831
+:102A200044271000FE03B422FE0EB602DD9E5A18A3
+:102A3000010744271004B422FE0FD507C907442715
+:102A40001004FE03B422FE0EB602DD9E5A180107E2
+:102A500044271008B422FE0FD507C90744271008E1
+:102A6000FE03B422FE0EB602DD9E441600005A0894
+:102A70000106B40158000001D504B441841EFE16BD
+:102A8000B601DD9E44160000B4415A080106440117
+:102A90000000FE17D504440EFFFFFE16B601DD9EB2
+:102AA00044060000B400921C9606DD9E44160030D9
+:102AB0005A080106B40158000100D505B441440F7D
+:102AC000FEFFFE16B601DD9E443638144000200895
+:102AD00040202009B403966F921840006008FE174A
+:102AE00044263808B603B4624000E008461C0FFFD5
+:102AF00050108FFFFE5EFE47B62244163804440194
+:102B00000000B441FE17B6014414800CB4019203D6
+:102B10009606C0FD4404800C8428AE40DD9E4436F9
+:102B200034144000200840202009B403966F921806
+:102B300040006008FE1744263408B603B462400023
+:102B4000E008461C0FFF50108FFFFE5EFE47B622C6
+:102B50004416340444010000B441FE17B601441485
+:102B6000800CB40192139606C0FD4404800E8428A4
+:102B7000AE40DD9EFC01B63F8022F38149FFFFA6F7
+:102B8000B41FF10149FFFFCDFC8144163C04B401A0
+:102B900058000001B601DD9E44263804B4224406E4
+:102BA000380492289646C9FBB440843EFE56B620AF
+:102BB0008020B40192089606C8FD44263404B4224D
+:102BC0004406340492289646C9FBB440843EFE561F
+:102BD000B6208020B40192089606C8FDDD9EFC0058
+:102BE000466000838386B82758000001B8A7B8273D
+:102BF00058000100B8A7840149000844B927841E81
+:102C0000FE0EB8A7B927440FFEFFFE0EB8A7FC8042
+:102C1000FC404660008384FE83860493001496067D
+:102C200040749C02FE3FB894965FBF144000E008D9
+:102C3000461F0FFF50108FFFFE7EFE47B994972F5F
+:102C4000B91440024408464FF81F50420FFFFF0ED0
+:102C5000FF07BC94976F4002AC08BD14441E07FFE9
+:102C6000FF4EFF47BD94B815542103FF920A400060
+:102C70002808FE17B89596F74001C008B915463FD9
+:102C8000F80F50318FFFFECEFEC7BB95FCC046004B
+:102C90000083040000169601DD9EFC004640008380
+:102CA00084618384BE1384BEFE1EFF76FE2FB8931C
+:102CB000FE5E4030A008B960440FFEFFFE46FE5F96
+:102CC000B9E096A740012008BA13441FE0FFFE8E2A
+:102CD000FE87BA93FC8046300083968F50418184F2
+:102CE000B604A861A062841CFE0EFE87A8A2DD9E29
+:102CF000462000839627041100609225944DFE47DC
+:102D000014110060DD9E46200083843E04310012D1
+:102D10009606FE5EFE0F14010012DD9EB4404610C2
+:102D2000008014208048A0011400804ADD9EFC40F1
+:102D300046200083506100E48382BB18507100E894
+:102D400058318100BB98BB18509100EC926840311B
+:102D5000A00858318088BB988C0284A0502100F0D4
+:102D600046300083D1222230000022407FFF4031D4
+:102D7000C0088864B666223000022240000140315B
+:102D8000C0088864B6672230000422400003403146
+:102D9000C0088864B669B4628CA192704031C008E2
+:102DA000B66297688C0CD5DD8383B918440FFEFF9B
+:102DB000FE0EB898FCC046200083960F0431001226
+:102DC00040104008440CFFFFFE1EFE0F14010012CD
+:102DD000DD9EFC008440446400C0383088003840E8
+:102DE000090199564031B0089569FEE796D98C41A2
+:102DF000ACE85A2814F4FC8046200083960604317F
+:102E000000269441841DFE1EFE0F14010026DD9E47
+:102E1000462000819606A0D540102008440FFEFFF2
+:102E2000FE1EFE0FA815DD9EC90846200091843EB7
+:102E3000B4629606FE5ED50A5A18010B4620009130
+:102E40009606B4629441841DFE1EFE0FB602DD9EFE
+:102E5000FC00440000C8490007154414500C4660AB
+:102E60000081B40158000004B601FA1849000713A4
+:102E70008386B81C58000100B89C84014900070BE8
+:102E8000B91C44010000FE0FB89C440001F4490045
+:102E900006F9B91C46001000FE0FB89C440001F46E
+:102EA000490006F0FC8000004610008050508080F1
+:102EB000501080B0A281AAA9D9FEDD9E46100080E4
+:102EC000505080B0501080C4A281AAA9D9FEDD9EC6
+:102ED000B4404610008014208047A00114008049AF
+:102EE000DD9E46100080505081405030814CA641FC
+:102EF000A680944CFE579648AE680010000D002046
+:102F0000000C944CFE5796481012800C8CA18C0239
+:102F1000DBEFDD9E461000805050804050308046F0
+:102F2000A641A680944CFE579648AE680010000D4E
+:102F30000020000C944CFE5796481012800C8CA177
+:102F40008C02DBEFDD9EA68180A0949408128005A0
+:102F5000FE8F46100080969010208048A6A9A6C536
+:102F60009494FE9F969010208054A683A6C29494B9
+:102F7000FE9F969010208049A6ABA6EA9494FE9FEF
+:102F8000969010208055A684840FFE86403140081C
+:102F9000464FFF0F0420801250420FFFFEA6FE9FF7
+:102FA00014208012A6ACFE164020400804008015B4
+:102FB000FE26FE1714008015DD9E4610008050503E
+:102FC00080585030805EA641A680944CFE579648AB
+:102FD000AE680010000D0020000C944CFE5796487F
+:102FE0001012800C8CA18C02DBEFDD9EA68180A0EC
+:102FF000949408128005FE8F461000809690102051
+:103000008060A6A9A6C59494FE9F96901020806C1F
+:10301000A683A6C29494FE9F969010208061A6ABD2
+:10302000A6EA9494FE9F96901020806DA684840F4B
+:10303000FE8640314008464FFF0F04208018504262
+:103040000FFFFEA6FE9F14208018A6ACFE1640209F
+:1030500040080400801BFE26FE171400801BDD9E26
+:10306000E606E857FC204670008144F010783807E7
+:10307000800040F03C00DD0F061634446276040305
+:103080008020541087FF920B40002C08D50C541060
+:1030900087FF4000C00804238020461F800F501087
+:1030A0008FFFFE56FE4714138020FCA004038021EE
+:1030B000541087FF920B40002C08D50C541087FF4A
+:1030C0004000C00804238021461F800F50108FFF4E
+:1030D000FE56FE4714138021FCA08387B8225410AB
+:1030E00087FF920B40002C08FE47B9A2FCA080C1CC
+:1030F00049FFFD54541303FF958E04138398440F26
+:10310000003FFE46FE771413839849FFFD40FCA064
+:10311000DD9E46200083960640106008043100C002
+:10312000460FEFFF50000FFFFE1EFE0F140100C000
+:10313000DD9E46200083960640106408043100C0DE
+:10314000460FDFFF50000FFFFE1EFE0F140100C0F0
+:10315000DD9E46200083960F0431000F40102008AA
+:10316000440FFCFFFE1EFE0F1401000FDD9E4620E3
+:103170000083843E0431000F9606FE5EFE0F1401AC
+:10318000000FDD9E4620008396060431000F40109C
+:103190002808440FFBFFFE1EFE0F1401000FDD9EEA
+:1031A00046100083440100000420800EFE17140026
+:1031B000800EDD9E46200083463F7FFF5051003841
+:1031C000B48550318FFFFEE6B665B485463EFFFFFD
+:1031D00050318FFFFEE6B6655A080104841FD50200
+:1031E00084001401000B1401000C040100335A1870
+:1031F000010B58000FFF1401003304010034580084
+:103200000FFFD50B920C400030081401003304016D
+:103210000034920C4000300814010034DD9E46104A
+:103220000083960650508038B485442FFEFF40300E
+:103230002008FEA6FE9FB645B465442FFDFF400062
+:103240002408FE9EFE17B605DD9E462000815051E3
+:1032500000905031009A0820000188419690182271
+:103260008001DBFADD9EE625E833961F46200081CB
+:1032700044F012803817840040F0BC004A003C0043
+:10328000060E1A283600043100238430D51D94041C
+:1032900004310023441FFF0FD517400020080431DC
+:1032A0000023441FF0FFD5104000300804310023F4
+:1032B000441F0FFFD509461FFF0F4000400804318F
+:1032C000002350108FFFFE5EFE0F14010023DD9ED1
+:1032D0008400DD9E46200081540003FF401040081A
+:1032E00004310049460FC00F50000FFFFE1EFE0FB5
+:1032F00014010049DD9EE606E852FC20467000817C
+:10330000546083FF44F013143807800040F03C0001
+:103310004A003C00062E465666168387B930922A2C
+:103320004010A808FF8FBEB0FCA08387B831462F9D
+:10333000C00F50210FFF40634008FE16FE37B8B1A2
+:10334000FCA08387B830462FC00F50210FFF406389
+:103350004008FE16FE37B8B0FCA08387B931922A28
+:103360004010A808FF8FBEB1FCA08387B932922A13
+:103370004010A808FF8FBEB2FCA049FFFC0F40130D
+:10338000400804038398466FC00F50630FFFFF8609
+:10339000FF8F1463839849FFFBFAFCA0DD9E542045
+:1033A0008003E6085410800C90224EF20093964F52
+:1033B00046300081968F44F013C43807800040F0F7
+:1033C0003C00DD0F0824405E7C9CBCE85051809C92
+:1033D000B485841CFE26FE47B625B425440CFFFFA9
+:1033E00040214008FE0ED5725051809CB485841354
+:1033F000FE26944AFE47B62540214808B405461FDC
+:10340000FF3FD54E5051809CB485440FFFCFFE2620
+:10341000944CFE47B62540215008B405461FFCFFDA
+:10342000D53F5051809CB485440FFF3FFE26944EFB
+:10343000FE47B62540215808B405461FF3FFD53096
+:103440005051809CB485440FFCFFFE264010A0081C
+:10345000FE47B62540216008B405461FCFFFD520A2
+:103460005051809CB485440FF3FFFE264010A808FD
+:10347000FE47B62540216808B405461F3FFFD5101A
+:103480005051809CB485440FCFFFFE264010B008F9
+:10349000FE47B62540217008B405461CFFFF5010BA
+:1034A0008FFFFE0EFE1714018027DD9E5051809C79
+:1034B000B485440F3FFFFE264010B808FE47B625EE
+:1034C000B4054021780894029202FE8714218027D7
+:1034D000DD9EDD9EFC4080E0440434385A78012BA8
+:1034E00080C1B420449FE0FF58108002B62080279E
+:1034F00049FFFB174404345097A7B42040632008C9
+:103500004010A402FE77B620802749FFFB0A44043E
+:10351000383CB42058108002B620802749FFFAD6E4
+:1035200044043858B4204010A402FF8FB6C080274E
+:10353000D50EB42084DDFE76B620842149FFFAF151
+:103540004404383CB420FF8EB6C0842149FFFABE43
+:10355000FCC09200C8044407200CD5034407201087
+:10356000B40040003008920CDD9EFC0080C149FF91
+:10357000FFF384408022E246E80538100A0A8C41B5
+:10358000D5FBFC804427201C54000FFFB422922C52
+:103590004010B008FE47B622DD9E44272034540078
+:1035A0000FFFB422922C4010B008FE47B622DD9ED9
+:1035B0004427203854000FFFB422922C4010B0084A
+:1035C000FE47B622DD9E442720548430B462961F05
+:1035D000FE5EFE0FB602DD9E44272054961FB462A5
+:1035E00040102008440FF0FFFE1EFE0FB602DD9EC5
+:1035F00044272058961F40104008B462460FFF0F22
+:1036000050000FFFFE1EFE0FB602DD9E4404009C1C
+:10361000A600DD9E461000810400806E5800000167
+:103620001400806EDD9EFC0044042C1C8441B420F8
+:10363000806258108100B620B42058108080B620D7
+:103640004404281C4414241C49FFFA96FC8046209C
+:1036500000808430504101D0B464961FFE5EFE4766
+:10366000B624B464441FFF0F9404FE5EFE0FB6043C
+:10367000DD9E000044248088843EB4629606FE5E8F
+:10368000FE47B622B462843D9401FE5EFE0FB60290
+:10369000DD9EFC00446400188421AE70A6324420F4
+:1036A000988158000001AE32A63258000002AE32B6
+:1036B000A63258000004AE32A63358000002AE33E2
+:1036C000A63358000004AE33A63358000008AE33CA
+:1036D000A63358000010AE3344040010B640AE715B
+:1036E000A63258000010AE32A63258000020AE328A
+:1036F000A672440FFF80FE0FAE32A633540000FEC8
+:10370000AE33A63358000020AE33A6335800004035
+:10371000AE33490002B3E60344145010A632E91058
+:10372000540000FBAE32B401920840002008B601FC
+:1037300044147000440EFFFFB441FE16D51158002A
+:103740000004AE32B40192084000200858000098EE
+:10375000B6014414700044010000B441FE17B601E4
+:10376000FC8044372044460FC00FB42350000FFFA5
+:10377000FE4646202400FE57B62344372048442303
+:103780000000B423FE46FE574427204CB623B42243
+:1037900046300C00922C4010B00858108252B622CD
+:1037A000B422FE46FE5FB6224427205046300090E9
+:1037B000B422922C4010B00858108240B622B42295
+:1037C000FE0EB60244272004460FFF0FB42250001D
+:1037D0000FFFFE46FE5FB622B462461FF0FF501098
+:1037E0008FFFFE5E46300300FE5FB622462000805B
+:1037F000441FF0FF504101C0B464FE5E58108800C1
+:10380000B624B424FE0E44120000FE0FB604DD9E62
+:103810004620009140004008A0569649FE0FA81689
+:10382000DD9EE604E8284610009144F01838380779
+:10383000800040F03C00DD0F0412202EA00A921000
+:10384000400040085800000AD515A00A9210400018
+:10385000400858000046D50EA00A921040004008CB
+:1038600058000096D507A00A921040004008580062
+:1038700001F4A80ADD9E462FFC0F4610009150214E
+:103880000FFF5A0801080400800EFE864402000063
+:10389000D5060400800EFE8644010000FE87142039
+:1038A000800EA0099206940658000001A809DD9E2A
+:1038B000FC00466000918401A831440001F4A83264
+:1038C0008386B90A460FC00F50000C00FE46581000
+:1038D0008001B98AB90BFE0E58000240B88BB90CB2
+:1038E000440FC0C0FE0E58002001B88CB90D460E22
+:1038F0000E0E500000E0FE0E4610601150108201C6
+:10390000FE0FB88DB90E460FFC0C500000F3FE0EF2
+:103910004411010CFE0FB88E49FFFE7AE603A03673
+:10392000921040004008E91F58000140A8368386E5
+:10393000B80892104000400858000140B888A035EF
+:1039400092104000400858000140A835A03792105E
+:103950004000400858000140A837A07646001400F7
+:103960009649D51E58004900A8368386B80892109B
+:103970004000400858004900B888A0359210400027
+:10398000400858004900A835A03792104000400870
+:1039900058004900A837A076460490009649FE4793
+:1039A000A8768386B9089649FE47B988A0759649D6
+:1039B000FE47A875A0779649FE0FA83746000091EC
+:1039C0008380B9125810BF3FB992BA13441EE080E9
+:1039D000FE5644210048FE57B993FC8046000091F2
+:1039E00050300044B42358108001B623B443843EC1
+:1039F000FE56B623DD9E920044173010B4019606A1
+:103A0000C0FE44173010B401920396065A0001FD1F
+:103A1000DD9E84A0D005400000098CA1D5FCDD9E70
+:103A2000C9084424000C9606A650541080FED50AFE
+:103A30005A18010B4424000C9606A6509401541009
+:103A400080FDFE0FAE10DD9EC90444150000D505B3
+:103A50005A18010544150010AE0ADD9EC90A442417
+:103A60008080960640106008B462460FEFFFD50BC9
+:103A70005A18010F44248080960640106408B462EE
+:103A8000460FDFFF50000FFFFE1EFE0FB602DD9E49
+:103A9000C90444150004D5055A180105441500143D
+:103AA000AC08DD9EC808441480038401AE084415A8
+:103AB0000008D5095A080109441480038442AE88DD
+:103AC00044150018AE09DD9EC80844048003842113
+:103AD000AE4044150008D5095A08010C440480037F
+:103AE0008422AE4044150018A60858000002AE0813
+:103AF000DD9EC90444150000D5055A18010544157A
+:103B00000010AE08DD9E8421C0045A0801068422FC
+:103B100044048003AE40DD9E44048000A60392016D
+:103B20009606C005440480038422AE40DD9E4620F4
+:103B30000081843EA0D59606FE5EFE0FA815DD9E90
+:103B400046000081A0059606DD9E44245014843E64
+:103B5000B4629606FE5EFE0FB602DD9E442510049A
+:103B6000B42292304010C008FE0FB602DD9E44150C
+:103B7000100CB40158000100B601DD9E4415100C74
+:103B8000B40192084000200858000001B601441515
+:103B90001018B40196005A005AFEDD9EFC00440045
+:103BA000012C4900006F4405100C441FFF81AE40FA
+:103BB000441FFF98AE4044151018B40196005A00F7
+:103BC000A5FE4415100CB401920840002008B6016F
+:103BD000FC80C0045A00011FDD9E441480824422F0
+:103BE0000000AE084414800044048080B641B460F4
+:103BF000FE9FB64044240000B641B460FE9FB6402C
+:103C000046200100B641B460FE9FB64046200080C9
+:103C1000D523440480828420AE40441480004404B0
+:103C2000808044210000B641B460FE9FB64044222B
+:103C30000000B641B460FE9FB64044240000B64187
+:103C4000B460FE9FB64046200080B641B460FE9F3F
+:103C5000B64046200100B641B460FE9FB640462003
+:103C60000200B641B460FE9FB64046200400B64153
+:103C7000B420FE8FB640DD9EFC0049FFFCC9FC80ED
+:103C8000842EFE0C8E015A07FF0540000009D5FB6B
+:103C9000DD9E441036B0FE0C8E015A07FF05400031
+:103CA0000009D5FBDD9EFFFFFC0049001699C80501
+:103CB00084013E07F4E0FC8084023E07F4E0490002
+:103CC0000BF1FC80FC0080C0840049000F50CE0541
+:103CD0008006441207BCD5048400441207444900FE
+:103CE0000F678400842749000FC5FC80FC2080E119
+:103CF000C00B5A08010549001550D50684C05A0862
+:103D000002054900154D80C0840249000F3084022D
+:103D1000CF04441207BCD5034412074449000F489E
+:103D2000C604800649000F814900153D49000F8FE8
+:103D30008402842749000F9EFCA0FC01F081490009
+:103D40000F1080C0C805F00149FFFFBED5085A001A
+:103D5000010C49000F09F10149FFFFCA8006490023
+:103D60000EDF49000EE6FC812E07F820DD9EFC00E8
+:103D700049000CC65A080106840044101388D50473
+:103D80008400441075304900292D840084214900A5
+:103D90002937840049000CBDFC80FC0064120043FC
+:103DA00064000008640000084900267E490026B12E
+:103DB000490028928400441000EB490028F849008B
+:103DC00027EE490028034900283649000A7F4900A8
+:103DD000156884003E07F4E1FC802E07F917DD9E8C
+:103DE000FC0049000AB64900085D490016914900E7
+:103DF00015F749000B49490014EC490015F1490039
+:103E00000B8849000C7DC8034900174049FFFF4E4D
+:103E1000490017B049FFFFAD490000CA49000C70C6
+:103E200080C05A08010A44000258802649FFFE3229
+:103E3000800649FFFE3984043E07F91A84004900D0
+:103E400016B48400490000B5490014B949000C5863
+:103E5000C8048401490027E5FC80FC2049000E814C
+:103E600080C049000F0B5A0801058420490028C86A
+:103E70008401490028E080E05A08010884204900B4
+:103E800028BF800749000EFE2E07F9165A08014781
+:103E900049000EF45A08014384E084003E77F91685
+:103EA00049000EF03E77F914CE0749FFFF5F5A082C
+:103EB000010449FFFF4484058428490028938405B0
+:103EC00084214900289D8405490028B5C0FD84202F
+:103ED000840549002895840049FFFF318401842826
+:103EE0005A680204441001904900287C8401802013
+:103EF000490028865A68021C49000EC080C0C817B5
+:103F000084014900289880E05A0801F88026490079
+:103F10002877800749000EB6D50A2E67F9165A6829
+:103F2000010749000EABC8033E67F9142E07F91AC2
+:103F3000C0045A000406FCA049FFFF54FCA049003D
+:103F40001182FCA0FC2084C084E24900282C2E07AA
+:103F5000F9175A000108C0045A00021ED5F784015F
+:103F6000D5123E07F9193E67F91A3E67F9183E6700
+:103F7000F91549000BC55A08010C49000BC75A082E
+:103F8000020684033E07F917D5E18404D5FC3E7789
+:103F9000F917D5DC49000B9B49000BA22E07F91538
+:103FA0003E67F91BC8D349FFFF5AD5D0DD9E4610A6
+:103FB0000081C8060400803358000200D5060420A2
+:103FC0008033440FFDFFFE1614008033DD9E442431
+:103FD0002C148430B462961FFE5EFE0FB602DD9E86
+:103FE00044242C14961FB46240102008440FF0FFA4
+:103FF000FE1EFE0FB602DD9EFC2080C0490003A815
+:104000004900038C44142404445FFFEFB40184414D
+:10401000FE2EB601B40140330802444FFFDF94DDA9
+:10402000FE26FE1FB60144042804B4C0FFAEB6C08D
+:10403000B4C0FFA6FF9FB6C044642C04B4E6FF7E64
+:10404000B6A6B4A6FF2EFEE7B666806249FFF594D9
+:104050004900037149000389FCA0FC00442480103E
+:104060008401B4229646C10BAE103E07F92C3E07E0
+:10407000F9293C0DFE488C013C0FFE484404801099
+:10408000B400920A9606C00E440480118424AE4007
+:104090004900010544072000B40092089606490033
+:1040A00000E9440480108421B40092089606C008F8
+:1040B00044048011AE403E17F92A3E17F929440402
+:1040C0008010B42092279646C104441FFF80AE4062
+:1040D000B40092059606C00544048010FA30AE4044
+:1040E00044048010B42092269646C1044410004037
+:1040F000AE40B40092189606C00544048013842193
+:10410000AE4044048010B40092159606C0054404E5
+:104110008012FA30AE40FC80FC00442480108421E0
+:10412000B40292049606C014FA00AE103E17F92BA2
+:104130003E17F9293C0DFE498C013C0FFE49460013
+:104140000081040000F09203960649000093441495
+:104150008010B401920B9606C00544048011844877
+:10416000AE80B40192039606C005440480108428F2
+:10417000AE4044048010B42092229646C1038424A9
+:10418000AE40B40092019606C00E44048090B40084
+:10419000920196065A080108441480108442AE88A1
+:1041A0003E07F91B44148010B40192199606C0050D
+:1041B000440480138442AE80B40192169606C00671
+:1041C0004404801244100040AE40FC80FC0080C0DB
+:1041D00049FFF4E4462000819786943204610393FA
+:1041E000843BFF8EFF871461039349FFF4D0FC806A
+:1041F00044045028B40092019606DD9E4424501CCD
+:1042000040004008B4229649FE0FB602DD9E4424C9
+:10421000501C441F00FFB46240002008FE5EFE0FE9
+:10422000B602DD9E4407210046102000B440FE5730
+:10423000B6208020B40192199606C8FDDD9E440484
+:104240008004A60292019606C008440480068422D7
+:10425000AE4084013E07F92E440480048421A60266
+:104260009606C00644048006AE403E17F92DDD9E3A
+:104270003E07F4E2DD9E2E07F4E2DD9E4437200087
+:1042800054100001B4834020A008441FFEFFFE66C6
+:10429000FE57B6233E07F4E2DD9E84013E07F4E3B9
+:1042A000DD9E84003E07F4E3DD9EC8074417101826
+:1042B000A608540000FED5085A08010F441710182C
+:1042C000A60858000001AE084417100CB4015800AD
+:1042D0000100B601DD9E5A08020D44171018A60809
+:1042E00058000001AE084407100CB4208420B6200A
+:1042F000DD9E3C0DFE50C00BA4803C13FC9C8E2127
+:10430000E041E805A4408C219649AC40A4803C13D0
+:10431000FC9EE241E90584013E07F4E4D50B3C1D17
+:10432000FE52C108A400880144160034A60096007D
+:10433000B60144060000B400920896065A08010B24
+:1043400044060030B42058108001B620B4209646B0
+:10435000C9FEDD9EFC4049FFF95BE603E80F3C0D1A
+:10436000FE508420AC403C1DFE52C108A4008801D0
+:1043700044160034A6009600B601854044748000BF
+:1043800044948080A7BAB40992C392139606FF861C
+:10439000C61A440480028428AE4049FFF939E60376
+:1043A000E84D44060000B400920896065A080147FA
+:1043B00044060030B42058108001B620B420964640
+:1043C000C9FED53CA63A40101009B40992149606CD
+:1043D000FE0EC01F49FFF91CE60344048002FA20C8
+:1043E000AE40E80449FFFF87D5133C0DFE50C00BDB
+:1043F000A4803C13FC9C8E21E041E805A4408C2164
+:104400009649AC40A4403C03FC9EE220E81785405E
+:10441000A63A40101809B40992169606FE0EC00777
+:104420004404800244100040AE40D50884018D4110
+:1044300049FFFC285CF52711E9A6FCC044160034AE
+:10444000B601DD9E3C0FFE53020F80003C4BFC9EEC
+:104450003C1FFE523C5BFC9D3C2FFE513C3FFE50FE
+:104460003C0BFC9CDD9E3C0BFC9EDD9E3E07F4E479
+:10447000DD9E2E07F4E4DD9E3C0FFE4DDD9E3C0FDD
+:10448000FE4CDD9EFC204414800044048080A68AFB
+:10449000B40092109606FE16C005440480028441C2
+:1044A000AE80A60A4010040944048080B400921132
+:1044B0009606FE0EC005440480028422AE404404E9
+:1044C0008000A6024010080944048080B4009212C3
+:1044D0009606FE0E4E0200B0440480028424AE40D4
+:1044E0003C0DFE513C2DFE538420AC40C2064416C8
+:1044F0000028B4219648AE50C00BA4803C13FC9D0C
+:104500008E21E041E805A4408C219649AC4049FF4A
+:10451000F87FE603E90584C044760030D5194406E7
+:104520000000B400920896065A0801F744060030CD
+:10453000B42058108001B620B4209646C9FED5ECB0
+:1045400084018CC149FFFB9E5CF30801E86E443492
+:10455000800044248080A61A40100C09B4029213F3
+:104560009606FE0EC01A440480028428AE4049FF1D
+:10457000F84FE603E85A44060000B4009208960695
+:104580005A08015444060030B42058108001B62067
+:10459000B4209646C9FED549A61A40101009B402A7
+:1045A00092149606FE0EC03144048002FA20AE40FA
+:1045B0003C2DFE533C0DFE51C208A44088224426E7
+:1045C0000038B4429690AE88C00BA4803C13FC9D8A
+:1045D0008E21E041E805A4408C219649AC4049FF7A
+:1045E000F817E603E90384C0D51044060000B400C0
+:1045F000920896065A0801F9B40758000001B60758
+:10460000B4079606C8FED5F044048000A602401008
+:10461000140944048080B40092159606FE0EC091E1
+:1046200044048002FA30AE403C0DFE4DC0043C0D07
+:10463000FE4DDD2044048000A60240100C09440415
+:104640008080B40092139606FE0EC80E44048000CB
+:10465000A6024010100944048080B400921496060B
+:10466000FE0EC03BD51A440480028428AE4049FFA8
+:10467000F7CFE603E8EC44060000B4009208960683
+:104680005A0801E644060030B42058108001B620D4
+:10469000B4209646C9FED5DB44048002FA20AE4021
+:1046A00049FFF7B6E603E80449FFFE25D5163C0DA1
+:1046B000FE50C00BA4803C13FC9C8E21E041E80519
+:1046C000A4408C219649AC40A4403C03FC9EE220CF
+:1046D000E90484013E07F4E444148000A60A402063
+:1046E000140944048080B40092159606FE16C00595
+:1046F00044048002FA50AE80A60A4010180944040F
+:104700008080B40092169606FE0EC0064404800215
+:1047100044100040AE40FCA044163820B4015800BC
+:104720000100B60144163420B40158000100B6015E
+:10473000DD9E44263820440FFEFFB422FE46B622FA
+:1047400044163420B441FE16B601DD9E44163820CE
+:10475000B40158000001B60144163420B4015800D9
+:104760000001B601DD9E44263820841EB422FE4698
+:10477000B62244163420B441FE16B601DD9E462012
+:1047800000839606043100149441841DFE1EFE0F22
+:1047900014010014DD9E46200083960604310014A7
+:1047A00094438417FE1EFE0F14010014DD9E402169
+:1047B00040084010A008882288204600008014107D
+:1047C0000078DD9EFC41F5818100812280E380C478
+:1047D00046500080C0035A0801188385BA77461FE7
+:1047E000EFFF50108FFFFE56B9F7842349FFEDD736
+:1047F00038149901840249FFF43538039800842263
+:1048000049FFF533FCC181418385B977460010002B
+:10481000FE0FB8F78423840149FFEDC150257FFFC7
+:104820008006F101969049FFFFC4FCC1462000803C
+:1048300096060431007540102808440FFBFFFE1E49
+:10484000FE0F14010075DD9EE604E82E965F4620FB
+:10485000008144F028603807800040F03C00DD0F04
+:10486000041220344010C00804310032460FFF0FFC
+:10487000D50E4010D00804310032460FF0FFD507A6
+:104880004010E00804310032460F0FFF50000FFFC8
+:10489000FE1ED507040100324010F0089404920473
+:1048A000FE4714110032DD9EE608E843964F46208D
+:1048B000008144F028C03807800040F03C00DD0F44
+:1048C00008101A2632404E5C04310028841CD52D75
+:1048D000944A043100288413D528944C04310028CC
+:1048E000440FFFCFD522944E04310028440FFF3FE0
+:1048F000D51C4010A00804310028440FFCFFD5153A
+:104900004010A80804310028440FF3FFD50E4010D2
+:10491000B00804310028440FCFFFD5074010B80875
+:1049200004310028440F3FFFFE1EFE4714110028EB
+:10493000DD9E9200C80444072014D50344072018C4
+:10494000B40040003008920CDD9EFC004404009C42
+:10495000A600E603E92444640C408441A632806248
+:1049600058000008AE32441404404404084049FF93
+:10497000F103A6328441540000F7AE3244140440DF
+:1049800044040840806249FFF0F7440720C0461005
+:104990002000B440FE57B6208020D544490006B020
+:1049A000C8DB44645028B406921096065A08011BCE
+:1049B0002E07F91BC813B40692039606C80FB40657
+:1049C00092019606C00B3C0C001A5A00010C4900DB
+:1049D00022D82E07F928C0E8D50549FFFA005A0861
+:1049E00002F444645028B40692109606C8B52E0707
+:1049F000F91BC813B40692039606C80FB4069201B9
+:104A00009606C00B3C0C001A5A0001A7490022B9B7
+:104A10002E07F928C0E9D5A049FFF9E15A0802F4A8
+:104A2000D59BB40192199606C8FD840149FFFC226A
+:104A3000FC80FC0080C04404809054130001B480CA
+:104A4000845D94C9FEA6FE9FB64046000081845E48
+:104A50008380BB15FE9EFE57B99584003E07F91B67
+:104A6000440480108422AE4049FFF908E603E92A95
+:104A700044140018A60A5A680113540000FBAE0A39
+:104A800044145010B401920840002008B6014414A8
+:104A90007000440EFFFFB441FE16D5135800000409
+:104AA000AE0A44145010B401920840002008580087
+:104AB0000098B6014414700044010000B441FE1790
+:104AC000B601FC8046100081440200000420806E84
+:104AD000FE171400806EDD9E44273010B422922110
+:104AE00096465A1001FDFC0044173000B6018402BE
+:104AF00049FFF791FC80FC004661FFF95003052750
+:104B000049FFFFEC5003048749FFFFE8FC80FC00ED
+:104B10004661FFF95003050049FFFFE05003040020
+:104B200049FFFFDCFC80FC004611FFFF50108F00A6
+:104B3000FE0F49FFFFD3FC80FC004611FFFFFE0F74
+:104B400049FFFFCCFC80FC004601FFFF500002BB88
+:104B500049FFFFC4FC80FC004601FFFF500003CC6E
+:104B600049FFFFBCFC80FC004467300449FFFFC5DF
+:104B700049FFF744B426841EFE0EB606440003E83F
+:104B800049FFF749B40658000001B606440003E89F
+:104B900049FFF74149FFFFD949FFF7304601FFFFC1
+:104BA00049FFFF9C49FFF72A49FFF868E603E80B35
+:104BB00049FFFFD349FFF7224601FFFF49FFFF8E60
+:104BC00049FFF71C44673004440003E849FFF7231A
+:104BD000B426841EFE0EB606440003E849FFF71B08
+:104BE000B40658000001B606440003E849FFF71375
+:104BF0004404800A8424AE408422AE408421AE4026
+:104C0000FC80FC41F08180E180C28143812449FF26
+:104C1000FF74F0015A00FF0649FFFF8749FFF6EED7
+:104C200040A520084095240440634008406498044F
+:104C30004003E008FE3749FFFF5149FFFF6AFCC10E
+:104C400044273010B422922196465A1001FDFC00F0
+:104C500084203E17F95B4417300044600100B60120
+:104C60002E07F95BC00B2E07F9589600C010840080
+:104C70003E07F9584400FFFFFC802E07F958C8F49E
+:104C800084018EC149FFF6C7CEECD5EE3E07F95B35
+:104C900044073014B40092109600FC80FC2180E29E
+:104CA00080C1F08149FFFF29F00149FFFF3E49FF24
+:104CB000F6A54612F0004003A008FE0F406340082E
+:104CC000FE3749FFFFBF80C049FFFF239630FCA19C
+:104CD000FC0044173008B401920594055800000107
+:104CE000B60149FFFF0A49FFF7C9E603E80749FF94
+:104CF000FF344601FFFF49FFFEF18406FA2F4420EE
+:104D000000AC8461848049FFFF7E8406FA2F442032
+:104D100000AD8461848049FFFF764404800A8424C6
+:104D2000AE408422AE404404808844140000B44065
+:104D3000FE57B620B44044120000FE57B62049FF8B
+:104D4000FEE8FC80FC20842C8441840549FFFFA8F8
+:104D500097C0842D8441840549FFFFA297808087F6
+:104D60008405FA2F442000C0846149FFFF4C8086EF
+:104D70008405FA2F442000C1846149FFFF448087E5
+:104D80008405FA2F442000C2846149FFFF3C8086DD
+:104D90008405FA2F442000C3846149FFFF348087D3
+:104DA0008405FA2F442000C4846149FFFF2C8086CB
+:104DB0008405FA2F442000C5846149FFFF248087C1
+:104DC0008405FA2F442000C6846149FFFF1C840536
+:104DD000FA2F442000C78461808649FFFF14FCA09D
+:104DE000FC00441000608441840649FFFF5980C0E4
+:104DF000441000618441840649FFFF52960097B039
+:104E000040002008FE37FC803C0FFE58DD9E440425
+:104E10008000A6039606C00D440480038421AE40A2
+:104E20003C0DFE58C006FC003C0DFE58DD20FC8009
+:104E3000DD9E46200081843E043100149606FE5E0D
+:104E4000FE0F14010014DD9E441470085A08010975
+:104E5000B40192104000400858007823D505B401F1
+:104E6000921040004008B601DD9E4E0500198E01EB
+:104E70004010040AFE0F4010080AFE0F4010100AEE
+:104E8000FE0F4010200AFE0F4010400AFE478C2102
+:104E900084009021C1038C01D5FDDD9E8400DD9E40
+:104EA000FC4D4402001050FF801880C0802F3A2330
+:104EB00014043A209424814683813A2514044492B0
+:104EC00000383A2E142480893A250C0080BF3A2EEF
+:104ED0000C203A220C043A228C2445E20890A5E0EA
+:104EE0003A27940481FE811F3A2794243A2094049F
+:104EF000802F3A2094243A2E0C003A208C20441221
+:104F000008843A240C043A208C24ADC8B0503A20CE
+:104F1000140480013A20142481003A2314043A2412
+:104F20001424B1833A250C0080863A240C203A24BC
+:104F30008C04449204143A220C243A2094048029CC
+:104F40003A2094243A20140480013A2014243A246C
+:104F50000C003A200C20440204083A230C043A20A6
+:104F60000C24ADC0FCCDFC48838150AF80144412AA
+:104F7000004480C0800A81223A208C043A200C240C
+:104F8000A448FA40AC40508F80308420B0084900DB
+:104F900025CB80088420FA40490025C65A98010391
+:104FA0008780C60444120930D5034412093C5804D2
+:104FB00080018C0184E0B61F8D21848384613805D3
+:104FC0001C00F383F48238608000B41F8CC1FF841E
+:104FD00097B1406324D68006F18149FFFF48F4026F
+:104FE0009778405290B7F303382416028C0841E1B9
+:104FF0002808402070014001800C406018D7B0089C
+:10500000949438001602885E4000280888C0B008D2
+:105010008CE13824160A3860160AF1015A780AD150
+:10502000802849FFEB54FCC8808084409AE096D8E1
+:10503000E261E80808320001E26240313C1B804333
+:10504000D5F69C119600DD9EFC4051FFFBE044200C
+:10505000040081408121B008842049002565B18188
+:105060004412004480063A208C043A200C24A448C0
+:10507000B1C4AC40FA408420800749002555842AF9
+:105080004EA3003D4402093C49FFFFD08020804AE6
+:1050900084A344A2089045E20884961040001417A7
+:1050A00040302008B10841C20C008460548180FF68
+:1050B000E301E812388308003885220238840D01A4
+:1050C00054F403FF388E0E0240842808890F388E6E
+:1050D0000E0A8C61D5EC383308008C41383F0C0047
+:1050E0008A69548183FF383382024031A808886876
+:1050F0003833820A5A280AD3D53B4402093049FF83
+:10510000FF958020844084A344A2041445E204084F
+:1051100097104042149740322008B00841C00C005C
+:105120008460548180FFE301E812388308003885E9
+:10513000220238840D0154F403FF388E0E0240849D
+:105140002808890F388E0E0A8C61D5EC3833080098
+:105150008C41383F0C008A69548183FF38339202B6
+:105160004031A80888683833920A5A280AD3B00810
+:1051700049FFEAFC800749FFEB3251FF8420FCC065
+:10518000FC2049000B0A80C049000B0A80A650434E
+:105190000480503280225020002284203862851101
+:1051A00022718000387285091A61FFFF386005118D
+:1051B00022710000387005098C211A617FFF5A188E
+:1051C00009EF5052802450000024DCE4FCA0FC4194
+:1051D00081208002F38180E480C5814149FFFBACDE
+:1051E0008100F00149FFF1B840441C0095728460D1
+:1051F000448204F044F000128440999A97B14E9290
+:10520000001238141800838243C0BC73401E080883
+:105210008825387004023812710190E88AE13874E8
+:1052200099094EA2000B3814180080E24270BC733A
+:1052300038121D11381519098C415A2812E08C7248
+:1052400096D95A3A40DB49FFFF9DFCC1FC008043E0
+:105250008064848080A449FFFFBCFC80FC2080E047
+:10526000800280C149FFFB6884409651E226E8072E
+:1052700038100911381389098C41D5F8FCA0FC209D
+:10528000FD30840049FFFB5895F980A688E6500060
+:1052900004A4D7062A1000011A128001D5FBFCA035
+:1052A000FC2080E0800280C149FFF1568440965185
+:1052B000E226E80738100A0238138A0A8C41D5F82A
+:1052C000FCA02E07FA2ADD9EFC01841FB61FF08188
+:1052D000801F49FFED25840149FFED17840149FF37
+:1052E000ED8D84228401806180A04440003F84448D
+:1052F00049FFEC90840149FFFA44840180208040FA
+:1053000049FFECCD840A49FFECF5460042105000FD
+:1053100008208020844049FFECE049FFEF438401EE
+:1053200049FFEF32840049FFFA8344045508441FC3
+:10533000FF7FB440FE56B620B42058108010B6202F
+:10534000842149FFEBEE84043E07FA2AFC81FC52DB
+:105350004402005C8020809F3A208C043A220C2476
+:1053600050AF800CA4483A200C04800AAC603A206C
+:105370000C24AC404412006880C1509F8018800902
+:105380003A2314043A201424B4E6B190B6E044025F
+:10539000007C81E63A2014043A2794243A2014042D
+:1053A0003A27942451CF802C3A200C00801C3A27B5
+:1053B0008C203A2094043A201424B6E0B1DA440256
+:1053C00000A480273A2014043A2094243A2014049C
+:1053D0003A2094243A200C003A208C2049FFF44EC5
+:1053E000E603811FE9072E07FA2A4410013C38130F
+:1053F0000109440208E03A2E14043A2014248020C3
+:10540000B41CB601441208B880013A2394043A202F
+:1054100014243A2394043A2014243A238C003A208A
+:105420000C204402093C3A240C043A200C2480202D
+:1054300002040000AC08440209303A250C043A206A
+:105440000C24802002050000AC084402091C3A2408
+:1054500094043A2014248020B409B601441208F4BC
+:1054600080013A2314043A2014243A2314043A20E5
+:1054700014243A230C003A200C20FCD2FC0049FFF3
+:10548000EBB0FC80FC00C806440208F44412091C7E
+:10549000D505440208B8441208E049FFEC9CFC80A2
+:1054A00084003E07FA293E07FA28DD9EFC00804171
+:1054B00084205A0801038424CA044402093CD50309
+:1054C0004402093049FFEEC3FC80FC0080C05A084A
+:1054D000010B840249FFEE3F8006842049FFEE6CF9
+:1054E0008006D509840049FFEE368400802049FFFC
+:1054F000EE63840049FFEE95FC80FC01B61FF1814C
+:1055000049FFFFE5B41FF10149FFFFD2FC81FC49CF
+:1055100080E044020001F08644010002F08744006C
+:105520008004F08844004008F08944002010F08A8C
+:1055300044001020F08B44000840F08C44000480AC
+:10554000F08D44000300F08E3C0DFE04F08FF090CF
+:10555000F091C708449208E044A208B88502878504
+:10556000D50785034492091C44A208F48388B00639
+:1055700049FFEC9C80DFCF11440200E4803F3A20D9
+:1055800014043A2094243A200C003A208C20801FE6
+:1055900049FFECC28007D510440200FC803F3A204E
+:1055A00014043A2094243A200C003A208C20801FC6
+:1055B00049FFECB28401490009162E47FA2A8400FB
+:1055C000804A806980A4802049FFF8FE2E17FA2ABD
+:1055D00084003815050149FFED452E17FA2A84038A
+:1055E0003815050149FFED3E2E07FA2A84203804BC
+:1055F000800049FFEE3A2E07FA2A842338048000FF
+:1056000049FFEE334400024049FFEFC9800849FFDB
+:10561000EFF1E6E2E8072E07FA2A40FE00068401D1
+:10562000E8028400802749FFFF6AFCC9FC49441254
+:105630000144B18680E080063A2094043A20142484
+:105640003A2094043A2014243A2094003A2014205A
+:10565000C707448208B8852244A208E0D5064482E0
+:1056600008F4852344A2091C8400490008BC2E4785
+:10567000FA2A840080208048806A80A449FFF8A428
+:10568000800649FFEC134400024049FFEF8880097F
+:1056900049FFEFB0460042105000082080208440AF
+:1056A00049FFEB1B801FCF04441200E4D5034412D2
+:1056B00000FC80C03A2094043A2314243A208C0041
+:1056C0003A230C2049FFEC28FCC92E07FA2F96003C
+:1056D000C00584003E07FA2F8401DD9E2E17FA2EA6
+:1056E0009648C10584003E07FA2ED5072E07FA2DED
+:1056F0009600C0043E17FA2D8401DD9E2E07FA3273
+:10570000DD9E3E07FA32DD9E2E07FA31DD9E3E0712
+:10571000FA30DD9EDD9EFC2049FFF56C2E17FA4025
+:105720005A1801795A0801063C0DFE8F4E0200FA04
+:1057300049FFFAD084008080FA2FFA41846149FF42
+:10574000FA624400009649FFF2A68400FA5980806C
+:105750008461FA2F49FFFA57FA0449FFF29C49FF86
+:10576000EB79840049FFFB67840049FFF1E2840084
+:1057700049FFFB6C8400842149FFF1728401802081
+:1057800049FFF1B984004900079484004900077774
+:10579000840049FFFFB8460000814460080183800F
+:1057A000B91A447450289225944D58108010B99A13
+:1057B000BA1A441FE0FFFE5658108800B99ABA1A68
+:1057C000461FFE0F50108FFFFE5644250000FE5767
+:1057D000B99ABA1A461E0FFF50108FFFFE56462088
+:1057E0001000FE57B99AB9194421F4CE92314010F5
+:1057F000C408FE57B999B407920196065A080104E5
+:10580000480000908EC1840197B149FFF23BCEF46D
+:10581000FCA05A10020448000085C8053C0DFE8F0C
+:105820004E02008049FFFA5684008080FA2FFA5811
+:10583000846149FFF9E8FA0449FFF22D8400808071
+:105840008461FA2FFA4049FFF9DE4400003249FF33
+:10585000F22284014900072D840049000710460008
+:1058600000818380B91A9225944D58108003B99A0B
+:10587000BA1A441FE0FFFE5658108200B99ABA1AAD
+:10588000461FFE0F50108FFFFE5644210000FE57AA
+:10589000B99ABA1A461E0FFF50108FFFFE56B99ADA
+:1058A000B91992314010C4085810ED60B99984219B
+:1058B000840049FFF120840149FFF1278401802001
+:1058C00049FFF0CE840149FFF101840149FFF13124
+:1058D00049FFF1D4E603E80349FFF94749FFF08E99
+:1058E000840080408080FA2F846149FFF98C49FF51
+:1058F000F085840049FFF484840049FFF48A840120
+:1059000049FFFF014460080144745028B407920124
+:105910009606C0078EC1840197B149FFF1B3CEF757
+:10592000FCA0FC00840049FFF15649FFF1A7E60303
+:10593000E80944160000B40158000100B60148000F
+:1059400000844414800444010000B601441480849F
+:10595000B441FE17B60144160030B40158000100EE
+:10596000B6014407210046102000B440FE57B6207F
+:10597000B4404437210092599686CAFBB423460F9F
+:10598000FF0F50000FFFFE0E44160000FE0FB6037F
+:10599000443721044402097D40003008401030099A
+:1059A000B40344472110921440005008FE0FB60380
+:1059B0004437211444160034B4034668000092149E
+:1059C00040005008FE0FB603443721084417211841
+:1059D000B40392084000200858000001B603B40444
+:1059E000920840002008B604B40192084000200844
+:1059F000B601B4A3460FCFFF50000FFFFF46B6A37A
+:105A0000B4A4FF46B6A4B4A1FE2E4457211CB6018F
+:105A1000B40592114000440858000577B605B40358
+:105A2000FE37B603B40494019201B604B401FF87B3
+:105A300044072120B6C1B640B425460F0FFF5000E1
+:105A40000FFFFE0EB605440000793E07FA5D440FD5
+:105A5000FF843E07FA5E84193E07FA5FFC808420CB
+:105A600084403C1BFD2C4442097C802296D1E2609C
+:105A7000E806383208008C418823D5F9FC0044221E
+:105A8000097CFE4A9648381100088C01960149FFAE
+:105A9000F4EC2E07FA5C49FFF4D349FFF0EFE6037C
+:105AA000E90349FFF3C1FC80FC0184003E0000666D
+:105AB00084013E07F81584204400010049FFE7AA4D
+:105AC00044000100842049FFE7B444000100842021
+:105AD00049FFE7BE44400578B69F4412097C442242
+:105AE000097A443209784450009044020EF449FF88
+:105AF000F4AB44003D1649FFF4C14400371449FF9C
+:105B0000F4C0840049FFE7C084003C0BFD2D440035
+:105B1000057749FFFFA649FFFF06FC81FC00C8038B
+:105B2000FA1AD5034400051B49FFFF9BFC80FC00CB
+:105B300044000100842149FFE78B84003C0FFE8D67
+:105B40003C0DFE8D5CF00064E8053C0DFE8D8C0183
+:105B5000D5F644000100842049FFE77AFC802E003E
+:105B60000066DD9E2E07F815DD9EFC00441000FF48
+:105B700080C0442005784402097C49001FD5CE0628
+:105B80004400005A3E07FA5CFC80440FFFA73E0722
+:105B9000FA5C84053E07FA5DFA0C3E07FA5EFA10DD
+:105BA0003E07FA5F841F3E07FA60FC80FC40848554
+:105BB0008C2484A14432097C84D0A68C0490FFFFFD
+:105BC0005A28012D227080012220800090E8904404
+:105BD00097DFFEB6FEBF9690C817382194089CA99F
+:105BE000A7C8387188089CAAA7CA387188084024B9
+:105BF000940A5EF101009DEBE903442000FF9690BA
+:105C000038219C08D50B382190089CA1A7C8387171
+:105C100088089CA2A7CA387188088C838C2C8CA415
+:105C20005A4823CDFCC0FAB34422097C443004A373
+:105C300080800A1000019228381114089C69A7205E
+:105C40008CA238410408DBF5DD9E445004A34422B5
+:105C5000097C4430050780800A1000019228381121
+:105C600014089C69A7208CA238410408DBF5DD9E4E
+:105C7000C8033E17FA85DD9EFC0049FFF3FCFC805B
+:105C8000FC0049FFF3F5FC80FC20490005892E103B
+:105C90000064C92384523E27FA5C4432097C804068
+:105CA0004460004D8401445004812E77F9289D0101
+:105CB000C7063811800838619008D507A7D1387118
+:105CC0008008A7D0387190088C028C424C02FFEFFC
+:105CD00084203E17F928D5125A18011384123E0762
+:105CE000FA5C844080014412097C9CC13820800801
+:105CF0008C0238208C085A0865FA49FFFEB2FCA0D5
+:105D0000FC002E07F8143E07FA5C840149FFFEA947
+:105D100049FFF322FC80FC003C23FD2D2E07FFD41D
+:105D2000842096913C1FFE9596005A28032A5A001B
+:105D30005304480002872E07FFD52E17FFD64000D8
+:105D40002008FE0F5A0048044800027C440FFFA7B9
+:105D50003E07FA5C84053E07FA5DFA0C3E07FA5EE0
+:105D6000FA22FA103E07FA5F3E07FA603E17FA6120
+:105D70003E07FA623E17FA638408480000CE5A28AC
+:105D800001365A080104480000935A0803044800E9
+:105D900000BB5A082004480000C65A0828044800DE
+:105DA00001175A082104480000E05A08220448005C
+:105DB00000F45A082304480001015A08040448006A
+:105DC00000F75A08F3044800012D5A00D004480097
+:105DD0000239440FFFD03E07FA5C3C03FD1C96409D
+:105DE0003E17FA5D9208480001335A2802395A08D2
+:105DF000F60C2E07FFD55A00F2044800022349FF93
+:105E0000FF454800021F5A0861132E17FFD5964818
+:105E1000C1082E17FFD596485A10010448000212F7
+:105E20004400010049FFE6144800020C5A006204D5
+:105E3000480002082E07FFD59600C00D2E07FFD59B
+:105E400096005A0001092E07FFD596005A00020459
+:105E5000480001F849FFF22B480001F45A201004D1
+:105E6000480001F05A00F104480000E084013C0FB2
+:105E7000FE9544320EF4440209643821840038202F
+:105E800004088C215A1810FB2E07FFD52E57FFD679
+:105E900096009668405020085A0010075A001D05C9
+:105EA000FF4F480000E89769480000E52E000066B3
+:105EB000441FFF813E17FA5C3E07FA5DC80C441090
+:105EC000005A3E17FA5E3E07FA5FFA1B3E07FA6079
+:105ED0008405D522440FFFA73E07FA5E84053E07DE
+:105EE000FA5FFA0C3E07FA60FA22FA103E07FA61EE
+:105EF0003E17FA623E07FA633E17FA643E07FA65F8
+:105F0000840AD50A3E27FA5C3E17FA5D3E17FA5E10
+:105F10003E27FA5F840449FFFDA449FFF21D4800B3
+:105F20000191847F84473E07FA5C3E17FA5D3E1775
+:105F3000FA5E3E37FA5F3E27FA603E37FA613E2747
+:105F4000FA62846AFA423E27FA633E07FA643E37F1
+:105F5000FA653E17FA663E27FA673E07FA683E176B
+:105F6000FA69840ED5D93E07FA5C443FFF844400A9
+:105F700000693E37FA5D3E07FA5E3E27FA5F3E173C
+:105F8000FA603E37FA613E07FA623E17FA63840907
+:105F90003E17FA64D5C13E07FA5C84053E07FA5DF8
+:105FA00084043E07FA5E3E17FA5FD5B52E000AE07C
+:105FB0003E07FA5C8401D5B03E07FA5C84063E27B2
+:105FC000FA5D3E17FA5E3E07FA5FD5A53E07FA5C1A
+:105FD000846C840684823E47FA5D3E17FA5E3E0773
+:105FE000FA5F3E37FA603E47FA613E17FA623E07B3
+:105FF000FA633E37FA6484643E27FA653E17FA6610
+:106000003E37FA673E37FA683E27FA693E17FA6A62
+:1060100084233E17FA6B3E07FA6CFA0148FFFF7DB6
+:1060200049FFFE704800010E5A000F044800010AA3
+:106030002E17FFD596485A1801103E07FA5C440403
+:1060400050283E17FA5DB400920196063E07FA5EAC
+:10605000840348FFFF622E07FFD55A000204480060
+:1060600000F12E07FFD73E07FA4049FFFB564800D4
+:1060700000E944001D00D814440000503E07F81405
+:10608000840FD50A440008004C5040DC4400005006
+:106090003E07F81484093E000065480000D35CF216
+:1060A0009D01E82044000400D807440000503E074A
+:1060B000F8148404D5F15CF28401E80B5A51000411
+:1060C000480000C0440000503E07F8148401D5E4A5
+:1060D00044000500D8D8440000503E07F814840559
+:1060E000D5DB44003200D807440000503E07F814C6
+:1060F000FA00D5D25CF2B2014EF2009044003000BA
+:106100004C5040A084113E07FA5C440000303E072A
+:10611000FA5D84013E07FA5E440000573E07FA5FCD
+:10612000440FFF803E07FA60841F3E07FA613E0776
+:10613000FA62460000814410009C0400001985EAC0
+:1061400040003C08920FFE0C500003A840003C1792
+:106150008C1944F003E840003C17960184275CF05A
+:1061600007D03E17FA638020E803441007D0964812
+:106170003E17FA64841A84203E17FA6584413E076C
+:10618000FA66444FFF90841F846A3E37FA673E07E1
+:10619000FA683E07FA693E27FA6A3E47FA6B3E07FD
+:1061A000FA6C3E07FA6D3E27FA6E3E47FA6F444F8F
+:1061B000FFC03E27FA703E47FA7184823E47FA726A
+:1061C000444FFF803E47FA73848F3E17FA743E17A0
+:1061D000FA753E17FA763E27FA773E47FA788484B6
+:1061E0003E47FA79FA9D3E47FA7A3E37FA7B3E27D8
+:1061F000FA7C844C3E27FA7D84463E27FA7E3E1781
+:10620000FA7F3E07FA803E07FA813E07FA823E0790
+:10621000FA83FA1848FFFE8144003300D80844008E
+:1062200000503E07F814FA0248FFFF3744003400DC
+:10623000D808440000503E07F814FA0348FFFF2D29
+:10624000FC80FC002E07F8145A0852064400005146
+:106250003E07F8142E0000655A08010884C03E600D
+:106260000064490007F1D5325A08040884C03E6032
+:106270000064490009FFD52A5A08050884C03E6019
+:10628000006449000DC8D5225A0009FA5A080F0EB9
+:106290002E07FFD684C02E17FFD72E27FFD83E60CB
+:1062A000006449000F1ED512541000FD5A18100842
+:1062B00084C03E60006449001073D5085A08130971
+:1062C00084C03E600064490012C93E600065FC80E5
+:1062D000FC004400006449FFE07644001F2C49FFA5
+:1062E000E07D44001B2C49FFE0844400019049FFFD
+:1062F000E08BFC80FC4051FFFAE08420FA50B010A3
+:1063000049001C12B1984402017480263A201404FA
+:106310003A2094243A201400B1E0440201943A2037
+:10632000942080273A2014043A2094243A20140020
+:106330003A209420441201B4B00C3A209400441244
+:1063400001C43A201420B0073A208C003A200C20D7
+:10635000440201CC508F80243A2010003A241020AF
+:10636000854039C42800400E0013C0135A000312A0
+:10637000B01038007202C80D380372024090040851
+:1063800049FFEF7B49FFF2D8B05088093800F20A84
+:106390008D415AA80CE884C0B01038001A02F08170
+:1063A000C8078CC15A6808FA51FF8520FCC0B007A5
+:1063B000878038A300004095040840048013F082D1
+:1063C0009401F08340FE2407E8ED4FC300133883A7
+:1063D0009A0149FFDF1644200120802842100873EB
+:1063E000B00C964938201901B028924249FFDF705D
+:1063F0004DC5401438839A0149FFDF034420012032
+:106400005014024042100873B00C9649382019010C
+:10641000B028924249FFDF5C4014F0018E21944C79
+:10642000400E00139749401E280694C48440F1840E
+:10643000508F80A0F40440110409C4038823D503BD
+:10644000882596493844060254F2001F5AF01F1A54
+:1064500040F2180954F7801F5AF01F1404FF8001FE
+:1064600039E7810150FF5DEB5CF78213E90650FFCD
+:1064700064275CF78213E805504200413844060A5D
+:106480003844060240F2480954F7801F5AF01F2191
+:1064900040F2300954F7801F5AF01F1B04FF80029E
+:1064A00005EF800140F03C0040F7801339EF3D01DB
+:1064B00050FF5DEB5CF78213E90650FF64275CF741
+:1064C0008213E80644F41000888F3844060AF1036A
+:1064D0008C428801969096015A2820AE505E0001A9
+:1064E0004C55401638139A01F585F18449FFDE8931
+:1064F00044200120F10442100873B00C9649382062
+:1065000019018008924249FFDEFFF5054C54C01680
+:1065100038139A01F18449FFDE74F104442001200C
+:106520005010824042100873B00C9649382019016F
+:106530008008924249FFDEE8505E000155C280FFAC
+:1065400048FFFF42FC49441201D8B18680063A2038
+:1065500094043A2014243A208C003A200C20842001
+:10656000B00CFA4849001AE08421101F8031101F36
+:10657000803D8402441201F0100F8032100F803EE3
+:106580008001809F3A200C043A220C24B1C33A20A7
+:106590008C04A4008027AC203A208C24AC08800610
+:1065A00049FFE4BAB00C49FFE50A801F49FFE4CD7A
+:1065B0008007813F49FFE51CFCC9FC26441201FC11
+:1065C00080DF3A2094043A2314243A2094043A2396
+:1065D00014243A209400801F80E63A23142049FFB7
+:1065E000E465FCA6FC2C4412022CB18C80063A20F7
+:1065F00094043A2014243A2094043A2014243A2093
+:1066000094003A2014208420B006FA4849001A8CDD
+:10661000B1C14412025C80073A2094043A20142449
+:10662000B421B620800649FFE441B00649FFE45B8F
+:10663000800749FFE445FCACFC0144120270801F56
+:106640003A208C003A2F8C2049FFE444FC81FC0066
+:10665000C80449FFFE3FFC804400006449FFDEB3EC
+:1066600044001F2C49FFDEBA44001B2C49FFDEC149
+:106670004400019049FFDEC8FC80FC00E606E80605
+:106680004412031038008000D502840049FFDED296
+:10669000FC80FC00E606E80644120308380080008F
+:1066A000D50284008C01960049FFDEB9FC80FC0015
+:1066B0005A00010EC0045A00021CFC80840049FFED
+:1066C000EA462E00006E49FFFFC4D52A49FFEA3F83
+:1066D0004400006449FFDE7744001F6C49FFDE7E02
+:1066E00044001F6C49FFDE8544000190D5178401EA
+:1066F00049FFEA2D440003E849FFDE654400271006
+:1067000049FFDE7746200081461271008382B8106F
+:106710009601FE0FB8904400271049FFDE758400F3
+:1067200049FFFFB9FC800000E604E824FC0044F0C7
+:10673000473C3807800040F03C00DD0F04141E2267
+:10674000840049FFE15B840149FFE1468401D50FE4
+:10675000840049FFE1538401D5078401D5028400F8
+:1067600049FFE14C840049FFE137840049FFE13DE6
+:10677000FC80DD9EFC0049FFED8080603E000ADC6D
+:10678000441210FC4402157C442002402E40006D4F
+:1067900049FFF55EFC804402157CDD9E440210FC3E
+:1067A000DD9E44020F90DD9EFC00C002840149FF83
+:1067B000DE65840049FFDE54FC80FC0084008020FC
+:1067C00049FFE0668400842149FFE062FC80FC0010
+:1067D0008401842049FFE05C8401802049FFE05867
+:1067E000FC80FC4980204402027850AF800C3A20A3
+:1067F0001000440202843A2F90203A2010003A25DB
+:10680000102044220290B0063A2110003A201020B5
+:106810004422029C509F80243A2110003A24902068
+:10682000442201CCB1CC3A2110003A2390204422DA
+:1068300002A8B18F3A21100080BF3A231020C9036B
+:106840008005D5125A180104800AD50E5A10020D7F
+:106850005A1803048009D5085A1804048007D5047F
+:106860005A180506800649FFDD6CFCC95A1006EA75
+:10687000FCC9FC038420844C80C0801F490019544B
+:10688000441202B4B0033A2090003A201020CE0304
+:10689000801FD5035A68010449FFDD67FC83FC00B3
+:1068A000840049FFFFA0840049FFFFE5840049FF01
+:1068B000E04D840049FFE07C49FFFE4649FFFE941D
+:1068C00049FFFEBC840049FFE65F4400024049FFE7
+:1068D000E6714400024049FFE662840949FFE6751B
+:1068E000840349FFE67B446208F4441000FA840004
+:1068F00049FFE50349FFF4E738130101840049FF2C
+:10690000E3B1441000FA840249FFE4F749FFF4DBE5
+:1069100038130101840249FFE3A5441000FA8405FD
+:1069200049FFE4EB49FFF4CF3813010146600081D1
+:10693000840349FFE39749FFE13104030391920A7D
+:1069400040002808580001C01403039149FFE11FCB
+:106950000403002C461FFC0F920694065800002DDD
+:106960001403002C0403002C50108FFF462002D08B
+:10697000FE0EFE171403002C0403002D920694064D
+:106980005800000A1403002D0403002DFE464600A3
+:1069900000A0FE471413002D0413002D460C0FFF1A
+:1069A00050000FFFFE0E4610A000FE0F1403002D36
+:1069B0000403002F92069406580000041403002FCD
+:1069C0004400028049FFE488840049FFFEEF49FF4C
+:1069D000FC8149FFE47F3E00006EFC802E00006ECB
+:1069E000DD9E2E00006DDD9E2E00006CDD9EFC0005
+:1069F00080C049FFE570800649FFDBF78400842CE6
+:106A00005A68011F49FFE4CD8402842A49FFE4C982
+:106A10008403842A49FFE4C58405842C49FFE4C12A
+:106A20008407842C49FFE4BD8400802049FFDB7C7F
+:106A30008400842249FFDB7844020FF4D54149FFEA
+:106A4000E4B08401842C49FFE4AC8402842A49FF29
+:106A5000E4A88403842A49FFE4A48404842C49FF25
+:106A6000E4A08405842C49FFE49C8406842C49FF1F
+:106A7000E4988407842C49FFE4948401842049FF2E
+:106A8000DB538401802049FFDB4F8400842249FFCF
+:106A9000DB4B8400842349FFDB478401842449FFC6
+:106AA000DB438401842549FFDB3F8401842649FFC1
+:106AB000DB3B8401842749FFDB3744021078441014
+:106AC000004249FFE136FC80FC2184C2F08180E273
+:106AD00080015A10010384C149FFFF8BCF0C84034E
+:106AE00049FFDDDC840349FFE168F001802649FFAE
+:106AF000F2ADFCA1840249FFDDD1840249FFE15DD2
+:106B0000F0018026844049FFF230FCA1FC008400A3
+:106B100049FFFDB5840084203E00006D3E00006CFE
+:106B200080412E00006E49FFFFD1FC80FC20441400
+:106B30008090440FFFEFB44146700081FE16B6010D
+:106B400044048010FA20AE40FAC2507383D4B407D4
+:106B5000920B9627C0078EC1C605840149FFE89BAA
+:106B6000D5F744048010FA20AE4044148090B4015C
+:106B700058000010B601FCA0FC0049FFF5C15A08FE
+:106B8000010944145028B401920196065A0001FDEF
+:106B9000FC80FC015A080106F08149FFFFEFF0017B
+:106BA00049FFDC53FC81FC2084E080C0490011D502
+:106BB000840049FFDC4A49FFFFBB49FFEEC83E772E
+:106BC000F92C49FFEB703E77F92B5A6801058006D6
+:106BD00049FFFFE1FCA0FC00840149FFFFE62E070E
+:106BE000F92BC01284C03E67F92C49FFEB5C3E676D
+:106BF000F92B49FFFDE449FFFB7F49FFFDEA8400D3
+:106C000049FFFFD3FC803C0C001A5A0001ED4900FB
+:106C100011B82E07F928C0E4D5E6FC00840149FF2D
+:106C2000FFC42E07F92BC8053C0C001A5A0801FBBB
+:106C300084C03E67F92C49FFEB3684003E67F92B90
+:106C400049FFFFB3FC80FC01B61F2E00006D49FF19
+:106C5000E483F081B41F49FFDEAB44100240B41F4F
+:106C600049FFE485840249FFFD6149FFFFD8F00137
+:106C700044100240B45F49FFF315840149FFFD56FB
+:106C8000840149FFFF92FC81FC492E60006E840064
+:106C900049FFFEAF840249FFDD0180068420844164
+:106CA00049FFF163840449FFFD9EB186441202C08E
+:106CB00080063A2094043A2014243A2094043A207E
+:106CC00014243A2094003A201420440202F0803F19
+:106CD0003A2014043A2094243A200C003A208C20C4
+:106CE000801F49FFE119800649FFE0E084003E076C
+:106CF000F92A840180FF49FFFF5849FFDA6F2E0708
+:106D0000F92AC02D84003E07F92A840049FFFF4D6F
+:106D100049FFFF63840049FFFD664412022C800690
+:106D20003A2094043A2014243A2094043A2014245B
+:106D30003A2094003A201420440201D880273A20B7
+:106D400014043A2094243A200C003A208C20800726
+:106D500049FFE0E2800649FFE0A9FCC93C0C001AAB
+:106D60005A0001D24900110D2E07F928C0C9D5CB10
+:106D7000FC002E00006E49FFF3CC840049FFFC7F2D
+:106D800084202E20006C2E00006E49FFFE9F8400A0
+:106D900049FFFF5B2E10006D2E20006C2E00006E50
+:106DA00049FFFE942E00006E49FFF3B32E00006EE3
+:106DB00049FFF43E49FFF4A4C8092E00006E49FFC4
+:106DC000FC482E00006E49FFFCF1840149FFFCAE37
+:106DD00049FFF35649FFFCFD840149FFFEE6FC80B4
+:106DE000FC0049FFE13FFC80462000829667A154E9
+:106DF000443FFFC19509FEEEFEE7A8D4A154443FED
+:106E0000E0FF4040A008FEEEFEE7A8D4A0D4464F25
+:106E1000FC1F50420FFF4050C408FEE6FEEFA8D40E
+:106E2000A114463E0FFF50318FFFFEE64010E008F0
+:106E3000FE5FA854A1149606441FFFBF94C6FE66C9
+:106E4000FE5FA854A114441FDFFF40303408FE66E3
+:106E5000FE5FA854A054463FFBFF50318FFF4040D7
+:106E60005808FE5EFE67A854A0D4461DFFFF5010D0
+:106E70008FFF40007408FE5EFE0FA814DD9EFC002C
+:106E800084C03E67F92C49FFEA0E3E67F92B2E07B6
+:106E9000F92BC00584003E07F92BFC803C0C001A3E
+:106EA0005A0001FA4900106D2E07F928C0F1D5F3F8
+:106EB000FC0049FFFC8E840149FFFE7749FFFFE19A
+:106EC00049FFFC7D49FFFC58840049FFFE6EFC80B1
+:106ED000FC40449204F084A0FB42810945C020009C
+:106EE000848099EC97F980C438349C004261A8737F
+:106EF00038F019113830991140378C014E340003A5
+:106F0000FEDA95B988C222F3000040F78C07E80248
+:106F1000ACF038341C0080E44271A87338F01D11C5
+:106F20005EF7BFC1E80638F09D115EF7BFC1E90307
+:106F300013C300008C815A4812D68CB297695A5AF2
+:106F400040D1FCC0FC0044000100842049FFDD80EA
+:106F500084214400010049FFDD7B840849FFE69B52
+:106F600044000100842049FFDD73440000513E07C6
+:106F7000F814FC80FC4044742C1484CFB527409452
+:106F8000980210900000B4079208FE36AE08B427AD
+:106F90008401922CFE46AE504414241444242C1C2C
+:106FA000B421FF8EAF98B4229232FE46AE60B42276
+:106FB0009233FE46AE68B4229236FE0EF108AE0859
+:106FC000FCC0FC403C8DFE955A88016480C580E47D
+:106FD000814383815A08FF055A18FF51FCC05A08A3
+:106FE000FE4A5A18FE4844142C1454410001B4417E
+:106FF000440FEFFF40423008FE8640911004806845
+:107000008048B721440428144414241449FFDDB4F3
+:10701000800A49FFE7DE44042414802849FFDD810B
+:1070200044242C1C97C64043C808B4E2440BFFFF1D
+:10703000FFC6FFE7B6E29786B40240534C08466F9E
+:10704000FF7F50630FFFFF86FFAFB6C2000F8020A7
+:10705000B462960640105808460FFBFF50000FFF21
+:10706000FE1EFE0FB6024414241C4404281C804853
+:10707000D50D49FFE7AE5BC0FF05801C49FFE7B2B5
+:1070800044042814441424148441806249FFDD74AC
+:10709000FCC0FC4180E03C0DFE955A080132812580
+:1070A0008144800280C1F7815A30FF05842049FF66
+:1070B000EBFD5AA80F045A90010C46100081838101
+:1070C000B83358000200B8B3840049FFFC92000FA7
+:1070D00080285A080F06000F802C5A000F04490020
+:1070E0000E5E4400FFFF4C60000CF001802649FF5B
+:1070F000E10450130042F001964949FFFE73FCC1C0
+:10710000FC42F0813C0DFE95F38201CF8034008F6C
+:10711000803800AF803C049F80105A08015C80C119
+:1071200080E280245A40FF078003F58349FFEBBECD
+:10713000F5035A500F06F002802549FFE1325BC08B
+:107140000107801C001F803049FFD7EE5A800F05D1
+:10715000800849FFD9E55AA00F05800A49FFDA13D4
+:107160004400FFFF5A9001054C604005FCC24C6092
+:10717000002FF001802649FFE0C050130042F001CB
+:10718000964949FFFE2F5A70FF0CE6F5E902FAE333
+:10719000441208F4F00138109D0149FFFE235A986B
+:1071A000011A49FFFB1649FFFD7149FFFC19F081E7
+:1071B00049FFFC19F08249FFFC19F083F102F0014C
+:1071C000F20349FFFC8349FFFAFAFCC25A78FFDF59
+:1071D000D5E9FCC2FC03F181B1034412035880A439
+:1071E0003A208C043A228C24A4489EC1AC68922890
+:1071F000E023002F800CE8038C21D504E040E90354
+:107200009C51960884403852080096508CA1D806AC
+:107210008001F10149FFE029FC838C415A280AF5DD
+:10722000FC83443204F084408860FA824251102486
+:10723000961038519400D1068C415A2820F9440008
+:1072400000FFDD9EFC4C49FFFAABF0882E07FA499F
+:107250002E67FA47F0892E07FA4B2E87FA48F08BF3
+:107260002E07FA4C2E77FA4A5410000F9204960615
+:10727000F08D2E07FA4DF18C5410000F9204F08F10
+:10728000841F100F8059100F805A100F805B100F51
+:10729000805C100F805D100F805E100F805F840097
+:1072A0003C0BFD1C3C0DFE95F18E2EA7FA4E2E9741
+:1072B000FA4F5A080149F0095A00FF1146000081AF
+:1072C000842004000023961FF087F00949FFFF8403
+:1072D000F009842349FFFF80D5038400F0875AA872
+:1072E000FF045A90FF12500F805FB61F501F805A44
+:1072F000500F8059502F805BB0D7504F805D505F4A
+:10730000805E49FFFE398441B65F800A802980A2F1
+:107310008465848049FFFE57F20D8400F281F20EED
+:1073200040132008F282F20F97C6F283B61FF7844B
+:107330004010A004442000FF8060F40BF50C49FFCE
+:10734000FEE1D5038400F08749FFFA39840049FF44
+:10735000FC2C85004630008240041008F090540454
+:1073600000FF84A0F08AB403F110920B882540003E
+:107370002C08FE0FB603A019A1D954A000FFA01934
+:107380004413F000A1999529FE0E409030099720F2
+:1073900046000FC08024FF86F00AF393F592F49123
+:1073A00049FFFF41FA2280484220047354738FC082
+:1073B00054150020800292E6948A5415001F40A1C3
+:1073C00004045413801F97EE95FAFFCFF108F411CF
+:1073D0004073A00840A51C0438A081099C61964810
+:1073E000F00A49FFFF20FA2254448020804892D2BC
+:1073F0004220047395225414801F409204045413B5
+:10740000001F97AE95B2FF8FF512F1084063200878
+:10741000409498048CA138908909F3135A5810A508
+:107420008D015A88099B44000240FA41F08A46A027
+:1074300000828410FE1450000350F0919610F50A5B
+:107440008480F090F595F292B40A541287FF920B63
+:1074500040002C08FE0FB60AB40AF111920B8824E2
+:1074600040002C08FE0FB60A804AA011A1D154801A
+:1074700000FFA0114413F000A19194E1FE0E409092
+:10748000300996D846000FC08023FF86F010F49490
+:10749000F39349FFFEC8F212FA228062423004736D
+:1074A00054738FC05414002040F0880892E654149E
+:1074B000001F408784045413801F97EE95FAFFCF76
+:1074C000F1084073A00840841C0438808D09F31330
+:1074D000F0109C59964849FFFEA6F212FA228062EB
+:1074E0004230047380035434802092D25414801F9D
+:1074F00094DA409184045413001F97AE95B2FF8F25
+:10750000F414F108F51540632008409498048CA108
+:107510008C8138908109545287FF5A481095F00A9F
+:107520008E418C10540007FFF08A5A28088449FFC6
+:10753000EE292E07F91CC00449FFEC54D503440F73
+:10754000EDED3C0BFD1C3C0DFE955A08012BF0099E
+:107550005A00FF0AF007842049FFDE87F0078423E2
+:1075600049FFDE83006F805F000F8059001F805A43
+:10757000002F805B003F805C004F805D005F805E7D
+:10758000B6DF49FFFD20F00E441000FAB61FF00FE1
+:10759000F30BF08184008040F40CF50D49FFFD7B76
+:1075A00049FFFCD2FCCCFC4181008123F58180C2E3
+:1075B0008144B63F2E77F0E649FFF8EF838046001E
+:1075C0000080B43F1480004714800049840149FFC3
+:1075D000DE948404B43F49FFDE9049FFF8FA49FF86
+:1075E000FC5049FFF8EC801C8029844049FFEE38AC
+:1075F000F501CD1493219669E229E80F40229C16EB
+:10760000C804C1038CC297B142031C73381E151104
+:10761000381501098CA1D5F0FCC15A58010F95B15C
+:10762000894684009641E229E807381E0111381581
+:1076300001098C01D5F8FCC15A58021B94F9844009
+:107640009651E229E81540411C16C804C1038CC1BB
+:1076500097B140510C96CC04C1038CC697B142033C
+:107660001C73381E0911381501098C41D5EAFCC17B
+:10767000FC4051FFF5F049FFF893F0878420442047
+:107680000480500F81104900124F44020358B05734
+:107690003A200C043A208C24A400AC08000F805C33
+:1076A000441203648C019600F08AB01A3A209000CC
+:1076B0003A2010208420844CB01D490012352E073A
+:1076C000FA492EA7FA4BF0862E07FA4A2E77FA4788
+:1076D000F0895405000FF0882E07FA4C2E67FA48FF
+:1076E000F08B2E07FA4D50FF80B0F08C2E07FA4E2B
+:1076F000F08D2E07FA4F5410000F92049606F08F6B
+:107700002E07FA50F18E5410000F9204F091841F4E
+:10771000F190100F8055100F8056100F8057100FEA
+:107720008058100F8059100F805A100F805B2E1751
+:10773000F0E72E07F0E64290802444020370B06028
+:107740003A2014043A2094243A200C00440203887E
+:107750003A208C20802F3A2014043A2094243A2096
+:1077600014043A2094243A201400440203B83A2026
+:107770009420B0663A2014043A2094243A200C0055
+:1077800050FF80E0440203D03A208C20802F3A2022
+:1077900014043A2094243A2014043A2094243A20E1
+:1077A00014003A209420F5078421500284801A1294
+:1077B0008001D8FE84003C0BFD1CB01A49FFD5C1E6
+:1077C000B01D49FFD5D2461000808410042080707F
+:1077D000FE16580000081400807049FFE24FE603CF
+:1077E000E804840949FFD61BB02C49FFDB5FB020B9
+:1077F00049FFDB92840349FFF799840049FFE54084
+:107800004417201C46800081B401920C40003008CF
+:10781000B60144172024B401920C40003008B60190
+:107820000424003A460FF8FF50000F8FFE16462042
+:10783000050050210040FE171404003A0424003BC8
+:107840008418FE16580000041404003B840049FF0D
+:10785000D667840349FFD697042400384600CC0C31
+:1078600050000FF3FE16462A22A28C48FE1714047D
+:10787000003846000080845F14200047142000492F
+:107880000404039784415800020080625014065C8F
+:107890001404039750040A5C49FFD96E840149FF20
+:1078A000DC3A46100083460F3FFF042080EE500074
+:1078B0000FFFFE1644242C14140080EEB40244146E
+:1078C0002C1CF092B401B462F093440FE0F0FE1E61
+:1078D00058000001B602B441460FFB3F50000FFFB5
+:1078E000FE16462000C0FE178441B60180624404A3
+:1078F00028144414241449FFD93F8441806244046D
+:10790000281C4414241C49FFD9378401842049FFD2
+:10791000E7CD46200082460C080CA05450000080A1
+:10792000FE0E44110001FE0FA8143C0DFE955A08EE
+:10793000011A4073A008408398044410FFFF4C8054
+:107940008012F006F50940002008FF47F586D10AAD
+:10795000E2A8E904148F800681055064004297B1C3
+:10796000D5084400004044600100F086448000C017
+:107970008401802849FFDCC18026840149FFFA3256
+:107980008400842149FFDC718026840546600081E3
+:1079900049FFFA288401842649FFE7580413039716
+:1079A000460F81C050000FFFFE0E4610082DFE0F3F
+:1079B0001403039704130395440FF03FFE0E580081
+:1079C00000401403039504130399460FFC0F500065
+:1079D0000FFFFE0E44170000FE0F84418062140367
+:1079E00003995013065C50030A5C49FFD8C58441D3
+:1079F000806250030A545013065449FFD8BD844195
+:107A0000806250030A645013066449FFD8B58404A9
+:107A1000802849FFDC720413002F440FC0FFFE468C
+:107A2000581084001413002F0413002DFE46581024
+:107A300081001413002D0413002CFE0E58002D009D
+:107A40001403002C840049FFE69C840149FFE6A54D
+:107A5000840184208444846244400030FAA049FFB9
+:107A6000D8D904130017440FFEFFFE0E14030017AD
+:107A7000A03658000001A8363C0DFE955A08014377
+:107A8000F0085A000F0904030023F6089204961F19
+:107A9000F089D5048400F08984CDF00B5A08FF05E5
+:107AA000F00C5A00FF12500F805BB61F501F80561B
+:107AB000500F8055502F8057B0D6504F8059505F8F
+:107AC000805A49FFFA5984E1F00BF10C804780A7F6
+:107AD000B6FF8465848049FFFA76F00FB6FFF08127
+:107AE000F0104410FFFFF082F011442000FFF083FB
+:107AF0008400F08480678007F40DF50E49FFFB02D7
+:107B0000D5048400F08984CD840049FFF84E4610E6
+:107B10000080460555555000055514008047140057
+:107B2000804949FFD85E49FFF654840149FFF83D7A
+:107B30003C0DFE95C00493445AA80F1DF00A8546DB
+:107B40009BF0E0EAE92149FFF99C49FFF63849FF3B
+:107B5000D8A0F08B49FFD845F00BC01650050001A6
+:107B600054A000FF802A840149FFE67049FFF631E6
+:107B7000D5E9F008E20AE8048E0154A000FF840170
+:107B8000802A49FFE66349FFF61A840049FFF80D91
+:107B9000F00A9BF0E147E90754A380FF8401802AA3
+:107BA00049FFE654E147E81284208ACAB0D79C898D
+:107BB00088239611A7498CA1DE069600842149FFEF
+:107BC000DB54D50480225A2809F349FFF5F84665AD
+:107BD0005555840149FFF7E95063055584408006F7
+:107BE000806980A28028504F811049FFFCDE80060A
+:107BF0008440466AAAAA806980A250630AAAF10654
+:107C0000504F859049FFFCD18006806980288441CF
+:107C1000504F811084A049FFFCC880068069F1069E
+:107C20008441504F859084A049FFFCBF406488097F
+:107C3000500F8110501F8590F20749FFF94B97B103
+:107C40008520440000FF40A0240CFA024204802456
+:107C50009601F08A507F8110800A8028F20A80669F
+:107C6000808784A149FFFCA18D28800AF106F20AD1
+:107C70008066504F859084A149FFFC975A9820E375
+:107C80008007501F8590F20746A0303049FFF92247
+:107C9000500503038520F08BF78AF00B40748013A6
+:107CA00040A0240C800A802880478066F40A84A2C1
+:107CB00049FFFC7B8D22800AF10680478066504F89
+:107CC000859084A249FFFC715A9808E9F00A501F78
+:107CD0008590F20749FFF8FE2E07F91CC00449FF02
+:107CE000E881D503440FEDED3C0BFD1C4600008000
+:107CF000843F14100047141000490410041784DE58
+:107D0000581081001410041704100406FE76141095
+:107D10000406840149FFD9FFF11244042C14844164
+:107D2000B620F11344042C1C8062B62044042814AD
+:107D30004414241449FFD720844180624404281C41
+:107D40004414241C49FFD71846000082A044FF8E2B
+:107D5000A984A084441EFFFFFE56A844840149FF65
+:107D6000F4E5B03849FFD8A2B02649FFD8D5840140
+:107D700049FFE507840049FFE51084018422806102
+:107D800080A084444440003F49FFD74484208401BC
+:107D900049FFE58C49000803840049FFF52484006D
+:107DA00049FFF569840049FFF46A49FFDF67E6038C
+:107DB000E804840049FFF46F3C1DFE955A18012623
+:107DC000F0085A000F05F00949FFDA4F006F805B99
+:107DD000000F8055001F8056002F8057003F8058AD
+:107DE000004F8059005F805AB6DF49FFF8ECF01071
+:107DF000441000FAB61FF011F30DF08184018040A9
+:107E0000F40EF50F49FFF94749FFF89E51FF8A101C
+:107E1000FCC0FC492E07FA472E87FA49F08D2E0741
+:107E2000FA482E67FA4EF08E2E07FA4AF08F2E0788
+:107E3000FA4BF0882E07FA4C5410000F9204960665
+:107E4000F08A2E07FA4DF1895410000F9204F08C3D
+:107E5000841F100F8041100F8042100F8043100FBD
+:107E60008044100F8045100F8046100F80472E076A
+:107E7000FA45F18B5A0808082E17FA4F2E97FA5038
+:107E8000F187D50B5A0805062E97FA4FF687D505C8
+:107E9000449000FF149F800784203C1BFD1C5A085F
+:107EA000052646000082A04458108001A844A08402
+:107EB00044110000FE57A8448400802049FFF79633
+:107EC0008400802049FFE4F246100081440FFDFF4A
+:107ED00004208033FE16140080338400842149FF7F
+:107EE000DA608400802049FFD11F840049FFD4E874
+:107EF000840049FFD4F93C0DFE9584E05A080176D0
+:107F000084E05A80FF0F4600008184200470002323
+:107F1000800849FFF9618008842397DF49FFF95CF5
+:107F2000F0075A08FF045A90FF12500F8047B61FFF
+:107F3000501F8042500F8041502F8043B0D1504F8E
+:107F40008045505F804649FFF81785418029F0073A
+:107F5000804A8465848080AAB75F49FFF834F00DB9
+:107F6000F20E40102008F00A8520F081F00BFE5739
+:107F7000F082F00CB73FF083F00F442000FF400088
+:107F80002802F08480698009F408F50949FFF8BAED
+:107F90002E07FA455A08082A96324E050004800A30
+:107FA000D502800949FFE02A5413000146000082EF
+:107FB000C913A04458108001A844A08444110000B3
+:107FC000FE57A844400318095413003E9606922118
+:107FD00049FFF70CD50AA084843EFE56A844A0842D
+:107FE000441EFFFFFE56A84449FFF7642E07F91C04
+:107FF000C00449FFE6F7D503440FEDED3C0BFD1C33
+:10800000840149FFD45D840149FFD46E2E07FA45EF
+:108010005A080808840049FFF5C849FFF3D0D5196C
+:108020005A08051846000082843EA084FE56A844E3
+:10803000A084441EFFFFFE56A844461000810400A1
+:1080400080335800020014008033840049FFF4D1CB
+:108050003C0DFE955A0801422E07FA455A080816AB
+:1080600054030001C80C46000082843EA084FE56E2
+:10807000A844A084441EFFFFFE56A84497B24E6554
+:108080000005840049FFDFBA5A80FF0A8007842078
+:1080900049FFD8EB8007842349FFD8E7006F80476A
+:1080A000000F8041001F8042002F8043003F80442A
+:1080B000004F8045005F8046B6DF49FFF784F00B34
+:1080C000441000FAB61FF00CF308F08184008040E1
+:1080D000F409F50A49FFF7DF49FFF736FCC9FC4010
+:1080E00051FFF6B080E080C18122842044200480CA
+:1080F000B01449000D19842044200480500F84D00E
+:1081000049000D122E07FA482E17FA47F08E2E0757
+:10811000FA492E87FA4AF08F2E07FA4B2EA7FA4F0C
+:10812000F0872E07FA4C5420000F92049606F0892F
+:108130002E07FA4DF2885420000F9204F08B2E0780
+:10814000FA4EF28AF08C2E07FA50F090841F100F2E
+:108150008049100F804A100F804B100F804C100F79
+:10816000804D100F804E100F804F84003C0BFD1C83
+:108170003C0DFE955A0001084073A008FFBF400463
+:108180008013D50884CA5A10FF0380C12E07FA460F
+:108190009606F086F0065A08011446000082A044B4
+:1081A00058108001A844A08444110000FE57A84440
+:1081B0008400802049FFF61AF00649FFDF1F49FFBF
+:1081C000F2ECF09149FFF2ECF08D840049FFD37896
+:1081D000840049FFD3893C0DFE9584E05A0801468E
+:1081E00084E05A80FF0F4600008184200470002341
+:1081F000800849FFF7F18008842397DF49FFF7ECF7
+:10820000F00C5A08FF045AA0FF12500F804FB61FFF
+:10821000501F804A500F8049502F804BB0D3504F91
+:10822000804D505F804E49FFF6A78521F00C802AD3
+:1082300080498465848080A9B73F49FFF6C4F2096C
+:10824000F00EF281F20A40102008F282F20B840054
+:10825000F283F20FB61FFE57149F8004F210806065
+:10826000F407F50849FFF74E49FFF6242E57F92881
+:108270009628C0072E07F91CC03D49FFE5B3D53C41
+:10828000812050AF84D04C933FF749FFF613F20D95
+:108290008400B0D49F31F111381081114E93001138
+:1082A00038150109381181095A68011FA5509A69CA
+:1082B0009649974BAD504E540018FE4AD514385588
+:1082C0000111E0A1E8033815010938F18111E02F0F
+:1082D000E803381181094C924008381501013851E2
+:1082E00081018A25AC508C018C425A0A40D68D21DE
+:1082F000D5CB440FEDED3C0BFD1C46000082843EC7
+:10830000A084FE56A844A084441EFFFFFE56A84445
+:10831000840149FFD2D5840149FFD2E6C608F006A0
+:108320005A08010D840049FFDE69D508F50D500299
+:1083300084801A628001D8FED5F33C0DFE955A0860
+:10834000012A5A80FF0A8007842049FFD78E8007C0
+:10835000842349FFD78A006F804F000F8049001F98
+:10836000804A002F804B003F804C004F804D005FC3
+:10837000804EB6DF49FFF627F00A441000FAB61F18
+:10838000F00BF307F08184008040F408F50949FF01
+:10839000F68249FFF5D951FF8950FCC0FC4051FFDE
+:1083A000F53849FFD07BF08E842044200480500FA4
+:1083B00081C849000BB9842044200480500F8648AE
+:1083C00049000BB22E07FA4B2E27FA49F0892E07E7
+:1083D000FA4CF2875410000F92049606F08B2E0789
+:1083E000FA4DF18A5410000F9204F18CF08D2E1783
+:1083F000FA47841F100F8041100F8042100F8043F6
+:10840000100F8044100F8045100F8046100F8047DA
+:108410008400F1862E77FA4A2E87FA4E2EA7FA4F5D
+:108420002E67FA483C0BFD1C49FFF1BAF088840125
+:1084300049FFDDBF2E07FA4554938001F106F2078C
+:108440005A0832102E67FA482E07FA49406320086E
+:10845000FF872E77FA4A85215A18FF15840AD5110D
+:108460005A00330640632008FF97D50A2E67FA4763
+:108470002E07FA4840632008FF872E77FA498400C8
+:10848000F0863C0DFE955A0801455A70FF114600D2
+:108490000081842004000023961FF087800749FF95
+:1084A000F69B8007842349FFF697D5038400F08765
+:1084B0005A88FF045AA0FF12500F8047B61F501F62
+:1084C0008042500F8041502F8043B0D1504F8045A3
+:1084D000505F804649FFF5508441B65F8008802A8E
+:1084E00080A28465848049FFF56EF10B8400F181E0
+:1084F000F10CB61FF182F10D149F8004F18344202A
+:1085000000FF80268060F409F50A49FFF5FBD503DA
+:108510008400F08749FFD0BBC82D2E07FA405A00CF
+:10852000022A84013E07FA2CFA2E3E07FA2B840B0E
+:1085300049000558840B842149000562840149FFE4
+:10854000D09C49FFD0A45A00010C840B490005734C
+:108550005A0801F984003E07FA2C3E07FA2B840BD7
+:1085600084204900054D2E07FA2CC80484013E07DB
+:10857000F92849FFDB83E603E904840049FFCF7E45
+:10858000840049FFCF6D840049FFF12D840049FF2D
+:10859000F076840149FFF07F49FFF02649FFF00F94
+:1085A000840349FFF0C3840049FFDE6A4900048365
+:1085B000840349FFD93844007FFF490004898400BF
+:1085C00049FFD95B840049FFD857840049FFD20492
+:1085D00049FFDAB8F08F840049FFDAAB840149FF24
+:1085E000D41949FFD9FD49FFD25D5A0001FE84012B
+:1085F00049FFF2DB49FFF0ED4610009104008011C5
+:1086000058000002140080112E07FA455A083275EE
+:10861000F00884204420048049000A862E67F92847
+:1086200097B0C6092E07F91C4E0200A449FFE3DAF1
+:10863000480000A244948008F0068C02E2C0E8F3EF
+:10864000840149FFF2A849FFF41CB409920296067E
+:10865000C806490004962E07F928C0F884041004BF
+:108660008000840049FFF297E6C2E94350AF80489A
+:10867000800A441000C049FFE604F206800AF308AD
+:108680008420504F8648505F81C850A100015A682D
+:108690000217F206388005113882050938828509EB
+:1086A0005A280124A4988A489691408100114E8549
+:1086B000000512818000D519FE92D51638200511CB
+:1086C00038820511E102E8033822050938F28511E4
+:1086D000E04FE803382285094C654008382205013F
+:1086E000388285018A48AC988C218C665A18C0D192
+:1086F0008CC197B1D5A25A083397840149FFF24B38
+:108700002E07F928C0138400B19249FFF244800675
+:10871000441000C049FFE5B58420F00844200480DF
+:1087200049000A0284208466D518852344648008A1
+:1087300049FFF3A7B40692029606C8064900042131
+:108740002E07F928C0F88404AE305004FFFF409093
+:1087500000134E93FFEFD5D8F40842008C24382341
+:1087600005118C21382200095A18C0F848FFFF5C17
+:10877000440FEDED461000913C0BFD1C04208011D0
+:10878000841DFE161400801149FFD92A840049FF78
+:10879000F20C840049FFDC0D840049FFD33BF00F4D
+:1087A00049FFD9C7840149FFD11749FFE6692E0760
+:1087B000FA2C5A00011D84003E07FA2C3E07FA2BC2
+:1087C000F00E49FFCE5B840049FFF00D840049FFA5
+:1087D000EF56840049FFEF5F49FFEF06840149FF30
+:1087E000D74B3C0DFE955A080134D50A49FFE7885E
+:1087F000C8E349FFCF4249FFCF4AC8FED5DD5A70D2
+:10880000FF0AF007842049FFD530F007842349FF91
+:10881000D52C006F8047000F8041001F8042002F41
+:108820008043003F8044004F8045005F8046B6DFB4
+:1088300049FFF3C9F00C441000FAB61FF00DF3091C
+:10884000F08184008040F40AF50B49FFF42449FFCD
+:10885000F37B51FF8AC8FCC0FC4051FFF6A82E07ED
+:10886000FA49FA58F0832E07FA4B2E67FA50F08433
+:108870002E07FA4C5410000F92049606F0862E072D
+:10888000FA4DF1855410000F9204F187F08884208E
+:10889000B00C49000949842044200480B0164900E6
+:1088A0000943500F84D88420442004804900093CA7
+:1088B00084003C0BFD1C5A60FF0540930013D50259
+:1088C000FB3849FFEF6AF08949FFEF6A80E08400D6
+:1088D0008020808080A0442208F44432091C49FF93
+:1088E000DF734680008249FFEF6A840149FFF15D32
+:1088F00084C08D1044A208F484003815190149FF82
+:10890000D3B138151901840349FFD3AC38151901C7
+:1089100044A2091C840249FFD3A53805180084200D
+:1089200049FFD4A338051800842349FFD49E380595
+:108930001800842249FFD49949FFEF4B49FFF2A167
+:1089400049FFEF3D84A0503F84D840A28013E34903
+:10895000E843F38BF58A49FFEF3C49FFF29249FF68
+:10896000EF2E8047840051EF80585044FFFFF30BF7
+:10897000F50AF109381081114EA30015381181094B
+:10898000381F01095A98012302F1000040178401A1
+:10899000964940F0801112F100004EF40018FE4A92
+:1089A000D51438F1811140F78407E80338118109A3
+:1089B00038FF0111E02FE803381F0109DC073811E7
+:1089C000810138FF01018A2FAC508C018C425A0A78
+:1089D00040D28CA1D5BBB428841EFE0EB608B428A4
+:1089E000440EFFFFFE0EB608840149FFCF698401E3
+:1089F00049FFCF7AB0CC80A73801990150238480F9
+:108A00002A128001E0204000BC1A9601DAFA3801EF
+:108A100099098CC15A60140448FFFF6E8400441009
+:108A2000FFFF8040384181019740E2818C01401274
+:108A30003C1B4022BC1B5A0814F7440208F4ACB893
+:108A400038000901AC7BAC39440000FAAC3A2E077F
+:108A5000F91CC00449FFE1C6D503440FEDED3C0B02
+:108A6000FD1C3C0DFE955A08011AF0035A00FF0A3E
+:108A70008400802049FFD3F98400842349FFD3F583
+:108A8000F007441000FAB61FF008F304F0818400E8
+:108A90008040F405F50649FFF2FE49FFF25551FF0B
+:108AA0008958FCC0FC0044043010B40092089600C1
+:108AB000C01544143008841EB4414464300CFE16C2
+:108AC000B601B40658000001B606840149FFD8E398
+:108AD000B40658000002B606FC804414004046204C
+:108AE0008100B6414464300CB601B4069204960687
+:108AF000C8E14400006449FFD8C53C00056F8C0103
+:108B000096015CF000643C08056FE9F0D5D3FC40A9
+:108B10004464808846A01000B406469020004000BF
+:108B20002804B606B4064474550840002404B6066A
+:108B3000B427440FFFBFFE0EB6078421800749FF0C
+:108B4000CFF0440458888437B440FE56B6208421C0
+:108B500049FFCFBCB427440FFF7FFE0EB607B427F2
+:108B6000440FFFEFFE0EB6078421800749FFCFD9DF
+:108B7000B40640A02804B746B40640902404B726A3
+:108B800049FFD546E603E81F44142C0C46000100BB
+:108B9000B441FE178441B60180624404280C441499
+:108BA000240C49FFCFE944142C1846000400B441BA
+:108BB000FE178441B6018062440428184414241826
+:108BC00049FFCFDA49FFD524E603E82B44142C14DF
+:108BD000B40158001000B601840549FFD9FA844158
+:108BE0008062440428144414241449FFCFC544046B
+:108BF0002C1C441BFFFFB440FE56B620B440461068
+:108C00000080FE57B620B44046100400FE57844151
+:108C1000B62080624404281C4414241C49FFCFACB5
+:108C20004660008149FFCFBA041303A08410FE0EF2
+:108C3000140303A00413039F460F0FFF50000FFF00
+:108C4000FE4646204000FE571413039F0413039F63
+:108C500046270000944C9224FE571413039F0413DC
+:108C6000039EFE0E46107000FE0F1403039E49FF84
+:108C7000CF8E46000333500003334414500C1403CA
+:108C8000003414030036B40158000001B601440456
+:108C9000009044100064AC40840049FFDB08441697
+:108CA000200446001000B441FE17B60144142C18ED
+:108CB000460BFFFFB44150000FFFFE16B6014414EF
+:108CC0002C1C440FFFEFB441FE168441B6018062B4
+:108CD000440428184414241849FFCF4E8441440406
+:108CE000281C4414241C806249FFCF4649FFD490BD
+:108CF000E603E81044142C0446000080B441FE173B
+:108D00008441B6018062440428044414240449FFC9
+:108D1000CF3349FFD47DE603E940840849FFD959A0
+:108D2000840049FFD95F84418062440428144414BC
+:108D3000241449FFCF2144142C0C460FFEFFB441EC
+:108D400050000FFFFE168441B60180624404280CD7
+:108D50004414240C49FFCF1044042C04461008008E
+:108D6000B440FE57B620B440461FFBFF50108FFFA3
+:108D7000FE56B620B44046100080FE57B620B440E0
+:108D800044140000FE578441B62080624404280445
+:108D90004414240449FFCEF0FCC0FC00840149FFC8
+:108DA000CBBF840349FFCBDF840049FFCC6584003F
+:108DB00049FFCBE9840349FFCC07840049FFCC126B
+:108DC000840149FFDA05FC80FC008400441000FAAD
+:108DD00049FFD2938402441000FA49FFD28E8401E5
+:108DE000441000FA49FFD2898403441000FA49FF75
+:108DF000D2848404441000FA49FFD27F441000FA60
+:108E0000840549FFD27A840149FFD8D38403842A98
+:108E100049FFD2C78400842349FFC986FC80FC0136
+:108E2000F08149FFD3F5E603E904F00149FFDE03D1
+:108E3000FC81FC00840149FFCE1A840149FFC9C2AC
+:108E4000840149FFCCFC840049FFEC33840049FFD6
+:108E5000EC16840149FFCC2D840149FFD15C8401CB
+:108E600049FFD169840149FFCC24840149FFD181A4
+:108E7000840149FFCD25840149FFCD36840149FF96
+:108E8000CD4C49FFD3C5E603E8058401842F49FF93
+:108E9000D32349FFD3BDE603E90349FFD3BD49FF0F
+:108EA000D3B7E603E80349FFD3C0840449FFD3D115
+:108EB000FC80FC0049FFD3EF49FFD45549FFD4FAA9
+:108EC000840149FFD3D949FFDDFFFC80FC0049FF45
+:108ED000D4A1FC80FC004400706649FFDF97840148
+:108EE000842049FFD59F8401802049FFD59B8400C1
+:108EF000802049FFD5AB8420FA0E49FFD5CB8400F2
+:108F000049FFD5D28400802049FFD5F58400802018
+:108F100049FFCF8C840049FFD5F88420840149FFA4
+:108F2000D59F840049FFD5D28400842149FFD58E86
+:108F30008421440000D249FFD5AD840149FFD5B456
+:108F40008400842149FFD5D78401802049FFCF6E5A
+:108F500049000044FC80FC0080C05A08010D8400D8
+:108F60003E07F929441001F484024900003B8402C1
+:108F70008026D5038402842049000042FC80FC0046
+:108F80002E07F929C00784024900003184003E07FA
+:108F9000F92984024900004F5A0801043E07F928C4
+:108FA000FC80FC0049FFD5E5FC80FC005A08010B61
+:108FB000FE0B960149FFD5D449FFD5E249FFD5D92B
+:108FC000FC8049FFD5EDFC803C0005923C100592E9
+:108FD00096014C00FFFBDD9E84003C080571DD9E80
+:108FE00044221A0438110109DD9EFC0080C049FFAB
+:108FF000FFED44121A2438009909FC8080605A1849
+:109000000110FC2080C180E049FFFFF13C20057188
+:1090100040131C0CFE5796493C180571FCA0844176
+:109020003C00057140110C0CFE4BFE463C180571CE
+:10903000DD9E3C1005714010800E9646C9038001EC
+:10904000DD9EFC0080C049FFFFC144121A24442267
+:109050001A0438109901382119018A019601E20297
+:1090600056078001FC803C0005928C0196013C086B
+:109070000592DD9E3A1FA43C3AFFBFBC6462A40285
+:109080009DB4647204023A6F9C3C646200029FB219
+:109090006462000364000008490002023A6F9C0405
+:1090A0006462A403647204033AFFBF843A1FA404F9
+:1090B000640000043A1FA43C3AFFBFBC6462A402EF
+:1090C0009DB4647204023A6F9C3C646200029FB2D9
+:1090D0006462000364000008490001E33A6F9C04E5
+:1090E0006462A403647204033AFFBF843A1FA404B9
+:1090F000640000043A1FA43C3AFFBFBC6462A402AF
+:109100009DB4647204023A6F9C3C646200029FB298
+:109110006462000364000008490001C43A6F9C04C3
+:109120006462A403647204033AFFBF843A1FA40478
+:10913000640000043A1FA43C3AFFBFBC6462A4026E
+:109140009DB4647204023A6F9C3C646200029FB258
+:109150006462000364000008490001A53A6F9C04A2
+:109160006462A403647204033AFFBF843A1FA40438
+:10917000640000043A1FA43C3AFFBFBC6462A4022E
+:109180009DB4647204023A6F9C3C646200029FB218
+:109190006462000364000008490001863A6F9C0481
+:1091A0006462A403647204033AFFBF843A1FA404F8
+:1091B000640000043A1FA43C3AFFBFBC6462A402EE
+:1091C0009DB4647204023A6F9C3C646200029FB2D8
+:1091D0006462000364000008490001673A6F9C0460
+:1091E0006462A403647204033AFFBF843A1FA404B8
+:1091F000640000043A1FA43C3AFFBFBC6462A402AE
+:109200009DB4647204023A6F9C3C646200029FB297
+:109210006462000364000008490001483A6F9C043E
+:109220006462A403647204033AFFBF843A1FA40477
+:10923000640000043A1FA43C3AFFBFBC6462A4026D
+:109240009DB4647204023A6F9C3C646200029FB257
+:109250006462000364000008490001293A6F9C041D
+:109260006462A403647204033AFFBF843A1FA40437
+:10927000640000043A1F943C3AFFBFBC6412A4028D
+:10928000642204023A1F883C641200029E4A64125F
+:109290000003441000A438108202DD213A0F840438
+:1092A00064020043640000086402A403641204031F
+:1092B0003AFFBF843A1F94043A0F8004640000040C
+:1092C0003A1F943C3AFFBFBC441000A438108202FD
+:1092D000DD213AFFBF843A1F94043A0F80046400F2
+:1092E0000004D5003A0F803C8400D5EB3A0F803C57
+:1092F0008401D5E73A0F803C8402D5E33A0F803CE5
+:109300008403D5DF3A0F803C8404D5DB3A0F803CE0
+:109310008405D5D73A0F803C8406D5D33A0F803CDC
+:109320008407D5CF3A0F803C8408D5CB3A0F803CD8
+:109330008409D5C73A0F803C840AD5C33A0F803CD4
+:10934000840BD5BF3A0F803C840CD5BB3A0F803CD0
+:10935000840DD5B73A0F803C840ED5B33A0F803CCC
+:10936000840FD5AF3A0F803CFA00D5AB3A0F803C62
+:10937000FA01D5A73A0F803CFA02D5A33A0F803CF8
+:10938000FA03D59F3A0F803CFA04D59B3A0F803CF4
+:10939000FA05D5973A0F803CFA06D5933A0F803CF0
+:1093A000FA07D58F3A0F803CFA08D58B3A0F803CEC
+:1093B000FA09D5873A0F803CFA0AD5833A0F803CE8
+:1093C000FA0B48FFFF7F3A0F803CFA0C48FFFF7A08
+:1093D0003A0F803CFA0D48FFFF753A0F803CFA0EB9
+:1093E00048FFFF703A0F803C4400001F48FFFF6AAF
+:1093F00084016404C002440200016404E00345D215
+:109400000F203FC8000045F25FF88400420E0021A3
+:10941000490000314900033FD5009200FC0044029E
+:1094200000004422073844107B708A4049000356EC
+:109430004402073844221A4884208A4049000374B1
+:10944000FC8084006405E403841F64030403640354
+:10945000240364122402440F0FFFFE0E640224034F
+:10946000641200028418FE0E640200036400000807
+:10947000DD9EFC0049FFFFE764008002921EC006EB
+:1094800064008402962EC002D50049FFFFC9641211
+:1094900000436400000864000008FC80DD9EDD9E3F
+:1094A000DD9EDD9EDD9EDD9EDD9EDD9EDD9E440417
+:1094B0008004A6019606C005440480058421AE40C0
+:1094C000DD9E44048001A600C805FC0049FFD7DCEE
+:1094D000FC80DD9EFC0044048000A60349FFDC996B
+:1094E000FC804414800444048084A688B40096065A
+:1094F000FE16C0038401AE08DD9EFC00440480001B
+:10950000A60349FFD30BFC8044148014A6089606DA
+:10951000C0098401AE0844148094B40158000001CD
+:10952000B60144148014A60892019606C00984026C
+:10953000AE0844148094B40158000002B601DD9EC8
+:10954000FC0049FFD67EFC8044048004A6029202FF
+:109550009606C005440480068424AE40DD9E441473
+:109560008004A60B92019606C0054404800784423D
+:10957000AE80A60B9606C005440480078421AE4049
+:10958000DD9E44048008B42092249646C103FA204C
+:10959000AE40B40084219606C00644048008AE4064
+:1095A0003E17F95144048008B42092219646C10622
+:1095B0008422AE4084213E17F950B40092029606F0
+:1095C000C005440480088424AE40DD9EDD9EFC007E
+:1095D00049FFD545FC80FC0049FFD5A0FC80FC007C
+:1095E00049FFC763FC8044148008B40192089606C2
+:1095F000C005440480098441AE80B40192099606F6
+:10960000C00F440480098422AE4084013E07F95A09
+:1096100044045028B4009206961F3E07F959DD9E77
+:10962000FC0044048008B40092129606C05844140A
+:109630008088B40192129606C0524404800A844481
+:10964000AE80B441440DFFFFFE1644673004B601FE
+:10965000B426841EFE0EB606840A49FFD313B40650
+:1096600058000001B606840A49FFD30C49FFDA6DA1
+:109670004400008749FFDA6244173010B4019606AF
+:10968000C0FE44173010B401920396065A0001FD43
+:1096900044673004840A49FFD2F5B426841EFE0EC6
+:1096A000B606840A49FFD2EEB40658000001B60699
+:1096B000840A49FFD2E74414808884013E07F958A0
+:1096C000B44144020000FE17B6014404800A84221B
+:1096D000AE403C0DFE558C013C0FFE554404800805
+:1096E0008421B40092109606C00C44048088B40013
+:1096F00092109606C0064404800A3E17F95CAE40FC
+:1097000044048008B40092119606C00E4404808878
+:10971000B40092119606C00884013E07F95B440428
+:10972000800A8422AE40FC80441480088441B40145
+:1097300092189606C0064404800BAE803E27F91CA2
+:10974000B40192199606C01D4404800B8422AE40D9
+:1097500084003E07F91C46000081441FFEFF503084
+:109760000070B443FE56B623B443441EFFFFFE56BA
+:10977000B623B443461FEFFF50108FFFFE56B623AB
+:1097800044048008B400921A9606C00E441470086F
+:10979000B40192104000400858007823B6014404F8
+:1097A000800B8424AE4044048008B400921B9606CB
+:1097B000C0054404800B8428AE40DD9E4404800430
+:1097C000A60292039606C005440480068428AE4093
+:1097D000DD9E4414800CB40192109606C00544042A
+:1097E000800E8441AE80B40192119606C0054404F7
+:1097F000800E8422AE404414800CB401921296066E
+:10980000C0054404800E8444AE80B40192139606D1
+:10981000C0054404800E8428AE404414800CB4017A
+:1098200092149606C0054404800EFA40AE80B4013E
+:1098300092159606C0054404800EFA30AE404414DA
+:10984000800CB40192169606C0064404800E442093
+:109850000040AE80B40192179606C0064404800E04
+:10986000441FFF80AE404414800CB4019218960649
+:10987000C0054404800F8441AE80B401921996065D
+:10988000C0054404800F8422AE404414800CB4010F
+:10989000921A9606C0054404800F8444AE80B40139
+:1098A000921B9606C0054404800F8428AE404414E1
+:1098B000800CB401921C9606C0054404800FFA4047
+:1098C000AE80B401921D9606C0054404800FFA30A4
+:1098D000AE404414800CB401921E9606C0064404A7
+:1098E000800F44200040AE80B4014E0400074404C1
+:1098F000800F441FFF80AE40DD9E4404800CB420E6
+:109900009646C1038421AE40B40092019606C0057C
+:109910004404800C8422AE404404800CB420922283
+:109920009646C1038424AE40B40092039606C00557
+:109930004404800C8428AE404404800CB42092245B
+:109940009646C103FA20AE40B40092059606C005C3
+:109950004404800CFA30AE404404800CB4209226BB
+:109960009646C10444100040AE40B40092079606EB
+:10997000C0064404800C441FFF80AE404414800C99
+:10998000B40192089606C0054404800D8441AE805F
+:10999000B40192099606C0054404800D8422AE40AD
+:1099A0004414800CB401920A9606C0054404800D4C
+:1099B0008444AE80B401920B9606C0054404800F27
+:1099C0008428AE404414800CB401920C9606C00565
+:1099D0004404800DFA40AE80B401920D9606C00595
+:1099E0004404800DFA30AE404414800CB401920E51
+:1099F0009606C0064404800D44200040AE80B401A9
+:109A0000920F9606C0064404800D441FFF80AE40AE
+:109A1000DD9E4404800044148080A680B4219646D4
+:109A2000FE56C1038421AE40A60040100409440440
+:109A30008080B40092019606FE0EC00544048000AA
+:109A40008422AE4044148000A60840200809440443
+:109A50008080B40092029606FE16C0038404AE080D
+:109A6000A60840100C0944048080B40092039606B6
+:109A7000FE0EC005440480008428AE40DD9EDD9EBD
+:109A8000DD9EDD9EDD9EDD9EDD9EDD9EDD9EDD9EFE
+:109A9000DD9EFC004416200446001000B441FE1771
+:109AA000B601440000663E000AE049FFDFFF4414AF
+:109AB000303446000400B441FE17B60144071018C4
+:109AC0008420AE4149FFD90649FFD93E49FFD167FD
+:109AD00049FFD23A8400FC80806054F10003E91B06
+:109AE000E644E9195441800354508003DC14C50A4C
+:109AF000525280049A95996908408001184180016A
+:109B0000D9FC40510809C507956A9969968FA30940
+:109B1000AB19D9FEC207994A08408001184180015B
+:109B2000D9FCDD9E8060E644E91A54518003C508E3
+:109B3000525280049A95996B18118001DBFE4051B6
+:109B40000809968FC50C956A995D96484040A00813
+:109B5000FE674040C008FE67AA59DBFF995AD3044C
+:109B600018118001D5FDDD9E0000000000000000FE
+:109B7000B01DB01D41011220FF07FF07050A0B00B1
+:109B8000E8040200DC040200D0040200C004020069
+:109B9000B00402009C040200880402007004020069
+:109BA000580402003C0402000B0B0B0C0C0C0C0CB8
+:109BB0000C0D00000105000702060408030900005F
+:109BC000030405060708090A0B0C00000304050638
+:109BD0000708090A0B0C0000020201010606040531
+:109BE0000302000400030503020303033A015001CA
+:109BF000620178013A015001A0017801BA01120214
+:109C0000D0028C014003AE016201C001FC01CA0117
+:109C1000D801E20108010801080108010C010C014A
+:109C20000C014001B4016801CA0100023C026E024D
+:109C30000801180152021E0126012E010001020333
+:109C40000405060708090A0B0B0A0908070605049C
+:109C500003020100000102030405060708000102D7
+:109C600000010203040506070802010000010203C7
+:109C700004050607080000010001020304050607A9
+:109C800008000100387000003870000038700000D3
+:109C90003870000038700000387000003870000024
+:109CA0003870000038700000387000003870000014
+:109CB0003870000001000200020001000480000072
+:109CC00008400000102000002010000040080000A4
+:109CD00080040000000300003870000038700000AD
+:109CE00038700000000000000000000000000000CC
+:109CF0000000000052020000520200009202000028
+:109D0000D20200000000000000000000000000007F
+:109D1000000000009000000090000000E000000043
+:109D2000F00000000000400240020000C000C0003F
+:109D30004000400000090900030301010101010185
+:109D400001010101010404040001020304050607E6
+:109D500008000102000102030405060708020100D1
+:109D60000001020304000102030400000780030055
+:109D700038700000C00F00000840000010200000F4
+:109D800020100000400800008004000000030000D4
+:109D90000780030038700000C00F000001000200BF
+:109DA00002000100048000000840000010200000B4
+:109DB00020100000400800008004000000030000A4
+:109DC0003870000038700000387000000780030011
+:109DD00038700000C00F000000000000000000000C
+:109DE000FFFFFFFFFFFFFFFF010101010101010173
+:109DF000010303030101010101010101010003034A
+:109E0000010101010101010101000000030303033D
+:109E1000030303030303030304040400000000001E
+:109E2000000000000101010101010000000000002C
+:109E30000100020002000100048000000840000050
+:109E400010200000201000004008000080040000E6
+:109E5000000300000780030038700000C00F0000FE
+:109E600000010203040506070800010200010203C5
+:109E700004050607080001020B020B0B0B02000091
+:109E80000B020B0B0B020000FFFFFFFF00000000A6
+:109E900001000000FFFFFFFF01000000FFFFFFFFC8
+:109EA0000000000001000000FFFFFFFFFFFFFFFFB9
+:109EB000FFFFFFFF000000000000000001000000A5
+:109EC0000100000001000000030405060708090A5C
+:109ED0000B0C000002020202020202020200000059
+:109EE0000807060504030201000001020001020345
+:109EF00004050607080201000001020080000100BD
+:109F000040800000204000001020000008100000E9
+:109F100004080000020400000102000007800300A2
+:109F200038700000C00F000000010203040506079E
+:109F300008000102000102030405060708020100EF
+:109F4000010002000200010004800000084000003F
+:109F500010200000201000004008000080040000D5
+:109F6000000300000780030038700000C00F0000ED
+:109F700001010101010000000B0B0B0C0C0C0C0C7F
+:109F80000C0D0000E8040200DC040200D004020012
+:109F9000C0040200B00402009C0402008804020015
+:109FA00070040200580402003C040200B6007B006A
+:109FB0009F00C700F0001A0143016A018D01AB0147
+:109FC000C301D301DB0100005D0044005A007200B0
+:109FD0008A00A300BB00D000E300F200FD000201F4
+:109FE00061004D0068008400A200BF00DA00F200AA
+:109FF000060113011A0100006500580079009D0058
+:10A00000C100E30002011C012E0137016A00670054
+:10A010009100BE00EA00130135014E015B01000012
+:10A0200072007C00B200EB00230152017501870130
+:10A030007C009900E2002E017201A501C10100001F
+:10A04000450063009600C800F00007015100880039
+:10A05000D30015013C0100006700CC0040018A01DB
+:10A060001F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F00
+:10A070001F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1EFE
+:10A080001E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1DFC
+:10A090001D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1CFA
+:10A0A0001C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1BF8
+:10A0B0001B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1AF6
+:10A0C0001A1A1A1A1A1A1A1A1A1A1A1A19191919F4
+:10A0D00019191919191919191919191919191818F2
+:10A0E00018181818181818181818181818181818F0
+:10A0F00017171717171717171717171717171717F0
+:10A1000017171616161616161616161616161616ED
+:10A1100016161616151515151515151515151515EB
+:10A1200015151515151514141414141414141414E9
+:10A1300014141414141414141313131313131313E7
+:10A1400013131313131313131313121212121212E5
+:10A1500012121212121212121212121211111111E3
+:10A1600011111111111111111111111111111010E1
+:10A1700010101010101010101010101010101010DF
+:10A180000F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0FDF
+:10A190000F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0EDD
+:10A1A0000E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0DDB
+:10A1B0000D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0CD9
+:10A1C0000C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0BD7
+:10A1D0000B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0AD5
+:10A1E0000A0A0A0A0A0A0A0A0A0A0A0A09090909D3
+:10A1F00009090909090909090909090909090808D1
+:10A2000008080808080808080808080808080808CE
+:10A2100007070707070707070707070707070707CE
+:10A2200007070606060606060606060606060606CC
+:10A2300006060606050505050505050505050505CA
+:10A2400005050505050504040404040404040404C8
+:10A2500004040404040404040303030303030303C6
+:10A2600003030303030303030303020202020202C4
+:10A2700002020202020202020202020201010101C2
+:10A2800001010101010101010101010101010000C0
+:10A2900000000000000000000000000000000000BE
+:10A2A000387000005201FFFFFFFFFFFFFFFFFFFFBD
+:10A2B000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFAE
+:10A2C000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9E
+:10A2D000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8E
+:10A2E000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7E
+:10A2F000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6E
+:10A30000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D
+:10A31000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4D
+:10A32000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3D
+:10A33000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2D
+:10A34000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF1D
+:10A35000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0D
+:10A36000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD
+:10A37000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFED
+:10A38000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDD
+:10A39000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCD
+:10A3A000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBD
+:10A3B000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFAD
+:10A3C000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9D
+:10A3D000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8D
+:10A3E000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7D
+:10A3F000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6D
+:10A40000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5C
+:10A41000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4C
+:10A42000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3C
+:10A43000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2C
+:10A44000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF1C
+:10A45000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0C
+:10A46000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC
+:10A47000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC
+:10A48000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC
+:10A49000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCC
+:10A4A000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBC
+:10A4B000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFAC
+:10A4C000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C
+:10A4D000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8C
+:10A4E000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7C
+:10A4F000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6C
+:10A50000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5B
+:10A51000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4B
+:10A52000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3B
+:10A53000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2B
+:10A54000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF1B
+:10A55000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0B
+:10A56000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB
+:10A57000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEB
+:10A58000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDB
+:10A59000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCB
+:10A5A000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBB
+:10A5B000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFAB
+:10A5C000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9B
+:10A5D000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8B
+:10A5E000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7B
+:10A5F000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6B
+:10A60000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5A
+:10A61000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4A
+:10A62000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3A
+:10A63000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2A
+:10A64000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF1A
+:10A65000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0A
+:10A66000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA
+:10A67000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEA
+:10A68000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDA
+:10A69000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCA
+:10A6A000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBA
+:10A6B000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFAA
+:10A6C000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9A
+:10A6D000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8A
+:10A6E000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7A
+:10A6F000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6A
+:10A70000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF59
+:10A71000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF49
+:10A72000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF39
+:10A73000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF29
+:10A74000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF19
+:10A75000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF09
+:10A76000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9
+:10A77000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE9
+:10A78000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD9
+:10A79000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC9
+:10A7A000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB9
+:10A7B000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA9
+:10A7C000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF99
+:10A7D000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF89
+:10A7E000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF79
+:10A7F000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF69
+:10A80000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF58
+:10A81000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF48
+:10A82000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF38
+:10A83000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF28
+:10A84000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF18
+:10A85000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF08
+:10A86000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8
+:10A87000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE8
+:10A88000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD8
+:10A89000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC8
+:10A8A000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB8
+:10A8B000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA8
+:10A8C000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF98
+:10A8D000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF88
+:10A8E000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF78
+:10A8F000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF68
+:10A90000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF57
+:10A91000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF47
+:10A92000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF37
+:10A93000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27
+:10A94000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF17
+:10A95000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF07
+:10A96000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7
+:10A97000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE7
+:10A98000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD7
+:10A99000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7
+:10A9A000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB7
+:10A9B000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA7
+:10A9C000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF97
+:10A9D000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF87
+:10A9E000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF77
+:10A9F000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF67
+:10AA0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF56
+:10AA1000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF46
+:10AA2000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF36
+:10AA3000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF26
+:10AA4000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF16
+:10AA5000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF06
+:10AA6000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6
+:10AA7000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE6
+:10AA8000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD6
+:10AA9000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC6
+:10AAA000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB6
+:10AAB000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA6
+:10AAC000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF96
+:10AAD000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF86
+:10AAE000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF76
+:10AAF000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF66
+:10AB0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF55
+:10AB1000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF45
+:10AB2000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF35
+:10AB3000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF25
+:10AB4000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF15
+:10AB5000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF05
+:10AB6000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5
+:10AB7000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE5
+:10AB8000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD5
+:10AB9000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC5
+:10ABA000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB5
+:10ABB000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA5
+:10ABC000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF95
+:10ABD000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF85
+:10ABE000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF75
+:10ABF000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF65
+:10AC0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF54
+:10AC1000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF44
+:10AC2000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF34
+:10AC3000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF24
+:10AC4000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF14
+:10AC5000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF04
+:10AC6000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4
+:10AC7000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE4
+:10AC8000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD4
+:10AC9000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC4
+:10ACA000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB4
+:10ACB000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA4
+:10ACC000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF94
+:10ACD000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF84
+:10ACE000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF74
+:10ACF000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF64
+:10AD0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF53
+:10AD1000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF43
+:10AD2000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF33
+:10AD3000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF23
+:10AD4000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF13
+:10AD5000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF03
+:10AD6000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3
+:10AD7000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE3
+:10AD8000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD3
+:10AD9000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC3
+:10ADA000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB3
+:10ADB000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA3
+:10ADC000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF93
+:10ADD000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF83
+:10ADE000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF73
+:10ADF000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF63
+:10AE0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF52
+:10AE1000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF42
+:10AE2000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF32
+:10AE3000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF22
+:10AE4000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF12
+:10AE5000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF02
+:10AE6000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2
+:10AE7000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE2
+:10AE8000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD2
+:10AE9000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC2
+:10AEA000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB2
+:10AEB000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA2
+:10AEC000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF92
+:10AED000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF82
+:10AEE000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF72
+:10AEF000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF62
+:10AF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF51
+:10AF1000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41
+:10AF2000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF31
+:10AF3000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF21
+:10AF4000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF11
+:10AF5000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
+:10AF6000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF1
+:10AF7000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1
+:10AF8000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD1
+:10AF9000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC1
+:10AFA000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB1
+:10AFB000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA1
+:10AFC000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF91
+:10AFD000FFFFFFFFFFFFFFFF24010000A61C000092
+:10AFE000846900000200060C0200060C0100040443
+:10AFF000010003060100060005040000FFFFFFFF3B
+:10BFF000FFFFFFFFFFFFFFFFFFFFFFFF204B8B490E
+:04000003000004B83D
+:00000001FF
diff --git a/drivers/input/touchscreen/ili/ilitek.h b/drivers/input/touchscreen/ili/ilitek.h
new file mode 100644
index 000000000000..f1d7f489f915
--- /dev/null
+++ b/drivers/input/touchscreen/ili/ilitek.h
@@ -0,0 +1,922 @@
+/*
+ * ILITEK Touch IC driver
+ *
+ * Copyright (C) 2011 ILI Technology Corporation.
+ *
+ * Author: Dicky Chiang <dicky_chiang@ilitek.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+#ifndef __ILITEK_H
+#define __ILITEK_H
+
+#include <linux/module.h>
+#include <linux/moduleparam.h>
+#include <linux/init.h>
+#include <linux/slab.h>
+#include <linux/fs.h>
+#include <linux/types.h>
+#include <linux/kernel.h>
+#include <linux/errno.h>
+#include <linux/i2c.h>
+#include <linux/input.h>
+#include <linux/input/mt.h>
+#include <linux/list.h>
+#include <linux/platform_device.h>
+#include <linux/kobject.h>
+#include <linux/interrupt.h>
+#include <linux/delay.h>
+#include <linux/version.h>
+#include <linux/regulator/consumer.h>
+#include <linux/power_supply.h>
+#include <linux/fs.h>
+#ifdef CONFIG_COMPAT
+#include <linux/compat.h>
+#endif
+#include <linux/uaccess.h>
+
+#include <linux/cdev.h>
+#include <linux/device.h>
+#include <linux/proc_fs.h>
+#include <linux/string.h>
+#include <linux/ctype.h>
+
+#include <linux/netlink.h>
+#include <linux/skbuff.h>
+#include <linux/socket.h>
+#include <net/sock.h>
+
+#include <linux/sched.h>
+#include <linux/kthread.h>
+#include <linux/wait.h>
+#include <linux/time.h>
+
+#include <linux/namei.h>
+#include <linux/vmalloc.h>
+#include <linux/timer.h>
+#include <linux/jiffies.h>
+#include <linux/module.h>
+#include <linux/dma-mapping.h>
+
+#include <linux/gpio.h>
+#include <linux/spi/spi.h>
+#include <linux/rtc.h>
+#include <linux/syscalls.h>
+#include <linux/security.h>
+#include <linux/mount.h>
+#include <linux/firmware.h>
+
+#ifdef CONFIG_OF
+#include <linux/of_address.h>
+#include <linux/of_device.h>
+#include <linux/of_irq.h>
+#include <linux/of.h>
+#include <linux/of_gpio.h>
+#endif
+
+#ifdef CONFIG_FB
+#include <linux/notifier.h>
+#include <linux/fb.h>
+#else
+#include <linux/earlysuspend.h>
+#endif
+
+#ifdef CONFIG_DRM_MSM
+#include <linux/msm_drm_notify.h>
+#endif
+
+#ifdef CONFIG_MTK_SPI
+#include "mt_spi.h"
+#include "sync_write.h"
+#endif
+
+#define DRIVER_VERSION			"2.0.1.1"
+
+/* Options */
+#define TDDI_INTERFACE			BUS_I2C /* BUS_I2C(0x18) or BUS_SPI(0x1C) */
+#define VDD_VOLTAGE			1800000
+#define VCC_VOLTAGE			1800000
+#define SPI_CLK				(10*MEGA_HZ)
+#define SPI_RETRY			5
+#define IRQ_GPIO_NUM			66
+#define WQ_ESD_DELAY			4000
+#define WQ_BAT_DELAY			2000
+#define MT_B_TYPE			ENABLE
+#define TDDI_RST_BIND			DISABLE
+#define MT_PRESSURE			DISABLE
+#define ENABLE_WQ_ESD			DISABLE
+#define ENABLE_WQ_BAT			DISABLE
+// #define ENABLE_GESTURE			ENABLE
+#define ENABLE_GESTURE			DISABLE
+#define READ_GL_INFO			DISABLE
+#define REGULATOR_POWER			DISABLE
+#define TP_SUSPEND_PRIO			ENABLE
+#define RESUME_BY_DDI			DISABLE
+
+/* Plaform compatibility */
+// #define CONFIG_PLAT_SPRD
+// #define I2C_DMA_TRANSFER
+#define SPI_DMA_TRANSFER_SPLIT
+
+/* Path */
+#define DEBUG_DATA_FILE_SIZE		(10*K)
+#define DEBUG_DATA_FILE_PATH		"/userdata/ILITEK_log.csv"
+#define CSV_LCM_ON_PATH			"/userdata/ilitek_mp_lcm_on_log"
+#define CSV_LCM_OFF_PATH		"/userdata/ilitek_mp_lcm_off_log"
+#define INI_NAME_PATH			"/userdata/mp.ini"
+//#define UPDATE_FW_FILP_PATH		"/sdcard/ILITEK_FW"
+//#define UPDATE_FW_FILP_PATH			"/vendor/usr/tp/ili/FW_TDDI_TRUNK_FB.ili"
+#define UPDATE_FW_FILP_PATH			"/vendor/usr/tp/ili/TM050JYHS11_TM_500_20190614.hex"
+
+//#define UPDATE_FW_REQUEST_PATH		"ILITEK_FW"
+#define UPDATE_FW_REQUEST_PATH		"/vendor/usr/tp/ili/TM050JYHS11_TM_500_20190614.hex"
+//#define UPDATE_FW_REQUEST_PATH		"/vendor/usr/tp/ili/FW_TDDI_TRUNK_FB.ili"
+#define POWER_STATUS_PATH		"/sys/class/power_supply/battery/status"
+#define DUMP_FLASH_PATH			"/userdata/flash_dump"
+#define DUMP_IRAM_PATH			"/userdata/iram_dump"
+
+/* Debug messages */
+#define DEBUG_NONE	0
+#define DEBUG_ALL	1
+// #define DEBUG_OUTPUT	DEBUG_NONE
+#define DEBUG_OUTPUT	DEBUG_ALL
+
+#define ipio_info(fmt, arg...)						\
+({									\
+	pr_info("ILITEK: (%s, %d): " fmt, __func__, __LINE__, ##arg);	\
+})									\
+
+#define ipio_err(fmt, arg...)						\
+({									\
+	pr_err("ILITEK: (%s, %d): " fmt, __func__, __LINE__, ##arg);	\
+})									\
+
+extern bool ipio_debug_level;
+#define ipio_debug(fmt, arg...)						\
+do {									\
+	if (ipio_debug_level)						\
+	pr_info("ILITEK: (%s, %d): " fmt, __func__, __LINE__, ##arg);	\
+} while (0)
+
+#define ERR_ALLOC_MEM(X)	((IS_ERR(X) || X == NULL) ? 1 : 0)
+#define K			(1024)
+#define M			(K * K)
+#define MEGA_HZ			1000000
+#define ENABLE			1
+#define START			1
+#define ON			1
+#define ILI_WRITE		1
+#define ILI_READ		0
+#define DISABLE			0
+#define END			0
+#define OFF			0
+#define NONE			-1
+#define DO_SPI_RECOVER		-2
+
+enum TP_PLAT_TYPE {
+	TP_PLAT_MTK = 0,
+	TP_PLAT_QCOM,
+	TP_PLAT_NXP
+};
+
+enum TP_RST_METHOD {
+	TP_IC_WHOLE_RST = 0,
+	TP_IC_CODE_RST,
+	TP_HW_RST_ONLY,
+};
+
+enum TP_FW_UPGRADE_TYPE {
+	UPGRADE_FLASH = 0,
+	UPGRADE_IRAM
+};
+
+enum TP_FW_UPGRADE_TARGET {
+	ILI_FILE = 0,
+	HEX_FILE
+};
+
+enum TP_FW_OPEN_METHOD {
+	REQUEST_FIRMWARE = 0,
+	FILP_OPEN
+};
+
+enum TP_SLEEP_STATUS {
+	TP_SUSPEND = 0,
+	TP_DEEP_SLEEP = 1,
+	TP_RESUME = 2
+};
+
+enum TP_PROXIMITY_STATUS {
+	DDI_POWER_OFF = 0,
+	DDI_POWER_ON = 1,
+	WAKE_UP_GESTURE_RECOVERY = 2,
+	WAKE_UP_SWITCH_GESTURE_MODE = 3
+};
+
+enum TP_SLEEP_CTRL {
+	SLEEP_IN = 0x0,
+	SLEEP_OUT = 0x1,
+	DEEP_SLEEP_IN = 0x3
+};
+
+enum TP_FW_BLOCK_NUM {
+	AP = 1,
+	DATA = 2,
+	TUNING = 3,
+	GESTURE = 4,
+	MP = 5,
+	DDI = 6
+};
+
+enum TP_FW_BLOCK_TAG {
+	BLOCK_TAG_AE = 0xAE,
+	BLOCK_TAG_AF = 0xAF,
+	BLOCK_TAG_B0 = 0xB0
+};
+
+enum TP_WQ_TYPE {
+	WQ_ESD = 0,
+	WQ_BAT,
+};
+
+enum TP_RECORD_DATA {
+	ENABLE_RECORD = 0,
+	DATA_RECORD,
+	DISABLE_RECORD
+};
+
+enum TP_DATA_FORMAT {
+	DATA_FORMAT_DEMO = 0,
+	DATA_FORMAT_DEBUG,
+	DATA_FORMAT_DEMO_DEBUG_INFO,
+	DATA_FORMAT_GESTURE_INFO,
+	DATA_FORMAT_GESTURE_NORMAL,
+	DATA_FORMAT_GESTURE_DEMO
+};
+
+#define TDDI_I2C_ADDR				0x41
+#define TDDI_DEV_ID				"ILITEK_TDDI"
+
+ /* define the width and heigth of a screen. */
+#define TOUCH_SCREEN_X_MIN			0
+#define TOUCH_SCREEN_Y_MIN			0
+#define TOUCH_SCREEN_X_MAX			720
+#define TOUCH_SCREEN_Y_MAX			1440
+//#define TOUCH_SCREEN_Y_MAX			1280
+#define MAX_TOUCH_NUM				10
+//#define MAX_TOUCH_NUM				2
+
+/* define the range on panel */
+#define TPD_HEIGHT				2048
+#define TPD_WIDTH				2048
+//#define TPD_HEIGHT				1280
+//#define TPD_WIDTH				720
+
+/* Firmware upgrade */
+#define MAX_HEX_FILE_SIZE			(160*K)
+#define MAX_FLASH_FIRMWARE_SIZE			(256*K)
+#define MAX_IRAM_FIRMWARE_SIZE			(60*K)
+#define ILI_FILE_HEADER				64
+#define MAX_AP_FIRMWARE_SIZE			(64*K)
+#define MAX_DLM_FIRMWARE_SIZE			(8*K)
+#define MAX_MP_FIRMWARE_SIZE			(64*K)
+#define MAX_GESTURE_FIRMWARE_SIZE		(8*K)
+#define MAX_TUNING_FIRMWARE_SIZE		(4*K)
+#define MAX_DDI_FIRMWARE_SIZE			(4*K)
+#define DLM_START_ADDRESS			0x20610
+#define DLM_HEX_ADDRESS				0x10000
+#define MP_HEX_ADDRESS				0x13000
+#define RESERVE_BLOCK_START_ADDR		0x1D000
+#define RESERVE_BLOCK_END_ADDR			0x1DFFF
+#define FW_VER_ADDR				0xFFE0
+#define FW_BLOCK_INFO_NUM			7
+#define SPI_UPGRADE_LEN				2048
+
+/* DMA Control Registers */
+#define DMA_BASED_ADDR				0x72000
+#define DMA48_ADDR				(DMA_BASED_ADDR + 0xC0)
+#define DMA48_reg_dma_ch0_busy_flag		DMA48_ADDR
+#define DMA48_reserved_0			0xFFFE
+#define DMA48_reg_dma_ch0_trigger_sel		(BIT(16)|BIT(17)|BIT(18)|BIT(19))
+#define DMA48_reserved_1			(BIT(20)|BIT(21)|BIT(22)|BIT(23))
+#define DMA48_reg_dma_ch0_start_set		BIT(24)
+#define DMA48_reg_dma_ch0_start_clear		BIT(25)
+#define DMA48_reg_dma_ch0_trigger_src_mask	BIT(26)
+#define DMA48_reserved_2			BIT(27)
+
+#define DMA49_ADDR				(DMA_BASED_ADDR + 0xC4)
+#define DMA49_reg_dma_ch0_src1_addr		DMA49_ADDR
+#define DMA49_reserved_0			BIT(20)
+
+#define DMA50_ADDR				(DMA_BASED_ADDR + 0xC8)
+#define DMA50_reg_dma_ch0_src1_step_inc		DMA50_ADDR
+#define DMA50_reserved_0			(DMA50_ADDR + 0x01)
+#define DMA50_reg_dma_ch0_src1_format		(BIT(24)|BIT(25))
+#define DMA50_reserved_1			(BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30))
+#define DMA50_reg_dma_ch0_src1_en		BIT(31)
+
+#define DMA52_ADDR				(DMA_BASED_ADDR + 0xD0)
+#define DMA52_reg_dma_ch0_src2_step_inc		DMA52_ADDR
+#define DMA52_reserved_0			(DMA52_ADDR + 0x01)
+#define DMA52_reg_dma_ch0_src2_format		(BIT(24)|BIT(25))
+#define DMA52_reserved_1			(BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30))
+#define DMA52_reg_dma_ch0_src2_en		BIT(31)
+
+#define DMA53_ADDR				(DMA_BASED_ADDR + 0xD4)
+#define DMA53_reg_dma_ch0_dest_addr		DMA53_ADDR
+#define DMA53_reserved_0			BIT(20)
+
+#define DMA54_ADDR				(DMA_BASED_ADDR + 0xD8)
+#define DMA54_reg_dma_ch0_dest_step_inc		DMA54_ADDR
+#define DMA54_reserved_0			(DMA54_ADDR + 0x01)
+#define DMA54_reg_dma_ch0_dest_format		(BIT(24)|BIT(25))
+#define DMA54_reserved_1			(BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30))
+#define DMA54_reg_dma_ch0_dest_en		BIT(31)
+
+#define DMA55_ADDR				(DMA_BASED_ADDR + 0xDC)
+#define DMA55_reg_dma_ch0_trafer_counts		DMA55_ADDR
+#define DMA55_reserved_0			(BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23))
+#define DMA55_reg_dma_ch0_trafer_mode		(BIT(24)|BIT(25)|BIT(26)|BIT(27))
+#define DMA55_reserved_1			(BIT(28)|BIT(29)|BIT(30)|BIT(31))
+
+/* INT Function Registers */
+#define INTR_BASED_ADDR				0x48000
+#define INTR1_ADDR				(INTR_BASED_ADDR + 0x4)
+#define INTR1_reg_uart_tx_int_flag		INTR1_ADDR
+#define INTR1_reserved_0			(BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7))
+#define INTR1_reg_wdt_alarm_int_flag		BIT(8)
+#define INTR1_reserved_1			(BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15))
+#define INTR1_reg_dma_ch1_int_flag		BIT(16)
+#define INTR1_reg_dma_ch0_int_flag		BIT(17)
+#define INTR1_reg_dma_frame_done_int_flag	BIT(18)
+#define INTR1_reg_dma_tdi_done_int_flag		BIT(19)
+#define INTR1_reserved_2			(BIT(20)|BIT(21)|BIT(22)|BIT(23))
+#define INTR1_reg_flash_error_flag		BIT(24)
+#define INTR1_reg_flash_int_flag		BIT(25)
+#define INTR1_reserved_3			BIT(26)
+
+#define INTR2_ADDR					(INTR_BASED_ADDR + 0x8)
+#define INTR2_td_int_flag_clear				INTR2_ADDR
+#define INTR2_td_timeout_int_flag_clear			BIT(1)
+#define INTR2_td_debug_frame_done_int_flag_clear	BIT(2)
+#define INTR2_td_frame_start_scan_int_flag_clear	BIT(3)
+#define INTR2_log_int_flag_clear			BIT(4)
+#define INTR2_d2t_crc_err_int_flag_clear		BIT(8)
+#define INTR2_d2t_flash_req_int_flag_clear		BIT(9)
+#define INTR2_d2t_ddi_int_flag_clear			BIT(10)
+#define INTR2_wr_done_int_flag_clear			BIT(16)
+#define INTR2_rd_done_int_flag_clear			BIT(17)
+#define INTR2_tdi_err_int_flag_clear			BIT(18)
+#define INTR2_d2t_slpout_rise_flag_clear		BIT(24)
+#define INTR2_d2t_slpout_fall_flag_clear		BIT(25)
+#define INTR2_d2t_dstby_flag_clear			BIT(26)
+#define INTR2_ddi_pwr_rdy_flag_clear			BIT(27)
+
+#define INTR32_ADDR					(INTR_BASED_ADDR + 0x80)
+#define INTR32_reg_ice_sw_int_en			INTR32_ADDR
+#define INTR32_reg_ice_apb_conflict_int_en		BIT(1)
+#define INTR32_reg_ice_ilm_conflict_int_en		BIT(2)
+#define INTR32_reg_ice_dlm_conflict_int_en		BIT(3)
+#define INTR32_reserved_0				(BIT(4)|BIT(5)|BIT(6)|BIT(7))
+#define INTR32_reg_spi_sr_int_en			BIT(8)
+#define INTR32_reg_spi_sp_int_en			BIT(9)
+#define INTR32_reg_spi_trx_int_en			BIT(10)
+#define INTR32_reg_spi_cmd_int_en			BIT(11)
+#define INTR32_reg_spi_rw_int_en			BIT(12)
+#define INTR32_reserved_1				(BIT(13)|BIT(14)|BIT(15))
+#define INTR32_reg_i2c_start_int_en			BIT(16)
+#define INTR32_reg_i2c_addr_match_int_en		BIT(17)
+#define INTR32_reg_i2c_cmd_int_en			BIT(18)
+#define INTR32_reg_i2c_sr_int_en			BIT(19)
+#define INTR32_reg_i2c_trx_int_en			BIT(20)
+#define INTR32_reg_i2c_rx_stop_int_en			BIT(21)
+#define INTR32_reg_i2c_tx_stop_int_en			BIT(22)
+#define INTR32_reserved_2				BIT(23)
+#define INTR32_reg_t0_int_en				BIT(24)
+#define INTR32_reg_t1_int_en				BIT(25)
+#define INTR32_reserved_3				(BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31))
+
+#define INTR33_ADDR					(INTR_BASED_ADDR + 0x84)
+#define INTR33_reg_uart_tx_int_en			INTR33_ADDR
+#define INTR33_reserved_0				(BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7))
+#define INTR33_reg_wdt_alarm_int_en			BIT(8)
+#define INTR33_reserved_1				(BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15))
+#define INTR33_reg_dma_ch1_int_en			BIT(16)
+#define INTR33_reg_dma_ch0_int_en			BIT(17)
+#define INTR33_reg_dma_frame_done_int_en		BIT(18)
+#define INTR33_reg_dma_tdi_done_int_en			BIT(19)
+#define INTR33_reserved_2				(BIT(20)|BIT(21)|BIT(22)|BIT(23))
+#define INTR33_reg_flash_error_en			BIT(24)
+#define INTR33_reg_flash_int_en				BIT(25)
+#define INTR33_reserved_3				(BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31))
+
+/* Flash */
+#define FLASH_BASED_ADDR				0x41000
+#define FLASH0_ADDR					(FLASH_BASED_ADDR + 0x0)
+#define FLASH0_reg_flash_csb				FLASH0_ADDR
+#define FLASH0_reserved_0				(BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15))
+#define FLASH0_reg_preclk_sel				(BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23))
+#define FLASH0_reg_rx_dual				BIT(24)
+#define FLASH0_reg_tx_dual				BIT(25)
+#define FLASH0_reserved_26				(BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31))
+#define FLASH1_ADDR					(FLASH_BASED_ADDR + 0x4)
+#define FLASH1_reg_flash_key1				FLASH1_ADDR
+#define FLASH1_reg_flash_key2				(FLASH1_ADDR + 0x01)
+#define FLASH1_reg_flash_key3				(FLASH1_ADDR + 0x02)
+#define FLASH1_reserved_0				(FLASH1_ADDR + 0x03)
+#define FLASH2_ADDR					(FLASH_BASED_ADDR + 0x8)
+#define FLASH2_reg_tx_data				FLASH2_ADDR
+#define FLASH3_ADDR					(FLASH_BASED_ADDR + 0xC)
+#define FLASH3_reg_rcv_cnt				FLASH3_ADDR
+#define FLASH4_ADDR					(FLASH_BASED_ADDR + 0x10)
+#define FLASH4_reg_rcv_data				FLASH4_ADDR
+#define FLASH4_reg_rcv_dly				BIT(8)
+#define FLASH4_reg_sutrg_en				BIT(9)
+#define FLASH4_reserved_1				(BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15))
+#define FLASH4_reg_rcv_data_valid_state			BIT(16)
+#define FLASH4_reg_flash_rd_finish_state		BIT(17)
+#define FLASH4_reserved_2				(BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23))
+#define FLASH4_reg_flash_dma_trigger_en			(BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31))
+
+/* The example for the gesture virtual keys */
+#define GESTURE_DOUBLECLICK				0x58
+#define GESTURE_UP					0x60
+#define GESTURE_DOWN					0x61
+#define GESTURE_LEFT					0x62
+#define GESTURE_RIGHT					0x63
+#define GESTURE_M					0x64
+#define GESTURE_W					0x65
+#define GESTURE_C					0x66
+#define GESTURE_E					0x67
+#define GESTURE_V					0x68
+#define GESTURE_O					0x69
+#define GESTURE_S					0x6A
+#define GESTURE_Z					0x6B
+#define KEY_GESTURE_POWER				KEY_POWER
+#define KEY_GESTURE_UP					KEY_UP
+#define KEY_GESTURE_DOWN				KEY_DOWN
+#define KEY_GESTURE_LEFT				KEY_LEFT
+#define KEY_GESTURE_RIGHT				KEY_RIGHT
+#define KEY_GESTURE_O					KEY_O
+#define KEY_GESTURE_E					KEY_E
+#define KEY_GESTURE_M					KEY_M
+#define KEY_GESTURE_W					KEY_W
+#define KEY_GESTURE_S					KEY_S
+#define KEY_GESTURE_V					KEY_V
+#define KEY_GESTURE_C					KEY_C
+#define KEY_GESTURE_Z					KEY_Z
+#define KEY_GESTURE_F					KEY_F
+#define GESTURE_CODE_V_DOWN				0x6C
+#define GESTURE_CODE_V_LEFT				0x6D
+#define GESTURE_CODE_V_RIGHT				0x6E
+#define GESTURE_CODE_TWO_LINE_2_BOTTOM			0x6F
+#define GESTURE_F					0x70
+#define GESTURE_AT					0x71
+#define ESD_GESTURE_PWD					0xF38A94EF
+#define SPI_ESD_GESTURE_RUN				0x5B92E7F4
+#define I2C_ESD_GESTURE_RUN				0xA67C9DFE
+#define SPI_ESD_GESTURE_PWD_ADDR			0x25FF8
+#define I2C_ESD_GESTURE_PWD_ADDR			0x40054
+
+/* FW data format */
+#define DATA_FORMAT_DEMO_CMD				0x00
+#define DATA_FORMAT_DEBUG_CMD				0x02
+#define DATA_FORMAT_DEMO_DEBUG_INFO_CMD 		0x04
+#define DATA_FORMAT_GESTURE_NORMAL_CMD 			0x01
+#define DATA_FORMAT_GESTURE_INFO_CMD			0x02
+#define P5_X_DEMO_MODE_PACKET_LEN			43
+#define P5_X_INFO_HEADER_LENGTH				3
+#define P5_X_INFO_CHECKSUM_LENGTH			1
+#define P5_X_DEMO_DEBUG_INFO_ID0_LENGTH			10
+#define P5_X_DEBUG_MODE_PACKET_LENGTH			1280
+#define P5_X_TEST_MODE_PACKET_LENGTH			1180
+#define P5_X_GESTURE_NORMAL_LENGTH			8
+#define P5_X_GESTURE_INFO_LENGTH			170
+
+/* Protocol */
+#define PROTOCOL_VER_500				0x050000
+#define PROTOCOL_VER_510				0x050100
+#define PROTOCOL_VER_520				0x050200
+#define PROTOCOL_VER_530				0x050300
+#define PROTOCOL_VER_540				0x050400
+#define PROTOCOL_VER_550				0x050500
+#define PROTOCOL_VER_560				0x050600
+#define PROTOCOL_VER_570				0x050700
+#define P5_X_READ_DATA_CTRL				0xF6
+#define P5_X_GET_TP_INFORMATION				0x20
+#define P5_X_GET_KEY_INFORMATION			0x27
+#define P5_X_GET_PANEL_INFORMATION			0x29
+#define P5_X_GET_FW_VERSION				0x21
+#define P5_X_GET_PROTOCOL_VERSION			0x22
+#define P5_X_GET_CORE_VERSION				0x23
+#define P5_X_MODE_CONTROL				0xF0
+#define P5_X_SET_CDC_INIT				0xF1
+#define P5_X_GET_CDC_DATA				0xF2
+#define P5_X_CDC_BUSY_STATE				0xF3
+#define P5_X_MP_TEST_MODE_INFO				0xFE
+#define P5_X_I2C_UART					0x40
+#define P5_X_FW_UNKNOWN_MODE				0xFF
+#define P5_X_FW_AP_MODE					0x00
+#define P5_X_FW_TEST_MODE				0x01
+#define P5_X_FW_GESTURE_MODE				0x0F
+#define P5_X_FW_DELTA_DATA_MODE				0x03
+#define P5_X_FW_RAW_DATA_MODE				0x08
+#define P5_X_DEMO_PACKET_ID				0x5A
+#define P5_X_DEBUG_PACKET_ID				0xA7
+#define P5_X_TEST_PACKET_ID				0xF2
+#define P5_X_GESTURE_PACKET_ID				0xAA
+#define P5_X_GESTURE_FAIL_ID				0xAE
+#define P5_X_I2CUART_PACKET_ID				0x7A
+#define P5_X_INFO_HEADER_PACKET_ID			0xB7
+#define P5_X_DEMO_DEBUG_INFO_PACKET_ID			0x5C
+#define P5_X_EDGE_PLAM_CTRL_1				0x01
+#define P5_X_EDGE_PLAM_CTRL_2				0x12
+#define SPI_WRITE					0x82
+#define SPI_READ					0x83
+#define SPI_ACK						0xA3
+#define TDDI_WDT_ON					0xA5
+#define TDDI_WDT_OFF					0x5A
+
+/* Chips */
+#define TDDI_PID_ADDR					0x4009C
+#define TDDI_OTP_ID_ADDR				0x400A0
+#define TDDI_ANA_ID_ADDR				0x400A4
+#define TDDI_PC_COUNTER_ADDR				0x44008
+#define TDDI_WDT_ADDR					0x5100C
+#define TDDI_WDT_ACTIVE_ADDR				0x51018
+#define TDDI_CHIP_RESET_ADDR				0x40050
+#define ILI9881_CHIP					0x9881
+#define ILI9881F_AA					0x98810F00
+#define ILI9881H_AD					0x98811103
+#define ILI9881H_AE					0x98811104
+#define ILI7807_CHIP					0x7807
+#define ILI7807G_AA					0x78071000
+#define ILI7807G_AB					0x78071001
+#define RAWDATA_NO_BK_SHIFT_9881H			8192
+#define RAWDATA_NO_BK_SHIFT_9881F			4096
+#define INFO_HEX_START_ADDR_64K				0xFFB4
+
+struct ilitek_tddi_dev {
+	struct i2c_client *i2c;
+	struct spi_device *spi;
+	struct input_dev *input;
+	struct device *dev;
+	struct wakeup_source *ws;
+
+	struct ilitek_hwif_info *hwif;
+	struct ilitek_ic_info *chip;
+	struct ilitek_protocol_info *protocol;
+	struct regulator *vdd;
+	struct regulator *vcc;
+
+#ifdef CONFIG_FB
+	struct notifier_block notifier_fb;
+#else
+	struct early_suspend early_suspend;
+#endif
+
+	struct mutex touch_mutex;
+	struct mutex debug_mutex;
+	struct mutex debug_read_mutex;
+	spinlock_t irq_spin;
+
+	/* physical path to the input device in the system hierarchy */
+	const char *phys;
+
+	u16 max_x;
+	u16 max_y;
+	u16 min_x;
+	u16 min_y;
+	u16 panel_wid;
+	u16 panel_hei;
+	u8 xch_num;
+	u8 ych_num;
+	u8 stx;
+	u8 srx;
+	u8 *fw_dma_buf;
+	struct firmware tp_fw;
+
+	int actual_tp_mode;
+	int actual_tp_data_format;
+	int tp_data_len;
+
+	int irq_num;
+	int irq_gpio;
+	int irq_tirgger_type;
+	int tp_rst;
+	int tp_int;
+
+	int finger;
+	int curt_touch[MAX_TOUCH_NUM];
+	int prev_touch[MAX_TOUCH_NUM];
+	int last_touch;
+
+	int fw_retry;
+	int fw_update_stat;
+	int fw_open;
+	bool wq_ctrl;
+	bool wq_esd_ctrl;
+	bool wq_bat_ctrl;
+
+	bool netlink;
+	bool report;
+	bool gesture;
+	int gesture_mode;
+	int gesture_demo_ctrl;
+
+	u16 flash_mid;
+	u16 flash_devid;
+	int program_page;
+	int flash_sector;
+
+	/* Sending report data to users for the debug */
+	bool debug_node_open;
+	int debug_data_frame;
+	wait_queue_head_t inq;
+	unsigned char **debug_buf;
+	int raw_count;
+	int delta_count;
+	int bg_count;
+
+	int reset;
+	int rst_edge_delay;
+	int fw_upgrade_mode;
+	bool wtd_ctrl;
+	bool do_otp_check;
+	bool fw_uart_en;
+	bool force_fw_update;
+	bool irq_after_recovery;
+	bool ddi_rest_done;
+	bool resume_by_ddi;
+	bool tp_suspend;
+
+	atomic_t irq_stat;
+	atomic_t tp_reset;
+	atomic_t ice_stat;
+	atomic_t fw_stat;
+	atomic_t mp_stat;
+	atomic_t tp_sleep;
+	atomic_t tp_sw_mode;
+	atomic_t mp_int_check;
+	atomic_t esd_stat;
+
+	/* Event for driver test */
+	struct completion esd_done;
+
+	int (*write)(void *data, int len);
+	int (*read)(void *data, int len);
+	int (*spi_write_then_read)(struct spi_device *spi, const void *txbuf,
+				unsigned n_tx, void *rxbuf, unsigned n_rx);
+	int (*mp_move_code)(void);
+	int (*gesture_move_code)(int mode);
+	int (*esd_recover)(void);
+	void (*spi_speed)(bool enable);
+	int (*ges_recover)(void);
+	void (*demo_debug_info[5])(u8 *, size_t);
+};
+extern struct ilitek_tddi_dev *idev;
+
+struct ilitek_touch_info {
+	u16 id;
+	u16 x;
+	u16 y;
+	u16 pressure;
+};
+
+struct ilitek_protocol_info {
+	u32 ver;
+	int fw_ver_len;
+	int pro_ver_len;
+	int tp_info_len;
+	int key_info_len;
+	int panel_info_len;
+	int core_ver_len;
+	int func_ctrl_len;
+	int window_len;
+	int cdc_len;
+	int mp_info_len;
+};
+
+struct ilitek_ic_func_ctrl {
+	const char *name;
+	u8 cmd[6];
+	int len;
+};
+
+struct ilitek_ic_info {
+	u32 pid_addr;
+	u32 wdt_addr;
+	u32 pc_counter_addr;
+	u32 reset_addr;
+	u32 otp_addr;
+	u32 ana_addr;
+	u32 pid;
+	u16 id;
+	u16 type_hi;
+	u16 type_low;
+	u32 otp_id;
+	u32 ana_id;
+	u32 fw_ver;
+	u32 core_ver;
+	u32 max_count;
+	u32 reset_key;
+	u16 wtd_key;
+	u32 info_addr;
+	u8  info[75];
+	bool  info_from_hex;
+	int no_bk_shift;
+	bool spi_speed_ctrl;
+	s32 (*open_sp_formula)(int dac, int raw);
+	s32 (*open_c_formula)(int dac, int raw, int tvch, int gain);
+	void (*hd_dma_check_crc_off)(void);
+};
+
+struct ilitek_hwif_info {
+	u8 bus_type;
+	u8 plat_type;
+	const char *name;
+	struct module *owner;
+	const struct of_device_id *of_match_table;
+	int (*plat_probe)(void);
+	int (*plat_remove)(void);
+	void *info;
+};
+
+/* Prototypes for tddi firmware/flash functions */
+extern void ilitek_tddi_ic_check_otp_prog_mode(void);
+extern void ilitek_tddi_flash_dma_write(u32 start, u32 end, u32 len);
+extern void ilitek_tddi_flash_clear_dma(void);
+extern void ilitek_tddi_fw_read_flash_info(bool mode);
+extern u32 ilitek_tddi_fw_read_hw_crc(u32 start, u32 end);
+extern int ilitek_tddi_fw_read_flash(u32 start, u32 end, u8 *data, int len);
+extern int ilitek_tddi_fw_dump_iram_data(u32 start, u32 end);
+extern int ilitek_tddi_fw_dump_flash_data(u32 start, u32 end, bool user);
+extern int ilitek_tddi_fw_upgrade(int upgrade_type, int file_type, int open_file_method);
+
+/* Prototypes for tddi mp test */
+extern int ilitek_tddi_mp_test_main(char *apk, bool lcm_on);
+
+/* Prototypes for tddi core functions */
+extern int ilitek_tddi_touch_esd_gesture_flash(void);
+extern int ilitek_tddi_touch_esd_gesture_iram(void);
+extern int ilitek_tddi_move_gesture_code_flash(int mode);
+extern int ilitek_tddi_move_gesture_code_iram(int mode);
+extern int ilitek_tddi_move_mp_code_flash(void);
+extern int ilitek_tddi_move_mp_code_iram(void);
+extern void ilitek_tddi_touch_press(u16 x, u16 y, u16 pressure, u16 id);
+extern void ilitek_tddi_touch_release(u16 x, u16 y, u16 id);
+extern void ilitek_tddi_touch_release_all_point(void);
+extern void ilitek_tddi_report_ap_mode(u8 *buf, int len);
+extern void ilitek_tddi_report_debug_mode(u8 *buf, int rlen);
+extern void ilitek_tddi_report_gesture_mode(u8 *buf, int rlen);
+extern void ilitek_tddi_report_i2cuart_mode(u8 *buf, int rlen);
+extern int ilitek_tddi_ic_watch_dog_ctrl(bool write, bool enable);
+extern void ilitek_tddi_ic_set_ddi_reg_onepage(u8 page, u8 reg, u8 data);
+extern void ilitek_tddi_ic_get_ddi_reg_onepage(u8 page, u8 reg);
+extern void ilitek_tddi_ic_spi_speed_ctrl(bool enable);
+extern int ilitek_tddi_ic_whole_reset(void);
+extern int ilitek_tddi_ic_code_reset(void);
+extern int ilitek_tddi_ic_func_ctrl(const char *name, int ctrl);
+extern u32 ilitek_tddi_ic_get_pc_counter(void);
+extern int ilitek_tddi_ic_check_int_stat(void);
+extern int ilitek_tddi_ic_check_busy(int count, int delay);
+extern int ilitek_tddi_ic_get_project_id(u8 *pdata, int size);
+extern int ilitek_tddi_ic_get_panel_info(void);
+extern int ilitek_tddi_ic_get_tp_info(void);
+extern int ilitek_tddi_ic_get_core_ver(void);
+extern int ilitek_tddi_ic_get_protocl_ver(void);
+extern int ilitek_tddi_ic_get_fw_ver(void);
+extern int ilitek_tddi_ic_get_info(void);
+extern int ilitek_ice_mode_bit_mask_write(u32 addr, u32 mask, u32 value);
+extern int ilitek_ice_mode_write(u32 addr, u32 data, int len);
+extern int ilitek_ice_mode_read(u32 addr, u32 *data, int len);
+extern int ilitek_ice_mode_ctrl(bool enable, bool mcu);
+extern void ilitek_tddi_ic_init(void);
+extern void ilitek_tddi_fw_uart_ctrl(u8 ctrl);
+
+/* Prototypes for tddi events */
+#ifdef RESUME_BY_DDI
+extern void ilitek_resume_by_ddi(void);
+#endif
+extern int ilitek_tddi_proximity_far(int mode);
+extern int ilitek_tddi_proximity_near(int mode);
+extern int ilitek_tddi_switch_tp_mode(u8 data);
+extern int ilitek_tddi_switch_tp_data_format(int format);
+extern int ilitek_tddi_fw_upgrade_handler(void *data);
+extern int ilitek_tddi_wq_esd_i2c_check(void);
+extern int ilitek_tddi_wq_esd_spi_check(void);
+extern int ilitek_tddi_gesture_recovery(void);
+extern void ilitek_tddi_spi_recovery(void);
+extern void ilitek_tddi_wq_ctrl(int type, int ctrl);
+extern int ilitek_tddi_mp_test_handler(char *apk, bool lcm_on);
+extern void ilitek_tddi_report_handler(void);
+extern int ilitek_tddi_sleep_handler(int mode);
+extern int ilitek_tddi_reset_ctrl(int mode);
+extern int ilitek_tddi_init(void);
+extern int ilitek_tddi_dev_init(struct ilitek_hwif_info *hwif);
+extern void ilitek_tddi_dev_remove(void);
+
+/* Prototypes for i2c/spi interface */
+extern int ilitek_tddi_interface_dev_init(struct ilitek_hwif_info *hwif);
+extern void ilitek_tddi_interface_dev_exit(struct ilitek_hwif_info *hwif);
+extern int ilitek_spi_write_then_read_split(struct spi_device *spi,
+				const void *txbuf, unsigned n_tx,
+				void *rxbuf, unsigned n_rx);
+extern int ilitek_spi_write_then_read_direct(struct spi_device *spi,
+				const void *txbuf, unsigned n_tx,
+				void *rxbuf, unsigned n_rx);
+
+/* Prototypes for platform level */
+extern void ilitek_plat_regulator_power_on(bool status);
+extern void ilitek_plat_input_register(void);
+extern void ilitek_plat_irq_disable(void);
+extern void ilitek_plat_irq_enable(void);
+extern void ilitek_plat_tp_reset(void);
+extern void ilitek_plat_tp_reset2(void);
+extern void ilitek_plat_irq_unregister(void);
+extern int ilitek_plat_irq_register(int type);
+
+/* Prototypes for miscs */
+extern void ilitek_tddi_node_init(void);
+extern void ilitek_dump_data(void *data, int type, int len, int row_len, const char *name);
+extern u8 ilitek_calc_packet_checksum(u8 *packet, int len);
+extern void netlink_reply_msg(void *raw, int size);
+extern int katoi(char *str);
+extern int str2hex(char *str);
+
+/* Prototypes for additional functionalities */
+extern void gesture_fail_reason(bool enable);
+extern int get_tp_recore_ctrl(int data);
+extern int get_tp_recore_data(void);
+extern void demo_debug_info_mode(u8 *buf, size_t rlen);
+extern void demo_debug_info_id0(u8 *buf, size_t len);
+
+static inline void ipio_kfree(void **mem)
+{
+	if (*mem != NULL) {
+		kfree(*mem);
+		*mem = NULL;
+	}
+}
+
+static inline void ipio_vfree(void **mem)
+{
+	if (*mem != NULL) {
+		vfree(*mem);
+		*mem = NULL;
+	}
+}
+
+static inline void *ipio_memcpy(void *dest, const void *src, int n, int dest_size)
+{
+	if (n > dest_size)
+		 n = dest_size;
+
+	return memcpy(dest, src, n);
+}
+
+static inline s32 open_sp_formula_ili9881(int dac, int raw)
+{
+	return (int)((int)(dac * 2 * 10000 * 161 / 100) - (int)(16384 / 2 - (int)raw) * 20000 * 7 / 16384 * 36 / 10) / 31 / 2;
+}
+
+static inline s32 open_sp_formula_ili7807(int dac, int raw)
+{
+	return (int)((int)(dac * 2 * 10000 * 131 / 100) - (int)(16384 / 2 - (int)raw) * 20000 * 7 / 16384 * 36 / 10) / 31 / 2;
+}
+
+static inline s32 open_c_formula(int dac, int raw, int tvch, int gain)
+{
+	return (int)((int)(dac * 414 * 39 / 2) + (int)(((int)raw - 8192) * 36 * (7 * 100 - 22) * 10 / 16384)) /
+						tvch / 100 / gain;
+}
+
+static inline void firmware_hd_dma_crc_off_ili9881(void)
+{
+	/* crc off */
+	ilitek_ice_mode_write(0x041016, 0x00, 1);
+	/* dma crc */
+	ilitek_ice_mode_write(0x041048, 0x00000001, 4);
+}
+
+static inline void firmware_hd_dma_crc_off_ili7807(void)
+{
+	/* crc off */
+	ilitek_ice_mode_write(0x041016, 0x00, 1);
+	/* dma crc */
+	ilitek_ice_mode_write(0x041017, 0x03, 1);
+}
+
+#endif /* __ILITEK_H */
diff --git a/drivers/input/touchscreen/ili/ilitek_fw.c b/drivers/input/touchscreen/ili/ilitek_fw.c
new file mode 100644
index 000000000000..d13f4d55a648
--- /dev/null
+++ b/drivers/input/touchscreen/ili/ilitek_fw.c
@@ -0,0 +1,1606 @@
+/*
+ * ILITEK Touch IC driver
+ *
+ * Copyright (C) 2011 ILI Technology Corporation.
+ *
+ * Author: Dicky Chiang <dicky_chiang@ilitek.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include "ilitek.h"
+/* Firmware data with static array */
+#include "ilitek_fw.h"
+
+#define UPDATE_PASS		0
+#define UPDATE_FAIL		-1
+#define TIMEOUT_SECTOR		500
+#define TIMEOUT_PAGE		3500
+#define TIMEOUT_PROGRAM		10
+
+struct touch_fw_data {
+	u8 block_number;
+	u32 start_addr;
+	u32 end_addr;
+	u32 new_fw_cb;
+	int delay_after_upgrade;
+	bool isCRC;
+	bool isboot;
+	int hex_tag;
+} tfd;
+
+struct flash_block_info {
+	char *name;
+	u32 start;
+	u32 end;
+	u32 len;
+	u32 mem_start;
+	u32 fix_mem_start;
+	u8 mode;
+} fbi[FW_BLOCK_INFO_NUM];
+
+u8 gestrue_fw[(10 * K)];
+
+static u32 HexToDec(char *phex, s32 len)
+{
+	u32 ret = 0, temp = 0, i;
+	s32 shift = (len - 1) * 4;
+
+	for (i = 0; i < len; shift -= 4, i++) {
+		if ((phex[i] >= '0') && (phex[i] <= '9'))
+			temp = phex[i] - '0';
+		else if ((phex[i] >= 'a') && (phex[i] <= 'f'))
+			temp = (phex[i] - 'a') + 10;
+		else if ((phex[i] >= 'A') && (phex[i] <= 'F'))
+			temp = (phex[i] - 'A') + 10;
+		else
+			return -1;
+
+		ret |= (temp << shift);
+	}
+	return ret;
+}
+
+static int CalculateCRC32(u32 start_addr, u32 len, u8 *pfw)
+{
+	int i = 0, j = 0;
+	int crc_poly = 0x04C11DB7;
+	int tmp_crc = 0xFFFFFFFF;
+
+	for (i = start_addr; i < start_addr + len; i++) {
+		tmp_crc ^= (pfw[i] << 24);
+
+		for (j = 0; j < 8; j++) {
+			if ((tmp_crc & 0x80000000) != 0)
+				tmp_crc = tmp_crc << 1 ^ crc_poly;
+			else
+				tmp_crc = tmp_crc << 1;
+		}
+	}
+	return tmp_crc;
+}
+
+static int host_download_dma_check(u32 start_addr, u32 block_size)
+{
+	int count = 50;
+	u32 busy = 0;
+
+	/* dma1 src1 address */
+	if (ilitek_ice_mode_write(0x072104, start_addr, 4) < 0)
+		ipio_err("Write dma1 src1 address failed
");
+	/* dma1 src1 format */
+	if (ilitek_ice_mode_write(0x072108, 0x80000001, 4) < 0)
+		ipio_err("Write dma1 src1 format failed
");
+	/* dma1 dest address */
+	if (ilitek_ice_mode_write(0x072114, 0x00030000, 4) < 0)
+		ipio_err("Write dma1 src1 format failed
");
+	/* dma1 dest format */
+	if (ilitek_ice_mode_write(0x072118, 0x80000000, 4) < 0)
+		ipio_err("Write dma1 dest format failed
");
+	/* Block size*/
+	if (ilitek_ice_mode_write(0x07211C, block_size, 4) < 0)
+		ipio_err("Write block size (%d) failed
", block_size);
+
+	idev->chip->hd_dma_check_crc_off();
+
+	/* crc on */
+	if (ilitek_ice_mode_write(0x041016, 0x01, 1) < 0)
+		ipio_err("Write crc on failed
");
+	/* Dma1 stop */
+	if (ilitek_ice_mode_write(0x072100, 0x00000000, 4) < 0)
+		ipio_err("Write dma1 stop failed
");
+	/* clr int */
+	if (ilitek_ice_mode_write(0x048006, 0x1, 1) < 0)
+		ipio_err("Write clr int failed
");
+	/* Dma1 start */
+	if (ilitek_ice_mode_write(0x072100, 0x01000000, 4) < 0)
+		ipio_err("Write dma1 start failed
");
+
+	/* Polling BIT0 */
+	while (count > 0) {
+		mdelay(1);
+		if (ilitek_ice_mode_read(0x048006, &busy, sizeof(u8)) < 0)
+			ipio_err("Read busy error
");
+		ipio_debug("busy = %x
", busy);
+		if ((busy & 0x01) == 1)
+			break;
+		count--;
+	}
+
+	if (count <= 0) {
+		ipio_err("BIT0 is busy
");
+		return -1;
+	}
+
+	if (ilitek_ice_mode_read(0x04101C, &busy, sizeof(u32)) < 0) {
+		ipio_err("Read dma crc error
");
+		return -1;
+	}
+	return busy;
+}
+
+static int ilitek_tddi_fw_iram_read(u8 *buf, u32 start, u32 end)
+{
+	int r_len = end + 1;
+	u8 cmd[4] = {0};
+
+	if (!buf) {
+		ipio_err("buf in null
");
+		return -ENOMEM;
+	}
+
+	cmd[0] = 0x25;
+	cmd[3] = (char)((start & 0x00FF0000) >> 16);
+	cmd[2] = (char)((start & 0x0000FF00) >> 8);
+	cmd[1] = (char)((start & 0x000000FF));
+
+	if (idev->write(cmd, 4)) {
+		ipio_err("Failed to write iram data
");
+		return -ENODEV;
+	}
+
+	if (idev->read(buf, r_len)) {
+		ipio_err("Failed to Read iram data
");
+		return -ENODEV;
+	}
+	return 0;
+}
+
+static void ilitek_tddi_fw_print_iram_data(void)
+{
+	int i, len;
+	int tmp = ipio_debug_level;
+	u8 *buf = NULL;
+	u32 start = 0, end = 0xFFFF;
+
+	len = end - start + 1;
+
+	buf = vmalloc(len * sizeof(u8));
+	if (ERR_ALLOC_MEM(buf)) {
+		ipio_err("Failed to allocate buf memory, %ld
", PTR_ERR(buf));
+		return;
+	}
+
+	for (i = 0; i < len; i++)
+		buf[i] = 0xFF;
+
+	if (ilitek_tddi_fw_iram_read(buf, start, end) < 0)
+		ipio_err("Read IRAM data failed
");
+
+	ipio_debug_level = DEBUG_ALL;
+	ilitek_dump_data(buf, 8, len, 0, "IRAM");
+	ipio_debug_level = tmp;
+	ipio_vfree((void **)&buf);
+}
+
+int ilitek_tddi_fw_dump_iram_data(u32 start, u32 end)
+{
+	struct file *f = NULL;
+	u8 *buf = NULL;
+	mm_segment_t old_fs;
+	loff_t pos = 0;
+	int ret, wdt, i;
+	int len;
+
+	f = filp_open(DUMP_IRAM_PATH, O_WRONLY | O_CREAT | O_TRUNC, 644);
+	if (ERR_ALLOC_MEM(f)) {
+		ipio_err("Failed to open the file at %ld.
", PTR_ERR(f));
+		return -1;
+	}
+
+	ret = ilitek_ice_mode_ctrl(ENABLE, OFF);
+	if (ret < 0) {
+		filp_close(f, NULL);
+		return ret;
+	}
+
+	wdt = ilitek_tddi_ic_watch_dog_ctrl(ILI_READ, DISABLE);
+	if (wdt) {
+		if (ilitek_tddi_ic_watch_dog_ctrl(ILI_WRITE, DISABLE) < 0)
+			ipio_err("Disable WDT failed during dumping iram
");
+	}
+
+	len = end - start + 1;
+
+	buf = vmalloc(len * sizeof(u8));
+	if (ERR_ALLOC_MEM(buf)) {
+		ipio_err("Failed to allocate buf memory, %ld
", PTR_ERR(buf));
+		filp_close(f, NULL);
+		ret = ENOMEM;
+		goto out;
+	}
+
+	for (i = 0; i < len; i++)
+		buf[i] = 0xFF;
+
+	if (ilitek_tddi_fw_iram_read(buf, start, end) < 0)
+		ipio_err("Read IRAM data failed
");
+
+	old_fs = get_fs();
+	set_fs(get_ds());
+	set_fs(KERNEL_DS);
+	pos = 0;
+	vfs_write(f, buf, len, &pos);
+	set_fs(old_fs);
+
+out:
+	if (wdt) {
+		if (ilitek_tddi_ic_watch_dog_ctrl(ILI_WRITE, ENABLE) < 0)
+			ipio_err("Enable WDT failed during dumping iram
");
+	}
+
+	ilitek_ice_mode_ctrl(DISABLE, OFF);
+	filp_close(f, NULL);
+	ipio_vfree((void **)&buf);
+	ipio_info("dump iram data success
");
+	return 0;
+}
+
+static int ilitek_tddi_fw_iram_program(u32 start, u8 *w_buf, u32 w_len, u32 split_len)
+{
+	int i = 0, j = 0, addr = 0;
+	u32 end = start + w_len;
+
+	for (i = 0; i < MAX_HEX_FILE_SIZE; i++)
+		idev->fw_dma_buf[i] = 0xFF;
+
+	if (split_len != 0) {
+		for (addr = start, i = 0; addr < end; addr += split_len, i += split_len) {
+			if ((addr + split_len) > end)
+				split_len = end - addr;
+
+			idev->fw_dma_buf[0] = SPI_WRITE;
+			idev->fw_dma_buf[1] = 0x25;
+			idev->fw_dma_buf[2] = (char)((addr & 0x000000FF));
+			idev->fw_dma_buf[3] = (char)((addr & 0x0000FF00) >> 8);
+			idev->fw_dma_buf[4] = (char)((addr & 0x00FF0000) >> 16);
+
+			for (j = 0; j < split_len; j++)
+				idev->fw_dma_buf[5 + j] = w_buf[i + j];
+
+			if (idev->spi_write_then_read(idev->spi, idev->fw_dma_buf, split_len + 5, NULL, 0)) {
+				ipio_err("Failed to write data via SPI in host download (%x)
", split_len + 5);
+				return -EIO;
+			}
+		}
+	} else {
+		idev->fw_dma_buf[0] = SPI_WRITE;
+		idev->fw_dma_buf[1] = 0x25;
+		idev->fw_dma_buf[2] = (char)((start & 0x000000FF));
+		idev->fw_dma_buf[3] = (char)((start & 0x0000FF00) >> 8);
+		idev->fw_dma_buf[4] = (char)((start & 0x00FF0000) >> 16);
+
+		memcpy(&idev->fw_dma_buf[5], w_buf, w_len);
+
+		/* It must be supported by platforms that have the ability to transfer all data at once. */
+		if (idev->spi_write_then_read(idev->spi, idev->fw_dma_buf, w_len + 5, NULL, 0) < 0) {
+			ipio_err("Failed to write data via SPI in host download (%x)
", w_len + 5);
+			return -EIO;
+		}
+	}
+	return 0;
+}
+
+static int ilitek_tddi_fw_check_hex_hw_crc(u8 *pfw)
+{
+	u32 i = 0, len = 0;
+	u32 hex_crc = 0, hw_crc;
+
+	for (i = 0; i < ARRAY_SIZE(fbi); i++) {
+		if (fbi[i].end == 0)
+			continue;
+
+		len = fbi[i].end - fbi[i].start + 1 - 4;
+
+		hex_crc = CalculateCRC32(fbi[i].start, len, pfw);
+		hw_crc = ilitek_tddi_fw_read_hw_crc(fbi[i].start, len);
+
+		ipio_info("Block = %d, Hex CRC = %x, HW CRC = %x
", i, hex_crc, hw_crc);
+
+		if (hex_crc != hw_crc) {
+			ipio_err("Hex and HW CRC NO matched !!!
");
+			return UPDATE_FAIL;
+		}
+	}
+
+	ipio_info("Hex and HW CRC match!
");
+	return UPDATE_PASS;
+}
+
+static int ilitek_tddi_flash_poll_busy(int timer)
+{
+	int ret = UPDATE_PASS, retry = timer;
+	u8 cmd = 0x5;
+	u32 temp = 0;
+
+	if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x0, 1) < 0)
+		ipio_err("Pull cs low failed
");
+
+	if (ilitek_ice_mode_write(FLASH1_ADDR, 0x66aa55, 3) < 0)
+		ipio_err("Write key failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, cmd, 1) < 0)
+		ipio_err("Write 0x5 cmd failed
");
+
+	do {
+		if (ilitek_ice_mode_write(FLASH2_ADDR, 0xFF, 1) < 0)
+			ipio_err("Write dummy failed
");
+
+		mdelay(1);
+
+		if (ilitek_ice_mode_read(FLASH4_ADDR, &temp, sizeof(u8)) < 0)
+			ipio_err("Read flash busy error
");
+
+		if ((temp & 0x3) == 0)
+			break;
+	} while (--retry >= 0);
+
+	if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x1, 1) < 0)
+		ipio_err("Pull cs high failed
");
+
+	if (retry <= 0) {
+		ipio_err("Flash polling busy timeout ! tmp = %x
", temp);
+		ret = UPDATE_FAIL;
+	}
+
+	return ret;
+}
+
+void ilitek_tddi_flash_clear_dma(void)
+{
+	if (ilitek_ice_mode_bit_mask_write(INTR1_ADDR, INTR1_reg_flash_int_flag, (1 << 25)) < 0)
+		ipio_err("Write %lu at %x failed
", INTR1_reg_flash_int_flag, INTR1_ADDR);
+
+	if (ilitek_ice_mode_bit_mask_write(FLASH0_ADDR, FLASH0_reg_preclk_sel, (2 << 16)) < 0)
+		ipio_err("Write %lu at %x failed
", FLASH0_reg_preclk_sel, FLASH0_ADDR);
+
+	if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x01, 1) < 0)
+		ipio_err("Pull cs high failed
");
+
+	if (ilitek_ice_mode_bit_mask_write(FLASH4_ADDR, FLASH4_reg_flash_dma_trigger_en, (0 << 24)) < 0)
+		ipio_err("Write %lu at %x failed
", FLASH4_reg_flash_dma_trigger_en, FLASH4_ADDR);
+
+	if (ilitek_ice_mode_bit_mask_write(FLASH0_ADDR, FLASH0_reg_rx_dual, (0 << 24)) < 0)
+		ipio_err("Write %lu at %x failed
", FLASH0_reg_rx_dual, FLASH0_ADDR);
+
+	if (ilitek_ice_mode_write(FLASH3_reg_rcv_cnt, 0x00, 1) < 0)
+		ipio_err("Write 0x0 at %x failed
", FLASH3_reg_rcv_cnt);
+
+	if (ilitek_ice_mode_write(FLASH4_reg_rcv_data, 0xFF, 1) < 0)
+		ipio_err("Write 0xFF at %x failed
", FLASH4_reg_rcv_data);
+}
+
+int ilitek_tddi_flash_read_int_flag(void)
+{
+	int retry = 500;
+	u32 data = 0;
+
+	do {
+		if (ilitek_ice_mode_read(INTR1_ADDR & BIT(25), &data, sizeof(u32)) < 0)
+			ipio_err("Read flash int flag error
");
+
+		ipio_debug("int flag = %x
", data);
+		if (data)
+			break;
+	} while (--retry >= 0);
+
+	if (retry <= 0) {
+		ipio_err("Read Flash INT flag timeout !, flag = 0x%x
", data);
+		return -1;
+	}
+	return 0;
+}
+
+void ilitek_tddi_flash_dma_write(u32 start, u32 end, u32 len)
+{
+	if (ilitek_ice_mode_bit_mask_write(FLASH0_ADDR, FLASH0_reg_preclk_sel, 1 << 16) < 0)
+		ipio_err("Write %lu at %x failed
", FLASH0_reg_preclk_sel, FLASH0_ADDR);
+
+	if (ilitek_ice_mode_write(FLASH0_reg_flash_csb, 0x00, 1) < 0)
+		ipio_err("Pull cs low failed
");
+
+	if (ilitek_ice_mode_write(FLASH1_reg_flash_key1, 0x66aa55, 3) < 0)
+		ipio_err("Write key failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_reg_tx_data, 0x0b, 1) < 0)
+		ipio_err("Write 0x0b at %x failed
", FLASH2_reg_tx_data);
+
+	if (ilitek_tddi_flash_read_int_flag() < 0) {
+		ipio_err("Write 0xb timeout 
");
+		return;
+	}
+
+	if (ilitek_ice_mode_bit_mask_write(INTR1_ADDR, INTR1_reg_flash_int_flag, (1 << 25)) < 0)
+		ipio_err("Write %lu at %x failed
", INTR1_reg_flash_int_flag, INTR1_ADDR);
+
+	if (ilitek_ice_mode_write(FLASH2_reg_tx_data, (start & 0xFF0000) >> 16, 1) < 0)
+		ipio_err("Write %x at %x failed
", (start & 0xFF0000), FLASH2_reg_tx_data);
+
+	if (ilitek_tddi_flash_read_int_flag() < 0) {
+		ipio_err("Write addr1 timeout
");
+		return;
+	}
+
+	if (ilitek_ice_mode_bit_mask_write(INTR1_ADDR, INTR1_reg_flash_int_flag, (1 << 25)) < 0)
+		ipio_err("Write %lu at %x failed
", INTR1_reg_flash_int_flag, INTR1_ADDR);
+
+	if (ilitek_ice_mode_write(FLASH2_reg_tx_data, (start & 0x00FF00) >> 8, 1) < 0)
+		ipio_err("Write %x at %x failed
", (start & 0x00FF00) >> 8, FLASH2_reg_tx_data);
+
+	if (ilitek_tddi_flash_read_int_flag() < 0) {
+		ipio_err("Write addr2 timeout
");
+		return;
+	}
+
+	if (ilitek_ice_mode_bit_mask_write(INTR1_ADDR, INTR1_reg_flash_int_flag, (1 << 25)) < 0)
+		ipio_err("Write %lu at %x failed
", INTR1_reg_flash_int_flag, INTR1_ADDR);
+
+	if (ilitek_ice_mode_write(FLASH2_reg_tx_data, (start & 0x0000FF), 1) < 0)
+		ipio_err("Write %x at %x failed
", (start & 0x0000FF), FLASH2_reg_tx_data);
+
+	if (ilitek_tddi_flash_read_int_flag() < 0) {
+		ipio_err("Write addr3 timeout
");
+		return;
+	}
+
+	if (ilitek_ice_mode_bit_mask_write(INTR1_ADDR, INTR1_reg_flash_int_flag, (1 << 25)) < 0)
+		ipio_err("Write %lu at %x failed
", INTR1_reg_flash_int_flag, INTR1_ADDR);
+
+	if (ilitek_ice_mode_bit_mask_write(FLASH0_ADDR, FLASH0_reg_rx_dual, 0 << 24) < 0)
+		ipio_err("Write %lu at %x failed
", FLASH0_reg_rx_dual, FLASH0_ADDR);
+
+	if (ilitek_ice_mode_write(FLASH2_reg_tx_data, 0x00, 1) < 0)
+		ipio_err("Write dummy failed
");
+
+	if (ilitek_tddi_flash_read_int_flag() < 0) {
+		ipio_err("Write dummy timeout
");
+		return;
+	}
+
+	if (ilitek_ice_mode_bit_mask_write(INTR1_ADDR, INTR1_reg_flash_int_flag, (1 << 25)) < 0)
+		ipio_err("Write %lu at %x failed
", INTR1_reg_flash_int_flag, INTR1_ADDR);
+
+	if (ilitek_ice_mode_write(FLASH3_reg_rcv_cnt, len, 4) < 0)
+		ipio_err("Write length failed
");
+}
+
+static void ilitek_tddi_flash_write_enable(void)
+{
+	if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x0, 1) < 0)
+		ipio_err("Pull CS low failed
");
+
+	if (ilitek_ice_mode_write(FLASH1_ADDR, 0x66aa55, 3) < 0)
+		ipio_err("Write key failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, 0x6, 1) < 0)
+		ipio_err("Write 0x6 failed
");
+
+	if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x1, 1) < 0)
+		ipio_err("Pull CS high failed
");
+}
+
+u32 ilitek_tddi_fw_read_hw_crc(u32 start, u32 end)
+{
+	int retry = 500;
+	u32 busy = 0;
+	u32 write_len = end;
+	u32 flash_crc = 0;
+
+	if (write_len > idev->chip->max_count) {
+		ipio_err("The length (%x) written into firmware is greater than max count (%x)
",
+			write_len, idev->chip->max_count);
+		return -1;
+	}
+
+	if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x0, 1) < 0)
+		ipio_err("Pull CS low failed
");
+
+	if (ilitek_ice_mode_write(FLASH1_ADDR, 0x66aa55, 3) < 0)
+		ipio_err("Write key failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, 0x3b, 1) < 0)
+		ipio_err("Write 0x3b failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, (start & 0xFF0000) >> 16, 1) < 0)
+		ipio_err("Write address failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, (start & 0x00FF00) >> 8, 1) < 0)
+		ipio_err("Write address failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, (start & 0x0000FF), 1) < 0)
+		ipio_err("Write address failed
");
+
+	if (ilitek_ice_mode_write(0x041003, 0x01, 1) < 0)
+		ipio_err("Write enable Dio_Rx_dual failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, 0xFF, 1) < 0)
+		ipio_err("Write dummy failed
");
+
+	if (ilitek_ice_mode_write(0x04100C, write_len, 3) < 0)
+		ipio_err("Write Set Receive count failed
");
+
+	if (ilitek_ice_mode_write(0x048007, 0x02, 1) < 0)
+		ipio_err("Write clearing int flag failed
");
+
+	if (ilitek_ice_mode_write(0x041016, 0x00, 1) < 0)
+		ipio_err("Write 0x0 at 0x041016 failed
");
+
+	if (ilitek_ice_mode_write(0x041016, 0x01, 1) < 0)
+		ipio_err("Write Checksum_En failed
");
+
+	if (ilitek_ice_mode_write(FLASH4_ADDR, 0xFF, 1) < 0)
+		ipio_err("Write start to receive failed
");
+
+	do {
+		if (ilitek_ice_mode_read(0x048007, &busy, sizeof(u8)) < 0)
+			ipio_err("Read busy error
");
+
+		ipio_debug("busy = %x
", busy);
+		if (((busy >> 1) & 0x01) == 0x01)
+			break;
+	} while (--retry >= 0);
+
+	if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x1, 1) < 0)
+		ipio_err("Write CS high failed
");
+
+	if (retry <= 0) {
+		ipio_err("Read HW CRC timeout !, busy = 0x%x
", busy);
+		return -1;
+	}
+
+	if (ilitek_ice_mode_write(0x041003, 0x0, 1) < 0)
+		ipio_err("Write disable dio_Rx_dual failed
");
+
+	if (ilitek_ice_mode_read(0x04101C, &flash_crc, sizeof(u32)) < 0) {
+		ipio_err("Read hw crc error
");
+		return -1;
+	}
+
+	return flash_crc;
+}
+
+int ilitek_tddi_fw_read_flash_data(u32 start, u32 end, u8 *data, int len)
+{
+	u32 i, index = 0, precent;
+	u32 tmp;
+
+	if (end - start > len) {
+		ipio_err("the length (%d) reading crc is over than len(%d)
", end - start, len);
+		return -1;
+	}
+
+	if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x0, 1) < 0)
+		ipio_err("Write cs low failed
");
+
+	if (ilitek_ice_mode_write(FLASH1_ADDR, 0x66aa55, 3) < 0)
+		ipio_err("Write key failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, 0x03, 1) < 0)
+		ipio_err("Write 0x3 failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, (start & 0xFF0000) >> 16, 1) < 0)
+		ipio_err("Write address failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, (start & 0x00FF00) >> 8, 1) < 0)
+		ipio_err("Write address failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, (start & 0x0000FF), 1) < 0)
+		ipio_err("Write address failed
");
+
+	for (i = start; i <= end; i++) {
+		if (ilitek_ice_mode_write(FLASH2_ADDR, 0xFF, 1) < 0)
+			ipio_err("Write dummy failed
");
+
+		if (ilitek_ice_mode_read(FLASH4_ADDR, &tmp, sizeof(u8)) < 0)
+			ipio_err("Read flash data error!
");
+
+		data[index] = tmp;
+		index++;
+		precent = (i * 100) / end;
+		ipio_debug("Reading flash data .... %d%c", precent, '%');
+	}
+
+	if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x1, 1) < 0)
+		ipio_err("Write cs high failed
");
+
+	return 0;
+}
+
+int ilitek_tddi_fw_dump_flash_data(u32 start, u32 end, bool user)
+{
+	struct file *f = NULL;
+	u8 *buf = NULL;
+	mm_segment_t old_fs;
+	loff_t pos = 0;
+	u32 start_addr, end_addr;
+	int ret, length;
+
+	f = filp_open(DUMP_FLASH_PATH, O_WRONLY | O_CREAT | O_TRUNC, 644);
+	if (ERR_ALLOC_MEM(f)) {
+		ipio_err("Failed to open the file at %ld.
", PTR_ERR(f));
+		return -1;
+	}
+
+	ret = ilitek_ice_mode_ctrl(ENABLE, OFF);
+	if (ret < 0)
+		return ret;
+
+	if (user) {
+		start_addr = 0x0;
+		end_addr = 0x1FFFF;
+	} else {
+		start_addr = start;
+		end_addr = end;
+	}
+
+	length = end_addr - start_addr + 1;
+	ipio_info("len = %d
", length);
+
+	buf = vmalloc(length * sizeof(u8));
+	if (ERR_ALLOC_MEM(buf)) {
+		ipio_err("Failed to allocate buf memory, %ld
", PTR_ERR(buf));
+		filp_close(f, NULL);
+		ilitek_ice_mode_ctrl(DISABLE, OFF);
+		return -1;
+	}
+
+	ilitek_tddi_fw_read_flash_data(start_addr, end_addr, buf, length);
+
+	old_fs = get_fs();
+	set_fs(get_ds());
+	set_fs(KERNEL_DS);
+	pos = 0;
+	vfs_write(f, buf, length, &pos);
+	set_fs(old_fs);
+	filp_close(f, NULL);
+	ipio_vfree((void **)&buf);
+	ilitek_ice_mode_ctrl(DISABLE, OFF);
+	ipio_info("dump flash success
");
+	return 0;
+}
+
+static void ilitek_tddi_flash_protect(bool enable)
+{
+	ipio_info("%s flash protection
", enable ? "Enable" : "Disable");
+
+	ilitek_tddi_flash_write_enable();
+
+	if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x0, 1) < 0)
+		ipio_err("Write cs low failed
");
+
+	if (ilitek_ice_mode_write(FLASH1_ADDR, 0x66aa55, 3) < 0)
+		ipio_err("Write key failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, 0x1, 1) < 0)
+		ipio_err("Write 0x1 failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, 0x0, 1) < 0)
+		ipio_err("Write 0x0 failed
");
+
+	switch (idev->flash_mid) {
+	case 0xEF:
+		if (idev->flash_devid == 0x6012 || idev->flash_devid == 0x6011) {
+			if (enable) {
+				if (ilitek_ice_mode_write(FLASH2_ADDR, 0x7E, 1) < 0)
+					ipio_err("Write 0x7E at %x failed
", FLASH2_ADDR);
+			} else {
+				if (ilitek_ice_mode_write(FLASH2_ADDR, 0x0, 1) < 0)
+					ipio_err("Write 0x0 at %x failed
", FLASH2_ADDR);
+			}
+		}
+		break;
+	case 0xC8:
+		if (idev->flash_devid == 0x6012 || idev->flash_devid == 0x6013) {
+			if (enable) {
+				if (ilitek_ice_mode_write(FLASH2_ADDR, 0x7A, 1) < 0)
+					ipio_err("Write 0x7A at %x failed
", FLASH2_ADDR);
+			} else {
+				if (ilitek_ice_mode_write(FLASH2_ADDR, 0x0, 1) < 0)
+					ipio_err("Write 0x0 at %x failed
", FLASH2_ADDR);
+			}
+
+		}
+		break;
+	default:
+		ipio_err("Can't find flash id(0x%x), ignore protection
", idev->flash_mid);
+		break;
+	}
+
+	if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x1, 1) < 0)
+		ipio_err("Write cs high failed
");
+}
+
+static int ilitek_tddi_fw_check_ver(u8 *pfw)
+{
+	int i, crc_byte_len = 4;
+	u8 flash_crc[4] = {0};
+	u32 start_addr = 0, end_addr = 0;
+	u32 block_crc, flash_crc_cb;
+
+	/* Check FW version */
+	ipio_info("New FW ver = 0x%x, Current FW ver = 0x%x
", tfd.new_fw_cb, idev->chip->fw_ver);
+	if (tfd.new_fw_cb != idev->chip->fw_ver) {
+		ipio_info("FW version is different, do upgrade
");
+		return UPDATE_FAIL;
+	}
+
+	ipio_info("FW version is the same, check Flash and HW CRC if there's corruption.
");
+
+	/* Check Flash and HW CRC with last 4 bytes in each block */
+	for (i = 0; i < ARRAY_SIZE(fbi); i++) {
+		start_addr = fbi[i].start;
+		end_addr = fbi[i].end;
+
+		/* Invaild end address */
+		if (end_addr == 0)
+			continue;
+
+		if (ilitek_tddi_fw_read_flash_data(end_addr - crc_byte_len + 1, end_addr,
+					flash_crc, sizeof(flash_crc)) < 0) {
+			ipio_err("Read Flash failed
");
+			return UPDATE_FAIL;
+		}
+
+		flash_crc_cb = flash_crc[0] << 24 | flash_crc[1] << 16 | flash_crc[2] << 8 | flash_crc[3];
+
+		block_crc = ilitek_tddi_fw_read_hw_crc(start_addr, end_addr - start_addr - crc_byte_len + 1);
+
+		ipio_info("Block = %d, HW CRC = 0x%06x, Flash CRC = 0x%06x
", i, block_crc, flash_crc_cb);
+
+		/* Compare Flash CRC with HW CRC */
+		if (flash_crc_cb != block_crc) {
+			ipio_info("Both are different, do update
");
+			return UPDATE_FAIL;
+		}
+		memset(flash_crc, 0, sizeof(flash_crc));
+	}
+
+	if (idev->force_fw_update == ENABLE) {
+		ipio_info("update by node, force update
");
+		return UPDATE_FAIL;
+	}
+
+	ipio_info("Both are the same, no need to update
");
+	return UPDATE_PASS;
+}
+
+static int ilitek_tddi_fw_iram_upgrade(u8 *pfw)
+{
+	int i, ret = UPDATE_PASS;
+	u32 mode, crc, dma;
+	u8 *fw_ptr = NULL;
+
+	if (!idev->ddi_rest_done) {
+		if (idev->actual_tp_mode != P5_X_FW_GESTURE_MODE)
+			ilitek_tddi_reset_ctrl(idev->reset);
+
+		ret = ilitek_ice_mode_ctrl(ENABLE, OFF);
+		if (ret < 0)
+			return ret;
+	} else {
+		/* Restore it if the wq of load_fw_ddi has been called. */
+		idev->ddi_rest_done = false;
+	}
+
+	ret = ilitek_tddi_ic_watch_dog_ctrl(ILI_WRITE, DISABLE);
+	if (ret < 0)
+		return ret;
+
+	fw_ptr = pfw;
+	if (idev->actual_tp_mode == P5_X_FW_TEST_MODE) {
+		mode = MP;
+	} else if (idev->actual_tp_mode == P5_X_FW_GESTURE_MODE) {
+		mode = GESTURE;
+		fw_ptr = gestrue_fw;
+	} else {
+		mode = AP;
+	}
+
+	/* Program data to iram acorrding to each block */
+	for (i = 0; i < ARRAY_SIZE(fbi); i++) {
+		if (fbi[i].mode == mode && fbi[i].len != 0) {
+			ipio_info("Download %s code from hex 0x%x to IRAM 0x%x, len = 0x%x
",
+					fbi[i].name, fbi[i].start, fbi[i].mem_start, fbi[i].len);
+
+#ifdef SPI_DMA_TRANSFER_SPLIT
+			if (ilitek_tddi_fw_iram_program(fbi[i].mem_start, (fw_ptr + fbi[i].start), fbi[i].len, SPI_UPGRADE_LEN) < 0)
+				ipio_err("IRAM program failed
");
+#else
+			if (ilitek_tddi_fw_iram_program(fbi[i].mem_start, (fw_ptr + fbi[i].start), fbi[i].len, 0) < 0)
+				ipio_err("IRAM program failed
");
+#endif
+
+			crc = CalculateCRC32(fbi[i].start, fbi[i].len - 4, fw_ptr);
+			dma = host_download_dma_check(fbi[i].mem_start, fbi[i].len - 4);
+
+			ipio_info("%s CRC is %s (%x) : (%x)
",
+				fbi[i].name, (crc != dma ? "Invalid !" : "Correct !"), crc, dma);
+
+			if (crc != dma) {
+				ipio_err("CRC Failed! print iram 64k bytes for debug
");
+				ilitek_tddi_fw_print_iram_data();
+				return UPDATE_FAIL;
+			}
+			idev->fw_update_stat = 90;
+		}
+	}
+
+	if (idev->actual_tp_mode != P5_X_FW_GESTURE_MODE) {
+		if (ilitek_tddi_reset_ctrl(TP_IC_CODE_RST) < 0)
+			ipio_err("TP Code reset failed during iram programming
");
+	}
+
+	if (ilitek_ice_mode_ctrl(DISABLE, OFF) < 0)
+		ipio_err("Disable ice mode failed after code reset
");
+
+	/* Waiting for fw ready */
+	mdelay(100);
+	return ret;
+}
+
+static int ilitek_tddi_fw_flash_program(u8 *pfw)
+{
+	u8 buf[512] = {0};
+	u32 i = 0, addr = 0, k = 0, recv_addr = 0;
+	bool skip = true;
+
+	for (i = 0; i < FW_BLOCK_INFO_NUM; i++) {
+		if (fbi[i].end == 0)
+			continue;
+
+		if (fbi[i].start >= RESERVE_BLOCK_START_ADDR &&
+			fbi[i].end <= RESERVE_BLOCK_END_ADDR)
+			continue;
+
+		ipio_info("Block[%d]: Programing from (0x%x) to (0x%x)
", i, fbi[i].start, fbi[i].end);
+
+		for (addr = fbi[i].start; addr < fbi[i].end; addr += idev->program_page) {
+			buf[0] = 0x25;
+			buf[3] = 0x04;
+			buf[2] = 0x10;
+			buf[1] = 0x08;
+
+			for (k = 0; k < idev->program_page; k++) {
+				if (addr + k <= tfd.end_addr)
+					buf[4 + k] = pfw[addr + k];
+				else
+					buf[4 + k] = 0xFF;
+
+				if (buf[4 + k] != 0xFF)
+					skip = false;
+			}
+
+			if (skip) {
+				if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x1, 1) < 0)
+					ipio_err("Write cs high failed
");
+				return UPDATE_FAIL;
+			}
+
+			ilitek_tddi_flash_write_enable();
+
+			if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x0, 1) < 0)
+				ipio_err("Write cs low failed
");
+
+			if (ilitek_ice_mode_write(FLASH1_ADDR, 0x66aa55, 3) < 0)
+				ipio_err("Write key failed
");
+
+			if (ilitek_ice_mode_write(FLASH2_ADDR, 0x2, 1) < 0)
+				ipio_err("Write 0x2 failed
");
+
+			recv_addr = ((addr & 0xFF0000) >> 16) | (addr & 0x00FF00) | ((addr & 0x0000FF) << 16);
+			if (ilitek_ice_mode_write(FLASH2_ADDR, recv_addr, 3) < 0)
+				ipio_err("Write address failed
");
+
+			if (idev->write(buf, idev->program_page + 4) < 0) {
+				ipio_err("Failed to program data at start_addr = 0x%X, k = 0x%X, addr = 0x%x
",
+				addr, k, addr + k);
+				if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x1, 1) < 0)
+					ipio_err("Write cs high failed
");
+				return UPDATE_FAIL;
+			}
+
+			if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x1, 1) < 0)
+				ipio_err("Write cs high failed
");
+
+			if (idev->flash_mid == 0xEF) {
+				mdelay(1);
+			} else {
+				if (ilitek_tddi_flash_poll_busy(TIMEOUT_PROGRAM) < 0)
+					return UPDATE_FAIL;
+			}
+
+			/* holding the status until finish this upgrade. */
+			idev->fw_update_stat = (addr * 101) / tfd.end_addr;
+			if (idev->fw_update_stat > 90)
+				idev->fw_update_stat = 90;
+		}
+	}
+	return UPDATE_PASS;
+}
+
+static int ilitek_tddi_fw_flash_erase(void)
+{
+	int ret = 0;
+	u32 i = 0, addr = 0, recv_addr = 0;
+
+	for (i = 0; i < FW_BLOCK_INFO_NUM; i++) {
+		if (fbi[i].end == 0)
+			continue;
+
+		if (fbi[i].start >= RESERVE_BLOCK_START_ADDR &&
+			fbi[i].end <= RESERVE_BLOCK_END_ADDR)
+			continue;
+
+		ipio_info("Block[%d]: Erasing from (0x%x) to (0x%x) 
", i, fbi[i].start, fbi[i].end);
+
+		for (addr = fbi[i].start; addr <= fbi[i].end; addr += idev->flash_sector) {
+			ilitek_tddi_flash_write_enable();
+
+			if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x0, 1) < 0)
+				ipio_err("Write cs low failed
");
+
+			if (ilitek_ice_mode_write(FLASH1_ADDR, 0x66aa55, 3) < 0)
+				ipio_err("Write key failed
");
+
+			if (addr == fbi[AP].start) {
+				if (ilitek_ice_mode_write(FLASH2_ADDR, 0xD8, 1) < 0)
+					ipio_err("Write 0xB at %x failed
", FLASH2_ADDR);
+			} else {
+				if (ilitek_ice_mode_write(FLASH2_ADDR, 0x20, 1) < 0)
+					ipio_err("Write 0x20 at %x failed
", FLASH2_ADDR);
+			}
+
+			recv_addr = ((addr & 0xFF0000) >> 16) | (addr & 0x00FF00) | ((addr & 0x0000FF) << 16);
+			if (ilitek_ice_mode_write(FLASH2_ADDR, recv_addr, 3) < 0)
+				ipio_err("Write address failed
");
+
+			if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x1, 1) < 0)
+				ipio_err("Write cs high failed
");
+
+			/* Waitint for flash setting ready */
+			mdelay(1);
+
+			if (addr == fbi[AP].start)
+				ret = ilitek_tddi_flash_poll_busy(TIMEOUT_PAGE);
+			else
+				ret = ilitek_tddi_flash_poll_busy(TIMEOUT_SECTOR);
+
+			if (ret < 0)
+				return UPDATE_FAIL;
+
+			if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x1, 1) < 0)
+				ipio_err("Write cs high failed
");
+
+			if (fbi[i].start == fbi[AP].start)
+				break;
+		}
+	}
+	return UPDATE_PASS;
+}
+
+static int ilitek_tddi_fw_flash_upgrade(u8 *pfw)
+{
+	int ret = UPDATE_PASS;
+
+	if (ilitek_tddi_reset_ctrl(idev->reset) < 0)
+		ipio_err("TP reset failed during flash progam
");
+
+	/* Get current fw version before comparing. */
+	if (ilitek_tddi_ic_get_fw_ver() < 0)
+		ipio_err("Get firmware ver failed before upgrade
");
+
+	ret = ilitek_ice_mode_ctrl(ENABLE, OFF);
+	if (ret < 0)
+		return UPDATE_FAIL;
+
+	ret = ilitek_tddi_ic_watch_dog_ctrl(ILI_WRITE, DISABLE);
+	if (ret < 0)
+		return ret;
+
+	ret = ilitek_tddi_fw_check_ver(pfw);
+	if (ret == UPDATE_PASS) {
+		if (ilitek_ice_mode_ctrl(DISABLE, OFF) < 0) {
+			ipio_err("Disable ice mode failed, call reset instead
");
+			if (ilitek_tddi_reset_ctrl(idev->reset) < 0) {
+				ipio_err("TP reset failed during flash progam
");
+				return UPDATE_FAIL;
+			}
+			return UPDATE_PASS;
+		}
+		return UPDATE_PASS;
+	}
+
+	ret = ilitek_tddi_fw_flash_erase();
+	if (ret == UPDATE_FAIL)
+		return UPDATE_FAIL;
+
+	ret = ilitek_tddi_fw_flash_program(pfw);
+	if (ret == UPDATE_FAIL)
+		return UPDATE_FAIL;
+
+	ret = ilitek_tddi_fw_check_hex_hw_crc(pfw);
+	if (ret == UPDATE_FAIL)
+		return UPDATE_FAIL;
+
+	/* We do have to reset chip in order to move new code from flash to iram. */
+	if (ilitek_tddi_reset_ctrl(idev->reset) < 0)
+		ipio_err("TP reset failed after flash progam
");
+
+	return ret;
+}
+
+static void ilitek_tddi_fw_update_block_info(u8 *pfw, u8 type)
+{
+	u32 ges_area_section, ges_info_addr, ges_fw_start, ges_fw_end;
+	u32 ap_end, ap_len;
+
+	ipio_info("Upgarde = %s, Tag = %x
", type ? "IRAM" : "Flash", tfd.hex_tag);
+
+	if (type == UPGRADE_IRAM) {
+		if (tfd.hex_tag == BLOCK_TAG_AF) {
+			fbi[AP].mem_start = (fbi[AP].fix_mem_start != INT_MAX) ? fbi[AP].fix_mem_start : 0;
+			fbi[DATA].mem_start = (fbi[DATA].fix_mem_start != INT_MAX) ? fbi[DATA].fix_mem_start : DLM_START_ADDRESS;
+			fbi[TUNING].mem_start = (fbi[TUNING].fix_mem_start != INT_MAX) ? fbi[TUNING].fix_mem_start :  fbi[DATA].mem_start + fbi[DATA].len;
+			fbi[MP].mem_start = (fbi[MP].fix_mem_start != INT_MAX) ? fbi[MP].fix_mem_start :  0;
+			fbi[GESTURE].mem_start = (fbi[GESTURE].fix_mem_start != INT_MAX) ? fbi[GESTURE].fix_mem_start :	 0;
+
+			/* Parsing gesture info form AP code */
+			ges_info_addr = (fbi[AP].end + 1 - 60);
+			ges_area_section = (pfw[ges_info_addr + 3] << 24) + (pfw[ges_info_addr + 2] << 16) + (pfw[ges_info_addr + 1] << 8) + pfw[ges_info_addr];
+			fbi[GESTURE].mem_start = (pfw[ges_info_addr + 7] << 24) + (pfw[ges_info_addr + 6] << 16) + (pfw[ges_info_addr + 5] << 8) + pfw[ges_info_addr + 4];
+			ap_end = (pfw[ges_info_addr + 11] << 24) + (pfw[ges_info_addr + 10] << 16) + (pfw[ges_info_addr + 9] << 8) + pfw[ges_info_addr + 8];
+			ap_len = ap_end - fbi[GESTURE].mem_start + 1;
+			ges_fw_start = (pfw[ges_info_addr + 15] << 24) + (pfw[ges_info_addr + 14] << 16) + (pfw[ges_info_addr + 13] << 8) + pfw[ges_info_addr + 12];
+			ges_fw_end = (pfw[ges_info_addr + 19] << 24) + (pfw[ges_info_addr + 18] << 16) + (pfw[ges_info_addr + 17] << 8) + pfw[ges_info_addr + 16];
+			fbi[GESTURE].len = ges_fw_end - ges_fw_start + 1;
+			fbi[GESTURE].start = 0;
+
+		} else {
+			memset(fbi, 0x0, sizeof(fbi));
+			fbi[AP].start = 0;
+			fbi[AP].mem_start = 0;
+			fbi[AP].len = MAX_AP_FIRMWARE_SIZE;
+
+			fbi[DATA].start = DLM_HEX_ADDRESS;
+			fbi[DATA].mem_start = DLM_START_ADDRESS;
+			fbi[DATA].len = MAX_DLM_FIRMWARE_SIZE;
+
+			fbi[MP].start = MP_HEX_ADDRESS;
+			fbi[MP].mem_start = 0;
+			fbi[MP].len = MAX_MP_FIRMWARE_SIZE;
+
+			/* Parsing gesture info form AP code */
+			ges_info_addr = (MAX_AP_FIRMWARE_SIZE - 60);
+			ges_area_section = (pfw[ges_info_addr + 3] << 24) + (pfw[ges_info_addr + 2] << 16) + (pfw[ges_info_addr + 1] << 8) + pfw[ges_info_addr];
+			fbi[GESTURE].mem_start = (pfw[ges_info_addr + 7] << 24) + (pfw[ges_info_addr + 6] << 16) + (pfw[ges_info_addr + 5] << 8) + pfw[ges_info_addr + 4];
+			ap_end = (pfw[ges_info_addr + 11] << 24) + (pfw[ges_info_addr + 10] << 16) + (pfw[ges_info_addr + 9] << 8) + pfw[ges_info_addr + 8];
+			ap_len = ap_end - fbi[GESTURE].mem_start + 1;
+			ges_fw_start = (pfw[ges_info_addr + 15] << 24) + (pfw[ges_info_addr + 14] << 16) + (pfw[ges_info_addr + 13] << 8) + pfw[ges_info_addr + 12];
+			ges_fw_end = (pfw[ges_info_addr + 19] << 24) + (pfw[ges_info_addr + 18] << 16) + (pfw[ges_info_addr + 17] << 8) + pfw[ges_info_addr + 16];
+			fbi[GESTURE].len = ges_fw_end - ges_fw_start + 1;
+			fbi[GESTURE].start = 0;
+
+		}
+
+		memset(gestrue_fw, 0xff, sizeof(gestrue_fw));
+
+		/* Copy gesture data */
+		if (fbi[GESTURE].mem_start != 0xffffffff && ges_fw_start != 0xffffffff && fbi[GESTURE].mem_start != 0 && ges_fw_start != 0)
+			ipio_memcpy(gestrue_fw, (pfw + ges_fw_start), fbi[GESTURE].len, sizeof(gestrue_fw));
+		else
+			ipio_err("There is no gesture data inside fw
");
+
+		ipio_info("==== Gesture loader info ====
");
+		ipio_info("ap_start = 0x%x, ap_end = 0x%x, ap_len = 0x%x
", fbi[GESTURE].mem_start, ap_end, ap_len);
+		ipio_info("gesture_start = 0x%x, gesture_end = 0x%x, gesture_len = 0x%x
", ges_fw_start, ges_fw_end, fbi[GESTURE].len);
+		ipio_info("=============================
");
+
+		fbi[AP].name = "AP";
+		fbi[DATA].name = "DATA";
+		fbi[TUNING].name = "TUNING";
+		fbi[MP].name = "MP";
+		fbi[GESTURE].name = "GESTURE";
+
+		/* upgrade mode define */
+		fbi[DATA].mode = fbi[AP].mode = fbi[TUNING].mode = AP;
+		fbi[MP].mode = MP;
+		fbi[GESTURE].mode = GESTURE;
+	}
+
+	/* Save fw info buffer */
+	ipio_memcpy(idev->chip->info, (pfw + idev->chip->info_addr), sizeof(idev->chip->info), sizeof(idev->chip->info));
+	ilitek_dump_data(idev->chip->info, 8, sizeof(idev->chip->info), 16, "info");
+	/* Get hex fw vers */
+	tfd.new_fw_cb = (pfw[FW_VER_ADDR] << 24) | (pfw[FW_VER_ADDR + 1] << 16) |
+			(pfw[FW_VER_ADDR + 2] << 8) | (pfw[FW_VER_ADDR + 3]);
+
+	/* Calculate update address */
+	ipio_info("New FW ver = 0x%x
", tfd.new_fw_cb);
+	ipio_info("star_addr = 0x%06X, end_addr = 0x%06X, Block Num = %d
", tfd.start_addr, tfd.end_addr, tfd.block_number);
+}
+
+static int ilitek_tddi_fw_ili_convert(u8 *pfw)
+{
+	int i = 0, block_enable = 0, num = 0;
+	u8 block;
+	u32 Addr;
+
+	ipio_info("Start to parse ILI file, type = %d, block_count = %d
", CTPM_FW[32], CTPM_FW[33]);
+
+	memset(fbi, 0x0, sizeof(fbi));
+
+	tfd.start_addr = 0;
+	tfd.end_addr = 0;
+	tfd.hex_tag = 0;
+
+	block_enable = CTPM_FW[32];
+
+	if (block_enable == 0) {
+		tfd.hex_tag = BLOCK_TAG_AE;
+		goto out;
+	}
+
+	tfd.hex_tag = BLOCK_TAG_AF;
+	for (i = 0; i < FW_BLOCK_INFO_NUM; i++) {
+		if (((block_enable >> i) & 0x01) == 0x01) {
+			num = i + 1;
+
+			if (num > (FW_BLOCK_INFO_NUM - 1)) {
+				ipio_err("ERROR! block num is larger than its define (%d, %d)
",
+						num, FW_BLOCK_INFO_NUM - 1);
+				return -EINVAL;
+			}
+
+			if ((num) == 6) {
+				fbi[num].start = (CTPM_FW[0] << 16) + (CTPM_FW[1] << 8) + (CTPM_FW[2]);
+				fbi[num].end = (CTPM_FW[3] << 16) + (CTPM_FW[4] << 8) + (CTPM_FW[5]);
+				fbi[num].fix_mem_start = INT_MAX;
+			} else {
+				fbi[num].start = (CTPM_FW[34 + i * 6] << 16) + (CTPM_FW[35 + i * 6] << 8) + (CTPM_FW[36 + i * 6]);
+				fbi[num].end = (CTPM_FW[37 + i * 6] << 16) + (CTPM_FW[38 + i * 6] << 8) + (CTPM_FW[39 + i * 6]);
+				fbi[num].fix_mem_start = INT_MAX;
+			}
+			fbi[num].len = fbi[num].end - fbi[num].start + 1;
+			ipio_info("Block[%d]: start_addr = %x, end = %x
", num, fbi[num].start, fbi[num].end);
+		}
+	}
+
+	if ((block_enable & 0x80) == 0x80) {
+		for (i = 0; i < 3; i++) {
+			Addr = (CTPM_FW[6 + i * 4] << 16) + (CTPM_FW[7 + i * 4] << 8) + (CTPM_FW[8 + i * 4]);
+			block = CTPM_FW[9 + i * 4];
+
+			if ((block != 0) && (Addr != 0x000000)) {
+				fbi[block].fix_mem_start = Addr;
+				ipio_info("Tag 0xB0: change Block[%d] to addr = 0x%x
", block, fbi[block].fix_mem_start);
+			}
+		}
+	}
+
+out:
+	tfd.block_number = CTPM_FW[33];
+	memcpy(pfw, CTPM_FW + ILI_FILE_HEADER, (sizeof(CTPM_FW) - ILI_FILE_HEADER));
+	tfd.end_addr = (sizeof(CTPM_FW) - ILI_FILE_HEADER);
+	return 0;
+}
+
+static int ilitek_tddi_fw_hex_convert(u8 *phex, int size, u8 *pfw)
+{
+	int block = 0;
+	u32 i = 0, j = 0, k = 0, num = 0;
+	u32 len = 0, addr = 0, type = 0;
+	u32 start_addr = 0x0, end_addr = 0x0, ex_addr = 0;
+	u32 offset, hex_crc, data_crc;
+
+	memset(fbi, 0x0, sizeof(fbi));
+
+	/* Parsing HEX file */
+	for (; i < size;) {
+		len = HexToDec(&phex[i + 1], 2);
+		addr = HexToDec(&phex[i + 3], 4);
+		type = HexToDec(&phex[i + 7], 2);
+
+		if (type == 0x04) {
+			ex_addr = HexToDec(&phex[i + 9], 4);
+		} else if (type == 0x02) {
+			ex_addr = HexToDec(&phex[i + 9], 4);
+			ex_addr = ex_addr >> 12;
+		} else if (type == BLOCK_TAG_AE || type == BLOCK_TAG_AF) {
+			/* insert block info extracted from hex */
+			tfd.hex_tag = type;
+			if (tfd.hex_tag == BLOCK_TAG_AF)
+				num = HexToDec(&phex[i + 9 + 6 + 6], 2);
+			else
+				num = block;
+
+			if (num > (FW_BLOCK_INFO_NUM - 1)) {
+				ipio_err("ERROR! block num is larger than its define (%d, %d)
",
+						num, FW_BLOCK_INFO_NUM - 1);
+				return -EINVAL;
+			}
+
+			fbi[num].start = HexToDec(&phex[i + 9], 6);
+			fbi[num].end = HexToDec(&phex[i + 9 + 6], 6);
+			fbi[num].fix_mem_start = INT_MAX;
+			fbi[num].len = fbi[num].end - fbi[num].start + 1;
+			ipio_info("Block[%d]: start_addr = %x, end = %x", num, fbi[num].start, fbi[num].end);
+
+			block++;
+		} else if (type == BLOCK_TAG_B0 && tfd.hex_tag == BLOCK_TAG_AF) {
+			num = HexToDec(&phex[i + 9 + 6], 2);
+
+			if (num > (FW_BLOCK_INFO_NUM - 1)) {
+				ipio_err("ERROR! block num is larger than its define (%d, %d)
",
+						num, FW_BLOCK_INFO_NUM - 1);
+				return -EINVAL;
+			}
+
+			fbi[num].fix_mem_start = HexToDec(&phex[i + 9], 6);
+			ipio_info("Tag 0xB0: change Block[%d] to addr = 0x%x
", num, fbi[num].fix_mem_start);
+		}
+
+		addr = addr + (ex_addr << 16);
+
+		if (phex[i + 1 + 2 + 4 + 2 + (len * 2) + 2] == 0x0D)
+			offset = 2;
+		else
+			offset = 1;
+
+		if (addr > MAX_HEX_FILE_SIZE) {
+			ipio_err("Invalid hex format %d
", addr);
+			return -1;
+		}
+
+		if (type == 0x00) {
+			end_addr = addr + len;
+			if (addr < start_addr)
+				start_addr = addr;
+			/* fill data */
+			for (j = 0, k = 0; j < (len * 2); j += 2, k++)
+				pfw[addr + k] = HexToDec(&phex[i + 9 + j], 2);
+		}
+		i += 1 + 2 + 4 + 2 + (len * 2) + 2 + offset;
+	}
+
+	/* Check the content of hex file by comparsing parsed data to the crc at last 4 bytes */
+	for (i = 0; i < ARRAY_SIZE(fbi); i++) {
+		if (fbi[i].end == 0)
+			continue;
+		ex_addr = fbi[i].end;
+		data_crc = CalculateCRC32(fbi[i].start, fbi[i].len - 4, pfw);
+		hex_crc = pfw[ex_addr - 3] << 24 | pfw[ex_addr - 2] << 16 | pfw[ex_addr - 1] << 8 | pfw[ex_addr];
+		ipio_debug("data crc = %x, hex crc = %x
", data_crc, hex_crc);
+		if (data_crc != hex_crc) {
+			ipio_err("Content of hex file is broken. (%d, %x, %x)
",
+				i, data_crc, hex_crc);
+			return -1;
+		}
+	}
+
+	ipio_info("Contect of hex file is correct
");
+	tfd.start_addr = start_addr;
+	tfd.end_addr = end_addr;
+	tfd.block_number = block;
+	return 0;
+}
+
+static int ilitek_tdd_fw_hex_open(u8 open_file_method, u8 *pfw)
+{
+	int fsize = 0;
+	const struct firmware *fw = NULL;
+	struct file *f = NULL;
+	mm_segment_t old_fs;
+	loff_t pos = 0;
+
+	ipio_info("Open file method = %s, path = %s
",
+		open_file_method ? "FILP_OPEN" : "REQUEST_FIRMWARE",
+		open_file_method ? UPDATE_FW_FILP_PATH : UPDATE_FW_REQUEST_PATH);
+
+	switch (open_file_method) {
+	case REQUEST_FIRMWARE:
+		if (request_firmware(&fw, UPDATE_FW_REQUEST_PATH, idev->dev) < 0) {
+			ipio_err("Request firmware failed
");
+			goto convert_hex;
+		}
+
+		fsize = fw->size;
+		ipio_info("fsize = %d
", fsize);
+		if (fsize <= 0) {
+			ipio_err("The size of file is zero
");
+			release_firmware(fw);
+			goto convert_hex;
+		}
+
+		ipio_vfree((void **) & (idev->tp_fw.data));
+		idev->tp_fw.size = 0;
+		idev->tp_fw.data = vmalloc(fsize);
+		if (!idev->tp_fw.data) {
+			ipio_err("Failed to allocate tp_fw by vmalloc, try again
");
+			idev->tp_fw.data = vmalloc(fsize);
+			if (!idev->tp_fw.data) {
+				ipio_err("Failed to allocate tp_fw after retry
");
+				return -ENOMEM;
+			}
+		}
+
+		/* Copy fw data got from request_firmware to global */
+		ipio_memcpy((u8 *)idev->tp_fw.data, fw->data, fsize * sizeof(*fw->data), fsize);
+		idev->tp_fw.size = fsize;
+		release_firmware(fw);
+		break;
+	case FILP_OPEN:
+		f = filp_open(UPDATE_FW_FILP_PATH, O_RDONLY, 0644);
+		if (ERR_ALLOC_MEM(f)) {
+			ipio_err("Failed to open the file at %ld, try to load it from tp_fw
", PTR_ERR(f));
+			goto convert_hex;
+		}
+
+/*
+		f = filp_open(UPDATE_FW_FILP_PATH, O_RDONLY, 0644);
+		if (ERR_ALLOC_MEM(f)) {
+			ipio_err("Failed to open the file %s at %ld.
", UPDATE_FW_FILP_PATH, PTR_ERR(f));
+			msleep(4000);
+			f = filp_open(UPDATE_FW_FILP_PATH, O_RDONLY, 0644);
+			if (ERR_ALLOC_MEM(f)) {
+				ipio_err("Retry to open the file failed %s at %ld.
", UPDATE_FW_FILP_PATH, PTR_ERR(f));
+				goto convert_hex;
+			}
+			ipio_info("Retry open file succeed %d 
", PTR_ERR(f));
+		}
+*/
+		ipio_info("Open file succeed %s at %d 
", UPDATE_FW_FILP_PATH, PTR_ERR(f));
+
+		fsize = f->f_inode->i_size;
+		ipio_info("fsize = %d
", fsize);
+		if (fsize <= 0) {
+			ipio_err("The size of file is invaild, try to load it from tp_fw
");
+			filp_close(f, NULL);
+			goto convert_hex;
+		}
+
+		ipio_vfree((void **) & (idev->tp_fw.data));
+		idev->tp_fw.size = 0;
+		idev->tp_fw.data = vmalloc(fsize);
+		if (idev->tp_fw.data == NULL) {
+			ipio_err("Failed to allocate tp_fw by vmalloc, try again
");
+			idev->tp_fw.data = vmalloc(fsize);
+			if (idev->tp_fw.data == NULL) {
+				ipio_err("Failed to allocate tp_fw after retry
");
+				filp_close(f, NULL);
+				return -ENOMEM;
+			}
+		}
+
+		/* ready to map user's memory to obtain data by reading files */
+		old_fs = get_fs();
+		set_fs(get_ds());
+		set_fs(KERNEL_DS);
+		pos = 0;
+		vfs_read(f, (u8 *)idev->tp_fw.data, fsize, &pos);
+		set_fs(old_fs);
+		filp_close(f, NULL);
+		idev->tp_fw.size = fsize;
+		break;
+	default:
+		ipio_err("Unknown open file method, %d
", open_file_method);
+		break;
+	}
+
+convert_hex:
+	/* Convert hex and copy data from tp_fw.data to pfw */
+	if (!ERR_ALLOC_MEM(idev->tp_fw.data) && idev->tp_fw.size > 0) {
+		if (ilitek_tddi_fw_hex_convert((u8 *)idev->tp_fw.data, idev->tp_fw.size, pfw) < 0) {
+			ipio_err("Convert hex file failed
");
+			return -1;
+		}
+	} else {
+		ipio_err("tp_fw is NULL or fsize(%d) is zero
", fsize);
+		return -1;
+	}
+	return 0;
+}
+
+static void ilitek_tddi_fw_check_update(int ret)
+{
+	ipio_info("FW upgrade %s
", (ret == UPDATE_PASS ? "PASS" : "FAIL"));
+
+	if (ret == UPDATE_FAIL) {
+		if (atomic_read(&idev->mp_stat)) {
+			ipio_info("No need to erase data during mp test
");
+			return;
+		}
+
+		ipio_info("Erase all fw data
");
+		if (idev->fw_upgrade_mode == UPGRADE_IRAM) {
+			if (ilitek_tddi_reset_ctrl(idev->reset) < 0)
+				ipio_err("TP reset failed while erasing data
");
+		} else {
+			if (ilitek_ice_mode_ctrl(ENABLE, OFF) < 0)
+				ipio_err("Enable ice mode failed while erasing data
");
+
+			if (ilitek_tddi_fw_flash_erase() < 0)
+				ipio_err("Erase flash failed
");
+
+			if (ilitek_ice_mode_ctrl(DISABLE, OFF) < 0)
+				ipio_err("Disable ice mode failed after erase data
");
+
+			if (ilitek_tddi_reset_ctrl(idev->reset) < 0)
+				ipio_err("TP reset failed after erase data
");
+		}
+	}
+}
+
+int ilitek_tddi_fw_upgrade(int upgrade_type, int file_type, int open_file_method)
+{
+	int ret = 0, retry = 3;
+	u8 *pfw = NULL;
+
+	pfw = vmalloc(MAX_HEX_FILE_SIZE * sizeof(u8));
+	if (ERR_ALLOC_MEM(pfw)) {
+		ipio_err("Failed to allocate pfw memory, %ld
", PTR_ERR(pfw));
+		ret = -ENOMEM;
+		goto out;
+	}
+
+	memset(pfw, 0xFF, MAX_HEX_FILE_SIZE * sizeof(u8));
+
+	ipio_info("Convert FW file from %s
", (file_type == ILI_FILE ? "ILI_FILE" : "HEX_FILE"));
+
+	if (idev->actual_tp_mode != P5_X_FW_GESTURE_MODE) {
+		if (ilitek_tdd_fw_hex_open(open_file_method, pfw) < 0) {
+			ipio_err("Open hex file fail, try upgrade from ILI file
");
+			if (ilitek_tddi_fw_ili_convert(pfw) < 0) {
+				ipio_err("Convert ILI file error
");
+				ret = UPDATE_FAIL;
+				goto out;
+			}
+		}
+		ilitek_tddi_fw_update_block_info(pfw, upgrade_type);
+	}
+
+	do {
+		if (upgrade_type == UPGRADE_FLASH)
+			//ret = ilitek_tddi_fw_flash_upgrade(pfw);
+			ret = UPDATE_PASS;
+		else
+			ret = ilitek_tddi_fw_iram_upgrade(pfw);
+
+		if (ret == UPDATE_PASS)
+			break;
+
+		ipio_err("Upgrade failed, do retry!
");
+	} while (--retry > 0);
+
+	if (ret != UPDATE_PASS) {
+		ipio_err("Upgrade firmware failed after retry 3 times
");
+		ret = UPDATE_FAIL;
+	}
+
+out:
+	ilitek_tddi_fw_check_update(ret);
+	ipio_vfree((void **)&pfw);
+	return ret;
+}
+
+struct flash_table {
+	u16 mid;
+	u16 dev_id;
+	int mem_size;
+	int program_page;
+	int sector;
+} flashtab[] = {
+	[0] = {0x00, 0x0000, (256 * K), 256, (4 * K)}, /* Default */
+	[1] = {0xEF, 0x6011, (128 * K), 256, (4 * K)}, /* W25Q10EW	*/
+	[2] = {0xEF, 0x6012, (256 * K), 256, (4 * K)}, /* W25Q20EW	*/
+	[3] = {0xC8, 0x6012, (256 * K), 256, (4 * K)}, /* GD25LQ20B */
+	[4] = {0xC8, 0x6013, (512 * K), 256, (4 * K)}, /* GD25LQ40 */
+	[5] = {0x85, 0x6013, (4 * M), 256, (4 * K)},
+	[6] = {0xC2, 0x2812, (256 * K), 256, (4 * K)},
+	[7] = {0x1C, 0x3812, (256 * K), 256, (4 * K)},
+};
+
+void ilitek_tddi_fw_read_flash_info(bool mode)
+{
+	int i = 0;
+	u8 buf[4] = {0};
+	u8 cmd = 0x9F;
+	u32 tmp = 0;
+	u16 flash_id = 0, flash_mid = 0;
+	bool ice = atomic_read(&idev->ice_stat);
+
+	if (mode == UPGRADE_IRAM)
+		return;
+
+	ipio_info("ilitek_tddi_fw_read_flash_info(), ice mode = %d
", ice);
+
+	if (!ice) {
+		if (ilitek_ice_mode_ctrl(ENABLE, OFF) < 0)
+			ipio_err("Enable ice mode failed while reading flash info
");
+	}
+
+	if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x0, 1) < 0)
+		ipio_err("Write cs low failed
");
+
+	if (ilitek_ice_mode_write(FLASH1_ADDR, 0x66aa55, 3) < 0)
+		ipio_err("Write key failed
");
+
+	if (ilitek_ice_mode_write(FLASH2_ADDR, cmd, 1) < 0)
+		ipio_err("Write 0x9F failed
");
+
+	for (i = 0; i < ARRAY_SIZE(buf); i++) {
+		if (ilitek_ice_mode_write(FLASH2_ADDR, 0xFF, 1) < 0)
+			ipio_err("Write dummy failed
");
+
+		if (ilitek_ice_mode_read(FLASH4_ADDR, &tmp, sizeof(u8)) < 0)
+			ipio_err("Read flash info error
");
+
+		buf[i] = tmp;
+	}
+
+	if (ilitek_ice_mode_write(FLASH_BASED_ADDR, 0x1, 1) < 0)
+		ipio_err("Write cs high failed
"); /* CS high */
+
+	flash_mid = buf[0];
+	flash_id = buf[1] << 8 | buf[2];
+
+	for (i = 0; i < ARRAY_SIZE(flashtab); i++) {
+		if (flash_mid == flashtab[i].mid && flash_id == flashtab[i].dev_id) {
+			idev->flash_mid = flashtab[i].mid;
+			idev->flash_devid = flashtab[i].dev_id;
+			idev->program_page = flashtab[i].program_page;
+			idev->flash_sector = flashtab[i].sector;
+			break;
+		}
+	}
+
+	if (i >= ARRAY_SIZE(flashtab)) {
+		ipio_info("Not found flash id in tab, use default
");
+		idev->flash_mid = flashtab[0].mid;
+		idev->flash_devid = flashtab[0].dev_id;
+		idev->program_page = flashtab[0].program_page;
+		idev->flash_sector = flashtab[0].sector;
+	}
+
+	ipio_info("Flash MID = %x, Flash DEV_ID = %x
", idev->flash_mid, idev->flash_devid);
+	ipio_info("Flash program page = %d
", idev->program_page);
+	ipio_info("Flash sector = %d
", idev->flash_sector);
+
+	ilitek_tddi_flash_protect(DISABLE);
+
+	if (!ice) {
+		if (ilitek_ice_mode_ctrl(DISABLE, OFF) < 0)
+			ipio_err("Disable ice mode failed while reading flash info
");
+	}
+}
diff --git a/drivers/input/touchscreen/ili/ilitek_fw.h b/drivers/input/touchscreen/ili/ilitek_fw.h
new file mode 100644
index 000000000000..77cc01a7d92c
--- /dev/null
+++ b/drivers/input/touchscreen/ili/ilitek_fw.h
@@ -0,0 +1,3 @@
+static unsigned char CTPM_FW[] = {
+	#include "FW_TDDI_TRUNK_FB.ili"
+};
diff --git a/drivers/input/touchscreen/ili/ilitek_i2c.c b/drivers/input/touchscreen/ili/ilitek_i2c.c
new file mode 100644
index 000000000000..8740f573caab
--- /dev/null
+++ b/drivers/input/touchscreen/ili/ilitek_i2c.c
@@ -0,0 +1,317 @@
+/*
+ * ILITEK Touch IC driver
+ *
+ * Copyright (C) 2011 ILI Technology Corporation.
+ *
+ * Author: Dicky Chiang <dicky_chiang@ilitek.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include "ilitek.h"
+
+struct touch_bus_info {
+	struct i2c_driver bus_driver;
+	struct ilitek_hwif_info *hwif;
+};
+
+struct ilitek_tddi_dev *idev;
+
+#ifdef I2C_DMA_TRANSFER
+static unsigned char *ilitek_dma_va;
+static dma_addr_t ilitek_dma_pa;
+
+#define DMA_VA_BUFFER   4096
+
+static int dma_i2c_alloc(struct i2c_client *client)
+{
+	if (client != NULL) {
+		client->dev.coherent_dma_mask = DMA_BIT_MASK(32);
+		ilitek_dma_va = (u8 *)dmam_alloc_coherent(client->dev, DMA_VA_BUFFER, &ilitek_dma_pa, GFP_KERNEL);
+		if (ERR_ALLOC_MEM(ilitek_dma_va)) {
+			ipio_err("Allocate DMA I2C Buffer failed
");
+			return -ENOMEM;
+		}
+
+		memset(ilitek_dma_va, 0, DMA_VA_BUFFER);
+		client->ext_flag |= I2C_DMA_FLAG;
+		return 0;
+	}
+
+	ipio_err("client is NULL, allocated dma i2c failed
");
+	return -ENODEV;
+}
+#endif
+
+static int core_i2c_write(void *buf, int len)
+{
+	int ret = 0;
+	u8 *txbuf = (u8 *)buf;
+	u8 check_sum = 0;
+	u8 *mpbuf = NULL;
+	bool tmp = ipio_debug_level;
+
+	struct i2c_msg msgs[] = {
+		{
+		 .addr = idev->i2c->addr,
+		 .flags = 0,	/* write flag. */
+		 .len = len,
+		 .buf = txbuf,
+		 },
+	};
+
+#ifdef I2C_DMA_TRANSFER
+	if (len > 8) {
+		msgs[0].addr = (idev->client->addr & I2C_MASK_FLAG);
+		msgs[0].ext_flag = (idev->client->ext_flag | I2C_ENEXT_FLAG | I2C_DMA_FLAG);
+		memcpy(ilitek_dma_va, txbuf, len);
+		msgs[0].buf = (u8 *)ilitek_dma_pa;
+	}
+#endif
+
+
+	/*
+	 * NOTE: If TP driver is doing MP test and commanding 0xF1 to FW, we add a checksum
+	 * to the last index and plus 1 with size.
+	 */
+	if (idev->protocol->ver >= PROTOCOL_VER_540) {
+		if (txbuf[0] == P5_X_SET_CDC_INIT && idev->actual_tp_mode == P5_X_FW_TEST_MODE) {
+			check_sum = ilitek_calc_packet_checksum(txbuf, len);
+			mpbuf = kcalloc(len + 1, sizeof(u8), GFP_KERNEL);
+			if (ERR_ALLOC_MEM(mpbuf)) {
+				ipio_err("Failed to allocate mpbuf mem
");
+				return -ENOMEM;
+			}
+			ipio_memcpy(mpbuf, txbuf, len, msgs[0].len);
+			mpbuf[len] = check_sum;
+			msgs[0].buf = mpbuf;
+			ipio_debug_level = DEBUG_ALL;
+			ilitek_dump_data(mpbuf, 8, len+1, 0, "mp cdc cmd");
+			ipio_debug_level = tmp;
+			msgs[0].len = len + 1;
+		}
+	}
+
+	if (i2c_transfer(idev->i2c->adapter, msgs, 1) != 1)
+		ret = -1;
+
+	ipio_kfree((void **)&mpbuf);
+	return ret;
+}
+
+static int core_i2c_read(void *buf, int len)
+{
+	int ret;
+	u8 *rxbuf = (u8 *)buf;
+
+	struct i2c_msg msgs[] = {
+		{
+		 .addr = idev->i2c->addr,
+		 .flags = I2C_M_RD,	/* read flag. */
+		 .len = len,
+		 .buf = rxbuf,
+		 },
+	};
+
+
+#ifdef I2C_DMA_TRANSFER
+	if (len > 8) {
+		msgs[0].addr = (idev->client->addr & I2C_MASK_FLAG);
+		msgs[0].ext_flag = (idev->client->ext_flag | I2C_ENEXT_FLAG | I2C_DMA_FLAG);
+		msgs[0].buf = (u8 *)ilitek_dma_pa;
+	} else {
+		msgs[0].buf = rxbuf;
+	}
+#endif
+
+
+	ret = i2c_transfer(idev->i2c->adapter, msgs, 1);
+
+#ifdef I2C_DMA_TRANSFER
+	if (len > 8)
+		memcpy(rxbuf, ilitek_dma_va, len);
+#endif
+
+	/*
+	 * If i2c_transfer is ok (must return 1 because only sends one msg),
+	 * return #bytes transferred, else error code.
+	 */
+	return (ret == 1) ? len : ret;
+}
+
+static int ilitek_i2c_write(void *buf, int len)
+{
+	int ret = 0;
+
+	if (len == 0) {
+		ipio_err("i2c write len is invalid
");
+		return -EINVAL;
+	}
+
+	ret = core_i2c_write(buf, len);
+	if (ret < 0) {
+		if (atomic_read(&idev->tp_reset) == START) {
+			ret = 0;
+			goto out;
+		}
+		ipio_err("i2c write error, ret = %d
", ret);
+	}
+
+out:
+	return ret;
+}
+
+static int ilitek_i2c_read(void *buf, int len)
+{
+	int ret = 0;
+
+	if (len == 0) {
+		ipio_err("i2c read len is invalid
");
+		return -EINVAL;
+	}
+
+	ret = core_i2c_read(buf, len);
+	if (ret < 0) {
+		if (atomic_read(&idev->tp_reset) == START) {
+			ret = 0;
+			goto out;
+		}
+		ipio_err("i2c read error, ret = %d
", ret);
+	}
+
+out:
+	return ret;
+}
+
+static int ilitek_i2c_probe(struct i2c_client *i2c, const struct i2c_device_id *id)
+{
+	struct touch_bus_info *info =
+		container_of(to_i2c_driver(i2c->dev.driver),
+			struct touch_bus_info, bus_driver);
+
+	ipio_info("ilitek i2c probe
");
+
+	if (!i2c) {
+		ipio_err("i2c client is NULL
");
+		return -ENODEV;
+	}
+
+	if (i2c->addr != TDDI_I2C_ADDR) {
+		i2c->addr = TDDI_I2C_ADDR;
+		ipio_info("i2c addr doesn't be set up, use default : 0x%x
", i2c->addr);
+	}
+
+	if (!i2c_check_functionality(i2c->adapter, I2C_FUNC_I2C)) {
+		ipio_err("i2c functions are not supported!
");
+		return -ENODEV;
+	}
+
+	idev = devm_kzalloc(&i2c->dev, sizeof(struct ilitek_tddi_dev), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(idev)) {
+		ipio_err("Failed to allocate idev memory, %ld
", PTR_ERR(idev));
+		return -ENOMEM;
+	}
+
+	idev->i2c = i2c;
+	idev->spi = NULL;
+	idev->dev = &i2c->dev;
+	idev->hwif = info->hwif;
+	idev->phys = "I2C";
+
+	idev->write = ilitek_i2c_write;
+	idev->read = ilitek_i2c_read;
+
+#ifdef I2C_DMA_TRANSFER
+	if (dma_i2c_alloc(idev->i2c) < 0)
+		ipio_err("Failed to alllocate DMA mem %ld
", PTR_ERR(idev->i2c));
+#endif
+
+	idev->spi_speed = NULL;
+	idev->actual_tp_mode = P5_X_FW_AP_MODE;
+
+	if (TDDI_RST_BIND)
+		idev->reset = TP_IC_WHOLE_RST;
+	else
+		idev->reset = TP_HW_RST_ONLY;
+
+	idev->rst_edge_delay = 100;
+	idev->fw_open = FILP_OPEN;
+	idev->fw_upgrade_mode = UPGRADE_FLASH;
+	idev->mp_move_code = ilitek_tddi_move_mp_code_flash;
+	idev->gesture_move_code = ilitek_tddi_move_gesture_code_flash;
+	idev->esd_recover = ilitek_tddi_wq_esd_i2c_check;
+	idev->ges_recover = ilitek_tddi_touch_esd_gesture_flash;
+	idev->gesture_mode = DATA_FORMAT_GESTURE_NORMAL;
+	idev->gesture_demo_ctrl = DISABLE;
+	idev->wtd_ctrl = OFF;
+	idev->report = ENABLE;
+	idev->netlink = DISABLE;
+	idev->debug_node_open = DISABLE;
+//	idev->irq_tirgger_type = IRQF_TRIGGER_FALLING;
+	idev->irq_tirgger_type = IRQF_TRIGGER_RISING;
+
+	if (ENABLE_GESTURE)
+		idev->gesture = ENABLE;
+
+	return info->hwif->plat_probe();
+}
+
+static int ilitek_i2c_remove(struct i2c_client *i2c)
+{
+	ipio_info();
+	return 0;
+}
+
+static const struct i2c_device_id tp_i2c_id[] = {
+	{TDDI_DEV_ID, 0},
+};
+
+int ilitek_tddi_interface_dev_init(struct ilitek_hwif_info *hwif)
+{
+	struct touch_bus_info *info;
+
+	info = kzalloc(sizeof(*info), GFP_KERNEL);
+	if (!info) {
+		ipio_err("faied to allocate i2c_driver
");
+		return -ENOMEM;
+	}
+
+	if (hwif->bus_type != BUS_I2C) {
+		ipio_err("Not I2C dev
");
+		return -EINVAL;
+	}
+
+	hwif->info = info;
+
+	info->bus_driver.driver.name = hwif->name;
+	info->bus_driver.driver.owner = hwif->owner;
+	info->bus_driver.driver.of_match_table = hwif->of_match_table;
+
+	info->bus_driver.probe = ilitek_i2c_probe;
+	info->bus_driver.remove = ilitek_i2c_remove;
+	info->bus_driver.id_table = tp_i2c_id;
+
+	info->hwif = hwif;
+	return i2c_add_driver(&info->bus_driver);
+}
+
+void ilitek_tddi_interface_dev_exit(struct ilitek_hwif_info *hwif)
+{
+	struct touch_bus_info *info = (struct touch_bus_info *)hwif->info;
+
+	ipio_info("remove i2c dev
");
+	i2c_del_driver(&info->bus_driver);
+	ipio_kfree((void **)&info);
+}
diff --git a/drivers/input/touchscreen/ili/ilitek_ic.c b/drivers/input/touchscreen/ili/ilitek_ic.c
new file mode 100644
index 000000000000..5c0652faea0b
--- /dev/null
+++ b/drivers/input/touchscreen/ili/ilitek_ic.c
@@ -0,0 +1,1129 @@
+/*
+ * ILITEK Touch IC driver
+ *
+ * Copyright (C) 2011 ILI Technology Corporation.
+ *
+ * Author: Dicky Chiang <dicky_chiang@ilitek.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include "ilitek.h"
+
+#define PROTOCL_VER_NUM		8
+static struct ilitek_protocol_info protocol_info[PROTOCL_VER_NUM] = {
+	/* length -> fw, protocol, tp, key, panel, core, func, window, cdc, mp_info */
+	[0] = {PROTOCOL_VER_500, 4, 4, 14, 30, 5, 5, 2, 8, 3, 8},
+	[1] = {PROTOCOL_VER_510, 4, 3, 14, 30, 5, 5, 3, 8, 3, 8},
+	[2] = {PROTOCOL_VER_520, 4, 4, 14, 30, 5, 5, 3, 8, 3, 8},
+	[3] = {PROTOCOL_VER_530, 9, 4, 14, 30, 5, 5, 3, 8, 3, 8},
+	[4] = {PROTOCOL_VER_540, 9, 4, 14, 30, 5, 5, 3, 8, 15, 8},
+	[5] = {PROTOCOL_VER_550, 9, 4, 14, 30, 5, 5, 3, 8, 15, 14},
+	[6] = {PROTOCOL_VER_560, 9, 4, 14, 30, 5, 5, 3, 8, 15, 14},
+	[7] = {PROTOCOL_VER_570, 9, 4, 14, 30, 5, 5, 3, 8, 15, 14},
+};
+
+#define FUNC_CTRL_NUM	19
+static struct ilitek_ic_func_ctrl func_ctrl[FUNC_CTRL_NUM] = {
+	/* cmd[3] = cmd, func, ctrl */
+	[0] = {"sense", {0x1, 0x1, 0x0}, 3},
+	[1] = {"sleep", {0x1, 0x2, 0x0}, 3},
+	[2] = {"glove", {0x1, 0x6, 0x0}, 3},
+	[3] = {"stylus", {0x1, 0x7, 0x0}, 3},
+	[4] = {"tp_scan_mode", {0x1, 0x8, 0x0}, 3},
+	[5] = {"lpwg", {0x1, 0xA, 0x0}, 3},
+	[6] = {"gesture", {0x1, 0xB, 0x3F}, 3},
+	[7] = {"phone_cover", {0x1, 0xC, 0x0}, 3},
+	[8] = {"finger_sense", {0x1, 0xF, 0x0}, 3},
+	[9] = {"phone_cover_window", {0xE, 0x0, 0x0}, 3},
+	[10] = {"proximity", {0x1, 0x10, 0x0}, 3},
+	[11] = {"plug", {0x1, 0x11, 0x0}, 3},
+	[12] = {"edge_palm", {0x1, 0x12, 0x0}, 3},
+	[13] = {"lock_point", {0x1, 0x13, 0x0}, 3},
+	[14] = {"active", {0x1, 0x14, 0x0}, 3},
+	[15] = {"idle", {0x1, 0x19, 0x0}, 3},
+	[16] = {"gesture_demo_en", {0x1, 0x16, 0x0}, 3},
+	[17] = {"tp_recore", {0x1, 0x18, 0x0}, 3},
+	[18] = {"knock_en", {0x1, 0xA, 0x8, 0x03, 0x0, 0x0}, 6},
+};
+
+#define CHIP_SUP_NUM		6
+static u32 ic_sup_list[CHIP_SUP_NUM] = {
+	[0] = ILI9881_CHIP,
+	[1] = ILI9881H_AD,
+	[2] = ILI9881H_AE,
+	[3] = ILI7807_CHIP,
+	[4] = ILI7807G_AA,
+	[5] = ILI7807G_AB,
+};
+
+static int ilitek_tddi_ic_check_support(u32 pid, u16 id)
+{
+	int i = 0;
+
+	for (i = 0; i < CHIP_SUP_NUM; i++) {
+		if ((pid == ic_sup_list[i]) || (id == ic_sup_list[i]))
+		break;
+	}
+
+	if (i >= CHIP_SUP_NUM) {
+		ipio_info("ERROR, ILITEK CHIP (%x, %x) Not found !!
", pid, id);
+		return -1;
+	}
+
+	ipio_info("ILITEK CHIP (%x, %x) found.
", pid, id);
+
+	if (id == ILI9881_CHIP) {
+		idev->chip->reset_key = 0x00019881;
+		idev->chip->wtd_key = 0x9881;
+		idev->chip->open_sp_formula = open_sp_formula_ili9881;
+		idev->chip->hd_dma_check_crc_off = firmware_hd_dma_crc_off_ili9881;
+
+		/*
+		 * Since spi speed has been enabled previsouly whenever enter to ICE mode,
+		 * we have to disable if find out the ic is ili9881.
+		 */
+		if (idev->spi_speed != NULL && idev->chip->spi_speed_ctrl) {
+			idev->spi_speed(OFF);
+			idev->chip->spi_speed_ctrl = DISABLE;
+		}
+
+		if (pid == ILI9881F_AA)
+			idev->chip->no_bk_shift = RAWDATA_NO_BK_SHIFT_9881F;
+		else
+			idev->chip->no_bk_shift = RAWDATA_NO_BK_SHIFT_9881H;
+	} else {
+		idev->chip->reset_key = 0x00019878;
+		idev->chip->wtd_key = 0x9878;
+		idev->chip->open_sp_formula = open_sp_formula_ili7807;
+		idev->chip->hd_dma_check_crc_off = firmware_hd_dma_crc_off_ili7807;
+		idev->chip->no_bk_shift = RAWDATA_NO_BK_SHIFT_9881H;
+	}
+
+	idev->chip->max_count = 0x1FFFF;
+	idev->chip->open_c_formula = open_c_formula;
+	idev->chip->info_addr = INFO_HEX_START_ADDR_64K;
+	idev->chip->info_from_hex = false;
+	return 0;
+}
+
+int ilitek_ice_mode_bit_mask_write(u32 addr, u32 mask, u32 value)
+{
+	int ret = 0;
+	u32 data = 0;
+
+	if (ilitek_ice_mode_read(addr, &data, sizeof(u32)) < 0) {
+		ipio_err("Read data error
");
+		return -1;
+	}
+
+	data &= (~mask);
+	data |= (value & mask);
+
+	ipio_debug("mask value data = %x
", data);
+
+	ret = ilitek_ice_mode_write(addr, data, sizeof(u32));
+	if (ret < 0)
+		ipio_err("Failed to re-write data in ICE mode, ret = %d
", ret);
+
+	return ret;
+}
+
+int ilitek_ice_mode_write(u32 addr, u32 data, int len)
+{
+	int ret = 0, i;
+	u8 txbuf[64] = {0};
+
+	if (!atomic_read(&idev->ice_stat)) {
+		ipio_err("ice mode not enabled
");
+		return -1;
+	}
+
+	txbuf[0] = 0x25;
+	txbuf[1] = (char)((addr & 0x000000FF) >> 0);
+	txbuf[2] = (char)((addr & 0x0000FF00) >> 8);
+	txbuf[3] = (char)((addr & 0x00FF0000) >> 16);
+
+	for (i = 0; i < len; i++)
+		txbuf[i + 4] = (char)(data >> (8 * i));
+
+	ret = idev->write(txbuf, len + 4);
+	if (ret < 0)
+		ipio_err("Failed to write data in ice mode, ret = %d
", ret);
+
+	return ret;
+}
+
+int ilitek_ice_mode_read(u32 addr, u32 *data, int len)
+{
+	int ret = 0;
+	u8 *rxbuf = NULL;
+	u8 txbuf[4] = {0};
+
+	if (!atomic_read(&idev->ice_stat)) {
+		ipio_err("ice mode not enabled
");
+		return -1;
+	}
+
+	txbuf[0] = 0x25;
+	txbuf[1] = (char)((addr & 0x000000FF) >> 0);
+	txbuf[2] = (char)((addr & 0x0000FF00) >> 8);
+	txbuf[3] = (char)((addr & 0x00FF0000) >> 16);
+
+	ret = idev->write(txbuf, 4);
+	if (ret < 0)
+		goto out;
+
+	rxbuf = kcalloc(len, sizeof(u8), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(rxbuf)) {
+		ipio_err("Failed to allocate rxbuf, %ld
", PTR_ERR(rxbuf));
+		ret = -ENOMEM;
+		goto out;
+	}
+
+	ret = idev->read(rxbuf, len);
+	if (ret < 0)
+		goto out;
+
+	if (len == sizeof(u8))
+		*data = rxbuf[0];
+	else
+		*data = (rxbuf[0] | rxbuf[1] << 8 | rxbuf[2] << 16 | rxbuf[3] << 24);
+
+out:
+	if (ret < 0)
+		ipio_err("Failed to read data in ice mode, ret = %d
", ret);
+
+	ipio_kfree((void **)&rxbuf);
+	return ret;
+}
+
+int ilitek_ice_mode_ctrl(bool enable, bool mcu)
+{
+	int ret = 0, retry = 3;
+	u8 cmd_open[4] = {0x25, 0x62, 0x10, 0x18};
+	u8 cmd_close[4] = {0x1B, 0x62, 0x10, 0x18};
+	u32 pid;
+
+	ipio_info("%s ICE mode, mcu on = %d
", (enable ? "Enable" : "Disable"), mcu);
+
+	if (enable) {
+		if (atomic_read(&idev->ice_stat)) {
+			ipio_info("ice mode already enabled
");
+			return 0;
+		}
+
+		if (mcu)
+			cmd_open[0] = 0x1F;
+
+		atomic_set(&idev->ice_stat, ENABLE);
+
+		do {
+			if (idev->write(cmd_open, sizeof(cmd_open)) < 0)
+				ipio_err("write ice mode cmd error
");
+
+			if (idev->spi_speed != NULL && idev->chip->spi_speed_ctrl)
+				idev->spi_speed(ON);
+
+			/* Read chip id to ensure that ice mode is enabled successfully */
+			if (ilitek_ice_mode_read(idev->chip->pid_addr, &pid, sizeof(u32)) < 0)
+				ipio_err("Read pid error
");
+
+			if (ilitek_tddi_ic_check_support(pid, pid >> 16) == 0)
+				break;
+		} while (--retry > 0);
+
+		if (retry <= 0) {
+			ipio_err("Enter to ICE Mode failed !!
");
+			atomic_set(&idev->ice_stat, DISABLE);
+			ret = -1;
+			goto out;
+		}
+
+		/* Patch to resolve the issue of i2c nack after exit to ice mode */
+		if (ilitek_ice_mode_write(0x47002, 0x00, 1) < 0)
+			ipio_err("Write 0x0 at 0x47002 failed
");
+	} else {
+		if (!atomic_read(&idev->ice_stat)) {
+			ipio_info("ice mode already disabled
");
+			return 0;
+		}
+
+		ret = idev->write(cmd_close, sizeof(cmd_close));
+		if (ret < 0)
+			ipio_err("Exit to ICE Mode failed !!
");
+
+		atomic_set(&idev->ice_stat, DISABLE);
+	}
+out:
+	return ret;
+}
+
+int ilitek_tddi_ic_watch_dog_ctrl(bool write, bool enable)
+{
+	int timeout = 50, ret = 0;
+
+	if (!atomic_read(&idev->ice_stat)) {
+		ipio_err("ice mode wasn't enabled
");
+		return -1;
+	}
+
+	if (idev->chip->wdt_addr <= 0 || idev->chip->id <= 0) {
+		ipio_err("WDT/CHIP ID is invalid
");
+		return -EINVAL;
+	}
+
+	/* FW will automatiacally disable WDT in I2C */
+	if (idev->wtd_ctrl == OFF) {
+		ipio_info("WDT ctrl is off, do nothing
");
+		return 0;
+	}
+
+	if (!write) {
+		if (ilitek_ice_mode_read(idev->chip->wdt_addr, &ret, sizeof(u8)) < 0) {
+			ipio_err("Read wdt error
");
+			return -1;
+		}
+		ipio_info("Read WDT: %s
", (ret ? "ON" : "OFF"));
+		return ret;
+	}
+
+	ipio_info("%s WDT, key = %x
", (enable ? "Enable" : "Disable"), idev->chip->wtd_key);
+
+	if (enable) {
+		if (ilitek_ice_mode_write(idev->chip->wdt_addr, 1, 1) < 0)
+			ipio_err("Wrie WDT key failed
");
+	} else {
+		/* need delay 300us to wait fw relaod code after stop mcu. */
+		udelay(300);
+		if (ilitek_ice_mode_write(idev->chip->wdt_addr, (idev->chip->wtd_key & 0xff), 1) < 0)
+			ipio_err("Write WDT key failed
");
+		if (ilitek_ice_mode_write(idev->chip->wdt_addr, (idev->chip->wtd_key >> 8), 1) < 0)
+			ipio_err("Write WDT key failed
");
+	}
+
+	while (timeout > 0) {
+		udelay(40);
+		if (ilitek_ice_mode_read(TDDI_WDT_ACTIVE_ADDR, &ret, sizeof(u8)) < 0)
+			ipio_err("Read wdt active error
");
+
+		ipio_debug("ret = %x
", ret);
+		if (enable) {
+			if (ret == TDDI_WDT_ON)
+				break;
+		} else {
+			if (ret == TDDI_WDT_OFF)
+				break;
+
+			/* If WDT can't be disabled, try to command and wait to see */
+			if (ilitek_ice_mode_write(idev->chip->wdt_addr, 0x00, 1) < 0)
+				ipio_err("Write 0x0 at %x
", idev->chip->wdt_addr);
+			if (ilitek_ice_mode_write(idev->chip->wdt_addr, 0x98, 1) < 0)
+				ipio_err("Write 0x98 at %x
", idev->chip->wdt_addr);
+		}
+		timeout--;
+	}
+
+	if (timeout <= 0) {
+		ipio_err("WDT turn on/off timeout !, ret = %x, pc = 0x%x
",
+				ret, ilitek_tddi_ic_get_pc_counter());
+		return -EINVAL;
+	}
+
+	if (enable) {
+		ipio_info("WDT turn on succeed
");
+	} else {
+		ipio_info("WDT turn off succeed
");
+		if (ilitek_ice_mode_write(idev->chip->wdt_addr, 0, 1) < 0)
+			ipio_err("Write turn off cmd failed
");
+	}
+	return 0;
+}
+
+int ilitek_tddi_ic_func_ctrl(const char *name, int ctrl)
+{
+	int i = 0, ret;
+
+	for (i = 0; i < FUNC_CTRL_NUM; i++) {
+		if (strncmp(name, func_ctrl[i].name, strlen(name)) == 0) {
+			if (strlen(name) != strlen(func_ctrl[i].name))
+				continue;
+			break;
+		}
+	}
+
+	if (i >= FUNC_CTRL_NUM) {
+		ipio_err("Not found function ctrl, %s
", name);
+		ret = -1;
+		goto out;
+	}
+
+	if (idev->protocol->ver == PROTOCOL_VER_500) {
+		ipio_err("Non support function ctrl with protocol v5.0
");
+		ret = -1;
+		goto out;
+	}
+
+	if (idev->protocol->ver >= PROTOCOL_VER_560) {
+		if (strncmp(func_ctrl[i].name, "gesture", strlen("gesture")) == 0 ||
+			strncmp(func_ctrl[i].name, "phone_cover_window", strlen("phone_cover_window")) == 0) {
+			ipio_info("Non support %s function ctrl
", func_ctrl[i].name);
+			ret = -1;
+			goto out;
+		}
+	}
+
+	if (idev->protocol->ver < PROTOCOL_VER_570) {
+		if (strncmp(func_ctrl[i].name, "gesture_demo_en", strlen("gesture_demo_en")) == 0 ||
+			strncmp(func_ctrl[i].name, "tp_recore", strlen("tp_recore")) == 0 ||
+			strncmp(func_ctrl[i].name, "knock_en", strlen("knock_en")) == 0) {
+			ipio_info("Non support %s function ctrl
", func_ctrl[i].name);
+			ret = -1;
+			goto out;
+		}
+	}
+
+	func_ctrl[i].cmd[2] = ctrl;
+
+	ipio_info("func = %s, len = %d, cmd = 0x%x, 0%x, 0x%x
", func_ctrl[i].name, func_ctrl[i].len,
+		func_ctrl[i].cmd[0], func_ctrl[i].cmd[1], func_ctrl[i].cmd[2]);
+
+	ret = idev->write(func_ctrl[i].cmd, func_ctrl[i].len);
+	if (ret < 0)
+		ipio_err("Write TP function failed
");
+
+out:
+	return ret;
+}
+
+int ilitek_tddi_ic_code_reset(void)
+{
+	int ret;
+	bool ice = atomic_read(&idev->ice_stat);
+
+	if (!ice)
+		if (ilitek_ice_mode_ctrl(ENABLE, OFF) < 0)
+			ipio_err("Enable ice mode failed before code reset
");
+
+	ret = ilitek_ice_mode_write(0x40040, 0xAE, 1);
+	if (ret < 0)
+		ipio_err("ic code reset failed
");
+
+	if (!ice)
+		if (ilitek_ice_mode_ctrl(DISABLE, OFF) < 0)
+			ipio_err("Enable ice mode failed after code reset
");
+	return ret;
+}
+
+int ilitek_tddi_ic_whole_reset(void)
+{
+	int ret = 0;
+	bool ice = atomic_read(&idev->ice_stat);
+
+	if (!ice)
+		if (ilitek_ice_mode_ctrl(ENABLE, OFF) < 0)
+			ipio_err("Enable ice mode failed before chip reset
");
+
+	ipio_info("ic whole reset key = 0x%x, edge_delay = %d
",
+		idev->chip->reset_key, idev->rst_edge_delay);
+
+	ret = ilitek_ice_mode_write(idev->chip->reset_addr, idev->chip->reset_key, sizeof(u32));
+	if (ret < 0) {
+		ipio_err("ic whole reset failed
");
+		goto out;
+	}
+
+	/* Need accurate power sequence, do not change it to msleep */
+	mdelay(idev->rst_edge_delay);
+
+out:
+	if (!ice)
+		if (ilitek_ice_mode_ctrl(DISABLE, OFF) < 0)
+			ipio_err("Enable ice mode failed after chip reset
");
+
+	return ret;
+}
+
+static void ilitek_tddi_ic_wr_pack(int packet)
+{
+	int retry = 100;
+	u32 reg_data = 0;
+
+	while (retry--) {
+		if (ilitek_ice_mode_read(0x73010, &reg_data, sizeof(u8)) < 0)
+			ipio_err("Read 0x73010 error
");
+
+		if ((reg_data & 0x02) == 0) {
+			ipio_info("check ok 0x73010 read 0x%X retry = %d
", reg_data, retry);
+			break;
+		}
+		mdelay(10);
+	}
+
+	if (retry <= 0)
+		ipio_info("check 0x73010 error read 0x%X
", reg_data);
+
+	if (ilitek_ice_mode_write(0x73000, packet, 4) < 0)
+		ipio_err("Write %x at 0x73000
", packet);
+}
+
+static u32 ilitek_tddi_ic_rd_pack(int packet)
+{
+	int retry = 100;
+	u32 reg_data = 0;
+
+	ilitek_tddi_ic_wr_pack(packet);
+
+	while (retry--) {
+		if (ilitek_ice_mode_read(0x4800A, &reg_data, sizeof(u8)) < 0)
+			ipio_err("Read 0x4800A error
");
+
+		if ((reg_data & 0x02) == 0x02) {
+			ipio_info("check  ok 0x4800A read 0x%X retry = %d
", reg_data, retry);
+			break;
+		}
+		mdelay(10);
+	}
+	if (retry <= 0)
+		ipio_info("check 0x4800A error read 0x%X
", reg_data);
+
+	if (ilitek_ice_mode_write(0x4800A, 0x02, 1) < 0)
+		ipio_err("Write 0x2 at 0x4800A
");
+
+	if (ilitek_ice_mode_read(0x73016, &reg_data, sizeof(u8)) < 0)
+		ipio_err("Read 0x73016 error
");
+
+	return reg_data;
+}
+
+void ilitek_tddi_ic_set_ddi_reg_onepage(u8 page, u8 reg, u8 data)
+{
+	int wdt;
+	u32 setpage = 0x1FFFFF00 | page;
+	u32 setreg = 0x1F000100 | (reg << 16) | data;
+	bool ice = atomic_read(&idev->ice_stat);
+
+	ipio_info("setpage =  0x%X setreg = 0x%X
", setpage, setreg);
+
+	if (!ice)
+		if (ilitek_ice_mode_ctrl(ENABLE, OFF) < 0)
+			ipio_err("Enable ice mode failed before writing ddi reg
");
+
+	wdt = ilitek_tddi_ic_watch_dog_ctrl(ILI_READ, DISABLE);
+	if (wdt)
+		if (ilitek_tddi_ic_watch_dog_ctrl(ILI_WRITE, DISABLE) < 0)
+			ipio_err("Disable WDT failed before writing ddi reg
");
+
+	/*TDI_WR_KEY*/
+	ilitek_tddi_ic_wr_pack(0x1FFF9527);
+	/*Switch to Page*/
+	ilitek_tddi_ic_wr_pack(setpage);
+	/* Page*/
+	ilitek_tddi_ic_wr_pack(setreg);
+	/*TDI_WR_KEY OFF*/
+	ilitek_tddi_ic_wr_pack(0x1FFF9500);
+
+	if (wdt)
+		if (ilitek_tddi_ic_watch_dog_ctrl(ILI_WRITE, ENABLE) < 0)
+			ipio_err("Enable WDT failed after writing ddi reg
");
+
+	if (!ice)
+		if (ilitek_ice_mode_ctrl(DISABLE, OFF) < 0)
+			ipio_err("Disable ice mode failed after writing ddi reg
");
+}
+
+void ilitek_tddi_ic_get_ddi_reg_onepage(u8 page, u8 reg)
+{
+	int wdt;
+	u32 reg_data = 0;
+	u32 setpage = 0x1FFFFF00 | page;
+	u32 setreg = 0x2F000100 | (reg << 16);
+	bool ice = atomic_read(&idev->ice_stat);
+
+	ipio_info("setpage = 0x%X setreg = 0x%X
", setpage, setreg);
+
+	if (!ice)
+		if (ilitek_ice_mode_ctrl(ENABLE, OFF) < 0)
+			ipio_err("Enable ice mode failed before reading ddi reg
");
+
+	wdt = ilitek_tddi_ic_watch_dog_ctrl(ILI_READ, DISABLE);
+	if (wdt)
+		if (ilitek_tddi_ic_watch_dog_ctrl(ILI_WRITE, DISABLE) < 0)
+			ipio_err("Disable WDT failed before reading ddi reg
");
+
+	/*TDI_WR_KEY*/
+	ilitek_tddi_ic_wr_pack(0x1FFF9527);
+	/*Set Read Page reg*/
+	ilitek_tddi_ic_wr_pack(setpage);
+
+	/*TDI_RD_KEY*/
+	ilitek_tddi_ic_wr_pack(0x1FFF9487);
+	/*( *( __IO uint8 *)	(0x4800A) ) =0x2*/
+	if (ilitek_ice_mode_write(0x4800A, 0x02, 1) < 0)
+		ipio_err("Write 0x2 at 0x4800A
");
+
+	reg_data = ilitek_tddi_ic_rd_pack(setreg);
+	ipio_info("check page = 0x%X, reg = 0x%X, read 0x%X
", page, reg, reg_data);
+
+	/*TDI_RD_KEY OFF*/
+	ilitek_tddi_ic_wr_pack(0x1FFF9400);
+	/*TDI_WR_KEY OFF*/
+	ilitek_tddi_ic_wr_pack(0x1FFF9500);
+
+	if (wdt)
+		if (ilitek_tddi_ic_watch_dog_ctrl(ILI_WRITE, ENABLE) < 0)
+			ipio_err("Enable WDT failed after reading ddi reg
");
+
+	if (!ice)
+		if (ilitek_ice_mode_ctrl(DISABLE, OFF) < 0)
+			ipio_err("Disable ice mode failed after reading ddi reg
");
+}
+
+void ilitek_tddi_ic_check_otp_prog_mode(void)
+{
+	int retry = 5;
+	u32 prog_mode, prog_done;
+
+	if (!idev->do_otp_check)
+		return;
+
+	if (ilitek_ice_mode_ctrl(ENABLE, OFF) < 0) {
+		ipio_err("enter ice mode failed in otp
");
+		return;
+	}
+
+	if (ilitek_tddi_ic_watch_dog_ctrl(ILI_WRITE, DISABLE) < 0) {
+		ipio_err("disable WDT failed in otp
");
+		return;
+	}
+
+	do {
+		if (ilitek_ice_mode_write(0x43008, 0x80, 1) < 0)
+			ipio_err("Write 0x80 at 0x43008 failed
");
+
+		if (ilitek_ice_mode_write(0x43030, 0x0, 1) < 0)
+			ipio_err("Write 0x0 at 0x43030 failed
");
+
+		if (ilitek_ice_mode_write(0x4300C, 0x4, 1) < 0)
+			ipio_err("Write 0x4 at 0x4300C failed
");
+
+		/* Need accurate power sequence, do not change it to msleep */
+		mdelay(1);
+
+		if (ilitek_ice_mode_write(0x4300C, 0x4, 1) < 0)
+			ipio_err("Write 0x4 at 0x4300C
");
+
+		if (ilitek_ice_mode_read(0x43030, &prog_done, sizeof(u8)) < 0)
+			ipio_err("Read prog_done error
");
+
+		if (ilitek_ice_mode_read(0x43008, &prog_mode, sizeof(u8)) < 0)
+			ipio_err("Read prog_mode error
");
+
+		ipio_info("otp prog_mode = 0x%x, prog_done = 0x%x
", prog_mode, prog_done);
+		if (prog_done == 0x0 && prog_mode == 0x80)
+			break;
+	} while (--retry > 0);
+
+	if (retry <= 0)
+		ipio_err("OTP Program mode error!
");
+}
+
+void ilitek_tddi_ic_spi_speed_ctrl(bool enable)
+{
+	ipio_info("%s spi speed up
", (enable ? "Enable" : "Disable"));
+
+	if (enable) {
+		if (ilitek_ice_mode_write(0x063820, 0x00000101, 4) < 0)
+			ipio_err("Write 0x00000101 at 0x063820 failed
");
+
+		if (ilitek_ice_mode_write(0x042c34, 0x00000008, 4) < 0)
+			ipio_err("Write 0x00000008 at 0x042c34 failed
");
+
+		if (ilitek_ice_mode_write(0x063820, 0x00000000, 4) < 0)
+			ipio_err("Write 0x00000000 at 0x063820 failed
");
+	} else {
+		if (ilitek_ice_mode_write(0x063820, 0x00000101, 4) < 0)
+			ipio_err("Write 0x00000101 at 0x063820 failed
");
+
+		if (ilitek_ice_mode_write(0x042c34, 0x00000000, 4) < 0)
+			ipio_err("Write 0x00000000 at 0x042c34 failed
");
+
+		if (ilitek_ice_mode_write(0x063820, 0x00000000, 4) < 0)
+			ipio_err("Write 0x00000000 at 0x063820 failed
");
+	}
+}
+
+u32 ilitek_tddi_ic_get_pc_counter(void)
+{
+	bool ice = atomic_read(&idev->ice_stat);
+	u32 pc = 0;
+
+	if (!ice)
+		if (ilitek_ice_mode_ctrl(ENABLE, OFF) < 0)
+			ipio_err("Enable ice mode failed while reading pc counter
");
+
+	if (ilitek_ice_mode_read(idev->chip->pc_counter_addr, &pc, sizeof(u32)) < 0)
+		ipio_err("Read pc conter error
");
+
+	ipio_info("pc counter = 0x%x
", pc);
+
+	if (!ice)
+		if (ilitek_ice_mode_ctrl(DISABLE, OFF) < 0)
+			ipio_err("Disable ice mode failed while reading pc counter
");
+
+	return pc;
+}
+
+int ilitek_tddi_ic_check_int_stat(void)
+{
+	/* From FW request, timeout should at least be 3 sec */
+	if (!wait_event_interruptible_timeout(idev->inq, !atomic_read(&idev->mp_int_check), msecs_to_jiffies(3000))) {
+		ipio_err("Error! Interrupt for MP isn't received
");
+		atomic_set(&idev->mp_int_check, DISABLE);
+		return -1;
+	}
+
+	ipio_info("Interrupt for MP is active
");
+	return 0;
+}
+
+int ilitek_tddi_ic_check_busy(int count, int delay)
+{
+	u8 cmd[2] = {0};
+	u8 busy = 0, rby = 0;
+
+	cmd[0] = P5_X_READ_DATA_CTRL;
+	cmd[1] = P5_X_CDC_BUSY_STATE;
+
+	if (idev->actual_tp_mode == P5_X_FW_AP_MODE)
+		rby = 0x41;
+	else if (idev->actual_tp_mode == P5_X_FW_TEST_MODE)
+		rby = 0x51;
+	else {
+		ipio_err("Unknown TP mode (0x%x)
", idev->actual_tp_mode);
+		return -EINVAL;
+	}
+
+	ipio_info("read byte = %x, delay = %d
", rby, delay);
+
+	do {
+		if (idev->write(cmd, sizeof(cmd)) < 0)
+			ipio_err("Write %x,%x failed
", P5_X_READ_DATA_CTRL, P5_X_CDC_BUSY_STATE);
+		if (idev->write(&cmd[1], sizeof(u8)) < 0)
+			ipio_err("Write %x failed
", P5_X_CDC_BUSY_STATE);
+		if (idev->read(&busy, sizeof(u8)) < 0)
+			ipio_err("Read check busy failed
");
+
+		ipio_debug("busy = 0x%x
", busy);
+
+		if (busy == rby) {
+			ipio_info("Check busy free
");
+			return 0;
+		}
+
+		mdelay(delay);
+	} while (--count > 0);
+
+	ipio_err("Check busy (0x%x) timeout ! pc = 0x%x
", busy,
+		ilitek_tddi_ic_get_pc_counter());
+	return -1;
+}
+
+int ilitek_tddi_ic_get_project_id(u8 *pdata, int size)
+{
+	int i;
+	u32 tmp;
+	bool ice = atomic_read(&idev->ice_stat);
+
+	if (!pdata) {
+		ipio_err("pdata is null
");
+		return -ENOMEM;
+	}
+
+	ipio_info("Read size = %d
", size);
+
+	if (!ice)
+		if (ilitek_ice_mode_ctrl(ENABLE, OFF) < 0)
+			ipio_err("Enable ice mode failed while reading project id
");
+
+	if (ilitek_ice_mode_write(0x041000, 0x0, 1) < 0)
+		ipio_err("Pull cs low failed
");
+	if (ilitek_ice_mode_write(0x041004, 0x66aa55, 3) < 0)
+		ipio_err("Write key failed
");
+
+	if (ilitek_ice_mode_write(0x041008, 0x03, 1) < 0)
+		ipio_err("Write 0x03 at 0x041008
");
+
+	if (ilitek_ice_mode_write(0x041008, (RESERVE_BLOCK_START_ADDR & 0xFF0000) >> 16, 1) < 0)
+		ipio_err("Write address failed
");
+	if (ilitek_ice_mode_write(0x041008, (RESERVE_BLOCK_START_ADDR & 0x00FF00) >> 8, 1) < 0)
+		ipio_err("Write address failed
");
+	if (ilitek_ice_mode_write(0x041008, (RESERVE_BLOCK_START_ADDR & 0x0000FF), 1) < 0)
+		ipio_err("Write address failed
");
+
+	for (i = 0; i < size; i++) {
+		if (ilitek_ice_mode_write(0x041008, 0xFF, 1) < 0)
+			ipio_err("Write dummy failed
");
+		if (ilitek_ice_mode_read(0x41010, &tmp, sizeof(u8)) < 0)
+			ipio_err("Read project id error
");
+		pdata[i] = tmp;
+		ipio_info("project_id[%d] = 0x%x
", i, pdata[i]);
+	}
+
+	ilitek_tddi_flash_clear_dma();
+
+	if (ilitek_ice_mode_write(0x041000, 0x1, 1) < 0)
+		ipio_err("Pull cs high
");
+
+	if (!ice)
+		if (ilitek_ice_mode_ctrl(DISABLE, OFF) < 0)
+			ipio_err("Disable ice mode failed while reading project id
");
+
+	return 0;
+}
+
+int ilitek_tddi_ic_get_core_ver(void)
+{
+	int ret = 0;
+	u8 cmd[2] = {0};
+	u8 buf[10] = {0};
+
+	cmd[0] = P5_X_READ_DATA_CTRL;
+	cmd[1] = P5_X_GET_CORE_VERSION;
+
+	if (idev->write(cmd, sizeof(cmd)) < 0) {
+		ipio_err("write core ver err
");
+		ret = -1;
+		goto out;
+	}
+
+	if (idev->write(&cmd[1], sizeof(u8)) < 0) {
+		ipio_err("write core ver err
");
+		ret = -1;
+		goto out;
+	}
+
+	if (idev->read(buf, idev->protocol->core_ver_len) < 0) {
+		ipio_err("i2c/spi read core ver err
");
+		ret = -1;
+		goto out;
+	}
+
+	if (buf[0] != P5_X_GET_CORE_VERSION) {
+		ipio_err("Invalid core ver
");
+		ret = -1;
+	}
+
+out:
+	ipio_info("Core version = %d.%d.%d
", buf[1], buf[2], buf[3]);
+	idev->chip->core_ver = buf[1] << 16 | buf[2] << 8 | buf[3];
+
+	if ((idev->chip->core_ver >= 0x10410) && (idev->fw_upgrade_mode == UPGRADE_FLASH))
+		idev->chip->info_from_hex = true;
+
+	return ret;
+}
+
+void ilitek_tddi_fw_uart_ctrl(u8 ctrl)
+{
+	u8 cmd[4] = {0};
+
+	if (ctrl > 1 || ctrl < 0) {
+		ipio_info("Unknown cmd, ignore
");
+		return;
+	}
+
+	ipio_info("%s UART mode
", ctrl ? "Enable" : "Disable");
+
+	cmd[0] = P5_X_I2C_UART;
+	cmd[1] = 0x3;
+	cmd[2] = 0;
+	cmd[3] = ctrl;
+
+	if (idev->write(cmd, sizeof(cmd)) < 0) {
+		ipio_info("Write fw uart cmd failed
");
+		return;
+	}
+
+	idev->fw_uart_en = ctrl ? ENABLE : DISABLE;
+}
+
+int ilitek_tddi_ic_get_fw_ver(void)
+{
+	int ret = 0;
+	u8 cmd[2] = {0};
+	u8 buf[10] = {0};
+
+	if (idev->chip->info_from_hex) {
+		buf[1] = idev->chip->info[44];
+		buf[2] = idev->chip->info[45];
+		buf[3] = idev->chip->info[46];
+		buf[4] = idev->chip->info[47];
+		goto out;
+	}
+
+	cmd[0] = P5_X_READ_DATA_CTRL;
+	cmd[1] = P5_X_GET_FW_VERSION;
+
+	if (idev->write(cmd, sizeof(cmd)) < 0) {
+		ipio_err("write firmware ver err
");
+		ret = -1;
+		goto out;
+	}
+
+	if (idev->write(&cmd[1], sizeof(u8)) < 0) {
+		ipio_err("write firmware ver err
");
+		ret = -1;
+		goto out;
+	}
+
+	if (idev->read(buf, idev->protocol->fw_ver_len) < 0) {
+		ipio_err("i2c/spi read firmware ver err
");
+		ret = -1;
+		goto out;
+	}
+
+	if (buf[0] != P5_X_GET_FW_VERSION) {
+		ipio_err("Invalid firmware ver
");
+		ret = -1;
+	}
+
+out:
+	ipio_info("Firmware version = %d.%d.%d.%d
", buf[1], buf[2], buf[3], buf[4]);
+	idev->chip->fw_ver = buf[1] << 24 | buf[2] << 16 | buf[3] << 8 | buf[4];
+	return ret;
+}
+
+int ilitek_tddi_ic_get_panel_info(void)
+{
+	int ret = 0;
+	u8 cmd = P5_X_GET_PANEL_INFORMATION;
+	u8 buf[10] = {0};
+
+	if (idev->chip->info_from_hex) {
+		buf[1] = idev->chip->info[12];
+		buf[2] = idev->chip->info[13];
+		buf[3] = idev->chip->info[14];
+		buf[4] = idev->chip->info[15];
+		goto out;
+	}
+
+	ret = idev->write(&cmd, sizeof(u8));
+	if (ret < 0) {
+		ipio_err("Write panel info error
");
+		goto out;
+	}
+
+	ret = idev->read(buf, idev->protocol->panel_info_len);
+	if (ret < 0)
+		ipio_err("Read panel info error
");
+
+out:
+	if (buf[0] != P5_X_GET_PANEL_INFORMATION) {
+		idev->panel_wid = TOUCH_SCREEN_X_MAX;
+		idev->panel_hei = TOUCH_SCREEN_Y_MAX;
+	} else {
+		idev->panel_wid = buf[1] << 8 | buf[2];
+		idev->panel_hei = buf[3] << 8 | buf[4];
+	}
+
+	ipio_info("Panel info: width = %d, height = %d
", idev->panel_wid, idev->panel_hei);
+	return ret;
+}
+
+int ilitek_tddi_ic_get_tp_info(void)
+{
+	int ret = 0;
+	u8 cmd[2] = {0};
+	u8 buf[20] = {0};
+
+	if (idev->chip->info_from_hex) {
+		buf[1] = idev->chip->info[1];
+		buf[2] = idev->chip->info[3];
+		buf[3] = idev->chip->info[4];
+		buf[4] = idev->chip->info[5];
+		buf[5] = idev->chip->info[6];
+		buf[6] = idev->chip->info[7];
+		buf[7] = idev->chip->info[8];
+		buf[8] = idev->chip->info[10];
+		buf[11] = buf[7];
+		buf[12] = buf[8];
+		goto out;
+	}
+
+	cmd[0] = P5_X_READ_DATA_CTRL;
+	cmd[1] = P5_X_GET_TP_INFORMATION;
+
+	if (idev->write(cmd, sizeof(cmd)) < 0) {
+		ipio_err("Write tp info error
");
+		ret = -1;
+		goto out;
+	}
+
+	if (idev->write(&cmd[1], sizeof(u8)) < 0) {
+		ipio_err("Write tp info error
");
+		ret = -1;
+		goto out;
+	}
+
+	if (idev->read(buf, idev->protocol->tp_info_len) < 0) {
+		ipio_err("Read tp info error
");
+		ret = -1;
+		goto out;
+	}
+
+	if (buf[0] != P5_X_GET_TP_INFORMATION) {
+		ipio_err("Invalid tp info
");
+		ret = -1;
+		goto out;
+	}
+
+out:
+	idev->min_x = buf[1];
+	idev->min_y = buf[2];
+	idev->max_x = buf[4] << 8 | buf[3];
+	idev->max_y = buf[6] << 8 | buf[5];
+	idev->xch_num = buf[7];
+	idev->ych_num = buf[8];
+	idev->stx = buf[11];
+	idev->srx = buf[12];
+
+	ipio_info("TP Info: min_x = %d, min_y = %d, max_x = %d, max_y = %d
", idev->min_x, idev->min_y, idev->max_x, idev->max_y);
+	ipio_info("TP Info: xch = %d, ych = %d, stx = %d, srx = %d
", idev->xch_num, idev->ych_num, idev->stx, idev->srx);
+	return ret;
+}
+
+static void ilitek_tddi_ic_check_protocol_ver(u32 pver)
+{
+	int i = 0;
+
+	if (idev->protocol->ver == pver) {
+		ipio_info("same procotol version, do nothing
");
+		return;
+	}
+
+	for (i = 0; i < PROTOCL_VER_NUM - 1; i++) {
+		if (protocol_info[i].ver == pver) {
+			idev->protocol = &protocol_info[i];
+			ipio_info("update protocol version = %x
", idev->protocol->ver);
+			return;
+		}
+	}
+
+	ipio_info("Not found a correct protocol version in list, use newest version
");
+	idev->protocol = &protocol_info[PROTOCL_VER_NUM - 1];
+}
+
+int ilitek_tddi_ic_get_protocl_ver(void)
+{
+	int ret = 0;
+	u8 cmd[2] = {0};
+	u8 buf[10] = {0};
+	u32 ver;
+
+	if (idev->chip->info_from_hex) {
+		buf[1] = idev->chip->info[68];
+		buf[2] = idev->chip->info[69];
+		buf[3] = idev->chip->info[70];
+		goto out;
+	}
+
+	cmd[0] = P5_X_READ_DATA_CTRL;
+	cmd[1] = P5_X_GET_PROTOCOL_VERSION;
+
+	if (idev->write(cmd, sizeof(cmd)) < 0) {
+		ipio_err("Write protocol version error
");
+		ret = -1;
+		goto out;
+	}
+
+	if (idev->write(&cmd[1], sizeof(u8)) < 0) {
+		ipio_err("Write protocol version error
");
+		ret = -1;
+		goto out;
+	}
+
+	if (idev->read(buf, idev->protocol->pro_ver_len) < 0) {
+		ipio_err("Read protocol version error
");
+		ret = -1;
+		goto out;
+	}
+
+	if (buf[0] != P5_X_GET_PROTOCOL_VERSION) {
+		ipio_err("Invalid protocol ver
");
+		ret = -1;
+		goto out;
+	}
+
+out:
+	ver = buf[1] << 16 | buf[2] << 8 | buf[3];
+
+	ilitek_tddi_ic_check_protocol_ver(ver);
+
+	ipio_info("Protocol version = %d.%d.%d
", idev->protocol->ver >> 16,
+		(idev->protocol->ver >> 8) & 0xFF, idev->protocol->ver & 0xFF);
+	return ret;
+}
+
+int ilitek_tddi_ic_get_info(void)
+{
+	int ret = 0;
+
+	if (!atomic_read(&idev->ice_stat)) {
+		ipio_err("ice mode doesn't enable
");
+		return -1;
+	}
+
+	if (ilitek_ice_mode_read(idev->chip->pid_addr, &idev->chip->pid, sizeof(u32)) < 0)
+		ipio_err("Read chip pid error
");
+
+	idev->chip->id = idev->chip->pid >> 16;
+	idev->chip->type_hi = idev->chip->pid & 0x0000FF00;
+	idev->chip->type_low = idev->chip->pid	& 0xFF;
+
+	if (ilitek_ice_mode_read(idev->chip->otp_addr, &idev->chip->otp_id, sizeof(u32)) < 0)
+		ipio_err("Read otp id error
");
+	if (ilitek_ice_mode_read(idev->chip->ana_addr, &idev->chip->ana_id, sizeof(u32)) < 0)
+		ipio_err("Read ana id error
");
+
+	idev->chip->otp_id &= 0xFF;
+	idev->chip->ana_id &= 0xFF;
+
+	ipio_info("CHIP INFO: PID = %x, ID = %x, TYPE = %x, OTP = %x, ANA = %x
",
+		idev->chip->pid,
+		idev->chip->id,
+		((idev->chip->type_hi << 8) | idev->chip->type_low),
+		idev->chip->otp_id,
+		idev->chip->ana_id);
+
+	ret = ilitek_tddi_ic_check_support(idev->chip->pid, idev->chip->id);
+	return ret;
+}
+
+static struct ilitek_ic_info chip;
+
+void ilitek_tddi_ic_init(void)
+{
+	chip.pid_addr =		   	TDDI_PID_ADDR;
+	chip.wdt_addr =		   	TDDI_WDT_ADDR;
+	chip.pc_counter_addr = 		TDDI_PC_COUNTER_ADDR;
+	chip.otp_addr =		   	TDDI_OTP_ID_ADDR;
+	chip.ana_addr =		   	TDDI_ANA_ID_ADDR;
+	chip.reset_addr =	   	TDDI_CHIP_RESET_ADDR;
+	chip.spi_speed_ctrl =		ENABLE;
+
+	idev->protocol = &protocol_info[PROTOCL_VER_NUM - 1];
+	idev->chip = &chip;
+}
diff --git a/drivers/input/touchscreen/ili/ilitek_main.c b/drivers/input/touchscreen/ili/ilitek_main.c
new file mode 100644
index 000000000000..309f81404f99
--- /dev/null
+++ b/drivers/input/touchscreen/ili/ilitek_main.c
@@ -0,0 +1,836 @@
+/*
+ * ILITEK Touch IC driver
+ *
+ * Copyright (C) 2011 ILI Technology Corporation.
+ *
+ * Author: Dicky Chiang <dicky_chiang@ilitek.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+#include "ilitek.h"
+
+/* Debug level */
+bool ipio_debug_level = DEBUG_OUTPUT;
+EXPORT_SYMBOL(ipio_debug_level);
+
+static struct workqueue_struct *esd_wq;
+static struct workqueue_struct *bat_wq;
+static struct delayed_work esd_work;
+static struct delayed_work bat_work;
+
+#ifdef RESUME_BY_DDI
+static struct workqueue_struct	*resume_by_ddi_wq = NULL;
+static struct work_struct	resume_by_ddi_work;
+
+static void ilitek_resume_by_ddi_work(struct work_struct *work)
+{
+	mutex_lock(&idev->touch_mutex);
+
+	if (idev->gesture)
+		disable_irq_wake(idev->irq_num);
+
+	/* Set tp as demo mode and reload code if it's iram. */
+	idev->actual_tp_mode = P5_X_FW_AP_MODE;
+	if (idev->fw_upgrade_mode == UPGRADE_IRAM)
+		ilitek_tddi_fw_upgrade_handler(NULL);
+	else
+		ilitek_tddi_reset_ctrl(idev->reset);
+
+	ilitek_plat_irq_enable();
+	ipio_info("TP resume end by wq
");
+	ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+	ilitek_tddi_wq_ctrl(WQ_BAT, ENABLE);
+	mutex_unlock(&idev->touch_mutex);
+}
+
+void ilitek_resume_by_ddi(void)
+{
+	if (!resume_by_ddi_wq) {
+		ipio_info("resume_by_ddi_wq is null
");
+		return;
+	}
+
+	mutex_lock(&idev->touch_mutex);
+
+	ipio_info("TP resume start called by ddi
");
+	idev->tp_suspend = false;
+
+	/*
+	 * To match the timing of sleep out, the first of mipi cmd must be sent within 10ms
+	 * after TP reset. Because of that, we create a wq doing host download for resume.
+	 */
+	atomic_set(&idev->fw_stat, ENABLE);
+	ilitek_tddi_reset_ctrl(idev->reset);
+	ilitek_ice_mode_ctrl(ENABLE, OFF);
+	idev->ddi_rest_done = true;
+	idev->resume_by_ddi = true;
+	mdelay(5);
+	queue_work(resume_by_ddi_wq, &(resume_by_ddi_work));
+
+	mutex_unlock(&idev->touch_mutex);
+}
+#endif
+
+int ilitek_tddi_mp_test_handler(char *apk, bool lcm_on)
+{
+	int ret = 0;
+
+	if (atomic_read(&idev->fw_stat)) {
+		ipio_err("fw upgrade processing, ignore
");
+		return 0;
+	}
+
+	if (!idev->chip->open_c_formula ||
+		!idev->chip->open_sp_formula) {
+		ipio_err("formula is null
");
+		return -1;
+	}
+
+	atomic_set(&idev->mp_stat, ENABLE);
+
+	if (idev->actual_tp_mode != P5_X_FW_TEST_MODE) {
+		ret = ilitek_tddi_switch_tp_mode(P5_X_FW_TEST_MODE);
+		if (ret < 0) {
+			ipio_err("Switch MP mode failed
");
+			goto out;
+		}
+	}
+
+	ret = ilitek_tddi_mp_test_main(apk, lcm_on);
+
+out:
+	/*
+	 * If there's running mp test with lcm off, we suspose that
+	 * users will soon call resume from suspend. TP mode will be changed
+	 * from MP to AP mode until resume finished.
+	 */
+	if (!lcm_on) {
+		atomic_set(&idev->mp_stat, DISABLE);
+		return ret;
+	}
+
+	idev->actual_tp_mode = P5_X_FW_AP_MODE;
+	if (idev->fw_upgrade_mode == UPGRADE_IRAM) {
+		if (ilitek_tddi_fw_upgrade_handler(NULL) < 0)
+			ipio_err("FW upgrade failed during mp test
");
+	} else {
+		if (ilitek_tddi_reset_ctrl(idev->reset) < 0)
+			ipio_err("TP Reset failed during mp test
");
+	}
+
+	atomic_set(&idev->mp_stat, DISABLE);
+	return ret;
+}
+
+int ilitek_tddi_switch_tp_mode(u8 mode)
+{
+	int ret = 0;
+
+	atomic_set(&idev->tp_sw_mode, START);
+
+	idev->actual_tp_mode = mode;
+
+	switch (idev->actual_tp_mode) {
+	case P5_X_FW_AP_MODE:
+		ipio_info("Switch to AP mode
");
+		if (idev->fw_upgrade_mode == UPGRADE_IRAM) {
+			if (ilitek_tddi_fw_upgrade_handler(NULL) < 0)
+				ipio_err("FW upgrade failed
");
+		} else {
+			ret = ilitek_tddi_reset_ctrl(idev->reset);
+		}
+		if (ret < 0)
+			ipio_err("TP Reset failed
");
+
+		break;
+	case P5_X_FW_GESTURE_MODE:
+		ret = idev->gesture_move_code(idev->gesture_mode);
+		if (ret < 0)
+			ipio_err("Move gesture code failed
");
+		break;
+	case P5_X_FW_TEST_MODE:
+		ipio_info("Switch to Test mode
");
+		ret = idev->mp_move_code();
+		break;
+	default:
+		ipio_err("Unknown TP mode: %x
", mode);
+		ret = -1;
+		break;
+	}
+
+	if (ret < 0)
+		ipio_err("Switch TP mode (%d) failed 
", mode);
+
+	ipio_debug("Actual TP mode = %d
", idev->actual_tp_mode);
+	atomic_set(&idev->tp_sw_mode, END);
+	return ret;
+}
+
+int ilitek_tddi_gesture_recovery(void)
+{
+	int ret = 0;
+	bool lock = mutex_is_locked(&idev->touch_mutex);
+
+	atomic_set(&idev->esd_stat, START);
+
+	if (!lock)
+		mutex_lock(&idev->touch_mutex);
+
+	ipio_info("Doing gesture recovery
");
+	ret = idev->ges_recover();
+
+	if (!lock)
+		mutex_unlock(&idev->touch_mutex);
+
+	atomic_set(&idev->esd_stat, END);
+	return ret;
+}
+
+void ilitek_tddi_spi_recovery(void)
+{
+	bool lock = mutex_is_locked(&idev->touch_mutex);
+
+	atomic_set(&idev->esd_stat, START);
+
+	if (!lock)
+		mutex_lock(&idev->touch_mutex);
+
+	ipio_info("Doing spi recovery
");
+	if (ilitek_tddi_fw_upgrade_handler(NULL) < 0)
+		ipio_err("FW upgrade failed
");
+
+	if (!lock)
+		mutex_unlock(&idev->touch_mutex);
+
+	atomic_set(&idev->esd_stat, END);
+}
+
+int ilitek_tddi_wq_esd_spi_check(void)
+{
+	u8 tx = SPI_WRITE, rx = 0;
+
+	idev->spi_write_then_read(idev->spi, &tx, 1, &rx, 1);
+	ipio_debug("spi esd check = 0x%x
", rx);
+	if (rx != SPI_ACK) {
+		ipio_err("rx = 0x%x
", rx);
+		return -1;
+	}
+	return 0;
+}
+
+int ilitek_tddi_wq_esd_i2c_check(void)
+{
+	ipio_debug("");
+	return 0;
+}
+
+static void ilitek_tddi_wq_esd_check(struct work_struct *work)
+{
+	if (idev->esd_recover() < 0) {
+		ipio_err("SPI ACK failed, doing spi recovery
");
+		ilitek_tddi_spi_recovery();
+	}
+	complete_all(&idev->esd_done);
+	ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+}
+
+static int read_power_status(u8 *buf)
+{
+	struct file *f = NULL;
+	mm_segment_t old_fs;
+	ssize_t byte = 0;
+
+	old_fs = get_fs();
+	set_fs(get_ds());
+
+	f = filp_open(POWER_STATUS_PATH, O_RDONLY, 0);
+	if (ERR_ALLOC_MEM(f)) {
+		ipio_err("Failed to open %s
", POWER_STATUS_PATH);
+		return -1;
+	}
+
+	f->f_op->llseek(f, 0, SEEK_SET);
+	byte = f->f_op->read(f, buf, 20, &f->f_pos);
+
+	ipio_debug("Read %d bytes
", (int)byte);
+
+	set_fs(old_fs);
+	filp_close(f, NULL);
+	return 0;
+}
+
+static void ilitek_tddi_wq_bat_check(struct work_struct *work)
+{
+	u8 str[20] = {0};
+	static int charge_mode;
+
+	if (read_power_status(str) < 0)
+		ipio_err("Read power status failed
");
+
+	ipio_debug("Batter Status: %s
", str);
+
+	if (strstr(str, "Charging") != NULL || strstr(str, "Full") != NULL
+		|| strstr(str, "Fully charged") != NULL) {
+		if (charge_mode != 1) {
+			ipio_debug("Charging mode
");
+			if (ilitek_tddi_ic_func_ctrl("plug", DISABLE) < 0) // plug in
+				ipio_err("Write plug in failed
");
+			charge_mode = 1;
+		}
+	} else {
+		if (charge_mode != 2) {
+			ipio_debug("Not charging mode
");
+			if (ilitek_tddi_ic_func_ctrl("plug", ENABLE) < 0) // plug out
+				ipio_err("Write plug out failed
");
+			charge_mode = 2;
+		}
+	}
+	ilitek_tddi_wq_ctrl(WQ_BAT, ENABLE);
+}
+
+void ilitek_tddi_wq_ctrl(int type, int ctrl)
+{
+	switch (type) {
+	case WQ_ESD:
+		if (ENABLE_WQ_ESD || idev->wq_ctrl) {
+			if (!esd_wq) {
+				ipio_err("wq esd is null
");
+				break;
+			}
+			idev->wq_esd_ctrl = ctrl;
+			if (ctrl == ENABLE) {
+				ipio_debug("execute esd check
");
+				if (!queue_delayed_work(esd_wq, &esd_work, msecs_to_jiffies(WQ_ESD_DELAY)))
+					ipio_debug("esd check was already on queue
");
+			} else {
+				cancel_delayed_work_sync(&esd_work);
+				flush_workqueue(esd_wq);
+				ipio_debug("cancel esd wq
");
+			}
+		}
+		break;
+	case WQ_BAT:
+		if (ENABLE_WQ_BAT || idev->wq_ctrl) {
+			if (!bat_wq) {
+				ipio_err("WQ BAT is null
");
+				break;
+			}
+			idev->wq_bat_ctrl = ctrl;
+			if (ctrl == ENABLE) {
+				ipio_debug("execute bat check
");
+				if (!queue_delayed_work(bat_wq, &bat_work, msecs_to_jiffies(WQ_BAT_DELAY)))
+					ipio_debug("bat check was already on queue
");
+			} else {
+				cancel_delayed_work_sync(&bat_work);
+				flush_workqueue(bat_wq);
+				ipio_debug("cancel bat wq
");
+			}
+		}
+		break;
+	default:
+		ipio_err("Unknown WQ type, %d
", type);
+		break;
+	}
+}
+
+static void ilitek_tddi_wq_init(void)
+{
+	esd_wq = alloc_workqueue("esd_check", WQ_MEM_RECLAIM, 0);
+	bat_wq = alloc_workqueue("bat_check", WQ_MEM_RECLAIM, 0);
+
+	WARN_ON(!esd_wq);
+	WARN_ON(!bat_wq);
+
+	INIT_DELAYED_WORK(&esd_work, ilitek_tddi_wq_esd_check);
+	INIT_DELAYED_WORK(&bat_work, ilitek_tddi_wq_bat_check);
+
+#ifdef RESUME_BY_DDI
+	resume_by_ddi_wq = create_singlethread_workqueue("resume_by_ddi_wq");
+	WARN_ON(!resume_by_ddi_wq);
+	INIT_WORK(&resume_by_ddi_work, ilitek_resume_by_ddi_work);
+#endif
+}
+
+int ilitek_tddi_sleep_handler(int mode)
+{
+	int ret = 0;
+
+	mutex_lock(&idev->touch_mutex);
+	atomic_set(&idev->tp_sleep, START);
+
+	if (atomic_read(&idev->fw_stat) ||
+		atomic_read(&idev->mp_stat)) {
+		ipio_info("fw upgrade or mp still running, ignore sleep requst
");
+		atomic_set(&idev->tp_sleep, END);
+		mutex_unlock(&idev->touch_mutex);
+		return 0;
+	}
+
+	ilitek_tddi_wq_ctrl(WQ_ESD, DISABLE);
+	ilitek_tddi_wq_ctrl(WQ_BAT, DISABLE);
+	ilitek_plat_irq_disable();
+
+	ipio_info("Sleep Mode = %d
", mode);
+
+	switch (mode) {
+	case TP_SUSPEND:
+		ipio_info("TP suspend start
");
+		if (ilitek_tddi_ic_func_ctrl("sense", DISABLE) < 0)
+			ipio_err("Write sense stop cmd failed
");
+
+		if (ilitek_tddi_ic_check_busy(50, 20) < 0)
+			ipio_err("Check busy timeout during suspend
");
+
+		if (idev->gesture) {
+			ilitek_tddi_switch_tp_mode(P5_X_FW_GESTURE_MODE);
+			enable_irq_wake(idev->irq_num);
+			ilitek_plat_irq_enable();
+		} else {
+			if (ilitek_tddi_ic_func_ctrl("sleep", SLEEP_IN) < 0)
+				ipio_err("Write sleep in cmd failed
");
+		}
+		ipio_info("TP suspend end
");
+		idev->tp_suspend = true;
+		break;
+	case TP_DEEP_SLEEP:
+		ipio_info("TP deep suspend start
");
+		if (ilitek_tddi_ic_func_ctrl("sense", DISABLE) < 0)
+			ipio_err("Write sense stop cmd failed
");
+
+		if (ilitek_tddi_ic_check_busy(50, 20) < 0)
+			ipio_err("Check busy timeout during deep suspend
");
+
+		if (idev->gesture) {
+			if (idev->gesture_move_code(idev->gesture_mode) < 0)
+				ipio_err("Move gesture code failed
");
+			enable_irq_wake(idev->irq_num);
+			ilitek_plat_irq_enable();
+		} else {
+			if (ilitek_tddi_ic_func_ctrl("sleep", DEEP_SLEEP_IN) < 0)
+				ipio_err("Write deep sleep in cmd failed
");
+		}
+		ipio_info("TP deep suspend end
");
+		idev->tp_suspend = true;
+		break;
+	case TP_RESUME:
+		if (!idev->resume_by_ddi) {
+			ipio_info("TP resume start
");
+			idev->tp_suspend = false;
+
+			if (idev->gesture)
+				disable_irq_wake(idev->irq_num);
+
+			/* Set tp as demo mode and reload code if it's iram. */
+			idev->actual_tp_mode = P5_X_FW_AP_MODE;
+			if (idev->fw_upgrade_mode == UPGRADE_IRAM) {
+				if (ilitek_tddi_fw_upgrade_handler(NULL) < 0)
+					ipio_err("FW upgrade failed during resume
");
+			} else {
+				if (ilitek_tddi_reset_ctrl(idev->reset) < 0)
+					ipio_err("TP Reset failed during resume
");
+			}
+			ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+			ilitek_tddi_wq_ctrl(WQ_BAT, ENABLE);
+			ipio_info("TP resume end
");
+		}
+		ilitek_plat_irq_enable();
+		break;
+	default:
+		ipio_err("Unknown sleep mode, %d
", mode);
+		ret = -EINVAL;
+		break;
+	}
+
+	ilitek_tddi_touch_release_all_point();
+	atomic_set(&idev->tp_sleep, END);
+	mutex_unlock(&idev->touch_mutex);
+	return ret;
+}
+
+int ilitek_tddi_fw_upgrade_handler(void *data)
+{
+	int ret = 0;
+	static bool input_reg_once;
+
+	atomic_set(&idev->fw_stat, START);
+
+	idev->fw_update_stat = 0;
+//	ret = ilitek_tddi_fw_upgrade(idev->fw_upgrade_mode, ILI_FILE, idev->fw_open);
+	ret = ilitek_tddi_fw_upgrade(idev->fw_upgrade_mode, HEX_FILE, idev->fw_open);
+	if (ret != 0)
+		idev->fw_update_stat = -1;
+	else
+		idev->fw_update_stat = 100;
+
+	ipio_info("Flash FW completed ... update TP/FW info
");
+
+	/*should get coer ver first, if core ver large than 1.4.10 , get info form hex*/
+	ilitek_tddi_ic_get_core_ver();
+	ilitek_tddi_ic_get_protocl_ver();
+	ilitek_tddi_ic_get_fw_ver();
+	ilitek_tddi_ic_get_tp_info();
+	ilitek_tddi_ic_get_panel_info();
+	idev->chip->info_from_hex = false;
+
+	if (!input_reg_once) {
+		input_reg_once = true;
+		ipio_info("Registre touch to input subsystem
");
+		ilitek_plat_input_register();
+		ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+		ilitek_tddi_wq_ctrl(WQ_BAT, ENABLE);
+	}
+
+	atomic_set(&idev->fw_stat, END);
+	return ret;
+}
+
+int ilitek_tddi_switch_tp_data_format(int format)
+{
+	u8 cmd[2] = {0}, ctrl = 0;
+	u16 self_key = 2;
+	int ret = 0;
+
+	switch (format) {
+	case DATA_FORMAT_DEMO:
+		idev->tp_data_len = P5_X_DEMO_MODE_PACKET_LEN;
+		ipio_info("Switch to Demo mode
");
+		ctrl = DATA_FORMAT_DEMO_CMD;
+		break;
+	case DATA_FORMAT_DEBUG:
+		idev->tp_data_len = (2 * idev->xch_num * idev->ych_num) + (idev->stx * 2) + (idev->srx * 2);
+		idev->tp_data_len += 2 * self_key + (8 * 2) + 1 + 35;
+		ipio_info("Switch to Debug mode
");
+		ctrl = DATA_FORMAT_DEBUG_CMD;
+		break;
+	case DATA_FORMAT_DEMO_DEBUG_INFO:
+		/*only suport SPI interface now, so defult use size 1024 buffer*/
+		idev->tp_data_len = P5_X_DEMO_MODE_PACKET_LEN +
+			P5_X_DEMO_DEBUG_INFO_ID0_LENGTH + P5_X_INFO_HEADER_LENGTH;
+		ipio_info("Switch to demo debug info mode
");
+		ctrl = DATA_FORMAT_DEMO_DEBUG_INFO_CMD;
+		break;
+	case DATA_FORMAT_GESTURE_INFO:
+		idev->tp_data_len = P5_X_GESTURE_INFO_LENGTH;
+		ctrl = DATA_FORMAT_GESTURE_INFO_CMD;
+		break;
+	case DATA_FORMAT_GESTURE_NORMAL:
+		idev->tp_data_len = P5_X_GESTURE_NORMAL_LENGTH;
+		ctrl = DATA_FORMAT_GESTURE_NORMAL_CMD;
+		break;
+	case DATA_FORMAT_GESTURE_DEMO:
+		if (idev->gesture_demo_ctrl == ENABLE) {
+			if(idev->gesture_mode == DATA_FORMAT_GESTURE_INFO)
+				idev->tp_data_len = P5_X_GESTURE_INFO_LENGTH + P5_X_INFO_HEADER_LENGTH + P5_X_INFO_CHECKSUM_LENGTH;
+			else
+				idev->tp_data_len = P5_X_DEMO_MODE_PACKET_LEN + P5_X_INFO_HEADER_LENGTH + P5_X_INFO_CHECKSUM_LENGTH;
+		} else {
+			if(idev->gesture_mode == DATA_FORMAT_GESTURE_INFO)
+				idev->tp_data_len = P5_X_GESTURE_INFO_LENGTH;
+			else
+				idev->tp_data_len = P5_X_GESTURE_NORMAL_LENGTH;
+		}
+		ipio_info("Gesture demo mode control = %d
",  idev->gesture_demo_ctrl);
+		ilitek_tddi_ic_func_ctrl("gesture_demo_en", idev->gesture_demo_ctrl);
+		ipio_info("knock_en setting
");
+		ilitek_tddi_ic_func_ctrl("knock_en", 0x8);
+		break;
+	default:
+		ipio_err("Unknow TP data format
");
+		return -1;
+	}
+
+	if (idev->actual_tp_mode == P5_X_FW_AP_MODE) {
+		idev->actual_tp_data_format = format;
+		cmd[0] = P5_X_MODE_CONTROL;
+		cmd[1] = ctrl;
+		ret = idev->write(cmd, 2);
+
+		if (ret < 0) {
+			ipio_err("switch to format %d failed
", format);
+			ilitek_tddi_switch_tp_mode(P5_X_FW_AP_MODE);
+		}
+	} else if (idev->actual_tp_mode == P5_X_FW_GESTURE_MODE) {
+		ret = ilitek_tddi_ic_func_ctrl("lpwg", ctrl);
+		if (ret < 0)
+			ipio_err("write gesture mode failed
");
+	}
+
+	return ret;
+}
+
+void ilitek_tddi_report_handler(void)
+{
+	int ret = 0, pid = 0;
+	u8 *buf = NULL, checksum = 0;
+	int rlen = 0, buf_size = 0;
+	int tmp = ipio_debug_level;
+
+	/* Just in case these stats couldn't be blocked in top half context */
+	if (!idev->report || atomic_read(&idev->tp_reset) ||
+		atomic_read(&idev->fw_stat) || atomic_read(&idev->tp_sw_mode) ||
+		atomic_read(&idev->mp_stat) || atomic_read(&idev->tp_sleep)) {
+		ipio_info("ignore report request
");
+		return;
+	}
+
+	if (idev->irq_after_recovery) {
+		ipio_info("ignore int triggered by recovery
");
+		idev->irq_after_recovery = false;
+		return;
+	}
+
+	ilitek_tddi_wq_ctrl(WQ_ESD, DISABLE);
+	ilitek_tddi_wq_ctrl(WQ_BAT, DISABLE);
+
+	rlen = idev->tp_data_len;
+	ipio_debug("Packget length = %d
", rlen);
+
+	if (!rlen) {
+		ipio_err("Length of packet is invaild
");
+		goto out;
+	}
+
+	buf_size = (idev->fw_uart_en == DISABLE) ? rlen : 2048;
+
+	buf = kcalloc(buf_size, sizeof(u8), GFP_ATOMIC);
+	if (ERR_ALLOC_MEM(buf)) {
+		ipio_err("Failed to allocate packet memory, %ld
", PTR_ERR(buf));
+		goto out;
+	}
+
+	ret = idev->read(buf, rlen);
+	if (ret < 0) {
+		ipio_err("Read report packet failed, ret = %d
", ret);
+		if (idev->actual_tp_mode == P5_X_FW_GESTURE_MODE && idev->gesture) {
+			ipio_err("Gesture failed, doing gesture recovery
");
+			if (ilitek_tddi_gesture_recovery() < 0)
+				ipio_err("Failed to recover gesture
");
+			idev->irq_after_recovery = true;
+		} else if (ret == DO_SPI_RECOVER) {
+			ipio_err("SPI ACK failed, doing spi recovery
");
+			ilitek_tddi_spi_recovery();
+			idev->irq_after_recovery = true;
+		}
+		goto out;
+	}
+
+	rlen = ret;
+
+	ilitek_dump_data(buf, 8, rlen, 0, "finger report");
+
+	checksum = ilitek_calc_packet_checksum(buf, rlen - 1);
+
+	if (checksum != buf[rlen-1] && idev->fw_uart_en == DISABLE) {
+		ipio_err("Wrong checksum, checksum = %x, buf = %x, len = %d
", checksum, buf[rlen-1], rlen);
+		ipio_debug_level = DEBUG_ALL;
+		ilitek_dump_data(buf, 8, rlen, 0, "finger report with wrong");
+		ipio_debug_level = tmp;
+		goto out;
+	}
+
+	pid = buf[0];
+	if (pid == P5_X_INFO_HEADER_PACKET_ID) {
+		ipio_debug("Have header PID = %x
", pid);
+		buf = buf + P5_X_INFO_HEADER_LENGTH;
+		pid = buf[0];
+	}
+	ipio_debug("Packet ID = %x
", pid);
+
+	switch (pid) {
+	case P5_X_DEMO_PACKET_ID:
+		ilitek_tddi_report_ap_mode(buf, rlen);
+		break;
+	case P5_X_DEBUG_PACKET_ID:
+		ilitek_tddi_report_debug_mode(buf, rlen);
+		break;
+	case P5_X_I2CUART_PACKET_ID:
+		ilitek_tddi_report_i2cuart_mode(buf, rlen);
+		break;
+	case P5_X_GESTURE_PACKET_ID:
+		ilitek_tddi_report_gesture_mode(buf, rlen);
+		break;
+	case P5_X_GESTURE_FAIL_ID:
+		ipio_info("gesture fail reason code = 0x%02x", buf[1]);
+		break;
+	case P5_X_DEMO_DEBUG_INFO_PACKET_ID:
+		demo_debug_info_mode(buf, rlen);
+		break;
+	default:
+		ipio_err("Unknown packet id, %x
", pid);
+		break;
+	}
+
+out:
+	if (idev->actual_tp_mode != P5_X_FW_GESTURE_MODE) {
+		ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+		ilitek_tddi_wq_ctrl(WQ_BAT, ENABLE);
+	}
+
+	if (idev->actual_tp_mode == P5_X_FW_GESTURE_MODE)
+		__pm_relax(idev->ws);
+
+	ipio_kfree((void **)&buf);
+}
+
+int ilitek_tddi_reset_ctrl(int mode)
+{
+	int ret = 0;
+
+	atomic_set(&idev->tp_reset, START);
+
+	if (mode != TP_IC_CODE_RST)
+		ilitek_tddi_ic_check_otp_prog_mode();
+
+	switch (mode) {
+	case TP_IC_CODE_RST:
+		ipio_info("TP IC Code RST 
");
+		ret = ilitek_tddi_ic_code_reset();
+		if (ret < 0)
+			ipio_err("IC Code reset failed
");
+		break;
+	case TP_IC_WHOLE_RST:
+		ipio_info("TP IC whole RST
");
+		ret = ilitek_tddi_ic_whole_reset();
+		if (ret < 0)
+			ipio_err("IC whole reset failed
");
+		break;
+	case TP_HW_RST_ONLY:
+		ipio_info("TP HW RST
");
+		ilitek_plat_tp_reset();
+		break;
+	default:
+		ipio_err("Unknown reset mode, %d
", mode);
+		ret = -EINVAL;
+		break;
+	}
+
+	/*
+	 * Since OTP must be folloing with reset, except for code rest,
+	 * the stat of ice mode should be set as 0.
+	 */
+	if (mode != TP_IC_CODE_RST)
+		atomic_set(&idev->ice_stat, DISABLE);
+	idev->fw_uart_en = DISABLE;
+	idev->actual_tp_data_format = DATA_FORMAT_DEMO;
+	idev->tp_data_len = P5_X_DEMO_MODE_PACKET_LEN;
+	atomic_set(&idev->tp_reset, END);
+	return ret;
+}
+
+int ilitek_tddi_init(void)
+{
+	struct task_struct *fw_boot_th;
+
+	ipio_info("ilitek tddi main init
");
+
+	mutex_init(&idev->touch_mutex);
+	mutex_init(&idev->debug_mutex);
+	mutex_init(&idev->debug_read_mutex);
+	init_waitqueue_head(&(idev->inq));
+	spin_lock_init(&idev->irq_spin);
+	init_completion(&idev->esd_done);
+
+	atomic_set(&idev->irq_stat, DISABLE);
+	atomic_set(&idev->ice_stat, DISABLE);
+	atomic_set(&idev->tp_reset, END);
+	atomic_set(&idev->fw_stat, END);
+	atomic_set(&idev->mp_stat, DISABLE);
+	atomic_set(&idev->tp_sleep, END);
+	atomic_set(&idev->mp_int_check, DISABLE);
+	atomic_set(&idev->esd_stat, END);
+
+	ilitek_tddi_ic_init();
+	ilitek_tddi_wq_init();
+	ilitek_tddi_node_init();
+
+	/* Must do hw reset once in first time for work normally if tp reset is avaliable */
+	if (!TDDI_RST_BIND)
+		if (ilitek_tddi_reset_ctrl(idev->reset) < 0)
+			ipio_err("TP Reset failed during init
");
+
+	idev->do_otp_check = ENABLE;
+	idev->fw_uart_en = DISABLE;
+	idev->force_fw_update = DISABLE;
+	idev->demo_debug_info[0] = demo_debug_info_id0;
+
+	/*
+	 * This status of ice enable will be reset until process of fw upgrade runs.
+	 * it might cause unknown problems if we disable ice mode without any
+	 * codes inside touch ic.
+	 */
+	if (ilitek_ice_mode_ctrl(ENABLE, OFF) < 0)
+		ipio_err("Enable ice mode failed during init
");
+
+	if (ilitek_tddi_ic_get_info() < 0) {
+		ipio_err("Not found ilitek chips
");
+		return -ENODEV;
+	}
+
+	if (ilitek_ice_mode_ctrl(DISABLE, OFF) < 0)
+		ipio_err("Disable ice mode failed during init
");
+
+
+	ilitek_tddi_fw_read_flash_info(idev->fw_upgrade_mode);
+
+		ilitek_tddi_ic_get_protocl_ver();
+		ilitek_tddi_ic_get_fw_ver();
+		ilitek_tddi_ic_get_core_ver();
+		ilitek_tddi_ic_get_tp_info();
+		ilitek_tddi_ic_get_panel_info();
+
+	fw_boot_th = kthread_run(ilitek_tddi_fw_upgrade_handler, NULL, "ili_fw_boot");
+	if (fw_boot_th == (struct task_struct *)ERR_PTR) {
+		fw_boot_th = NULL;
+		WARN_ON(!fw_boot_th);
+		ipio_err("Failed to create fw upgrade thread
");
+	}
+
+	idev->ws = wakeup_source_register("ili_wakelock");
+	if (!idev->ws)
+		ipio_err("wakeup source request failed
");
+
+	return 0;
+}
+
+void ilitek_tddi_dev_remove(void)
+{
+	ipio_info("remove ilitek dev
");
+
+	if (!idev)
+		return;
+
+	gpio_free(idev->tp_int);
+	// CS mark it as tp_rst now is controlled by panel driver
+	//gpio_free(idev->tp_rst);
+
+	if (esd_wq != NULL) {
+		cancel_delayed_work_sync(&esd_work);
+		flush_workqueue(esd_wq);
+		destroy_workqueue(esd_wq);
+	}
+	if (bat_wq != NULL) {
+		cancel_delayed_work_sync(&bat_work);
+		flush_workqueue(bat_wq);
+		destroy_workqueue(bat_wq);
+	}
+
+	ilitek_tddi_interface_dev_exit(idev->hwif);
+}
+
+int ilitek_tddi_dev_init(struct ilitek_hwif_info *hwif)
+{
+	ipio_info("TP Interface: %s
", (hwif->bus_type == BUS_I2C) ? "I2C" : "SPI");
+	return ilitek_tddi_interface_dev_init(hwif);
+}
diff --git a/drivers/input/touchscreen/ili/ilitek_mp.c b/drivers/input/touchscreen/ili/ilitek_mp.c
new file mode 100644
index 000000000000..d8dc1ca50c4a
--- /dev/null
+++ b/drivers/input/touchscreen/ili/ilitek_mp.c
@@ -0,0 +1,3316 @@
+/*
+ * ILITEK Touch IC driver
+ *
+ * Copyright (C) 2011 ILI Technology Corporation.
+ *
+ * Author: Dicky Chiang <dicky_chiang@ilitek.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include "ilitek.h"
+
+#define MP_PASS			0
+#define MP_FAIL			-1
+#define VALUE			0
+
+#define RETRY_COUNT		3
+#define INT_CHECK		0
+#define POLL_CHECK		1
+
+#define BENCHMARK		1
+#define NODETYPE		1
+
+#define TYPE_BENCHMARK		0
+#define TYPE_NO_JUGE		1
+#define TYPE_JUGE		2
+
+#define NORMAL_CSV_PASS_NAME	"mp_pass"
+#define NORMAL_CSV_FAIL_NAME	"mp_fail"
+#define NORMAL_CSV_WARNING_NAME	"mp_warning"
+
+#define CSV_FILE_SIZE		(1 * M)
+
+#define PARSER_MAX_CFG_BUF		(512 * 3)
+#define PARSER_MAX_KEY_NUM		(600 * 3)
+#define PARSER_MAX_KEY_NAME_LEN		100
+#define PARSER_MAX_KEY_VALUE_LEN	2000
+#define BENCHMARK_KEY_NAME		"benchmark_data"
+#define NODE_TYPE_KEY_NAME		"node type"
+#define INI_ERR_OUT_OF_LINE		-1
+
+#define CMD_MUTUAL_DAC			0x1
+#define CMD_MUTUAL_BG			0x2
+#define CMD_MUTUAL_SIGNAL		0x3
+#define CMD_MUTUAL_NO_BK		0x5
+#define CMD_MUTUAL_HAVE_BK		0x8
+#define CMD_MUTUAL_BK_DAC		0x10
+#define CMD_SELF_DAC			0xC
+#define CMD_SELF_BG			0xF
+#define CMD_SELF_SIGNAL			0xD
+#define CMD_SELF_NO_BK			0xE
+#define CMD_SELF_HAVE_BK		0xB
+#define CMD_SELF_BK_DAC			0x11
+#define CMD_KEY_DAC			0x14
+#define CMD_KEY_BG			0x16
+#define CMD_KEY_NO_BK			0x7
+#define CMD_KEY_HAVE_BK			0x15
+#define CMD_KEY_OPEN			0x12
+#define CMD_KEY_SHORT			0x13
+#define CMD_ST_DAC			0x1A
+#define CMD_ST_BG			0x1C
+#define CMD_ST_NO_BK			0x17
+#define CMD_ST_HAVE_BK			0x1B
+#define CMD_ST_OPEN			0x18
+#define CMD_TX_SHORT			0x19
+#define CMD_RX_SHORT			0x4
+#define CMD_RX_OPEN			0x6
+#define CMD_TX_RX_DELTA			0x1E
+#define CMD_CM_DATA			0x9
+#define CMD_CS_DATA			0xA
+#define CMD_TRCRQ_PIN			0x20
+#define CMD_RESX2_PIN			0x21
+#define CMD_MUTUAL_INTEGRA_TIME		0x22
+#define CMD_SELF_INTEGRA_TIME		0x23
+#define CMD_KEY_INTERGRA_TIME		0x24
+#define CMD_ST_INTERGRA_TIME		0x25
+#define CMD_PEAK_TO_PEAK		0x1D
+#define CMD_GET_TIMING_INFO		0x30
+#define CMD_DOZE_P2P			0x32
+#define CMD_DOZE_RAW			0x33
+#define CMD_PIN_TEST			0x61
+
+#define Mathabs(x) ({					\
+		long ret;				\
+		if (sizeof(x) == sizeof(long)) {	\
+		long __x = (x);				\
+		ret = (__x < 0) ? -__x : __x;		\
+		} else {				\
+		int __x = (x);				\
+		ret = (__x < 0) ? -__x : __x;		\
+		}					\
+		ret;					\
+	})
+
+#define DUMP(fmt, arg...)		\
+	do {				\
+		if (ipio_debug_level)	\
+		pr_cont(fmt, ##arg);	\
+	} while (0)
+
+struct ini_file_data {
+	char pSectionName[PARSER_MAX_KEY_NAME_LEN];
+	char pKeyName[PARSER_MAX_KEY_NAME_LEN];
+	char pKeyValue[PARSER_MAX_KEY_VALUE_LEN];
+	int iSectionNameLen;
+	int iKeyNameLen;
+	int iKeyValueLen;
+} *ilitek_ini_file_data;
+
+enum open_test_node_type {
+	NO_COMPARE = 0x00,	/* Not A Area, No Compare */
+	AA_Area = 0x01,		/* AA Area, Compare using Charge_AA */
+	Border_Area = 0x02, 	/* Border Area, Compare using Charge_Border */
+	Notch = 0x04,		/* Notch Area, Compare using Charge_Notch */
+	Round_Corner = 0x08,	/* Round Corner, No Compare */
+	Skip_Micro = 0x10	/* Skip_Micro, No Compare */
+};
+
+enum mp_test_catalog {
+	MUTUAL_TEST = 0,
+	SELF_TEST = 1,
+	KEY_TEST = 2,
+	ST_TEST = 3,
+	TX_RX_DELTA = 4,
+	UNTOUCH_P2P = 5,
+	PIXEL = 6,
+	OPEN_TEST = 7,
+	PEAK_TO_PEAK_TEST = 8,
+	SHORT_TEST = 9,
+	PIN_TEST = 10,
+};
+
+struct mp_test_P540_open {
+	s32 *tdf_700;
+	s32 *tdf_250;
+	s32 *tdf_200;
+	s32 *cbk_700;
+	s32 *cbk_250;
+	s32 *cbk_200;
+	s32 *charg_rate;
+	s32 *full_Open;
+	s32 *dac;
+};
+
+struct mp_test_open_c {
+	s32 *cap_dac;
+	s32 *cap_raw;
+	s32 *dcl_cap;
+};
+
+struct open_test_c_spec {
+	int tvch;
+	int tvcl;
+	int gain;
+} open_c_spec;
+
+struct core_mp_test_data {
+	u32 chip_pid;
+	u32 fw_ver;
+	u32 protocol_ver;
+	int no_bk_shift;
+	bool retry;
+	bool m_signal;
+	bool m_dac;
+	bool s_signal;
+	bool s_dac;
+	bool key_dac;
+	bool st_dac;
+	bool p_no_bk;
+	bool p_has_bk;
+	bool open_integ;
+	bool open_cap;
+	bool isLongV;
+
+	int cdc_len;
+	int xch_len;
+	int ych_len;
+	int stx_len;
+	int srx_len;
+	int key_len;
+	int st_len;
+	int frame_len;
+	int mp_items;
+	int final_result;
+
+	u32 overlay_start_addr;
+	u32 overlay_end_addr;
+	u32 mp_flash_addr;
+	u32 mp_size;
+	u8 dma_trigger_enable;
+
+	/* Tx/Rx threshold & buffer */
+	int TxDeltaMax;
+	int TxDeltaMin;
+	int RxDeltaMax;
+	int RxDeltaMin;
+	s32 *tx_delta_buf;
+	s32 *rx_delta_buf;
+	s32 *tx_max_buf;
+	s32 *tx_min_buf;
+	s32 *rx_max_buf;
+	s32 *rx_min_buf;
+
+	int tdf;
+	int busy_cdc;
+	bool ctrl_lcm;
+	bool lost_benchmark;
+} core_mp = {0};
+
+struct mp_test_items {
+	char *name;
+	/* The description must be the same as ini's section name */
+	char *desp;
+	char *result;
+	int catalog;
+	u8 cmd;
+	u8 spec_option;
+	u8 type_option;
+	bool run;
+	int max;
+	int max_res;
+	int item_result;
+	int min;
+	int min_res;
+	int frame_count;
+	int trimmed_mean;
+	int lowest_percentage;
+	int highest_percentage;
+	int v_tdf_1;
+	int v_tdf_2;
+	int h_tdf_1;
+	int h_tdf_2;
+	u8  delay_time;
+	u8  test_int_pin;
+	u8  int_pulse_test;
+	s32 *result_buf;
+	s32 *buf;
+	s32 *max_buf;
+	s32 *min_buf;
+	s32 *bench_mark_max;
+	s32 *bench_mark_min;
+	s32 *node_type;
+	int (*do_test)(int index);
+};
+
+#define MP_TEST_ITEM	49
+static struct mp_test_items tItems[MP_TEST_ITEM] = {
+	{.name = "mutual_dac", .desp = "calibration data(dac)", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "mutual_bg", .desp = "baseline data(bg)", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "mutual_signal", .desp = "untouch signal data(bg-raw-4096) - mutual", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "mutual_no_bk", .desp = "raw data(no bk)", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "mutual_has_bk", .desp = "raw data(have bk)", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "mutual_bk_dac", .desp = "manual bk data(mutual)", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "self_dac", .desp = "calibration data(dac) - self", .result = "FAIL", .catalog = SELF_TEST},
+	{.name = "self_bg", .desp = "baselin data(bg,self_tx,self_r)", .result = "FAIL", .catalog = SELF_TEST},
+	{.name = "self_signal", .desp = "untouch signal data(bg-raw-4096) - self", .result = "FAIL", .catalog = SELF_TEST},
+	{.name = "self_no_bk", .desp = "raw data(no bk) - self", .result = "FAIL", .catalog = SELF_TEST},
+	{.name = "self_has_bk", .desp = "raw data(have bk) - self", .result = "FAIL", .catalog = SELF_TEST},
+	{.name = "self_bk_dac", .desp = "manual bk dac data(self_tx,self_rx)", .result = "FAIL", .catalog = SELF_TEST},
+	{.name = "key_dac", .desp = "calibration data(dac/icon)", .result = "FAIL", .catalog = KEY_TEST},
+	{.name = "key_bg", .desp = "key baseline data", .result = "FAIL", .catalog = KEY_TEST},
+	{.name = "key_no_bk", .desp = "key raw data", .result = "FAIL", .catalog = KEY_TEST},
+	{.name = "key_has_bk", .desp = "key raw bk dac", .result = "FAIL", .catalog = KEY_TEST},
+	{.name = "key_open", .desp = "key raw open test", .result = "FAIL", .catalog = KEY_TEST},
+	{.name = "key_short", .desp = "key raw short test", .result = "FAIL", .catalog = KEY_TEST},
+	{.name = "st_dac", .desp = "st calibration data(dac)", .result = "FAIL", .catalog = ST_TEST},
+	{.name = "st_bg", .desp = "st baseline data(bg)", .result = "FAIL", .catalog = ST_TEST},
+	{.name = "st_no_bk", .desp = "st raw data(no bk)", .result = "FAIL", .catalog = ST_TEST},
+	{.name = "st_has_bk", .desp = "st raw(have bk)", .result = "FAIL", .catalog = ST_TEST},
+	{.name = "st_open", .desp = "st open data", .result = "FAIL", .catalog = ST_TEST},
+	{.name = "tx_short", .desp = "tx short test", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "rx_short", .desp = "short test -ili9881", .result = "FAIL", .catalog = SHORT_TEST},
+	{.name = "rx_open", .desp = "rx open", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "cm_data", .desp = "untouch cm data", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "cs_data", .desp = "untouch cs data", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "tx_rx_delta", .desp = "tx/rx delta", .result = "FAIL", .catalog = TX_RX_DELTA},
+	{.name = "p2p", .desp = "untouch peak to peak", .result = "FAIL", .catalog = UNTOUCH_P2P},
+	{.name = "pixel_no_bk", .desp = "pixel raw (no bk)", .result = "FAIL", .catalog = PIXEL},
+	{.name = "pixel_has_bk", .desp = "pixel raw (have bk)", .result = "FAIL", .catalog = PIXEL},
+	{.name = "open_integration", .desp = "open test(integration)", .result = "FAIL", .catalog = OPEN_TEST},
+	{.name = "open_cap", .desp = "open test(cap)", .result = "FAIL", .catalog = OPEN_TEST},
+	/* New test items for protocol 5.4.0 as below */
+	{.name = "noise_peak_to_peak_ic", .desp = "noise peak to peak(ic only)", .result = "FAIL", .catalog = PEAK_TO_PEAK_TEST},
+	{.name = "noise_peak_to_peak_panel", .desp = "noise peak to peak(with panel)", .result = "FAIL", .catalog = PEAK_TO_PEAK_TEST},
+	{.name = "noise_peak_to_peak_ic_lcm_off", .desp = "noise peak to peak(ic only) (lcm off)", .result = "FAIL", .catalog = PEAK_TO_PEAK_TEST},
+	{.name = "noise_peak_to_peak_panel_lcm_off", .desp = "noise peak to peak(with panel) (lcm off)", .result = "FAIL", .catalog = PEAK_TO_PEAK_TEST},
+	{.name = "mutual_no_bk_lcm_off", .desp = "raw data(no bk) (lcm off)", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "mutual_has_bk_lcm_off", .desp = "raw data(have bk) (lcm off)", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "open_integration_sp", .desp = "open test(integration)_sp", .result = "FAIL", .catalog = OPEN_TEST},
+	{.name = "doze_raw", .desp = "doze raw data", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "doze_p2p", .desp = "doze peak to peak", .result = "FAIL", .catalog = PEAK_TO_PEAK_TEST},
+	{.name = "doze_raw_td_lcm_off", .desp = "raw data_td (lcm off)", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "doze_p2p_td_lcm_off", .desp = "peak to peak_td (lcm off)", .result = "FAIL", .catalog = PEAK_TO_PEAK_TEST},
+	{.name = "rx_short", .desp = "short test", .result = "FAIL", .catalog = SHORT_TEST},
+	{.name = "open test_c", .desp = "open test_c", .result = "FAIL", .catalog = OPEN_TEST},
+	{.name = "touch deltac", .desp = "touch deltac", .result = "FAIL", .catalog = MUTUAL_TEST},
+	{.name = "pin test", .desp = "pin test ( int and rst )", .result = "FAIL", .catalog = PIN_TEST},
+};
+
+s32 *frame_buf;
+s32 *key_buf;
+s32 *frame1_cbk700, *frame1_cbk250, *frame1_cbk200;
+s32 *cap_dac, *cap_raw;
+int g_ini_items;
+
+static int isspace_t(int x)
+{
+	if (x == ' ' || x == '	' || x == '
' ||
+			x == '' || x == '' || x == '')
+		return 1;
+	else
+		return 0;
+}
+
+static void dump_benchmark_data(s32 *max_ptr, s32 *min_ptr)
+{
+	int i;
+
+	if (ipio_debug_level) {
+		ipio_info("Dump Benchmark Max
");
+
+		for (i = 0; i < core_mp.frame_len; i++) {
+			pr_cont("%d, ", max_ptr[i]);
+			if (i % core_mp.xch_len == core_mp.xch_len - 1)
+				pr_cont("
");
+		}
+
+		pr_cont("Dump Denchmark Min
");
+
+		for (i = 0; i < core_mp.frame_len; i++) {
+			pr_cont("%d, ", min_ptr[i]);
+			if (i % core_mp.xch_len == core_mp.xch_len - 1)
+				pr_cont("
");
+		}
+	}
+}
+
+void dump_node_type_buffer(s32 *node_ptr, u8 *name)
+{
+	int i;
+
+	if (ipio_debug_level) {
+		ipio_info("Dump NodeType
");
+		for (i = 0; i < core_mp.frame_len; i++) {
+			pr_cont("%d, ", node_ptr[i]);
+			if (i % core_mp.xch_len == core_mp.xch_len-1)
+				pr_cont("
");
+		}
+	}
+}
+
+static int parser_get_ini_key_value(char *section, char *key, char *value)
+{
+	int i = 0;
+	int ret = -2;
+	int len = 0;
+
+	len = strlen(key);
+
+	for (i = 0; i < g_ini_items; i++) {
+		if (strncmp(section, ilitek_ini_file_data[i].pSectionName, strlen(section)) != 0)
+			continue;
+
+		if (strncmp(key, ilitek_ini_file_data[i].pKeyName, strlen(key)) == 0) {
+			ipio_memcpy(value, ilitek_ini_file_data[i].pKeyValue, ilitek_ini_file_data[i].iKeyValueLen, PARSER_MAX_KEY_VALUE_LEN);
+			ipio_debug(" value:%s , pKeyValue: %s
", value, ilitek_ini_file_data[i].pKeyValue);
+			ret = 0;
+			break;
+		}
+	}
+	return ret;
+}
+
+void parser_ini_nodetype(s32 *type_ptr, char *desp, int frame_len)
+{
+	int i = 0, j = 0, index1 = 0, temp, count = 0;
+	char str[512] = {0}, record = ',';
+
+	for (i = 0; i < g_ini_items; i++) {
+		if ((strstr(ilitek_ini_file_data[i].pSectionName, desp) <= 0) ||
+			strncmp(ilitek_ini_file_data[i].pKeyName, NODE_TYPE_KEY_NAME, strlen(ilitek_ini_file_data[i].pKeyName)) != 0) {
+			continue;
+		}
+
+		record = ',';
+		for (j = 0, index1 = 0; j <= ilitek_ini_file_data[i].iKeyValueLen; j++) {
+			if (ilitek_ini_file_data[i].pKeyValue[j] == ';' || j == ilitek_ini_file_data[i].iKeyValueLen) {
+				if (record != '.') {
+					memset(str, 0, sizeof(str));
+					ipio_memcpy(str, &ilitek_ini_file_data[i].pKeyValue[index1], (j - index1), sizeof(str));
+					temp = katoi(str);
+
+					/* Over boundary, end to calculate. */
+					if (count >= frame_len) {
+						ipio_err("count(%d) is larger than frame length, break
", count);
+						break;
+					}
+					type_ptr[count] = temp;
+					count++;
+				}
+				record = ilitek_ini_file_data[i].pKeyValue[j];
+				index1 = j + 1;
+			}
+		}
+	}
+}
+
+void parser_ini_benchmark(s32 *max_ptr, s32 *min_ptr, int8_t type, char *desp, int frame_len)
+{
+	int i = 0, j = 0, index1 = 0, temp, count = 0;
+	char str[512] = {0}, record = ',';
+	s32 data[4];
+	char benchmark_str[256] = {0};
+	bool flag = false;
+
+	/* format complete string from the name of section "_Benchmark_Data". */
+	snprintf(benchmark_str,sizeof(benchmark_str), "%s%s%s", desp, "_", BENCHMARK_KEY_NAME);
+
+	for (i = 0; i < g_ini_items; i++) {
+		if ((strncmp(ilitek_ini_file_data[i].pSectionName, benchmark_str, strlen(ilitek_ini_file_data[i].pSectionName)) != 0) ||
+			strncmp(ilitek_ini_file_data[i].pKeyName, BENCHMARK_KEY_NAME , strlen(ilitek_ini_file_data[i].pSectionName)) != 0)
+			continue;
+		flag =  true;
+		record = ',';
+		for (j = 0, index1 = 0; j <= ilitek_ini_file_data[i].iKeyValueLen; j++) {
+			if (ilitek_ini_file_data[i].pKeyValue[j] == ',' || ilitek_ini_file_data[i].pKeyValue[j] == ';' ||
+				ilitek_ini_file_data[i].pKeyValue[j] == '.' || j == ilitek_ini_file_data[i].iKeyValueLen) {
+
+				if (record != '.') {
+					memset(str, 0, sizeof(str));
+					ipio_memcpy(str, &ilitek_ini_file_data[i].pKeyValue[index1], (j - index1), sizeof(str));
+					temp = katoi(str);
+					data[(count % 4)] = temp;
+
+					/* Over boundary, end to calculate. */
+					if ((count / 4) >= frame_len) {
+						ipio_err("count (%d) is larger than frame length, break
", (count / 4));
+						break;
+					}
+
+					if ((count % 4) == 3) {
+						if (data[0] == 1) {
+							if (type == VALUE) {
+								max_ptr[count/4] = data[1] + data[2];
+								min_ptr[count/4] = data[1] - data[3];
+							} else {
+								max_ptr[count/4] = data[1] + (data[1] * data[2]) / 100;
+								min_ptr[count/4] = data[1] - (data[1] * data[3]) / 100;
+							}
+						} else {
+							max_ptr[count/4] = INT_MAX;
+							min_ptr[count/4] = INT_MIN;
+						}
+					}
+					count++;
+				}
+				record = ilitek_ini_file_data[i].pKeyValue[j];
+				index1 = j + 1;
+			}
+		}
+	}
+	if (!flag)
+		core_mp.lost_benchmark = true;
+}
+
+static int parser_get_tdf_value(char *str, int catalog)
+{
+	u32	 i, ans, index = 0, flag = 0, count = 0;
+	char s[10] = {0};
+
+	if (!str) {
+		ipio_err("String is null
");
+		return -1;
+	}
+
+	for (i = 0, count = 0; i < strlen(str); i++) {
+		if (str[i] == '.') {
+			flag = 1;
+			continue;
+		}
+		s[index++] = str[i];
+		if (flag)
+			count++;
+	}
+	ans = katoi(s);
+
+	/* Multiply by 100 to shift out of decimal point */
+	if (catalog == SHORT_TEST) {
+		if (count == 0)
+			ans = ans * 100;
+		else if (count == 1)
+			ans = ans * 10;
+	}
+
+	return ans;
+}
+
+static int parser_get_u8_array(char *key, u8 *buf, u16 base, int len)
+{
+	char *s = key;
+	char *pToken;
+	int ret, conut = 0;
+	long s_to_long = 0;
+
+	if (strlen(s) == 0 || len <= 0) {
+		ipio_err("Can't find any characters inside buffer
");
+		return -1;
+	}
+
+	/*
+	 *	@base: The number base to use. The maximum supported base is 16. If base is
+	 *	given as 0, then the base of the string is automatically detected with the
+	 *	conventional semantics - If it begins with 0x the number will be parsed as a
+	 *	hexadecimal (case insensitive), if it otherwise begins with 0, it will be
+	 *	parsed as an octal number. Otherwise it will be parsed as a decimal.
+	 */
+	if (isspace_t((int)(unsigned char)*s) == 0) {
+		while ((pToken = strsep(&s, ",")) != NULL) {
+			ret = kstrtol(pToken, base, &s_to_long);
+			if (ret == 0)
+				buf[conut] = s_to_long;
+			else
+				ipio_info("convert string too long, ret = %d
", ret);
+			conut++;
+
+			if (conut >= len)
+				break;
+		}
+	}
+
+	return conut;
+}
+
+static int parser_get_int_data(char *section, char *keyname, char *rv, int rv_len)
+{
+	int len = 0;
+	char value[512] = { 0 };
+
+	if (rv == NULL || section == NULL || keyname == NULL) {
+		ipio_err("Parameters are invalid
");
+		return -EINVAL;
+	}
+
+	/* return a white-space string if get nothing */
+	if (parser_get_ini_key_value(section, keyname, value) < 0) {
+		snprintf(rv, rv_len, "%s", value);
+		return 0;
+	}
+
+	len = snprintf(rv, rv_len, "%s", value);
+	return len;
+}
+
+/* Count the number of each line and assign the content to tmp buffer */
+static int parser_get_ini_phy_line(char *data, char *buffer, int maxlen)
+{
+	int i = 0;
+	int j = 0;
+	int iRetNum = -1;
+	char ch1 = ' ';
+
+	for (i = 0, j = 0; i < maxlen; j++) {
+		ch1 = data[j];
+		iRetNum = j + 1;
+		if (ch1 == '
' || ch1 == '') {	/* line end */
+			ch1 = data[j + 1];
+			if (ch1 == '
' || ch1 == '')
+				iRetNum++;
+			break;
+		} else if (ch1 == 0x00) {
+			//iRetNum = -1;
+			break;	/* file end */
+		}
+
+		buffer[i++] = ch1;
+	}
+
+	buffer[i] = ' ';
+	return iRetNum;
+}
+
+static char *parser_ini_str_trim_r(char *buf)
+{
+	int len, i;
+	char tmp[512] = { 0 };
+
+	len = strlen(buf);
+
+	for (i = 0; i < len; i++) {
+		if (buf[i] != ' ')
+			break;
+	}
+
+	if (i < len)
+		strncpy(tmp, (buf + i), (len - i));
+
+	strncpy(buf, tmp, len);
+	return buf;
+}
+
+static int parser_get_ini_phy_data(char *data, int fsize)
+{
+	int i, n = 0, ret = 0, banchmark_flag = 0, empty_section, nodetype_flag = 0;
+	int offset = 0, isEqualSign = 0;
+	char *ini_buf = NULL, *tmpSectionName = NULL;
+	char M_CFG_SSL = '[';
+	char M_CFG_SSR = ']';
+/* char M_CFG_NIS = ':'; */
+	char M_CFG_NTS = '#';
+	char M_CFG_EQS = '=';
+
+	if (data == NULL) {
+		ipio_err("INI data is NULL
");
+		ret = -EINVAL;
+		goto out;
+	}
+
+	ini_buf = kzalloc((PARSER_MAX_CFG_BUF + 1) * sizeof(char), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(ini_buf)) {
+		ipio_err("Failed to allocate ini_buf memory, %ld
", PTR_ERR(ini_buf));
+		ret = -ENOMEM;
+		goto out;
+	}
+
+	tmpSectionName = kzalloc((PARSER_MAX_CFG_BUF + 1) * sizeof(char), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(tmpSectionName)) {
+		ipio_err("Failed to allocate tmpSectionName memory, %ld
", PTR_ERR(tmpSectionName));
+		ret = -ENOMEM;
+		goto out;
+	}
+
+	while (true) {
+		banchmark_flag = 0;
+		empty_section = 0;
+		nodetype_flag = 0;
+		if (g_ini_items > PARSER_MAX_KEY_NUM) {
+			ipio_err("MAX_KEY_NUM: Out of length
");
+			goto out;
+		}
+
+		if (offset >= fsize)
+			goto out;/*over size*/
+
+		n = parser_get_ini_phy_line(data + offset, ini_buf, PARSER_MAX_CFG_BUF);
+		if (n < 0) {
+			ipio_err("End of Line
");
+			goto out;
+		}
+
+		offset += n;
+
+		n = strlen(parser_ini_str_trim_r(ini_buf));
+
+		if (n == 0 || ini_buf[0] == M_CFG_NTS)
+			continue;
+
+		/* Get section names */
+		if (n > 2 && ((ini_buf[0] == M_CFG_SSL && ini_buf[n - 1] != M_CFG_SSR))) {
+			ipio_err("Bad Section: %s
", ini_buf);
+			ret = -EINVAL;
+			goto out;
+		} else {
+			if (ini_buf[0] == M_CFG_SSL) {
+				ilitek_ini_file_data[g_ini_items].iSectionNameLen = n - 2;
+				if (ilitek_ini_file_data[g_ini_items].iSectionNameLen > PARSER_MAX_KEY_NAME_LEN) {
+					ipio_err("MAX_KEY_NAME_LEN: Out Of Length
");
+					ret = INI_ERR_OUT_OF_LINE;
+					goto out;
+				}
+
+				ini_buf[n - 1] = 0x00;
+				strncpy((char *)tmpSectionName, ini_buf + 1, (PARSER_MAX_CFG_BUF + 1) * sizeof(char));
+				banchmark_flag = 0;
+				nodetype_flag = 0;
+				ipio_debug("Section Name: %s, Len: %d, offset = %d
", tmpSectionName, n - 2, offset);
+				continue;
+			}
+		}
+
+		/* copy section's name without square brackets to its real buffer */
+		strncpy(ilitek_ini_file_data[g_ini_items].pSectionName, tmpSectionName, (PARSER_MAX_KEY_NAME_LEN * sizeof(char)));
+		ilitek_ini_file_data[g_ini_items].iSectionNameLen = strlen(tmpSectionName);
+
+		isEqualSign = 0;
+		for (i = 0; i < n; i++) {
+			if (ini_buf[i] == M_CFG_EQS) {
+				isEqualSign = i;
+				break;
+			}
+			if (ini_buf[i] == M_CFG_SSL || ini_buf[i] == M_CFG_SSR) {
+				empty_section = 1;
+				break;
+			}
+		}
+
+		if (isEqualSign == 0) {
+			if (empty_section)
+				continue;
+
+			if (strstr(ilitek_ini_file_data[g_ini_items].pSectionName, BENCHMARK_KEY_NAME) > 0) {
+				banchmark_flag = 1;
+				isEqualSign = -1;
+			} else if (strstr(ilitek_ini_file_data[g_ini_items].pSectionName, NODE_TYPE_KEY_NAME) > 0) {
+				nodetype_flag = 1;
+				isEqualSign = -1;
+			} else {
+				continue;
+			}
+		}
+
+		if (banchmark_flag) {
+			ilitek_ini_file_data[g_ini_items].iKeyNameLen = strlen(BENCHMARK_KEY_NAME);
+			strncpy(ilitek_ini_file_data[g_ini_items].pKeyName, BENCHMARK_KEY_NAME, (PARSER_MAX_KEY_NAME_LEN * sizeof(char)));
+			ilitek_ini_file_data[g_ini_items].iKeyValueLen = n;
+		} else if (nodetype_flag) {
+			ilitek_ini_file_data[g_ini_items].iKeyNameLen = strlen(NODE_TYPE_KEY_NAME);
+			strncpy(ilitek_ini_file_data[g_ini_items].pKeyName, NODE_TYPE_KEY_NAME, (PARSER_MAX_KEY_NAME_LEN * sizeof(char)));
+			ilitek_ini_file_data[g_ini_items].iKeyValueLen = n;
+		} else{
+			ilitek_ini_file_data[g_ini_items].iKeyNameLen = isEqualSign;
+			if (ilitek_ini_file_data[g_ini_items].iKeyNameLen > PARSER_MAX_KEY_NAME_LEN) {
+				/* ret = CFG_ERR_OUT_OF_LEN; */
+				ipio_err("MAX_KEY_NAME_LEN: Out Of Length
");
+				ret = INI_ERR_OUT_OF_LINE;
+				goto out;
+			}
+
+			ipio_memcpy(ilitek_ini_file_data[g_ini_items].pKeyName, ini_buf,
+						ilitek_ini_file_data[g_ini_items].iKeyNameLen, PARSER_MAX_KEY_NAME_LEN);
+			ilitek_ini_file_data[g_ini_items].iKeyValueLen = n - isEqualSign - 1;
+		}
+
+		if (ilitek_ini_file_data[g_ini_items].iKeyValueLen > PARSER_MAX_KEY_VALUE_LEN) {
+			ipio_err("MAX_KEY_VALUE_LEN: Out Of Length
");
+			ret = INI_ERR_OUT_OF_LINE;
+			goto out;
+		}
+
+		ipio_memcpy(ilitek_ini_file_data[g_ini_items].pKeyValue,
+			   ini_buf + isEqualSign + 1, ilitek_ini_file_data[g_ini_items].iKeyValueLen, PARSER_MAX_KEY_VALUE_LEN);
+
+		ipio_debug("%s = %s
", ilitek_ini_file_data[g_ini_items].pKeyName,
+			ilitek_ini_file_data[g_ini_items].pKeyValue);
+
+		g_ini_items++;
+	}
+out:
+	ipio_kfree((void **)&ini_buf);
+	ipio_kfree((void **)&tmpSectionName);
+	return ret;
+}
+
+static int ilitek_tddi_mp_ini_parser(const char *path)
+{
+	int i, ret = 0, fsize = 0;
+	char *tmp = NULL;
+	struct file *f = NULL;
+	struct inode *inode;
+	mm_segment_t old_fs;
+	loff_t pos = 0;
+
+	ipio_info("ini file path = %s
", path);
+
+	f = filp_open(path, O_RDONLY, 644);
+	if (ERR_ALLOC_MEM(f)) {
+		ipio_err("Failed to open ini file at %ld.
", PTR_ERR(f));
+		return -ENOENT;
+	}
+
+#if KERNEL_VERSION(3, 18, 0) >= LINUX_VERSION_CODE
+	inode = f->f_dentry->d_inode;
+#else
+	inode = f->f_path.dentry->d_inode;
+#endif
+
+	fsize = inode->i_size;
+	ipio_info("ini file size = %d
", fsize);
+	if (fsize <= 0) {
+		ipio_err("The size of file is invaild
");
+		ret = -EINVAL;
+		goto out;
+	}
+
+	tmp = vmalloc(fsize+1);
+	if (ERR_ALLOC_MEM(tmp)) {
+		ipio_err("Failed to allocate tmp memory, %ld
", PTR_ERR(tmp));
+		ret = -ENOMEM;
+		goto out;
+	}
+
+	old_fs = get_fs();
+	set_fs(get_ds());
+	vfs_read(f, tmp, fsize, &pos);
+	set_fs(old_fs);
+	tmp[fsize] = 0x00;
+
+	g_ini_items = 0;
+
+	/* Initialise ini strcture */
+	for (i = 0; i < PARSER_MAX_KEY_NUM; i++) {
+		memset(ilitek_ini_file_data[i].pSectionName, 0, PARSER_MAX_KEY_NAME_LEN);
+		memset(ilitek_ini_file_data[i].pKeyName, 0, PARSER_MAX_KEY_NAME_LEN);
+		memset(ilitek_ini_file_data[i].pKeyValue, 0, PARSER_MAX_KEY_VALUE_LEN);
+		ilitek_ini_file_data[i].iSectionNameLen = 0;
+		ilitek_ini_file_data[i].iKeyNameLen = 0;
+		ilitek_ini_file_data[i].iKeyValueLen = 0;
+	}
+
+	/* change all characters to lower case */
+	for (i = 0; i < strlen(tmp); i++)
+		tmp[i] = tolower(tmp[i]);
+
+	ret = parser_get_ini_phy_data(tmp, fsize);
+	if (ret < 0) {
+		ipio_err("Failed to get physical ini data, ret = %d
", ret);
+		goto out;
+	}
+
+	ipio_info("Parsed ini file done
");
+out:
+	ipio_vfree((void **)&tmp);
+	filp_close(f, NULL);
+	return ret;
+}
+
+static void run_pixel_test(int index)
+{
+	int i, x, y;
+	s32 *p_comb = frame_buf;
+
+	for (y = 0; y < core_mp.ych_len; y++) {
+		for (x = 0; x < core_mp.xch_len; x++) {
+			int tmp[4] = { 0 }, max = 0;
+			int shift = y * core_mp.xch_len;
+			int centre = p_comb[shift + x];
+
+			/*
+			 * if its position is in corner, the number of point
+			 * we have to minus is around 2 to 3.
+			 */
+			if (y == 0 && x == 0) {
+				tmp[0] = Mathabs(centre - p_comb[(shift + 1) + x]);	/* down */
+				tmp[1] = Mathabs(centre - p_comb[shift + (x + 1)]);	/* right */
+			} else if (y == (core_mp.ych_len - 1) && x == 0) {
+				tmp[0] = Mathabs(centre - p_comb[(shift - 1) + x]);	/* up */
+				tmp[1] = Mathabs(centre - p_comb[shift + (x + 1)]);	/* right */
+			} else if (y == 0 && x == (core_mp.xch_len - 1)) {
+				tmp[0] = Mathabs(centre - p_comb[(shift + 1) + x]);	/* down */
+				tmp[1] = Mathabs(centre - p_comb[shift + (x - 1)]);	/* left */
+			} else if (y == (core_mp.ych_len - 1) && x == (core_mp.xch_len - 1)) {
+				tmp[0] = Mathabs(centre - p_comb[(shift - 1) + x]);	/* up */
+				tmp[1] = Mathabs(centre - p_comb[shift + (x - 1)]);	/* left */
+			} else if (y == 0 && x != 0) {
+				tmp[0] = Mathabs(centre - p_comb[(shift + 1) + x]);	/* down */
+				tmp[1] = Mathabs(centre - p_comb[shift + (x - 1)]);	/* left */
+				tmp[2] = Mathabs(centre - p_comb[shift + (x + 1)]);	/* right */
+			} else if (y != 0 && x == 0) {
+				tmp[0] = Mathabs(centre - p_comb[(shift - 1) + x]);	/* up */
+				tmp[1] = Mathabs(centre - p_comb[shift + (x + 1)]);	/* right */
+				tmp[2] = Mathabs(centre - p_comb[(shift + 1) + x]);	/* down */
+
+			} else if (y == (core_mp.ych_len - 1) && x != 0) {
+				tmp[0] = Mathabs(centre - p_comb[(shift - 1) + x]);	/* up */
+				tmp[1] = Mathabs(centre - p_comb[shift + (x - 1)]);	/* left */
+				tmp[2] = Mathabs(centre - p_comb[shift + (x + 1)]);	/* right */
+			} else if (y != 0 && x == (core_mp.xch_len - 1)) {
+				tmp[0] = Mathabs(centre - p_comb[(shift - 1) + x]);	/* up */
+				tmp[1] = Mathabs(centre - p_comb[shift + (x - 1)]);	/* left */
+				tmp[2] = Mathabs(centre - p_comb[(shift + 1) + x]);	/* down */
+			} else {
+				/* middle minus four directions */
+				tmp[0] = Mathabs(centre - p_comb[(shift - 1) + x]);	/* up */
+				tmp[1] = Mathabs(centre - p_comb[(shift + 1) + x]);	/* down */
+				tmp[2] = Mathabs(centre - p_comb[shift + (x - 1)]);	/* left */
+				tmp[3] = Mathabs(centre - p_comb[shift + (x + 1)]);	/* right */
+			}
+
+			max = tmp[0];
+
+			for (i = 0; i < 4; i++) {
+				if (tmp[i] > max)
+					max = tmp[i];
+			}
+
+			tItems[index].buf[shift + x] = max;
+		}
+	}
+}
+
+static void run_untouch_p2p_test(int index)
+{
+	int x, y;
+	s32 *p_comb = frame_buf;
+
+	for (y = 0; y < core_mp.ych_len; y++) {
+		for (x = 0; x < core_mp.xch_len; x++) {
+			int shift = y * core_mp.xch_len;
+
+			if (p_comb[shift + x] > tItems[index].max_buf[shift + x])
+				tItems[index].max_buf[shift + x] = p_comb[shift + x];
+
+			if (p_comb[shift + x] < tItems[index].min_buf[shift + x])
+				tItems[index].min_buf[shift + x] = p_comb[shift + x];
+
+			tItems[index].buf[shift + x] =
+				tItems[index].max_buf[shift + x] - tItems[index].min_buf[shift + x];
+		}
+	}
+}
+
+static int run_open_test(int index)
+{
+	int i, x, y, k, ret = 0;
+	int border_x[] = {-1, 0, 1, 1, 1, 0, -1, -1};
+	int border_y[] = {-1, -1, -1, 0, 1, 1, 1, 0};
+	s32 *p_comb = frame_buf;
+
+	if (strncmp(tItems[index].name, "open_integration", strlen(tItems[index].name)) == 0) {
+		for (i = 0; i < core_mp.frame_len; i++)
+			tItems[index].buf[i] = p_comb[i];
+	} else if (strncmp(tItems[index].name, "open_cap", strlen(tItems[index].name)) == 0) {
+		/*
+		 * Each result is getting from a 3 by 3 grid depending on where the centre location is.
+		 * So if the centre is at corner, the number of node grabbed from a grid will be different.
+		 */
+		for (y = 0; y < core_mp.ych_len; y++) {
+			for (x = 0; x < core_mp.xch_len; x++) {
+				int sum = 0, avg = 0, count = 0;
+				int shift = y * core_mp.xch_len;
+				int centre = p_comb[shift + x];
+
+				for (k = 0; k < 8; k++) {
+					if (((y + border_y[k] >= 0) && (y + border_y[k] < core_mp.ych_len)) &&
+								((x + border_x[k] >= 0) && (x + border_x[k] < core_mp.xch_len))) {
+						count++;
+						sum += p_comb[(y + border_y[k]) * core_mp.xch_len + (x + border_x[k])];
+					}
+				}
+
+				avg = (sum + centre) / (count + 1);	/* plus 1 because of centre */
+				tItems[index].buf[shift + x] = (centre * 100) / avg;
+			}
+		}
+	}
+	return ret;
+}
+
+static void run_tx_rx_delta_test(int index)
+{
+	int x, y;
+	s32 *p_comb = frame_buf;
+
+	for (y = 0; y < core_mp.ych_len; y++) {
+		for (x = 0; x < core_mp.xch_len; x++) {
+			int shift = y * core_mp.xch_len;
+
+			/* Tx Delta */
+			if (y != (core_mp.ych_len - 1))
+				core_mp.tx_delta_buf[shift + x] = Mathabs(p_comb[shift + x] - p_comb[(shift + 1) + x]);
+
+			/* Rx Delta */
+			if (x != (core_mp.xch_len - 1))
+				core_mp.rx_delta_buf[shift + x] = Mathabs(p_comb[shift + x] - p_comb[shift + (x + 1)]);
+		}
+	}
+}
+
+static char *get_date_time_str(void)
+{
+	struct timespec now_time;
+	struct rtc_time rtc_now_time;
+	static char time_data_buf[128] = { 0 };
+
+	getnstimeofday(&now_time);
+	rtc_time_to_tm(now_time.tv_sec, &rtc_now_time);
+	snprintf(time_data_buf, sizeof(time_data_buf), "%04d%02d%02d-%02d%02d%02d",
+		(rtc_now_time.tm_year + 1900), rtc_now_time.tm_mon + 1,
+		rtc_now_time.tm_mday, rtc_now_time.tm_hour, rtc_now_time.tm_min,
+		rtc_now_time.tm_sec);
+
+	return time_data_buf;
+}
+
+static void mp_print_csv_header(char *csv, int *csv_len, int *csv_line, int file_size)
+{
+	int i, tmp_len = *csv_len, tmp_line = *csv_line;
+
+	/* header must has 19 line*/
+	tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "==============================================================================
");
+	tmp_line++;
+	tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "ILITek C-TP Utility V%s	%x : Driver Sensor Test
", DRIVER_VERSION, core_mp.chip_pid);
+	tmp_line++;
+	tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "Confidentiality Notice:
");
+	tmp_line++;
+	tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "Any information of this tool is confidential and privileged.
");
+	tmp_line++;
+	tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "@ ILI TECHNOLOGY CORP. All Rights Reserved.
");
+	tmp_line++;
+	tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "==============================================================================
");
+	tmp_line++;
+	tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "Firmware Version ,0x%x
", core_mp.fw_ver);
+	tmp_line++;
+	tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "Panel information ,XCH=%d, YCH=%d
", core_mp.xch_len, core_mp.ych_len);
+	tmp_line++;
+	tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "Test Item:
");
+	tmp_line++;
+
+	for (i = 0; i < ARRAY_SIZE(tItems); i++) {
+		if (tItems[i].run == 1) {
+			tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "	  ---%s
", tItems[i].desp);
+			tmp_line++;
+		}
+	}
+
+	while (tmp_line < 19) {
+		tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "
");
+		tmp_line++;
+	}
+
+	tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "==============================================================================
");
+
+	*csv_len = tmp_len;
+	*csv_line = tmp_line;
+}
+
+static void mp_print_csv_tail(char *csv, int *csv_len, int file_size)
+{
+	int i, tmp_len = *csv_len;
+
+	tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "==============================================================================
");
+	tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "Result_Summary			
");
+
+	for (i = 0; i < ARRAY_SIZE(tItems); i++) {
+		if (tItems[i].run) {
+			if (tItems[i].item_result == MP_PASS)
+				tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "	  {%s}	   ,OK
", tItems[i].desp);
+			else
+				tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "	  {%s}	   ,NG
", tItems[i].desp);
+		}
+	}
+	*csv_len = tmp_len;
+}
+
+static void mp_print_csv_cdc_cmd(char *csv, int *csv_len, int index, int file_size)
+{
+	int i, slen = 0, tmp_len = *csv_len;
+	char str[128] = {0};
+	char *open_sp_cmd[] = {"open dac", "open raw1", "open raw2", "open raw3"};
+	char *open_c_cmd[] = {"open cap1 dac", "open cap1 raw"};
+	char *name = tItems[index].desp;
+
+	if (strncmp(name, "open test(integration)_sp", strlen(name)) == 0) {
+		for (i = 0; i < ARRAY_SIZE(open_sp_cmd); i++) {
+			slen = parser_get_int_data("pv5_4 command", open_sp_cmd[i], str, sizeof(str));
+			if (slen < 0)
+				ipio_err("Failed to get CDC command %s from ini
", open_sp_cmd[i]);
+			else
+				tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "%s = ,%s
", open_sp_cmd[i], str);
+		}
+	} else if (strncmp(name, "open test_c", strlen(name)) == 0) {
+		for (i = 0; i < ARRAY_SIZE(open_c_cmd); i++) {
+			slen = parser_get_int_data("pv5_4 command", open_c_cmd[i], str, sizeof(str));
+			if (slen < 0)
+				ipio_err("Failed to get CDC command %s from ini
", open_sp_cmd[i]);
+			else
+				tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "%s = ,%s
", open_c_cmd[i], str);
+		}
+	} else {
+		slen = parser_get_int_data("pv5_4 command", name, str, sizeof(str));
+		if (slen < 0)
+			ipio_err("Failed to get CDC command %s from ini
", name);
+		else
+			tmp_len += snprintf(csv + tmp_len, (file_size - tmp_len), "CDC command = ,%s
", str);
+	}
+	*csv_len = tmp_len;
+}
+
+static void mp_compare_cdc_show_result(int index, s32 *tmp, char *csv,
+				int *csv_len, int type, s32 *max_ts,
+				s32 *min_ts, const char *desp, int file_zise)
+{
+	int x, y, tmp_len = *csv_len;
+	int mp_result = MP_PASS;
+
+	if (ERR_ALLOC_MEM(tmp)) {
+		ipio_err("The data of test item is null (%p)
", tmp);
+		mp_result = MP_FAIL;
+		goto out;
+	}
+
+	/* print X raw only */
+	for (x = 0; x < core_mp.xch_len; x++) {
+		if (x == 0) {
+			DUMP("
 %s ", desp);
+			tmp_len += snprintf(csv + tmp_len, (file_zise - tmp_len), "
	   %s ,", desp);
+		}
+		DUMP("  X_%d	,", (x+1));
+		tmp_len += snprintf(csv + tmp_len, (file_zise - tmp_len), "	 X_%d  ,", (x+1));
+	}
+
+	DUMP("
");
+	tmp_len += snprintf(csv + tmp_len, (file_zise - tmp_len), "
");
+
+	for (y = 0; y < core_mp.ych_len; y++) {
+		DUMP("  Y_%d	,", (y+1));
+		tmp_len += snprintf(csv + tmp_len, (file_zise - tmp_len), "	 Y_%d  ,", (y+1));
+
+		for (x = 0; x < core_mp.xch_len; x++) {
+			int shift = y * core_mp.xch_len + x;
+
+			/* In Short teset, we only identify if its value is low than min threshold. */
+			if (tItems[index].catalog == SHORT_TEST) {
+				if (tmp[shift] < min_ts[shift]) {
+					DUMP(" #%7d ", tmp[shift]);
+					tmp_len += snprintf(csv + tmp_len, (file_zise - tmp_len), "#%7d,", tmp[shift]);
+					mp_result = MP_FAIL;
+				} else {
+					DUMP(" %7d ", tmp[shift]);
+					tmp_len += snprintf(csv + tmp_len, (file_zise - tmp_len), " %7d, ", tmp[shift]);
+				}
+				continue;
+			}
+
+			if ((tmp[shift] <= max_ts[shift] && tmp[shift] >= min_ts[shift]) || (type != TYPE_JUGE)) {
+				if ((tmp[shift] == INT_MAX || tmp[shift] == INT_MIN) && (type == TYPE_BENCHMARK)) {
+					DUMP("%s", "BYPASS,");
+					tmp_len += snprintf(csv + tmp_len, (file_zise - tmp_len), "BYPASS,");
+				} else {
+					DUMP(" %7d ", tmp[shift]);
+					tmp_len += snprintf(csv + tmp_len, (file_zise - tmp_len), " %7d, ", tmp[shift]);
+				}
+			} else {
+				if (tmp[shift] > max_ts[shift]) {
+					DUMP(" *%7d ", tmp[shift]);
+					tmp_len += snprintf(csv + tmp_len, (file_zise - tmp_len), "*%7d,", tmp[shift]);
+				} else {
+					DUMP(" #%7d ", tmp[shift]);
+					tmp_len += snprintf(csv + tmp_len, (file_zise - tmp_len), "#%7d,", tmp[shift]);
+				}
+				mp_result = MP_FAIL;
+			}
+		}
+		DUMP("
");
+		tmp_len += snprintf(csv + tmp_len, (file_zise - tmp_len), "
");
+	}
+
+out:
+	if (type == TYPE_JUGE) {
+		if (mp_result == MP_PASS) {
+			pr_info("
 Result : PASS
");
+			tmp_len += snprintf(csv + tmp_len, (file_zise - tmp_len), "Result : PASS
");
+		} else {
+			pr_info("
 Result : FAIL
");
+			tmp_len += snprintf(csv + tmp_len, (file_zise - tmp_len), "Result : FAIL
");
+		}
+	}
+	*csv_len = tmp_len;
+}
+
+#define ABS(a, b) ((a > b) ? (a - b) : (b - a))
+#define ADDR(x, y) ((y * core_mp.xch_len) + (x))
+
+int compare_charge(s32 *charge_rate, int x, int y, s32 *inNodeType,
+		int Charge_AA, int Charge_Border, int Charge_Notch)
+{
+	int OpenThreadhold, tempY, tempX, ret, k;
+	int sx[8] = {-1, 0, 1, -1, 1, -1, 0, 1};
+	int sy[8] = {-1, -1, -1, 0, 0, 1, 1, 1};
+
+	ret = charge_rate[ADDR(x, y)];
+
+	/*Setting Threadhold from node type	 */
+	if (charge_rate[ADDR(x, y)] == 0)
+		return ret;
+	else if ((inNodeType[ADDR(x, y)] & AA_Area) == AA_Area)
+		OpenThreadhold = Charge_AA;
+	else if ((inNodeType[ADDR(x, y)] & Border_Area) == Border_Area)
+		OpenThreadhold = Charge_Border;
+	else if ((inNodeType[ADDR(x, y)] & Notch) == Notch)
+		OpenThreadhold = Charge_Notch;
+	else
+		return ret;
+
+	/* compare carge rate with 3*3 node */
+	/* by pass => 1.no compare 2.corner 3.Skip_Micro 4.full open fail node */
+	for (k = 0; k < 8; k++) {
+		tempX = x + sx[k];
+		tempY = y + sy[k];
+
+		/*out of range */
+		if ((tempX < 0) || (tempX >= core_mp.xch_len) || (tempY < 0) || (tempY >= core_mp.ych_len))
+			continue;
+
+		if ((inNodeType[ADDR(tempX, tempY)] == NO_COMPARE) || ((inNodeType[ADDR(tempX, tempY)] & Round_Corner) == Round_Corner) ||
+		((inNodeType[ADDR(tempX, tempY)] & Skip_Micro) == Skip_Micro) || charge_rate[ADDR(tempX, tempY)] == 0)
+			continue;
+
+		if ((charge_rate[ADDR(tempX, tempY)] - charge_rate[ADDR(x, y)]) > OpenThreadhold)
+			return OpenThreadhold;
+	}
+	return ret;
+}
+
+int full_open_rate_compare(s32 *full_open, s32 *cbk, int x, int y, s32 inNodeType, int full_open_rate)
+{
+	int ret = true;
+
+	if ((inNodeType == NO_COMPARE) || ((inNodeType & Round_Corner) == Round_Corner))
+		return true;
+
+	if (full_open[ADDR(x, y)] < (cbk[ADDR(x, y)] * full_open_rate / 100))
+		ret = false;
+
+	return ret;
+}
+
+void allnode_open_cdc_result(int index, int *buf, int *dac, int *raw)
+{
+	int i;
+	char *name = tItems[index].name;
+
+	if (strncmp(name, "open_integration_sp", strlen(name)) == 0) {
+		for (i = 0; i < core_mp.frame_len; i++)
+			buf[i] = idev->chip->open_sp_formula(dac[i], raw[i]);
+	} else if (strncmp(name, "open test_c", strlen(name)) == 0) {
+		for (i = 0; i < core_mp.frame_len; i++)
+			buf[i] = idev->chip->open_c_formula(dac[i], raw[i], open_c_spec.tvch - open_c_spec.tvcl, open_c_spec.gain);
+	}
+}
+
+static int codeToOhm(s32 Code, u16 *v_tdf, u16 *h_tdf)
+{
+	int douTDF1 = 0;
+	int douTDF2 = 0;
+	int douTVCH = 24;
+	int douTVCL = 8;
+	int douCint = 7;
+	int douVariation = 64;
+	int douRinternal = 930;
+	s32 temp = 0;
+
+	if (core_mp.isLongV) {
+		douTDF1 = *v_tdf;
+		douTDF2 = *(v_tdf + 1);
+	} else {
+		douTDF1 = *h_tdf;
+		douTDF2 = *(h_tdf + 1);
+	}
+
+	if (Code == 0) {
+		ipio_err("code is invalid
");
+	} else {
+		temp = ((douTVCH - douTVCL) * douVariation * (douTDF1 - douTDF2) * (1 << 12) / (9 * Code * douCint)) * 100;
+		temp = (temp - douRinternal) / 1000;
+	}
+	/* Unit = M Ohm */
+	return temp;
+}
+
+static int short_test(int index, int frame_index)
+{
+	int j = 0, ret = 0;
+	u16 v_tdf[2] = {0};
+	u16 h_tdf[2] = {0};
+
+	v_tdf[0] = tItems[index].v_tdf_1;
+	v_tdf[1] = tItems[index].v_tdf_2;
+	h_tdf[0] = tItems[index].h_tdf_1;
+	h_tdf[1] = tItems[index].h_tdf_2;
+
+	if (core_mp.protocol_ver >= PROTOCOL_VER_540) {
+		/* Calculate code to ohm and save to tItems[index].buf */
+		for (j = 0; j < core_mp.frame_len; j++)
+			tItems[index].buf[frame_index * core_mp.frame_len + j] = codeToOhm(frame_buf[j], v_tdf, h_tdf);
+	} else {
+		for (j = 0; j < core_mp.frame_len; j++)
+			tItems[index].buf[frame_index * core_mp.frame_len + j] = frame_buf[j];
+	}
+
+	return ret;
+}
+
+static int allnode_key_cdc_data(int index)
+{
+	int i, ret = 0, len = 0;
+	int inDACp = 0, inDACn = 0;
+	u8 cmd[3] = {0};
+	u8 *ori = NULL;
+
+	len = core_mp.key_len * 2;
+
+	ipio_debug("Read key's length = %d
", len);
+	ipio_debug("core_mp.key_len = %d
", core_mp.key_len);
+
+	if (len <= 0) {
+		ipio_err("Length is invalid
");
+		ret = -1;
+		goto out;
+	}
+
+	/* CDC init */
+	cmd[0] = P5_X_SET_CDC_INIT;
+	cmd[1] = tItems[index].cmd;
+	cmd[2] = 0;
+
+	atomic_set(&idev->mp_int_check, ENABLE);
+
+	ret = idev->write(cmd, 3);
+	if (ret < 0) {
+		ipio_err("Write CDC command failed
");
+		goto out;
+	}
+
+	/* Check busy */
+	if (core_mp.busy_cdc == POLL_CHECK)
+		ret = ilitek_tddi_ic_check_busy(50, 50);
+	else
+		ret = ilitek_tddi_ic_check_int_stat();
+
+	if (ret < 0)
+		goto out;
+
+	/* Prepare to get cdc data */
+	cmd[0] = P5_X_READ_DATA_CTRL;
+	cmd[1] = P5_X_GET_CDC_DATA;
+
+	ret = idev->write(cmd, 2);
+	if (ret < 0) {
+		ipio_err("Write (0x%x, 0x%x) error
", cmd[0], cmd[1]);
+		goto out;
+	}
+
+	/* Waiting for FW to prepare cdc data */
+	mdelay(1);
+
+	ret = idev->write(&cmd[1], 1);
+	if (ret < 0) {
+		ipio_err("Write (0x%x) error
", cmd[1]);
+		goto out;
+	}
+
+	/* Waiting for FW to prepare cdc data */
+	mdelay(1);
+
+	/* Allocate a buffer for the original */
+	ori = kcalloc(len, sizeof(u8), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(ori)) {
+		ipio_err("Failed to allocate ori mem (%ld)
", PTR_ERR(ori));
+		goto out;
+	}
+
+	/* Get original frame(cdc) data */
+	ret = idev->read(ori, len);
+	if (ret < 0) {
+		ipio_err("Read cdc data error, len = %d
", len);
+		goto out;
+	}
+
+	ilitek_dump_data(ori, 8, len, 0, "Key CDC original");
+
+	if (key_buf == NULL) {
+		key_buf = kcalloc(core_mp.key_len, sizeof(s32), GFP_KERNEL);
+		if (ERR_ALLOC_MEM(key_buf)) {
+			ipio_err("Failed to allocate FrameBuffer mem (%ld)
", PTR_ERR(key_buf));
+			goto out;
+		}
+	} else {
+		memset(key_buf, 0x0, core_mp.key_len);
+	}
+
+	/* Convert original data to the physical one in each node */
+	for (i = 0; i < core_mp.frame_len; i++) {
+		if (tItems[index].cmd == CMD_KEY_DAC) {
+			/* DAC - P */
+			if (((ori[(2 * i) + 1] & 0x80) >> 7) == 1) {
+				/* Negative */
+				inDACp = 0 - (int)(ori[(2 * i) + 1] & 0x7F);
+			} else {
+				inDACp = ori[(2 * i) + 1] & 0x7F;
+			}
+
+			/* DAC - N */
+			if (((ori[(1 + (2 * i)) + 1] & 0x80) >> 7) == 1) {
+				/* Negative */
+				inDACn = 0 - (int)(ori[(1 + (2 * i)) + 1] & 0x7F);
+			} else {
+				inDACn = ori[(1 + (2 * i)) + 1] & 0x7F;
+			}
+
+			key_buf[i] = (inDACp + inDACn) / 2;
+		}
+	}
+	ilitek_dump_data(key_buf, 32, core_mp.frame_len, core_mp.xch_len, "Key CDC combined data");
+
+out:
+	atomic_set(&idev->mp_int_check, DISABLE);
+	ipio_kfree((void **)&ori);
+	return ret;
+}
+
+static int mp_cdc_get_pv5_4_command(u8 *cmd, int len, int index)
+{
+	int slen = 0;
+	char str[128] = {0};
+	char *key = tItems[index].desp;
+
+	ipio_info("Get cdc command for %s
", key);
+
+	slen = parser_get_int_data("pv5_4 command", key, str, sizeof(str));
+	if (slen < 0)
+		return -1;
+
+	if (parser_get_u8_array(str, cmd, 16, len) < 0)
+		return -1;
+
+	return 0;
+}
+
+static int mp_cdc_init_cmd_common(u8 *cmd, int len, int index)
+{
+	int ret = 0;
+
+	if (core_mp.protocol_ver >= PROTOCOL_VER_540) {
+		core_mp.cdc_len = 15;
+		return mp_cdc_get_pv5_4_command(cmd, len, index);
+	}
+
+	cmd[0] = P5_X_SET_CDC_INIT;
+	cmd[1] = tItems[index].cmd;
+	cmd[2] = 0;
+
+	core_mp.cdc_len = 3;
+
+	if (strncmp(tItems[index].name, "open_integration", strlen(tItems[index].name)) == 0)
+		cmd[2] = 0x2;
+	if (strncmp(tItems[index].name, "open_cap", strlen(tItems[index].name)) == 0)
+		cmd[2] = 0x3;
+
+	if (tItems[index].catalog == PEAK_TO_PEAK_TEST) {
+		cmd[2] = ((tItems[index].frame_count & 0xff00) >> 8);
+		cmd[3] = tItems[index].frame_count & 0xff;
+		cmd[4] = 0;
+
+		core_mp.cdc_len = 5;
+
+		if (strncmp(tItems[index].name, "noise_peak_to_peak_cut", strlen(tItems[index].name)) == 0)
+			cmd[4] = 0x1;
+
+		ipio_debug("P2P CMD: %d,%d,%d,%d,%d
",
+				cmd[0], cmd[1], cmd[2], cmd[3], cmd[4]);
+	}
+
+	return ret;
+}
+
+static int allnode_open_cdc_data(int mode, int *buf)
+{
+	int i = 0, ret = 0, len = 0;
+	int inDACp = 0, inDACn = 0;
+	u8 cmd[15] = {0};
+	u8 *ori = NULL;
+	char str[128] = {0};
+	char tmp[128] = {0};
+	char *key[] = {"open dac", "open raw1", "open raw2", "open raw3",
+			"open cap1 dac", "open cap1 raw"};
+
+	/* Multipling by 2 is due to the 16 bit in each node */
+	len = (core_mp.xch_len * core_mp.ych_len * 2) + 2;
+
+	ipio_debug("Read X/Y Channel length = %d, mode = %d
", len, mode);
+
+	if (len <= 2) {
+		ipio_err("Length is invalid
");
+		ret = -1;
+		goto out;
+	}
+
+	/* CDC init. Read command from ini file */
+	ret = parser_get_int_data("pv5_4 command", key[mode], str, sizeof(str));
+	if (ret < 0) {
+		ipio_err("Failed to parse PV54 command, ret = %d
", ret);
+		goto out;
+	}
+
+	strncpy(tmp, str, ret);
+	parser_get_u8_array(tmp, cmd, 16, sizeof(cmd));
+
+	ilitek_dump_data(cmd, 8, sizeof(cmd), 0, "Open SP command");
+
+	atomic_set(&idev->mp_int_check, ENABLE);
+
+	ret = idev->write(cmd, core_mp.cdc_len);
+	if (ret < 0) {
+		ipio_err("Write CDC command failed
");
+		goto out;
+	}
+
+	/* Check busy */
+	if (core_mp.busy_cdc == POLL_CHECK)
+		ret = ilitek_tddi_ic_check_busy(50, 50);
+	else
+		ret = ilitek_tddi_ic_check_int_stat();
+
+	if (ret < 0)
+		goto out;
+
+	/* Prepare to get cdc data */
+	cmd[0] = P5_X_READ_DATA_CTRL;
+	cmd[1] = P5_X_GET_CDC_DATA;
+
+	ret = idev->write(cmd, 2);
+	if (ret < 0) {
+		ipio_err("Write (0x%x, 0x%x) error
", cmd[0], cmd[1]);
+		goto out;
+	}
+
+	/* Waiting for FW to prepare cdc data */
+	mdelay(1);
+
+	ret = idev->write(&cmd[1], 1);
+	if (ret < 0) {
+		ipio_err("Write (0x%x) error
", cmd[1]);
+		goto out;
+	}
+
+	/* Waiting for FW to prepare cdc data */
+	mdelay(1);
+
+	/* Allocate a buffer for the original */
+	ori = kcalloc(len, sizeof(u8), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(ori)) {
+		ipio_err("Failed to allocate ori, (%ld)
", PTR_ERR(ori));
+		goto out;
+	}
+
+	/* Get original frame(cdc) data */
+	ret = idev->read(ori, len);
+	if (ret < 0) {
+		ipio_err("Read cdc data error, len = %d
", len);
+		goto out;
+	}
+
+	ilitek_dump_data(ori, 8, len, 0, "Open SP CDC original");
+
+	/* Convert original data to the physical one in each node */
+	for (i = 0; i < core_mp.frame_len; i++) {
+		if ((mode == 0) || (mode == 4)) {
+			/* DAC - P */
+			if (((ori[(2 * i) + 1] & 0x80) >> 7) == 1) {
+				/* Negative */
+				inDACp = 0 - (int)(ori[(2 * i) + 1] & 0x7F);
+			} else {
+				inDACp = ori[(2 * i) + 1] & 0x7F;
+			}
+
+			/* DAC - N */
+			if (((ori[(1 + (2 * i)) + 1] & 0x80) >> 7) == 1) {
+				/* Negative */
+				inDACn = 0 - (int)(ori[(1 + (2 * i)) + 1] & 0x7F);
+			} else {
+				inDACn = ori[(1 + (2 * i)) + 1] & 0x7F;
+			}
+
+			if (mode == 0)
+				buf[i] = (inDACp + inDACn) / 2;
+			else
+				buf[i] = inDACp + inDACn;
+		} else {
+			/* H byte + L byte */
+			s32 tmp = (ori[(2 * i) + 1] << 8) + ori[(1 + (2 * i)) + 1];
+			if ((tmp & 0x8000) == 0x8000)
+				buf[i] = tmp - 65536;
+			else
+				buf[i] = tmp;
+
+		}
+	}
+	ilitek_dump_data(buf, 10, core_mp.frame_len,  core_mp.xch_len, "Open SP CDC combined");
+out:
+	atomic_set(&idev->mp_int_check, DISABLE);
+	ipio_kfree((void **)&ori);
+	return ret;
+}
+
+static int allnode_mutual_cdc_data(int index)
+{
+	int i, ret = 0, len = 0;
+	int inDACp = 0, inDACn = 0;
+	u8 cmd[15] = {0};
+	u8 *ori = NULL;
+
+	/* Multipling by 2 is due to the 16 bit in each node */
+	len = (core_mp.xch_len * core_mp.ych_len * 2) + 2;
+
+	ipio_debug("Read X/Y Channel length = %d
", len);
+
+	if (len <= 2) {
+		ipio_err("Length is invalid
");
+		ret = -1;
+		goto out;
+	}
+
+	memset(cmd, 0xFF, sizeof(cmd));
+
+	/* CDC init */
+	ret = mp_cdc_init_cmd_common(cmd, sizeof(cmd), index);
+	if (ret < 0) {
+		ipio_err("Failed to get cdc command
");
+		goto out;
+	}
+
+	ilitek_dump_data(cmd, 8, core_mp.cdc_len, 0, "Mutual CDC command");
+
+	atomic_set(&idev->mp_int_check, ENABLE);
+
+	ret = idev->write(cmd, core_mp.cdc_len);
+	if (ret < 0) {
+		ipio_err("Write CDC command failed
");
+		goto out;
+	}
+
+	/* Check busy */
+	if (core_mp.busy_cdc == POLL_CHECK)
+		ret = ilitek_tddi_ic_check_busy(50, 50);
+	else
+		ret = ilitek_tddi_ic_check_int_stat();
+
+	if (ret < 0)
+		goto out;
+
+	/* Prepare to get cdc data */
+	cmd[0] = P5_X_READ_DATA_CTRL;
+	cmd[1] = P5_X_GET_CDC_DATA;
+
+	ret = idev->write(cmd, 2);
+	if (ret < 0) {
+		ipio_err("Write (0x%x, 0x%x) error
", cmd[0], cmd[1]);
+		goto out;
+	}
+
+	/* Waiting for FW to prepare cdc data */
+	mdelay(1);
+
+	ret = idev->write(&cmd[1], 1);
+	if (ret < 0) {
+		ipio_err("Write (0x%x) error
", cmd[1]);
+		goto out;
+	}
+
+	/* Waiting for FW to prepare cdc data */
+	mdelay(1);
+
+	/* Allocate a buffer for the original */
+	ori = kcalloc(len, sizeof(u8), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(ori)) {
+		ipio_err("Failed to allocate ori, (%ld)
", PTR_ERR(ori));
+		goto out;
+	}
+
+	/* Get original frame(cdc) data */
+	ret = idev->read(ori, len);
+	if (ret < 0) {
+		ipio_err("Read cdc data error, len = %d
", len);
+		goto out;
+	}
+
+	ilitek_dump_data(ori, 8, len, 0, "Mutual CDC original");
+
+	if (frame_buf == NULL) {
+		frame_buf = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		if (ERR_ALLOC_MEM(frame_buf)) {
+			ipio_err("Failed to allocate FrameBuffer mem (%ld)
", PTR_ERR(frame_buf));
+			goto out;
+		}
+	} else {
+		memset(frame_buf, 0x0, core_mp.frame_len);
+	}
+
+	/* Convert original data to the physical one in each node */
+	for (i = 0; i < core_mp.frame_len; i++) {
+		if (tItems[index].cmd == CMD_MUTUAL_DAC) {
+			/* DAC - P */
+			if (((ori[(2 * i) + 1] & 0x80) >> 7) == 1) {
+				/* Negative */
+				inDACp = 0 - (int)(ori[(2 * i) + 1] & 0x7F);
+			} else {
+				inDACp = ori[(2 * i) + 1] & 0x7F;
+			}
+
+			/* DAC - N */
+			if (((ori[(1 + (2 * i)) + 1] & 0x80) >> 7) == 1) {
+				/* Negative */
+				inDACn = 0 - (int)(ori[(1 + (2 * i)) + 1] & 0x7F);
+			} else {
+				inDACn = ori[(1 + (2 * i)) + 1] & 0x7F;
+			}
+
+			frame_buf[i] = (inDACp + inDACn) / 2;
+		} else {
+			/* H byte + L byte */
+			s32 tmp = (ori[(2 * i) + 1] << 8) + ori[(1 + (2 * i)) + 1];
+
+			if ((tmp & 0x8000) == 0x8000)
+				frame_buf[i] = tmp - 65536;
+			else
+				frame_buf[i] = tmp;
+
+			if (strncmp(tItems[index].name, "mutual_no_bk", strlen("mutual_no_bk")) == 0 ||
+				strncmp(tItems[index].name, "mutual_no_bk_lcm_off", strlen("mutual_no_bk_lcm_off")) == 0) {
+					frame_buf[i] -= core_mp.no_bk_shift;
+			}
+		}
+	}
+
+	ilitek_dump_data(frame_buf, 32, core_mp.frame_len,	core_mp.xch_len, "Mutual CDC combined");
+
+out:
+	atomic_set(&idev->mp_int_check, DISABLE);
+	ipio_kfree((void **)&ori);
+	return ret;
+}
+
+static void compare_MaxMin_result(int index, s32 *data)
+{
+	int x, y;
+
+	for (y = 0; y < core_mp.ych_len; y++) {
+		for (x = 0; x < core_mp.xch_len; x++) {
+			int shift = y * core_mp.xch_len;
+
+			if (tItems[index].catalog == UNTOUCH_P2P)
+				return;
+			else if (tItems[index].catalog == TX_RX_DELTA) {
+				/* Tx max/min comparison */
+				if (core_mp.tx_delta_buf[shift + x] < data[shift + x])
+					core_mp.tx_max_buf[shift + x] = data[shift + x];
+
+				if (core_mp.tx_delta_buf[shift + x] > data[shift + x])
+					core_mp.tx_min_buf[shift + x] = data[shift + x];
+
+				/* Rx max/min comparison */
+				if (core_mp.rx_delta_buf[shift + x] < data[shift + x])
+					core_mp.rx_max_buf[shift + x] = data[shift + x];
+
+				if (core_mp.rx_delta_buf[shift + x] > data[shift + x])
+					core_mp.rx_min_buf[shift + x] = data[shift + x];
+			} else {
+				if (tItems[index].max_buf[shift + x] < data[shift + x])
+					tItems[index].max_buf[shift + x] = data[shift + x];
+
+				if (tItems[index].min_buf[shift + x] > data[shift + x])
+					tItems[index].min_buf[shift + x] = data[shift + x];
+			}
+		}
+	}
+}
+
+static int create_mp_test_frame_buffer(int index, int frame_count)
+{
+	ipio_debug("Create MP frame buffers (index = %d), count = %d
",
+			index, frame_count);
+
+	if (tItems[index].catalog == TX_RX_DELTA) {
+		if (core_mp.tx_delta_buf == NULL) {
+			core_mp.tx_delta_buf = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+			if (ERR_ALLOC_MEM(core_mp.tx_delta_buf)) {
+				ipio_err("Failed to allocate tx_delta_buf mem
");
+				ipio_kfree((void **)&core_mp.tx_delta_buf);
+				return -ENOMEM;
+			}
+		}
+
+		if (core_mp.rx_delta_buf == NULL) {
+			core_mp.rx_delta_buf = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+			if (ERR_ALLOC_MEM(core_mp.rx_delta_buf)) {
+				ipio_err("Failed to allocate rx_delta_buf mem
");
+				ipio_kfree((void **)&core_mp.rx_delta_buf);
+				return -ENOMEM;
+			}
+		}
+
+		if (core_mp.tx_max_buf == NULL) {
+			core_mp.tx_max_buf = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+			if (ERR_ALLOC_MEM(core_mp.tx_max_buf)) {
+				ipio_err("Failed to allocate tx_max_buf mem
");
+				ipio_kfree((void **)&core_mp.tx_max_buf);
+				return -ENOMEM;
+			}
+		}
+
+		if (core_mp.tx_min_buf == NULL) {
+			core_mp.tx_min_buf = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+			if (ERR_ALLOC_MEM(core_mp.tx_min_buf)) {
+				ipio_err("Failed to allocate tx_min_buf mem
");
+				ipio_kfree((void **)&core_mp.tx_min_buf);
+				return -ENOMEM;
+			}
+		}
+
+		if (core_mp.rx_max_buf == NULL) {
+			core_mp.rx_max_buf = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+			if (ERR_ALLOC_MEM(core_mp.rx_max_buf)) {
+				ipio_err("Failed to allocate rx_max_buf mem
");
+				ipio_kfree((void **)&core_mp.rx_max_buf);
+				return -ENOMEM;
+			}
+		}
+
+		if (core_mp.rx_min_buf == NULL) {
+			core_mp.rx_min_buf = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+			if (ERR_ALLOC_MEM(core_mp.rx_min_buf)) {
+				ipio_err("Failed to allocate rx_min_buf mem
");
+				ipio_kfree((void **)&core_mp.rx_min_buf);
+				return -ENOMEM;
+			}
+		}
+	} else {
+		if (tItems[index].buf == NULL) {
+			tItems[index].buf = vmalloc(frame_count * core_mp.frame_len * sizeof(s32));
+			if (ERR_ALLOC_MEM(tItems[index].buf)) {
+				ipio_err("Failed to allocate buf mem
");
+				ipio_kfree((void **)&tItems[index].buf);
+				return -ENOMEM;
+			}
+		}
+
+		if (tItems[index].result_buf == NULL) {
+			tItems[index].result_buf = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+			if (ERR_ALLOC_MEM(tItems[index].result_buf)) {
+				ipio_err("Failed to allocate result_buf mem
");
+				ipio_kfree((void **)&tItems[index].result_buf);
+				return -ENOMEM;
+			}
+		}
+
+		if (tItems[index].max_buf == NULL) {
+			tItems[index].max_buf = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+			if (ERR_ALLOC_MEM(tItems[index].max_buf)) {
+				ipio_err("Failed to allocate max_buf mem
");
+				ipio_kfree((void **)&tItems[index].max_buf);
+				return -ENOMEM;
+			}
+		}
+
+		if (tItems[index].min_buf == NULL) {
+			tItems[index].min_buf = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+			if (ERR_ALLOC_MEM(tItems[index].min_buf)) {
+				ipio_err("Failed to allocate min_buf mem
");
+				ipio_kfree((void **)&tItems[index].min_buf);
+				return -ENOMEM;
+			}
+		}
+
+		if (tItems[index].spec_option == BENCHMARK) {
+			if (tItems[index].bench_mark_max == NULL) {
+				tItems[index].bench_mark_max = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+				if (ERR_ALLOC_MEM(tItems[index].bench_mark_max)) {
+					ipio_err("Failed to allocate bench_mark_max mem
");
+					ipio_kfree((void **)&tItems[index].bench_mark_max);
+					return -ENOMEM;
+				}
+			}
+			if (tItems[index].bench_mark_min == NULL) {
+				tItems[index].bench_mark_min = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+				if (ERR_ALLOC_MEM(tItems[index].bench_mark_min)) {
+					ipio_err("Failed to allocate bench_mark_min mem
");
+					ipio_kfree((void **)&tItems[index].bench_mark_min);
+					return -ENOMEM;
+				}
+			}
+		}
+	}
+	return 0;
+}
+
+int check_int_level(bool high)
+{
+	int timer = 500, ret = -1, level;
+
+	/* From FW request, timeout should at least be 5 sec */
+	while (timer) {
+		level = gpio_get_value(IRQ_GPIO_NUM);
+
+		ipio_info("int GPIO level = %d
", level);
+		if (high) {
+			if (level) {
+				ipio_info("check int high sucess 
");
+				ret = 0;
+				break;
+			}
+		} else {
+			if (!level) {
+				ipio_info("check int low sucess 
");
+				ret = 0;
+				break;
+			}
+		}
+		timer--;
+		udelay(2);
+	}
+	if (timer == 0)
+		ipio_info("check int %s fail 
", (high == true)? "High" : "Low");
+
+	return ret;
+}
+
+static int pin_test(int index)
+{
+	int ret = 0;
+	u8 cmd[5] = {0};
+
+	ipio_info("PIN test start");
+	ipio_info("test_int_pin = 0x%x
", tItems[index].test_int_pin);
+	ipio_info("int_pulse_test = 0x%x
", tItems[index].int_pulse_test);
+	ipio_info("delay_time = 0x%x
", tItems[index].delay_time);
+
+	if (tItems[index].test_int_pin == ENABLE) {
+		/* test HIGH level*/
+		cmd[0] = tItems[index].cmd;
+		cmd[1] = 0x1;
+		ret = idev->write(cmd, 2);
+		if (ret < 0) {
+			ipio_err("Write command failed
");
+			goto out;
+		}
+
+		ret = check_int_level(true);
+		if (ret < 0)
+			goto out;
+
+		/* test LOW level*/
+		cmd[1] = 0x0;
+		ret = idev->write(cmd, 2);
+		if (ret < 0) {
+			ipio_err("Write command failed
");
+			goto out;
+		}
+
+		ret = check_int_level(false);
+		if (ret < 0)
+			goto out;
+	}
+
+	if (tItems[index].int_pulse_test == ENABLE) {
+
+		ipio_info("MP IRQ Rising Trigger Test
");
+		cmd[1] = 0x2;
+		cmd[2] = tItems[index].delay_time;
+
+		ilitek_plat_irq_unregister();
+		ret = ilitek_plat_irq_register(IRQF_TRIGGER_RISING);
+		if (ret < 0)
+			goto out;
+
+		atomic_set(&idev->mp_int_check, ENABLE);
+		ret = idev->write(cmd, 3);
+		if (ret < 0) {
+			ipio_err("Write command failed
");
+			goto out;
+		}
+
+		ret = ilitek_tddi_ic_check_int_stat();
+		if (ret < 0)
+			goto out;
+
+		ipio_info("MP IRQ Falling Trigger Test
");
+		ilitek_plat_irq_unregister();
+		ret = ilitek_plat_irq_register(IRQF_TRIGGER_FALLING);
+		if (ret < 0)
+			goto out;
+
+		atomic_set(&idev->mp_int_check, ENABLE);
+
+		ret = idev->write(cmd, 3);
+		if (ret < 0) {
+			ipio_err("Write command failed
");
+			goto out;
+		}
+
+		ret = ilitek_tddi_ic_check_int_stat();
+		if (ret < 0)
+			goto out;
+	}
+
+	tItems[index].item_result = MP_PASS;
+
+out:
+	if (ret < 0)
+		tItems[index].item_result = MP_FAIL;
+
+	ipio_info("Change to defualt IRQ trigger type
");
+	ilitek_plat_irq_unregister();
+	ilitek_plat_irq_register(idev->irq_tirgger_type);
+
+	return tItems[index].item_result;
+}
+
+static int mutual_test(int index)
+{
+	int i = 0, j = 0, x = 0, y = 0, ret = 0, get_frame_cont = 1;
+
+	ipio_debug("index = %d, name = %s, CMD = 0x%x, Frame Count = %d
",
+		index, tItems[index].name, tItems[index].cmd, tItems[index].frame_count);
+
+	/*
+	 * We assume that users who are calling the test forget to config frame count
+	 * as 1, so we just help them to set it up.
+	 */
+	if (tItems[index].frame_count <= 0) {
+		ipio_err("Frame count is zero, which is at least set as 1
");
+		tItems[index].frame_count = 1;
+	}
+
+	ret = create_mp_test_frame_buffer(index, tItems[index].frame_count);
+	if (ret < 0)
+		goto out;
+
+	/* Init Max/Min buffer */
+	for (y = 0; y < core_mp.ych_len; y++) {
+		for (x = 0; x < core_mp.xch_len; x++) {
+			if (tItems[i].catalog == TX_RX_DELTA) {
+				core_mp.tx_max_buf[y * core_mp.xch_len + x] = INT_MIN;
+				core_mp.rx_max_buf[y * core_mp.xch_len + x] = INT_MIN;
+				core_mp.tx_min_buf[y * core_mp.xch_len + x] = INT_MAX;
+				core_mp.rx_min_buf[y * core_mp.xch_len + x] = INT_MAX;
+			} else {
+				tItems[index].max_buf[y * core_mp.xch_len + x] = INT_MIN;
+				tItems[index].min_buf[y * core_mp.xch_len + x] = INT_MAX;
+			}
+		}
+	}
+
+	if (tItems[index].catalog != PEAK_TO_PEAK_TEST)
+		get_frame_cont = tItems[index].frame_count;
+
+	if (tItems[index].spec_option == BENCHMARK) {
+		parser_ini_benchmark(tItems[index].bench_mark_max, tItems[index].bench_mark_min,
+								tItems[index].type_option, tItems[index].desp, core_mp.frame_len);
+		dump_benchmark_data(tItems[index].bench_mark_max, tItems[index].bench_mark_min);
+	}
+
+	for (i = 0; i < get_frame_cont; i++) {
+		ret = allnode_mutual_cdc_data(index);
+		if (ret < 0) {
+			ipio_err("Failed to initialise CDC data, %d
", ret);
+			goto out;
+		}
+		switch (tItems[index].catalog) {
+		case PIXEL:
+			run_pixel_test(index);
+			break;
+		case UNTOUCH_P2P:
+			run_untouch_p2p_test(index);
+			break;
+		case OPEN_TEST:
+			run_open_test(index);
+			break;
+		case TX_RX_DELTA:
+			run_tx_rx_delta_test(index);
+			break;
+		case SHORT_TEST:
+			short_test(index, i);
+			break;
+		default:
+			for (j = 0; j < core_mp.frame_len; j++)
+				tItems[index].buf[i * core_mp.frame_len + j] = frame_buf[j];
+			break;
+		}
+		compare_MaxMin_result(index, &tItems[index].buf[i * core_mp.frame_len]);
+	}
+
+out:
+	return ret;
+}
+
+static int open_test_sp(int index)
+{
+	struct mp_test_P540_open open[tItems[index].frame_count];
+	int i = 0, x = 0, y = 0, ret = 0, addr = 0;
+	int Charge_AA = 0, Charge_Border = 0, Charge_Notch = 0, full_open_rate = 0;
+	char str[512] = {0};
+
+	ipio_debug("index = %d, name = %s, CMD = 0x%x, Frame Count = %d
",
+		index, tItems[index].name, tItems[index].cmd, tItems[index].frame_count);
+
+	/*
+	 * We assume that users who are calling the test forget to config frame count
+	 * as 1, so we just help them to set it up.
+	 */
+	if (tItems[index].frame_count <= 0) {
+		ipio_err("Frame count is zero, which is at least set as 1
");
+		tItems[index].frame_count = 1;
+	}
+
+	ret = create_mp_test_frame_buffer(index, tItems[index].frame_count);
+	if (ret < 0)
+		goto out;
+
+	if (frame1_cbk700 == NULL) {
+		frame1_cbk700 = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		if (ERR_ALLOC_MEM(frame1_cbk700)) {
+			ipio_err("Failed to allocate frame1_cbk700 buffer
");
+			return -ENOMEM;
+		}
+	} else {
+		memset(frame1_cbk700, 0x0, core_mp.frame_len);
+	}
+
+	if (frame1_cbk250 == NULL) {
+		frame1_cbk250 = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		if (ERR_ALLOC_MEM(frame1_cbk250)) {
+			ipio_err("Failed to allocate frame1_cbk250 buffer
");
+			ipio_kfree((void **)&frame1_cbk700);
+			return -ENOMEM;
+		}
+	} else {
+		memset(frame1_cbk250, 0x0, core_mp.frame_len);
+	}
+
+	if (frame1_cbk200 == NULL) {
+		frame1_cbk200 = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		if (ERR_ALLOC_MEM(frame1_cbk200)) {
+			ipio_err("Failed to allocate cbk buffer
");
+			ipio_kfree((void **)&frame1_cbk700);
+			ipio_kfree((void **)&frame1_cbk250);
+			return -ENOMEM;
+		}
+	} else {
+		memset(frame1_cbk200, 0x0, core_mp.frame_len);
+	}
+
+	tItems[index].node_type = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(tItems[index].node_type)) {
+		ipio_err("Failed to allocate node_type FRAME buffer
");
+		return -ENOMEM;
+	}
+
+	/* Init Max/Min buffer */
+	for (y = 0; y < core_mp.ych_len; y++) {
+		for (x = 0; x < core_mp.xch_len; x++) {
+			tItems[index].max_buf[y * core_mp.xch_len + x] = INT_MIN;
+			tItems[index].min_buf[y * core_mp.xch_len + x] = INT_MAX;
+		}
+	}
+
+	if (tItems[index].spec_option == BENCHMARK) {
+		parser_ini_benchmark(tItems[index].bench_mark_max, tItems[index].bench_mark_min,
+							tItems[index].type_option, tItems[index].desp, core_mp.frame_len);
+		dump_benchmark_data(tItems[index].bench_mark_max, tItems[index].bench_mark_min);
+	}
+
+	parser_ini_nodetype(tItems[index].node_type, NODE_TYPE_KEY_NAME, core_mp.frame_len);
+	dump_node_type_buffer(tItems[index].node_type, "node type");
+
+	ret = parser_get_int_data(tItems[index].desp, "charge_aa", str, sizeof(str));
+	if (ret || ret == 0)
+		Charge_AA = katoi(str);
+
+	ret = parser_get_int_data(tItems[index].desp, "charge_border", str, sizeof(str));
+	if (ret || ret == 0)
+		Charge_Border = katoi(str);
+
+	ret = parser_get_int_data(tItems[index].desp, "charge_notch", str, sizeof(str));
+	if (ret || ret == 0)
+		Charge_Notch = katoi(str);
+
+	ret = parser_get_int_data(tItems[index].desp, "full open", str, sizeof(str));
+	if (ret || ret == 0)
+		full_open_rate = katoi(str);
+
+	if (ret < 0) {
+		ipio_err("Failed to get parameters from ini file
");
+		goto out;
+	}
+
+	ipio_debug("open_test_sp: frame_cont %d, AA %d, Border %d, Notch %d, full_open_rate %d
",
+			tItems[index].frame_count, Charge_AA, Charge_Border, Charge_Notch, full_open_rate);
+
+	for (i = 0; i < tItems[index].frame_count; i++) {
+		open[i].tdf_700 = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		open[i].tdf_250 = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		open[i].tdf_200 = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		open[i].cbk_700 = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		open[i].cbk_250 = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		open[i].cbk_200 = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		open[i].charg_rate = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		open[i].full_Open = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		open[i].dac = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+	}
+
+	for (i = 0; i < tItems[index].frame_count; i++) {
+		ret = allnode_open_cdc_data(0, open[i].dac);
+		if (ret < 0) {
+			ipio_err("Failed to get Open SP DAC data, %d
", ret);
+			goto out;
+		}
+		ret = allnode_open_cdc_data(1, open[i].tdf_700);
+		if (ret < 0) {
+			ipio_err("Failed to get Open SP Raw1 data, %d
", ret);
+			goto out;
+		}
+		ret = allnode_open_cdc_data(2, open[i].tdf_250);
+		if (ret < 0) {
+			ipio_err("Failed to get Open SP Raw2 data, %d
", ret);
+			goto out;
+		}
+		ret = allnode_open_cdc_data(3, open[i].tdf_200);
+		if (ret < 0) {
+			ipio_err("Failed to get Open SP Raw3 data, %d
", ret);
+			goto out;
+		}
+		allnode_open_cdc_result(index, open[i].cbk_700, open[i].dac, open[i].tdf_700);
+		allnode_open_cdc_result(index, open[i].cbk_250, open[i].dac, open[i].tdf_250);
+		allnode_open_cdc_result(index, open[i].cbk_200, open[i].dac, open[i].tdf_200);
+
+		addr = 0;
+
+		/* record fist frame for debug */
+		if (i == 0) {
+			ipio_memcpy(frame1_cbk700, open[i].cbk_700, core_mp.frame_len * sizeof(s32), core_mp.frame_len * sizeof(s32));
+			ipio_memcpy(frame1_cbk250, open[i].cbk_250, core_mp.frame_len * sizeof(s32), core_mp.frame_len * sizeof(s32));
+			ipio_memcpy(frame1_cbk200, open[i].cbk_200, core_mp.frame_len * sizeof(s32), core_mp.frame_len * sizeof(s32));
+		}
+
+		ilitek_dump_data(open[i].cbk_700, 10, core_mp.frame_len, core_mp.xch_len, "cbk 700");
+		ilitek_dump_data(open[i].cbk_250, 10, core_mp.frame_len, core_mp.xch_len, "cbk 250");
+		ilitek_dump_data(open[i].cbk_200, 10, core_mp.frame_len, core_mp.xch_len, "cbk 200");
+
+		for (y = 0; y < core_mp.ych_len; y++) {
+			for (x = 0; x < core_mp.xch_len; x++) {
+				open[i].charg_rate[addr] = open[i].cbk_250[addr] * 100 / open[i].cbk_700[addr];
+				open[i].full_Open[addr] = open[i].cbk_700[addr] - open[i].cbk_200[addr];
+				addr++;
+			}
+		}
+
+		ilitek_dump_data(open[i].charg_rate, 10, core_mp.frame_len, core_mp.xch_len, "origin charge rate");
+		ilitek_dump_data(open[i].full_Open, 10, core_mp.frame_len, core_mp.xch_len, "origin full open");
+
+		addr = 0;
+		for (y = 0; y < core_mp.ych_len; y++) {
+			for (x = 0; x < core_mp.xch_len; x++) {
+				if (full_open_rate_compare(open[i].full_Open, open[i].cbk_700, x, y, tItems[index].node_type[addr], full_open_rate) == false) {
+					tItems[index].buf[(i * core_mp.frame_len) + addr] = 0;
+					open[i].charg_rate[addr] = 0;
+				}
+				addr++;
+			}
+		}
+
+		ilitek_dump_data(&tItems[index].buf[(i * core_mp.frame_len)], 10, core_mp.frame_len, core_mp.xch_len, "after full_open_rate_compare");
+
+		addr = 0;
+		for (y = 0; y < core_mp.ych_len; y++) {
+			for (x = 0; x < core_mp.xch_len; x++) {
+				tItems[index].buf[(i * core_mp.frame_len) + addr] = compare_charge(open[i].charg_rate, x, y, tItems[index].node_type, Charge_AA, Charge_Border, Charge_Notch);
+				addr++;
+			}
+		}
+
+		ilitek_dump_data(&tItems[index].buf[(i * core_mp.frame_len)], 10, core_mp.frame_len, core_mp.xch_len, "after compare charge rate");
+
+		compare_MaxMin_result(index, &tItems[index].buf[(i * core_mp.frame_len)]);
+	}
+
+out:
+	ipio_kfree((void **)&tItems[index].node_type);
+
+	for (i = 0; i < tItems[index].frame_count; i++) {
+		ipio_kfree((void **)&open[i].tdf_700);
+		ipio_kfree((void **)&open[i].tdf_250);
+		ipio_kfree((void **)&open[i].tdf_200);
+		ipio_kfree((void **)&open[i].cbk_700);
+		ipio_kfree((void **)&open[i].cbk_250);
+		ipio_kfree((void **)&open[i].cbk_200);
+		ipio_kfree((void **)&open[i].charg_rate);
+		ipio_kfree((void **)&open[i].full_Open);
+		ipio_kfree((void **)&open[i].dac);
+	}
+	return ret;
+}
+
+static int open_test_cap(int index)
+{
+	struct mp_test_open_c open[tItems[index].frame_count];
+	int i = 0, x = 0, y = 0, ret = 0, addr = 0;
+	char str[512] = {0};
+
+	if (tItems[index].frame_count <= 0) {
+		ipio_err("Frame count is zero, which is at least set as 1
");
+		tItems[index].frame_count = 1;
+	}
+
+	ret = create_mp_test_frame_buffer(index, tItems[index].frame_count);
+	if (ret < 0)
+		goto out;
+
+	if (cap_dac == NULL) {
+		cap_dac = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		if (ERR_ALLOC_MEM(cap_dac)) {
+			ipio_err("Failed to allocate cap_dac buffer
");
+			return -ENOMEM;
+		}
+	} else {
+		memset(cap_dac, 0x0, core_mp.frame_len);
+	}
+
+	if (cap_raw == NULL) {
+		cap_raw = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		if (ERR_ALLOC_MEM(cap_raw)) {
+			ipio_err("Failed to allocate cap_raw buffer
");
+			ipio_kfree((void **)&cap_dac);
+			return -ENOMEM;
+		}
+	} else {
+		memset(cap_raw, 0x0, core_mp.frame_len);
+	}
+
+	/* Init Max/Min buffer */
+	for (y = 0; y < core_mp.ych_len; y++) {
+		for (x = 0; x < core_mp.xch_len; x++) {
+				tItems[index].max_buf[y * core_mp.xch_len + x] = INT_MIN;
+				tItems[index].min_buf[y * core_mp.xch_len + x] = INT_MAX;
+		}
+	}
+
+	if (tItems[index].spec_option == BENCHMARK) {
+		parser_ini_benchmark(tItems[index].bench_mark_max, tItems[index].bench_mark_min,
+							tItems[index].type_option, tItems[index].desp, core_mp.frame_len);
+		dump_benchmark_data(tItems[index].bench_mark_max, tItems[index].bench_mark_min);
+	}
+
+	ret = parser_get_int_data(tItems[index].desp, "gain", str, sizeof(str));
+	if (ret || ret == 0)
+		open_c_spec.gain = katoi(str);
+
+	ret = parser_get_int_data(tItems[index].desp, "tvch", str, sizeof(str));
+	if (ret || ret == 0)
+		open_c_spec.tvch = katoi(str);
+
+	ret = parser_get_int_data(tItems[index].desp, "tvcl", str, sizeof(str));
+	if (ret || ret == 0)
+		open_c_spec.tvcl = katoi(str);
+
+	if (ret < 0) {
+		ipio_err("Failed to get parameters from ini file
");
+		goto out;
+	}
+
+	ipio_debug("open_test_c: frame_cont = %d, gain = %d, tvch = %d, tvcl = %d
",
+			tItems[index].frame_count, open_c_spec.gain, open_c_spec.tvch, open_c_spec.tvcl);
+
+	for (i = 0; i < tItems[index].frame_count; i++) {
+		open[i].cap_dac = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		open[i].cap_raw = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+		open[i].dcl_cap = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+	}
+
+	for (i = 0; i < tItems[index].frame_count; i++) {
+		ret = allnode_open_cdc_data(4, open[i].cap_dac);
+		if (ret < 0) {
+			ipio_err("Failed to get Open CAP DAC data, %d
", ret);
+			goto out;
+		}
+		ret = allnode_open_cdc_data(5, open[i].cap_raw);
+		if (ret < 0) {
+			ipio_err("Failed to get Open CAP RAW data, %d
", ret);
+			goto out;
+		}
+
+		allnode_open_cdc_result(index, open[i].dcl_cap, open[i].cap_dac, open[i].cap_raw);
+
+		/* record fist frame for debug */
+		if (i == 0) {
+			ipio_memcpy(cap_dac, open[i].cap_dac, core_mp.frame_len * sizeof(s32), core_mp.frame_len * sizeof(s32));
+			ipio_memcpy(cap_raw, open[i].cap_raw, core_mp.frame_len * sizeof(s32), core_mp.frame_len * sizeof(s32));
+		}
+
+		ilitek_dump_data(open[i].dcl_cap, 10, core_mp.frame_len, core_mp.xch_len, "DCL_Cap");
+
+		addr = 0;
+		for (y = 0; y < core_mp.ych_len; y++) {
+			for (x = 0; x < core_mp.xch_len; x++) {
+				tItems[index].buf[(i * core_mp.frame_len) + addr] = open[i].dcl_cap[addr];
+				addr++;
+			}
+		}
+		compare_MaxMin_result(index, &tItems[index].buf[i * core_mp.frame_len]);
+	}
+
+out:
+
+	for (i = 0; i < tItems[index].frame_count; i++) {
+		ipio_kfree((void **)&open[i].cap_dac);
+		ipio_kfree((void **)&open[i].cap_raw);
+		ipio_kfree((void **)&open[i].dcl_cap);
+	}
+	return ret;
+}
+
+static int key_test(int index)
+{
+	int i, j = 0, ret = 0;
+
+	ipio_debug("Item = %s, CMD = 0x%x, Frame Count = %d
",
+		tItems[index].name, tItems[index].cmd, tItems[index].frame_count);
+
+	if (tItems[index].frame_count == 0) {
+		ipio_err("Frame count is zero, which at least sets as 1
");
+		ret = -EINVAL;
+		goto out;
+	}
+
+	ret = create_mp_test_frame_buffer(index, tItems[index].frame_count);
+	if (ret < 0)
+		goto out;
+
+	for (i = 0; i < tItems[index].frame_count; i++) {
+		ret = allnode_key_cdc_data(index);
+		if (ret < 0) {
+			ipio_err("Failed to initialise CDC data, %d
", ret);
+			goto out;
+		}
+
+		for (j = 0; j < core_mp.key_len; j++)
+			tItems[index].buf[j] = key_buf[j];
+	}
+
+	compare_MaxMin_result(index, tItems[index].buf);
+
+out:
+	return ret;
+}
+
+static int self_test(int index)
+{
+	ipio_err("TDDI has no self to be tested currently
");
+	return -1;
+}
+
+static int st_test(int index)
+{
+	ipio_err("ST Test is not supported by the driver
");
+	return -1;
+}
+
+static int mp_get_timing_info(void)
+{
+	int slen = 0;
+	char str[256] = {0};
+	u8 info[64] = {0};
+	char *key = "timing_info_raw";
+
+	core_mp.isLongV = 0;
+
+	slen = parser_get_int_data("pv5_4 command", key, str, sizeof(str));
+	if (slen < 0)
+		return -1;
+
+	if (parser_get_u8_array(str, info, 16, slen) < 0)
+		return -1;
+
+	core_mp.isLongV = info[6];
+
+	ipio_info("DDI Mode = %s
", (core_mp.isLongV ? "Long V" : "Long H"));
+
+	return 0;
+}
+
+static int mp_test_data_sort_average(s32 *oringin_data, int index, s32 *avg_result)
+{
+	int i, j, k, x, y, len = 5;
+	s32 u32temp;
+	int u32up_frame, u32down_frame;
+	s32 *u32sum_raw_data;
+	s32 *u32data_buff;
+
+	if (tItems[index].frame_count <= 1)
+		return 0;
+
+
+	if (ERR_ALLOC_MEM(oringin_data)) {
+		ipio_err("Input wrong address
");
+		return -ENOMEM;
+	}
+
+	u32data_buff = kcalloc(core_mp.frame_len * tItems[index].frame_count, sizeof(s32), GFP_KERNEL);
+	u32sum_raw_data = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(u32sum_raw_data) || (ERR_ALLOC_MEM(u32data_buff))) {
+		ipio_err("Failed to allocate u32sum_raw_data FRAME buffer
");
+		return -ENOMEM;
+	}
+
+	for (i = 0; i < core_mp.frame_len * tItems[index].frame_count; i++) {
+		u32data_buff[i] = oringin_data[i];
+	}
+
+	u32up_frame = tItems[index].frame_count * tItems[index].highest_percentage / 100;
+	u32down_frame = tItems[index].frame_count * tItems[index].lowest_percentage / 100;
+	ipio_debug("Up=%d, Down=%d -%s
", u32up_frame, u32down_frame, tItems[index].desp);
+
+	if (ipio_debug_level) {
+		pr_cont("
[Show Original frist%d and last%d node data]
", len, len);
+		for (i = 0; i < core_mp.frame_len; i++) {
+			for (j = 0 ; j < tItems[index].frame_count ; j++) {
+				if ((i < len) || (i >= (core_mp.frame_len-len)))
+					pr_cont("%d,", u32data_buff[j * core_mp.frame_len + i]);
+			}
+			if ((i < len) || (i >= (core_mp.frame_len-len)))
+				pr_cont("
");
+		}
+	}
+
+	for (i = 0; i < core_mp.frame_len; i++) {
+		for (j = 0; j < tItems[index].frame_count-1; j++) {
+			for (k = 0; k < (tItems[index].frame_count-1-j); k++) {
+				x = i+k*core_mp.frame_len;
+				y = i+(k+1)*core_mp.frame_len;
+				if (*(u32data_buff+x) > *(u32data_buff+y)) {
+					u32temp = *(u32data_buff+x);
+					*(u32data_buff+x) = *(u32data_buff+y);
+					*(u32data_buff+y) = u32temp;
+				}
+			}
+		}
+	}
+
+	if (ipio_debug_level) {
+		pr_cont("
[After sorting frist%d and last%d node data]
", len, len);
+		for (i = 0; i < core_mp.frame_len; i++) {
+			for (j = u32down_frame; j < tItems[index].frame_count - u32up_frame; j++) {
+				if ((i < len) || (i >= (core_mp.frame_len - len)))
+					pr_cont("%d,", u32data_buff[i + j * core_mp.frame_len]);
+			}
+			if ((i < len) || (i >= (core_mp.frame_len-len)))
+				pr_cont("
");
+		}
+	}
+
+	for (i = 0 ; i < core_mp.frame_len ; i++) {
+		u32sum_raw_data[i] = 0;
+		for (j = u32down_frame; j < tItems[index].frame_count - u32up_frame; j++)
+			u32sum_raw_data[i] += u32data_buff[i + j * core_mp.frame_len];
+
+		avg_result[i] = u32sum_raw_data[i] / (tItems[index].frame_count - u32down_frame - u32up_frame);
+	}
+
+	if (ipio_debug_level) {
+		pr_cont("
[Average result frist%d and last%d node data]
", len, len);
+		for (i = 0; i < core_mp.frame_len; i++) {
+			if ((i < len) || (i >= (core_mp.frame_len-len)))
+				pr_cont("%d,", avg_result[i]);
+		}
+		if ((i < len) || (i >= (core_mp.frame_len-len)))
+			pr_cont("
");
+	}
+
+	ipio_kfree((void **)&u32data_buff);
+	ipio_kfree((void **)&u32sum_raw_data);
+	return 0;
+}
+
+static void mp_compare_cdc_result(int index, s32 *tmp, s32 *max_ts, s32 *min_ts, int *result)
+{
+	int i;
+
+	if (ERR_ALLOC_MEM(tmp)) {
+		ipio_err("The data of test item is null (%p)
", tmp);
+		*result = MP_FAIL;
+		return;
+	}
+
+	if (tItems[index].catalog == SHORT_TEST) {
+		for (i = 0; i < core_mp.frame_len; i++) {
+			if (tmp[i] < min_ts[i]) {
+				*result = MP_FAIL;
+				return;
+			}
+		}
+	} else {
+		for (i = 0; i < core_mp.frame_len; i++) {
+			if (tmp[i] > max_ts[i] || tmp[i] < min_ts[i]) {
+				*result = MP_FAIL;
+				return;
+			}
+		}
+	}
+}
+
+static int mp_comp_result_before_retry(int index)
+{
+	int i, test_result = MP_PASS;
+	s32 *max_threshold = NULL, *min_threshold = NULL;
+
+	if (tItems[index].catalog == PIN_TEST)
+		return tItems[index].item_result;
+
+	max_threshold = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(max_threshold)) {
+		ipio_err("Failed to allocate threshold FRAME buffer
");
+		ipio_kfree((void **)&max_threshold);
+		test_result = MP_FAIL;
+		goto fail_alloc;
+	}
+
+	min_threshold = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(min_threshold)) {
+		ipio_err("Failed to allocate threshold FRAME buffer
");
+		ipio_kfree((void **)&min_threshold);
+		test_result = MP_FAIL;
+		goto fail_alloc;
+	}
+
+	/* Show test result as below */
+	if (tItems[index].catalog == TX_RX_DELTA) {
+		if (ERR_ALLOC_MEM(core_mp.rx_delta_buf) || ERR_ALLOC_MEM(core_mp.tx_delta_buf)) {
+			ipio_err("This test item (%s) has no data inside its buffer
", tItems[index].desp);
+			test_result = MP_FAIL;
+			goto out;
+		}
+
+		for (i = 0; i < core_mp.frame_len; i++) {
+			max_threshold[i] = core_mp.TxDeltaMax;
+			min_threshold[i] = core_mp.TxDeltaMin;
+		}
+		mp_compare_cdc_result(index, core_mp.tx_max_buf, max_threshold, min_threshold, &test_result);
+		mp_compare_cdc_result(index, core_mp.tx_min_buf, max_threshold, min_threshold, &test_result);
+
+		for (i = 0; i < core_mp.frame_len; i++) {
+			max_threshold[i] = core_mp.RxDeltaMax;
+			min_threshold[i] = core_mp.RxDeltaMin;
+		}
+
+		mp_compare_cdc_result(index, core_mp.rx_max_buf, max_threshold, min_threshold, &test_result);
+		mp_compare_cdc_result(index, core_mp.rx_min_buf, max_threshold, min_threshold, &test_result);
+	} else {
+		if (ERR_ALLOC_MEM(tItems[index].buf) || ERR_ALLOC_MEM(tItems[index].max_buf) ||
+				ERR_ALLOC_MEM(tItems[index].min_buf) || ERR_ALLOC_MEM(tItems[index].result_buf)) {
+			ipio_err("This test item (%s) has no data inside its buffer
", tItems[index].desp);
+			test_result = MP_FAIL;
+			goto out;
+		}
+
+		if (tItems[index].spec_option == BENCHMARK) {
+			for (i = 0; i < core_mp.frame_len; i++) {
+				max_threshold[i] = tItems[index].bench_mark_max[i];
+				min_threshold[i] = tItems[index].bench_mark_min[i];
+			}
+		} else {
+			for (i = 0; i < core_mp.frame_len; i++) {
+				max_threshold[i] = tItems[index].max;
+				min_threshold[i] = tItems[index].min;
+			}
+		}
+
+		/* general result */
+		if (tItems[index].trimmed_mean && tItems[index].catalog != PEAK_TO_PEAK_TEST) {
+			mp_test_data_sort_average(tItems[index].buf, index, tItems[index].result_buf);
+			mp_compare_cdc_result(index, tItems[index].result_buf, max_threshold, min_threshold, &test_result);
+		} else {
+			mp_compare_cdc_result(index, tItems[index].max_buf, max_threshold, min_threshold, &test_result);
+			mp_compare_cdc_result(index, tItems[index].min_buf, max_threshold, min_threshold, &test_result);
+		}
+	}
+
+out:
+	ipio_kfree((void **)&max_threshold);
+	ipio_kfree((void **)&min_threshold);
+
+fail_alloc:
+	tItems[index].item_result = test_result;
+	return test_result;
+}
+
+static void mp_do_retry(int index, int count)
+{
+	if (count == 0) {
+		ipio_info("Finish retry action
");
+		return;
+	}
+
+	ipio_info("retry = %d, item = %s
", count, tItems[index].desp);
+
+	tItems[index].do_test(index);
+
+	if (mp_comp_result_before_retry(index) == MP_FAIL)
+		return mp_do_retry(index, count - 1);
+}
+
+static int mp_show_result(bool lcm_on)
+{
+	int ret = MP_PASS;
+	int i, x, y, j, csv_len = 0, pass_item_count = 0, line_count = 0, get_frame_cont = 1;
+	s32 *max_threshold = NULL, *min_threshold = NULL;
+	char *csv = NULL;
+	char csv_name[128] = { 0 };
+	char *ret_pass_name = NULL, *ret_fail_name = NULL, *ret_warning_name = NULL;
+	struct file *f = NULL;
+	mm_segment_t fs;
+	loff_t pos;
+
+	csv = vmalloc(CSV_FILE_SIZE);
+	if (ERR_ALLOC_MEM(csv)) {
+		ipio_err("Failed to allocate CSV mem
");
+		ret = MP_FAIL;
+		goto fail_open;
+	}
+
+	max_threshold = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+	min_threshold = kcalloc(core_mp.frame_len, sizeof(s32), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(max_threshold) || ERR_ALLOC_MEM(min_threshold)) {
+		ipio_err("Failed to allocate threshold FRAME buffer
");
+		ret = MP_FAIL;
+		goto fail_open;
+	}
+
+	mp_print_csv_header(csv, &csv_len, &line_count, CSV_FILE_SIZE);
+
+	for (i = 0; i < ARRAY_SIZE(tItems); i++) {
+
+		get_frame_cont = 1;
+		if (tItems[i].run != 1)
+			continue;
+
+		if (tItems[i].item_result == MP_PASS) {
+			pr_info("
[%s],OK 
", tItems[i].desp);
+			csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), "
[%s],OK
", tItems[i].desp);
+		} else {
+			pr_info("
[%s],NG 
", tItems[i].desp);
+			csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), "
[%s],NG
", tItems[i].desp);
+		}
+
+		if (tItems[i].catalog == PIN_TEST) {
+			pr_info("Test INT Pin = %d
", tItems[i].test_int_pin);
+			csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), "Test INT Pin = %d
", tItems[i].test_int_pin);
+			pr_info("Pulse Test = %d
", tItems[i].int_pulse_test);
+			csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), "Pulse Test = %d
", tItems[i].int_pulse_test);
+			pr_info("Delay Time = %d
", tItems[i].delay_time);
+			csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), "Delay Time = %d
", tItems[i].delay_time);
+			continue;
+		}
+
+		mp_print_csv_cdc_cmd(csv, &csv_len, i, CSV_FILE_SIZE);
+
+		pr_info("Frame count = %d
", tItems[i].frame_count);
+		csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), "Frame count = %d
", tItems[i].frame_count);
+
+		if (tItems[i].trimmed_mean && tItems[i].catalog != PEAK_TO_PEAK_TEST) {
+			pr_info("lowest percentage = %d
", tItems[i].lowest_percentage);
+			csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), "lowest percentage = %d
", tItems[i].lowest_percentage);
+
+			pr_info("highest percentage = %d
", tItems[i].highest_percentage);
+			csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), "highest percentage = %d
", tItems[i].highest_percentage);
+		}
+
+		/* Show result of benchmark max and min */
+		if (tItems[i].spec_option == BENCHMARK) {
+			for (j = 0; j < core_mp.frame_len; j++) {
+				max_threshold[j] = tItems[i].bench_mark_max[j];
+				min_threshold[j] = tItems[i].bench_mark_min[j];
+			}
+			mp_compare_cdc_show_result(i, tItems[i].bench_mark_max, csv, &csv_len, TYPE_BENCHMARK, max_threshold, min_threshold, "Max_Bench", CSV_FILE_SIZE);
+			mp_compare_cdc_show_result(i, tItems[i].bench_mark_min, csv, &csv_len, TYPE_BENCHMARK, max_threshold, min_threshold, "Min_Bench", CSV_FILE_SIZE);
+		} else {
+			for (j = 0; j < core_mp.frame_len; j++) {
+				max_threshold[j] = tItems[i].max;
+				min_threshold[j] = tItems[i].min;
+			}
+
+			pr_info("Max = %d
", tItems[i].max);
+			csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), "Max = %d
", tItems[i].max);
+
+			pr_info("Min = %d
", tItems[i].min);
+			csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), "Min = %d
", tItems[i].min);
+		}
+
+		if (strncmp(tItems[i].name, "open_integration_sp", strlen(tItems[i].name)) == 0) {
+			mp_compare_cdc_show_result(i, frame1_cbk700, csv, &csv_len, TYPE_NO_JUGE, max_threshold, min_threshold, "frame1 cbk700", CSV_FILE_SIZE);
+			mp_compare_cdc_show_result(i, frame1_cbk250, csv, &csv_len, TYPE_NO_JUGE, max_threshold, min_threshold, "frame1 cbk250", CSV_FILE_SIZE);
+			mp_compare_cdc_show_result(i, frame1_cbk200, csv, &csv_len, TYPE_NO_JUGE, max_threshold, min_threshold, "frame1 cbk200", CSV_FILE_SIZE);
+		}
+
+		if (strncmp(tItems[i].name, "open test_c", strlen(tItems[i].name)) == 0) {
+			mp_compare_cdc_show_result(i, cap_dac, csv, &csv_len, TYPE_NO_JUGE, max_threshold, min_threshold, "CAP_DAC", CSV_FILE_SIZE);
+			mp_compare_cdc_show_result(i, cap_raw, csv, &csv_len, TYPE_NO_JUGE, max_threshold, min_threshold, "CAP_RAW", CSV_FILE_SIZE);
+		}
+
+		if (tItems[i].catalog == TX_RX_DELTA) {
+			if (ERR_ALLOC_MEM(core_mp.rx_delta_buf) || ERR_ALLOC_MEM(core_mp.tx_delta_buf)) {
+				ipio_err("This test item (%s) has no data inside its buffer
", tItems[i].desp);
+				continue;
+			}
+		} else {
+			if (ERR_ALLOC_MEM(tItems[i].buf) || ERR_ALLOC_MEM(tItems[i].max_buf) ||
+					ERR_ALLOC_MEM(tItems[i].min_buf)) {
+				ipio_err("This test item (%s) has no data inside its buffer
", tItems[i].desp);
+				continue;
+			}
+		}
+
+		/* Show test result as below */
+		if (tItems[i].catalog == KEY_TEST) {
+			for (x = 0; x < core_mp.key_len; x++) {
+				DUMP("KEY_%02d ", x);
+				csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), "KEY_%02d,", x);
+			}
+
+			DUMP("
");
+			csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), "
");
+
+			for (y = 0; y < core_mp.key_len; y++) {
+				DUMP(" %3d   ", tItems[i].buf[y]);
+				csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), " %3d, ", tItems[i].buf[y]);
+			}
+
+			DUMP("
");
+			csv_len += snprintf(csv + csv_len, (CSV_FILE_SIZE - csv_len), "
");
+		} else if (tItems[i].catalog == TX_RX_DELTA) {
+			for (j = 0; j < core_mp.frame_len; j++) {
+				max_threshold[j] = core_mp.TxDeltaMax;
+				min_threshold[j] = core_mp.TxDeltaMin;
+			}
+			mp_compare_cdc_show_result(i, core_mp.tx_max_buf, csv, &csv_len, TYPE_JUGE, max_threshold, min_threshold, "TX Max Hold", CSV_FILE_SIZE);
+			mp_compare_cdc_show_result(i, core_mp.tx_min_buf, csv, &csv_len, TYPE_JUGE, max_threshold, min_threshold, "TX Min Hold", CSV_FILE_SIZE);
+
+			for (j = 0; j < core_mp.frame_len; j++) {
+				max_threshold[j] = core_mp.RxDeltaMax;
+				min_threshold[j] = core_mp.RxDeltaMin;
+			}
+			mp_compare_cdc_show_result(i, core_mp.rx_max_buf, csv, &csv_len, TYPE_JUGE, max_threshold, min_threshold, "RX Max Hold", CSV_FILE_SIZE);
+			mp_compare_cdc_show_result(i, core_mp.rx_min_buf, csv, &csv_len, TYPE_JUGE, max_threshold, min_threshold, "RX Min Hold", CSV_FILE_SIZE);
+		} else {
+			/* general result */
+			if (tItems[i].trimmed_mean && tItems[i].catalog != PEAK_TO_PEAK_TEST) {
+				mp_compare_cdc_show_result(i, tItems[i].result_buf, csv, &csv_len, TYPE_JUGE, max_threshold, min_threshold, "Mean result", CSV_FILE_SIZE);
+			} else {
+				mp_compare_cdc_show_result(i, tItems[i].max_buf, csv, &csv_len, TYPE_JUGE, max_threshold, min_threshold, "Max Hold", CSV_FILE_SIZE);
+				mp_compare_cdc_show_result(i, tItems[i].min_buf, csv, &csv_len, TYPE_JUGE, max_threshold, min_threshold, "Min Hold", CSV_FILE_SIZE);
+			}
+			if (tItems[i].catalog != PEAK_TO_PEAK_TEST)
+				get_frame_cont = tItems[i].frame_count;
+
+			/* result of each frame */
+			for (j = 0; j < get_frame_cont; j++) {
+				char frame_name[128] = {0};
+				snprintf(frame_name, (CSV_FILE_SIZE - csv_len), "Frame %d", (j+1));
+				mp_compare_cdc_show_result(i, &tItems[i].buf[(j*core_mp.frame_len)], csv, &csv_len, TYPE_NO_JUGE, max_threshold, min_threshold, frame_name, CSV_FILE_SIZE);
+			}
+		}
+	}
+
+	memset(csv_name, 0, 128 * sizeof(char));
+
+	mp_print_csv_tail(csv, &csv_len, CSV_FILE_SIZE);
+
+	for (i = 0; i < ARRAY_SIZE(tItems); i++) {
+		if (tItems[i].run) {
+			if (tItems[i].item_result == MP_FAIL) {
+				pass_item_count = 0;
+				break;
+			}
+			pass_item_count++;
+		}
+	}
+
+	/* define csv file name */
+	ret_pass_name = NORMAL_CSV_PASS_NAME;
+	ret_fail_name = NORMAL_CSV_FAIL_NAME;
+	ret_warning_name = NORMAL_CSV_WARNING_NAME;
+
+	if (core_mp.lost_benchmark) {
+		core_mp.final_result = MP_FAIL;
+		ret = MP_FAIL;
+		if (lcm_on)
+			snprintf(csv_name, (CSV_FILE_SIZE - csv_len), "%s/%s_%s.csv", CSV_LCM_ON_PATH, get_date_time_str(), ret_warning_name);
+		else
+			snprintf(csv_name, (CSV_FILE_SIZE - csv_len), "%s/%s_%s.csv", CSV_LCM_OFF_PATH, get_date_time_str(), ret_warning_name);
+	} else if (pass_item_count == 0) {
+		core_mp.final_result = MP_FAIL;
+		ret = MP_FAIL;
+		if (lcm_on)
+			snprintf(csv_name, (CSV_FILE_SIZE - csv_len), "%s/%s_%s.csv", CSV_LCM_ON_PATH, get_date_time_str(), ret_fail_name);
+		else
+			snprintf(csv_name, (CSV_FILE_SIZE - csv_len), "%s/%s_%s.csv", CSV_LCM_OFF_PATH, get_date_time_str(), ret_fail_name);
+	} else {
+		core_mp.final_result = MP_PASS;
+		ret = MP_PASS;
+		if (lcm_on)
+			snprintf(csv_name, (CSV_FILE_SIZE - csv_len), "%s/%s_%s.csv", CSV_LCM_ON_PATH, get_date_time_str(), ret_pass_name);
+		else
+			snprintf(csv_name, (CSV_FILE_SIZE - csv_len), "%s/%s_%s.csv", CSV_LCM_OFF_PATH, get_date_time_str(), ret_pass_name);
+	}
+
+	ipio_info("Open CSV : %s
", csv_name);
+
+	if (f == NULL)
+		f = filp_open(csv_name, O_WRONLY | O_CREAT | O_TRUNC, 644);
+
+	if (ERR_ALLOC_MEM(f)) {
+		ipio_err("Failed to open CSV file");
+		ret = MP_FAIL;
+		goto fail_open;
+	}
+
+	ipio_info("Open CSV succeed, its length = %d
 ", csv_len);
+
+	if (csv_len >= CSV_FILE_SIZE) {
+		ipio_err("The length saved to CSV is too long !
");
+		ret = MP_FAIL;
+		goto fail_open;
+	}
+
+	fs = get_fs();
+	set_fs(KERNEL_DS);
+	pos = 0;
+	vfs_write(f, csv, csv_len, &pos);
+	set_fs(fs);
+	filp_close(f, NULL);
+
+	ipio_info("Writing Data into CSV succeed
");
+
+fail_open:
+	ipio_vfree((void **)&csv);
+	ipio_kfree((void **)&max_threshold);
+	ipio_kfree((void **)&min_threshold);
+	return ret;
+}
+
+static void ilitek_tddi_mp_init_item(void)
+{
+	int i = 0;
+
+	memset(&core_mp, 0, sizeof(core_mp));
+
+	core_mp.chip_pid = idev->chip->pid;
+	core_mp.fw_ver = idev->chip->fw_ver;
+	core_mp.protocol_ver = idev->protocol->ver;
+	core_mp.cdc_len = idev->protocol->cdc_len;
+	core_mp.no_bk_shift = idev->chip->no_bk_shift;
+	core_mp.xch_len = idev->xch_num;
+	core_mp.ych_len = idev->ych_num;
+	core_mp.frame_len = core_mp.xch_len * core_mp.ych_len;
+	core_mp.stx_len = 0;
+	core_mp.srx_len = 0;
+	core_mp.key_len = 0;
+	core_mp.st_len = 0;
+	core_mp.tdf = 240;
+	core_mp.busy_cdc = INT_CHECK;
+	core_mp.retry = false;
+	core_mp.final_result = MP_FAIL;
+	core_mp.lost_benchmark = false;
+
+	ipio_info("CHIP = 0x%x
", core_mp.chip_pid);
+	ipio_info("Firmware version = %x
", core_mp.fw_ver);
+	ipio_info("Protocol version = %x
", core_mp.protocol_ver);
+	ipio_info("Read CDC Length = %d
", core_mp.cdc_len);
+	ipio_info("X length = %d, Y length = %d
", core_mp.xch_len, core_mp.ych_len);
+	ipio_info("Frame length = %d
", core_mp.frame_len);
+	ipio_info("Check busy method = %d
", core_mp.busy_cdc);
+
+	for (i = 0; i < MP_TEST_ITEM; i++) {
+		tItems[i].spec_option = 0;
+		tItems[i].type_option = 0;
+		tItems[i].run = false;
+		tItems[i].max = 0;
+		tItems[i].max_res = MP_FAIL;
+		tItems[i].item_result = MP_PASS;
+		tItems[i].min = 0;
+		tItems[i].min_res = MP_FAIL;
+		tItems[i].frame_count = 0;
+		tItems[i].trimmed_mean = 0;
+		tItems[i].lowest_percentage = 0;
+		tItems[i].highest_percentage = 0;
+		tItems[i].v_tdf_1 = 0;
+		tItems[i].v_tdf_2 = 0;
+		tItems[i].h_tdf_1 = 0;
+		tItems[i].h_tdf_2 = 0;
+		tItems[i].result_buf = NULL;
+		tItems[i].buf = NULL;
+		tItems[i].max_buf = NULL;
+		tItems[i].min_buf = NULL;
+		tItems[i].bench_mark_max = NULL;
+		tItems[i].bench_mark_min = NULL;
+		tItems[i].node_type = NULL;
+		tItems[i].delay_time = 0;
+		tItems[i].test_int_pin = 0;
+		tItems[i].int_pulse_test = 0;
+
+		if (tItems[i].catalog == MUTUAL_TEST) {
+			tItems[i].do_test = mutual_test;
+		} else if (tItems[i].catalog == TX_RX_DELTA) {
+			tItems[i].do_test = mutual_test;
+		} else if (tItems[i].catalog == UNTOUCH_P2P) {
+			tItems[i].do_test = mutual_test;
+		} else if (tItems[i].catalog == PIXEL) {
+			tItems[i].do_test = mutual_test;
+		} else if (tItems[i].catalog == OPEN_TEST) {
+			if (strncmp(tItems[i].name, "open_integration_sp", strlen(tItems[i].name)) == 0)
+				tItems[i].do_test = open_test_sp;
+			else if (strncmp(tItems[i].name, "open test_c", strlen(tItems[i].name)) == 0)
+				tItems[i].do_test = open_test_cap;
+			else
+				tItems[i].do_test = mutual_test;
+		} else if (tItems[i].catalog == KEY_TEST) {
+			tItems[i].do_test = key_test;
+		} else if (tItems[i].catalog == SELF_TEST) {
+			tItems[i].do_test = self_test;
+		} else if (tItems[i].catalog == ST_TEST) {
+			tItems[i].do_test = st_test;
+		} else if (tItems[i].catalog == PEAK_TO_PEAK_TEST) {
+			tItems[i].do_test = mutual_test;
+		} else if (tItems[i].catalog == SHORT_TEST) {
+			tItems[i].do_test = mutual_test;
+		} else if (tItems[i].catalog == PIN_TEST) {
+			tItems[i].do_test = pin_test;
+		}
+
+		tItems[i].result = kmalloc(16, GFP_KERNEL);
+		snprintf(tItems[i].result, 16, "%s", "FAIL");
+	}
+
+	tItems[0].cmd = CMD_MUTUAL_DAC;
+	tItems[1].cmd = CMD_MUTUAL_BG;
+	tItems[2].cmd = CMD_MUTUAL_SIGNAL;
+	tItems[3].cmd = CMD_MUTUAL_NO_BK;
+	tItems[4].cmd = CMD_MUTUAL_HAVE_BK;
+	tItems[5].cmd = CMD_MUTUAL_BK_DAC;
+	tItems[6].cmd = CMD_SELF_DAC;
+	tItems[7].cmd = CMD_SELF_BG;
+	tItems[8].cmd = CMD_SELF_SIGNAL;
+	tItems[9].cmd = CMD_SELF_NO_BK;
+	tItems[10].cmd = CMD_SELF_HAVE_BK;
+	tItems[11].cmd = CMD_SELF_BK_DAC;
+	tItems[12].cmd = CMD_KEY_DAC;
+	tItems[13].cmd = CMD_KEY_BG;
+	tItems[14].cmd = CMD_KEY_NO_BK;
+	tItems[15].cmd = CMD_KEY_HAVE_BK;
+	tItems[16].cmd = CMD_KEY_OPEN;
+	tItems[17].cmd = CMD_KEY_SHORT;
+	tItems[18].cmd = CMD_ST_DAC;
+	tItems[19].cmd = CMD_ST_BG;
+	tItems[20].cmd = CMD_ST_NO_BK;
+	tItems[21].cmd = CMD_ST_HAVE_BK;
+	tItems[22].cmd = CMD_ST_OPEN;
+	tItems[23].cmd = CMD_TX_SHORT;
+	tItems[24].cmd = CMD_RX_SHORT;
+	tItems[25].cmd = CMD_RX_OPEN;
+	tItems[26].cmd = CMD_CM_DATA;
+	tItems[27].cmd = CMD_CS_DATA;
+	tItems[28].cmd = CMD_TX_RX_DELTA;
+	tItems[29].cmd = CMD_MUTUAL_SIGNAL;
+	tItems[30].cmd = CMD_MUTUAL_NO_BK;
+	tItems[31].cmd = CMD_MUTUAL_HAVE_BK;
+	tItems[32].cmd = CMD_RX_SHORT;
+	tItems[33].cmd = CMD_RX_SHORT;
+	tItems[34].cmd = CMD_PEAK_TO_PEAK;
+	tItems[48].cmd = CMD_PIN_TEST;
+}
+
+static void mp_test_run(char *item)
+{
+	int i;
+	char str[512] = {0};
+
+	if (item == NULL || strncmp(item, " ", strlen(item)) == 0 || core_mp.frame_len == 0) {
+		core_mp.final_result = MP_FAIL;
+		ipio_err("Invaild string (%s) or frame length (%d)
", item, core_mp.frame_len);
+		return;
+	}
+
+	ipio_debug("Test item = %s
", item);
+
+	for (i = 0; i < MP_TEST_ITEM; i++) {
+		if (strncmp(item, tItems[i].desp, strlen(item)) == 0) {
+			if (strlen(item) != strlen(tItems[i].desp))
+				continue;
+
+			/* Get parameters from ini */
+			parser_get_int_data(item, "enable", str, sizeof(str));
+			tItems[i].run = katoi(str);
+			parser_get_int_data(item, "spec option", str, sizeof(str));
+			tItems[i].spec_option = katoi(str);
+			parser_get_int_data(item, "type option", str, sizeof(str));
+			tItems[i].type_option = katoi(str);
+			parser_get_int_data(item, "frame count", str, sizeof(str));
+			tItems[i].frame_count = katoi(str);
+			parser_get_int_data(item, "trimmed mean", str, sizeof(str));
+			tItems[i].trimmed_mean = katoi(str);
+			parser_get_int_data(item, "lowest percentage", str, sizeof(str));
+			tItems[i].lowest_percentage = katoi(str);
+			parser_get_int_data(item, "highest percentage", str, sizeof(str));
+			tItems[i].highest_percentage = katoi(str);
+
+			/* Get pin test delay time */
+			if (tItems[i].catalog == PIN_TEST) {
+				parser_get_int_data(item, "test int pin", str, sizeof(str));
+				tItems[i].test_int_pin = katoi(str);
+				parser_get_int_data(item, "int pulse test", str, sizeof(str));
+				tItems[i].int_pulse_test = katoi(str);
+				parser_get_int_data(item, "delay time", str, sizeof(str));
+				tItems[i].delay_time = katoi(str);
+			}
+
+			/* Get TDF value from ini */
+			if (tItems[i].catalog == SHORT_TEST) {
+				parser_get_int_data(item, "v_tdf_1", str, sizeof(str));
+				tItems[i].v_tdf_1 = parser_get_tdf_value(str, tItems[i].catalog);
+				parser_get_int_data(item, "v_tdf_2", str, sizeof(str));
+				tItems[i].v_tdf_2 = parser_get_tdf_value(str, tItems[i].catalog);
+				parser_get_int_data(item, "h_tdf_1", str, sizeof(str));
+				tItems[i].h_tdf_1 = parser_get_tdf_value(str, tItems[i].catalog);
+				parser_get_int_data(item, "h_tdf_2", str, sizeof(str));
+				tItems[i].h_tdf_2 = parser_get_tdf_value(str, tItems[i].catalog);
+			} else {
+				parser_get_int_data(item, "v_tdf", str, sizeof(str));
+				tItems[i].v_tdf_1 = parser_get_tdf_value(str, tItems[i].catalog);
+				parser_get_int_data(item, "h_tdf", str, sizeof(str));
+				tItems[i].h_tdf_1 = parser_get_tdf_value(str, tItems[i].catalog);
+			}
+
+			/* Get threshold from ini structure in parser */
+			if (strncmp(item, "tx/rx delta", strlen(item)) == 0) {
+				parser_get_int_data(item, "tx max", str, sizeof(str));
+				core_mp.TxDeltaMax = katoi(str);
+				parser_get_int_data(item, "tx min", str, sizeof(str));
+				core_mp.TxDeltaMin = katoi(str);
+				parser_get_int_data(item, "rx max", str, sizeof(str));
+				core_mp.RxDeltaMax = katoi(str);
+				parser_get_int_data(item, "rx min", str, sizeof(str));
+				core_mp.RxDeltaMin = katoi(str);
+				ipio_debug("%s: Tx Max = %d, Tx Min = %d, Rx Max = %d,  Rx Min = %d
",
+						tItems[i].desp, core_mp.TxDeltaMax, core_mp.TxDeltaMin,
+						core_mp.RxDeltaMax, core_mp.RxDeltaMin);
+			} else {
+				parser_get_int_data(item, "max", str, sizeof(str));
+				tItems[i].max = katoi(str);
+				parser_get_int_data(item, "min", str, sizeof(str));
+				tItems[i].min = katoi(str);
+			}
+
+			ipio_debug("%s: run = %d, max = %d, min = %d, frame_count = %d
", tItems[i].desp,
+					tItems[i].run, tItems[i].max, tItems[i].min, tItems[i].frame_count);
+
+			ipio_debug("v_tdf_1 = %d, v_tdf_2 = %d, h_tdf_1 = %d, h_tdf_2 = %d", tItems[i].v_tdf_1,
+					tItems[i].v_tdf_2, tItems[i].h_tdf_1, tItems[i].h_tdf_2);
+
+			if (!tItems[i].run)
+				continue;
+
+			ipio_info("Run MP Test Item : %s
", tItems[i].desp);
+			tItems[i].do_test(i);
+
+			/* Check result before do retry (if enabled)  */
+			if (mp_comp_result_before_retry(i) == MP_FAIL) {
+				if (core_mp.retry) {
+					ipio_info("MP failed, doing retry
");
+					mp_do_retry(i, RETRY_COUNT);
+				}
+			}
+		}
+	}
+}
+
+static void mp_test_free(void)
+{
+	int i;
+
+	ipio_info("Free all allocated mem for MP
");
+
+	core_mp.final_result = MP_FAIL;
+
+	for (i = 0; i < ARRAY_SIZE(tItems); i++) {
+		tItems[i].run = false;
+		tItems[i].max_res = MP_FAIL;
+		tItems[i].min_res = MP_FAIL;
+		tItems[i].item_result = MP_PASS;
+		snprintf(tItems[i].result, 16, "%s", "FAIL");
+
+		if (tItems[i].catalog == TX_RX_DELTA) {
+				ipio_kfree((void **)&core_mp.rx_delta_buf);
+				ipio_kfree((void **)&core_mp.tx_delta_buf);
+				ipio_kfree((void **)&core_mp.tx_max_buf);
+				ipio_kfree((void **)&core_mp.tx_min_buf);
+				ipio_kfree((void **)&core_mp.rx_max_buf);
+				ipio_kfree((void **)&core_mp.rx_min_buf);
+		} else {
+			if (tItems[i].spec_option == BENCHMARK) {
+				ipio_kfree((void **)&tItems[i].bench_mark_max);
+				ipio_kfree((void **)&tItems[i].bench_mark_min);
+			}
+			ipio_kfree((void **)&tItems[i].result_buf);
+			ipio_kfree((void **)&tItems[i].max_buf);
+			ipio_kfree((void **)&tItems[i].min_buf);
+			vfree(tItems[i].buf);
+			tItems[i].buf = NULL;
+		}
+	}
+
+	ipio_kfree((void **)&frame1_cbk700);
+	ipio_kfree((void **)&frame1_cbk250);
+	ipio_kfree((void **)&frame1_cbk200);
+	ipio_kfree((void **)&frame_buf);
+	ipio_kfree((void **)&key_buf);
+}
+
+/* The method to copy results to user depends on what APK needs */
+static void mp_copy_ret_to_apk(char *buf)
+{
+	int i, run = 0;
+
+	if (!buf) {
+		ipio_err("apk buffer is null
");
+		return;
+	}
+
+	for (i = 0; i < MP_TEST_ITEM; i++) {
+		buf[i] = 2;
+		if (tItems[i].run) {
+			if (tItems[i].item_result == MP_FAIL)
+				buf[i] = 1;
+			else
+				buf[i] = 0;
+
+			run++;
+		}
+	}
+}
+
+int ilitek_tddi_mp_test_main(char *apk, bool lcm_on)
+{
+	int ret = 0;
+	char str[128] = {0}, ver[128] = {0};
+
+	ilitek_ini_file_data = (struct ini_file_data *)vmalloc(sizeof(struct ini_file_data) * PARSER_MAX_KEY_NUM);
+	if (ERR_ALLOC_MEM(ilitek_ini_file_data)) {
+		ipio_info("Failed to malloc ilitek_ini_file_data
");
+		goto out;
+	}
+
+	ilitek_tddi_mp_init_item();
+
+	ret = ilitek_tddi_mp_ini_parser(INI_NAME_PATH);
+	if (ret < 0) {
+		ipio_err("Failed to parsing INI file
");
+		goto out;
+	}
+
+	/* Compare both protocol version of ini and firmware */
+	parser_get_ini_key_value("pv5_4 command", "protocol", str);
+	snprintf(ver, sizeof(ver), "0x%s", str);
+	if ((str2hex(ver)) != (core_mp.protocol_ver >> 8)) {
+		ipio_err("ERROR! MP Protocol version is invaild, 0x%x
", str2hex(ver));
+		ret = -EINVAL;
+		goto out;
+	}
+
+	/* Read timing info from ini file */
+	ret = mp_get_timing_info();
+	if (ret < 0) {
+		ipio_err("Failed to get timing info from ini
");
+		goto out;
+	}
+
+	/* Do not chang the sequence of test */
+	mp_test_run("pin test ( int and rst )");
+	if (idev->protocol->ver >= PROTOCOL_VER_540) {
+		if (lcm_on) {
+			mp_test_run("noise peak to peak(with panel)");
+			mp_test_run("noise peak to peak(ic only)");
+			mp_test_run("short test -ili9881"); //compatible with old ini version.
+			mp_test_run("short test");
+			mp_test_run("open test(integration)_sp");
+			mp_test_run("raw data(no bk)");
+			mp_test_run("raw data(have bk)");
+			mp_test_run("calibration data(dac)");
+			mp_test_run("doze raw data");
+			mp_test_run("doze peak to peak");
+			mp_test_run("open test_c");
+			mp_test_run("touch deltac");
+		} else {
+			mp_test_run("raw data(have bk) (lcm off)");
+			mp_test_run("raw data(no bk) (lcm off)");
+			mp_test_run("noise peak to peak(with panel) (lcm off)");
+			mp_test_run("noise peak to peak(ic only) (lcm off)");
+			mp_test_run("raw data_td (lcm off)");
+			mp_test_run("peak to peak_td (lcm off)");
+		}
+	} else {
+		mp_test_run("untouch peak to peak");
+		mp_test_run("open test(integration)");
+		mp_test_run("open test(cap)");
+		mp_test_run("untouch cm data");
+		mp_test_run("pixel raw (no bk)");
+		mp_test_run("pixel raw (have bk)");
+	}
+
+	ret = mp_show_result(lcm_on);
+	mp_copy_ret_to_apk(apk);
+	mp_test_free();
+
+out:
+	ipio_vfree((void **)&ilitek_ini_file_data);
+	return ret;
+};
diff --git a/drivers/input/touchscreen/ili/ilitek_node.c b/drivers/input/touchscreen/ili/ilitek_node.c
new file mode 100644
index 000000000000..c59f95e1b036
--- /dev/null
+++ b/drivers/input/touchscreen/ili/ilitek_node.c
@@ -0,0 +1,2030 @@
+/*
+ * ILITEK Touch IC driver
+ *
+ * Copyright (C) 2011 ILI Technology Corporation.
+ *
+ * Author: Dicky Chiang <dicky_chiang@ilitek.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include "ilitek.h"
+
+#define USER_STR_BUFF		PAGE_SIZE
+#define IOCTL_I2C_BUFF		PAGE_SIZE
+#define ILITEK_IOCTL_MAGIC	100
+#define ILITEK_IOCTL_MAXNR	22
+
+#define ILITEK_IOCTL_I2C_WRITE_DATA		_IOWR(ILITEK_IOCTL_MAGIC, 0, u8*)
+#define ILITEK_IOCTL_I2C_SET_WRITE_LENGTH	_IOWR(ILITEK_IOCTL_MAGIC, 1, int)
+#define ILITEK_IOCTL_I2C_READ_DATA		_IOWR(ILITEK_IOCTL_MAGIC, 2, u8*)
+#define ILITEK_IOCTL_I2C_SET_READ_LENGTH	_IOWR(ILITEK_IOCTL_MAGIC, 3, int)
+
+#define ILITEK_IOCTL_TP_HW_RESET		_IOWR(ILITEK_IOCTL_MAGIC, 4, int)
+#define ILITEK_IOCTL_TP_POWER_SWITCH		_IOWR(ILITEK_IOCTL_MAGIC, 5, int)
+#define ILITEK_IOCTL_TP_REPORT_SWITCH		_IOWR(ILITEK_IOCTL_MAGIC, 6, int)
+#define ILITEK_IOCTL_TP_IRQ_SWITCH		_IOWR(ILITEK_IOCTL_MAGIC, 7, int)
+
+#define ILITEK_IOCTL_TP_DEBUG_LEVEL		_IOWR(ILITEK_IOCTL_MAGIC, 8, int)
+#define ILITEK_IOCTL_TP_FUNC_MODE		_IOWR(ILITEK_IOCTL_MAGIC, 9, int)
+
+#define ILITEK_IOCTL_TP_FW_VER			_IOWR(ILITEK_IOCTL_MAGIC, 10, u8*)
+#define ILITEK_IOCTL_TP_PL_VER			_IOWR(ILITEK_IOCTL_MAGIC, 11, u8*)
+#define ILITEK_IOCTL_TP_CORE_VER		_IOWR(ILITEK_IOCTL_MAGIC, 12, u8*)
+#define ILITEK_IOCTL_TP_DRV_VER			_IOWR(ILITEK_IOCTL_MAGIC, 13, u8*)
+#define ILITEK_IOCTL_TP_CHIP_ID			_IOWR(ILITEK_IOCTL_MAGIC, 14, u32*)
+
+#define ILITEK_IOCTL_TP_NETLINK_CTRL		_IOWR(ILITEK_IOCTL_MAGIC, 15, int*)
+#define ILITEK_IOCTL_TP_NETLINK_STATUS		_IOWR(ILITEK_IOCTL_MAGIC, 16, int*)
+
+#define ILITEK_IOCTL_TP_MODE_CTRL		_IOWR(ILITEK_IOCTL_MAGIC, 17, u8*)
+#define ILITEK_IOCTL_TP_MODE_STATUS		_IOWR(ILITEK_IOCTL_MAGIC, 18, int*)
+#define ILITEK_IOCTL_ICE_MODE_SWITCH		_IOWR(ILITEK_IOCTL_MAGIC, 19, int)
+
+#define ILITEK_IOCTL_TP_INTERFACE_TYPE		_IOWR(ILITEK_IOCTL_MAGIC, 20, u8*)
+#define ILITEK_IOCTL_TP_DUMP_FLASH		_IOWR(ILITEK_IOCTL_MAGIC, 21, int)
+#define ILITEK_IOCTL_TP_FW_UART_CTRL		_IOWR(ILITEK_IOCTL_MAGIC, 22, u8*)
+
+#ifdef CONFIG_COMPAT
+#define ILITEK_COMPAT_IOCTL_I2C_WRITE_DATA		_IOWR(ILITEK_IOCTL_MAGIC, 0, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_I2C_SET_WRITE_LENGTH	_IOWR(ILITEK_IOCTL_MAGIC, 1, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_I2C_READ_DATA		_IOWR(ILITEK_IOCTL_MAGIC, 2, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_I2C_SET_READ_LENGTH		_IOWR(ILITEK_IOCTL_MAGIC, 3, compat_uptr_t)
+
+#define ILITEK_COMPAT_IOCTL_TP_HW_RESET			_IOWR(ILITEK_IOCTL_MAGIC, 4, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_TP_POWER_SWITCH		_IOWR(ILITEK_IOCTL_MAGIC, 5, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_TP_REPORT_SWITCH		_IOWR(ILITEK_IOCTL_MAGIC, 6, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_TP_IRQ_SWITCH		_IOWR(ILITEK_IOCTL_MAGIC, 7, compat_uptr_t)
+
+#define ILITEK_COMPAT_IOCTL_TP_DEBUG_LEVEL		_IOWR(ILITEK_IOCTL_MAGIC, 8, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_TP_FUNC_MODE		_IOWR(ILITEK_IOCTL_MAGIC, 9, compat_uptr_t)
+
+#define ILITEK_COMPAT_IOCTL_TP_FW_VER			_IOWR(ILITEK_IOCTL_MAGIC, 10, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_TP_PL_VER			_IOWR(ILITEK_IOCTL_MAGIC, 11, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_TP_CORE_VER			_IOWR(ILITEK_IOCTL_MAGIC, 12, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_TP_DRV_VER			_IOWR(ILITEK_IOCTL_MAGIC, 13, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_TP_CHIP_ID			_IOWR(ILITEK_IOCTL_MAGIC, 14, compat_uptr_t)
+
+#define ILITEK_COMPAT_IOCTL_TP_NETLINK_CTRL		_IOWR(ILITEK_IOCTL_MAGIC, 15, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_TP_NETLINK_STATUS		_IOWR(ILITEK_IOCTL_MAGIC, 16, compat_uptr_t)
+
+#define ILITEK_COMPAT_IOCTL_TP_MODE_CTRL		_IOWR(ILITEK_IOCTL_MAGIC, 17, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_TP_MODE_STATUS		_IOWR(ILITEK_IOCTL_MAGIC, 18, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_ICE_MODE_SWITCH		_IOWR(ILITEK_IOCTL_MAGIC, 19, compat_uptr_t)
+
+#define ILITEK_COMPAT_IOCTL_TP_INTERFACE_TYPE		_IOWR(ILITEK_IOCTL_MAGIC, 20, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_TP_DUMP_FLASH		_IOWR(ILITEK_IOCTL_MAGIC, 21, compat_uptr_t)
+#define ILITEK_COMPAT_IOCTL_TP_FW_UART_CTRL		_IOWR(ILITEK_IOCTL_MAGIC, 22, compat_uptr_t)
+#endif
+
+struct record_state {
+	u8 touch_palm_state_e : 2;
+	u8 app_an_statu_e : 3;
+	u8 app_sys_check_bg_abnormal : 1;
+	u8 g_b_wrong_bg : 1;
+};
+
+unsigned char g_user_buf[USER_STR_BUFF] = {0};
+
+int str2hex(char *str)
+{
+	int strlen, result, intermed, intermedtop;
+	char *s = str;
+
+	while (*s != 0x0) {
+		s++;
+	}
+
+	strlen = (int)(s - str);
+	s = str;
+	if (*s != 0x30) {
+		return -1;
+	}
+
+	s++;
+
+	if (*s != 0x78 && *s != 0x58) {
+		return -1;
+	}
+	s++;
+
+	strlen = strlen - 3;
+	result = 0;
+	while (*s != 0x0) {
+		intermed = *s & 0x0f;
+		intermedtop = *s & 0xf0;
+		if (intermedtop == 0x60 || intermedtop == 0x40) {
+			intermed += 0x09;
+		}
+		intermed = intermed << (strlen << 2);
+		result = result | intermed;
+		strlen -= 1;
+		s++;
+	}
+	return result;
+}
+
+int katoi(char *str)
+{
+	int result = 0;
+	unsigned int digit;
+	int sign;
+
+	if (*str == '-') {
+		sign = 1;
+		str += 1;
+	} else {
+		sign = 0;
+		if (*str == '+') {
+			str += 1;
+		}
+	}
+
+	for (;; str += 1) {
+		digit = *str - '0';
+		if (digit > 9)
+			break;
+		result = (10 * result) + digit;
+	}
+
+	if (sign) {
+		return -result;
+	}
+	return result;
+}
+
+struct file_buffer {
+	char *ptr;
+	char fname[128];
+	int32_t flen;
+	int32_t max_zise;
+};
+
+static int file_write(struct file_buffer *file, bool new_open)
+{
+	struct file *f = NULL;
+	mm_segment_t fs;
+	loff_t pos;
+
+	if (file->ptr == NULL) {
+		ipio_err("str is invaild
");
+		return -1;
+	}
+
+	if (file->fname == NULL) {
+		ipio_err("file name is invaild
");
+		return -1;
+	}
+
+	if (file->flen >= file->max_zise) {
+		ipio_err("The length saved to file is too long !
");
+		return -1;
+	}
+
+	if (new_open)
+		f = filp_open(file->fname, O_WRONLY | O_CREAT | O_TRUNC, 644);
+	else
+		f = filp_open(file->fname, O_WRONLY | O_CREAT | O_APPEND, 644);
+
+	if (ERR_ALLOC_MEM(f)) {
+		ipio_err("Failed to open %s file
", file->fname);
+		return -1;
+	}
+
+	fs = get_fs();
+	set_fs(KERNEL_DS);
+	pos = 0;
+	vfs_write(f, file->ptr, file->flen, &pos);
+	set_fs(fs);
+	filp_close(f, NULL);
+	return 0;
+}
+
+static int debug_mode_get_data(struct file_buffer *file, u8 type, u32 frame_count)
+{
+	int ret;
+	int timeout = 50;
+	u8 cmd[2] = { 0 }, row, col;
+	s16 temp;
+	unsigned char *ptr;
+	int j;
+	u16 write_index = 0;
+
+	idev->debug_node_open = false;
+	idev->debug_data_frame = 0;
+	row = idev->ych_num;
+	col = idev->xch_num;
+
+	mutex_lock(&idev->touch_mutex);
+	cmd[0] = 0xFA;
+	cmd[1] = type;
+	ret = idev->write(cmd, 2);
+	idev->debug_node_open = true;
+	mutex_unlock(&idev->touch_mutex);
+	if (ret < 0) {
+		ipio_err("Write 0xFA,0x%x failed
", type);
+		return ret;
+	}
+
+	while ((write_index < frame_count) && (timeout > 0)) {
+		ipio_info("frame = %d,index = %d,count = %d
", write_index, write_index % 1024, idev->debug_data_frame);
+		if ((write_index % 1024) < idev->debug_data_frame) {
+			mutex_lock(&idev->touch_mutex);
+			file->flen = 0;
+			memset(file->ptr, 0, file->max_zise);
+			file->flen += snprintf(file->ptr + file->flen, (file->max_zise - file->flen), "

Frame%d,", write_index);
+			for (j = 0; j < col; j++)
+				file->flen += snprintf(file->ptr + file->flen, (file->max_zise - file->flen), "[X%d] ,", j);
+			ptr = &idev->debug_buf[write_index%1024][35];
+			for (j = 0; j < row * col; j++, ptr += 2) {
+				temp = (*ptr << 8) + *(ptr + 1);
+				if (j % col == 0)
+					file->flen += snprintf(file->ptr + file->flen, (file->max_zise - file->flen), "
[Y%d] ,", (j / col));
+				file->flen += snprintf(file->ptr + file->flen, (file->max_zise - file->flen), "%d, ", temp);
+			}
+			file->flen += snprintf(file->ptr + file->flen, (file->max_zise - file->flen), "
[X] ,");
+			for (j = 0; j < row + col; j++, ptr += 2) {
+				temp = (*ptr << 8) + *(ptr + 1);
+				if (j == col)
+					file->flen += snprintf(file->ptr + file->flen, (file->max_zise - file->flen), "
[Y] ,");
+				file->flen += snprintf(file->ptr + file->flen, (file->max_zise - file->flen), "%d, ", temp);
+			}
+			file_write(file, false);
+			write_index++;
+			mutex_unlock(&idev->touch_mutex);
+			timeout = 50;
+		}
+
+		if (write_index % 1024 == 0 && idev->debug_data_frame == 1024)
+			idev->debug_data_frame = 0;
+
+		mdelay(100);/*get one frame data taken around 130ms*/
+		timeout--;
+		if (timeout == 0)
+			ipio_err("debug mode get data timeout!
");
+	}
+	idev->debug_node_open = false;
+	return 0;
+}
+
+static int dev_mkdir(char *name, umode_t mode)
+{
+	int err;
+	mm_segment_t fs;
+
+	ipio_info("mkdir: %s
", name);
+	fs = get_fs();
+	set_fs(KERNEL_DS);
+	err = ksys_mkdir(name, mode);
+	set_fs(fs);
+
+	return err;
+}
+
+static ssize_t ilitek_proc_get_delta_data_read(struct file *pFile, char __user *buf, size_t size, loff_t *pos)
+{
+	s16 *delta = NULL;
+	int row = 0, col = 0,  index = 0;
+	int ret, i, x, y;
+	int read_length = 0;
+	u8 cmd[2] = {0};
+	u8 *data = NULL;
+
+	if (*pos != 0)
+		return 0;
+
+	memset(g_user_buf, 0, USER_STR_BUFF * sizeof(unsigned char));
+
+	ilitek_tddi_wq_ctrl(WQ_ESD, DISABLE);
+	ilitek_tddi_wq_ctrl(WQ_BAT, DISABLE);
+	mutex_lock(&idev->touch_mutex);
+
+	row = idev->ych_num;
+	col = idev->xch_num;
+	read_length = 4 + 2 * row * col + 1 ;
+
+	ipio_info("read length = %d
", read_length);
+
+	data = kcalloc(read_length + 1, sizeof(u8), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(data)) {
+		ipio_err("Failed to allocate data mem
");
+		return 0;
+	}
+
+	delta = kcalloc(P5_X_DEBUG_MODE_PACKET_LENGTH, sizeof(s32), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(delta)) {
+		ipio_err("Failed to allocate delta mem
");
+		return 0;
+	}
+
+	cmd[0] = 0xB7;
+	cmd[1] = 0x1; //get delta
+	ret = idev->write(cmd, sizeof(cmd));
+	if (ret < 0) {
+		ipio_err("Failed to write 0xB7,0x1 command, %d
", ret);
+		goto out;
+	}
+
+	msleep(120);
+
+	/* read debug packet header */
+	ret = idev->read(data, read_length);
+	if (ret < 0) {
+		ipio_err("Read debug packet header failed, %d
", ret);
+		goto out;
+	}
+
+	cmd[1] = 0x03; //switch to normal mode
+	ret = idev->write(cmd, sizeof(cmd));
+	if (ret < 0) {
+		ipio_err("Failed to write 0xB7,0x3 command, %d
", ret);
+		goto out;
+	}
+
+	for (i = 4, index = 0; index < row * col * 2; i += 2, index++)
+		delta[index] = (data[i] << 8) + data[i + 1];
+
+	size = snprintf(g_user_buf + size, PAGE_SIZE - size, "======== Deltadata ========
");
+	ipio_info("======== Deltadata ========
");
+
+	size += snprintf(g_user_buf + size, PAGE_SIZE - size,
+		"Header 0x%x ,Type %d, Length %d
", data[0], data[1], (data[2] << 8) | data[3]);
+	ipio_info("Header 0x%x ,Type %d, Length %d
", data[0], data[1], (data[2] << 8) | data[3]);
+
+	// print delta data
+	for (y = 0; y < row; y++) {
+		size += snprintf(g_user_buf + size, PAGE_SIZE - size, "[%2d] ", (y+1));
+		ipio_info("[%2d] ", (y+1));
+
+		for (x = 0; x < col; x++) {
+			int shift = y * col + x;
+			size += snprintf(g_user_buf + size, PAGE_SIZE - size, "%5d", delta[shift]);
+			printk(KERN_CONT "%5d", delta[shift]);
+		}
+		size += snprintf(g_user_buf + size, PAGE_SIZE - size, "
");
+		printk(KERN_CONT "
");
+	}
+
+	if (copy_to_user(buf, g_user_buf, size))
+		ipio_err("Failed to copy data to user space
");
+
+	*pos += size;
+
+out:
+	mutex_unlock(&idev->touch_mutex);
+	ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+	ilitek_tddi_wq_ctrl(WQ_BAT, ENABLE);
+	ipio_kfree((void **)&data);
+	ipio_kfree((void **)&delta);
+	return 0;
+}
+
+static ssize_t ilitek_proc_fw_get_raw_data_read(struct file *pFile, char __user *buf, size_t size, loff_t *pos)
+{
+	s16 *rawdata = NULL;
+	int row = 0, col = 0,  index = 0;
+	int ret, i, x, y;
+	int read_length = 0;
+	u8 cmd[2] = {0};
+	u8 *data = NULL;
+
+	if (*pos != 0)
+		return 0;
+
+	memset(g_user_buf, 0, USER_STR_BUFF * sizeof(unsigned char));
+
+	ilitek_tddi_wq_ctrl(WQ_ESD, DISABLE);
+	ilitek_tddi_wq_ctrl(WQ_BAT, DISABLE);
+	mutex_lock(&idev->touch_mutex);
+
+	row = idev->ych_num;
+	col = idev->xch_num;
+	read_length = 4 + 2 * row * col + 1 ;
+
+	ipio_info("read length = %d
", read_length);
+
+	data = kcalloc(read_length + 1, sizeof(u8), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(data)) {
+			ipio_err("Failed to allocate data mem
");
+			return 0;
+	}
+
+	rawdata = kcalloc(P5_X_DEBUG_MODE_PACKET_LENGTH, sizeof(s32), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(rawdata)) {
+			ipio_err("Failed to allocate rawdata mem
");
+			return 0;
+	}
+
+	cmd[0] = 0xB7;
+	cmd[1] = 0x2; //get rawdata
+	ret = idev->write(cmd, sizeof(cmd));
+	if (ret < 0) {
+		ipio_err("Failed to write 0xB7,0x2 command, %d
", ret);
+		goto out;
+	}
+
+	//msleep(20);
+	msleep(120);
+
+	/* read debug packet header */
+	ret = idev->read(data, read_length);
+	if (ret < 0) {
+		ipio_err("Read debug packet header failed, %d
", ret);
+		goto out;
+	}
+
+	cmd[1] = 0x03; //switch to normal mode
+	ret = idev->write(cmd, sizeof(cmd));
+	if (ret < 0) {
+		ipio_err("Failed to write 0xB7,0x3 command, %d
", ret);
+		goto out;
+	}
+
+	for (i = 4, index = 0; index < row * col * 2; i += 2, index++)
+		rawdata[index] = (data[i] << 8) + data[i + 1];
+
+	size = snprintf(g_user_buf, PAGE_SIZE, "======== RawData ========
");
+	ipio_info("======== RawData ========
");
+
+	size += snprintf(g_user_buf + size, PAGE_SIZE - size,
+			"Header 0x%x ,Type %d, Length %d
", data[0], data[1], (data[2] << 8) | data[3]);
+	ipio_info("Header 0x%x ,Type %d, Length %d
", data[0], data[1], (data[2] << 8) | data[3]);
+
+	// print raw data
+	for (y = 0; y < row; y++) {
+		size += snprintf(g_user_buf + size, PAGE_SIZE - size, "[%2d] ", (y+1));
+		ipio_info("[%2d] ", (y+1));
+
+		for (x = 0; x < col; x++) {
+			int shift = y * col + x;
+			size += snprintf(g_user_buf + size, PAGE_SIZE - size, "%5d", rawdata[shift]);
+			printk(KERN_CONT "%5d", rawdata[shift]);
+		}
+		size += snprintf(g_user_buf + size, PAGE_SIZE - size, "
");
+		printk(KERN_CONT "
");
+	}
+
+	if (copy_to_user(buf, g_user_buf, size))
+		ipio_err("Failed to copy data to user space
");
+
+	*pos += size;
+
+out:
+	mutex_unlock(&idev->touch_mutex);
+	ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+	ilitek_tddi_wq_ctrl(WQ_BAT, ENABLE);
+	ipio_kfree((void **)&data);
+	ipio_kfree((void **)&rawdata);
+	return 0;
+}
+
+static ssize_t ilitek_proc_fw_pc_counter_read(struct file *pFile, char __user *buf, size_t size, loff_t *pos)
+{
+	u32 pc;
+
+	if (*pos != 0)
+		return 0;
+
+	memset(g_user_buf, 0, USER_STR_BUFF * sizeof(unsigned char));
+
+	pc = ilitek_tddi_ic_get_pc_counter();
+	size = snprintf(g_user_buf, PAGE_SIZE, "pc counter = 0x%x
", pc);
+
+	if (copy_to_user(buf, g_user_buf, size))
+		ipio_err("Failed to copy data to user space
");
+
+	*pos += size;
+	return size;
+}
+
+u32 rw_reg[5] = {0};
+static ssize_t ilitek_proc_rw_tp_reg_read(struct file *pFile, char __user *buf, size_t size, loff_t *pos)
+{
+	int ret = 0;
+	bool mcu_on = 0, read = 0;
+	u32 type, addr, read_data, write_data, write_len, stop_mcu;
+	bool esd_en = idev->wq_esd_ctrl, bat_en = idev->wq_bat_ctrl;
+
+	if (*pos != 0)
+		return 0;
+
+	stop_mcu = rw_reg[0];
+	type = rw_reg[1];
+	addr = rw_reg[2];
+	write_data = rw_reg[3];
+	write_len = rw_reg[4];
+
+	ipio_info("stop_mcu = %d
", rw_reg[0]);
+
+	if (esd_en)
+		ilitek_tddi_wq_ctrl(WQ_ESD, DISABLE);
+	if (bat_en)
+		ilitek_tddi_wq_ctrl(WQ_BAT, DISABLE);
+
+	mutex_lock(&idev->touch_mutex);
+
+	if (stop_mcu == mcu_on) {
+		ret = ilitek_ice_mode_ctrl(ENABLE, ON);
+		if (ret < 0) {
+			ipio_err("Failed to enter ICE mode, ret = %d
", ret);
+			return -1;
+		}
+	} else {
+		ret = ilitek_ice_mode_ctrl(ENABLE, OFF);
+		if (ret < 0) {
+			ipio_err("Failed to enter ICE mode, ret = %d
", ret);
+			return -1;
+		}
+	}
+
+	if (type == read) {
+		if (ilitek_ice_mode_read(addr, &read_data, sizeof(u32)) < 0)
+			ipio_err("Read data error
");
+		ipio_info("READ:addr = 0x%06x, read = 0x%08x
", addr, read_data);
+		size = snprintf(g_user_buf, PAGE_SIZE, "READ:addr = 0x%06x, read = 0x%08x
", addr, read_data);
+	} else {
+		if (ilitek_ice_mode_write(addr, write_data, write_len) < 0)
+			ipio_err("Write data error
");
+		ipio_info("WRITE:addr = 0x%06x, write = 0x%08x, len =%d byte
", addr, write_data, write_len);
+		size = snprintf(g_user_buf, PAGE_SIZE, "WRITE:addr = 0x%06x, write = 0x%08x, len =%d byte
", addr, write_data, write_len);
+	}
+
+	if (stop_mcu == mcu_on) {
+		ret = ilitek_ice_mode_ctrl(DISABLE, ON);
+		if (ret < 0) {
+			ipio_err("Failed to disable ICE mode, ret = %d
", ret);
+			return -1;
+		}
+	} else {
+		ret = ilitek_ice_mode_ctrl(DISABLE, OFF);
+		if (ret < 0) {
+			ipio_err("Failed to disable ICE mode, ret = %d
", ret);
+			return -1;
+		}
+	}
+
+	if (copy_to_user(buf, g_user_buf, size))
+		ipio_err("Failed to copy data to user space
");
+
+	*pos += size;
+	mutex_unlock(&idev->touch_mutex);
+
+	if (esd_en)
+		ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+	if (bat_en)
+		ilitek_tddi_wq_ctrl(WQ_BAT, ENABLE);
+
+	return size;
+}
+
+static ssize_t ilitek_proc_rw_tp_reg_write(struct file *filp, const char *buff, size_t size, loff_t *pos)
+{
+	char *token = NULL, *cur = NULL;
+	char cmd[256] = { 0 };
+	u32 count = 0;
+
+	if ((size - 1) > sizeof(cmd)) {
+		ipio_err("ERROR! input length is larger than local buffer
");
+		return -1;
+	}
+
+	if (buff != NULL) {
+		if (copy_from_user(cmd, buff, size - 1)) {
+			ipio_info("Failed to copy data from user space
");
+			return -1;
+		}
+	}
+	token = cur = cmd;
+	while ((token = strsep(&cur, ",")) != NULL) {
+		rw_reg[count] = str2hex(token);
+		ipio_info("rw_reg[%d] = 0x%x
", count, rw_reg[count]);
+		count++;
+	}
+	return size;
+}
+
+static ssize_t ilitek_proc_debug_switch_read(struct file *pFile, char __user *buff, size_t size, loff_t *pos)
+{
+	if (*pos != 0)
+		return 0;
+
+	memset(g_user_buf, 0, USER_STR_BUFF * sizeof(unsigned char));
+
+	idev->debug_node_open = !idev->debug_node_open;
+
+	ipio_info(" %s debug_flag message = %x
", idev->debug_node_open ? "Enabled" : "Disabled", idev->debug_node_open);
+
+	size = snprintf(g_user_buf, USER_STR_BUFF * sizeof(unsigned char), "debug_node_open : %s
", idev->debug_node_open ? "Enabled" : "Disabled");
+
+	*pos += size;
+
+	if (copy_to_user(buff, g_user_buf, size))
+		ipio_err("Failed to copy data to user space
");
+
+	return size;
+}
+
+static ssize_t ilitek_proc_debug_message_read(struct file *filp, char __user *buff, size_t size, loff_t *pos)
+{
+	unsigned long p = *pos;
+	int i = 0;
+	int send_data_len = 0;
+	int ret = 0;
+	int data_count = 0;
+	int one_data_bytes = 0;
+	int need_read_data_len = 0;
+	int type = 0;
+	unsigned char *tmpbuf = NULL;
+	unsigned char tmpbufback[128] = {0};
+
+	mutex_lock(&idev->debug_read_mutex);
+
+	while (idev->debug_data_frame <= 0) {
+		if (filp->f_flags & O_NONBLOCK) {
+			return -EAGAIN;
+		}
+		wait_event_interruptible(idev->inq, idev->debug_data_frame > 0);
+	}
+
+	mutex_lock(&idev->debug_mutex);
+
+	tmpbuf = vmalloc(4096);	/* buf size if even */
+	if (ERR_ALLOC_MEM(tmpbuf)) {
+		ipio_err("buffer vmalloc error
");
+		send_data_len += snprintf(tmpbufback + send_data_len, sizeof(tmpbufback), "buffer vmalloc error
");
+		ret = copy_to_user(buff, tmpbufback, send_data_len); /*idev->debug_buf[0] */
+		goto out;
+	}
+
+	if (idev->debug_data_frame > 0) {
+		if (idev->debug_buf[0][0] == P5_X_DEMO_PACKET_ID) {
+			need_read_data_len = 43;
+		} else if (idev->debug_buf[0][0] == P5_X_I2CUART_PACKET_ID) {
+			type = idev->debug_buf[0][3] & 0x0F;
+
+			data_count = idev->debug_buf[0][1] * idev->debug_buf[0][2];
+
+			if (type == 0 || type == 1 || type == 6) {
+				one_data_bytes = 1;
+			} else if (type == 2 || type == 3) {
+				one_data_bytes = 2;
+			} else if (type == 4 || type == 5) {
+				one_data_bytes = 4;
+			}
+			need_read_data_len = data_count * one_data_bytes + 1 + 5;
+		} else if (idev->debug_buf[0][0] == P5_X_DEBUG_PACKET_ID) {
+			send_data_len = 0;	/* idev->debug_buf[0][1] - 2; */
+			need_read_data_len = 2040;
+		}
+
+		for (i = 0; i < need_read_data_len; i++) {
+			send_data_len += snprintf(tmpbuf + send_data_len, sizeof(tmpbufback), "%02X", idev->debug_buf[0][i]);
+			if (send_data_len >= 4096) {
+				ipio_err("send_data_len = %d set 4096 i = %d
", send_data_len, i);
+				send_data_len = 4096;
+				break;
+			}
+		}
+
+		send_data_len += snprintf(tmpbuf + send_data_len, sizeof(tmpbufback), "

");
+
+		if (p == 5 || size == 4096 || size == 2048) {
+			idev->debug_data_frame--;
+
+			if (idev->debug_data_frame < 0)
+				idev->debug_data_frame = 0;
+
+			for (i = 1; i <= idev->debug_data_frame; i++)
+				memcpy(idev->debug_buf[i - 1], idev->debug_buf[i], 2048);
+		}
+
+	} else {
+		ipio_err("no data send
");
+		send_data_len += snprintf(tmpbuf + send_data_len, sizeof(tmpbufback), "no data send
");
+	}
+
+	/* Preparing to send debug data to user */
+	if (size == 4096)
+		ret = copy_to_user(buff, tmpbuf, send_data_len);
+	else
+		ret = copy_to_user(buff, tmpbuf + p, send_data_len - p);
+
+	/* ipio_err("send_data_len = %d
", send_data_len); */
+	if (send_data_len <= 0 || send_data_len > 4096) {
+		ipio_err("send_data_len = %d set 4096
", send_data_len);
+		send_data_len = 4096;
+	}
+
+	if (ret) {
+		ipio_err("copy_to_user err
");
+		ret = -EFAULT;
+	} else {
+		*pos += send_data_len;
+		ret = send_data_len;
+		ipio_debug("Read %d bytes(s) from %ld
", send_data_len, p);
+	}
+
+out:
+	mutex_unlock(&idev->debug_mutex);
+	mutex_unlock(&idev->debug_read_mutex);
+	ipio_vfree((void **)&tmpbuf);
+	return send_data_len;
+}
+
+static ssize_t ilitek_proc_get_debug_mode_data_read(struct file *filp, char __user *buff, size_t size, loff_t *pos)
+{
+	int ret;
+	struct file_buffer csv;
+
+	if (*pos != 0)
+		return 0;
+
+	/* initialize file */
+	memset(csv.fname, 0, sizeof(csv.fname));
+	snprintf(csv.fname, sizeof(csv.fname), "%s", DEBUG_DATA_FILE_PATH);
+	csv.flen = 0;
+	csv.max_zise = DEBUG_DATA_FILE_SIZE;
+	csv.ptr = vmalloc(csv.max_zise);
+
+	if (ERR_ALLOC_MEM(csv.ptr)) {
+		ipio_err("Failed to allocate CSV mem
");
+		goto out;
+	}
+
+	/* save data to csv */
+	ipio_info("Get Raw data %d frame
", idev->raw_count);
+	ipio_info("Get Delta data %d frame
", idev->delta_count);
+	csv.flen += snprintf(csv.ptr + csv.flen, (csv.max_zise - csv.flen), "Get Raw data %d frame
", idev->raw_count);
+	csv.flen += snprintf(csv.ptr + csv.flen, (csv.max_zise - csv.flen), "Get Delta data %d frame
", idev->delta_count);
+	file_write(&csv, true);
+
+	/* change to debug mode */
+	ret = ilitek_tddi_switch_tp_data_format(DATA_FORMAT_DEBUG);
+	if (ret < 0)
+		goto out;
+
+	/* get raw data */
+	csv.flen = 0;
+	memset(csv.ptr, 0, csv.max_zise);
+	csv.flen += snprintf(csv.ptr + csv.flen, (csv.max_zise - csv.flen), "

=======Raw data=======");
+	file_write(&csv, false);
+	ret = debug_mode_get_data(&csv, P5_X_FW_RAW_DATA_MODE, idev->raw_count);
+	if (ret < 0)
+		goto out;
+
+	/* get delta data */
+	csv.flen = 0;
+	memset(csv.ptr, 0, csv.max_zise);
+	csv.flen += snprintf(csv.ptr + csv.flen, (csv.max_zise - csv.flen), "

=======Delta data=======");
+	file_write(&csv, false);
+	ret = debug_mode_get_data(&csv, P5_X_FW_DELTA_DATA_MODE, idev->delta_count);
+	if (ret < 0)
+		goto out;
+
+	/* change to demo mode */
+	ret = ilitek_tddi_switch_tp_data_format(DATA_FORMAT_DEMO);
+	if (ret < 0)
+		goto out;
+
+out:
+	ipio_vfree((void **)&csv.ptr);
+	return 0;
+}
+
+static ssize_t ilitek_proc_get_debug_mode_data_write(struct file *filp, const char *buff, size_t size, loff_t *pos)
+{
+	char *token = NULL, *cur = NULL;
+	char cmd[256] = {0};
+	u8 temp[256] = {0}, count = 0;
+
+	if ((size - 1) > sizeof(cmd)) {
+		ipio_err("ERROR! input length is larger than local buffer
");
+		return -1;
+	}
+
+	if (buff != NULL) {
+		if (copy_from_user(cmd, buff, size - 1)) {
+			ipio_info("Failed to copy data from user space
");
+			return -1;
+		}
+	}
+
+	ipio_info("size = %d, cmd = %s
", (int)size, cmd);
+	token = cur = cmd;
+	while ((token = strsep(&cur, ",")) != NULL) {
+		temp[count] = str2hex(token);
+		ipio_info("temp[%d] = %d
", count, temp[count]);
+		count++;
+	}
+
+	idev->raw_count = ((temp[0] << 8) | temp[1]);
+	idev->delta_count = ((temp[2] << 8) | temp[3]);
+	idev->bg_count = ((temp[4] << 8) | temp[5]);
+
+	ipio_info("Raw_count = %d, Delta_count = %d, BG_count = %d
", idev->raw_count, idev->delta_count, idev->bg_count);
+	return size;
+}
+
+static ssize_t ilitek_node_mp_lcm_on_test_read(struct file *filp, char __user *buff, size_t size, loff_t *pos)
+{
+	int ret = 0;
+	char apk_ret[100] = {0};
+	bool esd_en = idev->wq_esd_ctrl, bat_en = idev->wq_bat_ctrl;
+
+	ipio_info("Run MP test with LCM on
");
+
+	if (*pos != 0)
+		return 0;
+
+	mutex_lock(&idev->touch_mutex);
+
+	/* Create the directory for mp_test result */
+	if ((dev_mkdir(CSV_LCM_ON_PATH, S_IRUGO | S_IWUSR)) != 0)
+		ipio_err("Failed to create directory for mp_test
");
+
+	if (esd_en)
+		ilitek_tddi_wq_ctrl(WQ_ESD, DISABLE);
+	if (bat_en)
+		ilitek_tddi_wq_ctrl(WQ_BAT, DISABLE);
+
+	ret = ilitek_tddi_mp_test_handler(apk_ret, ON);
+	ipio_info("MP TEST %s
", (ret < 0) ? "FAIL" : "PASS");
+
+	if (copy_to_user((char *)buff, apk_ret, sizeof(apk_ret)))
+		ipio_err("Failed to copy data to user space
");
+
+	if (esd_en)
+		ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+	if (bat_en)
+		ilitek_tddi_wq_ctrl(WQ_BAT, ENABLE);
+
+	mutex_unlock(&idev->touch_mutex);
+	return ret;
+}
+
+static ssize_t ilitek_node_mp_lcm_off_test_read(struct file *filp, char __user *buff, size_t size, loff_t *pos)
+{
+	int ret = 0;
+	char apk_ret[100] = {0};
+	bool esd_en = idev->wq_esd_ctrl, bat_en = idev->wq_bat_ctrl;
+
+	ipio_info("Run MP test with LCM off
");
+
+	if (*pos != 0)
+		return 0;
+
+	mutex_lock(&idev->touch_mutex);
+
+	/* Create the directory for mp_test result */
+	ret = dev_mkdir(CSV_LCM_OFF_PATH, S_IRUGO | S_IWUSR);
+	if (ret != 0)
+		ipio_err("Failed to create directory for mp_test
");
+
+	if (esd_en)
+		ilitek_tddi_wq_ctrl(WQ_ESD, DISABLE);
+	if (bat_en)
+		ilitek_tddi_wq_ctrl(WQ_BAT, DISABLE);
+
+	ret = ilitek_tddi_mp_test_handler(apk_ret, OFF);
+	ipio_info("MP TEST %s
", (ret < 0) ? "FAIL" : "PASS");
+
+	if (copy_to_user((char *)buff, apk_ret, sizeof(apk_ret)))
+		ipio_err("Failed to copy data to user space
");
+
+	if (esd_en)
+		ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+	if (bat_en)
+		ilitek_tddi_wq_ctrl(WQ_BAT, ENABLE);
+
+	mutex_unlock(&idev->touch_mutex);
+	return ret;
+}
+
+static ssize_t ilitek_proc_fw_process_read(struct file *filp, char __user *buff, size_t size, loff_t *pos)
+{
+	u32 len = 0;
+
+	if (*pos != 0)
+		return 0;
+
+	memset(g_user_buf, 0, USER_STR_BUFF * sizeof(unsigned char));
+
+	len = snprintf(g_user_buf, USER_STR_BUFF * sizeof(unsigned char), "%02d
", idev->fw_update_stat);
+
+	ipio_info("update status = %d
", idev->fw_update_stat);
+
+	if (copy_to_user((char *)buff, &idev->fw_update_stat, len))
+		ipio_err("Failed to copy data to user space
");
+
+	*pos = len;
+	return len;
+}
+
+static ssize_t ilitek_node_fw_upgrade_read(struct file *filp, char __user *buff, size_t size, loff_t *pos)
+{
+	int ret = 0;
+	u32 len = 0;
+	bool esd_en = idev->wq_esd_ctrl, bat_en = idev->wq_bat_ctrl;
+
+	ipio_info("Preparing to upgarde firmware
");
+
+	if (*pos != 0)
+		return 0;
+
+	mutex_lock(&idev->touch_mutex);
+
+	memset(g_user_buf, 0, USER_STR_BUFF * sizeof(unsigned char));
+
+	if (esd_en)
+		ilitek_tddi_wq_ctrl(WQ_ESD, DISABLE);
+	if (bat_en)
+		ilitek_tddi_wq_ctrl(WQ_BAT, DISABLE);
+
+	idev->force_fw_update = ENABLE;
+
+	ret = ilitek_tddi_fw_upgrade_handler(NULL);
+	len = snprintf(g_user_buf, USER_STR_BUFF * sizeof(unsigned char), "upgrade firwmare %s
", (ret != 0) ? "failed" : "succeed");
+
+	idev->force_fw_update = DISABLE;
+
+	if (copy_to_user((u32 *) buff, g_user_buf, len))
+		ipio_err("Failed to copy data to user space
");
+
+	if (esd_en)
+		ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+	if (bat_en)
+		ilitek_tddi_wq_ctrl(WQ_BAT, ENABLE);
+
+	mutex_unlock(&idev->touch_mutex);
+
+	return ret;
+}
+
+static ssize_t ilitek_proc_debug_level_read(struct file *filp, char __user *buff, size_t size, loff_t *pos)
+{
+	if (*pos != 0)
+		return 0;
+
+	memset(g_user_buf, 0, USER_STR_BUFF * sizeof(unsigned char));
+
+	ipio_debug_level = !ipio_debug_level;
+
+	ipio_info(" %s debug level = %x
", ipio_debug_level ? "Enable" : "Disable", ipio_debug_level);
+
+	size = snprintf(g_user_buf, USER_STR_BUFF * sizeof(unsigned char), "debug level : %s
", ipio_debug_level ? "Enable" : "Disable");
+
+	*pos += size;
+
+	if (copy_to_user((u32 *) buff, g_user_buf, size))
+		ipio_err("Failed to copy data to user space
");
+
+	return size;
+}
+
+int get_tp_recore_ctrl(int data)
+{
+	int ret = 0;
+
+	switch((int)data) {
+
+	case ENABLE_RECORD:
+		ipio_info("recore enable");
+		ret = ilitek_tddi_ic_func_ctrl("tp_recore", 1);
+		mdelay(200);
+		break;
+	case DATA_RECORD:
+		mdelay(50);
+		ipio_info("Get data");
+		ret = ilitek_tddi_ic_func_ctrl("tp_recore", 2);
+		if (ret < 0) {
+			ipio_err("cmd fail
");
+			goto out;
+		}
+
+		ret = get_tp_recore_data();
+		if (ret < 0)
+			ipio_err("get data fail
");
+
+		ipio_info("recore reset");
+		ret = ilitek_tddi_ic_func_ctrl("tp_recore", 3);
+		if (ret < 0) {
+			ipio_err("cmd fail
");
+			goto out;
+		}
+		break;
+	case DISABLE_RECORD:
+		ipio_info("recore disable");
+		ret = ilitek_tddi_ic_func_ctrl("tp_recore", 0);
+		break;
+
+	}
+out:
+	return ret;
+
+}
+
+int get_tp_recore_data(void)
+{
+	u8 buf[8] = {0}, record_case = 0;
+	s8 index;
+	u16 *raw = NULL, *raw_ptr = NULL, frame_len;
+	u32 base_addr = 0x20000, addr, len, *ptr, i, j;
+	struct record_state record_stat;
+	bool ice = atomic_read(&idev->ice_stat);
+
+	if (idev->read(buf, sizeof(buf)) < 0) {
+		ipio_err("Get info fail
");
+		return -1;
+	}
+
+	addr = ((buf[0] << 8) | buf[1]) + base_addr;
+	len = ((buf[2] << 8) | buf[3]);
+	index = buf[4];
+	record_case = buf[6];
+	ipio_memcpy(&record_stat, &buf[7], 1, 1);
+	ipio_info("addr = 0x%x, len = %d, lndex = 0x%d, record_case = 0x%x
",
+		addr, len, index, record_case);
+	ilitek_dump_data(buf, 8, sizeof(buf), 0, "all record bytes");
+
+	raw = kcalloc(len, sizeof(u8), GFP_ATOMIC);
+	if (ERR_ALLOC_MEM(raw)) {
+		ipio_err("Failed to allocate packet memory, %ld
", PTR_ERR(raw));
+		return -1;
+	}
+	ptr = (u32*)raw;
+
+	if (!ice)
+		ilitek_ice_mode_ctrl(ENABLE, ON);
+
+	for (i = 0, j = 0; i < len; i += 4, j++)
+		ptr[j] = ilitek_ice_mode_read((addr + i), &ptr[j], sizeof(u32));
+
+	frame_len = (len / 6);
+	for (i = 0; i < 3; i ++) {
+		raw_ptr = raw + (index * frame_len);
+		ilitek_dump_data(raw_ptr, 16, frame_len, idev->xch_num, "recore_data");
+		index--;
+		if(index < 0)
+			index = 2;
+	}
+
+	if (!ice)
+		ilitek_ice_mode_ctrl(DISABLE, ON);
+
+	if (record_case == 2) {
+		ipio_info("tp_palm_stat = %d
", record_stat.touch_palm_state_e);
+		ipio_info("app_an_stat = %d
", record_stat.app_an_statu_e);
+		ipio_info("app_check_abnor = %d
", record_stat.app_sys_check_bg_abnormal);
+		ipio_info("wrong_bg = %d
", record_stat.g_b_wrong_bg);
+	}
+
+	ipio_kfree((void **)&raw);
+
+	return 0;
+}
+
+void gesture_fail_reason(bool enable)
+{
+
+	u8 cmd[24] = {0};
+
+	/* set symbol */
+	if (ilitek_tddi_ic_func_ctrl("knock_en", 0x8) < 0)
+		ipio_err("set symbol failed");
+
+	/* enable gesture fail reason */
+	cmd[0] = 0x01;
+	cmd[1] = 0x0A;
+	cmd[2] = 0x10;
+	if (enable)
+		cmd[3] = 0x01;
+	else
+		cmd[3] = 0x00;
+	cmd[4] = 0xFF;
+	cmd[5] = 0xFF;
+	if ((idev->write(cmd, 6)) < 0)
+		ipio_err("enable gesture fail reason failed");
+
+	/* set gesture parameters */
+	cmd[0] = 0x01;
+	cmd[1] = 0x0A;
+	cmd[2] = 0x12;
+	cmd[3] = 0x01;
+	memset(cmd + 4, 0xFF, 20);
+	if ((idev->write(cmd, 24)) < 0)
+		ipio_err("set gesture parameters failed");
+
+	/* get gesture parameters */
+	cmd[0] = 0x01;
+	cmd[1] = 0x0A;
+	cmd[2] = 0x11;
+	cmd[3] = 0x01;
+	if ((idev->write(cmd, 4)) < 0)
+		ipio_err("get gesture parameters failed");
+
+}
+
+static ssize_t ilitek_node_ioctl_write(struct file *filp, const char *buff, size_t size, loff_t *pos)
+{
+	int i, count = 0;
+	char cmd[512] = {0};
+	char *token = NULL, *cur = NULL;
+	u8 temp[256] = {0};
+	u32 *data = NULL;
+
+	if ((size - 1) > sizeof(cmd)) {
+		ipio_err("ERROR! input length is larger than local buffer
");
+		return -1;
+	}
+
+	mutex_lock(&idev->touch_mutex);
+
+	if (buff != NULL) {
+		if (copy_from_user(cmd, buff, size - 1)) {
+			ipio_info("Failed to copy data from user space
");
+			return -1;
+		}
+	}
+
+	ipio_info("size = %d, cmd = %s
", (int)size, cmd);
+
+	token = cur = cmd;
+
+	data = kcalloc(512, sizeof(u32), GFP_KERNEL);
+
+	while ((token = strsep(&cur, ",")) != NULL) {
+		data[count] = str2hex(token);
+		ipio_info("data[%d] = %x
", count, data[count]);
+		count++;
+	}
+
+	ipio_info("cmd = %s
", cmd);
+
+	if (strncmp(cmd, "hwreset", strlen(cmd)) == 0) {
+		ilitek_tddi_reset_ctrl(TP_HW_RST_ONLY);
+	}else if (strcmp(cmd, "rawdatarecore") == 0) {
+		if (data[1] == 0)
+			get_tp_recore_ctrl(ENABLE_RECORD);
+		else if (data[1] == 1)
+			get_tp_recore_ctrl(DATA_RECORD);
+		else if (data[1] == 2)
+			get_tp_recore_ctrl(DISABLE_RECORD);
+	} else if (strcmp(cmd, "switchdemodebuginfomode") == 0) {
+		ilitek_tddi_switch_tp_data_format(DATA_FORMAT_DEMO_DEBUG_INFO);
+	} else if (strcmp(cmd, "gesturedemoen") == 0) {
+		if (data[1] == 0)
+			idev->gesture_demo_ctrl = DISABLE;
+		else
+			idev->gesture_demo_ctrl = ENABLE;
+		ilitek_tddi_switch_tp_data_format(DATA_FORMAT_GESTURE_DEMO);
+	} else if (strcmp(cmd, "gesturefailrsn") == 0) {
+		if (data[1] == 0)
+			gesture_fail_reason(DISABLE);
+		else
+			gesture_fail_reason(ENABLE);
+		ipio_info("%s gesture fail reason
", data[1] ? "ENABLE" : "DISABLE");
+	} else if (strncmp(cmd, "icwholereset", strlen(cmd)) == 0) {
+		ilitek_ice_mode_ctrl(ENABLE, OFF);
+		ilitek_tddi_reset_ctrl(TP_IC_WHOLE_RST);
+	} else if (strncmp(cmd, "iccodereset", strlen(cmd)) == 0) {
+		ilitek_ice_mode_ctrl(ENABLE, OFF);
+		ilitek_tddi_reset_ctrl(TP_IC_CODE_RST);
+		ilitek_ice_mode_ctrl(DISABLE, OFF);
+	} else if (strncmp(cmd, "getinfo", strlen(cmd)) == 0) {
+		ilitek_ice_mode_ctrl(ENABLE, OFF);
+		ilitek_tddi_ic_get_info();
+		ilitek_ice_mode_ctrl(DISABLE, OFF);
+		ilitek_tddi_ic_get_protocl_ver();
+		ilitek_tddi_ic_get_fw_ver();
+		ilitek_tddi_ic_get_core_ver();
+		ilitek_tddi_ic_get_tp_info();
+		ilitek_tddi_ic_get_panel_info();
+		ipio_info("Driver version = %s
", DRIVER_VERSION);
+	} else if (strncmp(cmd, "enableicemode", strlen(cmd)) == 0) {
+		if (data[1] == ON)
+			ilitek_ice_mode_ctrl(ENABLE, ON);
+		else
+			ilitek_ice_mode_ctrl(ENABLE, OFF);
+	} else if (strncmp(cmd, "wqctrl", strlen(cmd)) == 0) {
+		idev->wq_ctrl = !idev->wq_ctrl;
+		ipio_info("wq_ctrl flag= %d
", idev->wq_ctrl);
+	} else if (strncmp(cmd, "disableicemode", strlen(cmd)) == 0) {
+		ilitek_ice_mode_ctrl(DISABLE, OFF);
+	} else if (strncmp(cmd, "enablewqesd", strlen(cmd)) == 0) {
+		ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+	} else if (strncmp(cmd, "enablewqbat", strlen(cmd)) == 0) {
+		ilitek_tddi_wq_ctrl(WQ_BAT, ENABLE);
+	} else if (strncmp(cmd, "disablewqesd", strlen(cmd)) == 0) {
+		ilitek_tddi_wq_ctrl(WQ_ESD, DISABLE);
+	} else if (strncmp(cmd, "disablewqbat", strlen(cmd)) == 0) {
+		ilitek_tddi_wq_ctrl(WQ_BAT, DISABLE);
+	} else if (strncmp(cmd, "gesture", strlen(cmd)) == 0) {
+		idev->gesture = !idev->gesture;
+		ipio_info("gesture = %d
", idev->gesture);
+	} else if (strncmp(cmd, "esdgesture", strlen(cmd)) == 0) {
+		if (ilitek_tddi_gesture_recovery() < 0) {
+			ipio_err("gesture recovery failed
");
+			size = -1;
+		}
+	} else if (strncmp(cmd, "esdspi", strlen(cmd)) == 0) {
+		ilitek_tddi_spi_recovery();
+	} else if (strncmp(cmd, "sleepin", strlen(cmd)) == 0) {
+		ilitek_tddi_ic_func_ctrl("sleep", SLEEP_IN);
+	} else if (strncmp(cmd, "deepsleepin", strlen(cmd)) == 0) {
+		ilitek_tddi_ic_func_ctrl("sleep", DEEP_SLEEP_IN);
+	} else if (strncmp(cmd, "iceflag", strlen(cmd)) == 0) {
+		if (data[1] == ENABLE)
+			atomic_set(&idev->ice_stat, ENABLE);
+		else
+			atomic_set(&idev->ice_stat, DISABLE);
+		ipio_info("ice mode flag = %d
", atomic_read(&idev->ice_stat));
+	} else if (strncmp(cmd, "gesturenormal", strlen(cmd)) == 0) {
+		idev->gesture_mode = DATA_FORMAT_GESTURE_NORMAL;
+		ipio_info("gesture mode = %d
", idev->gesture_mode);
+	} else if (strncmp(cmd, "gestureinfo", strlen(cmd)) == 0) {
+		idev->gesture_mode = DATA_FORMAT_GESTURE_INFO;
+		ipio_info("gesture mode = %d
", idev->gesture_mode);
+	} else if (strncmp(cmd, "netlink", strlen(cmd)) == 0) {
+		idev->netlink = !idev->netlink;
+		ipio_info("netlink flag= %d
", idev->netlink);
+	} else if (strncmp(cmd, "switchtestmode", strlen(cmd)) == 0) {
+		ilitek_tddi_switch_tp_mode(P5_X_FW_TEST_MODE);
+	} else if (strncmp(cmd, "switchdebugmode", strlen(cmd)) == 0) {
+		ilitek_tddi_switch_tp_data_format(DATA_FORMAT_DEBUG);
+	} else if (strncmp(cmd, "switchdemomode", strlen(cmd)) == 0) {
+		ilitek_tddi_switch_tp_data_format(DATA_FORMAT_DEMO);
+	} else if (strncmp(cmd, "dbgflag", strlen(cmd)) == 0) {
+		idev->debug_node_open = !idev->debug_node_open;
+		ipio_info("debug flag message = %d
", idev->debug_node_open);
+	} else if (strncmp(cmd, "iow", strlen(cmd)) == 0) {
+		int w_len = 0;
+		w_len = data[1];
+		ipio_info("w_len = %d
", w_len);
+
+		for (i = 0; i < w_len; i++) {
+			temp[i] = data[2 + i];
+			ipio_info("write[%d] = %x
", i, temp[i]);
+		}
+
+		idev->write(temp, w_len);
+	} else if (strncmp(cmd, "ior", strlen(cmd)) == 0) {
+		int r_len = 0;
+		r_len = data[1];
+		ipio_info("r_len = %d
", r_len);
+		idev->read(temp, r_len);
+		for (i = 0; i < r_len; i++)
+			ipio_info("read[%d] = %x
", i, temp[i]);
+	} else if (strncmp(cmd, "iowr", strlen(cmd)) == 0) {
+		int delay = 0;
+		int w_len = 0, r_len = 0;
+		w_len = data[1];
+		r_len = data[2];
+		delay = data[3];
+		ipio_info("w_len = %d, r_len = %d, delay = %d
", w_len, r_len, delay);
+
+		for (i = 0; i < w_len; i++) {
+			temp[i] = data[4 + i];
+			ipio_info("write[%d] = %x
", i, temp[i]);
+		}
+		idev->write(temp, w_len);
+		memset(temp, 0, sizeof(temp));
+		mdelay(delay);
+		idev->read(temp, r_len);
+
+		for (i = 0; i < r_len; i++)
+			ipio_info("read[%d] = %x
", i, temp[i]);
+	} else if (strncmp(cmd, "getddiregdata", strlen(cmd)) == 0) {
+		ipio_info("Get ddi reg one page: page = %x, reg = %x
", data[1], data[2]);
+		ilitek_tddi_ic_get_ddi_reg_onepage(data[1], data[2]);
+	} else if (strncmp(cmd, "setddiregdata", strlen(cmd)) == 0) {
+		ipio_info("Set ddi reg one page: page = %x, reg = %x, data = %x
", data[1], data[2], data[3]);
+		ilitek_tddi_ic_set_ddi_reg_onepage(data[1], data[2], data[3]);
+	} else if (strncmp(cmd, "dumpflashdata", strlen(cmd)) == 0) {
+		ipio_info("Start = 0x%x, End = 0x%x, Dump Hex path = %s
", data[1], data[2], DUMP_FLASH_PATH);
+		ilitek_tddi_fw_dump_flash_data(data[1], data[2], false);
+	} else if (strncmp(cmd, "dumpiramdata", strlen(cmd)) == 0) {
+		ipio_info("Start = 0x%x, End = 0x%x, Dump IRAM path = %s
", data[1], data[2], DUMP_IRAM_PATH);
+		ilitek_tddi_fw_dump_iram_data(data[1], data[2]);
+	} else if (strncmp(cmd, "edge_palm_ctrl", strlen(cmd)) == 0) {
+		ilitek_tddi_ic_func_ctrl("edge_palm", data[1]);
+	} else if (strncmp(cmd, "uart_mode_ctrl", strlen(cmd)) == 0) {
+		ilitek_tddi_fw_uart_ctrl(data[1]);
+	} else if (strncmp(cmd, "flashesdgesture", strlen(cmd)) == 0) {
+		ilitek_tddi_touch_esd_gesture_flash();
+	} else if (strncmp(cmd, "spiw", strlen(cmd)) == 0) {
+		int wlen;
+		wlen = data[1];
+		temp[0] = 0x82;
+		for (i = 0; i < wlen; i++) {
+			temp[i] = data[2 + i];
+			ipio_info("write[%d] = %x
", i, temp[i]);
+		}
+		idev->spi_write_then_read(idev->spi, temp, wlen, NULL, 0);
+	} else if (strncmp(cmd, "spir", strlen(cmd)) == 0) {
+		int rlen;
+		u8 *rbuf = NULL;
+		rlen = data[1];
+		rbuf = kzalloc(rlen, GFP_KERNEL | GFP_DMA);
+		if (ERR_ALLOC_MEM(rbuf)) {
+			ipio_err("Failed to allocate dma_rxbuf, %ld
", PTR_ERR(rbuf));
+			kfree(rbuf);
+			goto out;
+		}
+		temp[0] = 0x83;
+		idev->spi_write_then_read(idev->spi, temp, 1, rbuf, rlen);
+		for (i = 0; i < rlen; i++)
+			ipio_info("read[%d] = %x
", i, rbuf[i]);
+		kfree(rbuf);
+	} else if (strncmp(cmd, "spirw", strlen(cmd)) == 0) {
+		int wlen, rlen;
+		u8 *rbuf = NULL;
+		wlen = data[1];
+		rlen = data[2];
+		for (i = 0; i < wlen; i++) {
+			temp[i] = data[3 + i];
+			ipio_info("write[%d] = %x
", i, temp[i]);
+		}
+		if (rlen != 0) {
+			rbuf = kzalloc(rlen, GFP_KERNEL | GFP_DMA);
+			if (ERR_ALLOC_MEM(rbuf)) {
+				ipio_err("Failed to allocate dma_rxbuf, %ld
", PTR_ERR(rbuf));
+				kfree(rbuf);
+				goto out;
+			}
+		}
+		idev->spi_write_then_read(idev->spi, temp, wlen, rbuf, rlen);
+		if (rlen != 0) {
+			for (i = 0; i < rlen; i++)
+				ipio_info("read[%d] = %x
", i, rbuf[i]);
+		}
+		kfree(rbuf);
+	} else if (strncmp(cmd, "at_esd_test", strlen(cmd)) == 0) {
+		idev->wq_ctrl = ENABLE;
+		ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+		reinit_completion(&idev->esd_done);
+		ilitek_tddi_reset_ctrl(idev->reset);
+		if (!wait_for_completion_timeout(&idev->esd_done, msecs_to_jiffies(10000))) {
+			ipio_err("[AT]: spi recovery timeout
");
+			size = -1;
+			goto out;
+		}
+
+		cmd[0] = SPI_WRITE;
+		if (idev->spi_write_then_read(idev->spi, cmd, 1, temp, 1) < 0) {
+			ipio_err("spi write 0x82 error
");
+			size = -1;
+		}
+		ipio_info("[AT]: spi ack = %x
", temp[0]);
+		if (temp[0] != SPI_ACK) {
+			ipio_err("Check SPI_ACK failed (0x%x)
", temp[0]);
+			size = -1;
+		}
+		ilitek_tddi_wq_ctrl(WQ_ESD, DISABLE);
+		idev->wq_ctrl = DISABLE;
+	} else {
+		ipio_err("Unknown command
");
+		size = -1;
+	}
+out:
+	ipio_kfree((void **)&data);
+	mutex_unlock(&idev->touch_mutex);
+	return size;
+}
+
+#ifdef CONFIG_COMPAT
+static long ilitek_node_compat_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
+{
+	long ret = 0;
+
+	if (!filp->f_op || !filp->f_op->unlocked_ioctl) {
+		ipio_err("There's no unlocked_ioctl defined in file
");
+		return -ENOTTY;
+	}
+
+	ipio_info("cmd = %d
", _IOC_NR(cmd));
+
+	switch (cmd) {
+	case ILITEK_COMPAT_IOCTL_I2C_WRITE_DATA:
+		ipio_info("compat_ioctl: convert i2c/spi write
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_I2C_WRITE_DATA, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_I2C_READ_DATA:
+		ipio_info("compat_ioctl: convert i2c/spi read
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_I2C_READ_DATA, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_I2C_SET_WRITE_LENGTH:
+		ipio_info("compat_ioctl: convert set write length
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_I2C_SET_WRITE_LENGTH, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_I2C_SET_READ_LENGTH:
+		ipio_info("compat_ioctl: convert set read length
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_I2C_SET_READ_LENGTH, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_HW_RESET:
+		ipio_info("compat_ioctl: convert hw reset
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_HW_RESET, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_POWER_SWITCH:
+		ipio_info("compat_ioctl: convert power switch
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_POWER_SWITCH, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_REPORT_SWITCH:
+		ipio_info("compat_ioctl: convert report switch
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_REPORT_SWITCH, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_IRQ_SWITCH:
+		ipio_info("compat_ioctl: convert irq switch
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_IRQ_SWITCH, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_DEBUG_LEVEL:
+		ipio_info("compat_ioctl: convert debug level
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_DEBUG_LEVEL, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_FUNC_MODE:
+		ipio_info("compat_ioctl: convert format mode
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_FUNC_MODE, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_FW_VER:
+		ipio_info("compat_ioctl: convert set read length
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_FW_VER, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_PL_VER:
+		ipio_info("compat_ioctl: convert fw version
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_PL_VER, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_CORE_VER:
+		ipio_info("compat_ioctl: convert core version
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_CORE_VER, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_DRV_VER:
+		ipio_info("compat_ioctl: convert driver version
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_DRV_VER, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_CHIP_ID:
+		ipio_info("compat_ioctl: convert chip id
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_CHIP_ID, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_NETLINK_CTRL:
+		ipio_info("compat_ioctl: convert netlink ctrl
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_NETLINK_CTRL, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_NETLINK_STATUS:
+		ipio_info("compat_ioctl: convert netlink status
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_NETLINK_STATUS, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_MODE_CTRL:
+		ipio_info("compat_ioctl: convert tp mode ctrl
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_MODE_CTRL, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_MODE_STATUS:
+		ipio_info("compat_ioctl: convert tp mode status
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_MODE_STATUS, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_ICE_MODE_SWITCH:
+		ipio_info("compat_ioctl: convert tp mode switch
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_ICE_MODE_SWITCH, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_INTERFACE_TYPE:
+		ipio_info("compat_ioctl: convert interface type
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_INTERFACE_TYPE, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_DUMP_FLASH:
+		ipio_info("compat_ioctl: convert dump flash
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_DUMP_FLASH, (unsigned long)compat_ptr(arg));
+		return ret;
+	case ILITEK_COMPAT_IOCTL_TP_FW_UART_CTRL:
+		ipio_info("compat_ioctl: convert fw uart
");
+		ret = filp->f_op->unlocked_ioctl(filp, ILITEK_IOCTL_TP_FW_UART_CTRL, (unsigned long)compat_ptr(arg));
+		return ret;
+	default:
+		ipio_err("no ioctl cmd, return ilitek_node_ioctl
");
+		return -ENOIOCTLCMD;
+	}
+}
+#endif
+
+static long ilitek_node_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
+{
+	int ret = 0, length = 0;
+	u8 *szBuf = NULL, if_to_user = 0;
+	static u16 i2c_rw_length;
+	u32 id_to_user[3] = {0};
+	bool esd_en = idev->wq_esd_ctrl, bat_en = idev->wq_bat_ctrl;
+
+	if (_IOC_TYPE(cmd) != ILITEK_IOCTL_MAGIC) {
+		ipio_err("The Magic number doesn't match
");
+		return -ENOTTY;
+	}
+
+	if (_IOC_NR(cmd) > ILITEK_IOCTL_MAXNR) {
+		ipio_err("The number of ioctl doesn't match
");
+		return -ENOTTY;
+	}
+
+	ipio_info("cmd = %d
", _IOC_NR(cmd));
+
+	mutex_lock(&idev->touch_mutex);
+
+	szBuf = kcalloc(IOCTL_I2C_BUFF, sizeof(u8), GFP_KERNEL);
+	if (ERR_ALLOC_MEM(szBuf)) {
+		ipio_err("Failed to allocate mem
");
+		ret = -ENOMEM;
+		goto out;
+	}
+
+	if (esd_en)
+		ilitek_tddi_wq_ctrl(WQ_ESD, DISABLE);
+	if (bat_en)
+		ilitek_tddi_wq_ctrl(WQ_BAT, DISABLE);
+
+	switch (cmd) {
+	case ILITEK_IOCTL_I2C_WRITE_DATA:
+		ipio_info("ioctl: write len = %d
", i2c_rw_length);
+
+		if (i2c_rw_length > IOCTL_I2C_BUFF) {
+			ipio_err("ERROR! write len is largn than ioctl buf (%d, %ld)
",
+					i2c_rw_length, IOCTL_I2C_BUFF);
+			ret = -ENOTTY;
+			break;
+		}
+
+		if (copy_from_user(szBuf, (u8 *) arg, i2c_rw_length)) {
+			ipio_err("Failed to copy data from user space
");
+			ret = -ENOTTY;
+			break;
+		}
+
+		ret = idev->write(&szBuf[0], i2c_rw_length);
+		if (ret < 0)
+			ipio_err("Failed to write data
");
+		break;
+	case ILITEK_IOCTL_I2C_READ_DATA:
+		ipio_info("ioctl: read len = %d
", i2c_rw_length);
+
+		if (i2c_rw_length > IOCTL_I2C_BUFF) {
+			ipio_err("ERROR! read len is largn than ioctl buf (%d, %ld)
",
+					i2c_rw_length, IOCTL_I2C_BUFF);
+			ret = -ENOTTY;
+			break;
+		}
+
+		ret = idev->read(szBuf, i2c_rw_length);
+		if (ret < 0) {
+			ipio_err("Failed to read data
");
+			break;
+		}
+
+		if (copy_to_user((u8 *) arg, szBuf, i2c_rw_length)) {
+			ipio_err("Failed to copy data to user space
");
+			ret = -ENOTTY;
+		}
+		break;
+	case ILITEK_IOCTL_I2C_SET_WRITE_LENGTH:
+	case ILITEK_IOCTL_I2C_SET_READ_LENGTH:
+		i2c_rw_length = arg;
+		break;
+	case ILITEK_IOCTL_TP_HW_RESET:
+		ipio_info("ioctl: hw reset
");
+		ilitek_tddi_reset_ctrl(idev->reset);
+		break;
+	case ILITEK_IOCTL_TP_POWER_SWITCH:
+		ipio_info("Not implemented yet
");
+		break;
+	case ILITEK_IOCTL_TP_REPORT_SWITCH:
+		if (copy_from_user(szBuf, (u8 *) arg, 1)) {
+			ipio_err("Failed to copy data from user space
");
+			ret = -ENOTTY;
+			break;
+		}
+
+		ipio_info("ioctl: report switch = %d
", szBuf[0]);
+		if (szBuf[0]) {
+			idev->report = ENABLE;
+			ipio_info("report is enabled
");
+		} else {
+			idev->report = DISABLE;
+			ipio_info("report is disabled
");
+		}
+		break;
+	case ILITEK_IOCTL_TP_IRQ_SWITCH:
+		if (copy_from_user(szBuf, (u8 *) arg, 1)) {
+			ipio_err("Failed to copy data from user space
");
+			ret = -ENOTTY;
+			break;
+		}
+		ipio_info("ioctl: irq switch = %d
", szBuf[0]);
+		if (szBuf[0])
+			ilitek_plat_irq_enable();
+		else
+			ilitek_plat_irq_disable();
+		break;
+	case ILITEK_IOCTL_TP_DEBUG_LEVEL:
+		if (copy_from_user(szBuf, (u8 *) arg, sizeof(u32))) {
+			ipio_err("Failed to copy data from user space
");
+			ret = -ENOTTY;
+			break;
+		}
+
+		ipio_debug_level = !ipio_debug_level;
+		ipio_info("ipio_debug_level = %d", ipio_debug_level);
+		break;
+	case ILITEK_IOCTL_TP_FUNC_MODE:
+		if (copy_from_user(szBuf, (u8 *) arg, 3)) {
+			ipio_err("Failed to copy data from user space
");
+			ret = -ENOTTY;
+			break;
+		}
+
+		ipio_info("ioctl: set func mode = %x,%x,%x
", szBuf[0], szBuf[1], szBuf[2]);
+		idev->write(&szBuf[0], 3);
+		break;
+	case ILITEK_IOCTL_TP_FW_VER:
+		ipio_info("ioctl: get fw version
");
+		ret = ilitek_tddi_ic_get_fw_ver();
+		if (ret < 0) {
+			ipio_err("Failed to get firmware version
");
+			break;
+		}
+
+		szBuf[3] = idev->chip->fw_ver & 0xFF;
+		szBuf[2] = (idev->chip->fw_ver >> 8) & 0xFF;
+		szBuf[1] = (idev->chip->fw_ver >> 16) & 0xFF;
+		szBuf[0] = idev->chip->fw_ver >> 24;
+		ipio_info("Firmware version = %d.%d.%d.%d
", szBuf[0], szBuf[1], szBuf[2], szBuf[3]);
+
+		if (copy_to_user((u8 *) arg, szBuf, 4)) {
+			ipio_err("Failed to copy data to user space
");
+			ret = -ENOTTY;
+		}
+		break;
+	case ILITEK_IOCTL_TP_PL_VER:
+		ipio_info("ioctl: get protocl version
");
+		ret = ilitek_tddi_ic_get_protocl_ver();
+		if (ret < 0) {
+			ipio_err("Failed to get protocol version
");
+			break;
+		}
+
+		szBuf[2] = idev->protocol->ver & 0xFF;
+		szBuf[1] = (idev->protocol->ver >> 8) & 0xFF;
+		szBuf[0] = idev->protocol->ver >> 16;
+		ipio_info("Protocol version = %d.%d.%d
", szBuf[0], szBuf[1], szBuf[2]);
+
+		if (copy_to_user((u8 *) arg, szBuf, 3)) {
+			ipio_err("Failed to copy data to user space
");
+			ret = -ENOTTY;
+		}
+		break;
+	case ILITEK_IOCTL_TP_CORE_VER:
+		ipio_info("ioctl: get core version
");
+		ret = ilitek_tddi_ic_get_core_ver();
+		if (ret < 0) {
+			ipio_err("Failed to get core version
");
+			break;
+		}
+
+		szBuf[3] = idev->chip->core_ver & 0xFF;
+		szBuf[2] = (idev->chip->core_ver >> 8) & 0xFF;
+		szBuf[1] = (idev->chip->core_ver >> 16) & 0xFF;
+		szBuf[0] = idev->chip->core_ver >> 24;
+		ipio_info("Core version = %d.%d.%d.%d
", szBuf[0], szBuf[1], szBuf[2], szBuf[3]);
+
+		if (copy_to_user((u8 *) arg, szBuf, 4)) {
+			ipio_err("Failed to copy data to user space
");
+			ret = -ENOTTY;
+		}
+		break;
+	case ILITEK_IOCTL_TP_DRV_VER:
+		ipio_info("ioctl: get driver version
");
+		length = snprintf(szBuf, USER_STR_BUFF * sizeof(unsigned char), "%s", DRIVER_VERSION);
+
+		if (copy_to_user((u8 *) arg, szBuf, length)) {
+			ipio_err("Failed to copy driver ver to user space
");
+			ret = -ENOTTY;
+		}
+		break;
+	case ILITEK_IOCTL_TP_CHIP_ID:
+		ipio_info("ioctl: get chip id
");
+		ilitek_ice_mode_ctrl(ENABLE, OFF);
+		ret = ilitek_tddi_ic_get_info();
+		if (ret < 0) {
+			ipio_err("Failed to get chip id
");
+			break;
+		}
+
+		id_to_user[0] = idev->chip->pid;
+		id_to_user[1] = idev->chip->otp_id;
+		id_to_user[2] = idev->chip->ana_id;
+
+		if (copy_to_user((u32 *) arg, id_to_user, sizeof(id_to_user))) {
+			ipio_err("Failed to copy driver ver to user space
");
+			ret = -ENOTTY;
+		}
+
+		ilitek_ice_mode_ctrl(DISABLE, OFF);
+		break;
+	case ILITEK_IOCTL_TP_NETLINK_CTRL:
+		if (copy_from_user(szBuf, (u8 *) arg, 1)) {
+			ipio_err("Failed to copy data from user space
");
+			ret = -ENOTTY;
+			break;
+		}
+		ipio_info("ioctl: netlink ctrl = %d
", szBuf[0]);
+		if (szBuf[0]) {
+			idev->netlink = ENABLE;
+			ipio_info("ioctl: Netlink is enabled
");
+		} else {
+			idev->netlink = DISABLE;
+			ipio_info("ioctl: Netlink is disabled
");
+		}
+		break;
+	case ILITEK_IOCTL_TP_NETLINK_STATUS:
+		ipio_info("ioctl: get netlink stat = %d
", idev->netlink);
+		if (copy_to_user((int *)arg, &idev->netlink, sizeof(int))) {
+			ipio_err("Failed to copy driver ver to user space
");
+			ret = -ENOTTY;
+		}
+		break;
+	case ILITEK_IOCTL_TP_MODE_CTRL:
+		if (copy_from_user(szBuf, (u8 *) arg, 4)) {
+			ipio_err("Failed to copy data from user space
");
+			ret = -ENOTTY;
+			break;
+		}
+		ipio_info("ioctl: switch fw format = %d
", szBuf[0]);
+		if (szBuf[0] == 0)
+			ilitek_tddi_switch_tp_data_format(DATA_FORMAT_DEMO);
+		else if (szBuf[0] == 2)
+			ilitek_tddi_switch_tp_data_format(DATA_FORMAT_DEBUG);
+		break;
+	case ILITEK_IOCTL_TP_MODE_STATUS:
+		ipio_info("ioctl: current firmware mode = %d", idev->actual_tp_mode);
+		if (copy_to_user((int *)arg, &idev->actual_tp_mode, sizeof(int))) {
+			ipio_err("Failed to copy driver ver to user space
");
+			ret = -ENOTTY;
+		}
+		break;
+	/* It works for host downloado only */
+	case ILITEK_IOCTL_ICE_MODE_SWITCH:
+		if (copy_from_user(szBuf, (u8 *) arg, 1)) {
+			ipio_err("Failed to copy data from user space
");
+			ret = -ENOTTY;
+			break;
+		}
+		ipio_info("ioctl: switch ice mode = %d", szBuf[0]);
+		if (szBuf[0]) {
+			atomic_set(&idev->ice_stat, ENABLE);
+			ipio_info("ioctl: set ice mode enabled
");
+		} else {
+			atomic_set(&idev->ice_stat, DISABLE);
+			ipio_info("ioctl: set ice mode disabled
");
+		}
+		break;
+	case ILITEK_IOCTL_TP_INTERFACE_TYPE:
+		if_to_user = idev->hwif->bus_type;
+		if (copy_to_user((u8 *) arg, &if_to_user, sizeof(if_to_user))) {
+			ipio_err("Failed to copy driver ver to user space
");
+			ret = -ENOTTY;
+		}
+		break;
+	case ILITEK_IOCTL_TP_DUMP_FLASH:
+		ipio_info("ioctl: dump flash data
");
+		ret = ilitek_tddi_fw_dump_flash_data(0, 0, true);
+		if (ret < 0) {
+			ipio_err("ioctl: Failed to dump flash data
");
+		}
+		break;
+	case ILITEK_IOCTL_TP_FW_UART_CTRL:
+		if (copy_from_user(szBuf, (u8 *) arg, 1)) {
+			ipio_err("Failed to copy data from user space
");
+			ret = -ENOTTY;
+			break;
+		}
+		ipio_info("ioctl: fw UART  = %d
", szBuf[0]);
+
+		ilitek_tddi_fw_uart_ctrl(szBuf[0]);
+
+		if_to_user = idev->fw_uart_en;
+
+		if (copy_to_user((u8 *) arg, &if_to_user, sizeof(if_to_user))) {
+			ipio_err("Failed to copy driver ver to user space
");
+			ret = -ENOTTY;
+		}
+		break;
+	default:
+		ret = -ENOTTY;
+		break;
+	}
+
+	ipio_kfree((void **)&szBuf);
+
+out:
+	if (esd_en)
+		ilitek_tddi_wq_ctrl(WQ_ESD, ENABLE);
+	if (bat_en)
+		ilitek_tddi_wq_ctrl(WQ_BAT, ENABLE);
+
+	mutex_unlock(&idev->touch_mutex);
+	return ret;
+}
+
+struct proc_dir_entry *proc_dir_ilitek;
+
+typedef struct {
+	char *name;
+	struct proc_dir_entry *node;
+	struct file_operations *fops;
+	bool isCreated;
+} proc_node_t;
+
+struct file_operations proc_mp_lcm_on_test_fops = {
+	.read = ilitek_node_mp_lcm_on_test_read,
+};
+
+struct file_operations proc_mp_lcm_off_test_fops = {
+	.read = ilitek_node_mp_lcm_off_test_read,
+};
+
+struct file_operations proc_debug_message_fops = {
+	.read = ilitek_proc_debug_message_read,
+};
+
+struct file_operations proc_debug_message_switch_fops = {
+	.read = ilitek_proc_debug_switch_read,
+};
+
+struct file_operations proc_ioctl_fops = {
+	.unlocked_ioctl = ilitek_node_ioctl,
+#ifdef CONFIG_COMPAT
+	.compat_ioctl = ilitek_node_compat_ioctl,
+#endif
+	.write = ilitek_node_ioctl_write,
+};
+
+struct file_operations proc_fw_upgrade_fops = {
+	.read = ilitek_node_fw_upgrade_read,
+};
+
+struct file_operations proc_fw_process_fops = {
+	.read = ilitek_proc_fw_process_read,
+};
+
+struct file_operations proc_get_delta_data_fops = {
+	.read = ilitek_proc_get_delta_data_read,
+};
+
+struct file_operations proc_get_raw_data_fops = {
+	.read = ilitek_proc_fw_get_raw_data_read,
+};
+
+struct file_operations proc_rw_tp_reg_fops = {
+	.read = ilitek_proc_rw_tp_reg_read,
+	.write = ilitek_proc_rw_tp_reg_write,
+};
+
+struct file_operations proc_fw_pc_counter_fops = {
+	.read = ilitek_proc_fw_pc_counter_read,
+};
+
+struct file_operations proc_get_debug_mode_data_fops = {
+	.read = ilitek_proc_get_debug_mode_data_read,
+	.write = ilitek_proc_get_debug_mode_data_write,
+};
+
+struct file_operations proc_debug_level_fops = {
+	.read = ilitek_proc_debug_level_read,
+};
+
+proc_node_t proc_table[] = {
+	{"ioctl", NULL, &proc_ioctl_fops, false},
+	{"fw_process", NULL, &proc_fw_process_fops, false},
+	{"fw_upgrade", NULL, &proc_fw_upgrade_fops, false},
+	{"debug_level", NULL, &proc_debug_level_fops, false},
+	{"mp_lcm_on_test", NULL, &proc_mp_lcm_on_test_fops, false},
+	{"mp_lcm_off_test", NULL, &proc_mp_lcm_off_test_fops, false},
+	{"debug_message", NULL, &proc_debug_message_fops, false},
+	{"debug_message_switch", NULL, &proc_debug_message_switch_fops, false},
+	{"fw_pc_counter", NULL, &proc_fw_pc_counter_fops, false},
+	{"show_delta_data", NULL, &proc_get_delta_data_fops, false},
+	{"show_raw_data", NULL, &proc_get_raw_data_fops, false},
+	{"get_debug_mode_data", NULL, &proc_get_debug_mode_data_fops, false},
+	{"rw_tp_reg", NULL, &proc_rw_tp_reg_fops, false},
+};
+
+#define NETLINK_USER 21
+struct sock *netlink_skb;
+struct nlmsghdr *netlink_head;
+struct sk_buff *skb_out;
+int netlink_pid;
+
+void netlink_reply_msg(void *raw, int size)
+{
+	int ret;
+	int msg_size = size;
+	u8 *data = (u8 *) raw;
+
+	ipio_info("The size of data being sent to user = %d
", msg_size);
+	ipio_info("pid = %d
", netlink_pid);
+	ipio_info("Netlink is enable = %d
", idev->netlink);
+
+	if (idev->netlink) {
+		skb_out = nlmsg_new(msg_size, 0);
+
+		if (!skb_out) {
+			ipio_err("Failed to allocate new skb
");
+			return;
+		}
+
+		netlink_head = nlmsg_put(skb_out, 0, 0, NLMSG_DONE, msg_size, 0);
+		NETLINK_CB(skb_out).dst_group = 0;	/* not in mcast group */
+
+		/* strncpy(NLMSG_DATA(netlink_head), data, msg_size); */
+		ipio_memcpy(nlmsg_data(netlink_head), data, msg_size, size);
+
+		ret = nlmsg_unicast(netlink_skb, skb_out, netlink_pid);
+		if (ret < 0)
+			ipio_err("Failed to send data back to user
");
+	}
+}
+
+static void netlink_recv_msg(struct sk_buff *skb)
+{
+	netlink_pid = 0;
+
+	ipio_info("Netlink = %d
", idev->netlink);
+
+	netlink_head = (struct nlmsghdr *)skb->data;
+
+	ipio_info("Received a request from client: %s, %d
",
+		(char *)NLMSG_DATA(netlink_head), (int)strlen((char *)NLMSG_DATA(netlink_head)));
+
+	/* pid of sending process */
+	netlink_pid = netlink_head->nlmsg_pid;
+
+	ipio_info("the pid of sending process = %d
", netlink_pid);
+
+	/* TODO: may do something if there's not receiving msg from user. */
+	if (netlink_pid != 0) {
+		ipio_err("The channel of Netlink has been established successfully !
");
+		idev->netlink = ENABLE;
+	} else {
+		ipio_err("Failed to establish the channel between kernel and user space
");
+		idev->netlink = DISABLE;
+	}
+}
+
+static int netlink_init(void)
+{
+	int ret = 0;
+
+#if KERNEL_VERSION(3, 4, 0) > LINUX_VERSION_CODE
+	netlink_skb = netlink_kernel_create(&init_net, NETLINK_USER, netlink_recv_msg, NULL, THIS_MODULE);
+#else
+	struct netlink_kernel_cfg cfg = {
+		.input = netlink_recv_msg,
+	};
+
+	netlink_skb = netlink_kernel_create(&init_net, NETLINK_USER, &cfg);
+#endif
+
+	ipio_info("Initialise Netlink and create its socket
");
+
+	if (!netlink_skb) {
+		ipio_err("Failed to create nelink socket
");
+		ret = -EFAULT;
+	}
+	return ret;
+}
+
+void ilitek_tddi_node_init(void)
+{
+	int i = 0, ret = 0;
+
+	proc_dir_ilitek = proc_mkdir("ilitek", NULL);
+
+	for (; i < ARRAY_SIZE(proc_table); i++) {
+		proc_table[i].node = proc_create(proc_table[i].name, 0644, proc_dir_ilitek, proc_table[i].fops);
+
+		if (proc_table[i].node == NULL) {
+			proc_table[i].isCreated = false;
+			ipio_err("Failed to create %s under /proc
", proc_table[i].name);
+			ret = -ENODEV;
+		} else {
+			proc_table[i].isCreated = true;
+			ipio_info("Succeed to create %s under /proc
", proc_table[i].name);
+		}
+	}
+	netlink_init();
+}
diff --git a/drivers/input/touchscreen/ili/ilitek_plat_nxp.c b/drivers/input/touchscreen/ili/ilitek_plat_nxp.c
new file mode 100644
index 000000000000..6d92d3961323
--- /dev/null
+++ b/drivers/input/touchscreen/ili/ilitek_plat_nxp.c
@@ -0,0 +1,554 @@
+/*
+ * ILITEK Touch IC driver
+ *
+ * Copyright (C) 2011 ILI Technology Corporation.
+ *
+ * Author: Dicky Chiang <dicky_chiang@ilitek.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include "ilitek.h"
+//#include <drm/panel/panel-ilitek-ili9881c.h>
+
+
+#define DTS_INT_GPIO	"ili9881h,interrupts-gpio"
+#define DTS_RESET_GPIO	"ili9881h,reset-gpio"
+#define DTS_OF_NAME	"ili9881h_i2c"
+
+//extern struct drm_panel *DRM_PanelS;
+extern void ilt_panel_exitsleep_and_turnon(struct drm_panel *panel);
+void ilitek_plat_tp_reset(void)
+{
+	ipio_info("ilitek_plat_tp_reset(), edge delay = %d
", idev->rst_edge_delay);
+
+	ipio_info("Do no gpio reset control for power on sequence!
");
+	/* Need accurate power sequence, do not change it to msleep */
+//	gpio_direction_output(idev->tp_rst, 1);
+//	mdelay(1);
+//	mdelay(5);
+//	gpio_set_value(idev->tp_rst, 0);
+//	mdelay(5);
+//	mdelay(25);
+//	gpio_set_value(idev->tp_rst, 1);
+//	mdelay(idev->rst_edge_delay);
+}
+
+void ilitek_plat_tp_reset2(void)
+{
+	ipio_info("ilitek_plat_tp_reset2(), edge delay = %d
", idev->rst_edge_delay);
+
+	/* Need accurate power sequence, do not change it to msleep */
+	gpio_direction_output(idev->tp_rst, 1);
+	mdelay(1);
+	mdelay(5);
+	gpio_set_value(idev->tp_rst, 0);
+	mdelay(5);
+	mdelay(25);
+	gpio_set_value(idev->tp_rst, 1);
+	mdelay(idev->rst_edge_delay);
+}
+
+
+void ilitek_plat_input_register(void)
+{
+	ipio_info();
+
+	idev->input = input_allocate_device();
+	if (ERR_ALLOC_MEM(idev->input)) {
+		ipio_err("Failed to allocate touch input device
");
+		input_free_device(idev->input);
+		return;
+	}
+
+	idev->input->name = idev->hwif->name;
+	idev->input->phys = idev->phys;
+	idev->input->dev.parent = idev->dev;
+	idev->input->id.bustype = idev->hwif->bus_type;
+
+	/* set the supported event type for input device */
+	set_bit(EV_ABS, idev->input->evbit);
+	set_bit(EV_SYN, idev->input->evbit);
+	set_bit(EV_KEY, idev->input->evbit);
+	set_bit(BTN_TOUCH, idev->input->keybit);
+	set_bit(BTN_TOOL_FINGER, idev->input->keybit);
+	set_bit(INPUT_PROP_DIRECT, idev->input->propbit);
+
+	input_set_abs_params(idev->input, ABS_MT_POSITION_X, TOUCH_SCREEN_X_MIN, idev->panel_wid - 1, 0, 0);
+	input_set_abs_params(idev->input, ABS_MT_POSITION_Y, TOUCH_SCREEN_Y_MIN, idev->panel_hei - 1, 0, 0);
+	input_set_abs_params(idev->input, ABS_MT_TOUCH_MAJOR, 0, 255, 0, 0);
+	input_set_abs_params(idev->input, ABS_MT_WIDTH_MAJOR, 0, 255, 0, 0);
+
+	if (MT_PRESSURE)
+		input_set_abs_params(idev->input, ABS_MT_PRESSURE, 0, 255, 0, 0);
+
+	if (MT_B_TYPE) {
+#if KERNEL_VERSION(3, 7, 0) <= LINUX_VERSION_CODE
+		input_mt_init_slots(idev->input, MAX_TOUCH_NUM, INPUT_MT_DIRECT);
+#else
+		input_mt_init_slots(idev->input, MAX_TOUCH_NUM);
+#endif /* LINUX_VERSION_CODE */
+	} else {
+		input_set_abs_params(idev->input, ABS_MT_TRACKING_ID, 0, MAX_TOUCH_NUM, 0, 0);
+	}
+
+	/* Gesture keys register */
+	input_set_capability(idev->input, EV_KEY, KEY_POWER);
+	input_set_capability(idev->input, EV_KEY, KEY_GESTURE_UP);
+	input_set_capability(idev->input, EV_KEY, KEY_GESTURE_DOWN);
+	input_set_capability(idev->input, EV_KEY, KEY_GESTURE_LEFT);
+	input_set_capability(idev->input, EV_KEY, KEY_GESTURE_RIGHT);
+	input_set_capability(idev->input, EV_KEY, KEY_GESTURE_O);
+	input_set_capability(idev->input, EV_KEY, KEY_GESTURE_E);
+	input_set_capability(idev->input, EV_KEY, KEY_GESTURE_M);
+	input_set_capability(idev->input, EV_KEY, KEY_GESTURE_W);
+	input_set_capability(idev->input, EV_KEY, KEY_GESTURE_S);
+	input_set_capability(idev->input, EV_KEY, KEY_GESTURE_V);
+	input_set_capability(idev->input, EV_KEY, KEY_GESTURE_Z);
+	input_set_capability(idev->input, EV_KEY, KEY_GESTURE_C);
+	input_set_capability(idev->input, EV_KEY, KEY_GESTURE_F);
+
+	__set_bit(KEY_GESTURE_POWER, idev->input->keybit);
+	__set_bit(KEY_GESTURE_UP, idev->input->keybit);
+	__set_bit(KEY_GESTURE_DOWN, idev->input->keybit);
+	__set_bit(KEY_GESTURE_LEFT, idev->input->keybit);
+	__set_bit(KEY_GESTURE_RIGHT, idev->input->keybit);
+	__set_bit(KEY_GESTURE_O, idev->input->keybit);
+	__set_bit(KEY_GESTURE_E, idev->input->keybit);
+	__set_bit(KEY_GESTURE_M, idev->input->keybit);
+	__set_bit(KEY_GESTURE_W, idev->input->keybit);
+	__set_bit(KEY_GESTURE_S, idev->input->keybit);
+	__set_bit(KEY_GESTURE_V, idev->input->keybit);
+	__set_bit(KEY_GESTURE_Z, idev->input->keybit);
+	__set_bit(KEY_GESTURE_C, idev->input->keybit);
+	__set_bit(KEY_GESTURE_F, idev->input->keybit);
+
+	/* register the input device to input sub-system */
+	if (input_register_device(idev->input) < 0) {
+		ipio_err("Failed to register touch input device
");
+		input_unregister_device(idev->input);
+		input_free_device(idev->input);
+	}
+}
+
+void ilitek_plat_regulator_power_on(bool status)
+{
+	ipio_info("%s
", status ? "POWER ON" : "POWER OFF");
+
+	if (status) {
+		if (idev->vdd) {
+			if (regulator_enable(idev->vdd) < 0)
+				ipio_err("regulator_enable VDD fail
");
+		}
+		if (idev->vcc) {
+			if (regulator_enable(idev->vcc) < 0)
+				ipio_err("regulator_enable VCC fail
");
+		}
+	} else {
+		if (idev->vdd) {
+			if (regulator_disable(idev->vdd) < 0)
+				ipio_err("regulator_enable VDD fail
");
+		}
+		if (idev->vcc) {
+			if (regulator_disable(idev->vcc) < 0)
+				ipio_err("regulator_enable VCC fail
");
+		}
+	}
+	atomic_set(&idev->ice_stat, DISABLE);
+	mdelay(5);
+}
+
+static void ilitek_plat_regulator_power_init(void)
+{
+	const char *vdd_name = "vdd";
+	const char *vcc_name = "vcc";
+
+	idev->vdd = regulator_get(idev->dev, vdd_name);
+	if (ERR_ALLOC_MEM(idev->vdd)) {
+		ipio_err("regulator_get VDD fail
");
+		idev->vdd = NULL;
+	}
+	if (regulator_set_voltage(idev->vdd, VDD_VOLTAGE, VDD_VOLTAGE) < 0)
+		ipio_err("Failed to set VDD %d
", VDD_VOLTAGE);
+
+	idev->vcc = regulator_get(idev->dev, vcc_name);
+	if (ERR_ALLOC_MEM(idev->vcc)) {
+		ipio_err("regulator_get VCC fail.
");
+		idev->vcc = NULL;
+	}
+	if (regulator_set_voltage(idev->vcc, VCC_VOLTAGE, VCC_VOLTAGE) < 0)
+		ipio_err("Failed to set VCC %d
", VCC_VOLTAGE);
+
+	ilitek_plat_regulator_power_on(true);
+}
+
+static int ilitek_plat_gpio_register(void)
+{
+	int ret = 0;
+	u32 flag;
+	struct device_node *dev_node = idev->dev->of_node;
+
+	idev->tp_int = of_get_named_gpio_flags(dev_node, DTS_INT_GPIO, 0, &flag);
+	idev->tp_rst = of_get_named_gpio_flags(dev_node, DTS_RESET_GPIO, 0, &flag);
+
+	ipio_info("TP INT: %d
", idev->tp_int);
+	ipio_info("TP RESET: %d
", idev->tp_rst);
+
+	if (!gpio_is_valid(idev->tp_int)) {
+		ipio_err("Invalid INT gpio: %d
", idev->tp_int);
+		return -EBADR;
+	}
+
+	if (!gpio_is_valid(idev->tp_rst)) {
+		ipio_err("Invalid RESET gpio: %d
", idev->tp_rst);
+		return -EBADR;
+	}
+
+	ret = gpio_request(idev->tp_int, "TP_INT");
+	if (ret < 0) {
+		ipio_err("Request IRQ GPIO failed, ret = %d
", ret);
+		gpio_free(idev->tp_int);
+		ret = gpio_request(idev->tp_int, "TP_INT");
+		if (ret < 0) {
+			ipio_err("Retrying request INT GPIO still failed , ret = %d
", ret);
+			goto out;
+		}
+	}
+
+	ipio_info("Skip TP_RESET registration as it's controlled by panel driver now!!");
+/*
+	ret = gpio_request(idev->tp_rst, "TP_RESET");
+	if (ret < 0) {
+		ipio_err("Request RESET GPIO failed, ret = %d
", ret);
+		gpio_free(idev->tp_rst);
+		ret = gpio_request(idev->tp_rst, "TP_RESET");
+		if (ret < 0) {
+			ipio_err("Retrying request RESET GPIO still failed , ret = %d
", ret);
+			goto out;
+		}
+	}
+*/
+	ipio_info("ilitek_plat_gpio_register()]n");
+
+out:
+	gpio_direction_input(idev->tp_int);
+	return ret;
+}
+
+void ilitek_plat_irq_disable(void)
+{
+	unsigned long flag;
+
+	spin_lock_irqsave(&idev->irq_spin, flag);
+
+	if (atomic_read(&idev->irq_stat) == DISABLE)
+		goto out;
+
+	if (!idev->irq_num) {
+		ipio_err("gpio_to_irq (%d) is incorrect
", idev->irq_num);
+		goto out;
+	}
+
+	disable_irq_nosync(idev->irq_num);
+	atomic_set(&idev->irq_stat, DISABLE);
+	ipio_debug("Disable irq success
");
+
+out:
+	spin_unlock_irqrestore(&idev->irq_spin, flag);
+}
+
+void ilitek_plat_irq_enable(void)
+{
+	unsigned long flag;
+
+	spin_lock_irqsave(&idev->irq_spin, flag);
+
+	if (atomic_read(&idev->irq_stat) == ENABLE)
+		goto out;
+
+	if (!idev->irq_num) {
+		ipio_err("gpio_to_irq (%d) is incorrect
", idev->irq_num);
+		goto out;
+	}
+
+	enable_irq(idev->irq_num);
+	atomic_set(&idev->irq_stat, ENABLE);
+	ipio_debug("Enable irq success
");
+
+out:
+	spin_unlock_irqrestore(&idev->irq_spin, flag);
+}
+
+static irqreturn_t ilitek_plat_isr_top_half(int irq, void *dev_id)
+{
+	ipio_debug("report: %d, rst: %d, fw: %d, switch: %d, mp: %d, sleep: %d, esd: %d
",
+			idev->report,
+			atomic_read(&idev->tp_reset),
+			atomic_read(&idev->fw_stat),
+			atomic_read(&idev->tp_sw_mode),
+			atomic_read(&idev->mp_stat),
+			atomic_read(&idev->tp_sleep),
+			atomic_read(&idev->esd_stat));
+
+	if (irq != idev->irq_num) {
+		ipio_err("Incorrect irq number (%d)
", irq);
+		return IRQ_NONE;
+	}
+
+	if (atomic_read(&idev->mp_int_check) == ENABLE) {
+		atomic_set(&idev->mp_int_check, DISABLE);
+		ipio_info("Get an INT for mp, ignore
");
+		wake_up(&(idev->inq));
+		return IRQ_HANDLED;
+	}
+
+	if (!idev->report || atomic_read(&idev->tp_reset) ||
+		atomic_read(&idev->fw_stat) || atomic_read(&idev->tp_sw_mode) ||
+		atomic_read(&idev->mp_stat) || atomic_read(&idev->tp_sleep) ||
+		atomic_read(&idev->esd_stat)) {
+			ipio_debug("ignore interrupt !
");
+			return IRQ_HANDLED;
+	}
+	return IRQ_WAKE_THREAD;
+}
+
+static irqreturn_t ilitek_plat_isr_bottom_half(int irq, void *dev_id)
+{
+	if (mutex_is_locked(&idev->touch_mutex)) {
+		ipio_debug("touch is locked, ignore
");
+		return IRQ_HANDLED;
+	}
+	mutex_lock(&idev->touch_mutex);
+	ilitek_tddi_report_handler();
+	mutex_unlock(&idev->touch_mutex);
+	return IRQ_HANDLED;
+}
+
+void ilitek_plat_irq_unregister(void)
+{
+	devm_free_irq(idev->dev, idev->irq_num, NULL);
+}
+
+int ilitek_plat_irq_register(int type)
+{
+	int ret = 0;
+	static bool get_irq_pin;
+
+	atomic_set(&idev->irq_stat, DISABLE);
+
+	if (get_irq_pin == false) {
+		idev->irq_num  = gpio_to_irq(idev->tp_int);
+		get_irq_pin = true;
+	}
+
+	ipio_info("idev->irq_num = %d
", idev->irq_num);
+
+	ret = devm_request_threaded_irq(idev->dev, idev->irq_num,
+				   ilitek_plat_isr_top_half,
+				   ilitek_plat_isr_bottom_half,
+				   type | IRQF_ONESHOT, "ilitek", NULL);
+
+	if (type == IRQF_TRIGGER_FALLING)
+		ipio_info("IRQ TYPE = IRQF_TRIGGER_FALLING
");
+	if (type == IRQF_TRIGGER_RISING)
+		ipio_info("IRQ TYPE = IRQF_TRIGGER_RISING
");
+
+	if (ret != 0)
+		ipio_err("Failed to register irq handler, irq = %d, ret = %d
", idev->irq_num, ret);
+
+	atomic_set(&idev->irq_stat, ENABLE);
+
+	return ret;
+}
+
+#if defined(CONFIG_FB) || defined(CONFIG_DRM_MSM)
+static int ilitek_plat_notifier_fb(struct notifier_block *self, unsigned long event, void *data)
+{
+	int *blank;
+	struct fb_event *evdata = data;
+
+	ipio_info("Notifier's event = %ld
", event);
+
+	/*
+	 *	FB_EVENT_BLANK(0x09): A hardware display blank change occurred.
+	 *	FB_EARLY_EVENT_BLANK(0x10): A hardware display blank early change occurred.
+	 */
+	if (evdata && evdata->data) {
+		blank = evdata->data;
+		switch (*blank) {
+#ifdef CONFIG_DRM_MSM
+		case MSM_DRM_BLANK_POWERDOWN:
+#else
+		case FB_BLANK_POWERDOWN:
+#endif
+#ifdef CONFIG_PLAT_SPRD
+		case DRM_MODE_DPMS_OFF:
+#endif /* CONFIG_PLAT_SPRD */
+			if (TP_SUSPEND_PRIO) {
+#ifdef CONFIG_DRM_MSM
+				if (event != MSM_DRM_EARLY_EVENT_BLANK)
+#else
+				if (event != FB_EARLY_EVENT_BLANK)
+#endif
+					return NOTIFY_DONE;
+			} else {
+#ifdef CONFIG_DRM_MSM
+				if (event != MSM_DRM_EVENT_BLANK)
+#else
+				if (event != FB_EVENT_BLANK)
+#endif
+					return NOTIFY_DONE;
+			}
+			if (ilitek_tddi_sleep_handler(TP_SUSPEND) < 0)
+				ipio_err("TP suspend failed
");
+			break;
+#ifdef CONFIG_DRM_MSM
+		case MSM_DRM_BLANK_UNBLANK:
+		case MSM_DRM_BLANK_NORMAL:
+#else
+		case FB_BLANK_UNBLANK:
+		case FB_BLANK_NORMAL:
+#endif
+
+#ifdef CONFIG_PLAT_SPRD
+		case DRM_MODE_DPMS_ON:
+#endif /* CONFIG_PLAT_SPRD */
+
+#ifdef CONFIG_DRM_MSM
+			if (event == MSM_DRM_EVENT_BLANK)
+#else
+			if (event == FB_EVENT_BLANK)
+#endif
+			{
+				if (ilitek_tddi_sleep_handler(TP_RESUME) < 0)
+					ipio_err("TP resume failed
");
+
+			}
+			break;
+		default:
+			ipio_err("Unknown event, blank = %d
", *blank);
+			break;
+		}
+	}
+	return NOTIFY_OK;
+}
+#else
+static void ilitek_plat_early_suspend(struct early_suspend *h)
+{
+	if (ilitek_tddi_sleep_handler(TP_SUSPEND) < 0)
+		ipio_err("TP suspend failed
");
+}
+
+static void ilitek_plat_late_resume(struct early_suspend *h)
+{
+	if (ilitek_tddi_sleep_handler(TP_RESUME) < 0)
+		ipio_err("TP resume failed
");
+}
+#endif
+
+static void ilitek_plat_sleep_init(void)
+{
+#ifdef CONFIG_FB || defined(CONFIG_DRM_MSM)
+	ipio_info("Init notifier_fb struct
");
+	idev->notifier_fb.notifier_call = ilitek_plat_notifier_fb;
+#if defined(CONFIG_DRM_MSM)
+		if (msm_drm_register_client(&idev->notifier_fb)) {
+			ipio_err("msm_drm_register_client Unable to register fb_notifier
");
+		}
+#else
+#ifdef CONFIG_PLAT_SPRD
+	if (adf_register_client(&idev->notifier_fb))
+		ipio_err("Unable to register notifier_fb
");
+#else
+	if (fb_register_client(&idev->notifier_fb))
+		ipio_err("Unable to register notifier_fb
");
+#endif /* CONFIG_PLAT_SPRD */
+#endif /* CONFIG_DRM_MSM */
+#else
+	ipio_info("Init eqarly_suspend struct
");
+	idev->early_suspend.suspend = ilitek_plat_early_suspend;
+	idev->early_suspend.resume = ilitek_plat_late_resume;
+	idev->early_suspend.level = EARLY_SUSPEND_LEVEL_BLANK_SCREEN + 1;
+	register_early_suspend(&idev->early_suspend);
+#endif
+}
+
+static int ilitek_plat_probe(void)
+{
+	ipio_info("platform probe() begin!
");
+
+	if (REGULATOR_POWER)
+		ilitek_plat_regulator_power_init();
+
+	if (ilitek_plat_gpio_register() < 0)
+		ipio_err("Register gpio failed
");
+
+	if (ilitek_tddi_init() < 0) {
+		ipio_err("platform probe failed
");
+		return -ENODEV;
+	}
+
+	ilitek_plat_irq_register(idev->irq_tirgger_type);
+	ilitek_plat_sleep_init();
+
+	ipio_info("platform probe() touch init complete!
");
+
+//	ilt_panel_exitsleep_and_turnon(DRM_PanelS);
+	ipio_info("platform probe() end!
");
+	return 0;
+}
+
+static int ilitek_plat_remove(void)
+{
+	ipio_info("remove plat dev
");
+	ilitek_tddi_dev_remove();
+	return 0;
+}
+
+static const struct of_device_id tp_match_table[] = {
+	{.compatible = DTS_OF_NAME},
+	{},
+};
+
+static struct ilitek_hwif_info hwif = {
+	.bus_type = TDDI_INTERFACE,
+	.plat_type = TP_PLAT_NXP,
+	.owner = THIS_MODULE,
+	.name = TDDI_DEV_ID,
+	.of_match_table = of_match_ptr(tp_match_table),
+	.plat_probe = ilitek_plat_probe,
+	.plat_remove = ilitek_plat_remove,
+};
+
+static int __init ilitek_plat_dev_init(void)
+{
+	ipio_info("ILITEK TP driver init for NXP
");
+	if (ilitek_tddi_dev_init(&hwif) < 0) {
+		ipio_err("Failed to register i2c/spi bus driver
");
+		return -ENODEV;
+	}
+	return 0;
+}
+
+static void __exit ilitek_plat_dev_exit(void)
+{
+	ipio_info("ilitek driver has been removed
");
+	ilitek_tddi_dev_remove();
+}
+
+module_init(ilitek_plat_dev_init);
+module_exit(ilitek_plat_dev_exit);
+MODULE_AUTHOR("ILITEK");
+MODULE_LICENSE("GPL");
diff --git a/drivers/input/touchscreen/ili/ilitek_touch.c b/drivers/input/touchscreen/ili/ilitek_touch.c
new file mode 100644
index 000000000000..dfb666fad348
--- /dev/null
+++ b/drivers/input/touchscreen/ili/ilitek_touch.c
@@ -0,0 +1,983 @@
+/*
+ * ILITEK Touch IC driver
+ *
+ * Copyright (C) 2011 ILI Technology Corporation.
+ *
+ * Author: Dicky Chiang <dicky_chiang@ilitek.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#include "ilitek.h"
+
+/*gesture info mode*/
+struct demo_debug_info_id0 {
+	u8 id;
+	u8 app_sys_powr_state_e : 3;
+	u8 app_sys_state_e : 3;
+	u8 tp_state_e : 2;
+
+	u8 touch_palm_state_e : 2;
+	u8 app_an_statu_e : 3;
+	u8 app_sys_check_bg_abnormal : 1;
+	u8 g_b_wrong_bg: 1;
+	u8 reserved0 : 1;
+
+	u8 status_of_dynamic_th_e : 4;
+	u8 reserved1 : 4;
+
+	u32 algo_pt_status0 : 3;
+	u32 algo_pt_status1 : 3;
+	u32 algo_pt_status2 : 3;
+	u32 algo_pt_status3 : 3;
+	u32 algo_pt_status4 : 3;
+	u32 algo_pt_status5 : 3;
+	u32 algo_pt_status6 : 3;
+	u32 algo_pt_status7 : 3;
+	u32 algo_pt_status8 : 3;
+	u32 algo_pt_status9 : 3;
+	u32 reserved2 : 2;
+};
+
+void ilitek_dump_data(void *data, int type, int len, int row_len, const char *name)
+{
+	int i, row = 31;
+	u8 *p8 = NULL;
+	s32 *p32 = NULL;
+
+	if (!ipio_debug_level)
+		return;
+
+	if (row_len > 0)
+		row = row_len;
+
+	if (data == NULL) {
+		ipio_err("The data going to dump is NULL
");
+		return;
+	}
+
+	pr_cont("

");
+	pr_cont("ILITEK: Dump %s data
", name);
+	pr_cont("ILITEK: ");
+
+	if (type == 8)
+		p8 = (u8 *) data;
+	if (type == 32 || type == 10)
+		p32 = (s32 *) data;
+
+	for (i = 0; i < len; i++) {
+		if (type == 8)
+			pr_cont(" %4x ", p8[i]);
+		else if (type == 32)
+			pr_cont(" %4x ", p32[i]);
+		else if (type == 10)
+			pr_cont(" %4d ", p32[i]);
+		if ((i % row) == row - 1) {
+			pr_cont("
");
+			pr_cont("ILITEK: ");
+		}
+	}
+	pr_cont("

");
+}
+
+static void dma_clear_reg_setting(void)
+{
+	ipio_info("[Clear register setting]
");
+
+	ipio_info("interrupt t0/t1 enable flag
");
+	if (ilitek_ice_mode_bit_mask_write(INTR32_ADDR, INTR32_reg_t0_int_en, (0 << 24)) < 0)
+		ipio_err("Write %lu at %x failed
", INTR32_reg_t0_int_en, INTR32_ADDR);
+	if (ilitek_ice_mode_bit_mask_write(INTR32_ADDR, INTR32_reg_t1_int_en, (0 << 25)) < 0)
+		ipio_err("Write %lu at %x failed
", INTR32_reg_t1_int_en, INTR32_ADDR);
+
+	ipio_info("clear tdi_err_int_flag
");
+	if (ilitek_ice_mode_bit_mask_write(INTR2_ADDR, INTR2_tdi_err_int_flag_clear, (1 << 18)) < 0)
+		ipio_err("Write %lu at %x failed
", INTR2_tdi_err_int_flag_clear, INTR2_ADDR);
+
+	ipio_info("clear dma channel 0 src1 info
");
+	if (ilitek_ice_mode_write(DMA49_reg_dma_ch0_src1_addr, 0x00000000, 4) < 0)
+		ipio_err("Write 0x00000000 at %x failed
", DMA49_reg_dma_ch0_src1_addr);
+	if (ilitek_ice_mode_write(DMA50_reg_dma_ch0_src1_step_inc, 0x00, 1) < 0)
+		ipio_err("Write 0x0 at %x failed
", DMA50_reg_dma_ch0_src1_step_inc);
+	if (ilitek_ice_mode_bit_mask_write(DMA50_ADDR, DMA50_reg_dma_ch0_src1_format, (0 << 24)) < 0)
+		ipio_err("Write %lu at %x failed
", DMA50_reg_dma_ch0_src1_format, DMA50_ADDR);
+	if (ilitek_ice_mode_bit_mask_write(DMA50_ADDR, DMA50_reg_dma_ch0_src1_en, (1 << 31)) < 0)
+		ipio_err("Write %lu at %x failed
", DMA50_reg_dma_ch0_src1_en, DMA50_ADDR);
+
+	ipio_info("clear dma channel 0 src2 info
");
+	if (ilitek_ice_mode_bit_mask_write(DMA52_ADDR, DMA52_reg_dma_ch0_src2_en, (0 << 31)) < 0)
+		ipio_err("Write %lu at %x failed
", DMA52_reg_dma_ch0_src2_en, DMA52_ADDR);
+
+	ipio_info("clear dma channel 0 trafer info
");
+	if (ilitek_ice_mode_write(DMA55_reg_dma_ch0_trafer_counts, 0x00000000, 4) < 0)
+		ipio_err("Write 0x00000000 at %x failed
", DMA55_reg_dma_ch0_trafer_counts);
+	if (ilitek_ice_mode_bit_mask_write(DMA55_ADDR, DMA55_reg_dma_ch0_trafer_mode, (0 << 24)) < 0)
+		ipio_err("Write %lu at %x failed
", DMA55_reg_dma_ch0_trafer_mode, DMA55_ADDR);
+
+	ipio_info("clear dma channel 0 trigger select
");
+	if (ilitek_ice_mode_bit_mask_write(DMA48_ADDR, DMA48_reg_dma_ch0_trigger_sel, (0 << 16)) < 0)
+		ipio_err("Write %lu at %x failed
", DMA48_reg_dma_ch0_trigger_sel, DMA48_ADDR);
+
+	if (ilitek_ice_mode_bit_mask_write(INTR1_ADDR, INTR1_reg_flash_int_flag, (1 << 25)) < 0)
+		ipio_err("Write %lu at %x failed
", INTR1_reg_flash_int_flag, INTR1_ADDR);
+
+	ipio_info("clear dma flash setting
");
+	ilitek_tddi_flash_clear_dma();
+}
+
+static void dma_trigger_reg_setting(u32 reg_dest_addr, u32 flash_start_addr, u32 copy_size)
+{
+	ipio_info("set dma channel 0 clear
");
+	if (ilitek_ice_mode_bit_mask_write(DMA48_ADDR, DMA48_reg_dma_ch0_start_clear, (1 << 25)) < 0)
+		ipio_err("Write %lu at %x failed
", DMA48_reg_dma_ch0_start_clear, DMA48_ADDR);
+
+	ipio_info("set dma channel 0 src1 info
");
+	if (ilitek_ice_mode_write(DMA49_reg_dma_ch0_src1_addr, 0x00041010, 4) < 0)
+		ipio_err("Write 0x00041010 at %x failed
", DMA49_reg_dma_ch0_src1_addr);
+	if (ilitek_ice_mode_write(DMA50_reg_dma_ch0_src1_step_inc, 0x00, 1) < 0)
+		ipio_err("Write 0x00 at %x failed
", DMA50_reg_dma_ch0_src1_step_inc);
+	if (ilitek_ice_mode_bit_mask_write(DMA50_ADDR, DMA50_reg_dma_ch0_src1_format, (0 << 24)) < 0)
+		ipio_err("Write %lu at %x failed
", DMA50_reg_dma_ch0_src1_format, DMA50_ADDR);
+	if (ilitek_ice_mode_bit_mask_write(DMA50_ADDR, DMA50_reg_dma_ch0_src1_en, (1 << 31)) < 0)
+		ipio_err("Write %lu at %x failed
", DMA50_reg_dma_ch0_src1_en, DMA50_ADDR);
+
+	ipio_info("set dma channel 0 src2 info
");
+	if (ilitek_ice_mode_bit_mask_write(DMA52_ADDR, DMA52_reg_dma_ch0_src2_en, (0 << 31)) < 0)
+		ipio_err("Write %lu at %x failed
", DMA52_reg_dma_ch0_src2_en, DMA52_ADDR);
+
+	ipio_info("set dma channel 0 dest info
");
+	if (ilitek_ice_mode_write(DMA53_reg_dma_ch0_dest_addr, reg_dest_addr, 3) < 0)
+		ipio_err("Write %x at %x failed
", reg_dest_addr, DMA53_reg_dma_ch0_dest_addr);
+	if (ilitek_ice_mode_write(DMA54_reg_dma_ch0_dest_step_inc, 0x01, 1) < 0)
+		ipio_err("Write 0x01 at %x failed
", DMA54_reg_dma_ch0_dest_step_inc);
+	if (ilitek_ice_mode_bit_mask_write(DMA54_ADDR, DMA54_reg_dma_ch0_dest_format, (0 << 24)) < 0)
+		ipio_err("Write %lu at %x failed
", DMA54_reg_dma_ch0_dest_format, DMA54_ADDR);
+	if (ilitek_ice_mode_bit_mask_write(DMA54_ADDR, DMA54_reg_dma_ch0_dest_en, (1 << 31)) < 0)
+		ipio_err("Write %lu at %x failed
", DMA54_reg_dma_ch0_dest_en, DMA54_ADDR);
+
+	ipio_info("set dma channel 0 trafer info
");
+	if (ilitek_ice_mode_write(DMA55_reg_dma_ch0_trafer_counts, copy_size, 4) < 0)
+		ipio_err("Write %x at %x failed
", copy_size, DMA55_reg_dma_ch0_trafer_counts);
+	if (ilitek_ice_mode_bit_mask_write(DMA55_ADDR, DMA55_reg_dma_ch0_trafer_mode, (0 << 24)) < 0)
+		ipio_err("Write %lu at %x failed
", DMA55_reg_dma_ch0_trafer_mode, DMA55_ADDR);
+
+	ipio_info("set dma channel 0 int info
");
+	if (ilitek_ice_mode_bit_mask_write(INTR33_ADDR, INTR33_reg_dma_ch0_int_en, (1 << 17)) < 0)
+		ipio_err("Write %lu at %x failed
", INTR33_reg_dma_ch0_int_en, INTR33_ADDR);
+
+	ipio_info("set dma channel 0 trigger select
");
+	if (ilitek_ice_mode_bit_mask_write(DMA48_ADDR, DMA48_reg_dma_ch0_trigger_sel, (1 << 16)) < 0)
+		ipio_err("Write %lu at %x failed
", DMA48_reg_dma_ch0_trigger_sel, DMA48_ADDR);
+
+	ipio_info("set dma flash setting, FlashAddr = 0x%x
", flash_start_addr);
+	ilitek_tddi_flash_dma_write(flash_start_addr, (flash_start_addr+copy_size), copy_size);
+
+	ipio_info("clear flash and dma ch0 int flag
");
+	if (ilitek_ice_mode_bit_mask_write(INTR1_ADDR, INTR1_reg_flash_int_flag, (1 << 25)) < 0)
+		ipio_err("Write %lu at %x failed
", INTR1_reg_flash_int_flag, INTR1_ADDR);
+	if (ilitek_ice_mode_bit_mask_write(INTR1_ADDR, INTR1_reg_dma_ch0_int_flag, (1 << 17)) < 0)
+		ipio_err("Write %lu at %x failed
", INTR1_reg_dma_ch0_int_flag, INTR1_ADDR);
+	if (ilitek_ice_mode_bit_mask_write(0x041013, BIT(0), 1) < 0) //patch
+		ipio_err("Write %lu at %x failed
", BIT(0), 0x041013);
+
+	/* DMA Trigger */
+	if (ilitek_ice_mode_write(FLASH4_reg_rcv_data, 0xFF, 1) < 0)
+		ipio_err("Trigger DMA failed
");
+	/* waiting for fw reload code completed. */
+	mdelay(30);
+
+	/* CS High */
+	if (ilitek_ice_mode_write(FLASH0_reg_flash_csb, 0x1, 1) < 0)
+		ipio_err("Pull CS High failed
");
+	/* waiting for CS status done */
+	mdelay(10);
+}
+
+int ilitek_tddi_move_mp_code_flash(void)
+{
+	int ret = 0;
+	u32 mp_text_size = 0, mp_andes_init_size = 0;
+	u32 mp_flash_addr, mp_size, overlay_start_addr, overlay_end_addr;
+	bool dma_trigger_enable = 0;
+	u8 cmd[16] = {0};
+
+	cmd[0] = P5_X_MODE_CONTROL;
+	cmd[1] = P5_X_FW_TEST_MODE;
+	ret = idev->write(cmd, 2);
+	if (ret < 0)
+		goto out;
+
+	cmd[0] = P5_X_MP_TEST_MODE_INFO;
+	ret = idev->write(cmd, 1);
+	if (ret < 0)
+		goto out;
+
+	memset(cmd, 0, sizeof(cmd));
+
+	ipio_info("read mp info length = %d
", idev->protocol->mp_info_len);
+	ret = idev->read(cmd, idev->protocol->mp_info_len);
+	if (ret < 0)
+		goto out;
+
+	ilitek_dump_data(cmd, 8, idev->protocol->mp_info_len, 0, "MP overlay info");
+
+	dma_trigger_enable = 0;
+
+	mp_flash_addr = cmd[3] + (cmd[2] << 8) + (cmd[1] << 16);
+	mp_size = cmd[6] + (cmd[5] << 8) + (cmd[4] << 16);
+	overlay_start_addr = cmd[9] + (cmd[8] << 8) + (cmd[7] << 16);
+	overlay_end_addr = cmd[12] + (cmd[11] << 8) + (cmd[10] << 16);
+
+	if (overlay_start_addr != 0x0 && overlay_end_addr != 0x0
+		&& cmd[0] == P5_X_MP_TEST_MODE_INFO)
+		dma_trigger_enable = 1;
+
+	ipio_info("MP info Overlay: Enable = %d, addr = 0x%x ~ 0x%x, flash addr = 0x%x, mp size = 0x%x
",
+		dma_trigger_enable, overlay_start_addr,
+		overlay_end_addr, mp_flash_addr, mp_size);
+
+	/* Check if ic is ready switching test mode from demo mode */
+	idev->actual_tp_mode = P5_X_FW_AP_MODE;
+	ret = ilitek_tddi_ic_check_busy(50, 50); /* Set busy as 0x41 */
+	if (ret < 0)
+		goto out;
+
+	ret = ilitek_ice_mode_ctrl(ENABLE, OFF);
+	if (ret < 0)
+		goto out;
+
+	if (dma_trigger_enable) {
+		mp_andes_init_size = overlay_start_addr;
+		mp_text_size = (mp_size - overlay_end_addr) + 1;
+		ipio_info("MP andes init size = %d , MP text size = %d
", mp_andes_init_size, mp_text_size);
+
+		dma_clear_reg_setting();
+
+		ipio_info("[Move ANDES.INIT to DRAM]
");
+		dma_trigger_reg_setting(0, mp_flash_addr, mp_andes_init_size);	 /* DMA ANDES.INIT */
+
+		dma_clear_reg_setting();
+
+		ipio_info("[Move MP.TEXT to DRAM]
");
+		dma_trigger_reg_setting(overlay_end_addr, (mp_flash_addr + overlay_start_addr), mp_text_size);
+
+		dma_clear_reg_setting();
+	} else {
+		/* DMA Trigger */
+		if (ilitek_ice_mode_write(FLASH4_reg_rcv_data, 0xFF, 1) < 0)
+			ipio_err("Trigger DMA failed
");
+		/* waiting for fw reload code completed. */
+		mdelay(30);
+
+		/* CS High */
+		if (ilitek_ice_mode_write(FLASH0_reg_flash_csb, 0x1, 1) < 0)
+			ipio_err("Pull CS High failed
");
+		/* waiting for CS status done */
+		mdelay(10);
+	}
+
+	if (ilitek_tddi_reset_ctrl(TP_IC_CODE_RST) < 0)
+		ipio_err("IC Code reset failed during moving mp code
");
+
+	ret = ilitek_ice_mode_ctrl(DISABLE, OFF);
+	if (ret < 0)
+		goto out;
+
+	/* Check if ic is already in test mode */
+	idev->actual_tp_mode = P5_X_FW_TEST_MODE; /* set busy as 0x51 */
+	ret = ilitek_tddi_ic_check_busy(300, 50);
+	if (ret < 0)
+		ipio_err("Check cdc timeout failed after moved mp code
");
+
+out:
+	return ret;
+}
+
+int ilitek_tddi_move_mp_code_iram(void)
+{
+	ipio_info("Download MP code to iram
");
+	return ilitek_tddi_fw_upgrade_handler(NULL);
+}
+
+int ilitek_tddi_proximity_near(int mode)
+{
+	int ret = 0;
+
+	switch (mode) {
+	case DDI_POWER_ON:
+		/*
+		 * If the power of VSP and VSN keeps alive when proximity near event
+		 * occures, TP can just go to sleep in.
+		 */
+		ret = ilitek_tddi_ic_func_ctrl("sleep", SLEEP_IN);
+		if (ret < 0)
+			ipio_err("Write sleep in cmd failed
");
+		break;
+	case DDI_POWER_OFF:
+		ipio_info("DDI POWER OFF, do nothing
");
+		break;
+	default:
+		ipio_err("Unknown mode (%d)
", mode);
+		ret = -EINVAL;
+		break;
+	}
+	return ret;
+}
+
+int ilitek_tddi_proximity_far(int mode)
+{
+	int ret = 0;
+	u8 cmd[2] = {0};
+
+	switch (mode) {
+	case WAKE_UP_GESTURE_RECOVERY:
+		/*
+		 * If the power of VSP and VSN has been shut down previsouly,
+		 * TP should go through gesture recovery to get back.
+		 */
+		ilitek_tddi_gesture_recovery();
+		break;
+	case WAKE_UP_SWITCH_GESTURE_MODE:
+		/*
+		 * If the power of VSP and VSN keeps alive in the event of proximity near,
+		 * TP can be just recovered by switching gesture mode to get back.
+		 */
+		cmd[0] = 0xF6;
+		cmd[1] = 0x0A;
+
+		ipio_info("write prepare gesture command 0xF6 0x0A
");
+		ret = idev->write(cmd, 2);
+		if (ret < 0) {
+			ipio_info("write prepare gesture command error
");
+			break;
+		}
+
+		ret = ilitek_tddi_switch_tp_mode(P5_X_FW_GESTURE_MODE);
+		if (ret < 0)
+			ipio_err("Switch to gesture mode failed during proximity far
");
+		break;
+	default:
+		ipio_err("Unknown mode (%d)
", mode);
+		ret = -EINVAL;
+		break;
+	}
+	return ret;
+}
+
+int ilitek_tddi_move_gesture_code_flash(int mode)
+{
+	int ret = 0;
+
+	ipio_info("Switch to Gesture mode, lpwg cmd = %d
",  idev->gesture_mode);
+	ret = ilitek_tddi_switch_tp_data_format(idev->gesture_mode);
+
+	return ret;
+}
+
+int ilitek_tddi_move_gesture_code_iram(int mode)
+{
+	int i;
+	int timeout = 10;
+	u8 cmd[3] = {0};
+
+	if (ilitek_tddi_ic_func_ctrl("lpwg", 0x3) < 0)
+		ipio_err("write gesture flag failed
");
+
+	ipio_info("Switch to Gesture mode, lpwg cmd = %d
",  mode);
+	ilitek_tddi_switch_tp_data_format(mode);
+
+	for (i = 0; i < timeout; i++) {
+		/* Prepare Check Ready */
+		cmd[0] = P5_X_READ_DATA_CTRL;
+		cmd[1] = 0xA;
+		idev->write(cmd, 2);
+
+		/* Check ready for load code */
+		cmd[0] = 0x1;
+		cmd[1] = 0xA;
+		cmd[2] = 0x5;
+		if ((idev->write(cmd, 3)) < 0)
+			ipio_err("write 0x1,0xA,0x5 error");
+
+		if ((idev->read(cmd, 1)) < 0)
+			ipio_err("read gesture ready byte error
");
+
+		ipio_debug("gesture ready byte = 0x%x
", cmd[0]);
+		if (cmd[0] == 0x91) {
+			ipio_info("Gesture check fw ready
");
+			break;
+		}
+	}
+
+	if (i >= timeout) {
+		ipio_err("Gesture is not ready (0x%x), try to run its recovery
", cmd[0]);
+		ilitek_tddi_gesture_recovery();
+		return 0;
+	}
+
+	if (ilitek_tddi_fw_upgrade_handler(NULL) < 0)
+		ipio_err("FW upgrade failed during moving code
");
+
+	/* FW star run gestrue code cmd */
+	cmd[0] = 0x1;
+	cmd[1] = 0xA;
+	cmd[2] = 0x6;
+	if ((idev->write(cmd, 3)) < 0)
+		ipio_err("write 0x1,0xA,0x6 error");
+	return 0;
+}
+
+u8 ilitek_calc_packet_checksum(u8 *packet, int len)
+{
+	int i;
+	s32 sum = 0;
+
+	for (i = 0; i < len; i++)
+		sum += packet[i];
+
+	return (u8) ((-sum) & 0xFF);
+}
+
+int ilitek_tddi_touch_esd_gesture_flash(void)
+{
+	int ret = 0, retry = 100;
+	u32 answer = 0;
+
+	if (ilitek_ice_mode_ctrl(ENABLE, OFF) < 0)
+		ipio_err("Enable ice mode failed during gesture recovery
");
+
+	ipio_info("ESD Gesture PWD Addr = 0x%x, Answer = 0x%x
",
+		I2C_ESD_GESTURE_PWD_ADDR, I2C_ESD_GESTURE_RUN);
+
+	/* write a special password to inform FW go back into gesture mode */
+	if (ilitek_ice_mode_write(I2C_ESD_GESTURE_PWD_ADDR, ESD_GESTURE_PWD, 4) < 0)
+		ipio_err("write password failed
");
+
+	/* HW reset gives effect to FW receives password successed */
+	idev->actual_tp_mode = P5_X_FW_AP_MODE;
+	if (ilitek_tddi_reset_ctrl(idev->reset) < 0)
+		ipio_err("TP Reset failed during gesture recovery
");
+
+	if (ilitek_ice_mode_ctrl(ENABLE, ON) < 0)
+		ipio_err("Enable ice mode failed during gesture recovery
");
+
+	/* polling another specific register to see if gesutre is enabled properly */
+	do {
+		if (ilitek_ice_mode_read(I2C_ESD_GESTURE_PWD_ADDR, &answer, sizeof(u32)) < 0)
+			ipio_err("Read gesture answer error
");
+		if (answer != I2C_ESD_GESTURE_RUN)
+			ipio_info("answer = 0x%x != (0x%x)
", answer, I2C_ESD_GESTURE_RUN);
+		mdelay(1);
+		retry--;
+	} while (answer != I2C_ESD_GESTURE_RUN && retry > 0);
+
+	if (retry <= 0) {
+		ipio_err("Enter gesture failed
");
+		ret = -1;
+	} else {
+		ipio_info("Enter gesture successfully
");
+	}
+
+	if (ilitek_ice_mode_ctrl(DISABLE, ON) < 0)
+		ipio_err("Disable ice mode failed during gesture recovery
");
+
+	idev->gesture_move_code(idev->gesture_mode);
+	return ret;
+}
+
+int ilitek_tddi_touch_esd_gesture_iram(void)
+{
+	int ret = 0, retry = 100;
+	u32 answer = 0;
+	u8 cmd[3] = {0};
+
+	if (ilitek_ice_mode_ctrl(ENABLE, OFF) < 0)
+		ipio_err("Enable ice mode failed during gesture recovery
");
+
+	ipio_info("ESD Gesture PWD Addr = 0x%x, Answer = 0x%x
",
+		SPI_ESD_GESTURE_PWD_ADDR, SPI_ESD_GESTURE_RUN);
+
+	/* write a special password to inform FW go back into gesture mode */
+	if (ilitek_ice_mode_write(SPI_ESD_GESTURE_PWD_ADDR, ESD_GESTURE_PWD, 4) < 0)
+		ipio_err("write password failed
");
+
+	/* Host download gives effect to FW receives password successed */
+	idev->actual_tp_mode = P5_X_FW_AP_MODE;
+	if (ilitek_tddi_fw_upgrade_handler(NULL) < 0)
+		ipio_err("FW upgrade failed during gesture recovery
");
+
+	if (ilitek_ice_mode_ctrl(ENABLE, ON) < 0)
+		ipio_err("Enable ice mode failed during gesture recovery
");
+
+	/* polling another specific register to see if gesutre is enabled properly */
+	do {
+		if (ilitek_ice_mode_read(SPI_ESD_GESTURE_PWD_ADDR, &answer, sizeof(u32)) < 0)
+			ipio_err("Read gesture answer error
");
+
+		if (answer != SPI_ESD_GESTURE_RUN)
+			ipio_info("answer = 0x%x != (0x%x)
", answer, SPI_ESD_GESTURE_RUN);
+		mdelay(1);
+	} while (answer != SPI_ESD_GESTURE_RUN && --retry > 0);
+
+	if (retry <= 0) {
+		ipio_err("Enter gesture failed
");
+		ret = -1;
+	} else {
+		ipio_info("Enter gesture successfully
");
+	}
+
+	if (ilitek_ice_mode_ctrl(DISABLE, ON) < 0)
+		ipio_err("Disable ice mode failed during gesture recovery
");
+
+	idev->actual_tp_mode = P5_X_FW_GESTURE_MODE;
+	if (ilitek_tddi_fw_upgrade_handler(NULL) < 0)
+		ipio_err("FW upgrade failed during gesture recovery
");
+
+	/* FW star run gestrue code cmd */
+	cmd[0] = 0x1;
+	cmd[1] = 0xA;
+	cmd[2] = 0x6;
+	if ((idev->write(cmd, sizeof(cmd))) < 0)
+		ipio_err("write 0x1,0xA,0x6 error");
+
+	return ret;
+}
+
+void demo_debug_info_id0(u8 *buf, size_t len)
+{
+	struct demo_debug_info_id0 id0;
+
+	ipio_memcpy(&id0, buf, sizeof(id0), len);
+	ipio_info("id0 len = %d,strucy len = %ld", (int)len, sizeof(id0));
+
+	ipio_info("id = %d
", id0.id);
+	ipio_info("app_sys_powr_state_e = %d
", id0.app_sys_powr_state_e);
+	ipio_info("app_sys_state_e = %d
", id0.app_sys_state_e);
+	ipio_info("tp_state_e = %d
", id0.tp_state_e);
+	ipio_info("touch_palm_state_e = %d
", id0.touch_palm_state_e);
+	ipio_info("app_an_statu_e = %d
", id0.app_an_statu_e);
+	ipio_info("app_sys_check_bg_abnormal = %d
", id0.app_sys_check_bg_abnormal);
+	ipio_info("g_b_wrong_bg = %d
", id0.g_b_wrong_bg);
+	ipio_info("status_of_dynamic_th_e = %d
", id0.status_of_dynamic_th_e);
+	ipio_info("algo_pt_status0 = %d
", id0.algo_pt_status0);
+	ipio_info("algo_pt_status1 = %d
", id0.algo_pt_status1);
+	ipio_info("algo_pt_status2 = %d
", id0.algo_pt_status2);
+	ipio_info("algo_pt_status3 = %d
", id0.algo_pt_status3);
+	ipio_info("algo_pt_status4 = %d
", id0.algo_pt_status4);
+	ipio_info("algo_pt_status5 = %d
", id0.algo_pt_status5);
+	ipio_info("algo_pt_status6 = %d
", id0.algo_pt_status6);
+	ipio_info("algo_pt_status7 = %d
", id0.algo_pt_status7);
+	ipio_info("algo_pt_status8 = %d
", id0.algo_pt_status8);
+	ipio_info("algo_pt_status9 = %d
", id0.algo_pt_status9);
+}
+
+void demo_debug_info_mode(u8 *buf, size_t len)
+{
+	u8 *info_ptr;
+	u8 info_id, info_len;
+
+	ilitek_tddi_report_ap_mode(buf, P5_X_DEMO_MODE_PACKET_LEN);
+	info_ptr = buf + P5_X_DEMO_MODE_PACKET_LEN;
+	info_len = info_ptr[0];
+	info_id = info_ptr[1];
+
+	ipio_info("info len = %d ,id = %d
", info_len, info_id);
+
+	idev->demo_debug_info[info_id](&info_ptr[1] , info_len);
+}
+
+int ilitek_tddi_debug_report_alloc(void)
+{
+	int i, ret = 0;
+	int row_size = 1 * K + 1, col_size = 2 * K + 1;
+
+	if (!idev->debug_node_open && !idev->debug_buf)
+		return ret;
+
+	if (!idev->debug_node_open && idev->debug_buf != NULL)
+		goto out;
+
+	if (idev->debug_node_open && !idev->debug_buf) {
+		idev->debug_buf = (unsigned char **)kzalloc(row_size * sizeof(unsigned char *), GFP_KERNEL);
+		if (ERR_ALLOC_MEM(idev->debug_buf)) {
+			ipio_err("Failed to allocate debug_buf mem, %ld
", PTR_ERR(idev->debug_buf));
+			ret = -ENOMEM;
+			goto out;
+		}
+
+		for (i = 0; i < row_size; i++) {
+			idev->debug_buf[i] = (unsigned char *)kzalloc(col_size * sizeof(unsigned char), GFP_KERNEL);
+			if (ERR_ALLOC_MEM(idev->debug_buf[i])) {
+				ipio_err("Failed to allocate debug_buf[%d] mem, %ld
", i, PTR_ERR(idev->debug_buf[i]));
+				ret = -ENOMEM;
+				goto out;
+			}
+		}
+	}
+	return ret;
+
+out:
+	/* Note that it might be freed by next touch event */
+	if (idev->debug_buf != NULL) {
+		idev->debug_data_frame = 0;
+		for (i = 0; i < row_size; i++) {
+			if (idev->debug_buf[i] != NULL) {
+				kfree(idev->debug_buf[i]);
+				idev->debug_buf[i] = NULL;
+			}
+		}
+		kfree(idev->debug_buf);
+		idev->debug_buf = NULL;
+	}
+	return ret;
+}
+
+static void ilitek_tddi_touch_send_debug_data(u8 *buf, int len)
+{
+	mutex_lock(&idev->debug_mutex);
+
+	if (ilitek_tddi_debug_report_alloc() < 0)
+		goto out;
+
+	if (!idev->netlink && !idev->debug_node_open)
+		goto out;
+
+	/* Send data to netlink */
+	if (idev->netlink) {
+		netlink_reply_msg(buf, len);
+		goto out;
+	}
+
+	/* Sending data to apk via the node of debug_message node */
+	if (idev->debug_node_open) {
+		memset(idev->debug_buf[idev->debug_data_frame], 0x00, (u8)sizeof(u8) * 2048);
+		ipio_memcpy(idev->debug_buf[idev->debug_data_frame], buf, len, 2048);
+		idev->debug_data_frame++;
+		if (idev->debug_data_frame > 1)
+			ipio_debug("idev->debug_data_frame = %d
", idev->debug_data_frame);
+		if (idev->debug_data_frame > 1023) {
+			ipio_err("idev->debug_data_frame = %d > 1024
",
+				idev->debug_data_frame);
+			idev->debug_data_frame = 1023;
+		}
+		wake_up(&(idev->inq));
+		goto out;
+	}
+
+out:
+	mutex_unlock(&idev->debug_mutex);
+}
+
+void ilitek_tddi_touch_press(u16 x, u16 y, u16 pressure, u16 id)
+{
+	ipio_debug("Touch Press: id = %d, x = %d, y = %d, p = %d
", id, x, y, pressure);
+
+	if (MT_B_TYPE) {
+		input_mt_slot(idev->input, id);
+		input_mt_report_slot_state(idev->input, MT_TOOL_FINGER, true);
+		input_report_abs(idev->input, ABS_MT_POSITION_X, x);
+		input_report_abs(idev->input, ABS_MT_POSITION_Y, y);
+		if (MT_PRESSURE)
+			input_report_abs(idev->input, ABS_MT_PRESSURE, pressure);
+	} else {
+		input_report_key(idev->input, BTN_TOUCH, 1);
+		input_report_abs(idev->input, ABS_MT_TRACKING_ID, id);
+		input_report_abs(idev->input, ABS_MT_TOUCH_MAJOR, 1);
+		input_report_abs(idev->input, ABS_MT_WIDTH_MAJOR, 1);
+		input_report_abs(idev->input, ABS_MT_POSITION_X, x);
+		input_report_abs(idev->input, ABS_MT_POSITION_Y, y);
+		if (MT_PRESSURE)
+			input_report_abs(idev->input, ABS_MT_PRESSURE, pressure);
+
+		input_mt_sync(idev->input);
+	}
+}
+
+void ilitek_tddi_touch_release(u16 x, u16 y, u16 id)
+{
+	ipio_debug("Touch Release: id = %d, x = %d, y = %d
", id, x, y);
+
+	if (MT_B_TYPE) {
+		input_mt_slot(idev->input, id);
+		input_mt_report_slot_state(idev->input, MT_TOOL_FINGER, false);
+	} else {
+		input_report_key(idev->input, BTN_TOUCH, 0);
+		input_mt_sync(idev->input);
+	}
+}
+
+void ilitek_tddi_touch_release_all_point(void)
+{
+	int i;
+
+	if (MT_B_TYPE) {
+		for (i = 0 ; i < MAX_TOUCH_NUM; i++)
+			ilitek_tddi_touch_release(0, 0, i);
+
+		input_report_key(idev->input, BTN_TOUCH, 0);
+		input_report_key(idev->input, BTN_TOOL_FINGER, 0);
+	} else {
+		ilitek_tddi_touch_release(0, 0, 0);
+	}
+	input_sync(idev->input);
+}
+
+static struct ilitek_touch_info touch_info[MAX_TOUCH_NUM];
+
+void ilitek_tddi_report_ap_mode(u8 *buf, int len)
+{
+	int i = 0;
+	u32 xop = 0, yop = 0;
+
+	memset(touch_info, 0x0, sizeof(touch_info));
+
+	idev->finger = 0;
+
+	for (i = 0; i < MAX_TOUCH_NUM; i++) {
+		if ((buf[(4 * i) + 1] == 0xFF) && (buf[(4 * i) + 2] == 0xFF)
+			&& (buf[(4 * i) + 3] == 0xFF)) {
+			if (MT_B_TYPE)
+				idev->curt_touch[i] = 0;
+			continue;
+		}
+
+		xop = (((buf[(4 * i) + 1] & 0xF0) << 4) | (buf[(4 * i) + 2]));
+		yop = (((buf[(4 * i) + 1] & 0x0F) << 8) | (buf[(4 * i) + 3]));
+
+		touch_info[idev->finger].x = xop * idev->panel_wid / TPD_WIDTH;
+		touch_info[idev->finger].y = yop * idev->panel_hei / TPD_HEIGHT;
+		touch_info[idev->finger].id = i;
+
+		if (MT_PRESSURE)
+			touch_info[idev->finger].pressure = buf[(4 * i) + 4];
+		else
+			touch_info[idev->finger].pressure = 1;
+
+		ipio_debug("original x = %d, y = %d
", xop, yop);
+		idev->finger++;
+		if (MT_B_TYPE)
+			idev->curt_touch[i] = 1;
+	}
+
+	ipio_debug("figner number = %d, LastTouch = %d
", idev->finger, idev->last_touch);
+
+	if (idev->finger) {
+		if (MT_B_TYPE) {
+			for (i = 0; i < idev->finger; i++) {
+				input_report_key(idev->input, BTN_TOUCH, 1);
+				ilitek_tddi_touch_press(touch_info[i].x, touch_info[i].y, touch_info[i].pressure, touch_info[i].id);
+				input_report_key(idev->input, BTN_TOOL_FINGER, 1);
+			}
+			for (i = 0; i < MAX_TOUCH_NUM; i++) {
+				if (idev->curt_touch[i] == 0 && idev->prev_touch[i] == 1)
+					ilitek_tddi_touch_release(0, 0, i);
+				idev->prev_touch[i] = idev->curt_touch[i];
+			}
+		} else {
+			for (i = 0; i < idev->finger; i++)
+				ilitek_tddi_touch_press(touch_info[i].x, touch_info[i].y, touch_info[i].pressure, touch_info[i].id);
+		}
+		input_sync(idev->input);
+		idev->last_touch = idev->finger;
+	} else {
+		if (idev->last_touch) {
+			if (MT_B_TYPE) {
+				for (i = 0; i < MAX_TOUCH_NUM; i++) {
+					if (idev->curt_touch[i] == 0 && idev->prev_touch[i] == 1)
+						ilitek_tddi_touch_release(0, 0, i);
+					idev->prev_touch[i] = idev->curt_touch[i];
+				}
+				input_report_key(idev->input, BTN_TOUCH, 0);
+				input_report_key(idev->input, BTN_TOOL_FINGER, 0);
+			} else {
+				ilitek_tddi_touch_release(0, 0, 0);
+			}
+			input_sync(idev->input);
+			idev->last_touch = 0;
+		}
+	}
+	ilitek_tddi_touch_send_debug_data(buf, len);
+}
+
+void ilitek_tddi_report_debug_mode(u8 *buf, int len)
+{
+	int i = 0;
+	u32 xop = 0, yop = 0;
+
+	memset(touch_info, 0x0, sizeof(touch_info));
+
+	idev->finger = 0;
+
+	for (i = 0; i < MAX_TOUCH_NUM; i++) {
+		if ((buf[(3 * i) + 5] == 0xFF) && (buf[(3 * i) + 6] == 0xFF)
+			&& (buf[(3 * i) + 7] == 0xFF)) {
+			if (MT_B_TYPE)
+				idev->curt_touch[i] = 0;
+			continue;
+		}
+
+		xop = (((buf[(3 * i) + 5] & 0xF0) << 4) | (buf[(3 * i) + 6]));
+		yop = (((buf[(3 * i) + 5] & 0x0F) << 8) | (buf[(3 * i) + 7]));
+
+		touch_info[idev->finger].x = xop * idev->panel_wid / TPD_WIDTH;
+		touch_info[idev->finger].y = yop * idev->panel_hei / TPD_HEIGHT;
+		touch_info[idev->finger].id = i;
+
+		if (MT_PRESSURE)
+			touch_info[idev->finger].pressure = buf[(4 * i) + 4];
+		else
+			touch_info[idev->finger].pressure = 1;
+
+		ipio_debug("original x = %d, y = %d
", xop, yop);
+		idev->finger++;
+		if (MT_B_TYPE)
+			idev->curt_touch[i] = 1;
+	}
+
+	ipio_debug("figner number = %d, LastTouch = %d
", idev->finger, idev->last_touch);
+
+	if (idev->finger) {
+		if (MT_B_TYPE) {
+			for (i = 0; i < idev->finger; i++) {
+				input_report_key(idev->input, BTN_TOUCH, 1);
+				ilitek_tddi_touch_press(touch_info[i].x, touch_info[i].y, touch_info[i].pressure, touch_info[i].id);
+				input_report_key(idev->input, BTN_TOOL_FINGER, 1);
+			}
+			for (i = 0; i < MAX_TOUCH_NUM; i++) {
+				if (idev->curt_touch[i] == 0 && idev->prev_touch[i] == 1)
+					ilitek_tddi_touch_release(0, 0, i);
+				idev->prev_touch[i] = idev->curt_touch[i];
+			}
+		} else {
+			for (i = 0; i < idev->finger; i++)
+				ilitek_tddi_touch_press(touch_info[i].x, touch_info[i].y, touch_info[i].pressure, touch_info[i].id);
+		}
+		input_sync(idev->input);
+		idev->last_touch = idev->finger;
+	} else {
+		if (idev->last_touch) {
+			if (MT_B_TYPE) {
+				for (i = 0; i < MAX_TOUCH_NUM; i++) {
+					if (idev->curt_touch[i] == 0 && idev->prev_touch[i] == 1)
+						ilitek_tddi_touch_release(0, 0, i);
+					idev->prev_touch[i] = idev->curt_touch[i];
+				}
+				input_report_key(idev->input, BTN_TOUCH, 0);
+				input_report_key(idev->input, BTN_TOOL_FINGER, 0);
+			} else {
+				ilitek_tddi_touch_release(0, 0, 0);
+			}
+			input_sync(idev->input);
+			idev->last_touch = 0;
+		}
+	}
+	ilitek_tddi_touch_send_debug_data(buf, len);
+}
+
+void ilitek_tddi_report_gesture_mode(u8 *buf, int len)
+{
+	ipio_info("gesture code = 0x%x
", buf[1]);
+
+	switch (buf[1]) {
+	case GESTURE_DOUBLECLICK:
+		ipio_info("Double Click key event
");
+		input_report_key(idev->input, KEY_GESTURE_POWER, 1);
+		input_sync(idev->input);
+		input_report_key(idev->input, KEY_GESTURE_POWER, 0);
+		input_sync(idev->input);
+		break;
+	case GESTURE_LEFT:
+		break;
+	case GESTURE_RIGHT:
+		break;
+	case GESTURE_UP:
+		break;
+	case GESTURE_DOWN:
+		break;
+	case GESTURE_O:
+		break;
+	case GESTURE_W:
+		break;
+	case GESTURE_M:
+		break;
+	case GESTURE_E:
+		break;
+	case GESTURE_S:
+		break;
+	case GESTURE_V:
+		break;
+	case GESTURE_Z:
+		break;
+	case GESTURE_C:
+		break;
+	case GESTURE_F:
+		break;
+	default:
+		break;
+	}
+	ilitek_tddi_touch_send_debug_data(buf, len);
+}
+
+void ilitek_tddi_report_i2cuart_mode(u8 *buf, int len)
+{
+	int type = buf[3] & 0x0F;
+	int need_read_len = 0, one_data_bytes = 0;
+	int actual_len = len - 5;
+	int uart_len;
+	u8 *uart_buf, *total_buf;
+
+	ipio_debug("data[3] = %x, type = %x, actual_len = %d
",
+					buf[3], type, actual_len);
+
+	need_read_len = buf[1] * buf[2];
+
+	if (type == 0 || type == 1 || type == 6) {
+		one_data_bytes = 1;
+	} else if (type == 2 || type == 3) {
+		one_data_bytes = 2;
+	} else if (type == 4 || type == 5) {
+		one_data_bytes = 4;
+	}
+
+	need_read_len =  need_read_len * one_data_bytes + 1;
+	ipio_debug("need_read_len = %d  one_data_bytes = %d
", need_read_len, one_data_bytes);
+
+	if (need_read_len > actual_len) {
+		uart_len = need_read_len - actual_len;
+		ipio_debug("uart len = %d
", uart_len);
+
+		uart_buf = kcalloc(uart_len, sizeof(u8), GFP_KERNEL);
+		if (ERR_ALLOC_MEM(uart_buf)) {
+			ipio_err("Failed to allocate uart_buf memory %ld
", PTR_ERR(uart_buf));
+			return;
+		}
+
+		if (idev->read(uart_buf, uart_len) < 0) {
+			ipio_err("i2cuart read data failed
");
+			return;
+		}
+
+		total_buf = kcalloc(len + uart_len, sizeof(u8), GFP_KERNEL);
+		if (ERR_ALLOC_MEM(total_buf)) {
+			ipio_err("Failed to allocate total_buf memory %ld
", PTR_ERR(total_buf));
+			return;
+		}
+		memcpy(total_buf, buf, len);
+		memcpy(total_buf + len, uart_buf, uart_len);
+		ilitek_tddi_touch_send_debug_data(total_buf, len + uart_len);
+		return;
+	}
+	ilitek_tddi_touch_send_debug_data(buf, len);
+}
