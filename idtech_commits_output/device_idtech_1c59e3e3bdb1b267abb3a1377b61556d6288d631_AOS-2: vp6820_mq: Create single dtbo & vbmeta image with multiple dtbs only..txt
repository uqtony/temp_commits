1c59e3e3 Arthur Chen 2019-11-22

AOS-2: vp6820_mq: Create single dtbo & vbmeta image with multiple dtbs only.

    keep the dtbo-imx8mq.img only for sample structure about vbmeta building.

Change-Id: Iacb1f4923e72efa246c7fd834b0438792eae73a9

diff --git a/common/build/dtbo.mk b/common/build/dtbo.mk
index 636462d1..474f02fb 100644
--- a/common/build/dtbo.mk
+++ b/common/build/dtbo.mk
@@ -50,18 +50,16 @@ $(BOARD_PREBUILT_DTBOIMAGE): $(KERNEL_BIN) $(DTS_SRC) | $(MKDTIMG) $(AVBTOOL)
 	$(hide) echo "Building $(KERNEL_ARCH) dtbo ..."
 	$(call clean_cfg, $(TARGET_MTDTBOIMAGE_CONFIG_PATH)); \
 	for dtsplat in $(TARGET_BOARD_DTS_CONFIG); do \
-		DTS_PLATFORM=`echo $$dtsplat | cut -d':' -f1`; \
 		DTB_NAME=`echo $$dtsplat | cut -d':' -f2`; \
 		DTB=`echo $(PRODUCT_OUT)/obj/KERNEL_OBJ/arch/$(TARGET_KERNEL_ARCH)/boot/dts/$(DTS_ADDITIONAL_PATH)/$${DTB_NAME}`; \
-		DTBO_IMG=`echo $(PRODUCT_OUT)/dtbo-$${DTS_PLATFORM}.img`; \
 		echo $$DTB >> $(TARGET_MTDTBOIMAGE_CONFIG_PATH)idt_dtbo_image.cfg ; \
 		echo "" >> $(TARGET_MTDTBOIMAGE_CONFIG_PATH)idt_dtbo_image.cfg ; \
-		$(MKDTIMG) create $$DTBO_IMG $$DTB; \
-		$(AVBTOOL) add_hash_footer --image $$DTBO_IMG  \
-			--partition_name dtbo \
-			--partition_size $(BOARD_DTBOIMG_PARTITION_SIZE); \
 	done
-	$(MKDTIMG) cfg_create $(PRODUCT_OUT)/dtbo-$(BOARD_SOM_TYPE)-$(LOWER_BOARD_TYPE).img $(TARGET_MTDTBOIMAGE_CONFIG_PATH)idt_dtbo_image.cfg;\
+	$(MKDTIMG) create $(PRODUCT_OUT)/dtbo-imx8mq.img $(TARGET_MTDTBOIMAGE_CONFIG_PATH)fsl-imx8mq-evk.dtb; \
+	$(AVBTOOL) add_hash_footer --image $(PRODUCT_OUT)/dtbo-imx8mq.img  \
+		--partition_name dtbo \
+		--partition_size $(BOARD_DTBOIMG_PARTITION_SIZE); \
+	$(MKDTIMG) cfg_create $(PRODUCT_OUT)/dtbo-$(BOARD_SOM_TYPE)-$(LOWER_BOARD_TYPE).img $(TARGET_MTDTBOIMAGE_CONFIG_PATH)idt_dtbo_image.cfg; \
 	$(AVBTOOL) add_hash_footer --image $(PRODUCT_OUT)/dtbo-$(BOARD_SOM_TYPE)-$(LOWER_BOARD_TYPE).img  \
 		--partition_name dtbo \
 		--partition_size $(BOARD_DTBOIMG_PARTITION_SIZE); \
@@ -69,35 +67,26 @@ $(BOARD_PREBUILT_DTBOIMAGE): $(KERNEL_BIN) $(DTS_SRC) | $(MKDTIMG) $(AVBTOOL)
 .PHONY: dtboimage
 dtboimage: $(BOARD_PREBUILT_DTBOIMAGE)
 
-IMX_INSTALLED_VBMETAIMAGE_TARGET := $(PRODUCT_OUT)/vbmeta-$(shell echo $(word 1,$(TARGET_BOARD_DTS_CONFIG)) | cut -d':' -f1).img
+IMX_INSTALLED_VBMETAIMAGE_TARGET := $(PRODUCT_OUT)/vbmeta-$(BOARD_SOM_TYPE)-$(LOWER_BOARD_TYPE).img
 $(IMX_INSTALLED_VBMETAIMAGE_TARGET): $(PRODUCT_OUT)/vbmeta.img $(BOARD_PREBUILT_DTBOIMAGE) | $(AVBTOOL)
-	for dtsplat in $(TARGET_BOARD_DTS_CONFIG); do \
-		DTS_PLATFORM=`echo $$dtsplat | cut -d':' -f1`; \
-		DTBO_IMG=`echo $(PRODUCT_OUT)/dtbo-$${DTS_PLATFORM}.img`; \
-		VBMETA_IMG=`echo $(PRODUCT_OUT)/vbmeta-$${DTS_PLATFORM}.img`; \
-		RECOVERY_IMG=`echo $(PRODUCT_OUT)/recovery-$${DTS_PLATFORM}.img`; \
-		$(if $(filter true, $(BOARD_USES_RECOVERY_AS_BOOT)), \
-			$(AVBTOOL) make_vbmeta_image \
-				--algorithm $(BOARD_AVB_ALGORITHM) --key $(BOARD_AVB_KEY_PATH)  \
-				$(BOARD_AVB_MAKE_VBMETA_IMAGE_ARGS) \
-				--include_descriptors_from_image $(PRODUCT_OUT)/vbmeta.img \
-				--include_descriptors_from_image $$DTBO_IMG \
-				--output $$VBMETA_IMG, \
-			$(AVBTOOL) make_vbmeta_image \
-				--algorithm $(BOARD_AVB_ALGORITHM) --key $(BOARD_AVB_KEY_PATH) \
-				$(BOARD_AVB_MAKE_VBMETA_IMAGE_ARGS) \
-				--include_descriptors_from_image $(PRODUCT_OUT)/vbmeta.img \
-				--include_descriptors_from_image $$DTBO_IMG \
-				--include_descriptors_from_image $$RECOVERY_IMG \
-				--output $$VBMETA_IMG); \
-	done
+	VBMETA_IMG=`echo $(PRODUCT_OUT)/vbmeta-$(BOARD_SOM_TYPE)-$(LOWER_BOARD_TYPE).img`; \
+	DTBO_IMG=`echo $(PRODUCT_OUT)/dtbo-$(BOARD_SOM_TYPE)-$(LOWER_BOARD_TYPE).img`; \
+	RECOVERY_IMG=`echo $(PRODUCT_OUT)/recovery-$(BOARD_SOM_TYPE)-$(LOWER_BOARD_TYPE).img`; \
+	$(if $(filter true, $(BOARD_USES_RECOVERY_AS_BOOT)), \
+		$(AVBTOOL) make_vbmeta_image \
+			--algorithm $(BOARD_AVB_ALGORITHM) --key $(BOARD_AVB_KEY_PATH)  \
+			$(BOARD_AVB_MAKE_VBMETA_IMAGE_ARGS) \
+			--include_descriptors_from_image $(PRODUCT_OUT)/vbmeta.img \
+			--include_descriptors_from_image $$DTBO_IMG \
+			--output $$VBMETA_IMG, \
+		$(AVBTOOL) make_vbmeta_image \
+			--algorithm $(BOARD_AVB_ALGORITHM) --key $(BOARD_AVB_KEY_PATH) \
+			$(BOARD_AVB_MAKE_VBMETA_IMAGE_ARGS) \
+			--include_descriptors_from_image $(PRODUCT_OUT)/vbmeta.img \
+			--include_descriptors_from_image $$DTBO_IMG \
+			--include_descriptors_from_image $$RECOVERY_IMG \
+			--output $$VBMETA_IMG); \
 	cp $(IMX_INSTALLED_VBMETAIMAGE_TARGET) $(PRODUCT_OUT)/vbmeta.img
-	$(AVBTOOL) make_vbmeta_image \
-		$(INTERNAL_AVB_SIGNING_ARGS) \
-		$(BOARD_AVB_MAKE_VBMETA_IMAGE_ARGS) \
-		--include_descriptors_from_image $(PRODUCT_OUT)/vbmeta.img \
-		--include_descriptors_from_image $(PRODUCT_OUT)/dtbo-$(BOARD_SOM_TYPE)-$(LOWER_BOARD_TYPE).img \
-		--output $(PRODUCT_OUT)/vbmeta-$(BOARD_SOM_TYPE)-$(LOWER_BOARD_TYPE).img
 
 .PHONY: imx_vbmetaimage
 imx_vbmetaimage: IMX_INSTALLED_RECOVERYIMAGE_TARGET $(IMX_INSTALLED_VBMETAIMAGE_TARGET)
