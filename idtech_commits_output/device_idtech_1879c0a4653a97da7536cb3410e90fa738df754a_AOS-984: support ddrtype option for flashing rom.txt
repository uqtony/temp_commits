1879c0a4 George.Huang 2022-04-14

AOS-984: support ddrtype option for flashing rom

Usage:
  -ddrtype ddr_type  flash uboot or spl&bootloader image with "ddr_type" in their names

Example:
  ./fastboot_imx_flashall.sh -e -f imx8mq -u dp-dual-signed -ddrtype lpddr4

By default:
  set uboot_feature=-dual-signed
  set ddr_type=-lpddr4

Change-Id: Ifac34ab76c5a4c003ae27a6f8b412840fd7755ad

diff --git a/common/tools/fastboot_imx_flashall.bat b/common/tools/fastboot_imx_flashall.bat
index 2235f134..251e52c2 100755
--- a/common/tools/fastboot_imx_flashall.bat
+++ b/common/tools/fastboot_imx_flashall.bat
@@ -22,7 +22,7 @@ set mb_plc=
 set mb_rev=
 set mb_opt=
 set dev_ddr=
-set ddr_type=-lpddr4
+set ddr_type=
 set board_info_file=
 set board_info_temp=
 set mem_info_file=mem_info.img
@@ -138,6 +138,7 @@ if %1 == -l set /A lock=1 & shift & goto :parse_loop
 if %1 == -e set /A erase=1 & shift & goto :parse_loop
 if %1 == -D set image_directory=%2& shift & shift & goto :parse_loop
 if %1 == -s set ser_num=%2&shift &shift & goto :parse_loop
+if %1 == -ddrtype set ddr_type=-%2& shift & shift & goto :parse_loop
 if %1 == -bdinfo set board_info_file=%2& shift & shift & goto :parse_loop
 if %1 == -serial set serialno_str=%2& set /A write_bdinfo_serial=1& shift & shift & goto :parse_loop
 if %1 == -macaddr set macaddr_str=%2& set /A write_bdinfo_macaddr=1& shift & shift & goto :parse_loop
@@ -150,8 +151,11 @@ call :help & goto :eof
 if [%soc_name%] == [] set soc_name=imx8mq
 set som_model=%soc_name%
 
-:: force to use dual as uboot_feature if user doesn't assign it
-if [%uboot_feature%] == [] set uboot_feature=-dual
+:: force to use -dual-signed as uboot_feature if user doesn't assign it
+if [%uboot_feature%] == [] set uboot_feature=-dual-signed
+
+:: force to use -lpddr4 as ddr_type if user doesn't assign it
+if [%ddr_type%] == [] set ddr_type=-lpddr4
 
 :: check whether the soc_name is legal or not
 if not [%soc_name%] == [] (
@@ -344,10 +348,11 @@ echo  -D directory      the directory of of images
 echo                        No need to use this option if images are in current working directory
 echo  -s ser_num        the serial number of board
 echo                        If only one board connected to computer, no need to use this option
-echo  -bdinfo board_info_file  flash board_info with this board_info_file image
-echo                               If not set, use naming from current board_info partition
-echo  -serial serialno_str  write serial number into device emmc, this could be program once in secure-user build
-echo  -macaddr macaddr_str  write mac address of built-in ethernet into device emmc, this could be program once.
+echo  -ddrtype ddr_type          flash uboot or spl&bootloader image with "ddr_type" in their names
+echo  -bdinfo board_info_file    flash board_info with this board_info_file image
+echo                                 If not set, use naming from current board_info partition
+echo  -serial serialno_str       write serial number into device emmc, this could be program once in secure-user build
+echo  -macaddr macaddr_str       write mac address of built-in ethernet into device emmc, this could be program once.
 echo  -displayid display_id_str  write display id into device emmc.
 goto :eof
 
diff --git a/common/tools/fastboot_imx_flashall.sh b/common/tools/fastboot_imx_flashall.sh
index bf2824ea..f318ac3f 100755
--- a/common/tools/fastboot_imx_flashall.sh
+++ b/common/tools/fastboot_imx_flashall.sh
@@ -83,10 +83,11 @@ options:
                         No need to use this option if images are in current working directory
   -s ser_num        the serial number of board
                         If only one board connected to computer, no need to use this option
-  -bdinfo board_info_file  flash board_info with this board_info_file image
-                               If not set, use naming from current board_info partition
-  -serial serialno_str  write serial number into device emmc, this could be program once in secure-user build
-  -macaddr macaddr_str  write mac address of built-in ethernet into device emmc, this could be program once
+  -ddrtype ddr_type          flash uboot or spl&bootloader image with "ddr_type" in their names
+  -bdinfo board_info_file    flash board_info with this board_info_file image
+                                 If not set, use naming from current board_info partition
+  -serial serialno_str       write serial number into device emmc, this could be program once in secure-user build
+  -macaddr macaddr_str       write mac address of built-in ethernet into device emmc, this could be program once
   -displayid display_id_str  write display id into device emmc.
 EOF
 
@@ -438,7 +439,7 @@ mb_model=""
 mb_plc=""
 mb_rev=""
 dev_ddr=""
-ddr_type="-lpddr4"
+ddr_type=""
 board_info_file=""
 board_info_temp=""
 mem_info_file="mem_info.img"
@@ -545,6 +546,7 @@ while [ $# -gt 0 ]; do
         -l) lock=1 ;;
         -D) image_directory=$2; shift;;
         -s) ser_num=$2; shift;;
+        -ddrtype) ddr_type=-$2; shift;;
         -bdinfo) board_info_file=$2; shift;;
         -serial) serialno_str=$2; write_bdinfo_serial=1; shift;;
         -macaddr) macaddr_str=$2; write_bdinfo_macaddr=1; shift;;
@@ -559,8 +561,11 @@ done
 [ -z "$soc_name" ] && soc_name="imx8mq"
 som_model="${soc_name}"
 
-# force to use dual as uboot_feature if user doesn't assign it
-[ -z "$uboot_feature" ] && uboot_feature="-dual"
+# force to use -dual-signed as uboot_feature if user doesn't assign it
+[ -z "$uboot_feature" ] && uboot_feature="-dual-signed"
+
+# force to use -lpddr4 as ddr_type if user doesn't assign it
+[ -z "$ddr_type" ] && ddr_type="-lpddr4"
 
 # check whether the soc_name is legal or not
 if [ -n "${soc_name}" ]; then
diff --git a/common/tools/uuu_imx_android_flash.bat b/common/tools/uuu_imx_android_flash.bat
index 761f4776..941a95f7 100755
--- a/common/tools/uuu_imx_android_flash.bat
+++ b/common/tools/uuu_imx_android_flash.bat
@@ -24,7 +24,7 @@ set mb_plc=
 set mb_rev=
 set mb_opt=
 set dev_ddr=
-set ddr_type=-lpddr4
+set ddr_type=
 set board_info_file=
 set board_info_temp=
 set mem_info_file=mem_info.img
@@ -163,6 +163,7 @@ if %1 == -i set /A intervene=1 & shift & goto :parse_loop
 if %1 == -daemon set /A daemon_mode=1 & shift & goto :parse_loop
 if %1 == -dryrun set /A dryrun=1 & shift & goto :parse_loop
 if %1 == -usb set usb_paths=%usb_paths% -m %2&shift &shift & goto :parse_loop
+if %1 == -ddrtype set ddr_type=-%2& shift & shift & goto :parse_loop
 if %1 == -bdinfo set board_info_file=%2& shift & shift & goto :parse_loop
 if %1 == -serial set serialno_str=%2& set /A write_bdinfo_serial=1& shift & shift & goto :parse_loop
 if %1 == -macaddr set macaddr_str=%2& set /A write_bdinfo_macaddr=1& shift & shift & goto :parse_loop
@@ -175,8 +176,11 @@ call :help & set /A error_level=1 && goto :exit
 if [%soc_name%] == [] set soc_name=imx8mq
 set som_model=%soc_name%
 
-:: force to use dual as uboot_feature if user doesn't assign it
-if [%uboot_feature%] == [] set uboot_feature=-dual
+:: force to use -dual-signed as uboot_feature if user doesn't assign it
+if [%uboot_feature%] == [] set uboot_feature=-dual-signed
+
+:: force to use -lpddr4 as ddr_type if user doesn't assign it
+if [%ddr_type%] == [] set ddr_type=-lpddr4
 
 :: enable these 3 features only for imx8mq
 if [%soc_name%] == [imx8mq] (
@@ -697,9 +701,11 @@ echo                        This option is for users to manually flash the image
 echo  -daemon           after uuu script generated, uuu will be invoked with daemon mode. It is used for flash multi boards
 echo  -dryrun           only generate the uuu script under /tmp direcbory but not flash images
 echo  -usb usb_path     specify a usb path like 1:1 to monitor. It can be used multiple times to specify more than one path
-echo  -bdinfo board_info_file  flash board_info with this board_info_file image
-echo  -serial serialno_str  write serial number into device emmc, this could be program once in secure-user build
-echo  -macaddr macaddr_str  write mac address of built-in ethernet into device emmc, this could be program once
+echo  -ddrtype ddr_type          flash uboot or spl&bootloader image with "ddr_type" in their names
+echo  -bdinfo board_info_file    flash board_info with this board_info_file image
+echo                                 If not set, use naming from current board_info partition
+echo  -serial serialno_str       write serial number into device emmc, this could be program once in secure-user build
+echo  -macaddr macaddr_str       write mac address of built-in ethernet into device emmc, this could be program once
 echo  -displayid display_id_str  write display id into device emmc.
 goto :eof
 
diff --git a/common/tools/uuu_imx_android_flash.sh b/common/tools/uuu_imx_android_flash.sh
index f8570bfb..74627bd9 100755
--- a/common/tools/uuu_imx_android_flash.sh
+++ b/common/tools/uuu_imx_android_flash.sh
@@ -93,11 +93,12 @@ options:
   -daemon           after uuu script generated, uuu will be invoked with daemon mode. It is used for flash multi boards
   -dryrun           only generate the uuu script under /tmp direcbory but not flash images
   -usb usb_path     specify a usb path like 1:1 to monitor. It can be used multiple times to specify more than one path
-  -bdinfo board_info_file  flash board_info with this board_info_file image
-                               If not set, use naming from current board_info partition
-  -serial serialno_str  write serial number into device emmc, this could be program once in secure-user build
-  -macaddr macaddr_str  write mac address of built-in ethernet into device emmc, this could be program once
-  -displayid display_id_str write display id into device emmc.
+  -ddrtype ddr_type          flash uboot or spl&bootloader image with "ddr_type" in their names
+  -bdinfo board_info_file    flash board_info with this board_info_file image
+                                 If not set, use naming from current board_info partition
+  -serial serialno_str       write serial number into device emmc, this could be program once in secure-user build
+  -macaddr macaddr_str       write mac address of built-in ethernet into device emmc, this could be program once
+  -displayid display_id_str  write display id into device emmc.
 EOF
 
 }
@@ -445,7 +446,7 @@ mb_model=""
 mb_plc=""
 mb_rev=""
 dev_ddr=""
-ddr_type="-lpddr4"
+ddr_type=""
 board_info_file=""
 board_info_temp=""
 mem_info_file="mem_info.img"
@@ -579,6 +580,7 @@ while [ $# -gt 0 ]; do
         -daemon) daemon_mode=1 ;;
         -dryrun) dryrun=1 ;;
         -usb) usb_paths="${usb_paths} -m $2"; shift;;
+        -ddrtype) ddr_type=-$2; shift;;
         -bdinfo) board_info_file=$2; shift;;
         -serial) serialno_str=$2; write_bdinfo_serial=1; shift;;
         -macaddr) macaddr_str=$2; write_bdinfo_macaddr=1; shift;;
@@ -593,8 +595,11 @@ done
 [ -z "$soc_name" ] && soc_name="imx8mq"
 som_model="${soc_name}"
 
-# force to use dual as uboot_feature if user doesn't assign it
-[ -z "$uboot_feature" ] && uboot_feature="-dual"
+# force to use -dual-signed as uboot_feature if user doesn't assign it
+[ -z "$uboot_feature" ] && uboot_feature="-dual-signed"
+
+# force to use -lpddr4 as ddr_type if user doesn't assign it
+[ -z "$ddr_type" ] && ddr_type="-lpddr4"
 
 # enable these 3 features only for imx8mq
 if [[ "${soc_name}" == "imx8mq" ]]; then
