c71317d jenkins 2020-02-10

Download imx-android-10.0.0_1.0.0.tar.gz from nxp.com

Change-Id: I055e892092fd905e00cda0ef67e4e090f5776b4d

diff --git a/Android.bp b/Android.bp
new file mode 100644
index 0000000..8abe5a1
--- /dev/null
+++ b/Android.bp
@@ -0,0 +1,176 @@
+cc_defaults {
+    name: "IMX_VPU_FLAGS_DEFAULTS",
+    // IMX_VPU_CFLAGS
+    cflags: [
+        "-DANDROID_BUILD",
+        "-D_POSIX_SOURCE",
+        "-UDOMX_MEM_CHECK",
+        "-Wno-unused-parameter",
+        "-Wno-missing-field-initializers",
+        "-DDEC_MODULE_PATH=\"/dev/mxc_hantro\"",
+        "-DUSE_FAKE_RFC_TABLE",
+        "-DFIFO_DATATYPE=void*",
+        "-DNDEBUG",
+        "-DDOWN_SCALER",
+        "-DUSE_EXTERNAL_BUFFER",
+        "-DUSE_FAST_EC",
+        "-DUSE_VP9_EC",
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DDEC_X170_OUTPUT_FORMAT=0",
+        "-DDEC_X170_TIMEOUT_LENGTH=-1",
+        "-DENABLE_HEVC_SUPPORT",
+        "-DENABLE_VP9_SUPPORT",
+        "-DUSE_ION",
+        "-DDWL_DISABLE_REG_PRINTS",
+        "-DDWL_USE_DEC_IRQ",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DHANTRODEC_STREAM_SWAP=15",
+        "-DUSE_OUTPUT_RELEASE",
+        "-DUSE_PICTURE_DISCARD",
+        "-O3",
+        "-DHAVE_ARCH_STRUCT_FLOCK64",
+    ],
+    // IMX_VPU_LDFLAGS
+    ldflags: [
+        "-shared",
+        "-nostartfiles",
+        "-Wl",
+        "-Bsymbolic",
+        "-Wl,--fatal-warnings",
+    ],
+}
+
+cc_defaults {
+    name: "IMX_VPU_INCLUDES",
+    include_dirs: [
+        "vendor/nxp/imx-vpu-hantro/decoder_sw/software/linux/memalloc",
+        "vendor/nxp/imx-vpu-hantro/decoder_sw/software/linux/pcidriver",
+        "vendor/nxp/imx-vpu-hantro/decoder_sw/software/linux/pp",
+        "vendor/nxp/imx-vpu-hantro/decoder_sw/software/source/inc",
+        "vendor/nxp/imx-vpu-hantro/decoder_sw/software/source/common",
+        "vendor/nxp/imx-vpu-hantro/decoder_sw/software/source/hevc",
+        "vendor/nxp/imx-vpu-hantro/decoder_sw/software/source/config",
+        "vendor/nxp/imx-vpu-hantro/openmax_il/headers",
+        "vendor/nxp/imx-vpu-hantro/openmax_il/source",
+        "device/fsl/common/kernel-headers",
+        "system/core/libion/kernel-headers",
+        "system/core/libion",
+        "vendor/nxp/imx-vpu-hantro/decoder_sw/software/linux/h264high",
+    ],
+
+
+}
+
+cc_defaults {
+    name: "IMX_VPU_G1_CFLAGS",
+    cflags: [
+        "-DSET_OUTPUT_CROP_RECT",
+        "-DUSE_EXTERNAL_BUFFER",
+        "-DUSE_OUTPUT_RELEASE",
+        "-DVSI_API",
+        "-DIS_G1_DECODER",
+        "-DENABLE_CODEC_VP8",
+        "-DVP8_HWTIMEOUT_WORKAROUND",
+        "-DENABLE_CODEC_MJPEG",
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DDOWN_SCALER",
+        "-UCLEAR_HDRINFO_IN_SEEK",
+        "-UFIFO_DATATYPE",
+    ],
+}
+
+cc_defaults {
+    name: "IMX_VPU_G1_LDFLAGS",
+    ldflags: [
+        "-shared",
+        "-nostartfiles",
+        "-Wl,-Bsymbolic",
+        "-Wl,-z",
+        "-Wl,muldefs",
+        "-Wl",
+    ],
+}
+
+
+cc_defaults {
+    name: "IMX_VPU_ENC_INCLUDES",
+    include_dirs: [
+        "vendor/nxp/imx-vpu-hantro/openmax_il/headers",
+        "vendor/nxp/imx-vpu-hantro/openmax_il/source",
+        "vendor/nxp/imx-vpu-hantro/openmax_il/source/encoder",
+        "vendor/nxp/imx-vpu-hantro/h1_encoder/software/inc",
+        "vendor/nxp/imx-vpu-hantro/h1_encoder/software/source/common",
+        "device/fsl/common/kernel-headers",
+        "system/core/libion/kernel-headers",
+        "system/core/libion",
+    ],
+}
+
+// add this defaults to enable debug
+cc_defaults {
+    name: "IMX_VPU_ENABLE_DEBUG_DEFAULTS",
+    cflags: [
+        "-D_DWL_DEBUG",
+        "-DENABLE_DBGT_TRACE",
+        "-DDBGT_CONFIG_AUTOVAR",
+        "-DDBGT_VAR=0xFFF",
+        "-DDBGT_TAG=dwl",
+        "-DDEBUG",
+        "-g",
+    ],
+
+    include_dirs: ["system/core/include"],
+
+    shared_libs: [
+        "liblog",
+        "libcutils",
+    ],
+}
+
+IMX_VPU_DEC_DEFAULTS {
+    name: "IMX_VPU_DEC_DEFAULTS",
+    defaults: [
+        "IMX_VPU_FLAGS_DEFAULTS",
+        //"IMX_VPU_ENABLE_DEBUG_DEFAULTS",
+    ],
+}
+
+IMX_VPU_ENC_DEFAULTS {
+    name: "IMX_VPU_ENC_DEFAULTS",
+    defaults: [
+        "IMX_VPU_FLAGS_DEFAULTS",
+        //"IMX_VPU_ENABLE_DEBUG_DEFAULTS",
+    ],
+}
+
+
+bootstrap_go_package {
+    name: "soong-imx-vpu-hantro",
+    pkgPath: "android/soong/vendor/nxp/imx-vpu-hantro",
+    deps: [
+        "blueprint",
+        "blueprint-pathtools",
+        "soong",
+        "soong-android",
+        "soong-cc",
+        "soong-genrule",
+    ],
+    srcs: [
+        "imx_vpu_hantro.go",
+    ],
+    pluginFor: ["soong_build"],
+} 
+
+subdirs = [
+    "decoder_sw/software/linux/dwl",
+    "decoder_sw/software/*",
+    "h1_encoder/software/source",
+    "openmax_il/source/decoder",
+    "openmax_il/source/encoder",
+]
+
+build = [
+    "Android_hantro.bp",
+    "Android_g1.bp",
+    "Android_hantro_h1.bp",
+]
diff --git a/Android.mk b/Android.mk
deleted file mode 100644
index 47396a3..0000000
--- a/Android.mk
+++ /dev/null
@@ -1,119 +0,0 @@
-ifeq ($(BOARD_HAVE_VPU), true)
-ifeq ($(BOARD_VPU_TYPE), hantro)
-
-LOCAL_PATH := $(call my-dir)
-IMX_VPU_PATH := $(LOCAL_PATH)
-ifeq ($(KERNEL_IMX_PATH),)
-LINUX_KERNEL_ROOT := kernel_imx
-else
-LINUX_KERNEL_ROOT := $(KERNEL_IMX_PATH)/kernel_imx
-endif
-include $(CLEAR_VARS)
-
-IMX_VPU_CFLAGS += -DANDROID_BUILD -D_POSIX_SOURCE -UDOMX_MEM_CHECK -Wno-unused-parameter -Wno-missing-field-initializers
-
-IMX_VPU_CFLAGS += -DDEC_MODULE_PATH=\"/dev/mxc_hantro\" -DUSE_FAKE_RFC_TABLE -DFIFO_DATATYPE=void* -DNDEBUG -DDOWN_SCALER \
-           -DUSE_EXTERNAL_BUFFER -DUSE_FAST_EC -DUSE_VP9_EC -DGET_FREE_BUFFER_NON_BLOCK \
-           -DDEC_X170_OUTPUT_FORMAT=0 -DDEC_X170_TIMEOUT_LENGTH=-1 -DENABLE_HEVC_SUPPORT \
-           -DENABLE_VP9_SUPPORT -DUSE_ION
-
-ifeq ($(CFG_SECURE_DATA_PATH), y)
-IMX_VPU_CFLAGS += -DCFG_SECURE_DATA_PATH
-endif
-
-IMX_VPU_CFLAGS += -DDWL_DISABLE_REG_PRINTS
-IMX_VPU_CFLAGS += -DDWL_USE_DEC_IRQ
-#this macro is added in sub makefile as LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-#IMX_VPU_CFLAGS += -DUSE_64BIT_ENV
-IMX_VPU_CFLAGS += -DGET_OUTPUT_BUFFER_NON_BLOCK
-IMX_VPU_CFLAGS +=  -DHANTRODEC_STREAM_SWAP=15
-IMX_VPU_CFLAGS +=  -DUSE_OUTPUT_RELEASE
-#add this flag 
-IMX_VPU_CFLAGS +=  -DUSE_PICTURE_DISCARD
-#disable debug macro
-#ENABLE_HANTRO_DEBUG_LOG := true
-ifeq ($(ENABLE_HANTRO_DEBUG_LOG), true)
-IMX_VPU_CFLAGS += -D_DWL_DEBUG -DENABLE_DBGT_TRACE -DDBGT_CONFIG_AUTOVAR -DDBGT_VAR=0xFFF -DDBGT_TAG=dwl -DDEBUG -g
-endif
-
-IMX_VPU_CFLAGS += -O3
-
-IMX_VPU_G1_CFLAGS := -DSET_OUTPUT_CROP_RECT -DUSE_EXTERNAL_BUFFER -DUSE_OUTPUT_RELEASE -DVSI_API \
-             -DIS_G1_DECODER -DENABLE_CODEC_VP8 -DVP8_HWTIMEOUT_WORKAROUND -DENABLE_CODEC_MJPEG \
-             -DGET_FREE_BUFFER_NON_BLOCK -DDOWN_SCALER -UCLEAR_HDRINFO_IN_SEEK -UFIFO_DATATYPE 
-
-IMX_VPU_LDFLAGS := -shared -nostartfiles -Wl -Bsymbolic -Wl,--fatal-warnings
-
-IMX_VPU_G1_LDFLAGS := -shared -nostartfiles -Wl,-Bsymbolic -Wl,-z -Wl,muldefs -Wl
-
-IMX_VPU_INCLUDES := \
-	$(IMX_VPU_PATH)/decoder_sw/software/linux/memalloc \
-	$(IMX_VPU_PATH)/decoder_sw/software/linux/pcidriver \
-	$(IMX_VPU_PATH)/decoder_sw/software/linux/pp \
-	$(IMX_VPU_PATH)/decoder_sw/software/source/inc \
-	$(IMX_VPU_PATH)/decoder_sw/software/source/common \
-	$(IMX_VPU_PATH)/decoder_sw/software/source/hevc \
-	$(IMX_VPU_PATH)/decoder_sw/software/source/config \
-	$(IMX_VPU_PATH)/openmax_il/headers \
-	$(IMX_VPU_PATH)/openmax_il/source \
-	device/fsl/common/kernel-headers \
-	system/core/libion/kernel-headers \
-	system/core/libion
-
-IMX_VPU_INCLUDES += $(LOCAL_PATH)/decoder_sw/software/linux/h264high
-
-ifeq ($(BOARD_SOC_TYPE),IMX8MM)
-IMX_VPU_CFLAGS += -DENC_MODULE_PATH=\"/dev/mxc_hantro_h1\" -DMEMALLOC_MODULE_PATH=\"/dev/ion\"
-
-IMX_VPU_ENC_INCLUDES := \
-    $(IMX_VPU_PATH)/openmax_il/headers \
-    $(IMX_VPU_PATH)/openmax_il/source \
-    $(IMX_VPU_PATH)/openmax_il/source/encoder \
-    $(IMX_VPU_PATH)/h1_encoder/software/inc \
-    $(IMX_VPU_PATH)/h1_encoder/software/source/common \
-    device/fsl/common/kernel-headers \
-	system/core/libion/kernel-headers \
-	system/core/libion
-endif
-	
-IMX_VPU_CFLAGS += -DHAVE_ARCH_STRUCT_FLOCK64
-
-include $(IMX_VPU_PATH)/hantro.mk
-
-#include $(IMX_VPU_PATH)/decoder_sw/software/source/common/Android.mk
-include $(IMX_VPU_PATH)/decoder_sw/software/source/h264high/Android.mk
-include $(IMX_VPU_PATH)/decoder_sw/software/source/avs/Android.mk
-include $(IMX_VPU_PATH)/decoder_sw/software/source/jpeg/Android.mk
-include $(IMX_VPU_PATH)/decoder_sw/software/source/mpeg2/Android.mk
-include $(IMX_VPU_PATH)/decoder_sw/software/source/mpeg4/Android.mk
-include $(IMX_VPU_PATH)/decoder_sw/software/source/rv/Android.mk
-include $(IMX_VPU_PATH)/decoder_sw/software/source/vc1/Android.mk
-include $(IMX_VPU_PATH)/decoder_sw/software/source/vp6/Android.mk
-include $(IMX_VPU_PATH)/decoder_sw/software/source/vp8/Android.mk
-
-include $(IMX_VPU_PATH)/g1.mk
-
-include $(IMX_VPU_PATH)/openmax_il/source/decoder/Android_codec.mk
-
-#do not build binrary for test, it may meet build error when enable them
-#include $(IMX_VPU_PATH)/g2_test.mk
-#include $(IMX_VPU_PATH)/g1_h264_test.mk
-#include $(IMX_VPU_PATH)/g1_vp6_test.mk
-#include $(IMX_VPU_PATH)/g1_vp8_test.mk
-#include $(IMX_VPU_PATH)/g1_mpeg4_test.mk
-#include $(IMX_VPU_PATH)/g1_vc1_test.mk
-#include $(IMX_VPU_PATH)/g1_mpeg2_test.mk
-
-ifeq ($(BOARD_SOC_TYPE),IMX8MM)
-include $(IMX_VPU_PATH)/h1_encoder/software/source/vp8/Android.mk
-include $(IMX_VPU_PATH)/h1_encoder/software/source/h264/Android.mk
-include $(IMX_VPU_PATH)/hantro_h1.mk
-include $(IMX_VPU_PATH)/openmax_il/source/encoder/Android_codec_enc.mk
-
-#do not build binrary for test, it may meet build error when enable them
-#include $(IMX_VPU_PATH)/h1_h264_test.mk
-#include $(IMX_VPU_PATH)/h1_vp8_test.mk
-endif
-
-endif
-endif
diff --git a/Android_g1.bp b/Android_g1.bp
new file mode 100644
index 0000000..fa0ef7f
--- /dev/null
+++ b/Android_g1.bp
@@ -0,0 +1,64 @@
+cc_library_shared {
+    name: "libg1",
+
+    defaults: [
+        "IMX_VPU_DEC_DEFAULTS",
+        "IMX_VPU_G1_CFLAGS",
+        "IMX_VPU_INCLUDES",
+    ],
+
+    include_dirs: ["device/fsl/common/kernel-headers"],
+
+    srcs: [
+        "decoder_sw/software/linux/dwl/dwl_linux.c",
+        "decoder_sw/software/linux/dwl/dwl_linux_sc.c",
+        "decoder_sw/software/linux/dwl/dwl_activity_trace.c",
+    ],
+
+
+    ldflags: [
+        "-shared",
+        "-nostartfiles",
+        "-Wl,-Bsymbolic",
+        "-Wl,-z",
+        "-Wl,muldefs",
+    ],
+
+    arch: {
+        arm64: {
+            cflags: ["-DUSE_64BIT_ENV"],
+        },
+    },
+
+    local_include_dirs: [
+        "decoder_sw/software/source/avs",
+        "decoder_sw/software/source/h264high",
+        "decoder_sw/software/source/h264high/legacy",
+        "decoder_sw/software/source/jpeg",
+        "decoder_sw/software/source/mpeg2",
+        "decoder_sw/software/linux/mpeg2",
+        "decoder_sw/software/linux/mpeg4",
+        "decoder_sw/software/linux/rv",
+    ],
+
+    whole_static_libs: [
+        "lib_imx_vsi_avs",
+        "lib_imx_vsi_h264",
+        "lib_imx_vsi_jpeg",
+        "lib_imx_vsi_mpeg2",
+        "lib_imx_vsi_mpeg4",
+        "lib_imx_vsi_rv",
+        "lib_imx_vsi_vp6",
+        "lib_imx_vsi_vp8",
+        "lib_imx_vsi_vc1",
+    ],
+
+    // ifeq ($(ENABLE_HANTRO_DEBUG_LOG), true)
+    //shared_libs: [
+    //    "liblog",
+    //    "libcutils",
+    //],
+    // endif
+
+    vendor: true,
+}
diff --git a/Android_hantro.bp b/Android_hantro.bp
new file mode 100644
index 0000000..6efa763
--- /dev/null
+++ b/Android_hantro.bp
@@ -0,0 +1,73 @@
+cc_library_shared {
+    name: "libhantro",
+
+    include_dirs: ["device/fsl/common/kernel-headers"],
+
+    defaults: [
+        "IMX_VPU_DEC_DEFAULTS",
+        "IMX_VPU_INCLUDES",
+    ],
+
+    srcs: [
+        "decoder_sw/software/source/hevc/hevc_asic.c",
+        "decoder_sw/software/source/hevc/hevc_byte_stream.c",
+        "decoder_sw/software/source/hevc/hevcdecapi.c",
+        "decoder_sw/software/source/hevc/hevc_decoder.c",
+        "decoder_sw/software/source/hevc/hevc_dpb.c",
+        "decoder_sw/software/source/hevc/hevc_fb_mngr.c",
+        "decoder_sw/software/source/hevc/hevc_nal_unit.c",
+        "decoder_sw/software/source/hevc/hevc_pic_order_cnt.c",
+        "decoder_sw/software/source/hevc/hevc_pic_param_set.c",
+        "decoder_sw/software/source/hevc/hevc_seq_param_set.c",
+        "decoder_sw/software/source/hevc/hevc_slice_header.c",
+        "decoder_sw/software/source/hevc/hevc_storage.c",
+        "decoder_sw/software/source/hevc/hevc_util.c",
+        "decoder_sw/software/source/hevc/hevc_exp_golomb.c",
+        "decoder_sw/software/source/hevc/hevc_vui.c",
+        "decoder_sw/software/source/hevc/hevc_sei.c",
+        "decoder_sw/software/source/hevc/hevc_video_param_set.c",
+        "decoder_sw/software/source/vp9/vp9decapi.c",
+        "decoder_sw/software/source/vp9/vp9hwd_asic.c",
+        "decoder_sw/software/source/vp9/vp9hwd_bool.c",
+        "decoder_sw/software/source/vp9/vp9hwd_buffer_queue.c",
+        "decoder_sw/software/source/vp9/vp9hwd_decoder.c",
+        "decoder_sw/software/source/vp9/vp9hwd_headers.c",
+        "decoder_sw/software/source/vp9/vp9hwd_output.c",
+        "decoder_sw/software/source/vp9/vp9hwd_probs.c",
+        "decoder_sw/software/source/vp9/vp9_modecontext.c",
+        "decoder_sw/software/source/vp9/vp9_entropymode.c",
+        "decoder_sw/software/source/vp9/vp9_entropymv.c",
+        "decoder_sw/software/source/vp9/vp9_treecoder.c",
+        "decoder_sw/software/source/vp9/vp9_modecont.c",
+        "decoder_sw/software/linux/dwl/dwl_linux.c",
+        "decoder_sw/software/linux/dwl/dwl_linux_hw.c",
+        "decoder_sw/software/linux/dwl/dwl_activity_trace.c",
+        "decoder_sw/software/linux/dwl/dwl_buf_protect.c",
+        "decoder_sw/software/source/common/bqueue.c",
+        "decoder_sw/software/source/common/commonconfig.c",
+        "decoder_sw/software/source/common/fifo.c",
+        "decoder_sw/software/source/common/raster_buffer_mgr.c",
+        "decoder_sw/software/source/common/regdrv.c",
+        "decoder_sw/software/source/common/sw_stream.c",
+        "decoder_sw/software/source/common/input_queue.c",
+        "decoder_sw/software/source/common/sw_util.c",
+        "decoder_sw/software/source/common/stream_corrupt.c",
+    ],
+
+    arch: {
+        arm64: {
+            cflags: ["-DUSE_64BIT_ENV"],
+        },
+    },
+
+    local_include_dirs: ["decoder_sw"],
+
+    // ifeq ($(ENABLE_HANTRO_DEBUG_LOG), true)
+    //shared_libs: [
+    //    "liblog",
+    //    "libcutils",
+    //],
+    // endif
+
+    vendor: true,
+}
diff --git a/Android_hantro_h1.bp b/Android_hantro_h1.bp
new file mode 100644
index 0000000..6eac912
--- /dev/null
+++ b/Android_hantro_h1.bp
@@ -0,0 +1,53 @@
+cc_library_shared {
+    name: "libhantro_h1",
+
+    srcs: [
+        "h1_encoder/software/linux_reference/ewl/ewl_linux_lock.c",
+        "h1_encoder/software/linux_reference/ewl/ewl_x280_common.c",
+        "h1_encoder/software/linux_reference/ewl/ewl_x280_irq.c",
+    ],
+
+    defaults: [
+        "IMX_VPU_ENC_DEFAULTS",
+        "IMX_VPU_G1_LDFLAGS",
+        "IMX_VPU_ENC_INCLUDES",
+    ],
+
+    cflags: ["-DEWL_NO_HW_TIMEOUT"],
+
+    ldflags: [
+        "-shared",
+        "-nostartfiles",
+        "-Wl,-Bsymbolic",
+        "-Wl,-z",
+        "-Wl,muldefs",
+    ],
+
+    arch: {
+        arm64: {
+            cflags: ["-DUSE_64BIT_ENV"],
+        },
+    },
+
+    include_dirs: ["device/fsl/common/kernel-headers"],
+
+    local_include_dirs: [
+        "h1_encoder/software/source/vp8",
+        "h1_encoder/software/source/h264",
+        "h1_encoder/software/linux_reference/ewl",
+    ],
+
+    whole_static_libs: [
+        "lib_imx_vsi_vp8_enc",
+        "lib_imx_vsi_h264_enc",
+    ],
+
+    // ifeq ($(ENABLE_HANTRO_DEBUG_LOG), true)
+    //shared_libs: [
+    //    "liblog",
+    //    "libcutils",
+    //],
+    // endif
+
+    vendor: true,
+}
diff --git a/Makefile_G1G2 b/Makefile_G1G2
index caab40f..8280cce 100755
--- a/Makefile_G1G2
+++ b/Makefile_G1G2
@@ -6,12 +6,12 @@ SOURCE_ROOT = decoder_sw/software
 OMX_ROOT = openmax_il
 
 INCLUDE_HEADERS = -I./decoder_sw -I$(SOURCE_ROOT)/source/inc -I$(SOURCE_ROOT)/source/hevc \
-           -I$(SOURCE_ROOT)/source/config -I$(SOURCE_ROOT)/source/dwl -I$(SOURCE_ROOT)/source/common -I$(SOURCE_ROOT)/source/vp9 \
-           -I$(SDKTARGETSYSROOT)/usr/imx/include
+           -I$(SOURCE_ROOT)/source/config -I$(SOURCE_ROOT)/source/dwl -I$(SOURCE_ROOT)/source/common -I$(SOURCE_ROOT)/source/vp9
 
 INCLUDE_HEADERS += -I$(SOURCE_ROOT)/linux/memalloc
 #INCLUDE_HEADERS += -I$(SOURCE_ROOT)/linux/ldriver
-INCLUDE_HEADERS += -I$(LINUX_KERNEL_ROOT)/include/uapi -I$(LINUX_KERNEL_ROOT)/include
+#INCLUDE_HEADERS += -I$(LINUX_KERNEL_ROOT)/include/uapi -I$(LINUX_KERNEL_ROOT)/include
+INCLUDE_HEADERS += -I$(SDKTARGETSYSROOT)/usr/include/imx
 
 CFLAGS += -DDEC_MODULE_PATH=\"/dev/mxc_hantro\" -DUSE_FAKE_RFC_TABLE -DFIFO_DATATYPE=void* -DNDEBUG -DDOWN_SCALER \
            -DUSE_EXTERNAL_BUFFER -DUSE_FAST_EC -DUSE_VP9_EC -DGET_FREE_BUFFER_NON_BLOCK \
diff --git a/Makefile_H1 b/Makefile_H1
index 9ca1aa9..9ab62e1 100755
--- a/Makefile_H1
+++ b/Makefile_H1
@@ -17,8 +17,8 @@ ENV += -DMEMALLOC_MODULE_PATH=\\"/dev/ion\\"
 #ENV += -DSDRAM_LM_BASE=0x00000000
 ENV += -DEWL_NO_HW_TIMEOUT
 ENV += -DUSE_ION
-ENV += -I$(LINUX_KERNEL_ROOT)/include/uapi -I$(LINUX_KERNEL_ROOT)/include
-ENV += -I$(SDKTARGETSYSROOT)/usr/imx/include
+#ENV += -I$(LINUX_KERNEL_ROOT)/include/uapi -I$(LINUX_KERNEL_ROOT)/include
+ENV += -I$(SDKTARGETSYSROOT)/usr/include/imx
 
 LIBENCNAME = libcodec_enc
 LIBSENC = -L./ -lhantro_h1 -lpthread
diff --git a/decoder_sw/software/linux/dwl/Android.bp b/decoder_sw/software/linux/dwl/Android.bp
new file mode 100644
index 0000000..2bb4f41
--- /dev/null
+++ b/decoder_sw/software/linux/dwl/Android.bp
@@ -0,0 +1,20 @@
+cc_library_static {
+    name: "lib_imx_vsi_dwl",
+
+    defaults: [
+        "IMX_VPU_DEC_DEFAULTS",
+        "IMX_VPU_INCLUDES",
+    ],
+    srcs: [
+        "dwl_linux.c",
+        "dwl_linux_hw.c",
+        "dwl_activity_trace.c",
+        "dwl_buf_protect.c",
+        "dwl_linux_sc.c"
+    ],
+
+    //shared_libs: ["pthread"],
+
+    vendor: true
+
+}
diff --git a/decoder_sw/software/linux/dwl/Android.mk b/decoder_sw/software/linux/dwl/Android.mk
deleted file mode 100755
index 14535d8..0000000
--- a/decoder_sw/software/linux/dwl/Android.mk
+++ /dev/null
@@ -1,28 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-    dwl_linux.c \
-    dwl_linux_hw.c \
-    dwl_activity_trace.c \
-    dwl_buf_protect.c \
-
-LOCAL_SRC_FILES += \
-    dwl_linux_sc.c \
-        
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-
-
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
- 
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-
-LOCAL_C_INCLUDES += \
-	$(LINUX_KERNEL_ROOT)/include/uapi
-
-LOCAL_MODULE:= lib_imx_vsi_dwl
-LOCAL_MODULE_TAGS := eng
-
-LOCAL_SHARED_LIBRARY = pthread
-include $(BUILD_STATIC_LIBRARY)
-
diff --git a/decoder_sw/software/source/Android.bp b/decoder_sw/software/source/Android.bp
new file mode 100644
index 0000000..f507922
--- /dev/null
+++ b/decoder_sw/software/source/Android.bp
@@ -0,0 +1,345 @@
+cc_defaults {
+    name: "static_dec_lib_defaults",
+
+    local_include_dirs: [
+        "common",
+    ],
+
+    defaults: [
+        "IMX_VPU_DEC_DEFAULTS",
+        "IMX_VPU_G1_CFLAGS",
+        "IMX_VPU_INCLUDES",
+    ],
+
+    arch: {
+        arm64: {
+            cflags: ["-DUSE_64BIT_ENV"],
+        },
+    },
+
+    vendor: true,
+}
+
+cc_library_static {
+    name: "lib_imx_vsi_avs",
+    defaults: ["static_dec_lib_defaults"],
+
+    srcs: [
+        "avs/avs_headers.c",
+        "avs/avs_strm.c",
+        "avs/avs_utils.c",
+        "avs/avs_vlc.c",
+        "avs/avsdecapi.c",
+        "avs/avsdecapi_internal.c",
+        "common/regdrv_g1.c",
+        "common/refbuffer.c",
+        "common/tiledref.c",
+        "common/bqueue.c",
+        "common/errorhandling.c",
+        "common/commonconfig_g1.c",
+        "common/input_queue.c",
+        "common/fifo.c",
+    ],
+
+    cflags: [
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DFIFO_DATATYPE=addr_t",
+    ],
+
+}
+
+cc_library_static {
+    name: "lib_imx_vsi_h264",
+    defaults: ["static_dec_lib_defaults"],
+
+    srcs: [
+        "h264high/h264_pp_pipeline.c",
+        "h264high/h264decapi.c",
+        "h264high/h264decapi_e.c",
+        "h264high/h264decmcapi.c",
+        "h264high/h264hwd_asic.c",
+        "h264high/h264hwd_cabac.c",
+        "h264high/h264hwd_cavlc.c",
+        "h264high/h264hwd_conceal.c",
+        "h264high/h264hwd_decoder.c",
+        "h264high/h264hwd_dpb.c",
+        "h264high/h264hwd_dpb_lock.c",
+        "h264high/h264hwd_inter_prediction.c",
+        "h264high/h264hwd_intra_prediction.c",
+        "h264high/h264hwd_macroblock_layer.c",
+        "h264high/h264hwd_slice_data.c",
+        "h264high/h264hwd_storage.c",
+        "h264high/legacy/h264hwd_byte_stream.c",
+        "h264high/legacy/h264hwd_nal_unit.c",
+        "h264high/legacy/h264hwd_neighbour.c",
+        "h264high/legacy/h264hwd_pic_order_cnt.c",
+        "h264high/legacy/h264hwd_pic_param_set.c",
+        "h264high/legacy/h264hwd_sei.c",
+        "h264high/legacy/h264hwd_seq_param_set.c",
+        "h264high/legacy/h264hwd_slice_group_map.c",
+        "h264high/legacy/h264hwd_slice_header.c",
+        "h264high/legacy/h264hwd_stream.c",
+        "h264high/legacy/h264hwd_util.c",
+        "h264high/legacy/h264hwd_vlc.c",
+        "h264high/legacy/h264hwd_vui.c",
+        "common/regdrv_g1.c",
+        "common/refbuffer.c",
+        "common/tiledref.c",
+        "common/workaround.c",
+        "common/errorhandling.c",
+        "common/commonconfig_g1.c",
+        "common/input_queue.c",
+        "common/fifo.c",
+        "common/stream_corrupt.c",
+    ],
+
+    cflags: [
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DSKIP_OPENB_FRAME",
+        "-DENABLE_DPB_RECOVER",
+        "-D_DISABLE_PIC_FREEZE",
+        "-DUSE_WORDACCESS",
+        "-DDEC_X170_USING_IRQ=1",
+        "-DFIFO_DATATYPE=void*",
+    ],
+
+    local_include_dirs: [
+        "h264high",
+        "h264high/legacy",
+    ],
+}
+
+cc_library_static {
+    name: "lib_imx_vsi_mpeg2",
+    defaults: ["static_dec_lib_defaults"],
+
+    srcs: [
+        "mpeg2/mpeg2decapi.c",
+        "mpeg2/mpeg2decapi_internal.c",
+        "mpeg2/mpeg2hwd_strm.c",
+        "mpeg2/mpeg2hwd_headers.c",
+        "mpeg2/mpeg2hwd_utils.c",
+        "common/regdrv_g1.c",
+        "common/refbuffer.c",
+        "common/tiledref.c",
+        "common/workaround.c",
+        "common/bqueue.c",
+        "common/errorhandling.c",
+        "common/commonconfig_g1.c",
+        "common/input_queue.c",
+        "common/fifo.c",
+        "common/stream_corrupt.c",
+    ],
+
+    cflags: [
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DENABLE_NON_STANDARD_FEATURES",
+        "-DFIFO_DATATYPE=addr_t",
+    ],
+
+    include_dirs: ["vendor/nxp/imx-vpu-hantro/decoder_sw/software/linux/mpeg2"],
+}
+
+cc_library_static {
+    name: "lib_imx_vsi_mpeg4",
+    defaults: ["static_dec_lib_defaults"],
+
+    srcs: [
+        "mpeg4/mp4dechwd_error_conceal.c",
+        "mpeg4/mp4decapi.c",
+        "mpeg4/mp4decapi_internal.c",
+        "mpeg4/mp4dechwd_rvlc.c",
+        "mpeg4/mp4dechwd_strmdec.c",
+        "mpeg4/mp4dechwd_headers.c",
+        "mpeg4/mp4dechwd_motiontexture.c",
+        "mpeg4/mp4dechwd_shortvideo.c",
+        "mpeg4/mp4dechwd_utils.c",
+        "mpeg4/mp4dechwd_videopacket.c",
+        "mpeg4/mp4dechwd_vlc.c",
+        "mpeg4/mp4dechwd_vop.c",
+        "common/regdrv_g1.c",
+        "common/tiledref.c",
+        "common/refbuffer.c",
+        "common/workaround.c",
+        "common/bqueue.c",
+        "common/errorhandling.c",
+        "common/commonconfig_g1.c",
+        "common/input_queue.c",
+        "common/fifo.c",
+        "mpeg4/mp4dechwd_custom.c",
+    ],
+
+    cflags: [
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-D_MP4_RLC_BUFFER_SIZE=384",
+        "-DFIFO_DATATYPE=addr_t",
+        ],
+
+    include_dirs: ["vendor/nxp/imx-vpu-hantro/decoder_sw/software/linux/mpeg4"],
+}
+
+cc_library_static {
+    name: "lib_imx_vsi_vc1",
+    defaults: ["static_dec_lib_defaults"],
+
+    srcs: [
+        "vc1/vc1decapi.c",
+        "vc1/vc1hwd_asic.c",
+        "vc1/vc1hwd_bitplane.c",
+        "vc1/vc1hwd_decoder.c",
+        "vc1/vc1hwd_picture_layer.c",
+        "vc1/vc1hwd_stream.c",
+        "vc1/vc1hwd_vlc.c",
+        "vc1/vc1hwd_headers.c",
+        "common/tiledref.c",
+        "common/regdrv_g1.c",
+        "common/refbuffer.c",
+        "common/bqueue.c",
+        "common/errorhandling.c",
+        "common/commonconfig_g1.c",
+        "common/input_queue.c",
+        "common/fifo.c",
+    ],
+
+    cflags: [
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-UCLEAR_HDRINFO_IN_SEEK",
+        "-DFIFO_DATATYPE=addr_t",
+    ],
+
+}
+
+cc_library_static {
+    name: "lib_imx_vsi_vp8",
+    defaults: ["static_dec_lib_defaults"],
+
+    srcs: [
+        "vp8/vp8decapi.c",
+        "vp8/vp8decmcapi.c",
+        "vp8/vp8hwd_bool.c",
+        "vp8/vp8hwd_buffer_queue.c",
+        "vp8/vp8hwd_probs.c",
+        "vp8/vp8hwd_headers.c",
+        "vp8/vp8hwd_decoder.c",
+        "vp8/vp8hwd_pp_pipeline.c",
+        "vp8/vp8hwd_asic.c",
+        "vp8/vp8hwd_error.c",
+        "common/regdrv_g1.c",
+        "common/refbuffer.c",
+        "common/tiledref.c",
+        "common/bqueue.c",
+        "common/errorhandling.c",
+        "common/commonconfig_g1.c",
+        "common/fifo.c",
+    ],
+
+    cflags: [
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DFIFO_DATATYPE=addr_t",
+    ],
+
+}
+
+cc_library_static {
+    name: "lib_imx_vsi_vp6",
+    defaults: ["static_dec_lib_defaults"],
+
+    srcs: [
+        "vp6/vp6booldec.c",
+        "vp6/vp6dec.c",
+        "vp6/vp6huffdec.c",
+        "vp6/vp6hwd_api.c",
+        "vp6/vp6hwd_asic.c",
+        "vp6/vp6strmbuffer.c",
+        "vp6/vp6decodemode.c",
+        "vp6/vp6decodemv.c",
+        "vp6/vp6scanorder.c",
+        "vp6/vp6gconst.c",
+        "vp6/vp6_pp_pipeline.c",
+        "common/tiledref.c",
+        "common/regdrv_g1.c",
+        "common/refbuffer.c",
+        "common/bqueue.c",
+        "common/errorhandling.c",
+        "common/commonconfig_g1.c",
+        "common/fifo.c",
+    ],
+
+    cflags: [
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-UCLEAR_HDRINFO_IN_SEEK",
+        "-DFIFO_DATATYPE=addr_t",
+    ],
+
+}
+
+cc_library_static {
+    name: "lib_imx_vsi_rv",
+    defaults: ["static_dec_lib_defaults"],
+
+    srcs: [
+        "rv/rvdecapi.c",
+        "rv/rvdecapi_internal.c",
+        "rv/rv_strm.c",
+        "rv/rv_headers.c",
+        "rv/rv_utils.c",
+        "rv/rv_rpr.c",
+        "common/regdrv_g1.c",
+        "common/tiledref.c",
+        "common/refbuffer.c",
+        "rv/on2rvdecapi.c",
+        "common/workaround.c",
+        "common/bqueue.c",
+        "common/errorhandling.c",
+        "common/commonconfig_g1.c",
+        "common/input_queue.c",
+        "common/fifo.c",
+    ],
+
+    cflags: [
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-UCLEAR_HDRINFO_IN_SEEK",
+        "-DFIFO_DATATYPE=addr_t",
+    ],
+
+    include_dirs: ["vendor/nxp/imx-vpu-hantro/decoder_sw/software/linux/rv"],
+
+}
+
+cc_library_static {
+    name: "lib_imx_vsi_jpeg",
+    defaults: ["static_dec_lib_defaults"],
+
+    srcs: [
+        "jpeg/jpegdecapi.c",
+        "jpeg/jpegdechdrs.c",
+        "jpeg/jpegdecinternal.c",
+        "jpeg/jpegdecscan.c",
+        "jpeg/jpegdecutils.c",
+        "common/regdrv_g1.c",
+        "common/commonconfig_g1.c",
+    ],
+
+    cflags: [
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+    ],
+
+}
diff --git a/decoder_sw/software/source/avs/Android.mk b/decoder_sw/software/source/avs/Android.mk
deleted file mode 100755
index 50547be..0000000
--- a/decoder_sw/software/source/avs/Android.mk
+++ /dev/null
@@ -1,37 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-    avs_headers.c \
-    avs_strm.c \
-    avs_utils.c \
-    avs_vlc.c \
-    avsdecapi.c \
-    avsdecapi_internal.c \
-	../common/regdrv_g1.c \
-	../common/refbuffer.c \
-	../common/tiledref.c \
-	../common/bqueue.c \
-	../common/errorhandling.c \
-	../common/commonconfig_g1.c \
-	../common/input_queue.c \
-	../common/fifo.c
-
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_CFLAGS += $(IMX_VPU_G1_CFLAGS)
-
-LOCAL_CFLAGS += -DGET_FREE_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK
-LOCAL_CFLAGS += -DFIFO_DATATYPE=addr_t
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-LOCAL_C_INCLUDES += ../common
-
-LOCAL_VENDOR_MODULE := true
-LOCAL_MODULE:= lib_imx_vsi_avs
-LOCAL_MODULE_TAGS := eng
-include $(BUILD_STATIC_LIBRARY)
-
diff --git a/decoder_sw/software/source/common/Android.mk b/decoder_sw/software/source/common/Android.mk
index c51e430..c54a505 100755
--- a/decoder_sw/software/source/common/Android.mk
+++ b/decoder_sw/software/source/common/Android.mk
@@ -26,6 +26,6 @@ LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
 LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
 
 LOCAL_MODULE:= lib_imx_vsi_common
-LOCAL_MODULE_TAGS := eng
+LOCAL_MODULE_TAGS := optional
 include $(BUILD_STATIC_LIBRARY)
 
diff --git a/decoder_sw/software/source/common/decapi.c b/decoder_sw/software/source/common/decapi.c
index a1135d0..78af5bf 100755
--- a/decoder_sw/software/source/common/decapi.c
+++ b/decoder_sw/software/source/common/decapi.c
@@ -859,6 +859,7 @@ static enum DecRet Vp9Init(const void** inst, struct DecConfig config,
   dec_cfg.use_ringbuffer = config.use_ringbuffer;
   dec_cfg.output_format = format;
   dec_cfg.use_cts_test = 0;
+  dec_cfg.use_secure_mode = 0;
 #ifdef USE_EXTERNAL_BUFFER
   dec_cfg.use_adaptive_buffers = 0;
 #endif
@@ -1041,7 +1042,7 @@ static enum DecRet Vp9Decode(void* inst, struct DWLLinearMem input, struct DecOu
         usleep(10);
     } while (rv == DEC_NO_DECODING_BUFFER);
     /* Headers decoded or error occurred */
-    if (rv == DEC_HDRS_RDY || rv != DEC_PIC_DECODED) break;
+    if (rv == DEC_HDRS_RDY || (rv != DEC_PIC_DECODED && rv != DEC_PIC_CONSUMED)) break;
     else if (frames_this_pts) frame_count++;
 
     data_start += data_sz;
diff --git a/decoder_sw/software/source/h264high/Android.mk b/decoder_sw/software/source/h264high/Android.mk
deleted file mode 100755
index 8bf3b84..0000000
--- a/decoder_sw/software/source/h264high/Android.mk
+++ /dev/null
@@ -1,66 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-    h264_pp_pipeline.c \
-    h264decapi.c \
-    h264decapi_e.c \
-    h264decmcapi.c \
-    h264hwd_asic.c \
-    h264hwd_cabac.c \
-    h264hwd_cavlc.c \
-    h264hwd_conceal.c \
-    h264hwd_decoder.c \
-    h264hwd_dpb.c \
-    h264hwd_dpb_lock.c \
-    h264hwd_inter_prediction.c \
-    h264hwd_intra_prediction.c \
-    h264hwd_macroblock_layer.c \
-    h264hwd_slice_data.c \
-    h264hwd_storage.c \
-    legacy/h264hwd_byte_stream.c \
-	legacy/h264hwd_nal_unit.c \
-	legacy/h264hwd_neighbour.c \
-	legacy/h264hwd_pic_order_cnt.c \
-	legacy/h264hwd_pic_param_set.c \
-	legacy/h264hwd_sei.c \
-	legacy/h264hwd_seq_param_set.c \
-	legacy/h264hwd_slice_group_map.c \
-	legacy/h264hwd_slice_header.c \
-	legacy/h264hwd_stream.c \
-	legacy/h264hwd_util.c \
-	legacy/h264hwd_vlc.c \
-	legacy/h264hwd_vui.c \
-    ../common/regdrv_g1.c \
-    ../common/refbuffer.c \
-    ../common/tiledref.c \
-    ../common/workaround.c \
-    ../common/errorhandling.c \
-    ../common/commonconfig_g1.c \
-    ../common/input_queue.c \
-    ../common/fifo.c \
-    ../common/stream_corrupt.c
-
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_CFLAGS += $(IMX_VPU_G1_CFLAGS)
-
-LOCAL_CFLAGS += -DGET_FREE_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK \
-	-DSKIP_OPENB_FRAME -DENABLE_DPB_RECOVER -D_DISABLE_PIC_FREEZE -DUSE_WORDACCESS -DDEC_X170_USING_IRQ=1
-
-LOCAL_CFLAGS += -DFIFO_DATATYPE=void*
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-LOCAL_C_INCLUDES += $(LOCAL_PATH)/legacy \
-	$(LOCAL_PATH)/../common
-
-LOCAL_VENDOR_MODULE := true
-LOCAL_MODULE:= lib_imx_vsi_h264
-LOCAL_MODULE_TAGS := eng
-include $(BUILD_STATIC_LIBRARY)
-
diff --git a/decoder_sw/software/source/hevc/Android.mk b/decoder_sw/software/source/hevc/Android.mk
index 5eb04d7..38bbd61 100755
--- a/decoder_sw/software/source/hevc/Android.mk
+++ b/decoder_sw/software/source/hevc/Android.mk
@@ -29,6 +29,6 @@ LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
 LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
 
 LOCAL_MODULE:= lib_imx_vsi_hevc
-LOCAL_MODULE_TAGS := eng
+LOCAL_MODULE_TAGS := optional
 include $(BUILD_STATIC_LIBRARY)
 
diff --git a/decoder_sw/software/source/hevc/hevc_decoder.c b/decoder_sw/software/source/hevc/hevc_decoder.c
index d61f73c..8f71bbf 100755
--- a/decoder_sw/software/source/hevc/hevc_decoder.c
+++ b/decoder_sw/software/source/hevc/hevc_decoder.c
@@ -183,6 +183,12 @@ u32 HevcDecode(struct HevcDecContainer *dec_cont, const u8 *byte_strm, u32 strm_
     goto NEXT_NAL;
   }
 
+  /* Discard non-base view nal unit */
+  if (nal_unit.nuh_layer_id > 0) {
+    ret = HEVC_RDY;
+    goto NEXT_NAL;
+  }
+
   /* FIXME: Sometimes SPS/PPS NAL following the filler data NAL,
      The stream is consumed incorrectly if discard the whole buffer here */
 #if 1
diff --git a/decoder_sw/software/source/hevc/hevc_dpb.c b/decoder_sw/software/source/hevc/hevc_dpb.c
index 3231062..6a0f21e 100755
--- a/decoder_sw/software/source/hevc/hevc_dpb.c
+++ b/decoder_sw/software/source/hevc/hevc_dpb.c
@@ -163,14 +163,15 @@ void *HevcAllocateDpbImage(struct DpbStorage *dpb, i32 pic_order_cnt,
     if (!dpb->buffer[i].to_be_displayed && !IS_REFERENCE(dpb->buffer[i])) break;
   }
 
+
 #ifdef GET_FREE_BUFFER_NON_BLOCK
-  if (i >= MIN(dpb->dpb_size, dpb->tot_buffers))
+  if (i > MIN(dpb->dpb_size, dpb->tot_buffers))
     return NULL;
 #endif
 
   /* Though i should NOT exceed dpb_size, in some error streams it does happen.
    * As a workaround, we set it to 0. */
-  if (i == dpb->dpb_size)
+  if (i > dpb->dpb_size)
     i = 0;
 
   ASSERT(i <= dpb->dpb_size);
diff --git a/decoder_sw/software/source/hevc/hevc_nal_unit.c b/decoder_sw/software/source/hevc/hevc_nal_unit.c
index 4c4cbee..b5a8c22 100755
--- a/decoder_sw/software/source/hevc/hevc_nal_unit.c
+++ b/decoder_sw/software/source/hevc/hevc_nal_unit.c
@@ -61,11 +61,13 @@ u32 HevcDecodeNalUnit(struct StrmData *stream, struct NalUnit *nal_unit) {
 
   DEBUG_PRINT(("NAL TYPE %d
", tmp));
 
-  /* reserved_zero_6bits */
+  /* nuh_layer_id */
   tmp = SwGetBits(stream, 6);
   if (tmp == END_OF_STREAM)
     return HANTRO_NOK;
 
+  nal_unit->nuh_layer_id = tmp;
+
   tmp = SwGetBits(stream, 3);
   if (tmp == END_OF_STREAM)
     return HANTRO_NOK;
diff --git a/decoder_sw/software/source/hevc/hevc_nal_unit.h b/decoder_sw/software/source/hevc/hevc_nal_unit.h
index 1329203..079a6e1 100755
--- a/decoder_sw/software/source/hevc/hevc_nal_unit.h
+++ b/decoder_sw/software/source/hevc/hevc_nal_unit.h
@@ -57,6 +57,7 @@
 struct NalUnit {
   enum NalUnitType nal_unit_type;
   u32 temporal_id;
+  u32 nuh_layer_id;
 };
 
 u32 HevcDecodeNalUnit(struct StrmData* stream, struct NalUnit* nal_unit);
diff --git a/decoder_sw/software/source/jpeg/Android.mk b/decoder_sw/software/source/jpeg/Android.mk
deleted file mode 100755
index 73edaf4..0000000
--- a/decoder_sw/software/source/jpeg/Android.mk
+++ /dev/null
@@ -1,32 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-    jpegdecapi.c \
-    jpegdechdrs.c \
-    jpegdecinternal.c \
-    jpegdecscan.c \
-    jpegdecutils.c \
-	../common/regdrv_g1.c \
-    ../common/commonconfig_g1.c
-
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_CFLAGS += $(IMX_VPU_G1_CFLAGS)
-
-
-
-LOCAL_CFLAGS += -DGET_FREE_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK
-
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-LOCAL_C_INCLUDES += ../common
-
-LOCAL_VENDOR_MODULE := true
-LOCAL_MODULE:= lib_imx_vsi_jpeg
-LOCAL_MODULE_TAGS := eng
-include $(BUILD_STATIC_LIBRARY)
-
diff --git a/decoder_sw/software/source/mpeg2/Android.mk b/decoder_sw/software/source/mpeg2/Android.mk
deleted file mode 100755
index 7a04c79..0000000
--- a/decoder_sw/software/source/mpeg2/Android.mk
+++ /dev/null
@@ -1,42 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-	mpeg2decapi.c \
-	mpeg2decapi_internal.c \
-	mpeg2hwd_strm.c \
-	mpeg2hwd_headers.c \
-	mpeg2hwd_utils.c \
-	../common/regdrv_g1.c \
-	../common/refbuffer.c \
-	../common/tiledref.c \
-	../common/workaround.c \
-	../common/bqueue.c \
-	../common/errorhandling.c \
-	../common/commonconfig_g1.c \
-    ../common/input_queue.c \
-    ../common/fifo.c \
-	../common/stream_corrupt.c
-
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_CFLAGS += $(IMX_VPU_G1_CFLAGS)
-
-
-
-LOCAL_CFLAGS += -DGET_FREE_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -DENABLE_NON_STANDARD_FEATURES
-LOCAL_CFLAGS += -DFIFO_DATATYPE=addr_t
-
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-LOCAL_C_INCLUDES += ../common \
-	$(LOCAL_PATH)/../../linux/mpeg2
-
-LOCAL_VENDOR_MODULE := true
-LOCAL_MODULE:= lib_imx_vsi_mpeg2
-LOCAL_MODULE_TAGS := eng
-include $(BUILD_STATIC_LIBRARY)
-
diff --git a/decoder_sw/software/source/mpeg4/Android.mk b/decoder_sw/software/source/mpeg4/Android.mk
deleted file mode 100755
index 31f3b87..0000000
--- a/decoder_sw/software/source/mpeg4/Android.mk
+++ /dev/null
@@ -1,49 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-	mp4dechwd_error_conceal.c \
-	mp4decapi.c \
-	mp4decapi_internal.c \
-	mp4dechwd_rvlc.c \
-	mp4dechwd_strmdec.c \
-	mp4dechwd_headers.c \
-	mp4dechwd_motiontexture.c \
-	mp4dechwd_shortvideo.c \
-	mp4dechwd_utils.c \
-	mp4dechwd_videopacket.c \
-	mp4dechwd_vlc.c \
-	mp4dechwd_vop.c \
-	../common/regdrv_g1.c \
-	../common/tiledref.c \
-	../common/refbuffer.c \
-	../common/workaround.c \
-	../common/bqueue.c \
-	../common/errorhandling.c \
-	../common/commonconfig_g1.c \
-     ../common/input_queue.c \
-    ../common/fifo.c \
-		mp4dechwd_custom.c
-
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_CFLAGS += $(IMX_VPU_G1_CFLAGS)
-
-
-
-LOCAL_CFLAGS += -DGET_FREE_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -D_MP4_RLC_BUFFER_SIZE=384
-LOCAL_CFLAGS += -DFIFO_DATATYPE=addr_t
-
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-LOCAL_C_INCLUDES += ../common \
-	$(LOCAL_PATH)/../../linux/mpeg4
-
-LOCAL_VENDOR_MODULE := true
-LOCAL_MODULE:= lib_imx_vsi_mpeg4
-LOCAL_MODULE_TAGS := eng
-include $(BUILD_STATIC_LIBRARY)
-
diff --git a/decoder_sw/software/source/rv/Android.mk b/decoder_sw/software/source/rv/Android.mk
deleted file mode 100755
index 0b94c9c..0000000
--- a/decoder_sw/software/source/rv/Android.mk
+++ /dev/null
@@ -1,43 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-	rvdecapi.c \
-	rvdecapi_internal.c \
-	rv_strm.c \
-	rv_headers.c \
-	rv_utils.c \
-	rv_rpr.c \
-	../common/regdrv_g1.c \
-	../common/tiledref.c \
-	../common/refbuffer.c \
-	on2rvdecapi.c \
-	../common/workaround.c \
-	../common/bqueue.c \
-	../common/errorhandling.c \
-	../common/commonconfig_g1.c \
-	../common/input_queue.c \
-	../common/fifo.c
-
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_CFLAGS += $(IMX_VPU_G1_CFLAGS)
-
-
-
-LOCAL_CFLAGS += -DGET_FREE_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -UCLEAR_HDRINFO_IN_SEEK
-LOCAL_CFLAGS += -DFIFO_DATATYPE=addr_t
-
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-LOCAL_C_INCLUDES += ../common \
-	$(LOCAL_PATH)/../../linux/rv
-
-LOCAL_VENDOR_MODULE := true
-LOCAL_MODULE:= lib_imx_vsi_rv
-LOCAL_MODULE_TAGS := eng
-include $(BUILD_STATIC_LIBRARY)
-
diff --git a/decoder_sw/software/source/vc1/Android.mk b/decoder_sw/software/source/vc1/Android.mk
deleted file mode 100755
index c4a1ed2..0000000
--- a/decoder_sw/software/source/vc1/Android.mk
+++ /dev/null
@@ -1,42 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-    vc1decapi.c \
-    vc1hwd_asic.c \
-    vc1hwd_bitplane.c \
-    vc1hwd_decoder.c \
-    vc1hwd_picture_layer.c \
-    vc1hwd_stream.c \
-    vc1hwd_vlc.c \
-    vc1hwd_headers.c \
-    ../common/tiledref.c \
-    ../common/regdrv_g1.c \
-    ../common/refbuffer.c \
-    ../common/bqueue.c \
-    ../common/errorhandling.c \
-    ../common/commonconfig_g1.c \
-    ../common/input_queue.c \
-    ../common/fifo.c
-
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_CFLAGS += $(IMX_VPU_G1_CFLAGS)
-
-
-
-LOCAL_CFLAGS += -DGET_FREE_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -UCLEAR_HDRINFO_IN_SEEK
-LOCAL_CFLAGS += -DFIFO_DATATYPE=addr_t
-
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-LOCAL_C_INCLUDES += ../common
-
-LOCAL_VENDOR_MODULE := true
-LOCAL_MODULE:= lib_imx_vsi_vc1
-LOCAL_MODULE_TAGS := eng
-include $(BUILD_STATIC_LIBRARY)
-
diff --git a/decoder_sw/software/source/vp6/Android.mk b/decoder_sw/software/source/vp6/Android.mk
deleted file mode 100755
index 8388bb1..0000000
--- a/decoder_sw/software/source/vp6/Android.mk
+++ /dev/null
@@ -1,44 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-    vp6booldec.c \
-    vp6dec.c \
-    vp6huffdec.c \
-    vp6hwd_api.c \
-    vp6hwd_asic.c \
-    vp6strmbuffer.c \
-    vp6decodemode.c \
-    vp6decodemv.c \
-    vp6scanorder.c \
-    vp6gconst.c \
-    vp6_pp_pipeline.c \
-    ../common/tiledref.c \
-    ../common/regdrv_g1.c \
-    ../common/refbuffer.c \
-    ../common/bqueue.c \
-    ../common/errorhandling.c \
-    ../common/commonconfig_g1.c \
-    ../common/fifo.c
-
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_CFLAGS += $(IMX_VPU_G1_CFLAGS)
-
-
-
-LOCAL_CFLAGS += -DGET_FREE_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -UCLEAR_HDRINFO_IN_SEEK
-LOCAL_CFLAGS += -DFIFO_DATATYPE=addr_t
-
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-LOCAL_C_INCLUDES += ../common
-
-LOCAL_VENDOR_MODULE := true
-LOCAL_MODULE:= lib_imx_vsi_vp6
-LOCAL_MODULE_TAGS := eng
-include $(BUILD_STATIC_LIBRARY)
-
diff --git a/decoder_sw/software/source/vp8/Android.mk b/decoder_sw/software/source/vp8/Android.mk
deleted file mode 100755
index 800c186..0000000
--- a/decoder_sw/software/source/vp8/Android.mk
+++ /dev/null
@@ -1,42 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-    vp8decapi.c \
-    vp8decmcapi.c \
-    vp8hwd_bool.c \
-    vp8hwd_buffer_queue.c \
-    vp8hwd_probs.c \
-    vp8hwd_headers.c \
-    vp8hwd_decoder.c \
-    vp8hwd_pp_pipeline.c \
-    vp8hwd_asic.c \
-    vp8hwd_error.c \
-    ../common/regdrv_g1.c \
-    ../common/refbuffer.c \
-    ../common/tiledref.c \
-    ../common/bqueue.c \
-    ../common/errorhandling.c \
-    ../common/commonconfig_g1.c \
-    ../common/fifo.c
-
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_CFLAGS += $(IMX_VPU_G1_CFLAGS)
-
-
-
-LOCAL_CFLAGS += -DGET_FREE_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK
-LOCAL_CFLAGS +=  -DFIFO_DATATYPE=addr_t
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-LOCAL_C_INCLUDES += ../common
-
-LOCAL_VENDOR_MODULE := true
-LOCAL_MODULE:= lib_imx_vsi_vp8
-LOCAL_MODULE_TAGS := eng
-include $(BUILD_STATIC_LIBRARY)
-
diff --git a/g1.mk b/g1.mk
deleted file mode 100644
index c31f95f..0000000
--- a/g1.mk
+++ /dev/null
@@ -1,47 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-
-LOCAL_SRC_FILES := \
-    decoder_sw/software/linux/dwl/dwl_linux.c \
-    decoder_sw/software/linux/dwl/dwl_linux_sc.c \
-    decoder_sw/software/linux/dwl/dwl_activity_trace.c
-
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-
-
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-
-LOCAL_LDFLAGS += -shared -nostartfiles -Wl,-Bsymbolic -Wl,-z -Wl,muldefs
-LOCAL_LDFLAGS += $(IMX_VPU_G1_LDFLAGS)
-
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-LOCAL_C_INCLUDES += device/fsl/common/kernel-headers
-
-LOCAL_C_INCLUDES += $(LOCAL_PATH)/legacy \
-	$(LOCAL_PATH)/decoder_sw/software/source/avs \
-	$(LOCAL_PATH)/decoder_sw/software/source/h264high \
-	$(LOCAL_PATH)/decoder_sw/software/source/h264high/legacy \
-	$(LOCAL_PATH)/decoder_sw/software/source/jpeg \
-	$(LOCAL_PATH)/decoder_sw/software/source/mpeg2 \
-	$(LOCAL_PATH)/decoder_sw/software/linux/mpeg2 \
-	$(LOCAL_PATH)/decoder_sw/software/linux/mpeg4 \
-	$(LOCAL_PATH)/decoder_sw/software/linux/rv \
-
-LOCAL_WHOLE_STATIC_LIBRARIES := lib_imx_vsi_avs lib_imx_vsi_h264 lib_imx_vsi_jpeg \
-	lib_imx_vsi_mpeg2 lib_imx_vsi_mpeg4 lib_imx_vsi_rv lib_imx_vsi_vp6 lib_imx_vsi_vp8 lib_imx_vsi_vc1
-
-ifeq ($(ENABLE_HANTRO_DEBUG_LOG), true)
-LOCAL_SHARED_LIBRARIES := liblog libcutils
-endif
-
-LOCAL_MODULE:= libg1
-LOCAL_MODULE_TAGS := eng
-LOCAL_VENDOR_MODULE := true
-include $(BUILD_SHARED_LIBRARY)
-
-
diff --git a/g1_h264_test.mk b/g1_h264_test.mk
index e5c2486..50f9d5d 100644
--- a/g1_h264_test.mk
+++ b/g1_h264_test.mk
@@ -39,6 +39,6 @@ LOCAL_SHARED_LIBRARIES  += libg1
 
 LOCAL_32_BIT_ONLY := true
 LOCAL_MODULE:= g1dec_h264_test
-LOCAL_MODULE_TAGS := eng
+LOCAL_MODULE_TAGS := optional
 LOCAL_VENDOR_MODULE := true
 include $(BUILD_EXECUTABLE)
diff --git a/g1_mpeg2_test.mk b/g1_mpeg2_test.mk
index 9617227..aa56ca1 100644
--- a/g1_mpeg2_test.mk
+++ b/g1_mpeg2_test.mk
@@ -34,6 +34,6 @@ LOCAL_SHARED_LIBRARIES  += libg1
 
 LOCAL_32_BIT_ONLY := true
 LOCAL_MODULE:= g1dec_mpeg2_test
-LOCAL_MODULE_TAGS := eng
+LOCAL_MODULE_TAGS := optional
 LOCAL_VENDOR_MODULE := true
 include $(BUILD_EXECUTABLE)
diff --git a/g1_mpeg4_test.mk b/g1_mpeg4_test.mk
index 4967994..a209196 100644
--- a/g1_mpeg4_test.mk
+++ b/g1_mpeg4_test.mk
@@ -38,6 +38,6 @@ LOCAL_SHARED_LIBRARIES  += libg1
 
 LOCAL_32_BIT_ONLY := true
 LOCAL_MODULE:= g1dec_mpeg4_test
-LOCAL_MODULE_TAGS := eng
+LOCAL_MODULE_TAGS := optional
 LOCAL_VENDOR_MODULE := true
 include $(BUILD_EXECUTABLE)
diff --git a/g1_vc1_test.mk b/g1_vc1_test.mk
index 4f5b53f..a361a7e 100644
--- a/g1_vc1_test.mk
+++ b/g1_vc1_test.mk
@@ -35,6 +35,6 @@ LOCAL_SHARED_LIBRARIES  += libg1
 
 LOCAL_32_BIT_ONLY := true
 LOCAL_MODULE:= g1dec_vc1_test
-LOCAL_MODULE_TAGS := eng
+LOCAL_MODULE_TAGS := optional
 LOCAL_VENDOR_MODULE := true
 include $(BUILD_EXECUTABLE)
diff --git a/g1_vp6_test.mk b/g1_vp6_test.mk
index 13e3c5c..a50dce0 100644
--- a/g1_vp6_test.mk
+++ b/g1_vp6_test.mk
@@ -37,6 +37,6 @@ LOCAL_SHARED_LIBRARIES  += libg1
 
 LOCAL_32_BIT_ONLY := true
 LOCAL_MODULE:= g1dec_vp6_test
-LOCAL_MODULE_TAGS := eng
+LOCAL_MODULE_TAGS := optional
 LOCAL_VENDOR_MODULE := true
 include $(BUILD_EXECUTABLE)
diff --git a/g1_vp8_test.mk b/g1_vp8_test.mk
index e78658a..cb7fa13 100644
--- a/g1_vp8_test.mk
+++ b/g1_vp8_test.mk
@@ -40,6 +40,6 @@ LOCAL_SHARED_LIBRARIES  += libg1
 
 LOCAL_32_BIT_ONLY := true
 LOCAL_MODULE:= g1dec_vp8_test
-LOCAL_MODULE_TAGS := eng
+LOCAL_MODULE_TAGS := optional
 LOCAL_VENDOR_MODULE := true
 include $(BUILD_EXECUTABLE)
diff --git a/g2_test.mk b/g2_test.mk
index afb3447..c75056a 100644
--- a/g2_test.mk
+++ b/g2_test.mk
@@ -40,6 +40,6 @@ LOCAL_C_INCLUDES += $(LOCAL_PATH)/decoder_sw \
 LOCAL_SHARED_LIBRARIES := libhantro
 LOCAL_32_BIT_ONLY := true
 LOCAL_MODULE:= g2dec_test
-LOCAL_MODULE_TAGS := eng
+LOCAL_MODULE_TAGS := optional
 LOCAL_VENDOR_MODULE := true
 include $(BUILD_EXECUTABLE)
diff --git a/h1_encoder/software/source/Android.bp b/h1_encoder/software/source/Android.bp
new file mode 100644
index 0000000..d1f0e05
--- /dev/null
+++ b/h1_encoder/software/source/Android.bp
@@ -0,0 +1,103 @@
+cc_library_static {
+    name: "lib_imx_vsi_h264_enc",
+
+    srcs: [
+        "h264/H264Cabac.c",
+        "h264/H264CodeFrame.c",
+        "h264/H264Denoise.c",
+        "h264/H264EncApi.c",
+        "h264/h264encapi_ext.c",
+        "h264/H264Init.c",
+        "h264/H264Mad.c",
+        "h264/H264NalUnit.c",
+        "h264/H264PictureBuffer.c",
+        "h264/H264PictureParameterSet.c",
+        "h264/H264PutBits.c",
+        "h264/H264RateControl.c",
+        "h264/H264Sei.c",
+        "h264/H264SequenceParameterSet.c",
+        "h264/H264Slice.c",
+        "h264/H264TestId.c",
+        "common/encasiccontroller.c",
+        "common/encasiccontroller_v2.c",
+        "common/encpreprocess.c",
+        "common/encInputLineBuffer.c",
+        "common/encswhwregisters.c",
+    ],
+
+    local_include_dirs: [
+        "h264",
+        "common",
+    ],
+
+    defaults: [
+        "IMX_VPU_ENC_DEFAULTS",
+        "IMX_VPU_G1_CFLAGS",
+        "IMX_VPU_ENC_INCLUDES",
+    ],
+
+    cflags: [
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DFIFO_DATATYPE=addr_t",
+    ],
+
+    arch: {
+        arm64: {
+            cflags: ["-DUSE_64BIT_ENV"],
+        },
+    },
+
+    vendor: true,
+
+}
+
+cc_library_static {
+    name: "lib_imx_vsi_vp8_enc",
+
+    srcs: [
+        "vp8/vp8encapi.c",
+        "vp8/vp8codeframe.c",
+        "vp8/vp8entropy.c",
+        "vp8/vp8header.c",
+        "vp8/vp8init.c",
+        "vp8/vp8macroblocktools.c",
+        "vp8/vp8picparameterset.c",
+        "vp8/vp8picturebuffer.c",
+        "vp8/vp8putbits.c",
+        "vp8/vp8ratecontrol.c",
+        "vp8/vp8testid.c",
+        "common/encasiccontroller.c",
+        "common/encasiccontroller_v2.c",
+        "common/encpreprocess.c",
+        "common/encswhwregisters.c",
+    ],
+
+    local_include_dirs: [
+        "vp8",
+        "common",
+    ],
+
+    defaults: [
+        "IMX_VPU_ENC_DEFAULTS",
+        "IMX_VPU_G1_CFLAGS",
+        "IMX_VPU_ENC_INCLUDES",
+    ],
+
+    cflags: [
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DGET_OUTPUT_BUFFER_NON_BLOCK",
+        "-DFIFO_DATATYPE=addr_t",
+    ],
+
+    arch: {
+        arm64: {
+            cflags: ["-DUSE_64BIT_ENV"],
+        },
+    },
+
+    vendor: true,
+
+}
diff --git a/h1_encoder/software/source/h264/Android.mk b/h1_encoder/software/source/h264/Android.mk
deleted file mode 100755
index 652a007..0000000
--- a/h1_encoder/software/source/h264/Android.mk
+++ /dev/null
@@ -1,45 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-    H264Cabac.c \
-    H264CodeFrame.c \
-    H264Denoise.c \
-    H264EncApi.c \
-    h264encapi_ext.c \
-    H264Init.c \
-    H264Mad.c \
-    H264NalUnit.c \
-    H264PictureBuffer.c \
-    H264PictureParameterSet.c \
-    H264PutBits.c \
-    H264RateControl.c \
-    H264Sei.c \
-    H264SequenceParameterSet.c \
-    H264Slice.c \
-    H264TestId.c \
-    ../common/encasiccontroller.c \
-    ../common/encasiccontroller_v2.c \
-    ../common/encpreprocess.c \
-    ../common/encInputLineBuffer.c \
-    ../common/encswhwregisters.c
-
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_CFLAGS += $(IMX_VPU_G1_CFLAGS)
-
-
-
-LOCAL_CFLAGS += -DGET_FREE_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK
-LOCAL_CFLAGS +=  -DFIFO_DATATYPE=addr_t
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_ENC_INCLUDES)
-
-LOCAL_VENDOR_MODULE := true
-LOCAL_MODULE:= lib_imx_vsi_h264_enc
-LOCAL_MODULE_TAGS := eng
-include $(BUILD_STATIC_LIBRARY)
-
diff --git a/h1_encoder/software/source/vp8/Android.mk b/h1_encoder/software/source/vp8/Android.mk
deleted file mode 100755
index b37a46f..0000000
--- a/h1_encoder/software/source/vp8/Android.mk
+++ /dev/null
@@ -1,39 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-    vp8encapi.c \
-    vp8codeframe.c \
-    vp8entropy.c \
-    vp8header.c \
-    vp8init.c \
-    vp8macroblocktools.c \
-    vp8picparameterset.c \
-    vp8picturebuffer.c \
-    vp8putbits.c \
-    vp8ratecontrol.c \
-    vp8testid.c \
-    ../common/encasiccontroller.c \
-    ../common/encasiccontroller_v2.c \
-    ../common/encpreprocess.c \
-    ../common/encswhwregisters.c
-
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_CFLAGS += $(IMX_VPU_G1_CFLAGS)
-
-
-
-LOCAL_CFLAGS += -DGET_FREE_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK -DGET_OUTPUT_BUFFER_NON_BLOCK
-LOCAL_CFLAGS +=  -DFIFO_DATATYPE=addr_t
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_ENC_INCLUDES)
-
-LOCAL_VENDOR_MODULE := true
-LOCAL_MODULE:= lib_imx_vsi_vp8_enc
-LOCAL_MODULE_TAGS := eng
-include $(BUILD_STATIC_LIBRARY)
-
diff --git a/h1_h264_test.mk b/h1_h264_test.mk
index 67cb26c..cc37bac 100644
--- a/h1_h264_test.mk
+++ b/h1_h264_test.mk
@@ -34,6 +34,6 @@ LOCAL_SHARED_LIBRARIES  += libhantro_h1
 
 LOCAL_32_BIT_ONLY := true
 LOCAL_MODULE:= h264_testenc
-LOCAL_MODULE_TAGS := eng
+LOCAL_MODULE_TAGS := optional
 LOCAL_VENDOR_MODULE := true
 include $(BUILD_EXECUTABLE)
diff --git a/h1_vp8_test.mk b/h1_vp8_test.mk
index 9ee1609..92df7ed 100644
--- a/h1_vp8_test.mk
+++ b/h1_vp8_test.mk
@@ -33,6 +33,6 @@ LOCAL_SHARED_LIBRARIES  += libhantro_h1
 
 LOCAL_32_BIT_ONLY := true
 LOCAL_MODULE:= vp8_testenc
-LOCAL_MODULE_TAGS := eng
+LOCAL_MODULE_TAGS := optional
 LOCAL_VENDOR_MODULE := true
 include $(BUILD_EXECUTABLE)
diff --git a/hantro.mk b/hantro.mk
deleted file mode 100644
index 5b11917..0000000
--- a/hantro.mk
+++ /dev/null
@@ -1,72 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-
-LOCAL_SRC_FILES := \
-    decoder_sw/software/source/hevc/hevc_asic.c \
-    decoder_sw/software/source/hevc/hevc_byte_stream.c \
-    decoder_sw/software/source/hevc/hevcdecapi.c \
-    decoder_sw/software/source/hevc/hevc_decoder.c \
-    decoder_sw/software/source/hevc/hevc_dpb.c \
-    decoder_sw/software/source/hevc/hevc_fb_mngr.c \
-    decoder_sw/software/source/hevc/hevc_nal_unit.c \
-    decoder_sw/software/source/hevc/hevc_pic_order_cnt.c \
-    decoder_sw/software/source/hevc/hevc_pic_param_set.c \
-    decoder_sw/software/source/hevc/hevc_seq_param_set.c \
-    decoder_sw/software/source/hevc/hevc_slice_header.c \
-    decoder_sw/software/source/hevc/hevc_storage.c \
-    decoder_sw/software/source/hevc/hevc_util.c \
-    decoder_sw/software/source/hevc/hevc_exp_golomb.c \
-    decoder_sw/software/source/hevc/hevc_vui.c \
-    decoder_sw/software/source/hevc/hevc_sei.c \
-    decoder_sw/software/source/hevc/hevc_video_param_set.c \
-
-LOCAL_SRC_FILES += \
-    decoder_sw/software/source/vp9/vp9decapi.c \
-    decoder_sw/software/source/vp9/vp9hwd_asic.c \
-    decoder_sw/software/source/vp9/vp9hwd_bool.c \
-    decoder_sw/software/source/vp9/vp9hwd_buffer_queue.c \
-    decoder_sw/software/source/vp9/vp9hwd_decoder.c \
-    decoder_sw/software/source/vp9/vp9hwd_headers.c \
-    decoder_sw/software/source/vp9/vp9hwd_output.c \
-    decoder_sw/software/source/vp9/vp9hwd_probs.c \
-    decoder_sw/software/source/vp9/vp9_modecontext.c \
-    decoder_sw/software/source/vp9/vp9_entropymode.c \
-    decoder_sw/software/source/vp9/vp9_entropymv.c \
-    decoder_sw/software/source/vp9/vp9_treecoder.c \
-    decoder_sw/software/source/vp9/vp9_modecont.c
-	
-LOCAL_SRC_FILES += \
-    decoder_sw/software/linux/dwl/dwl_linux.c \
-    decoder_sw/software/linux/dwl/dwl_linux_hw.c \
-    decoder_sw/software/linux/dwl/dwl_activity_trace.c \
-    decoder_sw/software/linux/dwl/dwl_buf_protect.c \
-
-LOCAL_SRC_FILES += \
-    decoder_sw/software/source/common/bqueue.c \
-    decoder_sw/software/source/common/commonconfig.c \
-    decoder_sw/software/source/common/fifo.c \
-    decoder_sw/software/source/common/raster_buffer_mgr.c \
-    decoder_sw/software/source/common/regdrv.c \
-    decoder_sw/software/source/common/sw_stream.c \
-    decoder_sw/software/source/common/input_queue.c \
-    decoder_sw/software/source/common/sw_util.c \
-    decoder_sw/software/source/common/stream_corrupt.c
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-
-LOCAL_C_INCLUDES += device/fsl/common/kernel-headers \
-	$(LOCAL_PATH)/decoder_sw
-
-ifeq ($(ENABLE_HANTRO_DEBUG_LOG), true)
-LOCAL_SHARED_LIBRARIES := liblog libcutils
-endif
-
-LOCAL_MODULE:= libhantro
-LOCAL_MODULE_TAGS := eng
-LOCAL_VENDOR_MODULE := true
-include $(BUILD_SHARED_LIBRARY)
diff --git a/hantro_h1.mk b/hantro_h1.mk
deleted file mode 100644
index 68e3037..0000000
--- a/hantro_h1.mk
+++ /dev/null
@@ -1,39 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-    h1_encoder/software/linux_reference/ewl/ewl_linux_lock.c \
-    h1_encoder/software/linux_reference/ewl/ewl_x280_common.c \
-    h1_encoder/software/linux_reference/ewl/ewl_x280_irq.c
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS) -DEWL_NO_HW_TIMEOUT
-
-
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-
-LOCAL_LDFLAGS += -shared -nostartfiles -Wl,-Bsymbolic -Wl,-z -Wl,muldefs
-LOCAL_LDFLAGS += $(IMX_VPU_G1_LDFLAGS)
-
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_ENC_INCLUDES) \
-    device/fsl/common/kernel-headers
-
-LOCAL_C_INCLUDES += $(LOCAL_PATH)/legacy \
-	$(LOCAL_PATH)/h1_encoder/software/source/vp8 \
-    $(LOCAL_PATH)/h1_encoder/software/source/h264 \
-	$(LOCAL_PATH)/h1_encoder/software/linux_reference/ewl
-
-LOCAL_WHOLE_STATIC_LIBRARIES := lib_imx_vsi_vp8_enc lib_imx_vsi_h264_enc
-
-
-ifeq ($(ENABLE_HANTRO_DEBUG_LOG), true)
-LOCAL_SHARED_LIBRARIES := liblog libcutils
-endif
-
-LOCAL_MODULE:= libhantro_h1
-LOCAL_MODULE_TAGS := eng
-LOCAL_VENDOR_MODULE := true
-include $(BUILD_SHARED_LIBRARY)
-
-
diff --git a/imx_vpu_hantro.go b/imx_vpu_hantro.go
new file mode 100755
index 0000000..d915c2d
--- /dev/null
+++ b/imx_vpu_hantro.go
@@ -0,0 +1,90 @@
+// Copyright 2019 NXP
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package imx_vpu_hantro
+
+import (
+        "android/soong/android"
+        "android/soong/cc"
+        "strings"
+        "github.com/google/blueprint/proptools"
+)
+
+func init() {
+    android.RegisterModuleType("IMX_VPU_DEC_DEFAULTS", IMX_VPU_DEC_DefaultsFactory)
+    android.RegisterModuleType("IMX_VPU_ENC_DEFAULTS", IMX_VPU_ENC_DefaultsFactory)
+}
+
+func IMX_VPU_DEC_DefaultsFactory() (android.Module) {
+    module := cc.DefaultsFactory()
+    android.AddLoadHook(module, IMX_VPU_DEC_Defaults)
+    return module
+}
+
+func IMX_VPU_DEC_Defaults(ctx android.LoadHookContext) {
+    var Cflags []string
+    type props struct {
+        Target struct {
+                Android struct {
+                        Enabled *bool
+                        Cflags []string
+                }
+        }
+    }
+    p := &props{}
+    var vpu_type string = ctx.Config().VendorConfig("IMXPLUGIN").String("BOARD_VPU_TYPE")
+    if strings.Contains(vpu_type, "hantro") {
+        p.Target.Android.Enabled = proptools.BoolPtr(true)
+    } else {
+        p.Target.Android.Enabled = proptools.BoolPtr(false)
+    }
+    if ctx.Config().VendorConfig("IMXPLUGIN").String("CFG_SECURE_DATA_PATH") == "y" {
+        Cflags = append(Cflags, "-DCFG_SECURE_DATA_PATH")
+    }
+    p.Target.Android.Cflags = Cflags
+    ctx.AppendProperties(p)
+}
+
+func IMX_VPU_ENC_DefaultsFactory() (android.Module) {
+    module := cc.DefaultsFactory()
+    android.AddLoadHook(module, IMX_VPU_ENC_Defaults)
+    return module
+}
+
+func IMX_VPU_ENC_Defaults(ctx android.LoadHookContext) {
+    var Cflags []string
+    type props struct {
+        Target struct {
+                Android struct {
+                        Enabled *bool
+                        Cflags []string
+                }
+        }
+    }
+    p := &props{}
+    var board string = ctx.Config().VendorConfig("IMXPLUGIN").String("BOARD_SOC_TYPE")
+    if strings.Contains(board, "IMX8MM") {
+        p.Target.Android.Enabled = proptools.BoolPtr(true)
+        Cflags = append(Cflags, "-DENC_MODULE_PATH=\"/dev/mxc_hantro_h1\"")
+        Cflags = append(Cflags, "-DMEMALLOC_MODULE_PATH=\"/dev/ion\"")
+    } else {
+        p.Target.Android.Enabled = proptools.BoolPtr(false)
+    }
+    if ctx.Config().VendorConfig("IMXPLUGIN").String("CFG_SECURE_DATA_PATH") == "y" {
+        Cflags = append(Cflags, "-DCFG_SECURE_DATA_PATH")
+    }
+    p.Target.Android.Cflags = Cflags
+    ctx.AppendProperties(p)
+}
+
diff --git a/openmax_il/source/Android.bp b/openmax_il/source/Android.bp
new file mode 100644
index 0000000..657ea72
--- /dev/null
+++ b/openmax_il/source/Android.bp
@@ -0,0 +1,98 @@
+cc_library_shared {
+    name: "libcodec_enc",
+
+    defaults: [
+        "IMX_VPU_ENC_DEFAULTS",
+        "IMX_VPU_G1_CFLAGS",
+        "IMX_VPU_ENC_INCLUDES",
+    ],
+
+    cflags: [
+        "-DENCH1",
+        "-DOMX_ENCODER_VIDEO_DOMAIN",
+        "-DH1V6",
+    ],
+
+    arch: {
+        arm64: {
+            cflags: ["-DUSE_64BIT_ENV"],
+        },
+    },
+
+    srcs: [
+        "encoder/encoder_h264.c",
+        "encoder/encoder_vp8.c",
+        "OSAL.c",
+    ],
+
+    local_include_dirs: [
+        "encoder",
+    ],
+
+    shared_libs: [
+        "liblog",
+        "libcutils",
+        "libhantro_h1",
+    ],
+
+    vendor: true,
+}
+
+cc_library_shared {
+    name: "libcodec",
+
+    srcs: [
+        "decoder/codec_hevc.c",
+        "decoder/codec_vp9.c",
+        "decoder/codec_h264.c",
+        "decoder/codec_avs.c",
+        "decoder/codec_jpeg.c",
+        "decoder/codec_mpeg2.c",
+        "decoder/codec_mpeg4.c",
+        "decoder/codec_rv.c",
+        "decoder/codec_vc1.c",
+        "decoder/codec_vp8.c",
+        "decoder/codec_webp.c",
+        "decoder/codec_vp6.c",
+        "OSAL.c",
+        "decoder/test/queue.c",
+    ],
+
+    defaults: [
+        "IMX_VPU_DEC_DEFAULTS",
+        "IMX_VPU_INCLUDES",
+    ],
+
+    cflags: [
+        "-DSET_OUTPUT_CROP_RECT",
+        "-DUSE_EXTERNAL_BUFFER",
+        "-DUSE_OUTPUT_RELEASE",
+        "-DVSI_API",
+        "-DIS_G1_DECODER",
+        "-DENABLE_CODEC_VP8",
+        "-DVP8_HWTIMEOUT_WORKAROUND",
+        "-DENABLE_CODEC_MJPEG",
+        "-DGET_FREE_BUFFER_NON_BLOCK",
+        "-DDOWN_SCALER",
+    ],
+
+    arch: {
+        arm64: {
+            cflags: ["-DUSE_64BIT_ENV"],
+        },
+    },
+
+    local_include_dirs: [
+        "decoder",
+        "decoder/test",
+    ],
+
+    shared_libs: [
+        "libhantro",
+        "liblog",
+        "libutils",
+        "libg1",
+    ],
+
+    vendor: true,
+}
diff --git a/openmax_il/source/decoder/Android.mk b/openmax_il/source/decoder/Android.mk
deleted file mode 100755
index 4f834c8..0000000
--- a/openmax_il/source/decoder/Android.mk
+++ /dev/null
@@ -1,103 +0,0 @@
-#jlk set arm7-a in /build/core/combo/linux-arm.mk
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-LOCAL_MODULE_TAGS := optional
-HANTRO_LIBS := ../../../libs
-HANTRO_TOP := $(VSI_TOP)
-
-ifeq ($(USE_LIBS),true)
-LOCAL_PREBUILT_LIBS := \
-    $(HANTRO_LIBS)/libdwlx170.a \
-    $(HANTRO_LIBS)/libdecx170m.a \
-    $(HANTRO_LIBS)/libdecx170h.a \
-    $(HANTRO_LIBS)/libdecx170vp8.a \
-    $(HANTRO_LIBS)/libdecx170p.a \
-    $(HANTRO_LIBS)/lib8170hw.a \
-    $(HANTRO_LIBS)/libtbcommon.a
-
-include $(BUILD_MULTI_PREBUILT)
-else
-include $(LOCAL_PATH)/declibs.mk
-include $(LOCAL_PATH)/model.mk
-endif
-
-include $(CLEAR_VARS)
-LOCAL_ARM_MODE := arm
-LOCAL_PRELINK_MODULE := false
-LOCAL_MODULE_TAGS := optional
-LOCAL_MODULE := libOMX.hantro.G1.video.decoder
-
-#BELLAGIO_ROOT := external/hantro/libomxil-bellagio-0.9.2
-DECODER_RELEASE := $(VSI_TOP)/g1_decoder/software
-
-LOCAL_SRC_FILES := \
-    ../msgque.c \
-    ../OSAL.c \
-    ../basecomp.c \
-    ../port.c \
-    ../util.c \
-    codec_h264.c \
-    codec_mpeg4.c \
-    codec_vp8.c \
-    codec_pp.c \
-    post_processor.c \
-    decoder.c
-
-#    ../nativebuffer.cpp
-#    library_entry_point.c
-
-LOCAL_STATIC_LIBRARIES := \
-    libdecx170m \
-    libdecx170h \
-    libdecx170vp8 \
-    libdwlx170 \
-    libdecx170p \
-lib8170hw \
-libtbcommon
-
-LOCAL_SHARED_LIBRARIES += liblog
-LOCAL_SHARED_LIBRARIES += libcutils
-
-LOCAL_CFLAGS := \
-    -DENABLE_CODEC_H264 \
-    -DENABLE_CODEC_H263 \
-    -DENABLE_CODEC_MPEG4 \
-    -DENABLE_CODEC_VP8 \
-    -DIS_G1_DECODER \
-    -DENABLE_DBGT_TRACE \
-    -DDBGT_CONFIG_AUTOVAR \
-    -DOMX_DECODER_VIDEO_DOMAIN \
-    -DINCLUDE_TB \
-    -DSET_OUTPUT_CROP_RECT
-
-#    -DDISABLE_OUTPUT_SCALING
-#    -DUSE_ANDROID_NATIVE_BUFFER
-#    -DENABLE_PP
-
-LOCAL_LDLIBS += -lpthread
-
-LOCAL_C_INCLUDES := \
-    . \
-    $(HANTRO_TOP)/openmax_il/source \
-    $(HANTRO_TOP)/openmax_il/headers \
-    $(DECODER_RELEASE)/source/inc \
-	$(DECODER_RELEASE)/source/h264high \
-    $(DECODER_RELEASE)/source/h264high/legacy \
-	$(DECODER_RELEASE)/source/mpeg4 \
-	$(DECODER_RELEASE)/source/vp8 \
-    $(DECODER_RELEASE)/source/common \
-    $(DECODER_RELEASE)/source/config \
-    $(DECODER_RELEASE)/source/pp \
-    $(DECODER_RELEASE)/test/common \
-    $(DECODER_RELEASE)/test/common/swhw \
-    $(DECODER_RELEASE)/linux/memalloc \
-    $(DECODER_RELEASE)/linux/mpeg4 \
-    $(DECODER_RELEASE)/linux/vp8 \
-    $(DECODER_RELEASE)/linux/dwl
-
-#    $(BELLAGIO_ROOT)/src \
-
-LOCAL_MODULE_PATH := $(TARGET_OUT_SHARED_LIBRARIES)
-
-include $(BUILD_SHARED_LIBRARY)
-
diff --git a/openmax_il/source/decoder/Android_codec.mk b/openmax_il/source/decoder/Android_codec.mk
deleted file mode 100755
index fd08681..0000000
--- a/openmax_il/source/decoder/Android_codec.mk
+++ /dev/null
@@ -1,39 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := \
-    codec_hevc.c \
-    codec_vp9.c \
-    codec_h264.c \
-    codec_avs.c \
-    codec_jpeg.c \
-    codec_mpeg2.c \
-    codec_mpeg4.c \
-    codec_rv.c \
-    codec_vc1.c \
-    codec_vp8.c \
-    codec_webp.c \
-	codec_vp6.c \
-    ../OSAL.c \
-	test/queue.c
-
-        
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_CFLAGS += -DSET_OUTPUT_CROP_RECT -DUSE_EXTERNAL_BUFFER -DUSE_OUTPUT_RELEASE -DVSI_API -DIS_G1_DECODER -DENABLE_CODEC_VP8 -DVP8_HWTIMEOUT_WORKAROUND -DENABLE_CODEC_MJPEG -DGET_FREE_BUFFER_NON_BLOCK -DDOWN_SCALER
-
-
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_INCLUDES)
-LOCAL_C_INCLUDES += ../
-
-LOCAL_SHARED_LIBRARIES  += libhantro
-LOCAL_SHARED_LIBRARIES  += liblog
-LOCAL_SHARED_LIBRARIES  += libutils
-LOCAL_SHARED_LIBRARIES  += libhantro libg1
-LOCAL_MODULE:= libcodec
-LOCAL_MODULE_TAGS := eng
-LOCAL_VENDOR_MODULE := true
-include $(BUILD_SHARED_LIBRARY)
-
diff --git a/openmax_il/source/encoder/Android.mk b/openmax_il/source/encoder/Android.mk
deleted file mode 100755
index 3b86674..0000000
--- a/openmax_il/source/encoder/Android.mk
+++ /dev/null
@@ -1,66 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-LOCAL_MODULE_TAGS := optional
-HANTRO_LIBS := ../../../libs
-
-ifeq ($(USE_LIBS),true)
-LOCAL_PREBUILT_LIBS := \
-    $(HANTRO_LIBS)/libh1enc.a \
-    $(HANTRO_LIBS)/libench1_asic_model.a
-
-include $(BUILD_MULTI_PREBUILT)
-else
-include $(LOCAL_PATH)/enclib.mk
-include $(LOCAL_PATH)/encmodel.mk
-endif
-
-include $(CLEAR_VARS)
-LOCAL_ARM_MODE := arm
-LOCAL_PRELINK_MODULE := false
-LOCAL_MODULE_TAGS := optional
-LOCAL_MODULE := libOMX.hantro.H1.video.encoder
-
-HANTRO_TOP := $(VSI_TOP)
-#BELLAGIO_ROOT := external/libomxil-bellagio
-ENCODER_RELEASE := $(VSI_TOP)/h1_encoder/software
-
-LOCAL_SRC_FILES := \
-    ../msgque.c \
-    ../OSAL.c \
-    ../basecomp.c \
-    ../port.c \
-    ../util.c \
-    encoder.c \
-    encoder_constructor_video.c \
-    encoder_h264.c \
-    encoder_vp8.c
-
-#    library_entry_point.c
-
-LOCAL_STATIC_LIBRARIES := \
-    libh1enc \
-    libench1_asic_model
-
-LOCAL_SHARED_LIBRARIES += liblog
-LOCAL_SHARED_LIBRARIES += libcutils
-
-LOCAL_LDLIBS += -lpthread
-
-LOCAL_CFLAGS := \
-    -DENCH1 \
-    -DOMX_ENCODER_VIDEO_DOMAIN \
-    -DENABLE_DBGT_TRACE \
-    -DDBGT_CONFIG_AUTOVAR
-
-LOCAL_C_INCLUDES := \
-    . \
-    $(HANTRO_TOP)/openmax_il/source \
-    $(HANTRO_TOP)/openmax_il/headers \
-    $(ENCODER_RELEASE)/inc \
-    $(ENCODER_RELEASE)/linux_reference/memalloc
-
-#    $(BELLAGIO_ROOT)/src \
-
-LOCAL_MODULE_PATH := $(TARGET_OUT_SHARED_LIBRARIES)
-
-include $(BUILD_SHARED_LIBRARY)
diff --git a/openmax_il/source/encoder/Android_codec_enc.mk b/openmax_il/source/encoder/Android_codec_enc.mk
deleted file mode 100755
index 11d0eb2..0000000
--- a/openmax_il/source/encoder/Android_codec_enc.mk
+++ /dev/null
@@ -1,24 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_CFLAGS += $(IMX_VPU_CFLAGS)
-LOCAL_CFLAGS += -DENCH1 -DOMX_ENCODER_VIDEO_DOMAIN -DH1V6
-
-
-LOCAL_LDFLAGS += $(IMX_VPU_LDFLAGS)
-LOCAL_CFLAGS_arm64 += -DUSE_64BIT_ENV
-
-LOCAL_C_INCLUDES += $(IMX_VPU_ENC_INCLUDES)
-
-LOCAL_SRC_FILES := \
-    encoder_h264.c \
-    encoder_vp8.c \
-    ../OSAL.c
-
-LOCAL_SHARED_LIBRARIES := liblog libcutils
-LOCAL_SHARED_LIBRARIES += libhantro_h1
-
-LOCAL_MODULE:= libcodec_enc
-LOCAL_MODULE_TAGS := eng
-LOCAL_VENDOR_MODULE := true
-include $(BUILD_SHARED_LIBRARY)
