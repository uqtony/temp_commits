97e8a2573099 AndrewS 2022-03-09

AOS-888: fix BootAnimation build break

Change-Id: I3606efb763f982da2bbf97392af0f31a034c486a

diff --git a/cmds/bootanimation/BootAnimation.cpp b/cmds/bootanimation/BootAnimation.cpp
index 43889f8bbae2..ba64797c2911 100644
--- a/cmds/bootanimation/BootAnimation.cpp
+++ b/cmds/bootanimation/BootAnimation.cpp
@@ -198,10 +198,10 @@ static GLfloat quadUVs[] = {
 
 // ---------------------------------------------------------------------------
 
-BootAnimation::BootAnimation(sp<Callbacks> callbacks, uint64_t displayId, uint64_t HwcDisplayId)
-        : Thread(false), mLooper(new Looper(false)), mClockEnabled(true), mTimeIsAccurate(false),
-        mTimeFormat12Hour(false), mTimeCheckThread(nullptr), mCallbacks(callbacks),
-        mDisplayId(displayId), mHwcDisplayId(HwcDisplayId) {
+BootAnimation::BootAnimation(sp<Callbacks> callbacks, PhysicalDisplayId displayId, uint64_t HwcDisplayId)
+        : Thread(false), mLooper(new Looper(false)), mDisplayId(displayId),
+        mHwcDisplayId(HwcDisplayId), mClockEnabled(true), mTimeIsAccurate(false),
+        mTimeFormat12Hour(false), mTimeCheckThread(nullptr), mCallbacks(callbacks) {
     mSession = new SurfaceComposerClient();
 
     std::string powerCtl = android::base::GetProperty("sys.powerctl", "");
@@ -495,25 +495,25 @@ ui::Size BootAnimation::limitSurfaceSize(int width, int height) const {
 status_t BootAnimation::readyToRun() {
     mAssets.addDefaultAssets();
 
-    if (mDisplayId)
+    if (mDisplayId.value != 0)
         mDisplayToken = SurfaceComposerClient::getPhysicalDisplayToken(mDisplayId);
 
-    if (!mDisplayId || (mDisplayToken == nullptr))
+    if (mDisplayId.value == 0 || (mDisplayToken == nullptr))
         mDisplayToken = SurfaceComposerClient::getInternalDisplayToken();
 
     if (mDisplayToken == nullptr)
         return NAME_NOT_FOUND;
 
     bool isDefaultDisplay = mDisplayToken == SurfaceComposerClient::getInternalDisplayToken();
-    DisplayConfig displayConfig;
+    DisplayMode displayMode;
     const status_t error =
-            SurfaceComposerClient::getActiveDisplayConfig(mDisplayToken, &displayConfig);
+            SurfaceComposerClient::getActiveDisplayMode(mDisplayToken, &displayMode);
     if (error != NO_ERROR)
         return error;
 
     mMaxWidth = android::base::GetIntProperty("ro.surface_flinger.max_graphics_width", 0);
     mMaxHeight = android::base::GetIntProperty("ro.surface_flinger.max_graphics_height", 0);
-    ui::Size resolution = displayConfig.resolution;
+    ui::Size resolution = displayMode.resolution;
 
     // check property to see if we need to change orientation
     char key[PROPERTY_KEY_MAX] = {0};
@@ -584,8 +584,8 @@ status_t BootAnimation::readyToRun() {
                 sp<IBinder> token = SurfaceComposerClient::getPhysicalDisplayToken(id);
                 if (token != nullptr) {
                     if (mDisplayToken == token) {
-                        Vector<uint64_t>::iterator it = std::find(physicalDisplayIds.begin(),
-                                        physicalDisplayIds.end(), id);
+                        Vector<PhysicalDisplayId>::iterator it =
+                             std::find(physicalDisplayIds.begin(), physicalDisplayIds.end(), id);
                         layerStackIndex = std::distance(physicalDisplayIds.begin(), it);
                         t.setDisplayLayerStack(token, LAYER_STACK + layerStackIndex);
                         break;
diff --git a/cmds/bootanimation/BootAnimation.h b/cmds/bootanimation/BootAnimation.h
index 29c9f137d120..18d52989f475 100644
--- a/cmds/bootanimation/BootAnimation.h
+++ b/cmds/bootanimation/BootAnimation.h
@@ -137,7 +137,7 @@ public:
         virtual void shutdown() {}
     };
 
-    explicit BootAnimation(sp<Callbacks> callbacks, uint64_t displayId, uint64_t HwcDisplayId);
+    explicit BootAnimation(sp<Callbacks> callbacks, PhysicalDisplayId displayId, uint64_t HwcDisplayId);
     virtual ~BootAnimation();
 
     sp<SurfaceComposerClient> session() const;
@@ -218,7 +218,7 @@ private:
     int         mCurrentInset;
     int         mTargetInset;
     bool        mUseNpotTextures = false;
-    uint64_t    mDisplayId;
+    PhysicalDisplayId    mDisplayId;
     uint64_t    mHwcDisplayId;
     EGLDisplay  mDisplay;
     EGLDisplay  mContext;
diff --git a/cmds/bootanimation/bootanimation_main.cpp b/cmds/bootanimation/bootanimation_main.cpp
index c22cd3c69e30..0642f9fad83b 100644
--- a/cmds/bootanimation/bootanimation_main.cpp
+++ b/cmds/bootanimation/bootanimation_main.cpp
@@ -50,7 +50,7 @@ int main()
 
         // this guest property specifies multi-display IDs to show the boot animation
         // currently we set this property in SurfaceFlinger to sync sequence with HAL
-        Vector<uint64_t> physicalDisplayIds;
+        Vector<PhysicalDisplayId> physicalDisplayIds;
         Vector<sp<BootAnimation>> bootObj;
         char displayValue[PROPERTY_VALUE_MAX] = "";
         char displayIndex = 0;
@@ -70,7 +70,7 @@ int main()
         }
         if (isValid) {
             std::istringstream stream(displayValue);
-            for (PhysicalDisplayId id; stream >> id; ) {
+            for (PhysicalDisplayId id; stream >> id.value; ) {
                 physicalDisplayIds.add(id);
                 if (stream.peek() == ',')
                     stream.ignore();
@@ -85,7 +85,8 @@ int main()
             }
         } else {
             // create the boot animation object (may take up to 200ms for 2MB zip)
-            sp<BootAnimation> boot = new BootAnimation(audioplay::createAnimationCallbacks(), 0, 0);
+            sp<BootAnimation> boot = new BootAnimation(audioplay::createAnimationCallbacks(),
+                                                        PhysicalDisplayId(0), 0);
             bootObj.push_back(boot);
         }
 
