e409c8d0edac George.Huang 2020-08-20

AOS-271: net: phy: micrel: cleanup redundent code from Qisda

Change-Id: Ic056a342b18b677384543b72a91eef03b556f413

diff --git a/drivers/net/phy/micrel.c b/drivers/net/phy/micrel.c
index bd0510dc3696..3fe552675dd2 100644
--- a/drivers/net/phy/micrel.c
+++ b/drivers/net/phy/micrel.c
@@ -483,7 +483,7 @@ static int ksz9021_config_init(struct phy_device *phydev)
 }
 
 #define KSZ9031_PS_TO_REG		60
-#define KSZ9131_PS_TO_REG		100
+
 /* Extended registers */
 /* MMD Address 0x0 */
 #define MII_KSZ9031RN_FLP_BURST_TX_LO	3
@@ -553,10 +553,6 @@ static int ksz9031_of_load_skew_values(struct phy_device *phydev,
 	u16 newval;
 	int i;
 
-	int pstoreg = KSZ9031_PS_TO_REG;
-	if (phydev->drv->phy_id == PHY_ID_KSZ9131)
-		pstoreg = KSZ9131_PS_TO_REG;
-
 	for (i = 0; i < numfields; i++)
 		if (!of_property_read_u32(of_node, field[i], val + i))
 			matches++;
@@ -577,7 +573,7 @@ static int ksz9031_of_load_skew_values(struct phy_device *phydev,
 			mask = 0xffff;
 			mask ^= maxval << (field_sz * i);
 			newval = (newval & mask) |
-				(((val[i] / pstoreg) & maxval)
+				(((val[i] / KSZ9031_PS_TO_REG) & maxval)
 					<< (field_sz * i));
 		}
 
@@ -927,20 +923,9 @@ static int ksz9131_config_init(struct phy_device *phydev)
 	if (ret < 0)
 		return ret;
 
-	ret=phy_write_mmd(phydev, 0x2, 0x0004,0);
-	if (ret < 0)
-		return ret;
-	ret=phy_write_mmd(phydev, 0x2, 0x0005,0);
-	if (ret < 0)
-		return ret;
-	ret=phy_write_mmd(phydev, 0x2, 0x0008,0x03ff);
-	if (ret < 0)
-		return ret;
-
 	return 0;
 }
 
-
 #define KSZ8873MLL_GLOBAL_CONTROL_4	0x06
 #define KSZ8873MLL_GLOBAL_CONTROL_4_DUPLEX	BIT(6)
 #define KSZ8873MLL_GLOBAL_CONTROL_4_SPEED	BIT(4)
