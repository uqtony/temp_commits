C51 COMPILER V9.53.0.0   MODTTLRX                                                          06/30/2023 14:32:05 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MODTTLRX
OBJECT MODULE PLACED IN ..\..\..\..\..\out\ModTtlRx.obj
COMPILER INVOKED BY: C:\Keil_v5\c51\C51\BIN\C51.EXE ..\User\Module\ModTtlRx.c LARGE OPTIMIZE(8,SIZE) OPTIMIZE(8,SIZE) RE
                    -GFILE(..\..\..\..\..\out\LT9211C_MIPI DSI to LVDS test.ORC) BROWSE INCDIR(..\User\Driver;..\User\App;..\User\Ocm;..\User
                    -\Module) DEBUG OBJECTEXTEND PRINT(.\Listings\ModTtlRx.lst) OBJECT(..\..\..\..\..\out\ModTtlRx.obj)

line level    source

   1          /******************************************************************************
   2            * @project: LT9211C
   3            * @file: ModTtlRx.c
   4            * @author: xding
   5            * @company: LONTIUM COPYRIGHT and CONFIDENTIAL
   6            * @date: 2023.01.29
   7          /******************************************************************************/
   8          #include    "include.h"
   9          #if ((LT9211C_MODE_SEL == TTL_IN_LVDS_OUT)||(LT9211C_MODE_SEL == TTL_IN_MIPI_OUT)||(LT9211C_MODE_SEL == TT
             -L_IN_TTL_OUT))
              
              void Mod_TtlRx_DigSet(void)
              {
                  Drv_TtlRxDdrMode_Set();
                  Drv_TtlRxHalfBit_Set();
                  Drv_TtlRxDig_Set();
                  Drv_TtlRxMapping_Set();
                  Drv_TtlRxCsc_Set();
              }
              
              void Mod_TtlRx_StateHandler(void)
              {
                  switch (g_stChipRx.ucRxState)
                  {
                      case STATE_CHIPRX_POWER_ON:
                          Mod_SystemRx_SetState(STATE_CHIPRX_WAITE_SOURCE);
                      break;
              
                      case STATE_CHIPRX_WAITE_SOURCE:
                          Drv_TtlRx_PhyPowerOn();
                          Drv_TtlRxClk_Sel();
                          Drv_SystemActRx_Sel(TTLRX);
                          Mod_SystemRx_SetState(STATE_CHIPRX_VIDTIMING_CONFIG);
                      break;
              
                      case STATE_CHIPRX_VIDTIMING_CONFIG:
                          Mod_TtlRx_DigSet();
                          Mod_SystemRx_SetState(STATE_CHIPRX_PLL_CONFIG);
                      break;
              
                      case STATE_CHIPRX_PLL_CONFIG:
                          if(Drv_TtlRx_Pll_Set() == FAIL)
                          {
                              Mod_SystemRx_SetState(STATE_CHIPRX_WAITE_SOURCE);
                          }
                          else
                          {
                              #if TTLRX_SYNC_INTER_MODE == ENABLED
                                  Drv_System_VidChkClk_SrcSel(RXPLL_PIX_CLK);
                                  Drv_System_VidChk_SrcSel(TTLDEBUG);
                                  Drv_TtlRx_SelfTimingSet();
                              #endif
                              #if TTLRX_DE_SYNC_MODE != TTL_NORMAL_MODE
C51 COMPILER V9.53.0.0   MODTTLRX                                                          06/30/2023 14:32:05 PAGE 2   

                                  Drv_TtlRx_DeSyncModeSet();
                              #endif
                              Mod_SystemRx_SetState(STATE_CHIPRX_VIDEO_CHECK);
                          }
                      break;
              
                      case STATE_CHIPRX_VIDEO_CHECK:
                          Drv_System_VidChkClk_SrcSel(DESSCPLL_PIX_CLK);
                          Drv_System_VidChk_SrcSel(TTLRX);
                          Drv_TtlRx_VidChkDebug();
                          g_stChipRx.pHdmiRxNotify(MIPIRX_VIDEO_ON_EVENT);
                          Mod_SystemRx_SetState(STATE_CHIPRX_PLAY_BACK);
                      break;
                      
                      case STATE_CHIPRX_PLAY_BACK:
                      break;
                      
                  }
              }
              
              void Mod_TtlRx_Handler(void)
              {
                  Mod_TtlRx_StateHandler();   
              }
              
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
