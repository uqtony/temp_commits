C51 COMPILER V9.53.0.0   MODSYSTEM                                                         06/30/2023 14:32:04 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MODSYSTEM
OBJECT MODULE PLACED IN ..\..\..\..\..\out\ModSystem.obj
COMPILER INVOKED BY: C:\Keil_v5\c51\C51\BIN\C51.EXE ..\User\Module\ModSystem.c LARGE OPTIMIZE(8,SIZE) OPTIMIZE(8,SIZE) R
                    -EGFILE(..\..\..\..\..\out\LT9211C_MIPI DSI to LVDS test.ORC) BROWSE INCDIR(..\User\Driver;..\User\App;..\User\Ocm;..\Use
                    -r\Module) DEBUG OBJECTEXTEND PRINT(.\Listings\ModSystem.lst) OBJECT(..\..\..\..\..\out\ModSystem.obj)

line level    source

   1          /******************************************************************************
   2            * @project: LT9211C
   3            * @file: ModSystem.c
   4            * @author: sxue
   5            * @company: LONTIUM COPYRIGHT and CONFIDENTIAL
   6            * @date: 2023.01.29
   7          /******************************************************************************/
   8          
   9          #include    "include.h"
  10          
  11          void Mod_System_Init(void)
  12          {
  13   1          P10_PushPull_Mode; //LT2911R_RST_N
  14   1          P11_PushPull_Mode; //LT2911R_RST_N  
  15   1          P13_OpenDrain_Mode;//SCL_CTL
  16   1          P14_OpenDrain_Mode;//SDA_CTL
  17   1          P12_Input_Mode;    //IRQ
  18   1          Ocm_UART0_Timer1Init(115200);//UART_INTI
  19   1      }
  20          
  21          
  22          void Mod_LT9211C_Reset(void)
  23          {
  24   1         P11 = 0;
  25   1         Ocm_Timer0_Delay1ms(100);
  26   1         P11 = 1;
  27   1         Ocm_Timer0_Delay1ms(100);
  28   1      }
  29          void Mod_ChipID_Read(void)
  30          {
  31   1          HDMI_WriteI2C_Byte(0xff,0x81);//register bank
  32   1          LTLog(LOG_INFO,"LT9211C Chip ID: 0x%02bx 0x%02bx 0x%02bx", HDMI_ReadI2C_Byte(0x00),HDMI_ReadI2C_Byte(0
             -x01),HDMI_ReadI2C_Byte(0x02));
  33   1          
  34   1          #if LT9211C_VERSION == U1
                      LTLog(LOG_INFO,"LT9211C Code Version: U1");
                  #elif   LT9211C_VERSION == U2
  37   1              LTLog(LOG_INFO,"LT9211C Code Version: U2");
  38   1          #endif
  39   1      }
  40          
  41          
  42          #if (LT9211C_MODE_SEL != PATTERN_OUT)
  43          
  44          StructChipRx g_stChipRx;
  45          StructChipTx g_stChipTx;
  46          StructVidChkTiming g_stVidChk;
  47          StructChipRxVidTiming g_stRxVidTiming;
  48          u8 g_b1CscTodo = FALSE;
  49          
  50          
  51          void Mod_SystemTx_SetState(u8 ucState)
  52          {
C51 COMPILER V9.53.0.0   MODSYSTEM                                                         06/30/2023 14:32:04 PAGE 2   

  53   1          if(ucState != g_stChipTx.ucTxState)
  54   1          {        
  55   2              g_stChipTx.ucTxState = ucState;
  56   2              g_stChipTx.b1TxStateChanged = TRUE;
  57   2              LTLog(LOG_DEBUG, "TxState = 0x%02bx", ucState);
  58   2          }
  59   1      }
  60          
  61          void Mod_SystemRx_SetState(u8 ucState)
  62          {
  63   1          u8 ucLastState;
  64   1          if(ucState != g_stChipRx.ucRxState)
  65   1          {   
  66   2              ucLastState = g_stChipRx.ucRxState;
  67   2              g_stChipRx.ucRxState = ucState;
  68   2              g_stChipRx.b1RxStateChanged = TRUE;
  69   2              LTLog(LOG_DEBUG, "RxState = 0x%02bx", ucState);
  70   2      
  71   2              // other state-->STATE_HDMIRX_PLAY_BACK,need notify video on
  72   2              if(g_stChipRx.ucRxState == STATE_CHIPRX_PLAY_BACK)
  73   2              {
  74   3                  g_stChipRx.pHdmiRxNotify(MIPIRX_VIDEO_ON_EVENT);
  75   3              }
  76   2      
  77   2              //STATE_HDMIRX_PLAY_BACK-->other state,need notify video off
  78   2              if(ucLastState == STATE_CHIPRX_PLAY_BACK)
  79   2              {
  80   3                  g_stChipRx.pHdmiRxNotify(MIPIRX_VIDEO_OFF_EVENT);
  81   3              }
  82   2          }
  83   1      }
  84          
  85          void Mod_SystemRx_NotifyRegister(void (*pFunction)())
  86          {
  87   1          g_stChipRx.pHdmiRxNotify  = pFunction;
  88   1      }
  89          
  90          void Mod_SystemTx_PowerOnInit(void)
  91          {
  92   1          memset(&g_stChipTx, 0, sizeof(StructChipTx));
  93   1          g_stChipTx.ucTxState = STATE_CHIPTX_POWER_ON;
  94   1      }
  95          
  96          void Mod_SystemRx_PowerOnInit(void)
  97          {
  98   1          memset(&g_stChipRx,0 ,sizeof(StructChipRx));
  99   1          memset(&g_stVidChk,0 ,sizeof(StructVidChkTiming));
 100   1          memset(&g_stRxVidTiming,0 ,sizeof(StructChipRxVidTiming));
 101   1          
 102   1          g_stChipRx.ucRxState = STATE_CHIPRX_POWER_ON;    
 103   1      
 104   1          Mod_SystemRx_NotifyRegister(Mod_System_RxNotifyHandle);
 105   1      }
 106          
 107          void Mod_System_RxNotifyHandle(EnumChipRxEvent ucEvent)
 108          {
 109   1          switch (ucEvent)
 110   1          {
 111   2              case MIPIRX_VIDEO_ON_EVENT:
 112   2                  g_stChipTx.b1UpstreamVideoReady = TRUE;
 113   2                  break;
 114   2              case MIPIRX_VIDEO_OFF_EVENT:
C51 COMPILER V9.53.0.0   MODSYSTEM                                                         06/30/2023 14:32:04 PAGE 3   

 115   2                  g_stChipTx.b1UpstreamVideoReady = FALSE;
 116   2                  break;
 117   2              case MIPIRX_CSC_EVENT:
 118   2                  g_b1CscTodo = TRUE;
 119   2              default:
 120   2                  break;
 121   2          }
 122   1      }
 123          
 124          
 125          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    365    ----
   CONSTANT SIZE    =    102    ----
   XDATA SIZE       =     64       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
